<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Collections</name>
  </assembly>
  <members>
    <member name="T:System.Collections.BitArray">
      <summary vsli:raw="Manages a compact array of bit values, which are represented as Booleans, where &lt;see langword=&quot;true&quot; /&gt; indicates that the bit is on (1) and &lt;see langword=&quot;false&quot; /&gt; indicates the bit is off (0).">Consente di gestire una matrice compatta di valori di bit, rappresentati come Boolean, dove <see langword="true" /> indica che il bit è attivo (1), mentre <see langword="false" /> indica che il bit è inattivo (0).</summary>
    </member>
    <member name="M:System.Collections.BitArray.#ctor(System.Boolean[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.BitArray&quot; /&gt; class that contains bit values copied from the specified array of Booleans.">Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.Collections.BitArray" /> contenente i valori di bit copiati dalla matrice specificata di valori Boolean.</summary>
      <param name="values" vsli:raw="An array of Booleans to copy.">Matrice di valori Boolean da copiare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;values&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="values" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.BitArray.#ctor(System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.BitArray&quot; /&gt; class that contains bit values copied from the specified array of bytes.">Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.Collections.BitArray" /> contenente i valori di bit copiati dalla matrice di byte specificata.</summary>
      <param name="bytes" vsli:raw="An array of bytes containing the values to copy, where each byte represents eight consecutive bits.">Matrice di byte contenente i valori da copiare, dove ogni byte rappresenta 8 bit consecutivi.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The length of &lt;paramref name=&quot;bytes&quot; /&gt; is greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">La lunghezza di <paramref name="bytes" /> è maggiore di <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Collections.BitArray.#ctor(System.Collections.BitArray)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.BitArray&quot; /&gt; class that contains bit values copied from the specified &lt;see cref=&quot;T:System.Collections.BitArray&quot; /&gt;.">Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.Collections.BitArray" /> contenente i valori di bit copiati dalla <see cref="T:System.Collections.BitArray" /> specificata.</summary>
      <param name="bits" vsli:raw="The &lt;see cref=&quot;T:System.Collections.BitArray&quot; /&gt; to copy.">Oggetto <see cref="T:System.Collections.BitArray" /> da copiare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bits&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bits" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.BitArray.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.BitArray&quot; /&gt; class that can hold the specified number of bit values, which are initially set to &lt;see langword=&quot;false&quot; /&gt;.">Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.Collections.BitArray" /> che può contenere il numero specificato di valori di bit, inizialmente impostato su <see langword="false" />.</summary>
      <param name="length" vsli:raw="The number of bit values in the new &lt;see cref=&quot;T:System.Collections.BitArray&quot; /&gt;.">Il numero di valori di bit nella nuova <see cref="T:System.Collections.BitArray" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;length&quot; /&gt; is less than zero.">
        <paramref name="length" /> è minore di zero.</exception>
    </member>
    <member name="M:System.Collections.BitArray.#ctor(System.Int32,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.BitArray&quot; /&gt; class that can hold the specified number of bit values, which are initially set to the specified value.">Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.Collections.BitArray" /> che può contenere il numero specificato di valori di bit , inizialmente impostato sul valore specificato.</summary>
      <param name="length" vsli:raw="The number of bit values in the new &lt;see cref=&quot;T:System.Collections.BitArray&quot; /&gt;.">Il numero di valori di bit nella nuova <see cref="T:System.Collections.BitArray" />.</param>
      <param name="defaultValue" vsli:raw="The Boolean value to assign to each bit.">Il valore Boolean da assegnare a ogni bit.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;length&quot; /&gt; is less than zero.">
        <paramref name="length" /> è minore di zero.</exception>
    </member>
    <member name="M:System.Collections.BitArray.#ctor(System.Int32[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.BitArray&quot; /&gt; class that contains bit values copied from the specified array of 32-bit integers.">Inizializza una nuova istanza della classe <see cref="T:System.Collections.BitArray" /> contenente i valori di bit copiati dalla matrice specificata di valori interi a 32 bit.</summary>
      <param name="values" vsli:raw="An array of integers containing the values to copy, where each integer represents 32 consecutive bits.">Matrice di valori interi contenente i valori da copiare, dove ogni valore rappresenta 32 bit consecutivi.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;values&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="values" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The length of &lt;paramref name=&quot;values&quot; /&gt; is greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;">La lunghezza di <paramref name="values" /> è maggiore di <see cref="F:System.Int32.MaxValue" /></exception>
    </member>
    <member name="M:System.Collections.BitArray.And(System.Collections.BitArray)">
      <summary vsli:raw="Performs the bitwise AND operation between the elements of the current &lt;see cref=&quot;T:System.Collections.BitArray&quot; /&gt; object and the corresponding elements in the specified array. The current &lt;see cref=&quot;T:System.Collections.BitArray&quot; /&gt; object will be modified to store the result of the bitwise AND operation.">Esegue l'operazione con AND bit per bit tra gli elementi dell'oggetto <see cref="T:System.Collections.BitArray" /> corrente e gli elementi corrispondenti nella matrice specificata. L'oggetto <see cref="T:System.Collections.BitArray" /> corrente verrà modificato per archiviare il risultato dell'operazione con AND bit per bit.</summary>
      <param name="value" vsli:raw="The array with which to perform the bitwise AND operation.">Matrice con cui eseguire l'operazione AND bit per bit.</param>
      <returns vsli:raw="An array containing the result of the bitwise AND operation, which is a reference to the current &lt;see cref=&quot;T:System.Collections.BitArray&quot; /&gt; object.">Matrice contenente il risultato dell'operazione con AND bit per bit, che è un riferimento all'oggetto <see cref="T:System.Collections.BitArray" /> corrente.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; and the current &lt;see cref=&quot;T:System.Collections.BitArray&quot; /&gt; do not have the same number of elements.">
        <paramref name="value" /> e la <see cref="T:System.Collections.BitArray" /> corrente non contengono lo stesso numero di elementi.</exception>
    </member>
    <member name="M:System.Collections.BitArray.Clone">
      <summary vsli:raw="Creates a shallow copy of the &lt;see cref=&quot;T:System.Collections.BitArray&quot; /&gt;.">Crea una copia superficiale di <see cref="T:System.Collections.BitArray" />.</summary>
      <returns vsli:raw="A shallow copy of the &lt;see cref=&quot;T:System.Collections.BitArray&quot; /&gt;.">Copia superficiale di <see cref="T:System.Collections.BitArray" />.</returns>
    </member>
    <member name="M:System.Collections.BitArray.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the entire &lt;see cref=&quot;T:System.Collections.BitArray&quot; /&gt; to a compatible one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified index of the target array.">Copia l'intero oggetto <see cref="T:System.Collections.BitArray" /> in un oggetto <see cref="T:System.Array" /> compatibile unidimensionale, a partire dall'indice specificato della matrice di destinazione.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Collections.BitArray&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">Oggetto <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.BitArray" />. L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.">
        <paramref name="index" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in the source &lt;see cref=&quot;T:System.Collections.BitArray&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> è multidimensionale.  
In alternativa 
Il numero di elementi nell'oggetto <see cref="T:System.Collections.BitArray" /> di origine è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The type of the source &lt;see cref=&quot;T:System.Collections.BitArray&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">Non è possibile eseguire il cast automatico del tipo dell'oggetto <see cref="T:System.Collections.BitArray" /> di origine al tipo dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="P:System.Collections.BitArray.Count">
      <summary vsli:raw="Gets the number of elements contained in the &lt;see cref=&quot;T:System.Collections.BitArray&quot; /&gt;.">Ottiene il numero di elementi contenuti in <see cref="T:System.Collections.BitArray" />.</summary>
      <returns vsli:raw="The number of elements contained in the &lt;see cref=&quot;T:System.Collections.BitArray&quot; /&gt;.">Il numero di elementi contenuti in <see cref="T:System.Collections.BitArray" />.</returns>
    </member>
    <member name="M:System.Collections.BitArray.Get(System.Int32)">
      <summary vsli:raw="Gets the value of the bit at a specific position in the &lt;see cref=&quot;T:System.Collections.BitArray&quot; /&gt;.">Ottiene il valore del bit in una posizione specifica nella <see cref="T:System.Collections.BitArray" />.</summary>
      <param name="index" vsli:raw="The zero-based index of the value to get.">Indice in base zero del valore da ottenere.</param>
      <returns vsli:raw="The value of the bit at position &lt;paramref name=&quot;index&quot; /&gt;.">Il valore del bit nella posizione <paramref name="index" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is greater than or equal to the number of elements in the &lt;see cref=&quot;T:System.Collections.BitArray&quot; /&gt;.">
        <paramref name="index" /> è minore di zero.  
-oppure- 
 <paramref name="index" /> è maggiore o uguale al numero di elementi della <see cref="T:System.Collections.BitArray" />.</exception>
    </member>
    <member name="M:System.Collections.BitArray.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the &lt;see cref=&quot;T:System.Collections.BitArray&quot; /&gt;.">Restituisce un enumeratore che esegue l'iterazione di <see cref="T:System.Collections.BitArray" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the entire &lt;see cref=&quot;T:System.Collections.BitArray&quot; /&gt;.">
        <see cref="T:System.Collections.IEnumerator" /> per l'intero oggetto <see cref="T:System.Collections.BitArray" />.</returns>
    </member>
    <member name="P:System.Collections.BitArray.IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Collections.BitArray&quot; /&gt; is read-only.">Ottiene un valore che indica se <see cref="T:System.Collections.BitArray" /> è di sola lettura.</summary>
      <returns vsli:raw="This property is always &lt;see langword=&quot;false&quot; /&gt;.">Questa proprietà è sempre <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.BitArray.IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the &lt;see cref=&quot;T:System.Collections.BitArray&quot; /&gt; is synchronized (thread safe).">Ottiene un valore che indica se l'accesso a <see cref="T:System.Collections.BitArray" /> è sincronizzato (thread-safe).</summary>
      <returns vsli:raw="This property is always &lt;see langword=&quot;false&quot; /&gt;.">Questa proprietà è sempre <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.BitArray.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the value of the bit at a specific position in the &lt;see cref=&quot;T:System.Collections.BitArray&quot; /&gt;.">Ottiene o imposta il valore del bit in una specifica posizione nella <see cref="T:System.Collections.BitArray" />.</summary>
      <param name="index" vsli:raw="The zero-based index of the value to get or set.">Indice in base zero del valore da ottenere o impostare.</param>
      <returns vsli:raw="The value of the bit at position &lt;paramref name=&quot;index&quot; /&gt;.">Il valore del bit nella posizione <paramref name="index" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is equal to or greater than &lt;see cref=&quot;P:System.Collections.BitArray.Count&quot; /&gt;.">
        <paramref name="index" /> è minore di zero.  
In alternativa 
 <paramref name="index" /> è uguale a o maggiore di <see cref="P:System.Collections.BitArray.Count" />.</exception>
    </member>
    <member name="M:System.Collections.BitArray.LeftShift(System.Int32)">
      <param name="count" vsli:raw="The number of shifts to make for each bit." />
    </member>
    <member name="P:System.Collections.BitArray.Length">
      <summary vsli:raw="Gets or sets the number of elements in the &lt;see cref=&quot;T:System.Collections.BitArray&quot; /&gt;.">Ottiene o imposta il numero di elementi nella <see cref="T:System.Collections.BitArray" />.</summary>
      <returns vsli:raw="The number of elements in the &lt;see cref=&quot;T:System.Collections.BitArray&quot; /&gt;.">Numero di elementi in <see cref="T:System.Collections.BitArray" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The property is set to a value that is less than zero.">La proprietà è impostata su un valore minore di 0.</exception>
    </member>
    <member name="M:System.Collections.BitArray.Not">
      <summary vsli:raw="Inverts all the bit values in the current &lt;see cref=&quot;T:System.Collections.BitArray&quot; /&gt;, so that elements set to &lt;see langword=&quot;true&quot; /&gt; are changed to &lt;see langword=&quot;false&quot; /&gt;, and elements set to &lt;see langword=&quot;false&quot; /&gt; are changed to &lt;see langword=&quot;true&quot; /&gt;.">Consente di invertire tutti i valori dei bit nella <see cref="T:System.Collections.BitArray" /> corrente in modo che gli elementi impostati su <see langword="true" /> diventino <see langword="false" /> e gli elementi impostati su <see langword="false" /> diventino <see langword="true" />.</summary>
      <returns vsli:raw="The current instance with inverted bit values.">Istanza corrente con i valori di bit invertiti.</returns>
    </member>
    <member name="M:System.Collections.BitArray.Or(System.Collections.BitArray)">
      <summary vsli:raw="Performs the bitwise OR operation between the elements of the current &lt;see cref=&quot;T:System.Collections.BitArray&quot; /&gt; object and the corresponding elements in the specified array. The current &lt;see cref=&quot;T:System.Collections.BitArray&quot; /&gt; object will be modified to store the result of the bitwise OR operation.">Esegue l'operazione con OR bit per bit tra gli elementi dell'oggetto <see cref="T:System.Collections.BitArray" /> corrente e gli elementi corrispondenti nella matrice specificata. L'oggetto <see cref="T:System.Collections.BitArray" /> corrente verrà modificato per archiviare il risultato dell'operazione con OR bit per bit.</summary>
      <param name="value" vsli:raw="The array with which to perform the bitwise OR operation.">Matrice con cui eseguire l'operazione OR bit per bit.</param>
      <returns vsli:raw="An array containing the result of the bitwise OR operation, which is a reference to the current &lt;see cref=&quot;T:System.Collections.BitArray&quot; /&gt; object.">Matrice contenente il risultato dell'operazione con OR bit per bit, che è un riferimento all'oggetto <see cref="T:System.Collections.BitArray" /> corrente.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; and the current &lt;see cref=&quot;T:System.Collections.BitArray&quot; /&gt; do not have the same number of elements.">
        <paramref name="value" /> e la <see cref="T:System.Collections.BitArray" /> corrente non contengono lo stesso numero di elementi.</exception>
    </member>
    <member name="M:System.Collections.BitArray.RightShift(System.Int32)">
      <param name="count" vsli:raw="The number of shifts to make for each bit." />
    </member>
    <member name="M:System.Collections.BitArray.Set(System.Int32,System.Boolean)">
      <summary vsli:raw="Sets the bit at a specific position in the &lt;see cref=&quot;T:System.Collections.BitArray&quot; /&gt; to the specified value.">Imposta il bit in una posizione specifica nella <see cref="T:System.Collections.BitArray" /> sul valore specificato.</summary>
      <param name="index" vsli:raw="The zero-based index of the bit to set.">Indice in base zero del bit da impostare.</param>
      <param name="value" vsli:raw="The Boolean value to assign to the bit.">Valore Boolean da assegnare al bit.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is greater than or equal to the number of elements in the &lt;see cref=&quot;T:System.Collections.BitArray&quot; /&gt;.">
        <paramref name="index" /> è minore di zero.  
In alternativa 
 <paramref name="index" /> è maggiore o uguale al numero di elementi della <see cref="T:System.Collections.BitArray" />.</exception>
    </member>
    <member name="M:System.Collections.BitArray.SetAll(System.Boolean)">
      <summary vsli:raw="Sets all bits in the &lt;see cref=&quot;T:System.Collections.BitArray&quot; /&gt; to the specified value.">Imposta tutti i bit della <see cref="T:System.Collections.BitArray" /> sul valore specificato.</summary>
      <param name="value" vsli:raw="The Boolean value to assign to all bits.">Valore Boolean da assegnare a tutti i bit.</param>
    </member>
    <member name="P:System.Collections.BitArray.SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.BitArray&quot; /&gt;.">Ottiene un oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.BitArray" />.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.BitArray&quot; /&gt;.">Oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.BitArray" />.</returns>
    </member>
    <member name="M:System.Collections.BitArray.Xor(System.Collections.BitArray)">
      <summary vsli:raw="Performs the bitwise exclusive OR operation between the elements of the current &lt;see cref=&quot;T:System.Collections.BitArray&quot; /&gt; object against the corresponding elements in the specified array. The current &lt;see cref=&quot;T:System.Collections.BitArray&quot; /&gt; object will be modified to store the result of the bitwise exclusive OR operation.">Esegue l'operazione con OR esclusivo bit per bit tra gli elementi dell'oggetto <see cref="T:System.Collections.BitArray" /> corrente e gli elementi corrispondenti nella matrice specificata. L'oggetto <see cref="T:System.Collections.BitArray" /> corrente verrà modificato per archiviare il risultato dell'operazione con OR esclusivo bit per bit.</summary>
      <param name="value" vsli:raw="The array with which to perform the bitwise exclusive OR operation.">Matrice con cui eseguire l'operazione OR esclusivo bit per bit.</param>
      <returns vsli:raw="An array containing the result of the bitwise exclusive OR operation, which is a reference to the current &lt;see cref=&quot;T:System.Collections.BitArray&quot; /&gt; object.">Matrice contenente il risultato dell'operazione con OR esclusivo bit per bit, che è un riferimento all'oggetto <see cref="T:System.Collections.BitArray" /> corrente.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; and the current &lt;see cref=&quot;T:System.Collections.BitArray&quot; /&gt; do not have the same number of elements.">
        <paramref name="value" /> e la <see cref="T:System.Collections.BitArray" /> corrente non contengono lo stesso numero di elementi.</exception>
    </member>
    <member name="T:System.Collections.Generic.CollectionExtensions" />
    <member name="M:System.Collections.Generic.CollectionExtensions.GetValueOrDefault``2(System.Collections.Generic.IReadOnlyDictionary{``0,``1},``0)">
      <param name="dictionary" vsli:raw="A dictionary with keys of type &lt;typeparamref name=&quot;TKey&quot; /&gt; and values of type &lt;typeparamref name=&quot;TValue&quot; /&gt;." />
      <param name="key" vsli:raw="The key of the value to get." />
      <typeparam name="TKey" vsli:raw="The type of the keys in the dictionary." />
      <typeparam name="TValue" vsli:raw="The type of the values in the dictionary." />
    </member>
    <member name="M:System.Collections.Generic.CollectionExtensions.GetValueOrDefault``2(System.Collections.Generic.IReadOnlyDictionary{``0,``1},``0,``1)">
      <param name="dictionary" vsli:raw="A dictionary with keys of type &lt;typeparamref name=&quot;TKey&quot; /&gt; and values of type &lt;typeparamref name=&quot;TValue&quot; /&gt;." />
      <param name="key" vsli:raw="The key of the value to get." />
      <param name="defaultValue" vsli:raw="The default value to return when the &lt;paramref name=&quot;dictionary&quot; /&gt; cannot find a value associated with the specified &lt;paramref name=&quot;key&quot; /&gt;." />
      <typeparam name="TKey" vsli:raw="The type of the keys in the dictionary." />
      <typeparam name="TValue" vsli:raw="The type of the values in the dictionary." />
    </member>
    <member name="M:System.Collections.Generic.CollectionExtensions.Remove``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1@)">
      <param name="dictionary" vsli:raw="A dictionary with keys of type &lt;typeparamref name=&quot;TKey&quot; /&gt; and values of type &lt;typeparamref name=&quot;TValue&quot; /&gt;." />
      <param name="key" vsli:raw="The key of the value to remove." />
      <param name="value" vsli:raw="When this method returns &lt;see langword=&quot;true&quot; /&gt;, the removed value; when this method returns &lt;see langword=&quot;false&quot; /&gt;, the &lt;see langword=&quot;default&quot; /&gt; value for &lt;typeparamref name=&quot;TValue&quot; /&gt;." />
      <typeparam name="TKey" vsli:raw="The type of the keys in the &lt;paramref name=&quot;dictionary&quot; /&gt;." />
      <typeparam name="TValue" vsli:raw="The type of the values in the &lt;paramref name=&quot;dictionary&quot; /&gt;." />
    </member>
    <member name="M:System.Collections.Generic.CollectionExtensions.TryAdd``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)">
      <param name="dictionary" vsli:raw="A dictionary with keys of type &lt;typeparamref name=&quot;TKey&quot; /&gt; and values of type &lt;typeparamref name=&quot;TValue&quot; /&gt;." />
      <param name="key" vsli:raw="The key of the value to add." />
      <param name="value" vsli:raw="The value to add." />
      <typeparam name="TKey" vsli:raw="The type of the keys in the dictionary." />
      <typeparam name="TValue" vsli:raw="The type of the values in the dictionary." />
    </member>
    <member name="T:System.Collections.Generic.Comparer`1">
      <summary vsli:raw="Provides a base class for implementations of the &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; generic interface.">Fornisce una classe base per le implementazioni dell'interfaccia generica <see cref="T:System.Collections.Generic.IComparer`1" />.</summary>
      <typeparam name="T" vsli:raw="The type of objects to compare.">Tipo di oggetti da confrontare.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.Comparer`1.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Generic.Comparer`1&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.Comparer`1" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)">
      <summary vsli:raw="When overridden in a derived class, performs a comparison of two objects of the same type and returns a value indicating whether one object is less than, equal to, or greater than the other.">Quando è sottoposto a override in una classe derivata, esegue un confronto tra due oggetti dello stesso tipo e restituisce un valore che indica se un oggetto è minore, uguale o maggiore dell'altro.</summary>
      <param name="x" vsli:raw="The first object to compare.">Primo oggetto da confrontare.</param>
      <param name="y" vsli:raw="The second object to compare.">Secondo oggetto da confrontare.</param>
      <returns vsli:raw="A signed integer that indicates the relative values of &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt;, as shown in the following table.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Meaning&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;x&quot; /&gt; is less than &lt;paramref name=&quot;y&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;x&quot; /&gt; equals &lt;paramref name=&quot;y&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;x&quot; /&gt; is greater than &lt;paramref name=&quot;y&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Intero con segno che indica i valori relativi di <paramref name="x" /> e <paramref name="y" />, come illustrato nella tabella seguente.  
  Value 
  Significato 
  Minore di zero 
 <paramref name="x" /> è minore di <paramref name="y" />.  

  Zero 
 <paramref name="x" /> è uguale a <paramref name="y" />.  

  Maggiore di zero 
 <paramref name="x" /> è maggiore di <paramref name="y" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Type &lt;paramref name=&quot;T&quot; /&gt; does not implement either the &lt;see cref=&quot;T:System.IComparable`1&quot; /&gt; generic interface or the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; interface.">Il tipo <paramref name="T" /> non implementa l'interfaccia generica <see cref="T:System.IComparable`1" /> o l'interfaccia <see cref="T:System.IComparable" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.Comparer`1.Create(System.Comparison{`0})">
      <summary vsli:raw="Creates a comparer by using the specified comparison.">Crea un operatore di confronto utilizzando il confronto specificato.</summary>
      <param name="comparison" vsli:raw="The comparison to use.">Confronto da utilizzare.</param>
      <returns vsli:raw="The new comparer.">Nuovo operatore di confronto.</returns>
    </member>
    <member name="P:System.Collections.Generic.Comparer`1.Default">
      <summary vsli:raw="Returns a default sort order comparer for the type specified by the generic argument.">Restituisce un operatore di confronto di ordinamento predefinito per il tipo specificato dall'argomento generico.</summary>
      <returns vsli:raw="An object that inherits &lt;see cref=&quot;T:System.Collections.Generic.Comparer`1&quot; /&gt; and serves as a sort order comparer for type &lt;paramref name=&quot;T&quot; /&gt;.">Oggetto che eredita l'oggetto <see cref="T:System.Collections.Generic.Comparer`1" /> e viene utilizzato come un operatore di confronto di ordinamento per il tipo <paramref name="T" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
      <summary vsli:raw="Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.">Confronta due oggetti e restituisce un valore indicante se uno è minore, uguale o maggiore dell'altro.</summary>
      <param name="x" vsli:raw="The first object to compare.">Primo oggetto da confrontare.</param>
      <param name="y" vsli:raw="The second object to compare.">Secondo oggetto da confrontare.</param>
      <returns vsli:raw="A signed integer that indicates the relative values of &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt;, as shown in the following table.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Meaning&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;x&quot; /&gt; is less than &lt;paramref name=&quot;y&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;x&quot; /&gt; equals &lt;paramref name=&quot;y&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;x&quot; /&gt; is greater than &lt;paramref name=&quot;y&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Intero con segno che indica i valori relativi di <paramref name="x" /> e <paramref name="y" />, come illustrato nella tabella seguente.  
  Value 
  Significato 
  Minore di zero 
 <paramref name="x" /> è minore di <paramref name="y" />.  

  Zero 
 <paramref name="x" /> è uguale a <paramref name="y" />.  

  Maggiore di zero 
 <paramref name="x" /> è maggiore di <paramref name="y" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;x&quot; /&gt; or &lt;paramref name=&quot;y&quot; /&gt; is of a type that cannot be cast to type &lt;paramref name=&quot;T&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt; do not implement either the &lt;see cref=&quot;T:System.IComparable`1&quot; /&gt; generic interface or the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; interface.">Il tipo del parametro <paramref name="x" /> o <paramref name="y" /> non consente di effettuare il cast al tipo <paramref name="T" />.  
-oppure- 
 I parametri <paramref name="x" /> e <paramref name="y" /> non implementano l'interfaccia generica <see cref="T:System.IComparable`1" /> o l'interfaccia <see cref="T:System.IComparable" />.</exception>
    </member>
    <member name="T:System.Collections.Generic.Dictionary`2">
      <summary vsli:raw="Represents a collection of keys and values.">Rappresenta una raccolta di chiavi e valori.</summary>
      <typeparam name="TKey" vsli:raw="The type of the keys in the dictionary.">Tipo di chiavi nel dizionario.</typeparam>
      <typeparam name="TValue" vsli:raw="The type of the values in the dictionary.">Tipo di valori nel dizionario.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; class that is empty, has the default initial capacity, and uses the default equality comparer for the key type.">Inizializza una nuova istanza vuota della classe <see cref="T:System.Collections.Generic.Dictionary`2" />, con capacità iniziale predefinita e che utilizza l'operatore di confronto di eguaglianza predefinito per il tipo di chiave.</summary>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; class that contains elements copied from the specified &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt; and uses the default equality comparer for the key type.">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.Dictionary`2" /> che contiene elementi copiati dall'interfaccia <see cref="T:System.Collections.Generic.IDictionary`2" /> specificata e che utilizza l'operatore di confronto uguaglianze predefinito per il tipo di chiave.</summary>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt; whose elements are copied to the new &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt;.">Oggetto <see cref="T:System.Collections.Generic.IDictionary`2" /> i cui elementi sono copiati nel nuovo oggetto <see cref="T:System.Collections.Generic.Dictionary`2" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dictionary&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dictionary" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;dictionary&quot; /&gt; contains one or more duplicate keys.">
        <paramref name="dictionary" /> contiene una o più chiavi duplicate.</exception>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; class that contains elements copied from the specified &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt; and uses the specified &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt;.">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.Dictionary`2" /> che contiene gli elementi copiati dall'interfaccia <see cref="T:System.Collections.Generic.IDictionary`2" /> specificata e che utilizza l'interfaccia <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> indicata.</summary>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt; whose elements are copied to the new &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt;.">Oggetto <see cref="T:System.Collections.Generic.IDictionary`2" /> i cui elementi sono copiati nel nuovo oggetto <see cref="T:System.Collections.Generic.Dictionary`2" />.</param>
      <param name="comparer" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; implementation to use when comparing keys, or &lt;see langword=&quot;null&quot; /&gt; to use the default &lt;see cref=&quot;T:System.Collections.Generic.EqualityComparer`1&quot; /&gt; for the type of the key.">Implementazione dell'interfaccia <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> da utilizzare per confrontare le chiavi, oppure <see langword="null" /> per utilizzare l'interfaccia <see cref="T:System.Collections.Generic.EqualityComparer`1" /> predefinita del tipo di chiave.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dictionary&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dictionary" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;dictionary&quot; /&gt; contains one or more duplicate keys.">
        <paramref name="dictionary" /> contiene una o più chiavi duplicate.</exception>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})">
      <param name="collection" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt;  whose elements are copied to the new &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt;." />
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},System.Collections.Generic.IEqualityComparer{`0})">
      <param name="collection" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; whose elements are copied to the new &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt;." />
      <param name="comparer" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; implementation to use when comparing keys, or &lt;see langword=&quot;null&quot; /&gt; to use the default &lt;see cref=&quot;T:System.Collections.Generic.EqualityComparer`1&quot; /&gt; for the type of the key." />
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; class that is empty, has the default initial capacity, and uses the specified &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt;.">Inizializza una nuova istanza vuota della classe <see cref="T:System.Collections.Generic.Dictionary`2" />, con capacità iniziale predefinita e che utilizza l'interfaccia <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> specificata.</summary>
      <param name="comparer" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; implementation to use when comparing keys, or &lt;see langword=&quot;null&quot; /&gt; to use the default &lt;see cref=&quot;T:System.Collections.Generic.EqualityComparer`1&quot; /&gt; for the type of the key.">Implementazione dell'interfaccia <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> da utilizzare per confrontare le chiavi, oppure <see langword="null" /> per utilizzare l'interfaccia <see cref="T:System.Collections.Generic.EqualityComparer`1" /> predefinita del tipo di chiave.</param>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; class that is empty, has the specified initial capacity, and uses the default equality comparer for the key type.">Inizializza una nuova istanza vuota della classe <see cref="T:System.Collections.Generic.Dictionary`2" />, con capacità iniziale specificata e che utilizza l'operatore di confronto di eguaglianza predefinito per il tipo di chiave.</summary>
      <param name="capacity" vsli:raw="The initial number of elements that the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; can contain.">Numero iniziale degli elementi che <see cref="T:System.Collections.Generic.Dictionary`2" /> può contenere.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is less than 0.">
        <paramref name="capacity" /> è minore di 0.</exception>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; class that is empty, has the specified initial capacity, and uses the specified &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt;.">Inizializza una nuova istanza vuota della classe <see cref="T:System.Collections.Generic.Dictionary`2" />, con capacità iniziale specificata e che utilizza l'interfaccia <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> specificata.</summary>
      <param name="capacity" vsli:raw="The initial number of elements that the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; can contain.">Numero iniziale degli elementi che <see cref="T:System.Collections.Generic.Dictionary`2" /> può contenere.</param>
      <param name="comparer" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; implementation to use when comparing keys, or &lt;see langword=&quot;null&quot; /&gt; to use the default &lt;see cref=&quot;T:System.Collections.Generic.EqualityComparer`1&quot; /&gt; for the type of the key.">Implementazione dell'interfaccia <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> da utilizzare per confrontare le chiavi, oppure <see langword="null" /> per utilizzare l'interfaccia <see cref="T:System.Collections.Generic.EqualityComparer`1" /> predefinita del tipo di chiave.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is less than 0.">
        <paramref name="capacity" /> è minore di 0.</exception>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; class with serialized data.">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.Dictionary`2" /> con dati serializzati.</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object containing the information required to serialize the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt;.">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> contenente le informazioni necessarie per serializzare l'oggetto <see cref="T:System.Collections.Generic.Dictionary`2" />.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; structure containing the source and destination of the serialized stream associated with the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt;.">Struttura <see cref="T:System.Runtime.Serialization.StreamingContext" /> contenente l'origine e la destinazione del flusso serializzato associato alla classe <see cref="T:System.Collections.Generic.Dictionary`2" />.</param>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)">
      <summary vsli:raw="Adds the specified key and value to the dictionary.">Aggiunge la chiave e il valore specificati al dizionario.</summary>
      <param name="key" vsli:raw="The key of the element to add.">Chiave dell'elemento da aggiungere.</param>
      <param name="value" vsli:raw="The value of the element to add. The value can be &lt;see langword=&quot;null&quot; /&gt; for reference types.">Valore dell'elemento da aggiungere. Il valore può essere <see langword="null" /> per i tipi di riferimento.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An element with the same key already exists in the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt;.">In <see cref="T:System.Collections.Generic.Dictionary`2" /> è già presente un elemento con la stessa chiave.</exception>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.Clear">
      <summary vsli:raw="Removes all keys and values from the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt;.">Rimuove tutte le chiavi e i valori della raccolta <see cref="T:System.Collections.Generic.Dictionary`2" />.</summary>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.Comparer">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; that is used to determine equality of keys for the dictionary.">Ottiene l'oggetto <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, che viene usato per determinare l'uguaglianza delle chiavi per il dizionario.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; generic interface implementation that is used to determine equality of keys for the current &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; and to provide hash values for the keys.">Implementazione dell'interfaccia generica <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> che viene usata per determinare l'uguaglianza fra chiavi del dizionario <see cref="T:System.Collections.Generic.Dictionary`2" /> corrente e per fornire i valori hash delle chiavi.</returns>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.ContainsKey(`0)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; contains the specified key.">Determina se la raccolta <see cref="T:System.Collections.Generic.Dictionary`2" /> contiene la chiave specificata.</summary>
      <param name="key" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt;.">Chiave da individuare in <see cref="T:System.Collections.Generic.Dictionary`2" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; contains an element with the specified key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="T:System.Collections.Generic.Dictionary`2" /> contiene un elemento con la chiave specificata; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.ContainsValue(`1)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; contains a specific value.">Stabilisce se <see cref="T:System.Collections.Generic.Dictionary`2" /> contiene un valore specifico.</summary>
      <param name="value" vsli:raw="The value to locate in the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt;. The value can be &lt;see langword=&quot;null&quot; /&gt; for reference types.">Valore da individuare in <see cref="T:System.Collections.Generic.Dictionary`2" />. Il valore può essere <see langword="null" /> per i tipi di riferimento.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; contains an element with the specified value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="T:System.Collections.Generic.Dictionary`2" /> contiene un elemento con il valore specificato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.Count">
      <summary vsli:raw="Gets the number of key/value pairs contained in the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt;.">Ottiene il numero di coppie chiave/valore contenute in <see cref="T:System.Collections.Generic.Dictionary`2" />.</summary>
      <returns vsli:raw="The number of key/value pairs contained in the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt;.">Numero di coppie chiave/valore contenute in <see cref="T:System.Collections.Generic.Dictionary`2" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.EnsureCapacity(System.Int32)">
      <summary vsli:raw="Ensures that the dictionary can hold up to a specified number of entries without any further expansion of its backing storage.">Assicura che il dizionario possa contenere fino a un numero specificato di voci senza che sia necessario espandere lo spazio di archiviazione sottostante.</summary>
      <param name="capacity" vsli:raw="The number of entries.">Numero di voci.</param>
      <returns vsli:raw="The current capacity of the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt;.">Capacità corrente di <see cref="T:System.Collections.Generic.Dictionary`2" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is less than 0.">
        <paramref name="capacity" /> è minore di 0.</exception>
    </member>
    <member name="T:System.Collections.Generic.Dictionary`2.Enumerator">
      <summary vsli:raw="Enumerates the elements of a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt;.">Enumera gli elementi di un oggetto <see cref="T:System.Collections.Generic.Dictionary`2" />.</summary>
      <typeparam name="TKey" vsli:raw="" />
      <typeparam name="TValue" vsli:raw="" />
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.Enumerator.Current">
      <summary vsli:raw="Gets the element at the current position of the enumerator.">Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <returns vsli:raw="The element in the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; at the current position of the enumerator.">Elemento dell'insieme <see cref="T:System.Collections.Generic.Dictionary`2" /> in corrispondenza della posizione corrente dell'enumeratore.</returns>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.Enumerator.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2.Enumerator&quot; /&gt;.">Rilascia tutte le risorse usate da <see cref="T:System.Collections.Generic.Dictionary`2.Enumerator" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.Enumerator.MoveNext">
      <summary vsli:raw="Advances the enumerator to the next element of the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt;.">Sposta l'enumeratore all'elemento successivo dell'oggetto <see cref="T:System.Collections.Generic.Dictionary`2" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the enumerator was successfully advanced to the next element; &lt;see langword=&quot;false&quot; /&gt; if the enumerator has passed the end of the collection.">
        <see langword="true" /> se l'enumeratore è stato spostato correttamente in avanti in corrispondenza dell'elemento successivo, <see langword="false" /> se l'enumeratore ha superato la fine della raccolta.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The collection was modified after the enumerator was created.">La raccolta è stata modificata dopo la creazione dell'enumeratore.</exception>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Entry">
      <summary vsli:raw="Gets the element at the current position of the enumerator.">Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <returns vsli:raw="The element in the dictionary at the current position of the enumerator, as a &lt;see cref=&quot;T:System.Collections.DictionaryEntry&quot; /&gt;.">Elemento del dizionario nella posizione corrente dell'enumeratore, restituito come un oggetto <see cref="T:System.Collections.DictionaryEntry" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The enumerator is positioned before the first element of the collection or after the last element.">L'enumeratore è posizionato prima del primo elemento della raccolta o dopo l'ultimo elemento.</exception>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Key">
      <summary vsli:raw="Gets the key of the element at the current position of the enumerator.">Ottiene la chiave dell'elemento nella posizione corrente dell'enumeratore.</summary>
      <returns vsli:raw="The key of the element in the dictionary at the current position of the enumerator.">Chiave dell'elemento del dizionario nella posizione corrente dell'enumeratore.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The enumerator is positioned before the first element of the collection or after the last element.">L'enumeratore è posizionato prima del primo elemento della raccolta o dopo l'ultimo elemento.</exception>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Value">
      <summary vsli:raw="Gets the value of the element at the current position of the enumerator.">Ottiene il valore dell'elemento nella posizione corrente dell'enumeratore.</summary>
      <returns vsli:raw="The value of the element in the dictionary at the current position of the enumerator.">Valore dell'elemento del dizionario nella posizione corrente dell'enumeratore.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The enumerator is positioned before the first element of the collection or after the last element.">L'enumeratore è posizionato prima del primo elemento della raccolta o dopo l'ultimo elemento.</exception>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.Enumerator.System#Collections#IEnumerator#Current">
      <summary vsli:raw="Gets the element at the current position of the enumerator.">Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <returns vsli:raw="The element in the collection at the current position of the enumerator, as an &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Elemento della raccolta nella posizione corrente dell'enumeratore, restituito come un oggetto <see cref="T:System.Object" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The enumerator is positioned before the first element of the collection or after the last element.">L'enumeratore è posizionato prima del primo elemento della raccolta o dopo l'ultimo elemento.</exception>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.Enumerator.System#Collections#IEnumerator#Reset">
      <summary vsli:raw="Sets the enumerator to its initial position, which is before the first element in the collection.">Imposta l'enumeratore sulla propria posizione iniziale, ovvero prima del primo elemento nella raccolta.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The collection was modified after the enumerator was created.">La raccolta è stata modificata dopo la creazione dell'enumeratore.</exception>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt;.">Restituisce un enumeratore che esegue l'iterazione di <see cref="T:System.Collections.Generic.Dictionary`2" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2.Enumerator&quot; /&gt; structure for the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt;.">Struttura <see cref="T:System.Collections.Generic.Dictionary`2.Enumerator" /> dell'insieme <see cref="T:System.Collections.Generic.Dictionary`2" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Implements the &lt;see cref=&quot;T:System.Runtime.Serialization.ISerializable&quot; /&gt; interface and returns the data needed to serialize the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; instance.">Implementa l'interfaccia <see cref="T:System.Runtime.Serialization.ISerializable" /> e restituisce i dati necessari a serializzare l'istanza di <see cref="T:System.Collections.Generic.Dictionary`2" />.</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that contains the information required to serialize the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; instance.">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> che contiene le informazioni necessarie a serializzare l'istanza di <see cref="T:System.Collections.Generic.Dictionary`2" />.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; structure that contains the source and destination of the serialized stream associated with the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; instance.">Struttura <see cref="T:System.Runtime.Serialization.StreamingContext" /> che contiene l'origine e la destinazione del flusso serializzato associato all'istanza dell'insieme <see cref="T:System.Collections.Generic.Dictionary`2" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.Item(`0)">
      <summary vsli:raw="Gets or sets the value associated with the specified key.">Ottiene o imposta il valore associato alla chiave specificata.</summary>
      <param name="key" vsli:raw="The key of the value to get or set.">Chiave del valore da ottenere o impostare.</param>
      <returns vsli:raw="The value associated with the specified key. If the specified key is not found, a get operation throws a &lt;see cref=&quot;T:System.Collections.Generic.KeyNotFoundException&quot; /&gt;, and a set operation creates a new element with the specified key.">Valore associato alla chiave specificata. Se la chiave specificata non viene trovata, un'operazione get genera un'eccezione <see cref="T:System.Collections.Generic.KeyNotFoundException" />, mentre un'operazione di impostazione crea una nuovo elemento con la chiave specificata.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException" vsli:raw="The property is retrieved and &lt;paramref name=&quot;key&quot; /&gt; does not exist in the collection.">Durante il recupero della proprietà, la chiave indicata nel parametro <paramref name="key" /> non è stata trovata nella raccolta.</exception>
    </member>
    <member name="T:System.Collections.Generic.Dictionary`2.KeyCollection">
      <summary vsli:raw="Represents the collection of keys in a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt;. This class cannot be inherited.">Rappresenta la raccolta di chiavi in una classe <see cref="T:System.Collections.Generic.Dictionary`2" />. Questa classe non può essere ereditata.</summary>
      <typeparam name="TKey" vsli:raw="" />
      <typeparam name="TValue" vsli:raw="" />
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.KeyCollection.#ctor(System.Collections.Generic.Dictionary{`0,`1})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2.KeyCollection&quot; /&gt; class that reflects the keys in the specified &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt;.">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" /> in cui sono riprodotte le chiavi dell'oggetto <see cref="T:System.Collections.Generic.Dictionary`2" /> specificato.</summary>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; whose keys are reflected in the new &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2.KeyCollection&quot; /&gt;.">Classe <see cref="T:System.Collections.Generic.Dictionary`2" /> le cui chiavi vengono riprodotte nella nuova classe <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dictionary&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dictionary" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.KeyCollection.CopyTo(`0[],System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2.KeyCollection&quot; /&gt; elements to an existing one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified array index.">Copia gli elementi di <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" /> in un oggetto <see cref="T:System.Array" /> unidimensionale esistente, partendo dall'indice della matrice specificata.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2.KeyCollection&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">Oggetto <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" />. L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.">
        <paramref name="index" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the source &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2.KeyCollection&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">Il numero di elementi nell'oggetto <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" /> di origine è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.KeyCollection.Count">
      <summary vsli:raw="Gets the number of elements contained in the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2.KeyCollection&quot; /&gt;.">Ottiene il numero di elementi contenuti in <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" />.</summary>
      <returns vsli:raw="The number of elements contained in the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2.KeyCollection&quot; /&gt;.  &#xA;  &#xA; Retrieving the value of this property is an O(1) operation.">Numero di elementi contenuti nell'oggetto <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" />.  
Il recupero del valore di questa proprietà è un'operazione O(1).</returns>
    </member>
    <member name="T:System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator">
      <summary vsli:raw="Enumerates the elements of a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2.KeyCollection&quot; /&gt;.">Enumera gli elementi di un oggetto <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" />.</summary>
      <typeparam name="TKey" vsli:raw="" />
      <typeparam name="TValue" vsli:raw="" />
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator.Current">
      <summary vsli:raw="Gets the element at the current position of the enumerator.">Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <returns vsli:raw="The element in the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2.KeyCollection&quot; /&gt; at the current position of the enumerator.">Elemento dell'insieme <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" /> in corrispondenza della posizione corrente dell'enumeratore.</returns>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator&quot; /&gt;.">Rilascia tutte le risorse usate da <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator.MoveNext">
      <summary vsli:raw="Advances the enumerator to the next element of the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2.KeyCollection&quot; /&gt;.">Sposta l'enumeratore all'elemento successivo dell'oggetto <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the enumerator was successfully advanced to the next element; &lt;see langword=&quot;false&quot; /&gt; if the enumerator has passed the end of the collection.">
        <see langword="true" /> se l'enumeratore è stato spostato correttamente in avanti in corrispondenza dell'elemento successivo, <see langword="false" /> se l'enumeratore ha superato la fine della raccolta.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The collection was modified after the enumerator was created.">La raccolta è stata modificata dopo la creazione dell'enumeratore.</exception>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator.System#Collections#IEnumerator#Current">
      <summary vsli:raw="Gets the element at the current position of the enumerator.">Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <returns vsli:raw="The element in the collection at the current position of the enumerator.">Elemento della raccolta in corrispondenza della posizione corrente dell'enumeratore.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The enumerator is positioned before the first element of the collection or after the last element.">L'enumeratore è posizionato prima del primo elemento della raccolta o dopo l'ultimo elemento.</exception>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator.System#Collections#IEnumerator#Reset">
      <summary vsli:raw="Sets the enumerator to its initial position, which is before the first element in the collection.">Imposta l'enumeratore sulla propria posizione iniziale, ovvero prima del primo elemento nella raccolta.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The collection was modified after the enumerator was created.">La raccolta è stata modificata dopo la creazione dell'enumeratore.</exception>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.KeyCollection.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2.KeyCollection&quot; /&gt;.">Restituisce un enumeratore che esegue l'iterazione di <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2.KeyCollection&quot; /&gt;.">Oggetto <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator" /> per l'insieme <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.KeyCollection.System#Collections#Generic#ICollection{TKey}#Add(`0)">
      <summary vsli:raw="Adds an item to the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;. This implementation always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Aggiunge un elemento a <see cref="T:System.Collections.Generic.ICollection`1" />. Questa implementazione genera sempre <see cref="T:System.NotSupportedException" />.</summary>
      <param name="item" vsli:raw="The object to add to the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">Oggetto da aggiungere all'oggetto <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Always thrown.">Sempre generato.</exception>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.KeyCollection.System#Collections#Generic#ICollection{TKey}#Clear">
      <summary vsli:raw="Removes all items from the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;. This implementation always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Rimuove tutti gli elementi da <see cref="T:System.Collections.Generic.ICollection`1" />. Questa implementazione genera sempre <see cref="T:System.NotSupportedException" />.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="Always thrown.">Sempre generato.</exception>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.KeyCollection.System#Collections#Generic#ICollection{TKey}#Contains(`0)">
      <summary>Stabilisce se <see cref="T:System.Collections.Generic.ICollection`1" /> contiene un valore specifico.</summary>
      <param name="item">Oggetto da individuare nella raccolta <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <returns>
        <see langword="true" /> se <paramref name="item" /> è presente in <see cref="T:System.Collections.Generic.ICollection`1" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.KeyCollection.System#Collections#Generic#ICollection{TKey}#IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; is read-only.">Ottiene un valore che indica se <see cref="T:System.Collections.Generic.ICollection`1" /> è di sola lettura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  In the default implementation of &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2.KeyCollection&quot; /&gt;, this property always returns &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> se <see cref="T:System.Collections.Generic.ICollection`1" /> è di sola lettura; in caso contrario, <see langword="false" />.  Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" />, questa proprietà restituisce sempre <see langword="true" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.KeyCollection.System#Collections#Generic#ICollection{TKey}#Remove(`0)">
      <summary vsli:raw="Removes the first occurrence of a specific object from the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;. This implementation always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Rimuove la prima occorrenza di un oggetto specifico da <see cref="T:System.Collections.Generic.ICollection`1" />. Questa implementazione genera sempre <see cref="T:System.NotSupportedException" />.</summary>
      <param name="item" vsli:raw="The object to remove from the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">Oggetto da rimuovere da <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;item&quot; /&gt; was successfully removed from the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;. This method also returns &lt;see langword=&quot;false&quot; /&gt; if item was not found in the original &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">
        <see langword="true" /> se <paramref name="item" /> è stato rimosso correttamente da <see cref="T:System.Collections.Generic.ICollection`1" />; in caso contrario, <see langword="false" />. Questo metodo restituisce anche <see langword="false" /> se l'elemento non è stato trovato nell'interfaccia <see cref="T:System.Collections.Generic.ICollection`1" /> originale.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Always thrown.">Sempre generato.</exception>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.KeyCollection.System#Collections#Generic#IEnumerable{TKey}#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through a collection.">Restituisce un enumeratore che consente di eseguire l'iterazione di una raccolta.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerator`1&quot; /&gt; that can be used to iterate through the collection.">Oggetto <see cref="T:System.Collections.Generic.IEnumerator`1" /> che può essere usato per eseguire l'iterazione della raccolta.</returns>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.KeyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; to an &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at a particular &lt;see cref=&quot;T:System.Array&quot; /&gt; index.">Copia gli elementi di <see cref="T:System.Collections.ICollection" /> in <see cref="T:System.Array" /> a partire da un particolare indice <see cref="T:System.Array" />.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">Oggetto <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.ICollection" />. L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.">
        <paramref name="index" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;array&quot; /&gt; does not have zero-based indexing.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in the source &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The type of the source &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> è multidimensionale.  
-oppure- 
 <paramref name="array" /> non dispone di indicizzazione in base zero.  
-oppure- 
Il numero di elementi nell'oggetto <see cref="T:System.Collections.ICollection" /> di origine è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.  
-oppure- 
Non è possibile eseguire il cast automatico del tipo dell'oggetto <see cref="T:System.Collections.ICollection" /> di origine al tipo dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.KeyCollection.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe).">Ottiene un valore che indica se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;.  In the default implementation of &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2.KeyCollection&quot; /&gt;, this property always returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe); in caso contrario, <see langword="false" />.  Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" />, questa proprietà restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.KeyCollection.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">Ottiene un oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.  In the default implementation of &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2.KeyCollection&quot; /&gt;, this property always returns the current instance.">Oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.  Nell'implementazione predefinita dell'oggetto <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" />, questa proprietà restituisce sempre l'istanza corrente.</returns>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.KeyCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through a collection.">Restituisce un enumeratore che consente di eseguire l'iterazione di una raccolta.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to iterate through the collection.">Oggetto <see cref="T:System.Collections.IEnumerator" /> che può essere usato per eseguire l'iterazione della raccolta.</returns>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.Keys">
      <summary vsli:raw="Gets a collection containing the keys in the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt;.">Ottiene una raccolta contenente le chiavi della classe <see cref="T:System.Collections.Generic.Dictionary`2" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2.KeyCollection&quot; /&gt; containing the keys in the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt;.">Insieme <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" /> contenente le chiavi della classe <see cref="T:System.Collections.Generic.Dictionary`2" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.OnDeserialization(System.Object)">
      <summary vsli:raw="Implements the &lt;see cref=&quot;T:System.Runtime.Serialization.ISerializable&quot; /&gt; interface and raises the deserialization event when the deserialization is complete.">Implementa l'interfaccia <see cref="T:System.Runtime.Serialization.ISerializable" /> e genera l'evento di deserializzazione quando la deserializzazione è completa.</summary>
      <param name="sender" vsli:raw="The source of the deserialization event.">Origine dell'evento di deserializzazione.</param>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object associated with the current &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; instance is invalid.">L'oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> associato all'istanza corrente di <see cref="T:System.Collections.Generic.Dictionary`2" /> non è valido.</exception>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.Remove(`0)">
      <summary vsli:raw="Removes the value with the specified key from the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt;.">Rimuove il valore con la chiave specificata dall'insieme <see cref="T:System.Collections.Generic.Dictionary`2" />.</summary>
      <param name="key" vsli:raw="The key of the element to remove.">Chiave dell'elemento da rimuovere.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the element is successfully found and removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  This method returns &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;key&quot; /&gt; is not found in the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt;.">
        <see langword="true" /> se l'elemento viene trovato e rimosso; in caso contrario, <see langword="false" />.  Questo metodo restituisce anche <see langword="false" /> se <paramref name="key" /> non viene trovato in <see cref="T:System.Collections.Generic.Dictionary`2" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.Remove(`0,`1@)">
      <param name="key" vsli:raw="The key of the element to remove." />
      <param name="value" vsli:raw="The removed element." />
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})">
      <summary vsli:raw="Adds the specified value to the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; with the specified key.">Aggiunge il valore specificato all'interfaccia <see cref="T:System.Collections.Generic.ICollection`1" /> con la chiave specificata.</summary>
      <param name="keyValuePair" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; structure representing the key and value to add to the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt;.">Struttura <see cref="T:System.Collections.Generic.KeyValuePair`2" /> che rappresenta la chiave e il valore da aggiungere alla raccolta <see cref="T:System.Collections.Generic.Dictionary`2" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The key of &lt;paramref name=&quot;keyValuePair&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">La chiave di <paramref name="keyValuePair" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An element with the same key already exists in the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt;.">In <see cref="T:System.Collections.Generic.Dictionary`2" /> è già presente un elemento con la stessa chiave.</exception>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; contains a specific key and value.">Stabilisce se l'interfaccia <see cref="T:System.Collections.Generic.ICollection`1" /> contiene una coppia chiave/valore specifica.</summary>
      <param name="keyValuePair" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; structure to locate in the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">Struttura <see cref="T:System.Collections.Generic.KeyValuePair`2" /> da individuare nell'interfaccia <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;keyValuePair&quot; /&gt; is found in the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="keyValuePair" /> è presente in <see cref="T:System.Collections.Generic.ICollection`1" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; to an array of type &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt;, starting at the specified array index.">Copia gli elementi dell'interfaccia <see cref="T:System.Collections.Generic.ICollection`1" /> in una matrice di tipo <see cref="T:System.Collections.Generic.KeyValuePair`2" />, iniziando dall'indice di matrice specificato.</summary>
      <param name="array" vsli:raw="The one-dimensional array of type &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; that is the destination of the &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; elements copied from the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;. The array must have zero-based indexing.">Matrice unidimensionale di tipo <see cref="T:System.Collections.Generic.KeyValuePair`2" /> che costituisce la destinazione degli elementi <see cref="T:System.Collections.Generic.KeyValuePair`2" /> copiati dall'oggetto <see cref="T:System.Collections.Generic.ICollection`1" />. La matrice deve avere un'indicizzazione in base zero.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than 0.">
        <paramref name="index" /> è minore di 0.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the source &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">Il numero di elementi nell'oggetto <see cref="T:System.Collections.Generic.ICollection`1" /> di origine è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the dictionary is read-only.">Ottiene un valore che indica se il dizionario è di sola lettura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;. In the default implementation of &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt;, this property always returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="T:System.Collections.Generic.ICollection`1" /> è di sola lettura; in caso contrario, <see langword="false" />. Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.Dictionary`2" />, questa proprietà restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})">
      <summary vsli:raw="Removes a key and value from the dictionary.">Rimuove una chiave e un valore dal dizionario.</summary>
      <param name="keyValuePair" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; structure representing the key and value to remove from the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt;.">Struttura <see cref="T:System.Collections.Generic.KeyValuePair`2" /> che rappresenta la chiave e il valore da rimuovere da <see cref="T:System.Collections.Generic.Dictionary`2" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the key and value represented by &lt;paramref name=&quot;keyValuePair&quot; /&gt; is successfully found and removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;. This method returns &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;keyValuePair&quot; /&gt; is not found in the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">
        <see langword="true" /> se la chiave e il valore rappresentati da <paramref name="keyValuePair" /> vengono trovati e rimossi; in caso contrario, <see langword="false" />. Questo metodo restituisce anche <see langword="false" /> se <paramref name="keyValuePair" /> non viene trovato in <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary{TKey@TValue}#Keys">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; containing the keys of the &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt;.">Ottiene <see cref="T:System.Collections.Generic.ICollection`1" /> contenente le chiavi di <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; of type &lt;paramref name=&quot;TKey&quot; /&gt; containing the keys of the &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt;.">Interfaccia <see cref="T:System.Collections.Generic.ICollection`1" /> di tipo <paramref name="TKey" /> contenente le chiavi dell'interfaccia <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary{TKey@TValue}#Values">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; containing the values in the &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt;.">Ottiene <see cref="T:System.Collections.Generic.ICollection`1" /> contenente i valori in <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; of type &lt;paramref name=&quot;TValue&quot; /&gt; containing the values in the &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt;.">Interfaccia <see cref="T:System.Collections.Generic.ICollection`1" /> di tipo <paramref name="TValue" /> contenente i valori dell'interfaccia <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey@TValue}}#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the collection.">Restituisce un enumeratore che consente di scorrere la raccolta.</summary>
      <returns vsli:raw="An enumerator that can be used to iterate through the collection.">Enumeratore che può essere usato per scorrere la raccolta.</returns>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey@TValue}#Keys">
      <summary vsli:raw="Gets a collection containing the keys of the &lt;see cref=&quot;T:System.Collections.Generic.IReadOnlyDictionary`2&quot; /&gt;.">Ottiene una raccolta contenente le chiavi della classe <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2" />.</summary>
      <returns vsli:raw="A collection containing the keys of the &lt;see cref=&quot;T:System.Collections.Generic.IReadOnlyDictionary`2&quot; /&gt;.">Raccolta contenente le chiavi di <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey@TValue}#Values">
      <summary vsli:raw="Gets a collection containing the values of the &lt;see cref=&quot;T:System.Collections.Generic.IReadOnlyDictionary`2&quot; /&gt;.">Ottiene una raccolta contenente i valori di <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2" />.</summary>
      <returns vsli:raw="A collection containing the values of the &lt;see cref=&quot;T:System.Collections.Generic.IReadOnlyDictionary`2&quot; /&gt;.">Raccolta contenente i valori di <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; to an array, starting at the specified array index.">Copia gli elementi dell'interfaccia <see cref="T:System.Collections.Generic.ICollection`1" /> in una matrice, iniziando dall'indice di matrice specificato.</summary>
      <param name="array" vsli:raw="The one-dimensional array that is the destination of the elements copied from &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;. The array must have zero-based indexing.">Matrice unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.Generic.ICollection`1" />. La matrice deve avere un'indicizzazione in base zero.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than 0.">
        <paramref name="index" /> è minore di 0.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;array&quot; /&gt; does not have zero-based indexing.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in the source &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The type of the source &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> è multidimensionale.  
-oppure- 
 <paramref name="array" /> non dispone di indicizzazione in base zero.  
-oppure- 
Il numero di elementi nell'oggetto <see cref="T:System.Collections.Generic.ICollection`1" /> di origine è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.  
-oppure- 
Non è possibile eseguire il cast automatico del tipo dell'oggetto <see cref="T:System.Collections.Generic.ICollection`1" /> di origine al tipo dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe).">Ottiene un valore che indica se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;.  In the default implementation of &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt;, this property always returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe); in caso contrario, <see langword="false" />.  Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.Dictionary`2" />, questa proprietà restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">Ottiene un oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">Oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
      <summary vsli:raw="Adds the specified key and value to the dictionary.">Aggiunge la chiave e il valore specificati al dizionario.</summary>
      <param name="key" vsli:raw="The object to use as the key.">Oggetto da utilizzare come chiave.</param>
      <param name="value" vsli:raw="The object to use as the value.">Oggetto da utilizzare come valore.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is of a type that is not assignable to the key type &lt;paramref name=&quot;TKey&quot; /&gt; of the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;value&quot; /&gt; is of a type that is not assignable to &lt;paramref name=&quot;TValue&quot; /&gt;, the type of values in the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; A value with the same key already exists in the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt;.">Il tipo della chiave indicata nel parametro <paramref name="key" /> non è assegnabile al tipo di chiave <paramref name="TKey" /> dell'insieme <see cref="T:System.Collections.Generic.Dictionary`2" />.  
-oppure- 
 Il tipo del valore indicato nel parametro <paramref name="value" /> non è assegnabile al tipo di valore <paramref name="TValue" /> dell'insieme <see cref="T:System.Collections.Generic.Dictionary`2" />.  
In alternativa 
nell'insieme <see cref="T:System.Collections.Generic.Dictionary`2" /> è già presente un valore con la stessa chiave.</exception>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; contains an element with the specified key.">Determina se <see cref="T:System.Collections.IDictionary" /> contiene un elemento con la chiave specificata.</summary>
      <param name="key" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt;.">Chiave da individuare in <see cref="T:System.Collections.IDictionary" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; contains an element with the specified key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="T:System.Collections.IDictionary" /> contiene un elemento con la chiave specificata; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.IDictionaryEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt;.">Restituisce <see cref="T:System.Collections.IDictionaryEnumerator" /> per <see cref="T:System.Collections.IDictionary" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionaryEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt;.">
        <see cref="T:System.Collections.IDictionaryEnumerator" /> per l'oggetto <see cref="T:System.Collections.IDictionary" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsFixedSize">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; has a fixed size.">Ottiene un valore che indica se le dimensioni dell'oggetto <see cref="T:System.Collections.IDictionary" /> sono fisse.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; has a fixed size; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  In the default implementation of &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt;, this property always returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="T:System.Collections.IDictionary" /> è di dimensioni fisse; in caso contrario, <see langword="false" />.  Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.Dictionary`2" />, questa proprietà restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; is read-only.">Ottiene un valore che indica se <see cref="T:System.Collections.IDictionary" /> è di sola lettura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  In the default implementation of &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt;, this property always returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="T:System.Collections.IDictionary" /> è di sola lettura; in caso contrario, <see langword="false" />.  Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.Dictionary`2" />, questa proprietà restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)">
      <summary vsli:raw="Gets or sets the value with the specified key.">Ottiene o imposta il valore con la chiave specificata.</summary>
      <param name="key" vsli:raw="The key of the value to get.">Chiave del valore da ottenere.</param>
      <returns vsli:raw="The value associated with the specified key, or &lt;see langword=&quot;null&quot; /&gt; if &lt;paramref name=&quot;key&quot; /&gt; is not in the dictionary or &lt;paramref name=&quot;key&quot; /&gt; is of a type that is not assignable to the key type &lt;paramref name=&quot;TKey&quot; /&gt; of the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt;.">Il valore associato alla chiave specificata, o <see langword="null" /> se <paramref name="key" /> non è presente nel dizionario o se il tipo di <paramref name="key" /> non può essere assegnato al tipo di chiave <paramref name="TKey" /> della classe <see cref="T:System.Collections.Generic.Dictionary`2" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="A value is being assigned, and &lt;paramref name=&quot;key&quot; /&gt; is of a type that is not assignable to the key type &lt;paramref name=&quot;TKey&quot; /&gt; of the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; A value is being assigned, and &lt;paramref name=&quot;value&quot; /&gt; is of a type that is not assignable to the value type &lt;paramref name=&quot;TValue&quot; /&gt; of the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt;.">Viene assegnato un valore e il tipo di <paramref name="key" /> non può essere assegnato al tipo di chiave <paramref name="TKey" /> della classe<see cref="T:System.Collections.Generic.Dictionary`2" />.  
In alternativa 
Viene assegnato un valore e il tipo di <paramref name="value" /> non può essere assegnato al tipo di valore <paramref name="TValue" /> della classe<see cref="T:System.Collections.Generic.Dictionary`2" />.</exception>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Keys">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; containing the keys of the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt;.">Ottiene <see cref="T:System.Collections.ICollection" /> contenente le chiavi di <see cref="T:System.Collections.IDictionary" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; containing the keys of the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt;.">Interfaccia <see cref="T:System.Collections.ICollection" /> contenente le chiavi dell'interfaccia <see cref="T:System.Collections.IDictionary" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Remove(System.Object)">
      <summary vsli:raw="Removes the element with the specified key from the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt;.">Rimuove l'elemento con la chiave specificata da <see cref="T:System.Collections.IDictionary" />.</summary>
      <param name="key" vsli:raw="The key of the element to remove.">Chiave dell'elemento da rimuovere.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Values">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; containing the values in the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt;.">Ottiene <see cref="T:System.Collections.ICollection" /> contenente i valori in <see cref="T:System.Collections.IDictionary" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; containing the values in the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt;.">Interfaccia <see cref="T:System.Collections.ICollection" /> contenente i valori dell'interfaccia <see cref="T:System.Collections.IDictionary" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the collection.">Restituisce un enumeratore che consente di scorrere la raccolta.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to iterate through the collection.">Oggetto <see cref="T:System.Collections.IEnumerator" /> che può essere usato per eseguire l'iterazione della raccolta.</returns>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.TrimExcess">
      <summary vsli:raw="Sets the capacity of this dictionary to what it would be if it had been originally initialized with all its entries.">Imposta la capacità di questo dizionario sul valore che avrebbe avuto se il dizionario fosse stato inizializzato in origine con tutte le voci.</summary>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.TrimExcess(System.Int32)">
      <summary vsli:raw="Sets the capacity of this dictionary to hold up a specified number of entries without any further expansion of its backing storage.">Imposta la capacità del dizionario in modo che possa contenere fino a un numero specificato di voci senza la necessità di alcuna espansione dello spazio di archiviazione sottostante.</summary>
      <param name="capacity" vsli:raw="The new capacity.">La nuova capacità.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is less than &lt;see cref=&quot;P:System.Collections.Generic.Dictionary`2.Count&quot; /&gt;.">
        <paramref name="capacity" /> è minore di <see cref="T:System.Collections.Generic.Dictionary`2" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.TryAdd(`0,`1)">
      <summary vsli:raw="Attempts to add the specified key and value to the dictionary.">Tenta di aggiungere la chiave e il valore specificati al dizionario.</summary>
      <param name="key" vsli:raw="The key of the element to add.">Chiave dell'elemento da aggiungere.</param>
      <param name="value" vsli:raw="The value of the element to add. It can be &lt;see langword=&quot;null&quot; /&gt;.">Valore dell'elemento da aggiungere. Può essere <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the key/value pair was added to the dictionary successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se la coppia chiave/valore è stata aggiunta al dizionario correttamente. In caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)">
      <summary vsli:raw="Gets the value associated with the specified key.">Ottiene il valore associato alla chiave specificata.</summary>
      <param name="key" vsli:raw="The key of the value to get.">Chiave del valore da ottenere.</param>
      <param name="value" vsli:raw="When this method returns, contains the value associated with the specified key, if the key is found; otherwise, the default value for the type of the &lt;paramref name=&quot;value&quot; /&gt; parameter. This parameter is passed uninitialized.">Quando termina, questo metodo restituisce il valore associato alla chiave specificata nel caso in cui la chiave venga trovata; in caso contrario restituisce il valore predefinito per il tipo di parametro <paramref name="value" />. Questo parametro viene passato non inizializzato.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; contains an element with the specified key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="T:System.Collections.Generic.Dictionary`2" /> contiene un elemento con la chiave specificata; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> è <see langword="null" />.</exception>
    </member>
    <member name="T:System.Collections.Generic.Dictionary`2.ValueCollection">
      <summary vsli:raw="Represents the collection of values in a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt;. This class cannot be inherited.">Rappresenta la raccolta di valori in una classe <see cref="T:System.Collections.Generic.Dictionary`2" />. Questa classe non può essere ereditata.</summary>
      <typeparam name="TKey" vsli:raw="" />
      <typeparam name="TValue" vsli:raw="" />
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.ValueCollection.#ctor(System.Collections.Generic.Dictionary{`0,`1})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2.ValueCollection&quot; /&gt; class that reflects the values in the specified &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt;.">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection" /> in cui sono riprodotti i valori dell'insieme <see cref="T:System.Collections.Generic.Dictionary`2" /> specificato.</summary>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; whose values are reflected in the new &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2.ValueCollection&quot; /&gt;.">Insieme <see cref="T:System.Collections.Generic.Dictionary`2" /> i cui valori sono riportati nel nuovo oggetto <see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dictionary&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dictionary" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.ValueCollection.CopyTo(`1[],System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2.ValueCollection&quot; /&gt; elements to an existing one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified array index.">Copia gli elementi di <see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection" /> in un oggetto <see cref="T:System.Array" /> unidimensionale esistente, partendo dall'indice della matrice specificata.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2.ValueCollection&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">Oggetto <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection" />. L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.">
        <paramref name="index" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the source &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2.ValueCollection&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">Il numero di elementi nell'oggetto <see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection" /> di origine è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.ValueCollection.Count">
      <summary vsli:raw="Gets the number of elements contained in the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2.ValueCollection&quot; /&gt;.">Ottiene il numero di elementi contenuti in <see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection" />.</summary>
      <returns vsli:raw="The number of elements contained in the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2.ValueCollection&quot; /&gt;.">Numero di elementi contenuti nell'oggetto <see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection" />.</returns>
    </member>
    <member name="T:System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator">
      <summary vsli:raw="Enumerates the elements of a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2.ValueCollection&quot; /&gt;.">Enumera gli elementi di un oggetto <see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection" />.</summary>
      <typeparam name="TKey" vsli:raw="" />
      <typeparam name="TValue" vsli:raw="" />
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator.Current">
      <summary vsli:raw="Gets the element at the current position of the enumerator.">Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <returns vsli:raw="The element in the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2.ValueCollection&quot; /&gt; at the current position of the enumerator.">Elemento dell'insieme <see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection" /> in corrispondenza della posizione corrente dell'enumeratore.</returns>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator&quot; /&gt;.">Rilascia tutte le risorse usate da <see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator.MoveNext">
      <summary vsli:raw="Advances the enumerator to the next element of the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2.ValueCollection&quot; /&gt;.">Sposta l'enumeratore all'elemento successivo dell'oggetto <see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the enumerator was successfully advanced to the next element; &lt;see langword=&quot;false&quot; /&gt; if the enumerator has passed the end of the collection.">
        <see langword="true" /> se l'enumeratore è stato spostato correttamente in avanti in corrispondenza dell'elemento successivo, <see langword="false" /> se l'enumeratore ha superato la fine della raccolta.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The collection was modified after the enumerator was created.">La raccolta è stata modificata dopo la creazione dell'enumeratore.</exception>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator.System#Collections#IEnumerator#Current">
      <summary vsli:raw="Gets the element at the current position of the enumerator.">Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <returns vsli:raw="The element in the collection at the current position of the enumerator.">Elemento della raccolta in corrispondenza della posizione corrente dell'enumeratore.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The enumerator is positioned before the first element of the collection or after the last element.">L'enumeratore è posizionato prima del primo elemento della raccolta o dopo l'ultimo elemento.</exception>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator.System#Collections#IEnumerator#Reset">
      <summary vsli:raw="Sets the enumerator to its initial position, which is before the first element in the collection.">Imposta l'enumeratore sulla propria posizione iniziale, ovvero prima del primo elemento nella raccolta.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The collection was modified after the enumerator was created.">La raccolta è stata modificata dopo la creazione dell'enumeratore.</exception>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.ValueCollection.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2.ValueCollection&quot; /&gt;.">Restituisce un enumeratore che esegue l'iterazione di <see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2.ValueCollection&quot; /&gt;.">Oggetto <see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator" /> per l'insieme <see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Add(`1)">
      <summary vsli:raw="Adds an item to the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.  This implementation always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Aggiunge un elemento a <see cref="T:System.Collections.Generic.ICollection`1" />.  Questa implementazione genera sempre <see cref="T:System.NotSupportedException" />.</summary>
      <param name="item" vsli:raw="The object to add to the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">Oggetto da aggiungere all'oggetto <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Always thrown.">Sempre generato.</exception>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Clear">
      <summary vsli:raw="Removes all items from the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.  This implementation always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Rimuove tutti gli elementi da <see cref="T:System.Collections.Generic.ICollection`1" />.  Questa implementazione genera sempre <see cref="T:System.NotSupportedException" />.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="Always thrown.">Sempre generato.</exception>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Contains(`1)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; contains a specific value.">Stabilisce se <see cref="T:System.Collections.Generic.ICollection`1" /> contiene un valore specifico.</summary>
      <param name="item" vsli:raw="The object to locate in the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">Oggetto da individuare nella raccolta <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;item&quot; /&gt; is found in the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="item" /> è presente in <see cref="T:System.Collections.Generic.ICollection`1" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; is read-only.">Ottiene un valore che indica se <see cref="T:System.Collections.Generic.ICollection`1" /> è di sola lettura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  In the default implementation of &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2.ValueCollection&quot; /&gt;, this property always returns &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> se <see cref="T:System.Collections.Generic.ICollection`1" /> è di sola lettura; in caso contrario, <see langword="false" />.  Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection" />, questa proprietà restituisce sempre <see langword="true" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Remove(`1)">
      <summary vsli:raw="Removes the first occurrence of a specific object from the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;. This implementation always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Rimuove la prima occorrenza di un oggetto specifico da <see cref="T:System.Collections.Generic.ICollection`1" />. Questa implementazione genera sempre <see cref="T:System.NotSupportedException" />.</summary>
      <param name="item" vsli:raw="The object to remove from the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">Oggetto da rimuovere da <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;item&quot; /&gt; was successfully removed from the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;. This method also returns &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;item&quot; /&gt; was not found in the original &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">
        <see langword="true" /> se <paramref name="item" /> è stato rimosso correttamente da <see cref="T:System.Collections.Generic.ICollection`1" />; in caso contrario, <see langword="false" />. Questo metodo restituisce anche <see langword="false" /> se <paramref name="item" /> non è stato trovato nell'interfaccia <see cref="T:System.Collections.Generic.ICollection`1" /> originale.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Always thrown.">Sempre generato.</exception>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.ValueCollection.System#Collections#Generic#IEnumerable{TValue}#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through a collection.">Restituisce un enumeratore che consente di eseguire l'iterazione di una raccolta.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerator`1&quot; /&gt; that can be used to iterate through the collection.">Oggetto <see cref="T:System.Collections.Generic.IEnumerator`1" /> che può essere usato per eseguire l'iterazione della raccolta.</returns>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.ValueCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; to an &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at a particular &lt;see cref=&quot;T:System.Array&quot; /&gt; index.">Copia gli elementi di <see cref="T:System.Collections.ICollection" /> in <see cref="T:System.Array" /> a partire da un particolare indice <see cref="T:System.Array" />.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">Oggetto <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.ICollection" />. L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.">
        <paramref name="index" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;array&quot; /&gt; does not have zero-based indexing.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in the source &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The type of the source &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> è multidimensionale.  
-oppure- 
 <paramref name="array" /> non dispone di indicizzazione in base zero.  
-oppure- 
Il numero di elementi nell'oggetto <see cref="T:System.Collections.ICollection" /> di origine è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.  
-oppure- 
Non è possibile eseguire il cast automatico del tipo dell'oggetto <see cref="T:System.Collections.ICollection" /> di origine al tipo dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.ValueCollection.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe).">Ottiene un valore che indica se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;.  In the default implementation of &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2.ValueCollection&quot; /&gt;, this property always returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe); in caso contrario, <see langword="false" />.  Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection" />, questa proprietà restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.ValueCollection.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">Ottiene un oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.  In the default implementation of &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2.ValueCollection&quot; /&gt;, this property always returns the current instance.">Oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.  Nell'implementazione predefinita dell'oggetto <see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection" />, questa proprietà restituisce sempre l'istanza corrente.</returns>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.ValueCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through a collection.">Restituisce un enumeratore che consente di eseguire l'iterazione di una raccolta.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to iterate through the collection.">Oggetto <see cref="T:System.Collections.IEnumerator" /> che può essere usato per eseguire l'iterazione della raccolta.</returns>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.Values">
      <summary vsli:raw="Gets a collection containing the values in the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt;.">Ottiene una raccolta contenente i valori di <see cref="T:System.Collections.Generic.Dictionary`2" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2.ValueCollection&quot; /&gt; containing the values in the &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt;.">Insieme <see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection" /> contenente i valori dell'insieme <see cref="T:System.Collections.Generic.Dictionary`2" />.</returns>
    </member>
    <member name="T:System.Collections.Generic.EqualityComparer`1">
      <summary vsli:raw="Provides a base class for implementations of the &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; generic interface.">Fornisce una classe base per le implementazioni dell'interfaccia generica <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</summary>
      <typeparam name="T" vsli:raw="The type of objects to compare.">Tipo di oggetti da confrontare.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.EqualityComparer`1.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Generic.EqualityComparer`1&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.EqualityComparer`1" />.</summary>
    </member>
    <member name="P:System.Collections.Generic.EqualityComparer`1.Default">
      <summary vsli:raw="Returns a default equality comparer for the type specified by the generic argument.">Restituisce un operatore di confronto uguaglianze predefinito per il tipo specificato dall'argomento generico.</summary>
      <returns vsli:raw="The default instance of the &lt;see cref=&quot;T:System.Collections.Generic.EqualityComparer`1&quot; /&gt; class for type &lt;typeparamref name=&quot;T&quot; /&gt;.">Istanza predefinita della classe <see cref="T:System.Collections.Generic.EqualityComparer`1" /> per il tipo <typeparamref name="T" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)">
      <summary vsli:raw="When overridden in a derived class, determines whether two objects of type &lt;typeparamref name=&quot;T&quot; /&gt; are equal.">Quando sottoposto a override in una classe derivata, determina se due oggetti di tipo <typeparamref name="T" /> sono uguali.</summary>
      <param name="x" vsli:raw="The first object to compare.">Primo oggetto da confrontare.</param>
      <param name="y" vsli:raw="The second object to compare.">Secondo oggetto da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified objects are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se gli oggetti specificati sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)">
      <summary vsli:raw="When overridden in a derived class, serves as a hash function for the specified object for hashing algorithms and data structures, such as a hash table.">Quando sottoposto a override in una classe derivata, viene utilizzato come funzione hash dell'oggetto specificato per gli algoritmi e le strutture di dati hash, come ad esempio una tabella hash.</summary>
      <param name="obj" vsli:raw="The object for which to get a hash code.">Oggetto per il quale ottenere un codice hash.</param>
      <returns vsli:raw="A hash code for the specified object.">Codice hash per l'oggetto specificato.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The type of &lt;paramref name=&quot;obj&quot; /&gt; is a reference type and &lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Il tipo di <paramref name="obj" /> è un tipo di riferimento e <paramref name="obj" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)">
      <summary vsli:raw="Determines whether the specified objects are equal.">Determina se gli oggetti specificati sono uguali.</summary>
      <param name="x" vsli:raw="The first object to compare.">Primo oggetto da confrontare.</param>
      <param name="y" vsli:raw="The second object to compare.">Secondo oggetto da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified objects are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se gli oggetti specificati sono uguali; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;x&quot; /&gt; or &lt;paramref name=&quot;y&quot; /&gt; is of a type that cannot be cast to type &lt;typeparamref name=&quot;T&quot; /&gt;.">Il tipo del parametro <paramref name="x" /> o <paramref name="y" /> non consente di effettuare il cast al tipo <typeparamref name="T" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#GetHashCode(System.Object)">
      <summary vsli:raw="Returns a hash code for the specified object.">Viene restituito un codice hash per l'oggetto specificato.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; for which a hash code is to be returned.">Oggetto <see cref="T:System.Object" /> per cui è necessario che sia restituito un codice hash.</param>
      <returns vsli:raw="A hash code for the specified object.">Codice hash per l'oggetto specificato.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The type of &lt;paramref name=&quot;obj&quot; /&gt; is a reference type and &lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;obj&quot; /&gt; is of a type that cannot be cast to type &lt;typeparamref name=&quot;T&quot; /&gt;.">Il tipo di <paramref name="obj" /> è un tipo di riferimento e <paramref name="obj" /> è <see langword="null" />.  
-oppure- 
 Il tipo del parametro <paramref name="obj" /> non consente di effettuare il cast al tipo <typeparamref name="T" />.</exception>
    </member>
    <member name="T:System.Collections.Generic.HashSet`1">
      <summary vsli:raw="Represents a set of values.">Rappresenta un insieme di valori.</summary>
      <typeparam name="T" vsli:raw="The type of elements in the hash set.">Tipo di elementi contenuti nel set di hash.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; class that is empty and uses the default equality comparer for the set type.">Inizializza una nuova istanza vuota della classe <see cref="T:System.Collections.Generic.HashSet`1" /> e usa l'operatore di confronto per l'uguaglianza per il tipo di insieme.</summary>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; class that uses the default equality comparer for the set type, contains elements copied from the specified collection, and has sufficient capacity to accommodate the number of elements copied.">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.HashSet`1" /> che usa l'operatore di confronto per l'uguaglianza per il tipo di insieme, contiene gli elementi copiati dalla raccolta specificata e presenta una capacità sufficiente a contenere il numero di elementi copiati.</summary>
      <param name="collection" vsli:raw="The collection whose elements are copied to the new set.">Raccolta i cui elementi vengono copiati nel nuovo insieme.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;collection&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="collection" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; class that uses the specified equality comparer for the set type, contains elements copied from the specified collection, and has sufficient capacity to accommodate the number of elements copied.">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.HashSet`1" /> che usa l'operatore di confronto per l'uguaglianza specificato per il tipo di insieme, contiene gli elementi copiati dalla raccolta specificata e ha una capacità sufficiente a contenere il numero di elementi copiati.</summary>
      <param name="collection" vsli:raw="The collection whose elements are copied to the new set.">Raccolta i cui elementi vengono copiati nel nuovo insieme.</param>
      <param name="comparer" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; implementation to use when comparing values in the set, or &lt;see langword=&quot;null&quot; /&gt; to use the default &lt;see cref=&quot;T:System.Collections.Generic.EqualityComparer`1&quot; /&gt; implementation for the set type.">Implementazione di <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> da usare per confrontare i valori nel set oppure <see langword="null" /> per usare l'implementazione di <see cref="T:System.Collections.Generic.EqualityComparer`1" /> predefinita per il tipo di set.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;collection&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="collection" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; class that is empty and uses the specified equality comparer for the set type.">Inizializza una nuova istanza vuota della classe <see cref="T:System.Collections.Generic.HashSet`1" /> e usa l'operatore di confronto per l'uguaglianza specificato per il tipo di insieme.</summary>
      <param name="comparer" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; implementation to use when comparing values in the set, or &lt;see langword=&quot;null&quot; /&gt; to use the default &lt;see cref=&quot;T:System.Collections.Generic.EqualityComparer`1&quot; /&gt; implementation for the set type.">Implementazione di <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> da usare per confrontare i valori nel set oppure <see langword="null" /> per usare l'implementazione di <see cref="T:System.Collections.Generic.EqualityComparer`1" /> predefinita per il tipo di set.</param>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; class that is empty, but has reserved space for &lt;paramref name=&quot;capacity&quot; /&gt; items and uses the default equality comparer for the set type.">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.HashSet`1" />, che è vuota ma include spazio riservato per <paramref name="capacity" /> e usa l'operatore di confronto per l'uguaglianza per il tipo di set.</summary>
      <param name="capacity" vsli:raw="The initial size of the &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt;.">Dimensioni iniziali dell'oggetto <see cref="T:System.Collections.Generic.HashSet`1" /></param>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; class that uses the specified equality comparer for the set type, and has sufficient capacity to accommodate &lt;paramref name=&quot;capacity&quot; /&gt; elements.">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.HashSet`1" /> che usa l'operatore di confronto per l'uguaglianza specificato per il tipo di set e ha una capacità sufficiente a contenere gli elementi <paramref name="capacity" />.</summary>
      <param name="capacity" vsli:raw="The initial size of the &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt;.">Dimensioni iniziali dell'oggetto <see cref="T:System.Collections.Generic.HashSet`1" /></param>
      <param name="comparer" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; implementation to use when comparing values in the set, or null (Nothing in Visual Basic) to use the default &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; implementation for the set type.">Implementazione di <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> da usare per confrontare i valori nel set oppure null (Nothing in Visual Basic) per usare l'implementazione predefinita di <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> per il tipo di set.</param>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; class with serialized data.">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.HashSet`1" /> con dati serializzati.</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that contains the information required to serialize the &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; object.">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> contenente le informazioni necessarie per serializzare l'oggetto <see cref="T:System.Collections.Generic.HashSet`1" />.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; structure that contains the source and destination of the serialized stream associated with the &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; object.">Struttura <see cref="T:System.Runtime.Serialization.StreamingContext" /> che contiene l'origine e la destinazione del flusso serializzato associato all'oggetto <see cref="T:System.Collections.Generic.HashSet`1" />.</param>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.Add(`0)">
      <summary vsli:raw="Adds the specified element to a set.">Aggiunge l'elemento specificato a un insieme.</summary>
      <param name="item" vsli:raw="The element to add to the set.">Elemento da aggiungere all'insieme.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the element is added to the &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; object; &lt;see langword=&quot;false&quot; /&gt; if the element is already present.">
        <see langword="true" /> se l'elemento viene aggiunto all'oggetto <see cref="T:System.Collections.Generic.HashSet`1" />, <see langword="false" /> se l'elemento è già presente.</returns>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.Clear">
      <summary vsli:raw="Removes all elements from a &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; object.">Rimuove tutti gli elementi da un oggetto <see cref="T:System.Collections.Generic.HashSet`1" />.</summary>
    </member>
    <member name="P:System.Collections.Generic.HashSet`1.Comparer">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; object that is used to determine equality for the values in the set.">Ottiene l'oggetto <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, che viene usato per determinare l'uguaglianza dei valori nell'insieme.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; object that is used to determine equality for the values in the set.">Oggetto <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> usato per determinare l'uguaglianza dei valori nell'insieme.</returns>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.Contains(`0)">
      <summary vsli:raw="Determines whether a &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; object contains the specified element.">Determina se un oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> contiene l'elemento specificato.</summary>
      <param name="item" vsli:raw="The element to locate in the &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; object.">Elemento da individuare nell'oggetto <see cref="T:System.Collections.Generic.HashSet`1" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; object contains the specified element; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> contiene l'elemento specificato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.CopyTo(`0[])">
      <summary vsli:raw="Copies the elements of a &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; object to an array.">Copia gli elementi di un oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> in una matrice.</summary>
      <param name="array" vsli:raw="The one-dimensional array that is the destination of the elements copied from the &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; object. The array must have zero-based indexing.">Matrice unidimensionale che costituisce la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.Generic.HashSet`1" />. La matrice deve avere un'indicizzazione in base zero.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32)">
      <summary vsli:raw="Copies the elements of a &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; object to an array, starting at the specified array index.">Copia gli elementi di un oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> in una matrice, a partire da un indice di matrice specificato.</summary>
      <param name="array" vsli:raw="The one-dimensional array that is the destination of the elements copied from the &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; object. The array must have zero-based indexing.">Matrice unidimensionale che costituisce la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.Generic.HashSet`1" />. La matrice deve avere un'indicizzazione in base zero.</param>
      <param name="arrayIndex" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;arrayIndex&quot; /&gt; is less than 0.">
        <paramref name="arrayIndex" /> è minore di 0.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;arrayIndex&quot; /&gt; is greater than the length of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="arrayIndex" /> è maggiore della lunghezza del parametro <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies the specified number of elements of a &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; object to an array, starting at the specified array index.">Copia il numero specificato di elementi di un oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> in una matrice, a partire da un indice di matrice specificato.</summary>
      <param name="array" vsli:raw="The one-dimensional array that is the destination of the elements copied from the &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; object. The array must have zero-based indexing.">Matrice unidimensionale che costituisce la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.Generic.HashSet`1" />. La matrice deve avere un'indicizzazione in base zero.</param>
      <param name="arrayIndex" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <param name="count" vsli:raw="The number of elements to copy to &lt;paramref name=&quot;array&quot; /&gt;.">Numero di elementi da copiare in <paramref name="array" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;arrayIndex&quot; /&gt; is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;count&quot; /&gt; is less than 0.">
        <paramref name="arrayIndex" /> è minore di 0.  
In alternativa 
 <paramref name="count" /> è minore di 0.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;arrayIndex&quot; /&gt; is greater than the length of the destination &lt;paramref name=&quot;array&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;count&quot; /&gt; is greater than the available space from the &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="arrayIndex" /> è maggiore della lunghezza del parametro <paramref name="array" /> di destinazione.  
In alternativa 
 <paramref name="count" /> è maggiore dello spazio disponibile da <paramref name="index" /> alla fine del parametro <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="P:System.Collections.Generic.HashSet`1.Count">
      <summary vsli:raw="Gets the number of elements that are contained in a set.">Ottiene il numero di elementi contenuti in un insieme.</summary>
      <returns vsli:raw="The number of elements that are contained in the set.">Numero di elementi contenuti nell'insieme.</returns>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.CreateSetComparer">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.IEqualityComparer&quot; /&gt; object that can be used for equality testing of a &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; object.">Restituisce un oggetto <see cref="T:System.Collections.IEqualityComparer" /> che può essere usato per test di uguaglianza di un oggetto <see cref="T:System.Collections.Generic.HashSet`1" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEqualityComparer&quot; /&gt; object that can be used for deep equality testing of the &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; object.">Oggetto <see cref="T:System.Collections.IEqualityComparer" /> che può essere usato per test di uguaglianza approfonditi dell'oggetto <see cref="T:System.Collections.Generic.HashSet`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.EnsureCapacity(System.Int32)">
      <summary vsli:raw="Ensures that this hash set can hold the specified number of elements without growing.">Garantisce che questo set di hash possa conservare il numero specificato di elementi senza aumentare.</summary>
      <param name="capacity" vsli:raw="The minimum capacity to ensure.">Capacità minima da garantire.</param>
      <returns vsli:raw="The new capacity of this instance.">Nuova capacità di questa istanza.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is less than zero.">
        <paramref name="capacity" /> è minore di zero.</exception>
    </member>
    <member name="T:System.Collections.Generic.HashSet`1.Enumerator">
      <summary vsli:raw="Enumerates the elements of a &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; object.">Enumera gli elementi di un oggetto <see cref="T:System.Collections.Generic.HashSet`1" />.</summary>
      <typeparam name="T" vsli:raw="" />
    </member>
    <member name="P:System.Collections.Generic.HashSet`1.Enumerator.Current">
      <summary vsli:raw="Gets the element at the current position of the enumerator.">Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <returns vsli:raw="The element in the &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; collection at the current position of the enumerator.">Elemento della raccolta <see cref="T:System.Collections.Generic.HashSet`1" /> in corrispondenza della posizione corrente dell'enumeratore.</returns>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.Enumerator.Dispose">
      <summary vsli:raw="Releases all resources used by a &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1.Enumerator&quot; /&gt; object.">Rilascia tutte le risorse utilizzate da un oggetto <see cref="T:System.Collections.Generic.HashSet`1.Enumerator" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.Enumerator.MoveNext">
      <summary vsli:raw="Advances the enumerator to the next element of the &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; collection.">Sposta l'enumeratore all'elemento successivo della raccolta <see cref="T:System.Collections.Generic.HashSet`1" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the enumerator was successfully advanced to the next element; &lt;see langword=&quot;false&quot; /&gt; if the enumerator has passed the end of the collection.">
        <see langword="true" /> se l'enumeratore è stato spostato correttamente in avanti in corrispondenza dell'elemento successivo, <see langword="false" /> se l'enumeratore ha superato la fine della raccolta.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The collection was modified after the enumerator was created.">La raccolta è stata modificata dopo la creazione dell'enumeratore.</exception>
    </member>
    <member name="P:System.Collections.Generic.HashSet`1.Enumerator.System#Collections#IEnumerator#Current">
      <summary vsli:raw="Gets the element at the current position of the enumerator.">Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <returns vsli:raw="The element in the collection at the current position of the enumerator, as an &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Elemento della raccolta nella posizione corrente dell'enumeratore, restituito come un oggetto <see cref="T:System.Object" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The enumerator is positioned before the first element of the collection or after the last element.">L'enumeratore è posizionato prima del primo elemento della raccolta o dopo l'ultimo elemento.</exception>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.Enumerator.System#Collections#IEnumerator#Reset">
      <summary vsli:raw="Sets the enumerator to its initial position, which is before the first element in the collection.">Imposta l'enumeratore sulla propria posizione iniziale, ovvero prima del primo elemento nella raccolta.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The collection was modified after the enumerator was created.">La raccolta è stata modificata dopo la creazione dell'enumeratore.</exception>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
      <summary vsli:raw="Removes all elements in the specified collection from the current &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; object.">Rimuove tutti gli elementi della raccolta specificata dall'oggetto <see cref="T:System.Collections.Generic.HashSet`1" />.</summary>
      <param name="other" vsli:raw="The collection of items to remove from the &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; object.">Raccolta di elementi da rimuovere dall'oggetto <see cref="T:System.Collections.Generic.HashSet`1" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;other&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="other" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through a &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; object.">Restituisce un enumeratore che consente di eseguire l'iterazione di un oggetto <see cref="T:System.Collections.Generic.HashSet`1" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1.Enumerator&quot; /&gt; object for the &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; object.">Oggetto <see cref="T:System.Collections.Generic.HashSet`1.Enumerator" /> per l'oggetto <see cref="T:System.Collections.Generic.HashSet`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Implements the &lt;see cref=&quot;T:System.Runtime.Serialization.ISerializable&quot; /&gt; interface and returns the data needed to serialize a &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; object.">Implementa l'interfaccia <see cref="T:System.Runtime.Serialization.ISerializable" /> e restituisce i dati necessari per serializzare un oggetto <see cref="T:System.Collections.Generic.HashSet`1" />.</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that contains the information required to serialize the &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; object.">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> contenente le informazioni necessarie per serializzare l'oggetto <see cref="T:System.Collections.Generic.HashSet`1" />.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; structure that contains the source and destination of the serialized stream associated with the &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; object.">Struttura <see cref="T:System.Runtime.Serialization.StreamingContext" /> che contiene l'origine e la destinazione del flusso serializzato associato all'oggetto <see cref="T:System.Collections.Generic.HashSet`1" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})">
      <summary vsli:raw="Modifies the current &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; object to contain only elements that are present in that object and in the specified collection.">Modifica l'oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> corrente per contenere solo elementi presenti in tale oggetto e nella raccolta specificata.</summary>
      <param name="other" vsli:raw="The collection to compare to the current &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; object.">Raccolta da confrontare con l'oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> corrente.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;other&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="other" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary vsli:raw="Determines whether a &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; object is a proper subset of the specified collection.">Determina se un oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> è un subset corretto della raccolta specificata.</summary>
      <param name="other" vsli:raw="The collection to compare to the current &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; object.">Raccolta da confrontare con l'oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> corrente.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; object is a proper subset of &lt;paramref name=&quot;other&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> è un subset corretto di <paramref name="other" />; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;other&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="other" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary vsli:raw="Determines whether a &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; object is a proper superset of the specified collection.">Determina se un oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> è un superset corretto della raccolta specificata.</summary>
      <param name="other" vsli:raw="The collection to compare to the current &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; object.">Raccolta da confrontare con l'oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> corrente.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; object is a proper superset of &lt;paramref name=&quot;other&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> è un superset corretto di <paramref name="other" />, in caso contrario <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;other&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="other" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary vsli:raw="Determines whether a &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; object is a subset of the specified collection.">Determina se un oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> è un subset della raccolta specificata.</summary>
      <param name="other" vsli:raw="The collection to compare to the current &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; object.">Raccolta da confrontare con l'oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> corrente.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; object is a subset of &lt;paramref name=&quot;other&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> è un subset di <paramref name="other" />; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;other&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="other" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary vsli:raw="Determines whether a &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; object is a superset of the specified collection.">Determina se un oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> è un superset della raccolta specificata.</summary>
      <param name="other" vsli:raw="The collection to compare to the current &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; object.">Raccolta da confrontare con l'oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> corrente.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; object is a superset of &lt;paramref name=&quot;other&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> è un superset di <paramref name="other" />, in caso contrario <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;other&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="other" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.OnDeserialization(System.Object)">
      <summary vsli:raw="Implements the &lt;see cref=&quot;T:System.Runtime.Serialization.ISerializable&quot; /&gt; interface and raises the deserialization event when the deserialization is complete.">Implementa l'interfaccia <see cref="T:System.Runtime.Serialization.ISerializable" /> e genera l'evento di deserializzazione quando la deserializzazione è completa.</summary>
      <param name="sender" vsli:raw="The source of the deserialization event.">Origine dell'evento di deserializzazione.</param>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object associated with the current &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; object is invalid.">L'oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> associato all’oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> corrente non è valido.</exception>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
      <summary vsli:raw="Determines whether the current &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; object and a specified collection share common elements.">Determina se l'oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> corrente e una raccolta specificata condividono elementi comuni.</summary>
      <param name="other" vsli:raw="The collection to compare to the current &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; object.">Raccolta da confrontare con l'oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> corrente.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; object and &lt;paramref name=&quot;other&quot; /&gt; share at least one common element; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> e il parametro <paramref name="other" /> condividono almeno un elemento comune; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;other&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="other" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.Remove(`0)">
      <summary vsli:raw="Removes the specified element from a &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; object.">Rimuove l'elemento specificato da un oggetto <see cref="T:System.Collections.Generic.HashSet`1" />.</summary>
      <param name="item" vsli:raw="The element to remove.">Elemento da rimuovere.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the element is successfully found and removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  This method returns &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;item&quot; /&gt; is not found in the &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; object.">
        <see langword="true" /> se l'elemento viene trovato e rimosso; in caso contrario, <see langword="false" />.  Questo metodo restituisce <see langword="false" /> se <paramref name="item" /> non viene trovato nell'oggetto <see cref="T:System.Collections.Generic.HashSet`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.RemoveWhere(System.Predicate{`0})">
      <summary vsli:raw="Removes all elements that match the conditions defined by the specified predicate from a &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; collection.">Rimuove tutti gli elementi che corrispondono alle condizioni definite dal predicato specificato da una raccolta <see cref="T:System.Collections.Generic.HashSet`1" />.</summary>
      <param name="match" vsli:raw="The &lt;see cref=&quot;T:System.Predicate`1&quot; /&gt; delegate that defines the conditions of the elements to remove.">Delegato <see cref="T:System.Predicate`1" /> che definisce le condizioni degli elementi da rimuovere.</param>
      <returns vsli:raw="The number of elements that were removed from the &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; collection.">Numero di elementi rimossi dalla raccolta <see cref="T:System.Collections.Generic.HashSet`1" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;match&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="match" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
      <summary vsli:raw="Determines whether a &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; object and the specified collection contain the same elements.">Determina se un oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> e la raccolta specificata contengono gli stessi elementi.</summary>
      <param name="other" vsli:raw="The collection to compare to the current &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; object.">Raccolta da confrontare con l'oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> corrente.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; object is equal to &lt;paramref name=&quot;other&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> è uguale a <paramref name="other" />; in caso contrario, false.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;other&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="other" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
      <summary vsli:raw="Modifies the current &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; object to contain only elements that are present either in that object or in the specified collection, but not both.">Modifica l'oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> corrente in modo che contenga solo elementi presenti in tale oggetto o nella raccolta specificata, ma non entrambi.</summary>
      <param name="other" vsli:raw="The collection to compare to the current &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; object.">Raccolta da confrontare con l'oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> corrente.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;other&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="other" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection{T}#Add(`0)">
      <summary vsli:raw="Adds an item to an &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; object.">Aggiunge un elemento a un oggetto <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <param name="item" vsli:raw="The object to add to the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; object.">Oggetto da aggiungere all'oggetto <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; is read-only.">La classe <see cref="T:System.Collections.Generic.ICollection`1" /> è di sola lettura.</exception>
    </member>
    <member name="P:System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether a collection is read-only.">Ottiene un valore che indica se una raccolta è di sola lettura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se la raccolta è di sola lettura; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through a collection.">Restituisce un enumeratore che consente di eseguire l'iterazione di una raccolta.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerator`1&quot; /&gt; object that can be used to iterate through the collection.">Oggetto <see cref="T:System.Collections.Generic.IEnumerator`1" /> che può essere usato per eseguire l'iterazione della raccolta.</returns>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through a collection.">Restituisce un enumeratore che consente di eseguire l'iterazione di una raccolta.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object that can be used to iterate through the collection.">Oggetto <see cref="T:System.Collections.IEnumerator" /> che può essere usato per eseguire l'iterazione della raccolta.</returns>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.TrimExcess">
      <summary vsli:raw="Sets the capacity of a &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; object to the actual number of elements it contains, rounded up to a nearby, implementation-specific value.">Imposta la capacità di un oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> sul numero effettivo di elementi che contiene, arrotondato per eccesso a un valore vicino specifico dell'implementazione.</summary>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.TryGetValue(`0,`0@)">
      <summary vsli:raw="Searches the set for a given value and returns the equal value it finds, if any.">Cerca un determinato valore nel set e restituisce il valore uguale eventualmente trovato.</summary>
      <param name="equalValue" vsli:raw="The value to search for.">Valore da cercare.</param>
      <param name="actualValue" vsli:raw="The value from the set that the search found, or the default value of T when the search yielded no match.">Valore del set trovato dalla ricerca oppure il valore predefinito di T se la ricerca non ha restituito alcuna corrispondenza.</param>
      <returns vsli:raw="A value indicating whether the search was successful.">Valore che indica se la ricerca è stata eseguita correttamente.</returns>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})">
      <summary vsli:raw="Modifies the current &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; object to contain all elements that are present in itself, the specified collection, or both.">Modifica l'oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> corrente per contenere tutti gli elementi presenti in tale oggetto, nella raccolta specificata o in entrambi.</summary>
      <param name="other" vsli:raw="The collection to compare to the current &lt;see cref=&quot;T:System.Collections.Generic.HashSet`1&quot; /&gt; object.">Raccolta da confrontare con l'oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> corrente.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;other&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="other" /> è <see langword="null" />.</exception>
    </member>
    <member name="T:System.Collections.Generic.LinkedList`1">
      <summary vsli:raw="Represents a doubly linked list.">Rappresenta una lista bidirezionale.</summary>
      <typeparam name="T" vsli:raw="Specifies the element type of the linked list.">Specifica il tipo di elemento dell'elenco collegato.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt; class that is empty.">Inizializza una nuova istanza vuota della classe <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt; class that contains elements copied from the specified &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; and has sufficient capacity to accommodate the number of elements copied.">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.LinkedList`1" /> contenente gli elementi copiati dall'interfaccia <see cref="T:System.Collections.IEnumerable" /> specificata e la cui capacità è sufficiente a contenere il numero di elementi copiati.</summary>
      <param name="collection" vsli:raw="The &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; whose elements are copied to the new &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;.">Oggetto <see cref="T:System.Collections.IEnumerable" /> i cui elementi sono copiati nel nuovo oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;collection&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="collection" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt; class that is serializable with the specified &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;.">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.LinkedList`1" /> serializzabile con gli oggetti <see cref="T:System.Runtime.Serialization.SerializationInfo" /> e <see cref="T:System.Runtime.Serialization.StreamingContext" /> specificati.</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object containing the information required to serialize the &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;.">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> contenente le informazioni necessarie per serializzare l'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; object containing the source and destination of the serialized stream associated with the &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;.">Oggetto <see cref="T:System.Runtime.Serialization.StreamingContext" /> contenente l'origine e la destinazione del flusso serializzato associato a <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},`0)">
      <summary vsli:raw="Adds a new node containing the specified value after the specified existing node in the &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;.">Aggiunge un nuovo nodo che contiene il valore specificato dopo il nodo esistente indicato nell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.LinkedListNode`1&quot; /&gt; after which to insert a new &lt;see cref=&quot;T:System.Collections.Generic.LinkedListNode`1&quot; /&gt; containing &lt;paramref name=&quot;value&quot; /&gt;.">Nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> dopo il quale viene inserito un nuovo nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> contenente il valore indicato nel parametro <paramref name="value" />.</param>
      <param name="value" vsli:raw="The value to add to the &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;.">Valore da aggiungere all'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
      <returns vsli:raw="The new &lt;see cref=&quot;T:System.Collections.Generic.LinkedListNode`1&quot; /&gt; containing &lt;paramref name=&quot;value&quot; /&gt;.">Nuovo nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> contenente il valore indicato nel parametro <paramref name="value" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;node&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="node" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;node&quot; /&gt; is not in the current &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;.">
        <paramref name="node" /> non è presente nell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" /> corrente.</exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
      <summary vsli:raw="Adds the specified new node after the specified existing node in the &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;.">Aggiunge il nuovo nodo specificato dopo il nodo esistente indicato nell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.LinkedListNode`1&quot; /&gt; after which to insert &lt;paramref name=&quot;newNode&quot; /&gt;.">Nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> dopo il quale inserire il nuovo nodo indicato nel parametro <paramref name="newNode" />.</param>
      <param name="newNode" vsli:raw="The new &lt;see cref=&quot;T:System.Collections.Generic.LinkedListNode`1&quot; /&gt; to add to the &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;.">Nuovo nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> da aggiungere all'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;node&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;newNode&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="node" /> è <see langword="null" />.  
-oppure- 
 <paramref name="newNode" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;node&quot; /&gt; is not in the current &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;newNode&quot; /&gt; belongs to another &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;.">
        <paramref name="node" /> non è presente nell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" /> corrente.  
In alternativa 
 <paramref name="newNode" /> appartiene a un altro oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},`0)">
      <summary vsli:raw="Adds a new node containing the specified value before the specified existing node in the &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;.">Aggiunge un nuovo nodo che contiene il valore specificato prima del nodo esistente indicato nell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.LinkedListNode`1&quot; /&gt; before which to insert a new &lt;see cref=&quot;T:System.Collections.Generic.LinkedListNode`1&quot; /&gt; containing &lt;paramref name=&quot;value&quot; /&gt;.">Nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> prima del quale viene inserito un nuovo nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> contenente il valore indicato nel parametro <paramref name="value" />.</param>
      <param name="value" vsli:raw="The value to add to the &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;.">Valore da aggiungere all'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
      <returns vsli:raw="The new &lt;see cref=&quot;T:System.Collections.Generic.LinkedListNode`1&quot; /&gt; containing &lt;paramref name=&quot;value&quot; /&gt;.">Nuovo nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> contenente il valore indicato nel parametro <paramref name="value" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;node&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="node" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;node&quot; /&gt; is not in the current &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;.">
        <paramref name="node" /> non è presente nell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" /> corrente.</exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
      <summary vsli:raw="Adds the specified new node before the specified existing node in the &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;.">Aggiunge il nuovo nodo specificato prima del nodo esistente indicato nell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.LinkedListNode`1&quot; /&gt; before which to insert &lt;paramref name=&quot;newNode&quot; /&gt;.">Nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> prima del quale inserire il nuovo nodo indicato nel parametro <paramref name="newNode" />.</param>
      <param name="newNode" vsli:raw="The new &lt;see cref=&quot;T:System.Collections.Generic.LinkedListNode`1&quot; /&gt; to add to the &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;.">Nuovo nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> da aggiungere all'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;node&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;newNode&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="node" /> è <see langword="null" />.  
-oppure- 
 <paramref name="newNode" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;node&quot; /&gt; is not in the current &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;newNode&quot; /&gt; belongs to another &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;.">
        <paramref name="node" /> non è presente nell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" /> corrente.  
In alternativa 
 <paramref name="newNode" /> appartiene a un altro oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.AddFirst(`0)">
      <summary vsli:raw="Adds a new node containing the specified value at the start of the &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;.">Aggiunge un nuovo nodo contenente il valore specificato all'inizio dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <param name="value" vsli:raw="The value to add at the start of the &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;.">Valore da aggiungere all'inizio dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
      <returns vsli:raw="The new &lt;see cref=&quot;T:System.Collections.Generic.LinkedListNode`1&quot; /&gt; containing &lt;paramref name=&quot;value&quot; /&gt;.">Nuovo nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> contenente il valore indicato nel parametro <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.AddFirst(System.Collections.Generic.LinkedListNode{`0})">
      <summary vsli:raw="Adds the specified new node at the start of the &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;.">Aggiunge il nuovo nodo specificato all'inizio dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <param name="node" vsli:raw="The new &lt;see cref=&quot;T:System.Collections.Generic.LinkedListNode`1&quot; /&gt; to add at the start of the &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;.">Nuovo nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> da aggiungere all'inizio dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;node&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="node" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;node&quot; /&gt; belongs to another &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;.">
        <paramref name="node" /> appartiene a un altro oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.AddLast(`0)">
      <summary vsli:raw="Adds a new node containing the specified value at the end of the &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;.">Aggiunge un nuovo nodo contenente il valore specificato alla fine dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <param name="value" vsli:raw="The value to add at the end of the &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;.">Valore da aggiungere alla fine dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
      <returns vsli:raw="The new &lt;see cref=&quot;T:System.Collections.Generic.LinkedListNode`1&quot; /&gt; containing &lt;paramref name=&quot;value&quot; /&gt;.">Nuovo nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> contenente il valore indicato nel parametro <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.AddLast(System.Collections.Generic.LinkedListNode{`0})">
      <summary vsli:raw="Adds the specified new node at the end of the &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;.">Aggiunge il nodo specificato alla fine dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <param name="node" vsli:raw="The new &lt;see cref=&quot;T:System.Collections.Generic.LinkedListNode`1&quot; /&gt; to add at the end of the &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;.">Nuovo oggetto <see cref="T:System.Collections.Generic.LinkedListNode`1" /> da aggiungere alla fine dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;node&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="node" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;node&quot; /&gt; belongs to another &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;.">
        <paramref name="node" /> appartiene a un altro oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.Clear">
      <summary vsli:raw="Removes all nodes from the &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;.">Rimuove tutti i nodi dall'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.Contains(`0)">
      <summary vsli:raw="Determines whether a value is in the &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;.">Determina se un valore è incluso nell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <param name="value" vsli:raw="The value to locate in the &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;. The value can be &lt;see langword=&quot;null&quot; /&gt; for reference types.">Valore da individuare in <see cref="T:System.Collections.Generic.LinkedList`1" />. Il valore può essere <see langword="null" /> per i tipi di riferimento.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; is found in the &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="value" /> è presente in <see cref="T:System.Collections.Generic.LinkedList`1" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.CopyTo(`0[],System.Int32)">
      <summary vsli:raw="Copies the entire &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt; to a compatible one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified index of the target array.">Copia l'intero oggetto <see cref="T:System.Collections.Generic.LinkedList`1" /> in un oggetto <see cref="T:System.Array" /> compatibile unidimensionale, a partire dall'indice specificato della matrice di destinazione.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">Oggetto <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />. L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.">
        <paramref name="index" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the source &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">Il numero di elementi nell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" /> di origine è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="P:System.Collections.Generic.LinkedList`1.Count">
      <summary vsli:raw="Gets the number of nodes actually contained in the &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;.">Ottiene il numero di nodi effettivamente contenuti nell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <returns vsli:raw="The number of nodes actually contained in the &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;.">Numero di nodi effettivamente contenuti nell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</returns>
    </member>
    <member name="T:System.Collections.Generic.LinkedList`1.Enumerator">
      <summary vsli:raw="Enumerates the elements of a &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;.">Enumera gli elementi di un oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <typeparam name="T" vsli:raw="" />
    </member>
    <member name="P:System.Collections.Generic.LinkedList`1.Enumerator.Current">
      <summary vsli:raw="Gets the element at the current position of the enumerator.">Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <returns vsli:raw="The element in the &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt; at the current position of the enumerator.">Elemento dell'insieme <see cref="T:System.Collections.Generic.LinkedList`1" /> in corrispondenza della posizione corrente dell'enumeratore.</returns>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.Enumerator.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1.Enumerator&quot; /&gt;.">Rilascia tutte le risorse usate da <see cref="T:System.Collections.Generic.LinkedList`1.Enumerator" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.Enumerator.MoveNext">
      <summary vsli:raw="Advances the enumerator to the next element of the &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;.">Sposta l'enumeratore all'elemento successivo dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the enumerator was successfully advanced to the next element; &lt;see langword=&quot;false&quot; /&gt; if the enumerator has passed the end of the collection.">
        <see langword="true" /> se l'enumeratore è stato spostato correttamente in avanti in corrispondenza dell'elemento successivo, <see langword="false" /> se l'enumeratore ha superato la fine della raccolta.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The collection was modified after the enumerator was created.">La raccolta è stata modificata dopo la creazione dell'enumeratore.</exception>
    </member>
    <member name="P:System.Collections.Generic.LinkedList`1.Enumerator.System#Collections#IEnumerator#Current">
      <summary vsli:raw="Gets the element at the current position of the enumerator.">Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <returns vsli:raw="The element in the collection at the current position of the enumerator.">Elemento della raccolta in corrispondenza della posizione corrente dell'enumeratore.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The enumerator is positioned before the first element of the collection or after the last element.">L'enumeratore è posizionato prima del primo elemento della raccolta o dopo l'ultimo elemento.</exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.Enumerator.System#Collections#IEnumerator#Reset">
      <summary vsli:raw="Sets the enumerator to its initial position, which is before the first element in the collection. This class cannot be inherited.">Imposta l'enumeratore sulla propria posizione iniziale, ovvero prima del primo elemento nella raccolta. Questa classe non può essere ereditata.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The collection was modified after the enumerator was created.">La raccolta è stata modificata dopo la creazione dell'enumeratore.</exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.Enumerator.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
      <summary vsli:raw="Implements the &lt;see cref=&quot;T:System.Runtime.Serialization.ISerializable&quot; /&gt; interface and raises the deserialization event when the deserialization is complete.">Implementa l'interfaccia <see cref="T:System.Runtime.Serialization.ISerializable" /> e genera l'evento di deserializzazione quando la deserializzazione è completa.</summary>
      <param name="sender" vsli:raw="The source of the deserialization event.">Origine dell'evento di deserializzazione.</param>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object associated with the current &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt; instance is invalid.">L'oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> associato all'istanza corrente di <see cref="T:System.Collections.Generic.LinkedList`1" /> non è valido.</exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.Enumerator.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Implements the &lt;see cref=&quot;T:System.Runtime.Serialization.ISerializable&quot; /&gt; interface and returns the data needed to serialize the &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt; instance.">Implementa l'interfaccia <see cref="T:System.Runtime.Serialization.ISerializable" /> e restituisce i dati necessari a serializzare l'istanza di <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that contains the information required to serialize the &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt; instance.">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> che contiene le informazioni necessarie a serializzare l'istanza di <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; object that contains the source and destination of the serialized stream associated with the &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt; instance.">Oggetto <see cref="T:System.Runtime.Serialization.StreamingContext" /> che contiene l'origine e la destinazione del flusso serializzato associato all'istanza di <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.Find(`0)">
      <summary vsli:raw="Finds the first node that contains the specified value.">Trova il primo nodo che contiene il valore specificato.</summary>
      <param name="value" vsli:raw="The value to locate in the &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;.">Valore da individuare in <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
      <returns vsli:raw="The first &lt;see cref=&quot;T:System.Collections.Generic.LinkedListNode`1&quot; /&gt; that contains the specified value, if found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Primo nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> contenente il valore specificato, se presente; in caso contrario, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.FindLast(`0)">
      <summary vsli:raw="Finds the last node that contains the specified value.">Trova l'ultimo nodo che contiene il valore specificato.</summary>
      <param name="value" vsli:raw="The value to locate in the &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;.">Valore da individuare in <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
      <returns vsli:raw="The last &lt;see cref=&quot;T:System.Collections.Generic.LinkedListNode`1&quot; /&gt; that contains the specified value, if found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Ultimo nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> contenente il valore specificato, se presente; in caso contrario, <see langword="null" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.LinkedList`1.First">
      <summary vsli:raw="Gets the first node of the &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;.">Ottiene il primo nodo dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <returns vsli:raw="The first &lt;see cref=&quot;T:System.Collections.Generic.LinkedListNode`1&quot; /&gt; of the &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;.">Primo nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;.">Restituisce un enumeratore che esegue l'iterazione di <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1.Enumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;.">
        <see cref="T:System.Collections.Generic.LinkedList`1.Enumerator" /> per l'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Implements the &lt;see cref=&quot;T:System.Runtime.Serialization.ISerializable&quot; /&gt; interface and returns the data needed to serialize the &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt; instance.">Implementa l'interfaccia <see cref="T:System.Runtime.Serialization.ISerializable" /> e restituisce i dati necessari a serializzare l'istanza di <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that contains the information required to serialize the &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt; instance.">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> che contiene le informazioni necessarie a serializzare l'istanza di <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; object that contains the source and destination of the serialized stream associated with the &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt; instance.">Oggetto <see cref="T:System.Runtime.Serialization.StreamingContext" /> che contiene l'origine e la destinazione del flusso serializzato associato all'istanza di <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Collections.Generic.LinkedList`1.Last">
      <summary vsli:raw="Gets the last node of the &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;.">Ottiene l'ultimo nodo dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <returns vsli:raw="The last &lt;see cref=&quot;T:System.Collections.Generic.LinkedListNode`1&quot; /&gt; of the &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;.">Ultimo nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.OnDeserialization(System.Object)">
      <summary vsli:raw="Implements the &lt;see cref=&quot;T:System.Runtime.Serialization.ISerializable&quot; /&gt; interface and raises the deserialization event when the deserialization is complete.">Implementa l'interfaccia <see cref="T:System.Runtime.Serialization.ISerializable" /> e genera l'evento di deserializzazione quando la deserializzazione è completa.</summary>
      <param name="sender" vsli:raw="The source of the deserialization event.">Origine dell'evento di deserializzazione.</param>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object associated with the current &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt; instance is invalid.">L'oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> associato all'istanza corrente di <see cref="T:System.Collections.Generic.LinkedList`1" /> non è valido.</exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.Remove(`0)">
      <summary vsli:raw="Removes the first occurrence of the specified value from the &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;.">Rimuove dall'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" /> la prima occorrenza del valore specificato.</summary>
      <param name="value" vsli:raw="The value to remove from the &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;.">Valore da rimuovere dall'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the element containing &lt;paramref name=&quot;value&quot; /&gt; is successfully removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  This method also returns &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; was not found in the original &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;.">
        <see langword="true" /> se l'elemento contenente il valore indicato nel parametro <paramref name="value" /> viene rimosso correttamente; in caso contrario, <see langword="false" />.  Questo metodo restituisce anche <see langword="false" /> se <paramref name="value" /> non è stato trovato nell'interfaccia <see cref="T:System.Collections.Generic.LinkedList`1" /> originale.</returns>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.Remove(System.Collections.Generic.LinkedListNode{`0})">
      <summary vsli:raw="Removes the specified node from the &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;.">Rimuove il nodo specificato da <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.LinkedListNode`1&quot; /&gt; to remove from the &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;.">Oggetto <see cref="T:System.Collections.Generic.LinkedListNode`1" /> da rimuovere da <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;node&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="node" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;node&quot; /&gt; is not in the current &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;.">
        <paramref name="node" /> non è presente nell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" /> corrente.</exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.RemoveFirst">
      <summary vsli:raw="Removes the node at the start of the &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;.">Rimuove il nodo all'inizio dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt; is empty.">La classe <see cref="T:System.Collections.Generic.LinkedList`1" /> è vuota.</exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.RemoveLast">
      <summary vsli:raw="Removes the node at the end of the &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;.">Rimuove il nodo alla fine dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt; is empty.">La classe <see cref="T:System.Collections.Generic.LinkedList`1" /> è vuota.</exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#ICollection{T}#Add(`0)">
      <summary vsli:raw="Adds an item at the end of the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">Aggiunge un elemento alla fine dell'oggetto <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <param name="value" vsli:raw="The value to add at the end of the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">Valore da aggiungere alla fine dell'oggetto <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
    </member>
    <member name="P:System.Collections.Generic.LinkedList`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; is read-only.">Ottiene un valore che indica se <see cref="T:System.Collections.Generic.ICollection`1" /> è di sola lettura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  In the default implementation of &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;, this property always returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="T:System.Collections.Generic.ICollection`1" /> è di sola lettura; in caso contrario, <see langword="false" />.  Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.LinkedList`1" />, questa proprietà restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through a collection.">Restituisce un enumeratore che consente di eseguire l'iterazione di una raccolta.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerator`1&quot; /&gt; that can be used to iterate through the collection.">Oggetto <see cref="T:System.Collections.Generic.IEnumerator`1" /> che può essere usato per eseguire l'iterazione della raccolta.</returns>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; to an &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at a particular &lt;see cref=&quot;T:System.Array&quot; /&gt; index.">Copia gli elementi di <see cref="T:System.Collections.ICollection" /> in <see cref="T:System.Array" /> a partire da un particolare indice <see cref="T:System.Array" />.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">Oggetto <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.ICollection" />. L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.">
        <paramref name="index" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;array&quot; /&gt; does not have zero-based indexing.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in the source &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The type of the source &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> è multidimensionale.  
-oppure- 
 <paramref name="array" /> non dispone di indicizzazione in base zero.  
In alternativa 
Il numero di elementi nell'oggetto <see cref="T:System.Collections.ICollection" /> di origine è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.  
-oppure- 
Non è possibile eseguire il cast automatico del tipo dell'oggetto <see cref="T:System.Collections.ICollection" /> di origine al tipo dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="P:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe).">Ottiene un valore che indica se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;.  In the default implementation of &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;, this property always returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe); in caso contrario, <see langword="false" />.  Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.LinkedList`1" />, questa proprietà restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">Ottiene un oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.  In the default implementation of &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;, this property always returns the current instance.">Oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.  Nell'implementazione predefinita dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />, questa proprietà restituisce sempre l'istanza corrente.</returns>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the linked list as a collection.">Restituisce un enumeratore che consente di scorrere l'elenco collegato come una raccolta.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to iterate through the linked list as a collection.">Interfaccia <see cref="T:System.Collections.IEnumerator" /> che può essere utilizzata per scorrere l'elenco collegato come una raccolta.</returns>
    </member>
    <member name="T:System.Collections.Generic.LinkedListNode`1">
      <summary vsli:raw="Represents a node in a &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;. This class cannot be inherited.">Rappresenta un nodo in una <see cref="T:System.Collections.Generic.LinkedList`1" />. Questa classe non può essere ereditata.</summary>
      <typeparam name="T" vsli:raw="Specifies the element type of the linked list.">Specifica il tipo di elemento dell'elenco collegato.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.LinkedListNode`1.#ctor(`0)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Generic.LinkedListNode`1&quot; /&gt; class, containing the specified value.">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.LinkedListNode`1" /> contenente i dati specificati.</summary>
      <param name="value" vsli:raw="The value to contain in the &lt;see cref=&quot;T:System.Collections.Generic.LinkedListNode`1&quot; /&gt;.">Valore contenuto nell'oggetto <see cref="T:System.Collections.Generic.LinkedListNode`1" />.</param>
    </member>
    <member name="P:System.Collections.Generic.LinkedListNode`1.List">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt; that the &lt;see cref=&quot;T:System.Collections.Generic.LinkedListNode`1&quot; /&gt; belongs to.">Ottiene l'insieme <see cref="T:System.Collections.Generic.LinkedList`1" /> a cui appartiene il nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" />.</summary>
      <returns vsli:raw="A reference to the &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt; that the &lt;see cref=&quot;T:System.Collections.Generic.LinkedListNode`1&quot; /&gt; belongs to, or &lt;see langword=&quot;null&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.Generic.LinkedListNode`1&quot; /&gt; is not linked.">Riferimento all'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" /> a cui appartiene l'oggetto <see cref="T:System.Collections.Generic.LinkedListNode`1" /> oppure <see langword="null" /> se l'oggetto <see cref="T:System.Collections.Generic.LinkedListNode`1" /> non è collegato.</returns>
    </member>
    <member name="P:System.Collections.Generic.LinkedListNode`1.Next">
      <summary vsli:raw="Gets the next node in the &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;.">Ottiene il nodo successivo dell'insieme <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <returns vsli:raw="A reference to the next node in the &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if the current node is the last element (&lt;see cref=&quot;P:System.Collections.Generic.LinkedList`1.Last&quot; /&gt;) of the &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;.">Riferimento al nodo successivo nell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />, or <see langword="null" /> se il nodo corrente è l'ultimo elemento (<see cref="P:System.Collections.Generic.LinkedList`1.Last" />) dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.LinkedListNode`1.Previous">
      <summary vsli:raw="Gets the previous node in the &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;.">Ottiene il nodo precedente dell'insieme <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <returns vsli:raw="A reference to the previous node in the &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if the current node is the first element (&lt;see cref=&quot;P:System.Collections.Generic.LinkedList`1.First&quot; /&gt;) of the &lt;see cref=&quot;T:System.Collections.Generic.LinkedList`1&quot; /&gt;.">Riferimento al nodo precedente nell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />, or <see langword="null" /> se il nodo corrente è primo elemento (<see cref="P:System.Collections.Generic.LinkedList`1.First" />) dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.LinkedListNode`1.Value">
      <summary vsli:raw="Gets the value contained in the node.">Ottiene il valore contenuto nel nodo.</summary>
      <returns vsli:raw="The value contained in the node.">Valore contenuto nel nodo.</returns>
    </member>
    <member name="T:System.Collections.Generic.List`1">
      <summary vsli:raw="Represents a strongly typed list of objects that can be accessed by index. Provides methods to search, sort, and manipulate lists.">Rappresenta un elenco di oggetti fortemente tipizzato accessibile per indice. Fornisce metodi per la ricerca, l'ordinamento e la modifica degli elenchi.</summary>
      <typeparam name="T" vsli:raw="The type of elements in the list.">Tipo di elementi contenuti nell'elenco.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.List`1.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; class that is empty and has the default initial capacity.">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.List`1" /> vuota e con capacità iniziale predefinita.</summary>
    </member>
    <member name="M:System.Collections.Generic.List`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.List`1" /> che contiene gli elementi copiati dalla raccolta specificata e ha la capacità sufficiente per contenere il numero di elementi copiati.</summary>
      <param name="collection" vsli:raw="The collection whose elements are copied to the new list.">Raccolta i cui elementi vengono copiati nel nuovo elenco.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;collection&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="collection" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.List`1.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; class that is empty and has the specified initial capacity.">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.List`1" /> vuota e con capacità iniziale specificata.</summary>
      <param name="capacity" vsli:raw="The number of elements that the new list can initially store.">Numero di elementi che possono essere archiviati inizialmente nel nuovo elenco.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is less than 0.">
        <paramref name="capacity" /> è minore di 0.</exception>
    </member>
    <member name="M:System.Collections.Generic.List`1.Add(`0)">
      <summary vsli:raw="Adds an object to the end of the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;.">Aggiunge un oggetto alla fine di <see cref="T:System.Collections.Generic.List`1" />.</summary>
      <param name="item" vsli:raw="The object to be added to the end of the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;. The value can be &lt;see langword=&quot;null&quot; /&gt; for reference types.">Oggetto da aggiungere alla fine di <see cref="T:System.Collections.Generic.List`1" />. Il valore può essere <see langword="null" /> per i tipi di riferimento.</param>
    </member>
    <member name="M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
      <summary vsli:raw="Adds the elements of the specified collection to the end of the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;.">Aggiunge gli elementi della raccolta specificata alla fine di <see cref="T:System.Collections.Generic.List`1" />.</summary>
      <param name="collection" vsli:raw="The collection whose elements should be added to the end of the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;. The collection itself cannot be &lt;see langword=&quot;null&quot; /&gt;, but it can contain elements that are &lt;see langword=&quot;null&quot; /&gt;, if type &lt;paramref name=&quot;T&quot; /&gt; is a reference type.">Raccolta i cui elementi devono essere aggiunti alla fine di <see cref="T:System.Collections.Generic.List`1" />. La raccolta stessa non può essere <see langword="null" />, ma può contenere elementi <see langword="null" />, se il tipo <paramref name="T" /> è un tipo di riferimento.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;collection&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="collection" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.List`1.AsReadOnly">
      <summary vsli:raw="Returns a read-only &lt;see cref=&quot;T:System.Collections.ObjectModel.ReadOnlyCollection`1&quot; /&gt; wrapper for the current collection.">Restituisce un wrapper <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> in sola lettura per la raccolta corrente.</summary>
      <returns vsli:raw="An object that acts as a read-only wrapper around the current &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;.">Oggetto che fa da wrapper di sola lettura per l'oggetto <see cref="T:System.Collections.Generic.List`1" /> corrente.</returns>
    </member>
    <member name="M:System.Collections.Generic.List`1.BinarySearch(`0)">
      <summary vsli:raw="Searches the entire sorted &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; for an element using the default comparer and returns the zero-based index of the element.">Cerca un elemento nell'intero <see cref="T:System.Collections.Generic.List`1" /> ordinato usando l'operatore di confronto predefinito e restituisce l'indice in base zero dell'elemento.</summary>
      <param name="item" vsli:raw="The object to locate. The value can be &lt;see langword=&quot;null&quot; /&gt; for reference types.">Oggetto da individuare. Il valore può essere <see langword="null" /> per i tipi di riferimento.</param>
      <returns vsli:raw="The zero-based index of &lt;paramref name=&quot;item&quot; /&gt; in the sorted &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;, if &lt;paramref name=&quot;item&quot; /&gt; is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than &lt;paramref name=&quot;item&quot; /&gt; or, if there is no larger element, the bitwise complement of &lt;see cref=&quot;P:System.Collections.Generic.List`1.Count&quot; /&gt;.">Indice di <paramref name="item" /> in base zero nell'oggetto <see cref="T:System.Collections.Generic.List`1" /> ordinato, se viene rilevato <paramref name="item" />; in caso contrario, un numero negativo che rappresenta il complemento bit per bit dell'indice dell'elemento successivo maggiore di <paramref name="item" /> o, se non è disponibile alcun elemento maggiore, il complemento bit per bit di <see cref="P:System.Collections.Generic.List`1.Count" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The default comparer &lt;see cref=&quot;P:System.Collections.Generic.Comparer`1.Default&quot; /&gt; cannot find an implementation of the &lt;see cref=&quot;T:System.IComparable`1&quot; /&gt; generic interface or the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; interface for type &lt;paramref name=&quot;T&quot; /&gt;.">Mediante la proprietà <see cref="P:System.Collections.Generic.Comparer`1.Default" /> dell'operatore di confronto predefinito non è possibile rilevare un'implementazione dell'interfaccia generica <see cref="T:System.IComparable`1" /> o dell'interfaccia <see cref="T:System.IComparable" /> per il tipo <paramref name="T" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
      <summary vsli:raw="Searches the entire sorted &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; for an element using the specified comparer and returns the zero-based index of the element.">Cerca un elemento nell'intero <see cref="T:System.Collections.Generic.List`1" /> ordinato usando l'operatore di confronto specificato e restituisce l'indice in base zero dell'elemento.</summary>
      <param name="item" vsli:raw="The object to locate. The value can be &lt;see langword=&quot;null&quot; /&gt; for reference types.">Oggetto da individuare. Il valore può essere <see langword="null" /> per i tipi di riferimento.</param>
      <param name="comparer" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; implementation to use when comparing elements.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; to use the default comparer &lt;see cref=&quot;P:System.Collections.Generic.Comparer`1.Default&quot; /&gt;.">Implementazione <see cref="T:System.Collections.Generic.IComparer`1" /> da usare quando si confrontano gli elementi.  
-oppure- 
 <see langword="null" /> per utilizzare la proprietà <see cref="P:System.Collections.Generic.Comparer`1.Default" /> dell'operatore di confronto predefinito.</param>
      <returns vsli:raw="The zero-based index of &lt;paramref name=&quot;item&quot; /&gt; in the sorted &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;, if &lt;paramref name=&quot;item&quot; /&gt; is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than &lt;paramref name=&quot;item&quot; /&gt; or, if there is no larger element, the bitwise complement of &lt;see cref=&quot;P:System.Collections.Generic.List`1.Count&quot; /&gt;.">Indice di <paramref name="item" /> in base zero nell'oggetto <see cref="T:System.Collections.Generic.List`1" /> ordinato, se viene rilevato <paramref name="item" />; in caso contrario, un numero negativo che rappresenta il complemento bit per bit dell'indice dell'elemento successivo maggiore di <paramref name="item" /> o, se non è disponibile alcun elemento maggiore, il complemento bit per bit di <see cref="P:System.Collections.Generic.List`1.Count" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;comparer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, and the default comparer &lt;see cref=&quot;P:System.Collections.Generic.Comparer`1.Default&quot; /&gt; cannot find an implementation of the &lt;see cref=&quot;T:System.IComparable`1&quot; /&gt; generic interface or the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; interface for type &lt;paramref name=&quot;T&quot; /&gt;.">
        <paramref name="comparer" /> è <see langword="null" /> e mediante la proprietà <see cref="P:System.Collections.Generic.Comparer`1.Default" /> dell'operatore di confronto predefinito non è possibile rilevare un'implementazione dell'interfaccia generica <see cref="T:System.IComparable`1" /> o dell'interfaccia <see cref="T:System.IComparable" /> per il tipo <paramref name="T" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
      <summary vsli:raw="Searches a range of elements in the sorted &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; for an element using the specified comparer and returns the zero-based index of the element.">Cerca un elemento in un intervallo di elementi nell'oggetto <see cref="T:System.Collections.Generic.List`1" /> ordinato usando l'operatore di confronto specificato e restituisce l'indice in base zero dell'elemento.</summary>
      <param name="index" vsli:raw="The zero-based starting index of the range to search.">Indice iniziale in base zero dell'intervallo in cui eseguire la ricerca.</param>
      <param name="count" vsli:raw="The length of the range to search.">Lunghezza dell'intervallo in cui eseguire la ricerca.</param>
      <param name="item" vsli:raw="The object to locate. The value can be &lt;see langword=&quot;null&quot; /&gt; for reference types.">Oggetto da individuare. Il valore può essere <see langword="null" /> per i tipi di riferimento.</param>
      <param name="comparer" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; implementation to use when comparing elements, or &lt;see langword=&quot;null&quot; /&gt; to use the default comparer &lt;see cref=&quot;P:System.Collections.Generic.Comparer`1.Default&quot; /&gt;.">Implementazione <see cref="T:System.Collections.Generic.IComparer`1" /> da usare durante il confronto di elementi oppure <see langword="null" /> per usare la proprietà <see cref="P:System.Collections.Generic.Comparer`1.Default" /> dell'operatore di confronto.</param>
      <returns vsli:raw="The zero-based index of &lt;paramref name=&quot;item&quot; /&gt; in the sorted &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;, if &lt;paramref name=&quot;item&quot; /&gt; is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than &lt;paramref name=&quot;item&quot; /&gt; or, if there is no larger element, the bitwise complement of &lt;see cref=&quot;P:System.Collections.Generic.List`1.Count&quot; /&gt;.">Indice di <paramref name="item" /> in base zero nell'oggetto <see cref="T:System.Collections.Generic.List`1" /> ordinato, se viene rilevato <paramref name="item" />; in caso contrario, un numero negativo che rappresenta il complemento bit per bit dell'indice dell'elemento successivo maggiore di <paramref name="item" /> o, se non è disponibile alcun elemento maggiore, il complemento bit per bit di <see cref="P:System.Collections.Generic.List`1.Count" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;count&quot; /&gt; is less than 0.">
        <paramref name="index" /> è minore di 0.  
In alternativa 
 <paramref name="count" /> è minore di 0.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;.">
        <paramref name="index" /> e <paramref name="count" /> non indicano un intervallo valido nell'oggetto <see cref="T:System.Collections.Generic.List`1" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;comparer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, and the default comparer &lt;see cref=&quot;P:System.Collections.Generic.Comparer`1.Default&quot; /&gt; cannot find an implementation of the &lt;see cref=&quot;T:System.IComparable`1&quot; /&gt; generic interface or the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; interface for type &lt;paramref name=&quot;T&quot; /&gt;.">
        <paramref name="comparer" /> è <see langword="null" /> e mediante la proprietà <see cref="P:System.Collections.Generic.Comparer`1.Default" /> dell'operatore di confronto predefinito non è possibile rilevare un'implementazione dell'interfaccia generica <see cref="T:System.IComparable`1" /> o dell'interfaccia <see cref="T:System.IComparable" /> per il tipo <paramref name="T" />.</exception>
    </member>
    <member name="P:System.Collections.Generic.List`1.Capacity">
      <summary vsli:raw="Gets or sets the total number of elements the internal data structure can hold without resizing.">Ottiene o imposta il numero totale di elementi che la struttura dati interna è in grado di contenere senza alcun ridimensionamento.</summary>
      <returns vsli:raw="The number of elements that the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; can contain before resizing is required.">Numero di elementi che <see cref="T:System.Collections.Generic.List`1" /> può contenere prima che sia necessario un ridimensionamento.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;see cref=&quot;P:System.Collections.Generic.List`1.Capacity&quot; /&gt; is set to a value that is less than &lt;see cref=&quot;P:System.Collections.Generic.List`1.Count&quot; /&gt;.">L'oggetto <see cref="P:System.Collections.Generic.List`1.Capacity" /> è impostato su un valore minore di <see cref="P:System.Collections.Generic.List`1.Count" />.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory available on the system.">La memoria disponibile nel sistema non è sufficiente.</exception>
    </member>
    <member name="M:System.Collections.Generic.List`1.Clear">
      <summary vsli:raw="Removes all elements from the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;.">Rimuove tutti gli elementi da <see cref="T:System.Collections.Generic.List`1" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.List`1.Contains(`0)">
      <summary vsli:raw="Determines whether an element is in the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;.">Determina se un elemento è incluso in <see cref="T:System.Collections.Generic.List`1" />.</summary>
      <param name="item" vsli:raw="The object to locate in the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;. The value can be &lt;see langword=&quot;null&quot; /&gt; for reference types.">Oggetto da individuare nella raccolta <see cref="T:System.Collections.Generic.List`1" />. Il valore può essere <see langword="null" /> per i tipi di riferimento.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;item&quot; /&gt; is found in the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="item" /> è presente in <see cref="T:System.Collections.Generic.List`1" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})">
      <summary vsli:raw="Converts the elements in the current &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; to another type, and returns a list containing the converted elements.">Converte gli elementi dell'oggetto <see cref="T:System.Collections.Generic.List`1" /> corrente in un altro tipo e restituisce un elenco contenente gli elementi convertiti.</summary>
      <param name="converter" vsli:raw="A &lt;see cref=&quot;T:System.Converter`2&quot; /&gt; delegate that converts each element from one type to another type.">Delegato <see cref="T:System.Converter`2" /> che converte ogni elemento da un tipo in un altro.</param>
      <typeparam name="TOutput" vsli:raw="The type of the elements of the target array.">Tipo degli elementi della matrice di destinazione.</typeparam>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; of the target type containing the converted elements from the current &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;.">Oggetto <see cref="T:System.Collections.Generic.List`1" /> del tipo di destinazione contenente gli elementi convertiti dall'oggetto <see cref="T:System.Collections.Generic.List`1" /> corrente.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;converter&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="converter" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.List`1.CopyTo(`0[])">
      <summary vsli:raw="Copies the entire &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; to a compatible one-dimensional array, starting at the beginning of the target array.">Copia l'intero oggetto <see cref="T:System.Collections.Generic.List`1" /> in una matrice compatibile unidimensionale, a partire dall'inizio della matrice di destinazione.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">Oggetto <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.Generic.List`1" />. L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the source &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; is greater than the number of elements that the destination &lt;paramref name=&quot;array&quot; /&gt; can contain.">Il numero di elementi nell'oggetto <see cref="T:System.Collections.Generic.List`1" /> di origine è maggiore del numero di elementi che l'oggetto <paramref name="array" /> di destinazione può contenere.</exception>
    </member>
    <member name="M:System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)">
      <summary vsli:raw="Copies the entire &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; to a compatible one-dimensional array, starting at the specified index of the target array.">Copia l'intero oggetto <see cref="T:System.Collections.Generic.List`1" /> in una matrice compatibile unidimensionale, a partire dall'indice specificato della matrice di destinazione.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">Oggetto <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.Generic.List`1" />. L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</param>
      <param name="arrayIndex" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;arrayIndex&quot; /&gt; is less than 0.">
        <paramref name="arrayIndex" /> è minore di 0.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the source &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;arrayIndex&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">Il numero di elementi nell'oggetto <see cref="T:System.Collections.Generic.List`1" /> di origine è maggiore dello spazio disponibile tra <paramref name="arrayIndex" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="M:System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies a range of elements from the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; to a compatible one-dimensional array, starting at the specified index of the target array.">Copia un intervallo di elementi da <see cref="T:System.Collections.Generic.List`1" /> in una matrice compatibile unidimensionale, a partire dall'indice specificato della matrice di destinazione.</summary>
      <param name="index" vsli:raw="The zero-based index in the source &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; at which copying begins.">Indice in base zero dell'oggetto <see cref="T:System.Collections.Generic.List`1" /> di origine a partire dal quale viene effettuata la copia.</param>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">Oggetto <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.Generic.List`1" />. L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</param>
      <param name="arrayIndex" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <param name="count" vsli:raw="The number of elements to copy.">Numero degli elementi da copiare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;arrayIndex&quot; /&gt; is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;count&quot; /&gt; is less than 0.">
        <paramref name="index" /> è minore di 0.  
In alternativa 
 <paramref name="arrayIndex" /> è minore di 0.  
-oppure- 
 <paramref name="count" /> è minore di 0.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is equal to or greater than the &lt;see cref=&quot;P:System.Collections.Generic.List`1.Count&quot; /&gt; of the source &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements from &lt;paramref name=&quot;index&quot; /&gt; to the end of the source &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;arrayIndex&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="index" /> è maggiore o uguale al valore di <see cref="P:System.Collections.Generic.List`1.Count" /> dell'oggetto <see cref="T:System.Collections.Generic.List`1" /> di origine.  
-oppure- 
Il numero di elementi da <paramref name="index" /> alla fine dell'oggetto <see cref="T:System.Collections.Generic.List`1" /> di origine è maggiore dello spazio disponibile da <paramref name="arrayIndex" /> alla fine dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="P:System.Collections.Generic.List`1.Count">
      <summary vsli:raw="Gets the number of elements contained in the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;.">Ottiene il numero di elementi contenuti in <see cref="T:System.Collections.Generic.List`1" />.</summary>
      <returns vsli:raw="The number of elements contained in the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;.">Il numero di elementi contenuti in <see cref="T:System.Collections.Generic.List`1" />.</returns>
    </member>
    <member name="T:System.Collections.Generic.List`1.Enumerator">
      <summary vsli:raw="Enumerates the elements of a &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;.">Enumera gli elementi di un oggetto <see cref="T:System.Collections.Generic.List`1" />.</summary>
      <typeparam name="T" vsli:raw="" />
    </member>
    <member name="P:System.Collections.Generic.List`1.Enumerator.Current">
      <summary vsli:raw="Gets the element at the current position of the enumerator.">Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <returns vsli:raw="The element in the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; at the current position of the enumerator.">Elemento dell'insieme <see cref="T:System.Collections.Generic.List`1" /> in corrispondenza della posizione corrente dell'enumeratore.</returns>
    </member>
    <member name="M:System.Collections.Generic.List`1.Enumerator.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.Collections.Generic.List`1.Enumerator&quot; /&gt;.">Rilascia tutte le risorse usate da <see cref="T:System.Collections.Generic.List`1.Enumerator" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.List`1.Enumerator.MoveNext">
      <summary vsli:raw="Advances the enumerator to the next element of the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;.">Sposta l'enumeratore all'elemento successivo dell'oggetto <see cref="T:System.Collections.Generic.List`1" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the enumerator was successfully advanced to the next element; &lt;see langword=&quot;false&quot; /&gt; if the enumerator has passed the end of the collection.">
        <see langword="true" /> se l'enumeratore è stato spostato correttamente in avanti in corrispondenza dell'elemento successivo, <see langword="false" /> se l'enumeratore ha superato la fine della raccolta.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The collection was modified after the enumerator was created.">La raccolta è stata modificata dopo la creazione dell'enumeratore.</exception>
    </member>
    <member name="P:System.Collections.Generic.List`1.Enumerator.System#Collections#IEnumerator#Current">
      <summary vsli:raw="Gets the element at the current position of the enumerator.">Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <returns vsli:raw="The element in the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; at the current position of the enumerator.">Elemento dell'insieme <see cref="T:System.Collections.Generic.List`1" /> in corrispondenza della posizione corrente dell'enumeratore.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The enumerator is positioned before the first element of the collection or after the last element.">L'enumeratore è posizionato prima del primo elemento della raccolta o dopo l'ultimo elemento.</exception>
    </member>
    <member name="M:System.Collections.Generic.List`1.Enumerator.System#Collections#IEnumerator#Reset">
      <summary vsli:raw="Sets the enumerator to its initial position, which is before the first element in the collection.">Imposta l'enumeratore sulla propria posizione iniziale, ovvero prima del primo elemento nella raccolta.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The collection was modified after the enumerator was created.">La raccolta è stata modificata dopo la creazione dell'enumeratore.</exception>
    </member>
    <member name="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; contains elements that match the conditions defined by the specified predicate.">Determina se <see cref="T:System.Collections.Generic.List`1" /> contiene gli elementi che corrispondono alle condizioni definite dal predicato specificato.</summary>
      <param name="match" vsli:raw="The &lt;see cref=&quot;T:System.Predicate`1&quot; /&gt; delegate that defines the conditions of the elements to search for.">Delegato <see cref="T:System.Predicate`1" /> che definisce le condizioni degli elementi da cercare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; contains one or more elements that match the conditions defined by the specified predicate; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="T:System.Collections.Generic.List`1" /> contiene uno o più elementi che corrispondono alle condizioni definite dal predicato specificato; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;match&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="match" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})">
      <summary vsli:raw="Searches for an element that matches the conditions defined by the specified predicate, and returns the first occurrence within the entire &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;.">Cerca un elemento che soddisfi le condizioni definite nel predicato specificato e restituisce la prima occorrenza all'interno dell'intero oggetto <see cref="T:System.Collections.Generic.List`1" />.</summary>
      <param name="match" vsli:raw="The &lt;see cref=&quot;T:System.Predicate`1&quot; /&gt; delegate that defines the conditions of the element to search for.">Delegato <see cref="T:System.Predicate`1" /> che definisce le condizioni dell'elemento da cercare.</param>
      <returns vsli:raw="The first element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type &lt;paramref name=&quot;T&quot; /&gt;.">Primo elemento che soddisfa le condizioni definite dal predicato specificato, se trovato; in caso contrario, viene restituito il valore predefinito del tipo <paramref name="T" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;match&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="match" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})">
      <summary vsli:raw="Retrieves all the elements that match the conditions defined by the specified predicate.">Recupera tutti gli elementi che soddisfano le condizioni definite nel predicato specificato.</summary>
      <param name="match" vsli:raw="The &lt;see cref=&quot;T:System.Predicate`1&quot; /&gt; delegate that defines the conditions of the elements to search for.">Delegato <see cref="T:System.Predicate`1" /> che definisce le condizioni degli elementi da cercare.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; containing all the elements that match the conditions defined by the specified predicate, if found; otherwise, an empty &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;.">Oggetto <see cref="T:System.Collections.Generic.List`1" /> contenente tutti gli elementi che corrispondono alle condizioni definite dal predicato specificato, se presente. In caso contrario, un oggetto <see cref="T:System.Collections.Generic.List`1" /> vuoto.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;match&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="match" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})">
      <summary vsli:raw="Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the range of elements in the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; that starts at the specified index and contains the specified number of elements.">Cerca un elemento che soddisfi le condizioni definite dal predicato specificato e restituisce l'indice in base zero della prima occorrenza all'interno dell'intervallo di elementi nell'oggetto <see cref="T:System.Collections.Generic.List`1" /> che inizia dall'indice specificato e contiene il numero indicato di elementi.</summary>
      <param name="startIndex" vsli:raw="The zero-based starting index of the search.">Indice iniziale in base zero della ricerca.</param>
      <param name="count" vsli:raw="The number of elements in the section to search.">Numero di elementi nella sezione in cui eseguire la ricerca.</param>
      <param name="match" vsli:raw="The &lt;see cref=&quot;T:System.Predicate`1&quot; /&gt; delegate that defines the conditions of the element to search for.">Delegato <see cref="T:System.Predicate`1" /> che definisce le condizioni dell'elemento da cercare.</param>
      <returns vsli:raw="The zero-based index of the first occurrence of an element that matches the conditions defined by &lt;paramref name=&quot;match&quot; /&gt;, if found; otherwise, -1.">Indice in base zero della prima occorrenza di un elemento che corrisponde alle condizioni definite da <paramref name="match" />, se presente; in caso contrario, -1.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;match&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="match" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startIndex&quot; /&gt; is outside the range of valid indexes for the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;count&quot; /&gt; is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;startIndex&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not specify a valid section in the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;.">
        <paramref name="startIndex" /> non è compreso nell'intervallo di indici validi per <see cref="T:System.Collections.Generic.List`1" />.  
In alternativa 
 <paramref name="count" /> è minore di 0.  
In alternativa 
 <paramref name="startIndex" /> e <paramref name="count" /> non specificano una sezione valida in <see cref="T:System.Collections.Generic.List`1" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})">
      <summary vsli:raw="Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the range of elements in the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; that extends from the specified index to the last element.">Cerca un elemento che soddisfi le condizioni definite dal predicato specificato e restituisce l'indice in base zero della prima occorrenza all'interno dell'intervallo di elementi nell'oggetto <see cref="T:System.Collections.Generic.List`1" /> compreso tra l'indice specificato e l'ultimo elemento.</summary>
      <param name="startIndex" vsli:raw="The zero-based starting index of the search.">Indice iniziale in base zero della ricerca.</param>
      <param name="match" vsli:raw="The &lt;see cref=&quot;T:System.Predicate`1&quot; /&gt; delegate that defines the conditions of the element to search for.">Delegato <see cref="T:System.Predicate`1" /> che definisce le condizioni dell'elemento da cercare.</param>
      <returns vsli:raw="The zero-based index of the first occurrence of an element that matches the conditions defined by &lt;paramref name=&quot;match&quot; /&gt;, if found; otherwise, -1.">Indice in base zero della prima occorrenza di un elemento che corrisponde alle condizioni definite da <paramref name="match" />, se presente; in caso contrario, -1.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;match&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="match" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startIndex&quot; /&gt; is outside the range of valid indexes for the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;.">
        <paramref name="startIndex" /> non è compreso nell'intervallo di indici validi per <see cref="T:System.Collections.Generic.List`1" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})">
      <summary vsli:raw="Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the entire &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;.">Cerca un elemento che corrisponda alle condizioni definite dal predicato specificato e restituisce l'indice in base zero della prima occorrenza all'interno di <see cref="T:System.Collections.Generic.List`1" />.</summary>
      <param name="match" vsli:raw="The &lt;see cref=&quot;T:System.Predicate`1&quot; /&gt; delegate that defines the conditions of the element to search for.">Delegato <see cref="T:System.Predicate`1" /> che definisce le condizioni dell'elemento da cercare.</param>
      <returns vsli:raw="The zero-based index of the first occurrence of an element that matches the conditions defined by &lt;paramref name=&quot;match&quot; /&gt;, if found; otherwise, -1.">Indice in base zero della prima occorrenza di un elemento che corrisponde alle condizioni definite da <paramref name="match" />, se presente; in caso contrario, -1.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;match&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="match" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})">
      <summary vsli:raw="Searches for an element that matches the conditions defined by the specified predicate, and returns the last occurrence within the entire &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;.">Cerca un elemento che soddisfi le condizioni definite nel predicato specificato e restituisce l'ultima occorrenza all'interno dell'intero oggetto <see cref="T:System.Collections.Generic.List`1" />.</summary>
      <param name="match" vsli:raw="The &lt;see cref=&quot;T:System.Predicate`1&quot; /&gt; delegate that defines the conditions of the element to search for.">Delegato <see cref="T:System.Predicate`1" /> che definisce le condizioni dell'elemento da cercare.</param>
      <returns vsli:raw="The last element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type &lt;paramref name=&quot;T&quot; /&gt;.">Ultimo elemento che soddisfa le condizioni definite dal predicato specificato, se trovato; in caso contrario, viene restituito il valore predefinito del tipo <paramref name="T" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;match&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="match" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})">
      <summary vsli:raw="Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the range of elements in the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; that contains the specified number of elements and ends at the specified index.">Cerca un elemento che soddisfi le condizioni definite nel predicato specificato e restituisce l'indice in base zero dell'ultima occorrenza all'interno dell'intervallo di elementi dell'oggetto <see cref="T:System.Collections.Generic.List`1" /> che contiene il numero indicato di elementi e termina in corrispondenza dell'indice specificato.</summary>
      <param name="startIndex" vsli:raw="The zero-based starting index of the backward search.">Indice iniziale in base zero della ricerca all'indietro.</param>
      <param name="count" vsli:raw="The number of elements in the section to search.">Numero di elementi nella sezione in cui eseguire la ricerca.</param>
      <param name="match" vsli:raw="The &lt;see cref=&quot;T:System.Predicate`1&quot; /&gt; delegate that defines the conditions of the element to search for.">Delegato <see cref="T:System.Predicate`1" /> che definisce le condizioni dell'elemento da cercare.</param>
      <returns vsli:raw="The zero-based index of the last occurrence of an element that matches the conditions defined by &lt;paramref name=&quot;match&quot; /&gt;, if found; otherwise, -1.">Indice in base zero dell'ultima occorrenza di un elemento che corrisponde alle condizioni definite in <paramref name="match" />, se presente; in caso contrario, -1.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;match&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="match" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startIndex&quot; /&gt; is outside the range of valid indexes for the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;count&quot; /&gt; is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;startIndex&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not specify a valid section in the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;.">
        <paramref name="startIndex" /> non è compreso nell'intervallo di indici validi per <see cref="T:System.Collections.Generic.List`1" />.  
-oppure- 
 <paramref name="count" /> è minore di 0.  
In alternativa 
 <paramref name="startIndex" /> e <paramref name="count" /> non specificano una sezione valida in <see cref="T:System.Collections.Generic.List`1" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})">
      <summary vsli:raw="Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the range of elements in the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; that extends from the first element to the specified index.">Cerca un elemento che soddisfi le condizioni definite dal predicato specificato e restituisce l'indice in base zero dell'ultima occorrenza all'interno dell'intervallo di elementi in <see cref="T:System.Collections.Generic.List`1" /> compreso tra il primo elemento e l'indice specificato.</summary>
      <param name="startIndex" vsli:raw="The zero-based starting index of the backward search.">Indice iniziale in base zero della ricerca all'indietro.</param>
      <param name="match" vsli:raw="The &lt;see cref=&quot;T:System.Predicate`1&quot; /&gt; delegate that defines the conditions of the element to search for.">Delegato <see cref="T:System.Predicate`1" /> che definisce le condizioni dell'elemento da cercare.</param>
      <returns vsli:raw="The zero-based index of the last occurrence of an element that matches the conditions defined by &lt;paramref name=&quot;match&quot; /&gt;, if found; otherwise, -1.">Indice in base zero dell'ultima occorrenza di un elemento che corrisponde alle condizioni definite in <paramref name="match" />, se presente; in caso contrario, -1.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;match&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="match" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startIndex&quot; /&gt; is outside the range of valid indexes for the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;.">
        <paramref name="startIndex" /> non è compreso nell'intervallo di indici validi per <see cref="T:System.Collections.Generic.List`1" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})">
      <summary vsli:raw="Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the entire &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;.">Cerca un elemento che soddisfi le condizioni definite nel predicato specificato e restituisce l'indice in base zero dell'ultima occorrenza all'interno dell'intera matrice <see cref="T:System.Collections.Generic.List`1" />.</summary>
      <param name="match" vsli:raw="The &lt;see cref=&quot;T:System.Predicate`1&quot; /&gt; delegate that defines the conditions of the element to search for.">Delegato <see cref="T:System.Predicate`1" /> che definisce le condizioni dell'elemento da cercare.</param>
      <returns vsli:raw="The zero-based index of the last occurrence of an element that matches the conditions defined by &lt;paramref name=&quot;match&quot; /&gt;, if found; otherwise, -1.">Indice in base zero dell'ultima occorrenza di un elemento che corrisponde alle condizioni definite in <paramref name="match" />, se presente; in caso contrario, -1.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;match&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="match" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.List`1.ForEach(System.Action{`0})">
      <summary vsli:raw="Performs the specified action on each element of the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;.">Esegue l'azione specificata su ciascun elemento di <see cref="T:System.Collections.Generic.List`1" />.</summary>
      <param name="action" vsli:raw="The &lt;see cref=&quot;T:System.Action`1&quot; /&gt; delegate to perform on each element of the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;.">Delegato <see cref="T:System.Action`1" /> da eseguire su ciascun elemento di <see cref="T:System.Collections.Generic.List`1" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;action&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="action" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An element in the collection has been modified.">Un elemento nella raccolta è stato modificato.</exception>
    </member>
    <member name="M:System.Collections.Generic.List`1.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;.">Restituisce un enumeratore che esegue l'iterazione di <see cref="T:System.Collections.Generic.List`1" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.List`1.Enumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;.">Oggetto <see cref="T:System.Collections.Generic.List`1.Enumerator" /> per l'insieme <see cref="T:System.Collections.Generic.List`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)">
      <summary vsli:raw="Creates a shallow copy of a range of elements in the source &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;.">Crea una copia dei riferimenti di un intervallo di elementi nella classe <see cref="T:System.Collections.Generic.List`1" /> di origine.</summary>
      <param name="index" vsli:raw="The zero-based &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; index at which the range starts.">Indice in base zero di <see cref="T:System.Collections.Generic.List`1" /> in corrispondenza del quale inizia la serie.</param>
      <param name="count" vsli:raw="The number of elements in the range.">Numero di elementi nell'intervallo.</param>
      <returns vsli:raw="A shallow copy of a range of elements in the source &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;.">Copia dei riferimenti di un intervallo di elementi nella classe <see cref="T:System.Collections.Generic.List`1" /> di origine.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;count&quot; /&gt; is less than 0.">
        <paramref name="index" /> è minore di 0.  
In alternativa 
 <paramref name="count" /> è minore di 0.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range of elements in the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;.">
        <paramref name="index" /> e <paramref name="count" /> non indicano un intervallo valido di elementi nell'oggetto <see cref="T:System.Collections.Generic.List`1" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.List`1.IndexOf(`0)">
      <summary vsli:raw="Searches for the specified object and returns the zero-based index of the first occurrence within the entire &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;.">Cerca l'oggetto specificato e restituisce l'indice in base zero della prima occorrenza nell'intera classe <see cref="T:System.Collections.Generic.List`1" />.</summary>
      <param name="item" vsli:raw="The object to locate in the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;. The value can be &lt;see langword=&quot;null&quot; /&gt; for reference types.">Oggetto da individuare nella raccolta <see cref="T:System.Collections.Generic.List`1" />. Il valore può essere <see langword="null" /> per i tipi di riferimento.</param>
      <returns vsli:raw="The zero-based index of the first occurrence of &lt;paramref name=&quot;item&quot; /&gt; within the entire &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;, if found; otherwise, -1.">Indice in base zero della prima occorrenza di <paramref name="item" /> all'interno dell'intero oggetto <see cref="T:System.Collections.Generic.List`1" />, se presente; in caso contrario, -1.</returns>
    </member>
    <member name="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32)">
      <summary vsli:raw="Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; that extends from the specified index to the last element.">Cerca l'oggetto specificato e restituisce l'indice in base zero della prima occorrenza all'interno dell'intervallo di elementi nell'oggetto <see cref="T:System.Collections.Generic.List`1" /> che è compreso tra l'indice specificato e l'ultimo elemento.</summary>
      <param name="item" vsli:raw="The object to locate in the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;. The value can be &lt;see langword=&quot;null&quot; /&gt; for reference types.">Oggetto da individuare nella raccolta <see cref="T:System.Collections.Generic.List`1" />. Il valore può essere <see langword="null" /> per i tipi di riferimento.</param>
      <param name="index" vsli:raw="The zero-based starting index of the search. 0 (zero) is valid in an empty list.">Indice iniziale in base zero della ricerca. 0 (zero) è valido in un elenco vuoto.</param>
      <returns vsli:raw="The zero-based index of the first occurrence of &lt;paramref name=&quot;item&quot; /&gt; within the range of elements in the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; that extends from &lt;paramref name=&quot;index&quot; /&gt; to the last element, if found; otherwise, -1.">Indice in base zero della prima occorrenza di <paramref name="item" /> all'interno dell'intervallo di elementi dell'oggetto <see cref="T:System.Collections.Generic.List`1" /> compreso tra <paramref name="index" /> e l'ultimo elemento, se presente; in caso contrario, -1.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is outside the range of valid indexes for the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;.">
        <paramref name="index" /> non è compreso nell'intervallo di indici validi per <see cref="T:System.Collections.Generic.List`1" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)">
      <summary vsli:raw="Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; that starts at the specified index and contains the specified number of elements.">Cerca l'oggetto specificato e restituisce l'indice in base zero della prima occorrenza all'interno dell'intervallo di elementi nell'oggetto <see cref="T:System.Collections.Generic.List`1" /> che inizia in corrispondenza dell'indice specificato e contiene il numero di elementi specificato.</summary>
      <param name="item" vsli:raw="The object to locate in the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;. The value can be &lt;see langword=&quot;null&quot; /&gt; for reference types.">Oggetto da individuare nella raccolta <see cref="T:System.Collections.Generic.List`1" />. Il valore può essere <see langword="null" /> per i tipi di riferimento.</param>
      <param name="index" vsli:raw="The zero-based starting index of the search. 0 (zero) is valid in an empty list.">Indice iniziale in base zero della ricerca. 0 (zero) è valido in un elenco vuoto.</param>
      <param name="count" vsli:raw="The number of elements in the section to search.">Numero di elementi nella sezione in cui eseguire la ricerca.</param>
      <returns vsli:raw="The zero-based index of the first occurrence of &lt;paramref name=&quot;item&quot; /&gt; within the range of elements in the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; that starts at &lt;paramref name=&quot;index&quot; /&gt; and contains &lt;paramref name=&quot;count&quot; /&gt; number of elements, if found; otherwise, -1.">Indice in base zero della prima occorrenza di <paramref name="item" /> all'interno dell'intervallo di elementi dell'oggetto <see cref="T:System.Collections.Generic.List`1" /> che inizia da <paramref name="index" /> e contiene il numero di elementi corrispondente a <paramref name="count" />, se presente; in caso contrario, -1.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is outside the range of valid indexes for the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;count&quot; /&gt; is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not specify a valid section in the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;.">
        <paramref name="index" /> non è compreso nell'intervallo di indici validi per <see cref="T:System.Collections.Generic.List`1" />.  
-oppure- 
 <paramref name="count" /> è minore di 0.  
-oppure- 
 <paramref name="index" /> e <paramref name="count" /> non specificano una sezione valida in <see cref="T:System.Collections.Generic.List`1" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.List`1.Insert(System.Int32,`0)">
      <summary vsli:raw="Inserts an element into the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; at the specified index.">Inserisce un elemento in <see cref="T:System.Collections.Generic.List`1" /> in corrispondenza dell'indice specificato.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;item&quot; /&gt; should be inserted.">Indice in base zero nel quale <paramref name="item" /> deve essere inserito.</param>
      <param name="item" vsli:raw="The object to insert. The value can be &lt;see langword=&quot;null&quot; /&gt; for reference types.">Oggetto da inserire. Il valore può essere <see langword="null" /> per i tipi di riferimento.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is greater than &lt;see cref=&quot;P:System.Collections.Generic.List`1.Count&quot; /&gt;.">
        <paramref name="index" /> è minore di 0.  
-oppure- 
 <paramref name="index" /> è maggiore di <see cref="P:System.Collections.Generic.List`1.Count" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
      <summary vsli:raw="Inserts the elements of a collection into the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; at the specified index.">Inserisce gli elementi di una raccolta in <see cref="T:System.Collections.Generic.List`1" /> in corrispondenza dell'indice specificato.</summary>
      <param name="index" vsli:raw="The zero-based index at which the new elements should be inserted.">Indice in base zero in corrispondenza del quale devono essere inseriti i nuovi elementi.</param>
      <param name="collection" vsli:raw="The collection whose elements should be inserted into the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;. The collection itself cannot be &lt;see langword=&quot;null&quot; /&gt;, but it can contain elements that are &lt;see langword=&quot;null&quot; /&gt;, if type &lt;paramref name=&quot;T&quot; /&gt; is a reference type.">Raccolta i cui elementi devono essere inseriti in <see cref="T:System.Collections.Generic.List`1" />. La raccolta stessa non può essere <see langword="null" />, ma può contenere elementi <see langword="null" />, se il tipo <paramref name="T" /> è un tipo di riferimento.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;collection&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="collection" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is greater than &lt;see cref=&quot;P:System.Collections.Generic.List`1.Count&quot; /&gt;.">
        <paramref name="index" /> è minore di 0.  
-oppure- 
 <paramref name="index" /> è maggiore di <see cref="P:System.Collections.Generic.List`1.Count" />.</exception>
    </member>
    <member name="P:System.Collections.Generic.List`1.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">Ottiene o imposta l'elemento in corrispondenza dell'indice specificato.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to get or set.">Indice in base zero dell'elemento da ottenere o impostare.</param>
      <returns vsli:raw="The element at the specified index.">Elemento in corrispondenza dell'indice specificato.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is equal to or greater than &lt;see cref=&quot;P:System.Collections.Generic.List`1.Count&quot; /&gt;.">
        <paramref name="index" /> è minore di 0.  
In alternativa 
 <paramref name="index" /> è uguale a o maggiore di <see cref="P:System.Collections.Generic.List`1.Count" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.List`1.LastIndexOf(`0)">
      <summary vsli:raw="Searches for the specified object and returns the zero-based index of the last occurrence within the entire &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;.">Cerca l'oggetto specificato e restituisce l'indice in base zero dell'ultima occorrenza nell'intera classe <see cref="T:System.Collections.Generic.List`1" />.</summary>
      <param name="item" vsli:raw="The object to locate in the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;. The value can be &lt;see langword=&quot;null&quot; /&gt; for reference types.">Oggetto da individuare nella raccolta <see cref="T:System.Collections.Generic.List`1" />. Il valore può essere <see langword="null" /> per i tipi di riferimento.</param>
      <returns vsli:raw="The zero-based index of the last occurrence of &lt;paramref name=&quot;item&quot; /&gt; within the entire the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;, if found; otherwise, -1.">Indice in base zero dell'ultima occorrenza di <paramref name="item" /> all'interno dell'intero oggetto <see cref="T:System.Collections.Generic.List`1" />, se presente; in caso contrario, –1.</returns>
    </member>
    <member name="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)">
      <summary vsli:raw="Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; that extends from the first element to the specified index.">Cerca l'oggetto specificato e restituisce l'indice in base zero dell'ultima occorrenza all'interno dell'intervallo di elementi nella classe <see cref="T:System.Collections.Generic.List`1" /> che è compresa tra il primo elemento e l'indice specificato.</summary>
      <param name="item" vsli:raw="The object to locate in the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;. The value can be &lt;see langword=&quot;null&quot; /&gt; for reference types.">Oggetto da individuare nella raccolta <see cref="T:System.Collections.Generic.List`1" />. Il valore può essere <see langword="null" /> per i tipi di riferimento.</param>
      <param name="index" vsli:raw="The zero-based starting index of the backward search.">Indice iniziale in base zero della ricerca all'indietro.</param>
      <returns vsli:raw="The zero-based index of the last occurrence of &lt;paramref name=&quot;item&quot; /&gt; within the range of elements in the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; that extends from the first element to &lt;paramref name=&quot;index&quot; /&gt;, if found; otherwise, -1.">Indice in base zero dell'ultima occorrenza di <paramref name="item" /> all'interno dell'intervallo di elementi dell'oggetto <see cref="T:System.Collections.Generic.List`1" /> compreso tra il primo elemento e <paramref name="index" />, se presente; in caso contrario, –1.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is outside the range of valid indexes for the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;.">
        <paramref name="index" /> non è compreso nell'intervallo di indici validi per <see cref="T:System.Collections.Generic.List`1" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)">
      <summary vsli:raw="Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; that contains the specified number of elements and ends at the specified index.">Cerca l'oggetto specificato e restituisce l'indice in base zero dell'ultima occorrenza all'interno dell'intervallo di elementi della classe <see cref="T:System.Collections.Generic.List`1" /> che contiene il numero di elementi specificato e termina in corrispondenza dell'indice specificato.</summary>
      <param name="item" vsli:raw="The object to locate in the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;. The value can be &lt;see langword=&quot;null&quot; /&gt; for reference types.">Oggetto da individuare nella raccolta <see cref="T:System.Collections.Generic.List`1" />. Il valore può essere <see langword="null" /> per i tipi di riferimento.</param>
      <param name="index" vsli:raw="The zero-based starting index of the backward search.">Indice iniziale in base zero della ricerca all'indietro.</param>
      <param name="count" vsli:raw="The number of elements in the section to search.">Numero di elementi nella sezione in cui eseguire la ricerca.</param>
      <returns vsli:raw="The zero-based index of the last occurrence of &lt;paramref name=&quot;item&quot; /&gt; within the range of elements in the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; that contains &lt;paramref name=&quot;count&quot; /&gt; number of elements and ends at &lt;paramref name=&quot;index&quot; /&gt;, if found; otherwise, -1.">Indice in base zero dell'ultima occorrenza di <paramref name="item" /> all'interno dell'intervallo di elementi in <see cref="T:System.Collections.Generic.List`1" /> che contiene un numero di elementi corrispondente a <paramref name="count" /> e termina in corrispondenza di <paramref name="index" />, se presente; in caso contrario, -1.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is outside the range of valid indexes for the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;count&quot; /&gt; is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not specify a valid section in the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;.">
        <paramref name="index" /> non è compreso nell'intervallo di indici validi per <see cref="T:System.Collections.Generic.List`1" />.  
-oppure- 
 <paramref name="count" /> è minore di 0.  
-oppure- 
 <paramref name="index" /> e <paramref name="count" /> non specificano una sezione valida in <see cref="T:System.Collections.Generic.List`1" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.List`1.Remove(`0)">
      <summary vsli:raw="Removes the first occurrence of a specific object from the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;.">Rimuove la prima occorrenza di un oggetto specifico da <see cref="T:System.Collections.Generic.List`1" />.</summary>
      <param name="item" vsli:raw="The object to remove from the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;. The value can be &lt;see langword=&quot;null&quot; /&gt; for reference types.">Oggetto da rimuovere da <see cref="T:System.Collections.Generic.List`1" />. Il valore può essere <see langword="null" /> per i tipi di riferimento.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;item&quot; /&gt; is successfully removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  This method also returns &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;item&quot; /&gt; was not found in the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;.">
        <see langword="true" /> se <paramref name="item" /> viene rimosso correttamente; in caso contrario, <see langword="false" />.  Questo metodo restituisce anche <see langword="false" /> se <paramref name="item" /> non è stato trovato nell'oggetto <see cref="T:System.Collections.Generic.List`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})">
      <summary vsli:raw="Removes all the elements that match the conditions defined by the specified predicate.">Rimuove tutti gli elementi che corrispondono alle condizioni definite dal predicato specificato.</summary>
      <param name="match" vsli:raw="The &lt;see cref=&quot;T:System.Predicate`1&quot; /&gt; delegate that defines the conditions of the elements to remove.">Delegato <see cref="T:System.Predicate`1" /> che definisce le condizioni degli elementi da rimuovere.</param>
      <returns vsli:raw="The number of elements removed from the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;.">Numero di elementi rimossi da <see cref="T:System.Collections.Generic.List`1" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;match&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="match" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.List`1.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the element at the specified index of the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;.">Rimuove l'elemento in corrispondenza dell'indice specificato di <see cref="T:System.Collections.Generic.List`1" />.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to remove.">Indice in base zero dell'elemento da rimuovere.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is equal to or greater than &lt;see cref=&quot;P:System.Collections.Generic.List`1.Count&quot; /&gt;.">
        <paramref name="index" /> è minore di 0.  
In alternativa 
 <paramref name="index" /> è uguale a o maggiore di <see cref="P:System.Collections.Generic.List`1.Count" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)">
      <summary vsli:raw="Removes a range of elements from the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;.">Rimuove un intervallo di elementi da <see cref="T:System.Collections.Generic.List`1" />.</summary>
      <param name="index" vsli:raw="The zero-based starting index of the range of elements to remove.">Indice iniziale in base zero dell'intervallo di elementi da rimuovere.</param>
      <param name="count" vsli:raw="The number of elements to remove.">Numero di elementi da rimuovere.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;count&quot; /&gt; is less than 0.">
        <paramref name="index" /> è minore di 0.  
In alternativa 
 <paramref name="count" /> è minore di 0.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range of elements in the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;.">
        <paramref name="index" /> e <paramref name="count" /> non indicano un intervallo valido di elementi nell'oggetto <see cref="T:System.Collections.Generic.List`1" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.List`1.Reverse">
      <summary vsli:raw="Reverses the order of the elements in the entire &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;.">Inverte l'ordine degli elementi nell'intero <see cref="T:System.Collections.Generic.List`1" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)">
      <summary vsli:raw="Reverses the order of the elements in the specified range.">Inverte l'ordine degli elementi nell'intervallo specificato.</summary>
      <param name="index" vsli:raw="The zero-based starting index of the range to reverse.">Indice iniziale in base zero dell'intervallo da invertire.</param>
      <param name="count" vsli:raw="The number of elements in the range to reverse.">Numero di elementi nell'intervallo da invertire.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;count&quot; /&gt; is less than 0.">
        <paramref name="index" /> è minore di 0.  
-oppure- 
 <paramref name="count" /> è minore di 0.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range of elements in the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;.">
        <paramref name="index" /> e <paramref name="count" /> non indicano un intervallo valido di elementi nell'oggetto <see cref="T:System.Collections.Generic.List`1" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.List`1.Sort">
      <summary vsli:raw="Sorts the elements in the entire &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; using the default comparer.">Ordina gli elementi dell'intero oggetto <see cref="T:System.Collections.Generic.List`1" /> utilizzando l'operatore di confronto predefinito.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The default comparer &lt;see cref=&quot;P:System.Collections.Generic.Comparer`1.Default&quot; /&gt; cannot find an implementation of the &lt;see cref=&quot;T:System.IComparable`1&quot; /&gt; generic interface or the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; interface for type &lt;paramref name=&quot;T&quot; /&gt;.">Mediante la proprietà <see cref="P:System.Collections.Generic.Comparer`1.Default" /> dell'operatore di confronto predefinito non è possibile rilevare un'implementazione dell'interfaccia generica <see cref="T:System.IComparable`1" /> o dell'interfaccia <see cref="T:System.IComparable" /> per il tipo <paramref name="T" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})">
      <summary vsli:raw="Sorts the elements in the entire &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; using the specified comparer.">Ordina gli elementi dell'intero <see cref="T:System.Collections.Generic.List`1" /> usando l'operatore di confronto specificato.</summary>
      <param name="comparer" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; implementation to use when comparing elements, or &lt;see langword=&quot;null&quot; /&gt; to use the default comparer &lt;see cref=&quot;P:System.Collections.Generic.Comparer`1.Default&quot; /&gt;.">Implementazione <see cref="T:System.Collections.Generic.IComparer`1" /> da usare durante il confronto di elementi oppure <see langword="null" /> per usare la proprietà <see cref="P:System.Collections.Generic.Comparer`1.Default" /> dell'operatore di confronto.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;comparer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, and the default comparer &lt;see cref=&quot;P:System.Collections.Generic.Comparer`1.Default&quot; /&gt; cannot find implementation of the &lt;see cref=&quot;T:System.IComparable`1&quot; /&gt; generic interface or the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; interface for type &lt;paramref name=&quot;T&quot; /&gt;.">
        <paramref name="comparer" /> è <see langword="null" /> e l'operatore di confronto predefinito <see cref="P:System.Collections.Generic.Comparer`1.Default" /> non riesce a trovare l'implementazione dell'interfaccia generica <see cref="T:System.IComparable`1" /> o l'interfaccia <see cref="T:System.IComparable" /> per il tipo <paramref name="T" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The implementation of &lt;paramref name=&quot;comparer&quot; /&gt; caused an error during the sort. For example, &lt;paramref name=&quot;comparer&quot; /&gt; might not return 0 when comparing an item with itself.">L'implementazione di <paramref name="comparer" /> ha causato un errore durante l'ordinamento. Ad esempio, <paramref name="comparer" /> potrebbe non restituire 0 quando si confronta un elemento con se stesso.</exception>
    </member>
    <member name="M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})">
      <summary vsli:raw="Sorts the elements in the entire &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Comparison`1&quot; /&gt;.">Ordina gli elementi nell'intera classe <see cref="T:System.Collections.Generic.List`1" /> usando l'oggetto <see cref="T:System.Comparison`1" /> specificato.</summary>
      <param name="comparison" vsli:raw="The &lt;see cref=&quot;T:System.Comparison`1&quot; /&gt; to use when comparing elements.">Oggetto <see cref="T:System.Comparison`1" /> da usare quando si confrontano gli elementi.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;comparison&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="comparison" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The implementation of &lt;paramref name=&quot;comparison&quot; /&gt; caused an error during the sort. For example, &lt;paramref name=&quot;comparison&quot; /&gt; might not return 0 when comparing an item with itself.">L'implementazione di <paramref name="comparison" /> ha causato un errore durante l'ordinamento. Ad esempio, <paramref name="comparison" /> potrebbe non restituire 0 quando si confronta un elemento con se stesso.</exception>
    </member>
    <member name="M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
      <summary vsli:raw="Sorts the elements in a range of elements in &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; using the specified comparer.">Ordina gli elementi di un intervallo di elementi di <see cref="T:System.Collections.Generic.List`1" /> usando l'operatore di confronto specificato.</summary>
      <param name="index" vsli:raw="The zero-based starting index of the range to sort.">Indice iniziale in base zero dell'intervallo da ordinare.</param>
      <param name="count" vsli:raw="The length of the range to sort.">Lunghezza dell'intervallo da ordinare.</param>
      <param name="comparer" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; implementation to use when comparing elements, or &lt;see langword=&quot;null&quot; /&gt; to use the default comparer &lt;see cref=&quot;P:System.Collections.Generic.Comparer`1.Default&quot; /&gt;.">Implementazione <see cref="T:System.Collections.Generic.IComparer`1" /> da usare durante il confronto di elementi oppure <see langword="null" /> per usare la proprietà <see cref="P:System.Collections.Generic.Comparer`1.Default" /> dell'operatore di confronto.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;count&quot; /&gt; is less than 0.">
        <paramref name="index" /> è minore di 0.  
In alternativa 
 <paramref name="count" /> è minore di 0.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not specify a valid range in the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The implementation of &lt;paramref name=&quot;comparer&quot; /&gt; caused an error during the sort. For example, &lt;paramref name=&quot;comparer&quot; /&gt; might not return 0 when comparing an item with itself.">
        <paramref name="index" /> e <paramref name="count" /> non specificano un intervallo valido in <see cref="T:System.Collections.Generic.List`1" />.  
-oppure- 
L'implementazione di <paramref name="comparer" /> ha causato un errore durante l'ordinamento. Ad esempio, <paramref name="comparer" /> potrebbe non restituire 0 quando si confronta un elemento con se stesso.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;comparer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, and the default comparer &lt;see cref=&quot;P:System.Collections.Generic.Comparer`1.Default&quot; /&gt; cannot find implementation of the &lt;see cref=&quot;T:System.IComparable`1&quot; /&gt; generic interface or the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; interface for type &lt;paramref name=&quot;T&quot; /&gt;.">
        <paramref name="comparer" /> è <see langword="null" /> e l'operatore di confronto predefinito <see cref="P:System.Collections.Generic.Comparer`1.Default" /> non riesce a trovare l'implementazione dell'interfaccia generica <see cref="T:System.IComparable`1" /> o l'interfaccia <see cref="T:System.IComparable" /> per il tipo <paramref name="T" />.</exception>
    </member>
    <member name="P:System.Collections.Generic.List`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; is read-only.">Ottiene un valore che indica se <see cref="T:System.Collections.Generic.ICollection`1" /> è di sola lettura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  In the default implementation of &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;, this property always returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="T:System.Collections.Generic.ICollection`1" /> è di sola lettura; in caso contrario, <see langword="false" />.  Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.List`1" />, questa proprietà restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through a collection.">Restituisce un enumeratore che consente di eseguire l'iterazione di una raccolta.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerator`1&quot; /&gt; that can be used to iterate through the collection.">Oggetto <see cref="T:System.Collections.Generic.IEnumerator`1" /> che può essere usato per eseguire l'iterazione della raccolta.</returns>
    </member>
    <member name="M:System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; to an &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at a particular &lt;see cref=&quot;T:System.Array&quot; /&gt; index.">Copia gli elementi di <see cref="T:System.Collections.ICollection" /> in <see cref="T:System.Array" /> a partire da un particolare indice <see cref="T:System.Array" />.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">Oggetto <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.ICollection" />. L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</param>
      <param name="arrayIndex" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;arrayIndex&quot; /&gt; is less than 0.">
        <paramref name="arrayIndex" /> è minore di 0.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;array&quot; /&gt; does not have zero-based indexing.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in the source &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;arrayIndex&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The type of the source &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> è multidimensionale.  
-oppure- 
 <paramref name="array" /> non dispone di indicizzazione in base zero.  
-oppure- 
Il numero di elementi nell'oggetto <see cref="T:System.Collections.ICollection" /> di origine è maggiore dello spazio disponibile tra <paramref name="arrayIndex" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.  
-oppure- 
Non è possibile eseguire il cast automatico del tipo dell'oggetto <see cref="T:System.Collections.ICollection" /> di origine al tipo dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="P:System.Collections.Generic.List`1.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe).">Ottiene un valore che indica se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;.  In the default implementation of &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;, this property always returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe); in caso contrario, <see langword="false" />.  Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.List`1" />, questa proprietà restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.List`1.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">Ottiene un oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.  In the default implementation of &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;, this property always returns the current instance.">Oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.  Nell'implementazione predefinita dell'oggetto <see cref="T:System.Collections.Generic.List`1" />, questa proprietà restituisce sempre l'istanza corrente.</returns>
    </member>
    <member name="M:System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through a collection.">Restituisce un enumeratore che consente di eseguire l'iterazione di una raccolta.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to iterate through the collection.">Oggetto <see cref="T:System.Collections.IEnumerator" /> che può essere usato per eseguire l'iterazione della raccolta.</returns>
    </member>
    <member name="M:System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)">
      <summary vsli:raw="Adds an item to the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">Aggiunge un elemento a <see cref="T:System.Collections.IList" />.</summary>
      <param name="item" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to add to the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">Oggetto <see cref="T:System.Object" /> da aggiungere a <see cref="T:System.Collections.IList" />.</param>
      <returns vsli:raw="The position into which the new element was inserted.">Posizione in cui è stato inserito il nuovo elemento.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;item&quot; /&gt; is of a type that is not assignable to the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">
        <paramref name="item" /> è un tipo non assegnabile all'oggetto <see cref="T:System.Collections.IList" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; contains a specific value.">Stabilisce se <see cref="T:System.Collections.IList" /> contiene un valore specifico.</summary>
      <param name="item" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to locate in the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">Oggetto <see cref="T:System.Object" /> da individuare in <see cref="T:System.Collections.IList" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;item&quot; /&gt; is found in the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="item" /> è presente in <see cref="T:System.Collections.IList" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)">
      <summary vsli:raw="Determines the index of a specific item in the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">Determina l'indice di un elemento specifico in <see cref="T:System.Collections.IList" />.</summary>
      <param name="item" vsli:raw="The object to locate in the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">Oggetto da individuare nella raccolta <see cref="T:System.Collections.IList" />.</param>
      <returns vsli:raw="The index of &lt;paramref name=&quot;item&quot; /&gt; if found in the list; otherwise, -1.">Indice di <paramref name="item" />, se presente nell'elenco; in caso contrario, -1.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;item&quot; /&gt; is of a type that is not assignable to the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">
        <paramref name="item" /> è un tipo non assegnabile all'oggetto <see cref="T:System.Collections.IList" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary vsli:raw="Inserts an item to the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; at the specified index.">Inserisce un elemento in <see cref="T:System.Collections.IList" /> in corrispondenza dell'indice specificato.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;item&quot; /&gt; should be inserted.">Indice in base zero nel quale <paramref name="item" /> deve essere inserito.</param>
      <param name="item" vsli:raw="The object to insert into the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">Oggetto da inserire in <see cref="T:System.Collections.IList" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is not a valid index in the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">
        <paramref name="index" /> non è un indice valido nell'interfaccia <see cref="T:System.Collections.IList" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;item&quot; /&gt; is of a type that is not assignable to the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">
        <paramref name="item" /> è un tipo non assegnabile all'oggetto <see cref="T:System.Collections.IList" />.</exception>
    </member>
    <member name="P:System.Collections.Generic.List`1.System#Collections#IList#IsFixedSize">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; has a fixed size.">Ottiene un valore che indica se <see cref="T:System.Collections.IList" /> ha dimensioni fisse.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; has a fixed size; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  In the default implementation of &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;, this property always returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="T:System.Collections.IList" /> è di dimensioni fisse; in caso contrario, <see langword="false" />.  Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.List`1" />, questa proprietà restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.List`1.System#Collections#IList#IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; is read-only.">Ottiene un valore che indica se <see cref="T:System.Collections.IList" /> è di sola lettura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  In the default implementation of &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;, this property always returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="T:System.Collections.IList" /> è di sola lettura; in caso contrario, <see langword="false" />.  Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.List`1" />, questa proprietà restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">Ottiene o imposta l'elemento in corrispondenza dell'indice specificato.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to get or set.">Indice in base zero dell'elemento da ottenere o impostare.</param>
      <returns vsli:raw="The element at the specified index.">Elemento in corrispondenza dell'indice specificato.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is not a valid index in the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">
        <paramref name="index" /> non è un indice valido nell'interfaccia <see cref="T:System.Collections.IList" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The property is set and &lt;paramref name=&quot;value&quot; /&gt; is of a type that is not assignable to the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">La proprietà viene impostata e il tipo del parametro <paramref name="value" /> non è assegnabile all'interfaccia <see cref="T:System.Collections.IList" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)">
      <summary vsli:raw="Removes the first occurrence of a specific object from the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">Rimuove la prima occorrenza di un oggetto specifico da <see cref="T:System.Collections.IList" />.</summary>
      <param name="item" vsli:raw="The object to remove from the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">Oggetto da rimuovere da <see cref="T:System.Collections.IList" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;item&quot; /&gt; is of a type that is not assignable to the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">
        <paramref name="item" /> è un tipo non assegnabile all'oggetto <see cref="T:System.Collections.IList" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.List`1.ToArray">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; to a new array.">Copia gli elementi di <see cref="T:System.Collections.Generic.List`1" /> in una nuova matrice.</summary>
      <returns vsli:raw="An array containing copies of the elements of the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;.">Matrice contenente le copie degli elementi di <see cref="T:System.Collections.Generic.List`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.List`1.TrimExcess">
      <summary vsli:raw="Sets the capacity to the actual number of elements in the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt;, if that number is less than a threshold value.">Imposta la capacità sul numero reale di elementi nell'oggetto <see cref="T:System.Collections.Generic.List`1" />, se tale numero è inferiore a un valore soglia.</summary>
    </member>
    <member name="M:System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})">
      <summary vsli:raw="Determines whether every element in the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; matches the conditions defined by the specified predicate.">Determina se ogni elemento nell'oggetto <see cref="T:System.Collections.Generic.List`1" /> corrisponde alle condizioni definite dal predicato specificato.</summary>
      <param name="match" vsli:raw="The &lt;see cref=&quot;T:System.Predicate`1&quot; /&gt; delegate that defines the conditions to check against the elements.">Delegato <see cref="T:System.Predicate`1" /> che definisce le condizioni per verificare gli elementi.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if every element in the &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; matches the conditions defined by the specified predicate; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If the list has no elements, the return value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> se ogni elemento nell'oggetto <see cref="T:System.Collections.Generic.List`1" /> corrisponde alle condizioni definite dal predicato specificato. In caso contrario, <see langword="false" />. Se l'elenco è privo di elementi, il valore restituito è <see langword="true" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;match&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="match" /> è <see langword="null" />.</exception>
    </member>
    <member name="T:System.Collections.Generic.Queue`1">
      <summary vsli:raw="Represents a first-in, first-out collection of objects.">Rappresenta una raccolta di oggetti FIFO (First-In First-Out).</summary>
      <typeparam name="T" vsli:raw="Specifies the type of elements in the queue.">Specifica il tipo di elementi della coda.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Generic.Queue`1&quot; /&gt; class that is empty and has the default initial capacity.">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.Queue`1" /> vuota e con capacità iniziale predefinita.</summary>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Generic.Queue`1&quot; /&gt; class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.Queue`1" /> che contiene gli elementi copiati dalla raccolta specificata e ha la capacità sufficiente per contenere il numero di elementi copiati.</summary>
      <param name="collection" vsli:raw="The collection whose elements are copied to the new &lt;see cref=&quot;T:System.Collections.Generic.Queue`1&quot; /&gt;.">Raccolta i cui elementi sono copiati nel nuovo oggetto <see cref="T:System.Collections.Generic.Queue`1" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;collection&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="collection" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Generic.Queue`1&quot; /&gt; class that is empty and has the specified initial capacity.">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.Queue`1" /> vuota e con capacità iniziale specificata.</summary>
      <param name="capacity" vsli:raw="The initial number of elements that the &lt;see cref=&quot;T:System.Collections.Generic.Queue`1&quot; /&gt; can contain.">Numero iniziale degli elementi che <see cref="T:System.Collections.Generic.Queue`1" /> può contenere.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is less than zero.">
        <paramref name="capacity" /> è minore di zero.</exception>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.Clear">
      <summary vsli:raw="Removes all objects from the &lt;see cref=&quot;T:System.Collections.Generic.Queue`1&quot; /&gt;.">Rimuove tutti gli oggetti da <see cref="T:System.Collections.Generic.Queue`1" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.Contains(`0)">
      <summary vsli:raw="Determines whether an element is in the &lt;see cref=&quot;T:System.Collections.Generic.Queue`1&quot; /&gt;.">Determina se un elemento è incluso in <see cref="T:System.Collections.Generic.Queue`1" />.</summary>
      <param name="item" vsli:raw="The object to locate in the &lt;see cref=&quot;T:System.Collections.Generic.Queue`1&quot; /&gt;. The value can be &lt;see langword=&quot;null&quot; /&gt; for reference types.">Oggetto da individuare nella raccolta <see cref="T:System.Collections.Generic.Queue`1" />. Il valore può essere <see langword="null" /> per i tipi di riferimento.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;item&quot; /&gt; is found in the &lt;see cref=&quot;T:System.Collections.Generic.Queue`1&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="item" /> è presente in <see cref="T:System.Collections.Generic.Queue`1" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.CopyTo(`0[],System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Collections.Generic.Queue`1&quot; /&gt; elements to an existing one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified array index.">Copia gli elementi di <see cref="T:System.Collections.Generic.Queue`1" /> in un oggetto <see cref="T:System.Array" /> unidimensionale esistente, partendo dall'indice della matrice specificata.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Collections.Generic.Queue`1&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">Oggetto <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.Generic.Queue`1" />. L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</param>
      <param name="arrayIndex" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;arrayIndex&quot; /&gt; is less than zero.">
        <paramref name="arrayIndex" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the source &lt;see cref=&quot;T:System.Collections.Generic.Queue`1&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;arrayIndex&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">Il numero di elementi nell'oggetto <see cref="T:System.Collections.Generic.Queue`1" /> di origine è maggiore dello spazio disponibile tra <paramref name="arrayIndex" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="P:System.Collections.Generic.Queue`1.Count">
      <summary vsli:raw="Gets the number of elements contained in the &lt;see cref=&quot;T:System.Collections.Generic.Queue`1&quot; /&gt;.">Ottiene il numero di elementi contenuti in <see cref="T:System.Collections.Generic.Queue`1" />.</summary>
      <returns vsli:raw="The number of elements contained in the &lt;see cref=&quot;T:System.Collections.Generic.Queue`1&quot; /&gt;.">Il numero di elementi contenuti in <see cref="T:System.Collections.Generic.Queue`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.Dequeue">
      <summary vsli:raw="Removes and returns the object at the beginning of the &lt;see cref=&quot;T:System.Collections.Generic.Queue`1&quot; /&gt;.">Consente di rimuovere e restituire l'oggetto all'inizio della <see cref="T:System.Collections.Generic.Queue`1" />.</summary>
      <returns vsli:raw="The object that is removed from the beginning of the &lt;see cref=&quot;T:System.Collections.Generic.Queue`1&quot; /&gt;.">Oggetto rimosso dall'inizio della <see cref="T:System.Collections.Generic.Queue`1" /> .</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.Queue`1&quot; /&gt; is empty.">La classe <see cref="T:System.Collections.Generic.Queue`1" /> è vuota.</exception>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.Enqueue(`0)">
      <summary vsli:raw="Adds an object to the end of the &lt;see cref=&quot;T:System.Collections.Generic.Queue`1&quot; /&gt;.">Aggiunge un oggetto alla fine di <see cref="T:System.Collections.Generic.Queue`1" />.</summary>
      <param name="item" vsli:raw="The object to add to the &lt;see cref=&quot;T:System.Collections.Generic.Queue`1&quot; /&gt;. The value can be &lt;see langword=&quot;null&quot; /&gt; for reference types.">Oggetto da aggiungere all'oggetto <see cref="T:System.Collections.Generic.Queue`1" />. Il valore può essere <see langword="null" /> per i tipi di riferimento.</param>
    </member>
    <member name="T:System.Collections.Generic.Queue`1.Enumerator">
      <summary vsli:raw="Enumerates the elements of a &lt;see cref=&quot;T:System.Collections.Generic.Queue`1&quot; /&gt;.">Enumera gli elementi di un oggetto <see cref="T:System.Collections.Generic.Queue`1" />.</summary>
      <typeparam name="T" vsli:raw="" />
    </member>
    <member name="P:System.Collections.Generic.Queue`1.Enumerator.Current">
      <summary vsli:raw="Gets the element at the current position of the enumerator.">Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <returns vsli:raw="The element in the &lt;see cref=&quot;T:System.Collections.Generic.Queue`1&quot; /&gt; at the current position of the enumerator.">Elemento dell'insieme <see cref="T:System.Collections.Generic.Queue`1" /> in corrispondenza della posizione corrente dell'enumeratore.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The enumerator is positioned before the first element of the collection or after the last element.">L'enumeratore è posizionato prima del primo elemento della raccolta o dopo l'ultimo elemento.</exception>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.Enumerator.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.Collections.Generic.Queue`1.Enumerator&quot; /&gt;.">Rilascia tutte le risorse usate da <see cref="T:System.Collections.Generic.Queue`1.Enumerator" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.Enumerator.MoveNext">
      <summary vsli:raw="Advances the enumerator to the next element of the &lt;see cref=&quot;T:System.Collections.Generic.Queue`1&quot; /&gt;.">Sposta l'enumeratore all'elemento successivo dell'oggetto <see cref="T:System.Collections.Generic.Queue`1" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the enumerator was successfully advanced to the next element; &lt;see langword=&quot;false&quot; /&gt; if the enumerator has passed the end of the collection.">
        <see langword="true" /> se l'enumeratore è stato spostato correttamente in avanti in corrispondenza dell'elemento successivo, <see langword="false" /> se l'enumeratore ha superato la fine della raccolta.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The collection was modified after the enumerator was created.">La raccolta è stata modificata dopo la creazione dell'enumeratore.</exception>
    </member>
    <member name="P:System.Collections.Generic.Queue`1.Enumerator.System#Collections#IEnumerator#Current">
      <summary vsli:raw="Gets the element at the current position of the enumerator.">Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <returns vsli:raw="The element in the collection at the current position of the enumerator.">Elemento della raccolta in corrispondenza della posizione corrente dell'enumeratore.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The enumerator is positioned before the first element of the collection or after the last element.">L'enumeratore è posizionato prima del primo elemento della raccolta o dopo l'ultimo elemento.</exception>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.Enumerator.System#Collections#IEnumerator#Reset">
      <summary vsli:raw="Sets the enumerator to its initial position, which is before the first element in the collection.">Imposta l'enumeratore sulla propria posizione iniziale, ovvero prima del primo elemento nella raccolta.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The collection was modified after the enumerator was created.">La raccolta è stata modificata dopo la creazione dell'enumeratore.</exception>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the &lt;see cref=&quot;T:System.Collections.Generic.Queue`1&quot; /&gt;.">Restituisce un enumeratore che esegue l'iterazione di <see cref="T:System.Collections.Generic.Queue`1" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.Queue`1.Enumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Collections.Generic.Queue`1&quot; /&gt;.">
        <see cref="T:System.Collections.Generic.Queue`1.Enumerator" /> per l'oggetto <see cref="T:System.Collections.Generic.Queue`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.Peek">
      <summary vsli:raw="Returns the object at the beginning of the &lt;see cref=&quot;T:System.Collections.Generic.Queue`1&quot; /&gt; without removing it.">Restituisce l'oggetto all'inizio della <see cref="T:System.Collections.Generic.Queue`1" /> senza rimuoverlo.</summary>
      <returns vsli:raw="The object at the beginning of the &lt;see cref=&quot;T:System.Collections.Generic.Queue`1&quot; /&gt;.">Oggetto all'inizio della <see cref="T:System.Collections.Generic.Queue`1" /> .</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.Queue`1&quot; /&gt; is empty.">La classe <see cref="T:System.Collections.Generic.Queue`1" /> è vuota.</exception>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through a collection.">Restituisce un enumeratore che consente di eseguire l'iterazione di una raccolta.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerator`1&quot; /&gt; that can be used to iterate through the collection.">Oggetto <see cref="T:System.Collections.Generic.IEnumerator`1" /> che può essere usato per eseguire l'iterazione della raccolta.</returns>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; to an &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at a particular &lt;see cref=&quot;T:System.Array&quot; /&gt; index.">Copia gli elementi di <see cref="T:System.Collections.ICollection" /> in <see cref="T:System.Array" /> a partire da un particolare indice <see cref="T:System.Array" />.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">Oggetto <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.ICollection" />. L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.">
        <paramref name="index" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;array&quot; /&gt; does not have zero-based indexing.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in the source &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The type of the source &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> è multidimensionale.  
-oppure- 
 <paramref name="array" /> non dispone di indicizzazione in base zero.  
-oppure- 
Il numero di elementi nell'oggetto <see cref="T:System.Collections.ICollection" /> di origine è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.  
-oppure- 
Non è possibile eseguire il cast automatico del tipo dell'oggetto <see cref="T:System.Collections.ICollection" /> di origine al tipo dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="P:System.Collections.Generic.Queue`1.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe).">Ottiene un valore che indica se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;.  In the default implementation of &lt;see cref=&quot;T:System.Collections.Generic.Queue`1&quot; /&gt;, this property always returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe); in caso contrario, <see langword="false" />.  Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.Queue`1" />, questa proprietà restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.Queue`1.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">Ottiene un oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.  In the default implementation of &lt;see cref=&quot;T:System.Collections.Generic.Queue`1&quot; /&gt;, this property always returns the current instance.">Oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.  Nell'implementazione predefinita dell'oggetto <see cref="T:System.Collections.Generic.Queue`1" />, questa proprietà restituisce sempre l'istanza corrente.</returns>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through a collection.">Restituisce un enumeratore che consente di eseguire l'iterazione di una raccolta.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to iterate through the collection.">Oggetto <see cref="T:System.Collections.IEnumerator" /> che può essere usato per eseguire l'iterazione della raccolta.</returns>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.ToArray">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Collections.Generic.Queue`1&quot; /&gt; elements to a new array.">Consente di copiare gli elementi della <see cref="T:System.Collections.Generic.Queue`1" /> in una nuova matrice.</summary>
      <returns vsli:raw="A new array containing elements copied from the &lt;see cref=&quot;T:System.Collections.Generic.Queue`1&quot; /&gt;.">Nuova matrice contenente gli elementi copiati dalla <see cref="T:System.Collections.Generic.Queue`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.TrimExcess">
      <summary vsli:raw="Sets the capacity to the actual number of elements in the &lt;see cref=&quot;T:System.Collections.Generic.Queue`1&quot; /&gt;, if that number is less than 90 percent of current capacity.">Imposta la capacità dell'insieme sul numero reale di elementi contenuti nell'oggetto <see cref="T:System.Collections.Generic.Queue`1" />, se questo numero è inferiore al 90 per cento della capacità corrente.</summary>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.TryDequeue(`0@)">
      <param name="result" vsli:raw="The removed object." />
    </member>
    <member name="M:System.Collections.Generic.Queue`1.TryPeek(`0@)">
      <param name="result" vsli:raw="If present, the object at the beginning of the &lt;see cref=&quot;T:System.Collections.Generic.Queue`1&quot; /&gt;; otherwise, the default value of &lt;typeparamref name=&quot;T&quot; /&gt;." />
    </member>
    <member name="T:System.Collections.Generic.SortedDictionary`2">
      <summary vsli:raw="Represents a collection of key/value pairs that are sorted on the key.">Rappresenta una raccolta di coppie chiave/valore ordinate in base alla chiave.</summary>
      <typeparam name="TKey" vsli:raw="The type of the keys in the dictionary.">Tipo di chiavi nel dizionario.</typeparam>
      <typeparam name="TValue" vsli:raw="The type of the values in the dictionary.">Tipo di valori nel dizionario.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2&quot; /&gt; class that is empty and uses the default &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; implementation for the key type.">Inizializza una nuova istanza vuota della classe <see cref="T:System.Collections.Generic.SortedDictionary`2" /> e utilizza l'implementazione <see cref="T:System.Collections.Generic.IComparer`1" /> predefinita per il tipo di chiave.</summary>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IComparer{`0})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2&quot; /&gt; class that is empty and uses the specified &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; implementation to compare keys.">Inizializza una nuova istanza vuota della classe <see cref="T:System.Collections.Generic.SortedDictionary`2" /> e utilizza l'implementazione <see cref="T:System.Collections.Generic.IComparer`1" /> specificata per il confronto delle chiavi.</summary>
      <param name="comparer" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; implementation to use when comparing keys, or &lt;see langword=&quot;null&quot; /&gt; to use the default &lt;see cref=&quot;T:System.Collections.Generic.Comparer`1&quot; /&gt; for the type of the key.">Implementazione dell'interfaccia <see cref="T:System.Collections.Generic.IComparer`1" /> da utilizzare per confrontare le chiavi, oppure <see langword="null" /> per utilizzare l'interfaccia <see cref="T:System.Collections.Generic.Comparer`1" /> predefinita del tipo di chiave.</param>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2&quot; /&gt; class that contains elements copied from the specified &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt; and uses the default &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; implementation for the key type.">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.SortedDictionary`2" /> contenente elementi copiati dalla classe <see cref="T:System.Collections.Generic.IDictionary`2" /> specificata e viene utilizzata l'implementazione <see cref="T:System.Collections.Generic.IComparer`1" /> predefinita per il tipo di chiave.</summary>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt; whose elements are copied to the new &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2&quot; /&gt;.">Oggetto <see cref="T:System.Collections.Generic.IDictionary`2" /> i cui elementi sono copiati nel nuovo oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dictionary&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dictionary" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;dictionary&quot; /&gt; contains one or more duplicate keys.">
        <paramref name="dictionary" /> contiene una o più chiavi duplicate.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IComparer{`0})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2&quot; /&gt; class that contains elements copied from the specified &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt; and uses the specified &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; implementation to compare keys.">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.SortedDictionary`2" /> contenente elementi copiati dalla classe <see cref="T:System.Collections.Generic.IDictionary`2" /> specificata e viene utilizzata l'implementazione <see cref="T:System.Collections.Generic.IComparer`1" /> specificata per confrontare le chiavi.</summary>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt; whose elements are copied to the new &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2&quot; /&gt;.">Oggetto <see cref="T:System.Collections.Generic.IDictionary`2" /> i cui elementi sono copiati nel nuovo oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</param>
      <param name="comparer" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; implementation to use when comparing keys, or &lt;see langword=&quot;null&quot; /&gt; to use the default &lt;see cref=&quot;T:System.Collections.Generic.Comparer`1&quot; /&gt; for the type of the key.">Implementazione dell'interfaccia <see cref="T:System.Collections.Generic.IComparer`1" /> da utilizzare per confrontare le chiavi, oppure <see langword="null" /> per utilizzare l'interfaccia <see cref="T:System.Collections.Generic.Comparer`1" /> predefinita del tipo di chiave.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dictionary&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dictionary" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;dictionary&quot; /&gt; contains one or more duplicate keys.">
        <paramref name="dictionary" /> contiene una o più chiavi duplicate.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.Add(`0,`1)">
      <summary vsli:raw="Adds an element with the specified key and value into the &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2&quot; /&gt;.">Aggiunge un elemento con la chiave e il valore specificati al metodo <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</summary>
      <param name="key" vsli:raw="The key of the element to add.">Chiave dell'elemento da aggiungere.</param>
      <param name="value" vsli:raw="The value of the element to add. The value can be &lt;see langword=&quot;null&quot; /&gt; for reference types.">Valore dell'elemento da aggiungere. Il valore può essere <see langword="null" /> per i tipi di riferimento.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An element with the same key already exists in the &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2&quot; /&gt;.">In <see cref="T:System.Collections.Generic.SortedDictionary`2" /> è già presente un elemento con la stessa chiave.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.Clear">
      <summary vsli:raw="Removes all elements from the &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2&quot; /&gt;.">Rimuove tutti gli elementi da <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</summary>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.Comparer">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; used to order the elements of the &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2&quot; /&gt;.">Ottiene l'interfaccia <see cref="T:System.Collections.Generic.IComparer`1" /> utilizzata per ordinare gli elementi della classe <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; used to order the elements of the &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2&quot; /&gt;">Interfaccia <see cref="T:System.Collections.Generic.IComparer`1" /> utilizzata per ordinare gli elementi della classe <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ContainsKey(`0)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2&quot; /&gt; contains an element with the specified key.">Determina se <see cref="T:System.Collections.Generic.SortedDictionary`2" /> contiene un elemento con la chiave specificata.</summary>
      <param name="key" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2&quot; /&gt;.">Chiave da individuare in <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2&quot; /&gt; contains an element with the specified key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="T:System.Collections.Generic.SortedDictionary`2" /> contiene un elemento con la chiave specificata; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ContainsValue(`1)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2&quot; /&gt; contains an element with the specified value.">Determina se la raccolta <see cref="T:System.Collections.Generic.SortedDictionary`2" /> contiene un elemento con il valore specificato.</summary>
      <param name="value" vsli:raw="The value to locate in the &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2&quot; /&gt;. The value can be &lt;see langword=&quot;null&quot; /&gt; for reference types.">Valore da individuare in <see cref="T:System.Collections.Generic.SortedDictionary`2" />. Il valore può essere <see langword="null" /> per i tipi di riferimento.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2&quot; /&gt; contains an element with the specified value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="T:System.Collections.Generic.SortedDictionary`2" /> contiene un elemento con il valore specificato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2&quot; /&gt; to the specified array of &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; structures, starting at the specified index.">Copia gli elementi di <see cref="T:System.Collections.Generic.SortedDictionary`2" /> nella matrice di strutture <see cref="T:System.Collections.Generic.KeyValuePair`2" /> indicata, a partire dall'indice specificato.</summary>
      <param name="array" vsli:raw="The one-dimensional array of &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; structures that is the destination of the elements copied from the current &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2&quot; /&gt; The array must have zero-based indexing.">Matrice unidimensionale di strutture <see cref="T:System.Collections.Generic.KeyValuePair`2" /> in cui effettuare la copia degli elementi della raccolta <see cref="T:System.Collections.Generic.SortedDictionary`2" /> corrente. La matrice deve avere indice in base zero.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than 0.">
        <paramref name="index" /> è minore di 0.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the source &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">Il numero di elementi nell'oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2" /> di origine è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.Count">
      <summary vsli:raw="Gets the number of key/value pairs contained in the &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2&quot; /&gt;.">Ottiene il numero di coppie chiave/valore contenute in <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</summary>
      <returns vsli:raw="The number of key/value pairs contained in the &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2&quot; /&gt;.">Numero di coppie chiave/valore contenute in <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</returns>
    </member>
    <member name="T:System.Collections.Generic.SortedDictionary`2.Enumerator">
      <summary vsli:raw="Enumerates the elements of a &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2&quot; /&gt;.">Enumera gli elementi di un oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</summary>
      <typeparam name="TKey" vsli:raw="" />
      <typeparam name="TValue" vsli:raw="" />
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.Enumerator.Current">
      <summary vsli:raw="Gets the element at the current position of the enumerator.">Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <returns vsli:raw="The element in the &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2&quot; /&gt; at the current position of the enumerator.">Elemento dell'insieme <see cref="T:System.Collections.Generic.SortedDictionary`2" /> in corrispondenza della posizione corrente dell'enumeratore.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.Enumerator.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2.Enumerator&quot; /&gt;.">Rilascia tutte le risorse usate da <see cref="T:System.Collections.Generic.SortedDictionary`2.Enumerator" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.Enumerator.MoveNext">
      <summary vsli:raw="Advances the enumerator to the next element of the &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2&quot; /&gt;.">Sposta l'enumeratore all'elemento successivo dell'oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the enumerator was successfully advanced to the next element; &lt;see langword=&quot;false&quot; /&gt; if the enumerator has passed the end of the collection.">
        <see langword="true" /> se l'enumeratore è stato spostato correttamente in avanti in corrispondenza dell'elemento successivo, <see langword="false" /> se l'enumeratore ha superato la fine della raccolta.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The collection was modified after the enumerator was created.">La raccolta è stata modificata dopo la creazione dell'enumeratore.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Entry">
      <summary vsli:raw="Gets the element at the current position of the enumerator as a &lt;see cref=&quot;T:System.Collections.DictionaryEntry&quot; /&gt; structure.">Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore come una struttura <see cref="T:System.Collections.DictionaryEntry" />.</summary>
      <returns vsli:raw="The element in the collection at the current position of the dictionary, as a &lt;see cref=&quot;T:System.Collections.DictionaryEntry&quot; /&gt; structure.">Elemento nell'insieme in corrispondenza della posizione corrente del dizionario, restituito come una struttura <see cref="T:System.Collections.DictionaryEntry" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The enumerator is positioned before the first element of the collection or after the last element.">L'enumeratore è posizionato prima del primo elemento della raccolta o dopo l'ultimo elemento.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Key">
      <summary vsli:raw="Gets the key of the element at the current position of the enumerator.">Ottiene la chiave dell'elemento nella posizione corrente dell'enumeratore.</summary>
      <returns vsli:raw="The key of the element in the collection at the current position of the enumerator.">Ottiene la chiave dell'elemento nell'insieme in corrispondenza della posizione corrente dell'enumeratore.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The enumerator is positioned before the first element of the collection or after the last element.">L'enumeratore è posizionato prima del primo elemento della raccolta o dopo l'ultimo elemento.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Value">
      <summary vsli:raw="Gets the value of the element at the current position of the enumerator.">Ottiene il valore dell'elemento nella posizione corrente dell'enumeratore.</summary>
      <returns vsli:raw="The value of the element in the collection at the current position of the enumerator.">Valore dell'elemento nell'insieme in corrispondenza della posizione corrente dell'enumeratore.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The enumerator is positioned before the first element of the collection or after the last element.">L'enumeratore è posizionato prima del primo elemento della raccolta o dopo l'ultimo elemento.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IEnumerator#Current">
      <summary vsli:raw="Gets the element at the current position of the enumerator.">Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <returns vsli:raw="The element in the collection at the current position of the enumerator.">Elemento della raccolta in corrispondenza della posizione corrente dell'enumeratore.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The enumerator is positioned before the first element of the collection or after the last element.">L'enumeratore è posizionato prima del primo elemento della raccolta o dopo l'ultimo elemento.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IEnumerator#Reset">
      <summary vsli:raw="Sets the enumerator to its initial position, which is before the first element in the collection.">Imposta l'enumeratore sulla propria posizione iniziale, ovvero prima del primo elemento nella raccolta.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The collection was modified after the enumerator was created.">La raccolta è stata modificata dopo la creazione dell'enumeratore.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2&quot; /&gt;.">Restituisce un enumeratore che esegue l'iterazione di <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2.Enumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2&quot; /&gt;.">Oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2.Enumerator" /> per l'insieme <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.Item(`0)">
      <summary vsli:raw="Gets or sets the value associated with the specified key.">Ottiene o imposta il valore associato alla chiave specificata.</summary>
      <param name="key" vsli:raw="The key of the value to get or set.">Chiave del valore da ottenere o impostare.</param>
      <returns vsli:raw="The value associated with the specified key. If the specified key is not found, a get operation throws a &lt;see cref=&quot;T:System.Collections.Generic.KeyNotFoundException&quot; /&gt;, and a set operation creates a new element with the specified key.">Valore associato alla chiave specificata. Se la chiave specificata non viene trovata, un'operazione get genera un'eccezione <see cref="T:System.Collections.Generic.KeyNotFoundException" />, mentre un'operazione di impostazione crea una nuovo elemento con la chiave specificata.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException" vsli:raw="The property is retrieved and &lt;paramref name=&quot;key&quot; /&gt; does not exist in the collection.">Durante il recupero della proprietà, la chiave indicata nel parametro <paramref name="key" /> non è stata trovata nella raccolta.</exception>
    </member>
    <member name="T:System.Collections.Generic.SortedDictionary`2.KeyCollection">
      <summary vsli:raw="Represents the collection of keys in a &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2&quot; /&gt;. This class cannot be inherited.">Rappresenta la raccolta di chiavi in una classe <see cref="T:System.Collections.Generic.SortedDictionary`2" />. Questa classe non può essere ereditata.</summary>
      <typeparam name="TKey" vsli:raw="" />
      <typeparam name="TValue" vsli:raw="" />
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.#ctor(System.Collections.Generic.SortedDictionary{`0,`1})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2.KeyCollection&quot; /&gt; class that reflects the keys in the specified &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2&quot; /&gt;.">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /> in cui sono riprodotte le chiavi dell'oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2" /> specificato.</summary>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2&quot; /&gt; whose keys are reflected in the new &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2.KeyCollection&quot; /&gt;.">Classe <see cref="T:System.Collections.Generic.SortedDictionary`2" /> le cui chiavi vengono riprodotte nella nuova classe <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dictionary&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dictionary" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.CopyTo(`0[],System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2.KeyCollection&quot; /&gt; elements to an existing one-dimensional array, starting at the specified array index.">Copia gli elementi dell'insieme <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /> in una matrice unidimensionale esistente, a partire dall'indice di matrice specificato.</summary>
      <param name="array" vsli:raw="The one-dimensional array that is the destination of the elements copied from the &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2.KeyCollection&quot; /&gt;. The array must have zero-based indexing.">Matrice unidimensionale che è la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />. La matrice deve avere un'indicizzazione in base zero.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than 0.">
        <paramref name="index" /> è minore di 0.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the source &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2.KeyCollection&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">Il numero di elementi nell'oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /> di origine è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.Count">
      <summary vsli:raw="Gets the number of elements contained in the &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2.KeyCollection&quot; /&gt;.">Ottiene il numero di elementi contenuti in <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />.</summary>
      <returns vsli:raw="The number of elements contained in the &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2.KeyCollection&quot; /&gt;.">Il numero di elementi contenuti in <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />.</returns>
    </member>
    <member name="T:System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator">
      <summary vsli:raw="Enumerates the elements of a &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2.KeyCollection&quot; /&gt;.">Enumera gli elementi di un oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />.</summary>
      <typeparam name="TKey" vsli:raw="" />
      <typeparam name="TValue" vsli:raw="" />
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator.Current">
      <summary vsli:raw="Gets the element at the current position of the enumerator.">Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <returns vsli:raw="The element in the &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2.KeyCollection&quot; /&gt; at the current position of the enumerator.">Elemento dell'insieme <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /> in corrispondenza della posizione corrente dell'enumeratore.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator&quot; /&gt;.">Rilascia tutte le risorse usate da <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator.MoveNext">
      <summary vsli:raw="Advances the enumerator to the next element of the &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2.KeyCollection&quot; /&gt;.">Sposta l'enumeratore all'elemento successivo dell'oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the enumerator was successfully advanced to the next element; &lt;see langword=&quot;false&quot; /&gt; if the enumerator has passed the end of the collection.">
        <see langword="true" /> se l'enumeratore è stato spostato correttamente in avanti in corrispondenza dell'elemento successivo, <see langword="false" /> se l'enumeratore ha superato la fine della raccolta.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The collection was modified after the enumerator was created.">La raccolta è stata modificata dopo la creazione dell'enumeratore.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator.System#Collections#IEnumerator#Current">
      <summary vsli:raw="Gets the element at the current position of the enumerator.">Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <returns vsli:raw="The element in the collection at the current position of the enumerator.">Elemento della raccolta in corrispondenza della posizione corrente dell'enumeratore.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The enumerator is positioned before the first element of the collection or after the last element.">L'enumeratore è posizionato prima del primo elemento della raccolta o dopo l'ultimo elemento.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator.System#Collections#IEnumerator#Reset">
      <summary vsli:raw="Sets the enumerator to its initial position, which is before the first element in the collection.">Imposta l'enumeratore sulla propria posizione iniziale, ovvero prima del primo elemento nella raccolta.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The collection was modified after the enumerator was created.">La raccolta è stata modificata dopo la creazione dell'enumeratore.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2.KeyCollection&quot; /&gt;.">Restituisce un enumeratore che esegue l'iterazione di <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator&quot; /&gt; structure for the &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2.KeyCollection&quot; /&gt;.">Struttura <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator" /> dell'insieme <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection{TKey}#Add(`0)">
      <summary vsli:raw="Adds an item to the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.  This implementation always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Aggiunge un elemento a <see cref="T:System.Collections.Generic.ICollection`1" />.  Questa implementazione genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="item" vsli:raw="The object to add to the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">Oggetto da aggiungere all'oggetto <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Always thrown; the collection is read-only.">Generata sempre. La raccolta è di sola lettura.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection{TKey}#Clear">
      <summary vsli:raw="Removes all items from the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.  This implementation always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Rimuove tutti gli elementi da <see cref="T:System.Collections.Generic.ICollection`1" />.  Questa implementazione genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="Always thrown; the collection is read-only.">Generata sempre. La raccolta è di sola lettura.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection{TKey}#Contains(`0)">
      <summary>Determina se l'insieme <see cref="T:System.Collections.Generic.ICollection`1" /> contiene il valore specificato.</summary>
      <param name="item">Oggetto da individuare nella raccolta <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <returns>
        <see langword="true" /> se l'elemento è presente nell'oggetto <see cref="T:System.Collections.Generic.ICollection`1" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection{TKey}#IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; is read-only.">Ottiene un valore che indica se <see cref="T:System.Collections.Generic.ICollection`1" /> è di sola lettura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  In the default implementation of &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2.KeyCollection&quot; /&gt;, this property always returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="T:System.Collections.Generic.ICollection`1" /> è di sola lettura; in caso contrario, <see langword="false" />.  Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />, questa proprietà restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection{TKey}#Remove(`0)">
      <summary vsli:raw="Removes the first occurrence of a specific object from the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.  This implementation always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Rimuove la prima occorrenza di un oggetto specifico da <see cref="T:System.Collections.Generic.ICollection`1" />.  Questa implementazione genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="item" vsli:raw="The object to remove from the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">Oggetto da rimuovere da <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if item is successfully removed from the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;. This method also returns &lt;see langword=&quot;false&quot; /&gt; if item is not found in the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">
        <see langword="true" /> se l'elemento viene rimosso correttamente da <see cref="T:System.Collections.Generic.ICollection`1" />, in caso contrario <see langword="false" />. Questo metodo restituisce anche <see langword="false" /> se l'elemento non viene trovato in <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Always thrown; the collection is read-only.">Generata sempre. La raccolta è di sola lettura.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#IEnumerable{TKey}#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the collection.">Restituisce un enumeratore che consente di scorrere la raccolta.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerator`1&quot; /&gt; that can be used to iterate through the collection.">Oggetto <see cref="T:System.Collections.Generic.IEnumerator`1" /> che può essere usato per eseguire l'iterazione della raccolta.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; to an array, starting at a particular array index.">Copia gli elementi dell'oggetto <see cref="T:System.Collections.ICollection" /> in una matrice, iniziando in corrispondenza di un particolare indice di matrice.</summary>
      <param name="array" vsli:raw="The one-dimensional array that is the destination of the elements copied from the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;. The array must have zero-based indexing.">Matrice unidimensionale che è la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.ICollection" />. La matrice deve avere un'indicizzazione in base zero.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than 0.">
        <paramref name="index" /> è minore di 0.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;array&quot; /&gt; does not have zero-based indexing.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in the source &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The type of the source &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> è multidimensionale.  
-oppure- 
 <paramref name="array" /> non dispone di indicizzazione in base zero.  
-oppure- 
Il numero di elementi nell'oggetto <see cref="T:System.Collections.ICollection" /> di origine è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.  
-oppure- 
Non è possibile eseguire il cast automatico del tipo dell'oggetto <see cref="T:System.Collections.ICollection" /> di origine al tipo dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe).">Ottiene un valore che indica se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;.  In the default implementation of &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2.KeyCollection&quot; /&gt;, this property always returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe); in caso contrario, <see langword="false" />.  Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />, questa proprietà restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">Ottiene un oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.  In the default implementation of &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2.KeyCollection&quot; /&gt;, this property always returns the current instance.">Oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.  Nell'implementazione predefinita dell'oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />, questa proprietà restituisce sempre l'istanza corrente.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the collection.">Restituisce un enumeratore che consente di scorrere la raccolta.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to iterate through the collection.">Oggetto <see cref="T:System.Collections.IEnumerator" /> che può essere usato per eseguire l'iterazione della raccolta.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.Keys">
      <summary vsli:raw="Gets a collection containing the keys in the &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2&quot; /&gt;.">Ottiene una raccolta contenente le chiavi della classe <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2.KeyCollection&quot; /&gt; containing the keys in the &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2&quot; /&gt;.">Insieme <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /> contenente le chiavi della classe <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.Remove(`0)">
      <summary vsli:raw="Removes the element with the specified key from the &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2&quot; /&gt;.">Rimuove l'elemento con la chiave specificata da <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</summary>
      <param name="key" vsli:raw="The key of the element to remove.">Chiave dell'elemento da rimuovere.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the element is successfully removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  This method also returns &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;key&quot; /&gt; is not found in the &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2&quot; /&gt;.">
        <see langword="true" /> se l'elemento viene rimosso correttamente; in caso contrario, <see langword="false" />.  Questo metodo restituisce anche <see langword="false" /> se il parametro <paramref name="key" /> non viene trovato nella classe <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})">
      <summary vsli:raw="Adds an item to the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">Aggiunge un elemento a <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <param name="keyValuePair" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; structure to add to the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">Struttura <see cref="T:System.Collections.Generic.KeyValuePair`2" /> da aggiungere all'interfaccia <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;keyValuePair&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="keyValuePair" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An element with the same key already exists in the &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2&quot; /&gt;.">In <see cref="T:System.Collections.Generic.SortedDictionary`2" /> è già presente un elemento con la stessa chiave.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; contains a specific key and value.">Stabilisce se l'interfaccia <see cref="T:System.Collections.Generic.ICollection`1" /> contiene una coppia chiave/valore specifica.</summary>
      <param name="keyValuePair" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; structure to locate in the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">Struttura <see cref="T:System.Collections.Generic.KeyValuePair`2" /> da individuare nell'interfaccia <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;keyValuePair&quot; /&gt; is found in the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="keyValuePair" /> è presente in <see cref="T:System.Collections.Generic.ICollection`1" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; is read-only.">Ottiene un valore che indica se <see cref="T:System.Collections.Generic.ICollection`1" /> è di sola lettura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;. In the default implementation of &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2&quot; /&gt;, this property always returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="T:System.Collections.Generic.ICollection`1" /> è di sola lettura; in caso contrario, <see langword="false" />. Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.SortedDictionary`2" />, questa proprietà restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})">
      <summary vsli:raw="Removes the first occurrence of the specified element from the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">Rimuove dall'interfaccia <see cref="T:System.Collections.Generic.ICollection`1" /> la prima occorrenza dell'elemento specificato.</summary>
      <param name="keyValuePair" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; structure to remove from the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">Struttura <see cref="T:System.Collections.Generic.KeyValuePair`2" /> da rimuovere dall'interfaccia <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;keyValuePair&quot; /&gt; was successfully removed from the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;. This method also returns &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;keyValuePair&quot; /&gt; was not found in the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">
        <see langword="true" /> se <paramref name="keyValuePair" /> è stato rimosso correttamente da <see cref="T:System.Collections.Generic.ICollection`1" />; in caso contrario, <see langword="false" />. Questo metodo restituisce anche <see langword="false" /> se <paramref name="keyValuePair" /> non è stato trovato nell'oggetto <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#IDictionary{TKey@TValue}#Keys">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; containing the keys of the &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt;.">Ottiene <see cref="T:System.Collections.Generic.ICollection`1" /> contenente le chiavi di <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; containing the keys of the &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt;.">Interfaccia <see cref="T:System.Collections.Generic.ICollection`1" /> contenente le chiavi dell'interfaccia <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#IDictionary{TKey@TValue}#Values">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; containing the values in the &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt;.">Ottiene <see cref="T:System.Collections.Generic.ICollection`1" /> contenente i valori in <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; containing the values in the &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt;.">Interfaccia <see cref="T:System.Collections.Generic.ICollection`1" /> contenente i valori dell'interfaccia <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey@TValue}}#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through a collection.">Restituisce un enumeratore che consente di eseguire l'iterazione di una raccolta.</summary>
      <returns vsli:raw="An enumerator that can be used to iterate through the collection.">Enumeratore che può essere usato per scorrere la raccolta.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey@TValue}#Keys">
      <summary vsli:raw="Gets a collection containing the keys in the &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2&quot; /&gt;.">Ottiene una raccolta contenente le chiavi della classe <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</summary>
      <returns vsli:raw="A collection containing the keys in the &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2&quot; /&gt;.">Raccolta contenente le chiavi presenti in <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey@TValue}#Values">
      <summary vsli:raw="Gets a collection containing the values in the &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2&quot; /&gt;.">Ottiene una raccolta contenente i valori di <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</summary>
      <returns vsli:raw="A collection containing the values in the &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2&quot; /&gt;.">Raccolta contenente i valori nell'oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; to an array, starting at the specified array index.">Copia gli elementi dell'interfaccia <see cref="T:System.Collections.Generic.ICollection`1" /> in una matrice, iniziando dall'indice di matrice specificato.</summary>
      <param name="array" vsli:raw="The one-dimensional array that is the destination of the elements copied from the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;. The array must have zero-based indexing.">Matrice unidimensionale che è la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.Generic.ICollection`1" />. La matrice deve avere un'indicizzazione in base zero.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than 0.">
        <paramref name="index" /> è minore di 0.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;array&quot; /&gt; does not have zero-based indexing.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in the source &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The type of the source &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> è multidimensionale.  
-oppure- 
 <paramref name="array" /> non dispone di indicizzazione in base zero.  
In alternativa 
Il numero di elementi nell'oggetto <see cref="T:System.Collections.Generic.ICollection`1" /> di origine è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.  
-oppure- 
Non è possibile eseguire il cast automatico del tipo dell'oggetto <see cref="T:System.Collections.Generic.ICollection`1" /> di origine al tipo dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe).">Ottiene un valore che indica se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;.  In the default implementation of &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2&quot; /&gt;, this property always returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe); in caso contrario, <see langword="false" />.  Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.SortedDictionary`2" />, questa proprietà restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">Ottiene un oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">Oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
      <summary vsli:raw="Adds an element with the provided key and value to the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt;.">Aggiunge un elemento con la chiave e il valore forniti all'interfaccia <see cref="T:System.Collections.IDictionary" />.</summary>
      <param name="key" vsli:raw="The object to use as the key of the element to add.">Oggetto da usare come chiave dell'elemento da aggiungere.</param>
      <param name="value" vsli:raw="The object to use as the value of the element to add.">Oggetto da usare come valore dell'elemento da aggiungere.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is of a type that is not assignable to the key type &lt;paramref name=&quot;TKey&quot; /&gt; of the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;value&quot; /&gt; is of a type that is not assignable to the value type &lt;paramref name=&quot;TValue&quot; /&gt; of the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; An element with the same key already exists in the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt;.">Il tipo della chiave indicata nel parametro <paramref name="key" /> non è assegnabile al tipo di chiave <paramref name="TKey" /> dell'insieme <see cref="T:System.Collections.IDictionary" />.  
In alternativa 
 <paramref name="value" /> è un tipo che non è possibile assegnare al tipo di valore <paramref name="TValue" /> dell'oggetto <see cref="T:System.Collections.IDictionary" />.  
In alternativa 
In <see cref="T:System.Collections.IDictionary" /> è già presente un elemento con la stessa chiave.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Contains(System.Object)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; contains an element with the specified key.">Determina se <see cref="T:System.Collections.IDictionary" /> contiene un elemento con la chiave specificata.</summary>
      <param name="key" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt;.">Chiave da individuare in <see cref="T:System.Collections.IDictionary" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; contains an element with the key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="T:System.Collections.IDictionary" /> contiene un elemento con la chiave; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#GetEnumerator">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.IDictionaryEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt;.">Restituisce <see cref="T:System.Collections.IDictionaryEnumerator" /> per <see cref="T:System.Collections.IDictionary" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionaryEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt;.">
        <see cref="T:System.Collections.IDictionaryEnumerator" /> per l'oggetto <see cref="T:System.Collections.IDictionary" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#IsFixedSize">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; has a fixed size.">Ottiene un valore che indica se <see cref="T:System.Collections.IDictionary" /> ha dimensioni fisse.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; has a fixed size; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  In the default implementation of &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2&quot; /&gt;, this property always returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="T:System.Collections.IDictionary" /> è di dimensioni fisse; in caso contrario, <see langword="false" />.  Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.SortedDictionary`2" />, questa proprietà restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; is read-only.">Ottiene un valore che indica se <see cref="T:System.Collections.IDictionary" /> è di sola lettura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  In the default implementation of &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2&quot; /&gt;, this property always returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="T:System.Collections.IDictionary" /> è di sola lettura; in caso contrario, <see langword="false" />.  Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.SortedDictionary`2" />, questa proprietà restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Item(System.Object)">
      <summary vsli:raw="Gets or sets the element with the specified key.">Ottiene o imposta l'elemento con la chiave specificata.</summary>
      <param name="key" vsli:raw="The key of the element to get.">Chiave dell'elemento da ottenere.</param>
      <returns vsli:raw="The element with the specified key, or &lt;see langword=&quot;null&quot; /&gt; if &lt;paramref name=&quot;key&quot; /&gt; is not in the dictionary or &lt;paramref name=&quot;key&quot; /&gt; is of a type that is not assignable to the key type &lt;paramref name=&quot;TKey&quot; /&gt; of the &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2&quot; /&gt;.">L'elemento con la chiave specificata, o <see langword="null" /> se <paramref name="key" /> non è presente nel dizionario o se il tipo di <paramref name="key" /> non può essere assegnato al tipo di chiave <paramref name="TKey" /> della classe <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="A value is being assigned, and &lt;paramref name=&quot;key&quot; /&gt; is of a type that is not assignable to the key type &lt;paramref name=&quot;TKey&quot; /&gt; of the &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; A value is being assigned, and &lt;paramref name=&quot;value&quot; /&gt; is of a type that is not assignable to the value type &lt;paramref name=&quot;TValue&quot; /&gt; of the &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2&quot; /&gt;.">Viene assegnato un valore e il tipo di <paramref name="key" /> non può essere assegnato al tipo di chiave <paramref name="TKey" /> della classe<see cref="T:System.Collections.Generic.SortedDictionary`2" />.  
-oppure- 
Viene assegnato un valore e il tipo di <paramref name="value" /> non può essere assegnato al tipo di valore <paramref name="TValue" /> della classe<see cref="T:System.Collections.Generic.SortedDictionary`2" />.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Keys">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; containing the keys of the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt;.">Ottiene <see cref="T:System.Collections.ICollection" /> contenente le chiavi di <see cref="T:System.Collections.IDictionary" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; containing the keys of the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt;.">Interfaccia <see cref="T:System.Collections.ICollection" /> contenente le chiavi dell'interfaccia <see cref="T:System.Collections.IDictionary" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Remove(System.Object)">
      <summary vsli:raw="Removes the element with the specified key from the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt;.">Rimuove l'elemento con la chiave specificata da <see cref="T:System.Collections.IDictionary" />.</summary>
      <param name="key" vsli:raw="The key of the element to remove.">Chiave dell'elemento da rimuovere.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Values">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; containing the values in the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt;.">Ottiene <see cref="T:System.Collections.ICollection" /> contenente i valori in <see cref="T:System.Collections.IDictionary" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; containing the values in the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt;.">Interfaccia <see cref="T:System.Collections.ICollection" /> contenente i valori dell'interfaccia <see cref="T:System.Collections.IDictionary" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the collection.">Restituisce un enumeratore che consente di scorrere la raccolta.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to iterate through the collection.">Oggetto <see cref="T:System.Collections.IEnumerator" /> che può essere usato per eseguire l'iterazione della raccolta.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.TryGetValue(`0,`1@)">
      <summary vsli:raw="Gets the value associated with the specified key.">Ottiene il valore associato alla chiave specificata.</summary>
      <param name="key" vsli:raw="The key of the value to get.">Chiave del valore da ottenere.</param>
      <param name="value" vsli:raw="When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">Quando termina, questo metodo restituisce il valore associato alla chiave specificata nel caso in cui la chiave venga trovata; in caso contrario, il valore predefinito per il tipo di parametro <paramref name="value" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2&quot; /&gt; contains an element with the specified key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="T:System.Collections.Generic.SortedDictionary`2" /> contiene un elemento con la chiave specificata; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> è <see langword="null" />.</exception>
    </member>
    <member name="T:System.Collections.Generic.SortedDictionary`2.ValueCollection">
      <summary vsli:raw="Represents the collection of values in a &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2&quot; /&gt;. This class cannot be inherited.">Rappresenta la raccolta di valori in una classe <see cref="T:System.Collections.Generic.SortedDictionary`2" />. Questa classe non può essere ereditata.</summary>
      <typeparam name="TKey" vsli:raw="" />
      <typeparam name="TValue" vsli:raw="" />
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.#ctor(System.Collections.Generic.SortedDictionary{`0,`1})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2.ValueCollection&quot; /&gt; class that reflects the values in the specified &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2&quot; /&gt;.">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" /> in cui sono riprodotti i valori dell'insieme <see cref="T:System.Collections.Generic.SortedDictionary`2" /> specificato.</summary>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2&quot; /&gt; whose values are reflected in the new &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2.ValueCollection&quot; /&gt;.">Insieme <see cref="T:System.Collections.Generic.SortedDictionary`2" /> i cui valori sono riportati nel nuovo oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dictionary&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dictionary" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.CopyTo(`1[],System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2.ValueCollection&quot; /&gt; elements to an existing one-dimensional array, starting at the specified array index.">Copia gli elementi dell'insieme <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" /> in una matrice unidimensionale esistente, a partire dall'indice di matrice specificato.</summary>
      <param name="array" vsli:raw="The one-dimensional array that is the destination of the elements copied from the &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2.ValueCollection&quot; /&gt;. The array must have zero-based indexing.">Matrice unidimensionale che è la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" />. La matrice deve avere un'indicizzazione in base zero.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than 0.">
        <paramref name="index" /> è minore di 0.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the source &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2.ValueCollection&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">Il numero di elementi nell'oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" /> di origine è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.ValueCollection.Count">
      <summary vsli:raw="Gets the number of elements contained in the &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2.ValueCollection&quot; /&gt;.">Ottiene il numero di elementi contenuti in <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" />.</summary>
      <returns vsli:raw="The number of elements contained in the &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2.ValueCollection&quot; /&gt;.">Numero di elementi contenuti nell'oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" />.</returns>
    </member>
    <member name="T:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator">
      <summary vsli:raw="Enumerates the elements of a &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2.ValueCollection&quot; /&gt;.">Enumera gli elementi di un oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" />.</summary>
      <typeparam name="TKey" vsli:raw="" />
      <typeparam name="TValue" vsli:raw="" />
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.Current">
      <summary vsli:raw="Gets the element at the current position of the enumerator.">Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <returns vsli:raw="The element in the &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2.ValueCollection&quot; /&gt; at the current position of the enumerator.">Elemento dell'insieme <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" /> in corrispondenza della posizione corrente dell'enumeratore.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator&quot; /&gt;.">Rilascia tutte le risorse usate da <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.MoveNext">
      <summary vsli:raw="Advances the enumerator to the next element of the &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2.ValueCollection&quot; /&gt;.">Sposta l'enumeratore all'elemento successivo dell'oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the enumerator was successfully advanced to the next element; &lt;see langword=&quot;false&quot; /&gt; if the enumerator has passed the end of the collection.">
        <see langword="true" /> se l'enumeratore è stato spostato correttamente in avanti in corrispondenza dell'elemento successivo, <see langword="false" /> se l'enumeratore ha superato la fine della raccolta.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The collection was modified after the enumerator was created.">La raccolta è stata modificata dopo la creazione dell'enumeratore.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.System#Collections#IEnumerator#Current">
      <summary vsli:raw="Gets the element at the current position of the enumerator.">Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <returns vsli:raw="The element in the collection at the current position of the enumerator.">Elemento della raccolta in corrispondenza della posizione corrente dell'enumeratore.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The enumerator is positioned before the first element of the collection or after the last element.">L'enumeratore è posizionato prima del primo elemento della raccolta o dopo l'ultimo elemento.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.System#Collections#IEnumerator#Reset">
      <summary vsli:raw="Sets the enumerator to its initial position, which is before the first element in the collection.">Imposta l'enumeratore sulla propria posizione iniziale, ovvero prima del primo elemento nella raccolta.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The collection was modified after the enumerator was created.">La raccolta è stata modificata dopo la creazione dell'enumeratore.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2.ValueCollection&quot; /&gt;.">Restituisce un enumeratore che esegue l'iterazione di <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator&quot; /&gt; structure for the &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2.ValueCollection&quot; /&gt;.">Struttura <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator" /> dell'insieme <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Add(`1)">
      <summary vsli:raw="Adds an item to the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;. This implementation always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Aggiunge un elemento a <see cref="T:System.Collections.Generic.ICollection`1" />. Questa implementazione genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="item" vsli:raw="The object to add to the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">Oggetto da aggiungere all'oggetto <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Always thrown; the collection is read-only.">Generata sempre. La raccolta è di sola lettura.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Clear">
      <summary vsli:raw="Removes all items from the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;. This implementation always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Rimuove tutti gli elementi da <see cref="T:System.Collections.Generic.ICollection`1" />. Questa implementazione genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="Always thrown; the collection is read-only.">Generata sempre. La raccolta è di sola lettura.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Contains(`1)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; contains a specified value.">Determina se <see cref="T:System.Collections.Generic.ICollection`1" /> contiene un valore specifico.</summary>
      <param name="item" vsli:raw="The object to locate in the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">Oggetto da individuare nella raccolta <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;item&quot; /&gt; is found in the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="item" /> è presente in <see cref="T:System.Collections.Generic.ICollection`1" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; is read-only.">Ottiene un valore che indica se <see cref="T:System.Collections.Generic.ICollection`1" /> è di sola lettura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  In the default implementation of &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2.ValueCollection&quot; /&gt;, this property always returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="T:System.Collections.Generic.ICollection`1" /> è di sola lettura; in caso contrario, <see langword="false" />.  Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" />, questa proprietà restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Remove(`1)">
      <summary vsli:raw="Removes the first occurrence of a specific object from the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;. This implementation always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Rimuove la prima occorrenza di un oggetto specifico da <see cref="T:System.Collections.Generic.ICollection`1" />. Questa implementazione genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="item" vsli:raw="The object to remove from the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">Oggetto da rimuovere da <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;item&quot; /&gt; is successfully removed from the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;. This method also returns &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;item&quot; /&gt; is not found in the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">
        <see langword="true" /> se <paramref name="item" /> è stato rimosso correttamente da <see cref="T:System.Collections.Generic.ICollection`1" />. In caso contrario, <see langword="false" />. Questo metodo restituisce anche <see langword="false" /> se il parametro <paramref name="item" /> non viene trovato nella classe <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Always thrown; the collection is read-only.">Generata sempre. La raccolta è di sola lettura.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#IEnumerable{TValue}#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the collection.">Restituisce un enumeratore che consente di scorrere la raccolta.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerator`1&quot; /&gt; that can be used to iterate through the collection.">Oggetto <see cref="T:System.Collections.Generic.IEnumerator`1" /> che può essere usato per eseguire l'iterazione della raccolta.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; to an array, starting at a particular array index.">Copia gli elementi dell'oggetto <see cref="T:System.Collections.ICollection" /> in una matrice, iniziando in corrispondenza di un particolare indice di matrice.</summary>
      <param name="array" vsli:raw="The one-dimensional array that is the destination of the elements copied from the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;. The array must have zero-based indexing.">Matrice unidimensionale che è la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.ICollection" />. La matrice deve avere un'indicizzazione in base zero.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than 0.">
        <paramref name="index" /> è minore di 0.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;array&quot; /&gt; does not have zero-based indexing.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in the source &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The type of the source &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> è multidimensionale.  
-oppure- 
 <paramref name="array" /> non dispone di indicizzazione in base zero.  
-oppure- 
Il numero di elementi nell'oggetto <see cref="T:System.Collections.ICollection" /> di origine è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.  
-oppure- 
Non è possibile eseguire il cast automatico del tipo dell'oggetto <see cref="T:System.Collections.ICollection" /> di origine al tipo dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe).">Ottiene un valore che indica se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;.  In the default implementation of &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2.ValueCollection&quot; /&gt;, this property always returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe); in caso contrario, <see langword="false" />.  Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" />, questa proprietà restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">Ottiene un oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.  In the default implementation of &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2.ValueCollection&quot; /&gt;, this property always returns the current instance.">Oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.  Nell'implementazione predefinita dell'oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" />, questa proprietà restituisce sempre l'istanza corrente.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the collection.">Restituisce un enumeratore che consente di scorrere la raccolta.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to iterate through the collection.">Oggetto <see cref="T:System.Collections.IEnumerator" /> che può essere usato per eseguire l'iterazione della raccolta.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.Values">
      <summary vsli:raw="Gets a collection containing the values in the &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2&quot; /&gt;.">Ottiene una raccolta contenente i valori di <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2.ValueCollection&quot; /&gt; containing the values in the &lt;see cref=&quot;T:System.Collections.Generic.SortedDictionary`2&quot; /&gt;.">Insieme <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" /> contenente i valori dell'insieme <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</returns>
    </member>
    <member name="T:System.Collections.Generic.SortedList`2">
      <summary vsli:raw="Represents a collection of key/value pairs that are sorted by key based on the associated &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; implementation.">Rappresenta una raccolta di coppie chiave/valore ordinate per chiave in base all'implementazione <see cref="T:System.Collections.Generic.IComparer`1" /> associata.</summary>
      <typeparam name="TKey" vsli:raw="The type of keys in the collection.">Tipo di chiavi nella raccolta.</typeparam>
      <typeparam name="TValue" vsli:raw="The type of values in the collection.">Tipo di valori nell'insieme.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Generic.SortedList`2&quot; /&gt; class that is empty, has the default initial capacity, and uses the default &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt;.">Inizializza una nuova istanza vuota della classe <see cref="T:System.Collections.Generic.SortedList`2" /> con la capacità iniziale predefinita e che utilizza l'interfaccia <see cref="T:System.Collections.Generic.IComparer`1" /> predefinita.</summary>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IComparer{`0})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Generic.SortedList`2&quot; /&gt; class that is empty, has the default initial capacity, and uses the specified &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt;.">Inizializza una nuova istanza vuota della classe <see cref="T:System.Collections.Generic.SortedList`2" />, con capacità iniziale predefinita e che utilizza l'interfaccia <see cref="T:System.Collections.Generic.IComparer`1" /> specificata.</summary>
      <param name="comparer" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; implementation to use when comparing keys.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; to use the default &lt;see cref=&quot;T:System.Collections.Generic.Comparer`1&quot; /&gt; for the type of the key.">Implementazione di <see cref="T:System.Collections.Generic.IComparer`1" /> da usare quando si confrontano le chiavi.  
-oppure- 
 <see langword="null" /> per utilizzare l'oggetto <see cref="T:System.Collections.Generic.Comparer`1" /> per il tipo della chiave.</param>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Generic.SortedList`2&quot; /&gt; class that contains elements copied from the specified &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt;, has sufficient capacity to accommodate the number of elements copied, and uses the default &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt;.">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.SortedList`2" /> che contiene gli elementi copiati dall'interfaccia <see cref="T:System.Collections.Generic.IDictionary`2" /> specificata, che presenta una capacità sufficiente a contenere il numero di elementi copiati e che utilizza l'interfaccia <see cref="T:System.Collections.Generic.IComparer`1" /> predefinita.</summary>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt; whose elements are copied to the new &lt;see cref=&quot;T:System.Collections.Generic.SortedList`2&quot; /&gt;.">Oggetto <see cref="T:System.Collections.Generic.IDictionary`2" /> i cui elementi sono copiati nel nuovo oggetto <see cref="T:System.Collections.Generic.SortedList`2" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dictionary&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dictionary" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;dictionary&quot; /&gt; contains one or more duplicate keys.">
        <paramref name="dictionary" /> contiene una o più chiavi duplicate.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IComparer{`0})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Generic.SortedList`2&quot; /&gt; class that contains elements copied from the specified &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt;, has sufficient capacity to accommodate the number of elements copied, and uses the specified &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt;.">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.SortedList`2" /> che contiene gli elementi copiati dall'interfaccia <see cref="T:System.Collections.Generic.IDictionary`2" /> specificata, che presenta una capacità sufficiente a contenere il numero di elementi copiati e che utilizza l'interfaccia <see cref="T:System.Collections.Generic.IComparer`1" /> specificata.</summary>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt; whose elements are copied to the new &lt;see cref=&quot;T:System.Collections.Generic.SortedList`2&quot; /&gt;.">Oggetto <see cref="T:System.Collections.Generic.IDictionary`2" /> i cui elementi sono copiati nel nuovo oggetto <see cref="T:System.Collections.Generic.SortedList`2" />.</param>
      <param name="comparer" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; implementation to use when comparing keys.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; to use the default &lt;see cref=&quot;T:System.Collections.Generic.Comparer`1&quot; /&gt; for the type of the key.">Implementazione di <see cref="T:System.Collections.Generic.IComparer`1" /> da usare quando si confrontano le chiavi.  
-oppure- 
 <see langword="null" /> per utilizzare l'oggetto <see cref="T:System.Collections.Generic.Comparer`1" /> per il tipo della chiave.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dictionary&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dictionary" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;dictionary&quot; /&gt; contains one or more duplicate keys.">
        <paramref name="dictionary" /> contiene una o più chiavi duplicate.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Generic.SortedList`2&quot; /&gt; class that is empty, has the specified initial capacity, and uses the default &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt;.">Inizializza una nuova istanza vuota della classe <see cref="T:System.Collections.Generic.SortedList`2" />, con la capacità iniziale specificata e che utilizza l'interfaccia <see cref="T:System.Collections.Generic.IComparer`1" /> predefinita.</summary>
      <param name="capacity" vsli:raw="The initial number of elements that the &lt;see cref=&quot;T:System.Collections.Generic.SortedList`2&quot; /&gt; can contain.">Numero iniziale degli elementi che <see cref="T:System.Collections.Generic.SortedList`2" /> può contenere.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is less than zero.">
        <paramref name="capacity" /> è minore di zero.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.#ctor(System.Int32,System.Collections.Generic.IComparer{`0})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Generic.SortedList`2&quot; /&gt; class that is empty, has the specified initial capacity, and uses the specified &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt;.">Inizializza una nuova istanza vuota della classe <see cref="T:System.Collections.Generic.SortedList`2" />, con capacità iniziale specificata e che utilizza l'interfaccia <see cref="T:System.Collections.Generic.IComparer`1" /> specificata.</summary>
      <param name="capacity" vsli:raw="The initial number of elements that the &lt;see cref=&quot;T:System.Collections.Generic.SortedList`2&quot; /&gt; can contain.">Numero iniziale degli elementi che <see cref="T:System.Collections.Generic.SortedList`2" /> può contenere.</param>
      <param name="comparer" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; implementation to use when comparing keys.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; to use the default &lt;see cref=&quot;T:System.Collections.Generic.Comparer`1&quot; /&gt; for the type of the key.">Implementazione di <see cref="T:System.Collections.Generic.IComparer`1" /> da usare quando si confrontano le chiavi.  
-oppure- 
 <see langword="null" /> per utilizzare l'oggetto <see cref="T:System.Collections.Generic.Comparer`1" /> per il tipo della chiave.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is less than zero.">
        <paramref name="capacity" /> è minore di zero.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.Add(`0,`1)">
      <summary vsli:raw="Adds an element with the specified key and value into the &lt;see cref=&quot;T:System.Collections.Generic.SortedList`2&quot; /&gt;.">Aggiunge un elemento con la chiave e il valore specificati al metodo <see cref="T:System.Collections.Generic.SortedList`2" />.</summary>
      <param name="key" vsli:raw="The key of the element to add.">Chiave dell'elemento da aggiungere.</param>
      <param name="value" vsli:raw="The value of the element to add. The value can be &lt;see langword=&quot;null&quot; /&gt; for reference types.">Valore dell'elemento da aggiungere. Il valore può essere <see langword="null" /> per i tipi di riferimento.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An element with the same key already exists in the &lt;see cref=&quot;T:System.Collections.Generic.SortedList`2&quot; /&gt;.">In <see cref="T:System.Collections.Generic.SortedList`2" /> è già presente un elemento con la stessa chiave.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedList`2.Capacity">
      <summary vsli:raw="Gets or sets the number of elements that the &lt;see cref=&quot;T:System.Collections.Generic.SortedList`2&quot; /&gt; can contain.">Ottiene o imposta il numero di elementi che <see cref="T:System.Collections.Generic.SortedList`2" /> può contenere.</summary>
      <returns vsli:raw="The number of elements that the &lt;see cref=&quot;T:System.Collections.Generic.SortedList`2&quot; /&gt; can contain.">Numero degli elementi che <see cref="T:System.Collections.Generic.SortedList`2" /> può contenere.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;see cref=&quot;P:System.Collections.Generic.SortedList`2.Capacity&quot; /&gt; is set to a value that is less than &lt;see cref=&quot;P:System.Collections.Generic.SortedList`2.Count&quot; /&gt;.">L'oggetto <see cref="P:System.Collections.Generic.SortedList`2.Capacity" /> è impostato su un valore minore di <see cref="P:System.Collections.Generic.SortedList`2.Count" />.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory available on the system.">La memoria disponibile nel sistema non è sufficiente.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.Clear">
      <summary vsli:raw="Removes all elements from the &lt;see cref=&quot;T:System.Collections.Generic.SortedList`2&quot; /&gt;.">Rimuove tutti gli elementi da <see cref="T:System.Collections.Generic.SortedList`2" />.</summary>
    </member>
    <member name="P:System.Collections.Generic.SortedList`2.Comparer">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; for the sorted list.">Ottiene l'interfaccia <see cref="T:System.Collections.Generic.IComparer`1" /> per l'elenco ordinato.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IComparable`1&quot; /&gt; for the current &lt;see cref=&quot;T:System.Collections.Generic.SortedList`2&quot; /&gt;.">Oggetto <see cref="T:System.IComparable`1" /> dell'oggetto <see cref="T:System.Collections.Generic.SortedList`2" /> corrente</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.ContainsKey(`0)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Collections.Generic.SortedList`2&quot; /&gt; contains a specific key.">Determina se l'oggetto <see cref="T:System.Collections.Generic.SortedList`2" /> contiene una chiave specifica.</summary>
      <param name="key" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Collections.Generic.SortedList`2&quot; /&gt;.">Chiave da individuare in <see cref="T:System.Collections.Generic.SortedList`2" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.Generic.SortedList`2&quot; /&gt; contains an element with the specified key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="T:System.Collections.Generic.SortedList`2" /> contiene un elemento con la chiave specificata; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.ContainsValue(`1)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Collections.Generic.SortedList`2&quot; /&gt; contains a specific value.">Stabilisce se <see cref="T:System.Collections.Generic.SortedList`2" /> contiene un valore specifico.</summary>
      <param name="value" vsli:raw="The value to locate in the &lt;see cref=&quot;T:System.Collections.Generic.SortedList`2&quot; /&gt;. The value can be &lt;see langword=&quot;null&quot; /&gt; for reference types.">Valore da individuare in <see cref="T:System.Collections.Generic.SortedList`2" />. Il valore può essere <see langword="null" /> per i tipi di riferimento.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.Generic.SortedList`2&quot; /&gt; contains an element with the specified value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="T:System.Collections.Generic.SortedList`2" /> contiene un elemento con il valore specificato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedList`2.Count">
      <summary vsli:raw="Gets the number of key/value pairs contained in the &lt;see cref=&quot;T:System.Collections.Generic.SortedList`2&quot; /&gt;.">Ottiene il numero di coppie chiave/valore contenute in <see cref="T:System.Collections.Generic.SortedList`2" />.</summary>
      <returns vsli:raw="The number of key/value pairs contained in the &lt;see cref=&quot;T:System.Collections.Generic.SortedList`2&quot; /&gt;.">Numero di coppie chiave/valore contenute in <see cref="T:System.Collections.Generic.SortedList`2" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the &lt;see cref=&quot;T:System.Collections.Generic.SortedList`2&quot; /&gt;.">Restituisce un enumeratore che esegue l'iterazione di <see cref="T:System.Collections.Generic.SortedList`2" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerator`1&quot; /&gt; of type &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; for the &lt;see cref=&quot;T:System.Collections.Generic.SortedList`2&quot; /&gt;.">Interfaccia <see cref="T:System.Collections.Generic.IEnumerator`1" /> di tipo <see cref="T:System.Collections.Generic.KeyValuePair`2" /> per l'insieme <see cref="T:System.Collections.Generic.SortedList`2" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.IndexOfKey(`0)">
      <summary vsli:raw="Searches for the specified key and returns the zero-based index within the entire &lt;see cref=&quot;T:System.Collections.Generic.SortedList`2&quot; /&gt;.">Cerca la chiave specificata e restituisce l'indice in base zero all'interno dell'intero insieme <see cref="T:System.Collections.Generic.SortedList`2" />.</summary>
      <param name="key" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Collections.Generic.SortedList`2&quot; /&gt;.">Chiave da individuare in <see cref="T:System.Collections.Generic.SortedList`2" />.</param>
      <returns vsli:raw="The zero-based index of &lt;paramref name=&quot;key&quot; /&gt; within the entire &lt;see cref=&quot;T:System.Collections.Generic.SortedList`2&quot; /&gt;, if found; otherwise, -1.">Indice in base zero della chiave specificata nel parametro <paramref name="key" /> all'interno dell'intero insieme <see cref="T:System.Collections.Generic.SortedList`2" />, se presente; in caso contrario, -1.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.IndexOfValue(`1)">
      <summary vsli:raw="Searches for the specified value and returns the zero-based index of the first occurrence within the entire &lt;see cref=&quot;T:System.Collections.Generic.SortedList`2&quot; /&gt;.">Cerca il valore specificato e restituisce l'indice in base zero della prima occorrenza all'interno dell'intero insieme <see cref="T:System.Collections.Generic.SortedList`2" />.</summary>
      <param name="value" vsli:raw="The value to locate in the &lt;see cref=&quot;T:System.Collections.Generic.SortedList`2&quot; /&gt;.  The value can be &lt;see langword=&quot;null&quot; /&gt; for reference types.">Valore da individuare in <see cref="T:System.Collections.Generic.SortedList`2" />.  Il valore può essere <see langword="null" /> per i tipi di riferimento.</param>
      <returns vsli:raw="The zero-based index of the first occurrence of &lt;paramref name=&quot;value&quot; /&gt; within the entire &lt;see cref=&quot;T:System.Collections.Generic.SortedList`2&quot; /&gt;, if found; otherwise, -1.">Indice in base zero della prima occorrenza di <paramref name="value" /> all'interno dell'intero oggetto <see cref="T:System.Collections.Generic.SortedList`2" />, se presente; in caso contrario, -1.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedList`2.Item(`0)">
      <summary vsli:raw="Gets or sets the value associated with the specified key.">Ottiene o imposta il valore associato alla chiave specificata.</summary>
      <param name="key" vsli:raw="The key whose value to get or set.">Chiave di cui si deve ottenere o impostare il valore.</param>
      <returns vsli:raw="The value associated with the specified key. If the specified key is not found, a get operation throws a &lt;see cref=&quot;T:System.Collections.Generic.KeyNotFoundException&quot; /&gt; and a set operation creates a new element using the specified key.">Valore associato alla chiave specificata. Se la chiave specificata non viene trovata, un'operazione get genera <see cref="T:System.Collections.Generic.KeyNotFoundException" /> mentre tentando di impostarla viene creato un nuovo elemento con la chiave specificata.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException" vsli:raw="The property is retrieved and &lt;paramref name=&quot;key&quot; /&gt; does not exist in the collection.">Durante il recupero della proprietà, la chiave indicata nel parametro <paramref name="key" /> non è stata trovata nella raccolta.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedList`2.Keys">
      <summary vsli:raw="Gets a collection containing the keys in the &lt;see cref=&quot;T:System.Collections.Generic.SortedList`2&quot; /&gt;, in sorted order.">Ottiene una raccolta contenente le chiavi in <see cref="T:System.Collections.Generic.SortedList`2" /> nell'ordine specificato.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.IList`1&quot; /&gt; containing the keys in the &lt;see cref=&quot;T:System.Collections.Generic.SortedList`2&quot; /&gt;.">Insieme <see cref="T:System.Collections.Generic.IList`1" /> contenente le chiavi della classe <see cref="T:System.Collections.Generic.SortedList`2" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.Remove(`0)">
      <summary vsli:raw="Removes the element with the specified key from the &lt;see cref=&quot;T:System.Collections.Generic.SortedList`2&quot; /&gt;.">Rimuove l'elemento con la chiave specificata da <see cref="T:System.Collections.Generic.SortedList`2" />.</summary>
      <param name="key" vsli:raw="The key of the element to remove.">Chiave dell'elemento da rimuovere.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the element is successfully removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  This method also returns &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;key&quot; /&gt; was not found in the original &lt;see cref=&quot;T:System.Collections.Generic.SortedList`2&quot; /&gt;.">
        <see langword="true" /> se l'elemento viene rimosso correttamente; in caso contrario, <see langword="false" />.  Questo metodo restituisce anche <see langword="false" /> se <paramref name="key" /> non è stato trovato nell'interfaccia <see cref="T:System.Collections.Generic.SortedList`2" /> originale.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the element at the specified index of the &lt;see cref=&quot;T:System.Collections.Generic.SortedList`2&quot; /&gt;.">Rimuove l'elemento in corrispondenza dell'indice specificato di <see cref="T:System.Collections.Generic.SortedList`2" />.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to remove.">Indice in base zero dell'elemento da rimuovere.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is equal to or greater than &lt;see cref=&quot;P:System.Collections.Generic.SortedList`2.Count&quot; /&gt;.">
        <paramref name="index" /> è minore di zero.  
-oppure- 
 <paramref name="index" /> è uguale a o maggiore di <see cref="P:System.Collections.Generic.SortedList`2.Count" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})">
      <summary vsli:raw="Adds a key/value pair to the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">Aggiunge una coppia chiave/valore all'interfaccia <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <param name="keyValuePair" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; to add to the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">Oggetto <see cref="T:System.Collections.Generic.KeyValuePair`2" /> da aggiungere a <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; contains a specific element.">Consente di stabilire se <see cref="T:System.Collections.Generic.ICollection`1" /> contiene un elemento specifico.</summary>
      <param name="keyValuePair" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; to locate in the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">Oggetto <see cref="T:System.Collections.Generic.KeyValuePair`2" /> da individuare in <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;keyValuePair&quot; /&gt; is found in the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="keyValuePair" /> è presente in <see cref="T:System.Collections.Generic.ICollection`1" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; to an &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at a particular &lt;see cref=&quot;T:System.Array&quot; /&gt; index.">Copia gli elementi di <see cref="T:System.Collections.Generic.ICollection`1" /> in <see cref="T:System.Array" /> a partire da un particolare indice <see cref="T:System.Array" />.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">Oggetto <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.Generic.ICollection`1" />. L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</param>
      <param name="arrayIndex" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;arrayIndex&quot; /&gt; is less than zero.">
        <paramref name="arrayIndex" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the source &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;arrayIndex&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">Il numero di elementi nell'oggetto <see cref="T:System.Collections.Generic.ICollection`1" /> di origine è maggiore dello spazio disponibile tra <paramref name="arrayIndex" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedList`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; is read-only.">Ottiene un valore che indica se <see cref="T:System.Collections.Generic.ICollection`1" /> è di sola lettura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;. In the default implementation of &lt;see cref=&quot;T:System.Collections.Generic.SortedList`2&quot; /&gt;, this property always returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="T:System.Collections.Generic.ICollection`1" /> è di sola lettura; in caso contrario, <see langword="false" />. Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.SortedList`2" />, questa proprietà restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})">
      <summary vsli:raw="Removes the first occurrence of a specific key/value pair from the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">Rimuove la prima occorrenza di una coppia chiave/valore specifica dall'interfaccia <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <param name="keyValuePair" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; to remove from the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">Oggetto <see cref="T:System.Collections.Generic.KeyValuePair`2" /> da rimuovere da <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;keyValuePair&quot; /&gt; was successfully removed from the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;. This method also returns &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;keyValuePair&quot; /&gt; was not found in the original &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">
        <see langword="true" /> se <paramref name="keyValuePair" /> è stato rimosso correttamente da <see cref="T:System.Collections.Generic.ICollection`1" />; in caso contrario, <see langword="false" />. Questo metodo restituisce anche <see langword="false" /> se <paramref name="keyValuePair" /> non è stato trovato nell'interfaccia <see cref="T:System.Collections.Generic.ICollection`1" /> originale.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedList`2.System#Collections#Generic#IDictionary{TKey@TValue}#Keys">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; containing the keys of the &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt;.">Ottiene <see cref="T:System.Collections.Generic.ICollection`1" /> contenente le chiavi di <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; containing the keys of the &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt;.">Interfaccia <see cref="T:System.Collections.Generic.ICollection`1" /> contenente le chiavi dell'interfaccia <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedList`2.System#Collections#Generic#IDictionary{TKey@TValue}#Values">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; containing the values in the &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt;.">Ottiene <see cref="T:System.Collections.Generic.ICollection`1" /> contenente i valori in <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns vsli:raw="An object containing the values in the &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt;.">Oggetto contenente i valori presenti in <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey@TValue}}#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through a collection.">Restituisce un enumeratore che consente di eseguire l'iterazione di una raccolta.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerator`1&quot; /&gt; that can be used to iterate through the collection.">Oggetto <see cref="T:System.Collections.Generic.IEnumerator`1" /> che può essere usato per eseguire l'iterazione della raccolta.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedList`2.System#Collections#Generic#IReadOnlyDictionary{TKey@TValue}#Keys">
      <summary vsli:raw="Gets an enumerable collection that contains the keys in the read-only dictionary.">Ottiene una raccolta enumerabile contenente le chiavi nel dizionario di sola lettura.</summary>
      <returns vsli:raw="An enumerable collection that contains the keys in the read-only dictionary.">Raccolta enumerabile contenente le chiavi nel dizionario di sola lettura.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedList`2.System#Collections#Generic#IReadOnlyDictionary{TKey@TValue}#Values">
      <summary vsli:raw="Gets an enumerable collection that contains the values in the read-only dictionary.">Ottiene una raccolta enumerabile contenente i valori nel dizionario di sola lettura.</summary>
      <returns vsli:raw="An enumerable collection that contains the values in the read-only dictionary.">Raccolta enumerabile contenente i valori nel dizionario di sola lettura.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; to an &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at a particular &lt;see cref=&quot;T:System.Array&quot; /&gt; index.">Copia gli elementi di <see cref="T:System.Collections.ICollection" /> in <see cref="T:System.Array" /> a partire da un particolare indice <see cref="T:System.Array" />.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">Oggetto <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.ICollection" />. L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</param>
      <param name="arrayIndex">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;arrayIndex&quot; /&gt; is less than zero.">
        <paramref name="arrayIndex" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;array&quot; /&gt; does not have zero-based indexing.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in the source &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;arrayIndex&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The type of the source &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> è multidimensionale.  
In alternativa 
 <paramref name="array" /> non dispone di indicizzazione in base zero.  
-oppure- 
Il numero di elementi nell'oggetto <see cref="T:System.Collections.ICollection" /> di origine è maggiore dello spazio disponibile tra <paramref name="arrayIndex" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.  
-oppure- 
Non è possibile eseguire il cast automatico del tipo dell'oggetto <see cref="T:System.Collections.ICollection" /> di origine al tipo dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedList`2.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe).">Ottiene un valore che indica se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;.  In the default implementation of &lt;see cref=&quot;T:System.Collections.Generic.SortedList`2&quot; /&gt;, this property always returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe); in caso contrario, <see langword="false" />.  Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.SortedList`2" />, questa proprietà restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedList`2.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">Ottiene un oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.  In the default implementation of &lt;see cref=&quot;T:System.Collections.Generic.SortedList`2&quot; /&gt;, this property always returns the current instance.">Oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.  Nell'implementazione predefinita dell'oggetto <see cref="T:System.Collections.Generic.SortedList`2" />, questa proprietà restituisce sempre l'istanza corrente.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
      <summary vsli:raw="Adds an element with the provided key and value to the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt;.">Aggiunge un elemento con la chiave e il valore forniti all'interfaccia <see cref="T:System.Collections.IDictionary" />.</summary>
      <param name="key" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to use as the key of the element to add.">Oggetto <see cref="T:System.Object" /> da usare come chiave dell'elemento da aggiungere.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to use as the value of the element to add.">Oggetto <see cref="T:System.Object" /> da usare come valore dell'elemento da aggiungere.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is of a type that is not assignable to the key type &lt;paramref name=&quot;TKey&quot; /&gt; of the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;value&quot; /&gt; is of a type that is not assignable to the value type &lt;paramref name=&quot;TValue&quot; /&gt; of the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; An element with the same key already exists in the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt;.">Il tipo della chiave indicata nel parametro <paramref name="key" /> non è assegnabile al tipo di chiave <paramref name="TKey" /> dell'insieme <see cref="T:System.Collections.IDictionary" />.  
-oppure- 
 <paramref name="value" /> è un tipo che non è possibile assegnare al tipo di valore <paramref name="TValue" /> dell'oggetto <see cref="T:System.Collections.IDictionary" />.  
-oppure- 
In <see cref="T:System.Collections.IDictionary" /> è già presente un elemento con la stessa chiave.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Contains(System.Object)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; contains an element with the specified key.">Determina se <see cref="T:System.Collections.IDictionary" /> contiene un elemento con la chiave specificata.</summary>
      <param name="key" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt;.">Chiave da individuare in <see cref="T:System.Collections.IDictionary" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; contains an element with the key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="T:System.Collections.IDictionary" /> contiene un elemento con la chiave; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#GetEnumerator">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.IDictionaryEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt;.">Restituisce <see cref="T:System.Collections.IDictionaryEnumerator" /> per <see cref="T:System.Collections.IDictionary" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionaryEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt;.">
        <see cref="T:System.Collections.IDictionaryEnumerator" /> per l'oggetto <see cref="T:System.Collections.IDictionary" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#IsFixedSize">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; has a fixed size.">Ottiene un valore che indica se <see cref="T:System.Collections.IDictionary" /> ha dimensioni fisse.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; has a fixed size; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  In the default implementation of &lt;see cref=&quot;T:System.Collections.Generic.SortedList`2&quot; /&gt;, this property always returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="T:System.Collections.IDictionary" /> è di dimensioni fisse; in caso contrario, <see langword="false" />.  Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.SortedList`2" />, questa proprietà restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; is read-only.">Ottiene un valore che indica se <see cref="T:System.Collections.IDictionary" /> è di sola lettura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  In the default implementation of &lt;see cref=&quot;T:System.Collections.Generic.SortedList`2&quot; /&gt;, this property always returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="T:System.Collections.IDictionary" /> è di sola lettura; in caso contrario, <see langword="false" />.  Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.SortedList`2" />, questa proprietà restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Item(System.Object)">
      <summary vsli:raw="Gets or sets the element with the specified key.">Ottiene o imposta l'elemento con la chiave specificata.</summary>
      <param name="key" vsli:raw="The key of the element to get or set.">Chiave dell'elemento da ottenere o impostare.</param>
      <returns vsli:raw="The element with the specified key, or &lt;see langword=&quot;null&quot; /&gt; if &lt;paramref name=&quot;key&quot; /&gt; is not in the dictionary or &lt;paramref name=&quot;key&quot; /&gt; is of a type that is not assignable to the key type &lt;paramref name=&quot;TKey&quot; /&gt; of the &lt;see cref=&quot;T:System.Collections.Generic.SortedList`2&quot; /&gt;.">L'elemento con la chiave specificata, o <see langword="null" /> se <paramref name="key" /> non è presente nel dizionario o se il tipo di <paramref name="key" /> non può essere assegnato al tipo di chiave <paramref name="TKey" /> della classe <see cref="T:System.Collections.Generic.SortedList`2" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="A value is being assigned, and &lt;paramref name=&quot;key&quot; /&gt; is of a type that is not assignable to the key type &lt;paramref name=&quot;TKey&quot; /&gt; of the &lt;see cref=&quot;T:System.Collections.Generic.SortedList`2&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; A value is being assigned, and &lt;paramref name=&quot;value&quot; /&gt; is of a type that is not assignable to the value type &lt;paramref name=&quot;TValue&quot; /&gt; of the &lt;see cref=&quot;T:System.Collections.Generic.SortedList`2&quot; /&gt;.">Viene assegnato un valore e il tipo di <paramref name="key" /> non può essere assegnato al tipo di chiave <paramref name="TKey" /> della classe<see cref="T:System.Collections.Generic.SortedList`2" />.  
In alternativa 
Viene assegnato un valore e il tipo di <paramref name="value" /> non può essere assegnato al tipo di valore <paramref name="TValue" /> della classe<see cref="T:System.Collections.Generic.SortedList`2" />.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Keys">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; containing the keys of the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt;.">Ottiene <see cref="T:System.Collections.ICollection" /> contenente le chiavi di <see cref="T:System.Collections.IDictionary" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; containing the keys of the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt;.">Interfaccia <see cref="T:System.Collections.ICollection" /> contenente le chiavi dell'interfaccia <see cref="T:System.Collections.IDictionary" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Remove(System.Object)">
      <summary vsli:raw="Removes the element with the specified key from the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt;.">Rimuove l'elemento con la chiave specificata da <see cref="T:System.Collections.IDictionary" />.</summary>
      <param name="key" vsli:raw="The key of the element to remove.">Chiave dell'elemento da rimuovere.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Values">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; containing the values in the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt;.">Ottiene <see cref="T:System.Collections.ICollection" /> contenente i valori in <see cref="T:System.Collections.IDictionary" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; containing the values in the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt;.">Interfaccia <see cref="T:System.Collections.ICollection" /> contenente i valori dell'interfaccia <see cref="T:System.Collections.IDictionary" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through a collection.">Restituisce un enumeratore che consente di eseguire l'iterazione di una raccolta.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to iterate through the collection.">Oggetto <see cref="T:System.Collections.IEnumerator" /> che può essere usato per eseguire l'iterazione della raccolta.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.TrimExcess">
      <summary vsli:raw="Sets the capacity to the actual number of elements in the &lt;see cref=&quot;T:System.Collections.Generic.SortedList`2&quot; /&gt;, if that number is less than 90 percent of current capacity.">Imposta la capacità dell'insieme sul numero reale di elementi contenuti nell'oggetto <see cref="T:System.Collections.Generic.SortedList`2" />, se questo numero è inferiore al 90 per cento della capacità corrente.</summary>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.TryGetValue(`0,`1@)">
      <summary vsli:raw="Gets the value associated with the specified key.">Ottiene il valore associato alla chiave specificata.</summary>
      <param name="key" vsli:raw="The key whose value to get.">Chiave di cui si deve ottenere il valore.</param>
      <param name="value" vsli:raw="When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the &lt;paramref name=&quot;value&quot; /&gt; parameter. This parameter is passed uninitialized.">Quando termina, questo metodo restituisce il valore associato alla chiave specificata nel caso in cui la chiave venga trovata; in caso contrario, il valore predefinito per il tipo di parametro <paramref name="value" />. Questo parametro viene passato non inizializzato.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.Generic.SortedList`2&quot; /&gt; contains an element with the specified key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="T:System.Collections.Generic.SortedList`2" /> contiene un elemento con la chiave specificata; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedList`2.Values">
      <summary vsli:raw="Gets a collection containing the values in the &lt;see cref=&quot;T:System.Collections.Generic.SortedList`2&quot; /&gt;.">Ottiene una raccolta contenente i valori di <see cref="T:System.Collections.Generic.SortedList`2" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.IList`1&quot; /&gt; containing the values in the &lt;see cref=&quot;T:System.Collections.Generic.SortedList`2&quot; /&gt;.">Insieme <see cref="T:System.Collections.Generic.IList`1" /> contenente i valori dell'insieme <see cref="T:System.Collections.Generic.SortedList`2" />.</returns>
    </member>
    <member name="T:System.Collections.Generic.SortedSet`1">
      <summary vsli:raw="Represents a collection of objects that is maintained in sorted order.">Rappresenta un insieme di oggetti di cui viene mantenuto l'ordinamento.</summary>
      <typeparam name="T" vsli:raw="The type of elements in the set.">Tipo di elementi presenti nel set.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.SortedSet`1" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IComparer{`0})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt; class that uses a specified comparer.">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.SortedSet`1" /> che utilizza un operatore di confronto specificato.</summary>
      <param name="comparer" vsli:raw="The default comparer to use for comparing objects.">Operatore di confronto predefinito da utilizzare per il confronto degli oggetti.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;comparer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="comparer" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt; class that contains elements copied from a specified enumerable collection.">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.SortedSet`1" /> che contiene elementi copiati da un insieme enumerabile specificato.</summary>
      <param name="collection" vsli:raw="The enumerable collection to be copied.">Insieme enumerabile da copiare.</param>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IComparer{`0})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt; class that contains elements copied from a specified enumerable collection and that uses a specified comparer.">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.SortedSet`1" /> che contiene elementi copiati da un insieme enumerabile specificato e che utilizza un operatore di confronto specificato.</summary>
      <param name="collection" vsli:raw="The enumerable collection to be copied.">Insieme enumerabile da copiare.</param>
      <param name="comparer" vsli:raw="The default comparer to use for comparing objects.">Operatore di confronto predefinito da utilizzare per il confronto degli oggetti.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;collection&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="collection" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt; class that contains serialized data.">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.SortedSet`1" /> che contiene dati serializzati.</summary>
      <param name="info" vsli:raw="The object that contains the information that is required to serialize the &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt; object.">Oggetto contenente le informazioni necessarie per serializzare l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" />.</param>
      <param name="context" vsli:raw="The structure that contains the source and destination of the serialized stream associated with the &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt; object.">Struttura contenente l'origine e la destinazione del flusso serializzato associato all'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" />.</param>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.Add(`0)">
      <summary vsli:raw="Adds an element to the set and returns a value that indicates if it was successfully added.">Aggiunge un elemento al set e restituisce un valore che indica se l'aggiunta è stata eseguita correttamente.</summary>
      <param name="item" vsli:raw="The element to add to the set.">Elemento da aggiungere all'insieme.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;item&quot; /&gt; is added to the set; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="item" /> viene aggiunto al set; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.Clear">
      <summary vsli:raw="Removes all elements from the set.">Rimuove tutti gli elementi dal set.</summary>
    </member>
    <member name="P:System.Collections.Generic.SortedSet`1.Comparer">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; object that is used to order the values in the &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt;.">Ottiene l'oggetto <see cref="T:System.Collections.Generic.IComparer`1" /> usato per ordinare i valori in <see cref="T:System.Collections.Generic.SortedSet`1" />.</summary>
      <returns vsli:raw="The comparer that is used to order the values in the &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt;.">L’operatore di confronto usato per ordinare i valori in <see cref="T:System.Collections.Generic.SortedSet`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.Contains(`0)">
      <summary vsli:raw="Determines whether the set contains a specific element.">Determina se il set contiene un elemento specifico.</summary>
      <param name="item" vsli:raw="The element to locate in the set.">Elemento da individuare nel set.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the set contains &lt;paramref name=&quot;item&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il set contiene <paramref name="item" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[])">
      <summary vsli:raw="Copies the complete &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt; to a compatible one-dimensional array, starting at the beginning of the target array.">Copia l'intero oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> in una matrice unidimensionale compatibile, a partire dall'inizio della matrice di destinazione.</summary>
      <param name="array" vsli:raw="A one-dimensional array that is the destination of the elements copied from the &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt;.">Matrice unidimensionale che costituisce la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the source &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt; exceeds the number of elements that the destination array can contain.">Il numero di elementi nell'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> di origine supera il numero di elementi che può essere contenuto nella matrice di destinazione.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32)">
      <summary vsli:raw="Copies the complete &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt; to a compatible one-dimensional array, starting at the specified array index.">Copia l'intero oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> in una matrice unidimensionale compatibile, a partire dall'indice della matrice specificato.</summary>
      <param name="array" vsli:raw="A one-dimensional array that is the destination of the elements copied from the &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt;. The array must have zero-based indexing.">Matrice unidimensionale che costituisce la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" />. La matrice deve avere un'indicizzazione in base zero.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the source array is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination array.">Il numero di elementi nella matrice di origine è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine della matrice di destinazione.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.">
        <paramref name="index" /> è minore di zero.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies a specified number of elements from &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt; to a compatible one-dimensional array, starting at the specified array index.">Copia un numero specificato di elementi da <see cref="T:System.Collections.Generic.SortedSet`1" /> in una matrice unidimensionale compatibile, a partire dall'indice della matrice specificato.</summary>
      <param name="array" vsli:raw="A one-dimensional array that is the destination of the elements copied from the &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt;. The array must have zero-based indexing.">Matrice unidimensionale che costituisce la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" />. La matrice deve avere un'indicizzazione in base zero.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <param name="count" vsli:raw="The number of elements to copy.">Numero degli elementi da copiare.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the source array is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination array.">Il numero di elementi nella matrice di origine è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine della matrice di destinazione.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;count&quot; /&gt; is less than zero.">
        <paramref name="index" /> è minore di zero.  
In alternativa 
 <paramref name="count" /> è minore di zero.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedSet`1.Count">
      <summary vsli:raw="Gets the number of elements in the &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt;.">Ottiene il numero di elementi in <see cref="T:System.Collections.Generic.SortedSet`1" />.</summary>
      <returns vsli:raw="The number of elements in the &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt;.">Numero di elementi in <see cref="T:System.Collections.Generic.SortedSet`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.CreateSetComparer">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.IEqualityComparer&quot; /&gt; object that can be used to create a collection that contains individual sets.">Restituisce un oggetto <see cref="T:System.Collections.IEqualityComparer" /> che può essere usato per creare una raccolta contenente singoli set.</summary>
      <returns vsli:raw="A comparer for creating a collection of sets.">Operatore di confronto per la creazione di una raccolta di set.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.CreateSetComparer(System.Collections.Generic.IEqualityComparer{`0})">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.IEqualityComparer&quot; /&gt; object, according to a specified comparer, that can be used to create a collection that contains individual sets.">Restituisce un oggetto <see cref="T:System.Collections.IEqualityComparer" />, in base a un operatore di confronto specificato, che può essere usato per creare una raccolta contenente singoli set.</summary>
      <param name="memberEqualityComparer" vsli:raw="The comparer to use for creating the returned comparer.">Operatore di confronto da usare per la creazione dell'operatore di confronto restituito.</param>
      <returns vsli:raw="A comparer for creating a collection of sets.">Operatore di confronto per la creazione di una raccolta di set.</returns>
    </member>
    <member name="T:System.Collections.Generic.SortedSet`1.Enumerator">
      <summary vsli:raw="Enumerates the elements of a &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt; object.">Enumera gli elementi di un oggetto <see cref="T:System.Collections.Generic.SortedSet`1" />.</summary>
      <typeparam name="T" vsli:raw="" />
    </member>
    <member name="P:System.Collections.Generic.SortedSet`1.Enumerator.Current">
      <summary vsli:raw="Gets the element at the current position of the enumerator.">Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <returns vsli:raw="The element in the collection at the current position of the enumerator.">Elemento della raccolta in corrispondenza della posizione corrente dell'enumeratore.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.Enumerator.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1.Enumerator&quot; /&gt;.">Rilascia tutte le risorse usate da <see cref="T:System.Collections.Generic.SortedSet`1.Enumerator" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.Enumerator.MoveNext">
      <summary vsli:raw="Advances the enumerator to the next element of the &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt; collection.">Sposta l'enumeratore all'elemento successivo della raccolta <see cref="T:System.Collections.Generic.SortedSet`1" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the enumerator was successfully advanced to the next element; &lt;see langword=&quot;false&quot; /&gt; if the enumerator has passed the end of the collection.">
        <see langword="true" /> se l'enumeratore è stato spostato correttamente in avanti in corrispondenza dell'elemento successivo, <see langword="false" /> se l'enumeratore ha superato la fine della raccolta.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The collection was modified after the enumerator was created.">La raccolta è stata modificata dopo la creazione dell'enumeratore.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedSet`1.Enumerator.System#Collections#IEnumerator#Current">
      <summary vsli:raw="Gets the element at the current position of the enumerator.">Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <returns vsli:raw="The element in the collection at the current position of the enumerator.">Elemento della raccolta in corrispondenza della posizione corrente dell'enumeratore.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The enumerator is positioned before the first element of the collection or after the last element.">L'enumeratore è posizionato prima del primo elemento della raccolta o dopo l'ultimo elemento.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.Enumerator.System#Collections#IEnumerator#Reset">
      <summary vsli:raw="Sets the enumerator to its initial position, which is before the first element in the collection.">Imposta l'enumeratore sulla propria posizione iniziale, ovvero prima del primo elemento nella raccolta.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The collection was modified after the enumerator was created.">La raccolta è stata modificata dopo la creazione dell'enumeratore.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.Enumerator.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
      <summary vsli:raw="Implements the &lt;see cref=&quot;T:System.Runtime.Serialization.ISerializable&quot; /&gt; interface and raises the deserialization event when the deserialization is complete.">Implementa l'interfaccia <see cref="T:System.Runtime.Serialization.ISerializable" /> e genera l'evento di deserializzazione quando la deserializzazione è completa.</summary>
      <param name="sender" vsli:raw="The source of the deserialization event.">Origine dell'evento di deserializzazione.</param>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object associated with the current &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt; instance is invalid.">L'oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> associato all'istanza corrente di <see cref="T:System.Collections.Generic.SortedSet`1" /> non è valido.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.Enumerator.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Implements the &lt;see cref=&quot;T:System.Runtime.Serialization.ISerializable&quot; /&gt; interface and returns the data needed to serialize the &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt; instance.">Implementa l'interfaccia <see cref="T:System.Runtime.Serialization.ISerializable" /> e restituisce i dati necessari a serializzare l'istanza di <see cref="T:System.Collections.Generic.SortedSet`1" />.</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that contains the information required to serialize the &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt; instance.">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> che contiene le informazioni necessarie a serializzare l'istanza di <see cref="T:System.Collections.Generic.SortedSet`1" />.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; object that contains the source and destination of the serialized stream associated with the &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt; instance.">Oggetto <see cref="T:System.Runtime.Serialization.StreamingContext" /> che contiene l'origine e la destinazione del flusso serializzato associato all'istanza di <see cref="T:System.Collections.Generic.SortedSet`1" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
      <summary vsli:raw="Removes all elements that are in a specified collection from the current &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt; object.">Rimuove tutti gli elementi inclusi in un insieme specificato dall'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> corrente.</summary>
      <param name="other" vsli:raw="The collection of items to remove from the &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt; object.">Raccolta di elementi da rimuovere dall'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;other&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="other" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt;.">Restituisce un enumeratore che esegue l'iterazione di <see cref="T:System.Collections.Generic.SortedSet`1" />.</summary>
      <returns vsli:raw="An enumerator that iterates through the &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt; in sorted order.">Enumeratore che consente di scorrere <see cref="T:System.Collections.Generic.SortedSet`1" /> nell'ordine specificato.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Implements the &lt;see cref=&quot;T:System.Runtime.Serialization.ISerializable&quot; /&gt; interface and returns the data that you must have to serialize a &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt; object.">Implementa l'interfaccia <see cref="T:System.Runtime.Serialization.ISerializable" /> e restituisce i dati di cui è necessario disporre per serializzare un oggetto <see cref="T:System.Collections.Generic.SortedSet`1" />.</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that contains the information that is required to serialize the &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt; object.">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> contenente le informazioni necessarie per serializzare l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" />.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; structure that contains the source and destination of the serialized stream associated with the &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt; object.">Struttura <see cref="T:System.Runtime.Serialization.StreamingContext" /> che contiene l'origine e la destinazione del flusso serializzato associato all'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.GetViewBetween(`0,`0)">
      <summary vsli:raw="Returns a view of a subset in a &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt;.">Restituisce una visualizzazione di un subset in un oggetto <see cref="T:System.Collections.Generic.SortedSet`1" />.</summary>
      <param name="lowerValue" vsli:raw="The lowest desired value in the view.">Valore minimo desiderato nella visualizzazione.</param>
      <param name="upperValue" vsli:raw="The highest desired value in the view.">Valore massimo desiderato nella visualizzazione.</param>
      <returns vsli:raw="A subset view that contains only the values in the specified range.">Visualizzazione di un subset contenente solo i valori inclusi nell'intervallo specificato.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;lowerValue&quot; /&gt; is more than &lt;paramref name=&quot;upperValue&quot; /&gt; according to the comparer.">
        <paramref name="lowerValue" /> è maggiore di <paramref name="upperValue" /> secondo l'operatore di confronto.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="A tried operation on the view was outside the range specified by &lt;paramref name=&quot;lowerValue&quot; /&gt; and &lt;paramref name=&quot;upperValue&quot; /&gt;.">Un'operazione che si è tentato di eseguire nella visualizzazione non rientra nell'intervallo specificato da <paramref name="lowerValue" /> e <paramref name="upperValue" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})">
      <summary vsli:raw="Modifies the current &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt; object so that it contains only elements that are also in a specified collection.">Modifica l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> corrente in modo che contenga solo elementi inclusi anche in un insieme specificato.</summary>
      <param name="other" vsli:raw="The collection to compare to the current &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt; object.">Raccolta da confrontare con l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> corrente.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;other&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="other" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary vsli:raw="Determines whether a &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt; object is a proper subset of the specified collection.">Determina se un oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> è un subset corretto della raccolta specificata.</summary>
      <param name="other" vsli:raw="The collection to compare to the current &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt; object.">Raccolta da confrontare con l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> corrente.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt; object is a proper subset of &lt;paramref name=&quot;other&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> è un subset corretto di <paramref name="other" />; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;other&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="other" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary vsli:raw="Determines whether a &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt; object is a proper superset of the specified collection.">Determina se un oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> è un superset corretto della raccolta specificata.</summary>
      <param name="other" vsli:raw="The collection to compare to the current &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt; object.">Raccolta da confrontare con l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> corrente.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt; object is a proper superset of &lt;paramref name=&quot;other&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> è un superset corretto di <paramref name="other" />, in caso contrario <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;other&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="other" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary vsli:raw="Determines whether a &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt; object is a subset of the specified collection.">Determina se un oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> è un subset della raccolta specificata.</summary>
      <param name="other" vsli:raw="The collection to compare to the current &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt; object.">Raccolta da confrontare con l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> corrente.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt; object is a subset of &lt;paramref name=&quot;other&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> corrente è un subset di <paramref name="other" />; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;other&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="other" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary vsli:raw="Determines whether a &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt; object is a superset of the specified collection.">Determina se un oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> è un superset della raccolta specificata.</summary>
      <param name="other" vsli:raw="The collection to compare to the current &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt; object.">Raccolta da confrontare con l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> corrente.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt; object is a superset of &lt;paramref name=&quot;other&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> è un superset di <paramref name="other" />, in caso contrario <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;other&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="other" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedSet`1.Max">
      <summary vsli:raw="Gets the maximum value in the &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt;, as defined by the comparer.">Ottiene il valore massimo in <see cref="T:System.Collections.Generic.SortedSet`1" />, come definito dall'operatore di confronto.</summary>
      <returns vsli:raw="The maximum value in the set.">Valore massimo nel set.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedSet`1.Min">
      <summary vsli:raw="Gets the minimum value in the &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt;, as defined by the comparer.">Ottiene il valore minimo in <see cref="T:System.Collections.Generic.SortedSet`1" />, come definito dall'operatore di confronto.</summary>
      <returns vsli:raw="The minimum value in the set.">Valore minimo nel set.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.OnDeserialization(System.Object)">
      <summary vsli:raw="Implements the &lt;see cref=&quot;T:System.Runtime.Serialization.ISerializable&quot; /&gt; interface, and raises the deserialization event when the deserialization is completed.">Implementa l'interfaccia <see cref="T:System.Runtime.Serialization.ISerializable" /> e genera l'evento di deserializzazione al termine della deserializzazione.</summary>
      <param name="sender" vsli:raw="The source of the deserialization event.">Origine dell'evento di deserializzazione.</param>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object associated with the current &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt; object is invalid.">L'oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> associato all’oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> corrente non è valido.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
      <summary vsli:raw="Determines whether the current &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt; object and a specified collection share common elements.">Determina se l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> corrente e una raccolta specificata condividono elementi comuni.</summary>
      <param name="other" vsli:raw="The collection to compare to the current &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt; object.">Raccolta da confrontare con l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> corrente.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt; object and &lt;paramref name=&quot;other&quot; /&gt; share at least one common element; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> e il parametro <paramref name="other" /> condividono almeno un elemento comune; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;other&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="other" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.Remove(`0)">
      <summary vsli:raw="Removes a specified item from the &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt;.">Rimuove un elemento specificato da <see cref="T:System.Collections.Generic.SortedSet`1" />.</summary>
      <param name="item" vsli:raw="The element to remove.">Elemento da rimuovere.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the element is found and successfully removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'elemento viene trovato e rimosso correttamente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.RemoveWhere(System.Predicate{`0})">
      <summary vsli:raw="Removes all elements that match the conditions defined by the specified predicate from a &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt;.">Rimuove tutti gli elementi che corrispondono alle condizioni definite dal predicato specificato da un oggetto <see cref="T:System.Collections.Generic.SortedSet`1" />.</summary>
      <param name="match" vsli:raw="The delegate that defines the conditions of the elements to remove.">Delegato che definisce le condizioni degli elementi da rimuovere.</param>
      <returns vsli:raw="The number of elements that were removed from the &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt; collection.">Numero di elementi rimossi dalla raccolta <see cref="T:System.Collections.Generic.SortedSet`1" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;match&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="match" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.Reverse">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; that iterates over the &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt; in reverse order.">Restituisce un oggetto <see cref="T:System.Collections.Generic.IEnumerable`1" /> che scorre <see cref="T:System.Collections.Generic.SortedSet`1" /> in ordine inverso.</summary>
      <returns vsli:raw="An enumerator that iterates over the &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt; in reverse order.">Enumeratore che scorre <see cref="T:System.Collections.Generic.SortedSet`1" /> in ordine inverso.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
      <summary vsli:raw="Determines whether the current &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt; object and the specified collection contain the same elements.">Determina se l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> corrente e l'insieme specificato contengono gli stessi elementi.</summary>
      <param name="other" vsli:raw="The collection to compare to the current &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt; object.">Raccolta da confrontare con l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> corrente.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt; object is equal to &lt;paramref name=&quot;other&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> corrente è uguale a <paramref name="other" />; in caso contrario, false.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;other&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="other" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
      <summary vsli:raw="Modifies the current &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt; object so that it contains only elements that are present either in the current object or in the specified collection, but not both.">Modifica l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> corrente in modo che contenga solo elementi presenti in tale oggetto o nell'insieme specificato, ma non in entrambi.</summary>
      <param name="other" vsli:raw="The collection to compare to the current &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt; object.">Raccolta da confrontare con l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> corrente.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;other&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="other" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection{T}#Add(`0)">
      <summary vsli:raw="Adds an item to an &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; object.">Aggiunge un elemento a un oggetto <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <param name="item" vsli:raw="The object to add to the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; object.">Oggetto da aggiungere all'oggetto <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; is read-only.">La classe <see cref="T:System.Collections.Generic.ICollection`1" /> è di sola lettura.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether a &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is read-only.">Ottiene un valore che indica se un oggetto <see cref="T:System.Collections.ICollection" /> è di sola lettura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se la raccolta è di sola lettura; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through a collection.">Restituisce un enumeratore che consente di eseguire l'iterazione di una raccolta.</summary>
      <returns vsli:raw="An enumerator that can be used to iterate through the collection.">Enumeratore che può essere usato per scorrere la raccolta.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the complete &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt; to a compatible one-dimensional array, starting at the specified array index.">Copia l'intero oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> in una matrice unidimensionale compatibile, a partire dall'indice della matrice specificato.</summary>
      <param name="array" vsli:raw="A one-dimensional array that is the destination of the elements copied from the &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt;. The array must have zero-based indexing.">Matrice unidimensionale che costituisce la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" />. La matrice deve avere un'indicizzazione in base zero.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the source array is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination array.">Il numero di elementi nella matrice di origine è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine della matrice di destinazione.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.">
        <paramref name="index" /> è minore di zero.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe).">Ottiene un valore che indica se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">Ottiene un oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;. In the default implementation of &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2.KeyCollection&quot; /&gt;, this property always returns the current instance.">Oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />. Nell'implementazione predefinita dell'oggetto <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" />, questa proprietà restituisce sempre l'istanza corrente.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through a collection.">Restituisce un enumeratore che consente di eseguire l'iterazione di una raccolta.</summary>
      <returns vsli:raw="An enumerator that can be used to iterate through the collection.">Enumeratore che può essere usato per scorrere la raccolta.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
      <summary vsli:raw="Implements the &lt;see cref=&quot;T:System.Runtime.Serialization.IDeserializationCallback&quot; /&gt; interface, and raises the deserialization event when the deserialization is completed.">Implementa l'interfaccia <see cref="T:System.Runtime.Serialization.IDeserializationCallback" /> e genera l'evento di deserializzazione al termine della deserializzazione.</summary>
      <param name="sender" vsli:raw="The source of the deserialization event.">Origine dell'evento di deserializzazione.</param>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object associated with the current &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt; instance is invalid.">L'oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> associato all'istanza corrente di <see cref="T:System.Collections.Generic.SortedSet`1" /> non è valido.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Implements the &lt;see cref=&quot;T:System.Runtime.Serialization.ISerializable&quot; /&gt; interface, and returns the data that you need to serialize the &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt; instance.">Implementa l'interfaccia <see cref="T:System.Runtime.Serialization.ISerializable" /> e restituisce i dati necessari per serializzare l'istanza di <see cref="T:System.Collections.Generic.SortedSet`1" />.</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that contains the information that is required to serialize the &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt; instance.">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> contenente le informazioni necessarie per serializzare l'istanza di <see cref="T:System.Collections.Generic.SortedSet`1" />.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; structure that contains the source and destination of the serialized stream associated with the &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt; instance.">Struttura <see cref="T:System.Runtime.Serialization.StreamingContext" /> che contiene l'origine e la destinazione del flusso serializzato associato all'istanza dell'insieme <see cref="T:System.Collections.Generic.SortedSet`1" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.TryGetValue(`0,`0@)">
      <summary vsli:raw="Searches the set for a given value and returns the equal value it finds, if any.">Cerca un determinato valore nel set e restituisce il valore uguale eventualmente trovato.</summary>
      <param name="equalValue" vsli:raw="The value to search for.">Valore da cercare.</param>
      <param name="actualValue" vsli:raw="The value from the set that the search found, or the default value of T when the search yielded no match.">Valore del set trovato dalla ricerca oppure il valore predefinito di T se la ricerca non ha restituito alcuna corrispondenza.</param>
      <returns vsli:raw="A value indicating whether the search was successful.">Valore che indica se la ricerca è stata eseguita correttamente.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})">
      <summary vsli:raw="Modifies the current &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt; object so that it contains all elements that are present in either the current object or the specified collection.">Modifica l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> corrente in modo che contenga tutti gli elementi presenti in tale oggetto e nella raccolta specificata.</summary>
      <param name="other" vsli:raw="The collection to compare to the current &lt;see cref=&quot;T:System.Collections.Generic.SortedSet`1&quot; /&gt; object.">Raccolta da confrontare con l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> corrente.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;other&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="other" /> è <see langword="null" />.</exception>
    </member>
    <member name="T:System.Collections.Generic.Stack`1">
      <summary vsli:raw="Represents a variable size last-in-first-out (LIFO) collection of instances of the same specified type.">Rappresenta una raccolta di istanze LIFO (Last-In-First-Out) a dimensione variabile dello stesso tipo specificato.</summary>
      <typeparam name="T" vsli:raw="Specifies the type of elements in the stack.">Specifica il tipo di elementi nello stack.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Generic.Stack`1&quot; /&gt; class that is empty and has the default initial capacity.">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.Stack`1" /> vuota e con capacità iniziale predefinita.</summary>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Generic.Stack`1&quot; /&gt; class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.Stack`1" /> che contiene gli elementi copiati dalla raccolta specificata e ha la capacità sufficiente per contenere il numero di elementi copiati.</summary>
      <param name="collection" vsli:raw="The collection to copy elements from.">Raccolta da cui copiare gli elementi.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;collection&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="collection" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Generic.Stack`1&quot; /&gt; class that is empty and has the specified initial capacity or the default initial capacity, whichever is greater.">Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.Collections.Generic.Stack`1" />, che è vuota e ha la capacità iniziale maggiore tra quella specificata e quella predefinita.</summary>
      <param name="capacity" vsli:raw="The initial number of elements that the &lt;see cref=&quot;T:System.Collections.Generic.Stack`1&quot; /&gt; can contain.">Numero iniziale degli elementi che <see cref="T:System.Collections.Generic.Stack`1" /> può contenere.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is less than zero.">
        <paramref name="capacity" /> è minore di zero.</exception>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.Clear">
      <summary vsli:raw="Removes all objects from the &lt;see cref=&quot;T:System.Collections.Generic.Stack`1&quot; /&gt;.">Rimuove tutti gli oggetti da <see cref="T:System.Collections.Generic.Stack`1" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.Contains(`0)">
      <summary vsli:raw="Determines whether an element is in the &lt;see cref=&quot;T:System.Collections.Generic.Stack`1&quot; /&gt;.">Determina se un elemento è incluso in <see cref="T:System.Collections.Generic.Stack`1" />.</summary>
      <param name="item" vsli:raw="The object to locate in the &lt;see cref=&quot;T:System.Collections.Generic.Stack`1&quot; /&gt;. The value can be &lt;see langword=&quot;null&quot; /&gt; for reference types.">Oggetto da individuare nella raccolta <see cref="T:System.Collections.Generic.Stack`1" />. Il valore può essere <see langword="null" /> per i tipi di riferimento.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;item&quot; /&gt; is found in the &lt;see cref=&quot;T:System.Collections.Generic.Stack`1&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="item" /> è presente in <see cref="T:System.Collections.Generic.Stack`1" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.CopyTo(`0[],System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Collections.Generic.Stack`1&quot; /&gt; to an existing one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified array index.">Consente di copiare lo <see cref="T:System.Collections.Generic.Stack`1" /> in una <see cref="T:System.Array" /> unidimensionale esistente, partendo dall'indice della matrice specificata.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Collections.Generic.Stack`1&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">Oggetto <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.Generic.Stack`1" />. L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</param>
      <param name="arrayIndex" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;arrayIndex&quot; /&gt; is less than zero.">
        <paramref name="arrayIndex" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the source &lt;see cref=&quot;T:System.Collections.Generic.Stack`1&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;arrayIndex&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">Il numero di elementi nell'oggetto <see cref="T:System.Collections.Generic.Stack`1" /> di origine è maggiore dello spazio disponibile tra <paramref name="arrayIndex" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="P:System.Collections.Generic.Stack`1.Count">
      <summary vsli:raw="Gets the number of elements contained in the &lt;see cref=&quot;T:System.Collections.Generic.Stack`1&quot; /&gt;.">Ottiene il numero di elementi contenuti in <see cref="T:System.Collections.Generic.Stack`1" />.</summary>
      <returns vsli:raw="The number of elements contained in the &lt;see cref=&quot;T:System.Collections.Generic.Stack`1&quot; /&gt;.">Il numero di elementi contenuti in <see cref="T:System.Collections.Generic.Stack`1" />.</returns>
    </member>
    <member name="T:System.Collections.Generic.Stack`1.Enumerator">
      <summary vsli:raw="Enumerates the elements of a &lt;see cref=&quot;T:System.Collections.Generic.Stack`1&quot; /&gt;.">Enumera gli elementi di un oggetto <see cref="T:System.Collections.Generic.Stack`1" />.</summary>
      <typeparam name="T" vsli:raw="" />
    </member>
    <member name="P:System.Collections.Generic.Stack`1.Enumerator.Current">
      <summary vsli:raw="Gets the element at the current position of the enumerator.">Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <returns vsli:raw="The element in the &lt;see cref=&quot;T:System.Collections.Generic.Stack`1&quot; /&gt; at the current position of the enumerator.">Elemento dell'insieme <see cref="T:System.Collections.Generic.Stack`1" /> in corrispondenza della posizione corrente dell'enumeratore.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The enumerator is positioned before the first element of the collection or after the last element.">L'enumeratore è posizionato prima del primo elemento della raccolta o dopo l'ultimo elemento.</exception>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.Enumerator.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.Collections.Generic.Stack`1.Enumerator&quot; /&gt;.">Rilascia tutte le risorse usate da <see cref="T:System.Collections.Generic.Stack`1.Enumerator" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.Enumerator.MoveNext">
      <summary vsli:raw="Advances the enumerator to the next element of the &lt;see cref=&quot;T:System.Collections.Generic.Stack`1&quot; /&gt;.">Sposta l'enumeratore all'elemento successivo dell'oggetto <see cref="T:System.Collections.Generic.Stack`1" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the enumerator was successfully advanced to the next element; &lt;see langword=&quot;false&quot; /&gt; if the enumerator has passed the end of the collection.">
        <see langword="true" /> se l'enumeratore è stato spostato correttamente in avanti in corrispondenza dell'elemento successivo, <see langword="false" /> se l'enumeratore ha superato la fine della raccolta.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The collection was modified after the enumerator was created.">La raccolta è stata modificata dopo la creazione dell'enumeratore.</exception>
    </member>
    <member name="P:System.Collections.Generic.Stack`1.Enumerator.System#Collections#IEnumerator#Current">
      <summary vsli:raw="Gets the element at the current position of the enumerator.">Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <returns vsli:raw="The element in the collection at the current position of the enumerator.">Elemento della raccolta in corrispondenza della posizione corrente dell'enumeratore.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The enumerator is positioned before the first element of the collection or after the last element.">L'enumeratore è posizionato prima del primo elemento della raccolta o dopo l'ultimo elemento.</exception>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.Enumerator.System#Collections#IEnumerator#Reset">
      <summary vsli:raw="Sets the enumerator to its initial position, which is before the first element in the collection. This class cannot be inherited.">Imposta l'enumeratore sulla propria posizione iniziale, ovvero prima del primo elemento nella raccolta. Questa classe non può essere ereditata.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The collection was modified after the enumerator was created.">La raccolta è stata modificata dopo la creazione dell'enumeratore.</exception>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.GetEnumerator">
      <summary vsli:raw="Returns an enumerator for the &lt;see cref=&quot;T:System.Collections.Generic.Stack`1&quot; /&gt;.">Restituisce un enumeratore per l'insieme <see cref="T:System.Collections.Generic.Stack`1" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.Stack`1.Enumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Collections.Generic.Stack`1&quot; /&gt;.">
        <see cref="T:System.Collections.Generic.Stack`1.Enumerator" /> per l'oggetto <see cref="T:System.Collections.Generic.Stack`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.Peek">
      <summary vsli:raw="Returns the object at the top of the &lt;see cref=&quot;T:System.Collections.Generic.Stack`1&quot; /&gt; without removing it.">Viene restituito l'oggetto all'inizio dello <see cref="T:System.Collections.Generic.Stack`1" /> senza rimuoverlo.</summary>
      <returns vsli:raw="The object at the top of the &lt;see cref=&quot;T:System.Collections.Generic.Stack`1&quot; /&gt;.">Oggetto all'inizio dell'oggetto <see cref="T:System.Collections.Generic.Stack`1" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.Stack`1&quot; /&gt; is empty.">La classe <see cref="T:System.Collections.Generic.Stack`1" /> è vuota.</exception>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.Pop">
      <summary vsli:raw="Removes and returns the object at the top of the &lt;see cref=&quot;T:System.Collections.Generic.Stack`1&quot; /&gt;.">Rimuove e restituisce l'oggetto all'inizio dello <see cref="T:System.Collections.Generic.Stack`1" />.</summary>
      <returns vsli:raw="The object removed from the top of the &lt;see cref=&quot;T:System.Collections.Generic.Stack`1&quot; /&gt;.">Oggetto rimosso dall'inizio dell'oggetto <see cref="T:System.Collections.Generic.Stack`1" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Generic.Stack`1&quot; /&gt; is empty.">La classe <see cref="T:System.Collections.Generic.Stack`1" /> è vuota.</exception>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.Push(`0)">
      <summary vsli:raw="Inserts an object at the top of the &lt;see cref=&quot;T:System.Collections.Generic.Stack`1&quot; /&gt;.">Inserisce un oggetto all'inizio dello <see cref="T:System.Collections.Generic.Stack`1" />.</summary>
      <param name="item" vsli:raw="The object to push onto the &lt;see cref=&quot;T:System.Collections.Generic.Stack`1&quot; /&gt;. The value can be &lt;see langword=&quot;null&quot; /&gt; for reference types.">Oggetto da inserire nell'oggetto <see cref="T:System.Collections.Generic.Stack`1" />. Il valore può essere <see langword="null" /> per i tipi di riferimento.</param>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the collection.">Restituisce un enumeratore che consente di scorrere la raccolta.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerator`1&quot; /&gt; that can be used to iterate through the collection.">Oggetto <see cref="T:System.Collections.Generic.IEnumerator`1" /> che può essere usato per eseguire l'iterazione della raccolta.</returns>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; to an &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at a particular &lt;see cref=&quot;T:System.Array&quot; /&gt; index.">Copia gli elementi di <see cref="T:System.Collections.ICollection" /> in <see cref="T:System.Array" /> a partire da un particolare indice <see cref="T:System.Array" />.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">Oggetto <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.ICollection" />. L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</param>
      <param name="arrayIndex" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;arrayIndex&quot; /&gt; is less than zero.">
        <paramref name="arrayIndex" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;array&quot; /&gt; does not have zero-based indexing.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in the source &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;arrayIndex&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The type of the source &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> è multidimensionale.  
In alternativa 
 <paramref name="array" /> non dispone di indicizzazione in base zero.  
In alternativa 
Il numero di elementi nell'oggetto <see cref="T:System.Collections.ICollection" /> di origine è maggiore dello spazio disponibile tra <paramref name="arrayIndex" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.  
In alternativa 
Non è possibile eseguire il cast automatico del tipo dell'oggetto <see cref="T:System.Collections.ICollection" /> di origine al tipo dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="P:System.Collections.Generic.Stack`1.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe).">Ottiene un valore che indica se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;.  In the default implementation of &lt;see cref=&quot;T:System.Collections.Generic.Stack`1&quot; /&gt;, this property always returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe); in caso contrario, <see langword="false" />.  Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.Stack`1" />, questa proprietà restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.Stack`1.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">Ottiene un oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.  In the default implementation of &lt;see cref=&quot;T:System.Collections.Generic.Stack`1&quot; /&gt;, this property always returns the current instance.">Oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.  Nell'implementazione predefinita dell'oggetto <see cref="T:System.Collections.Generic.Stack`1" />, questa proprietà restituisce sempre l'istanza corrente.</returns>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through a collection.">Restituisce un enumeratore che consente di eseguire l'iterazione di una raccolta.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to iterate through the collection.">Oggetto <see cref="T:System.Collections.IEnumerator" /> che può essere usato per eseguire l'iterazione della raccolta.</returns>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.ToArray">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Collections.Generic.Stack`1&quot; /&gt; to a new array.">Consente di copiare lo <see cref="T:System.Collections.Generic.Stack`1" /> in una nuova matrice.</summary>
      <returns vsli:raw="A new array containing copies of the elements of the &lt;see cref=&quot;T:System.Collections.Generic.Stack`1&quot; /&gt;.">Nuova matrice contenente le copie degli elementi dello <see cref="T:System.Collections.Generic.Stack`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.TrimExcess">
      <summary vsli:raw="Sets the capacity to the actual number of elements in the &lt;see cref=&quot;T:System.Collections.Generic.Stack`1&quot; /&gt;, if that number is less than 90 percent of current capacity.">Imposta la capacità dell'insieme sul numero reale di elementi contenuti nell'oggetto <see cref="T:System.Collections.Generic.Stack`1" />, se questo numero è inferiore al 90 per cento della capacità corrente.</summary>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.TryPeek(`0@)">
      <param name="result" vsli:raw="If present, the object at the top of the &lt;see cref=&quot;T:System.Collections.Generic.Stack`1&quot; /&gt;; otherwise, the default value of &lt;typeparamref name=&quot;T&quot; /&gt;." />
    </member>
    <member name="M:System.Collections.Generic.Stack`1.TryPop(`0@)">
      <param name="result" vsli:raw="If present, the object at the top of the &lt;see cref=&quot;T:System.Collections.Generic.Stack`1&quot; /&gt;; otherwise, the default value of &lt;typeparamref name=&quot;T&quot; /&gt;." />
    </member>
    <member name="T:System.Collections.StructuralComparisons">
      <summary vsli:raw="Provides objects for performing a structural comparison of two collection objects.">Fornisce oggetti per l'esecuzione di un confronto strutturale di due oggetti insieme.</summary>
    </member>
    <member name="P:System.Collections.StructuralComparisons.StructuralComparer">
      <summary vsli:raw="Gets a predefined object that performs a structural comparison of two objects.">Ottiene un oggetto predefinito che esegue un confronto strutturale di due oggetti.</summary>
      <returns vsli:raw="A predefined object that is used to perform a structural comparison of two collection objects.">Oggetto predefinito utilizzato per eseguire un confronto strutturale di due oggetti insieme.</returns>
    </member>
    <member name="P:System.Collections.StructuralComparisons.StructuralEqualityComparer">
      <summary vsli:raw="Gets a predefined object that compares two objects for structural equality.">Ottiene un oggetto predefinito che confronta due oggetti per determinarne l'uguaglianza strutturale.</summary>
      <returns vsli:raw="A predefined object that is used to compare two collection objects for structural equality.">Oggetto predefinito utilizzato per confrontare due oggetti insieme e determinarne l'uguaglianza strutturale.</returns>
    </member>
  </members>
</doc>