<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.ComponentModel.EventBasedAsync</name>
  </assembly>
  <members>
    <member name="T:System.ComponentModel.AsyncCompletedEventArgs">
      <summary vsli:raw="Provides data for the MethodName&lt;see langword=&quot;Completed&quot; /&gt; event.">Specifica dati per l'evento MethodName<see langword="Completed" />.</summary>
    </member>
    <member name="M:System.ComponentModel.AsyncCompletedEventArgs.#ctor(System.Exception,System.Boolean,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.AsyncCompletedEventArgs&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" />.</summary>
      <param name="error" vsli:raw="Any error that occurred during the asynchronous operation.">Qualsiasi errore verificatosi durante l'esecuzione dell'operazione asincrona.</param>
      <param name="cancelled" vsli:raw="A value indicating whether the asynchronous operation was canceled.">Valore che indica se l'operazione asincrona è stata annullata.</param>
      <param name="userState" vsli:raw="The optional user-supplied state object passed to the &lt;see cref=&quot;M:System.ComponentModel.BackgroundWorker.RunWorkerAsync(System.Object)&quot; /&gt; method.">Oggetto di stato facoltativo fornito dall'utente passato al metodo <see cref="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync(System.Object)" />.</param>
    </member>
    <member name="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled">
      <summary vsli:raw="Gets a value indicating whether an asynchronous operation has been canceled.">Ottiene un valore che indica se un'operazione asincrona è stata annullata.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the background operation has been canceled; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'operazione in background è stata annullata; in caso contrario, <see langword="false" /> Il valore predefinito è <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.AsyncCompletedEventArgs.Error">
      <summary vsli:raw="Gets a value indicating which error occurred during an asynchronous operation.">Ottiene un valore che indica l'errore verificatosi durante un'operazione asincrona.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Exception&quot; /&gt; instance, if an error occurred during an asynchronous operation; otherwise &lt;see langword=&quot;null&quot; /&gt;.">Un'istanza dell'oggetto <see cref="T:System.Exception" />, se si è verificato un errore durante un'operazione asincrona; in caso contrario <see langword="null" />.</returns>
    </member>
    <member name="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary">
      <summary vsli:raw="Raises a user-supplied exception if an asynchronous operation failed.">Genera un'eccezione fornita dall'utente in caso di errore in un'operazione asincrona.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt;.">La proprietà <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" /> è <see langword="true" />.</exception>
      <exception cref="T:System.Reflection.TargetInvocationException" vsli:raw="The &lt;see cref=&quot;P:System.ComponentModel.AsyncCompletedEventArgs.Error&quot; /&gt; property has been set by the asynchronous operation. The &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property holds a reference to &lt;see cref=&quot;P:System.ComponentModel.AsyncCompletedEventArgs.Error&quot; /&gt;.">La proprietà <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" /> è stata impostata dall'operazione asincrona. La proprietà <see cref="P:System.Exception.InnerException" /> contiene un riferimento a <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />.</exception>
    </member>
    <member name="P:System.ComponentModel.AsyncCompletedEventArgs.UserState">
      <summary vsli:raw="Gets the unique identifier for the asynchronous task.">Ottiene l’identificatore univoco per l'attività asincrona.</summary>
      <returns vsli:raw="An object reference that uniquely identifies the asynchronous task; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value has been set.">Un riferimento a un oggetto che identifica in modo univoco l'attività asincrona. In caso contrario, <see langword="null" /> se non è stato impostato alcun valore.</returns>
    </member>
    <member name="T:System.ComponentModel.AsyncCompletedEventHandler">
      <summary vsli:raw="Represents the method that will handle the MethodName&lt;see langword=&quot;Completed&quot; /&gt; event of an asynchronous operation.">Rappresenta il metodo che gestirà l'evento MethodName<see langword="Completed" /> di un'operazione asincrona.</summary>
      <param name="sender" vsli:raw="The source of the event.">Origine dell'evento.</param>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.AsyncCompletedEventArgs&quot; /&gt; that contains the event data.">Oggetto <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="T:System.ComponentModel.AsyncOperation">
      <summary vsli:raw="Tracks the lifetime of an asynchronous operation.">Rileva la durata di un'operazione asincrona.</summary>
    </member>
    <member name="M:System.ComponentModel.AsyncOperation.Finalize">
      <summary vsli:raw="Finalizes the asynchronous operation.">Finalizza l'operazione asincrona.</summary>
    </member>
    <member name="M:System.ComponentModel.AsyncOperation.OperationCompleted">
      <summary vsli:raw="Ends the lifetime of an asynchronous operation.">Pone fine alla durata di un'operazione asincrona.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.ComponentModel.AsyncOperation.OperationCompleted&quot; /&gt; has been called previously for this task.">Il metodo <see cref="M:System.ComponentModel.AsyncOperation.OperationCompleted" /> è già stato chiamato per l'attività.</exception>
    </member>
    <member name="M:System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback,System.Object)">
      <summary vsli:raw="Invokes a delegate on the thread or context appropriate for the application model.">Richiama un delegato nel thread o contesto adeguato al modello di applicazione.</summary>
      <param name="d" vsli:raw="A &lt;see cref=&quot;T:System.Threading.SendOrPostCallback&quot; /&gt; object that wraps the delegate to be called when the operation ends.">Oggetto <see cref="T:System.Threading.SendOrPostCallback" /> che esegue il wrapping del delegato da chiamare al completamento dell'operazione.</param>
      <param name="arg" vsli:raw="An argument for the delegate contained in the &lt;paramref name=&quot;d&quot; /&gt; parameter.">Argomento per il delegato contenuto nel parametro <paramref name="d" />.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;M:System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)&quot; /&gt; method has been called previously for this task.">Il metodo <see cref="M:System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)" /> è già stato chiamato per l'attività.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;d&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="d" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)">
      <summary vsli:raw="Ends the lifetime of an asynchronous operation.">Pone fine alla durata di un'operazione asincrona.</summary>
      <param name="d" vsli:raw="A &lt;see cref=&quot;T:System.Threading.SendOrPostCallback&quot; /&gt; object that wraps the delegate to be called when the operation ends.">Oggetto <see cref="T:System.Threading.SendOrPostCallback" /> che esegue il wrapping del delegato da chiamare al completamento dell'operazione.</param>
      <param name="arg" vsli:raw="An argument for the delegate contained in the &lt;paramref name=&quot;d&quot; /&gt; parameter.">Argomento per il delegato contenuto nel parametro <paramref name="d" />.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.ComponentModel.AsyncOperation.OperationCompleted&quot; /&gt; has been called previously for this task.">Il metodo <see cref="M:System.ComponentModel.AsyncOperation.OperationCompleted" /> è già stato chiamato per l'attività.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;d&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="d" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.AsyncOperation.SynchronizationContext">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Threading.SynchronizationContext&quot; /&gt; object that was passed to the constructor.">Ottiene l'oggetto <see cref="T:System.Threading.SynchronizationContext" /> passato al costruttore.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Threading.SynchronizationContext&quot; /&gt; object that was passed to the constructor.">L'oggetto <see cref="T:System.Threading.SynchronizationContext" /> passato al costruttore.</returns>
    </member>
    <member name="P:System.ComponentModel.AsyncOperation.UserSuppliedState">
      <summary vsli:raw="Gets or sets an object used to uniquely identify an asynchronous operation.">Ottiene o imposta un oggetto utilizzato per identificare in modo univoco un'operazione asincrona.</summary>
      <returns vsli:raw="The state object passed to the asynchronous method invocation.">L'oggetto di stato passato alla chiamata di metodo asincrona.</returns>
    </member>
    <member name="T:System.ComponentModel.AsyncOperationManager">
      <summary vsli:raw="Provides concurrency management for classes that support asynchronous method calls. This class cannot be inherited.">Fornisce gestione della concorrenza per le classi che supportano le chiamate asincrone. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.ComponentModel.AsyncOperationManager.CreateOperation(System.Object)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.ComponentModel.AsyncOperation&quot; /&gt; for tracking the duration of a particular asynchronous operation.">Restituisce un oggetto <see cref="T:System.ComponentModel.AsyncOperation" /> per rilevare la durata di una particolare operazione asincrona.</summary>
      <param name="userSuppliedState" vsli:raw="An object used to associate a piece of client state, such as a task ID, with a particular asynchronous operation.">Oggetto utilizzato per associare informazioni sullo stato del client, ad esempio un ID attività, a un'operazione asincrona specifica.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.AsyncOperation&quot; /&gt; that you can use to track the duration of an asynchronous method invocation.">Un oggetto <see cref="T:System.ComponentModel.AsyncOperation" /> utilizzabile per tenere traccia della durata di una chiamata asincrona a un metodo.</returns>
    </member>
    <member name="P:System.ComponentModel.AsyncOperationManager.SynchronizationContext">
      <summary vsli:raw="Gets or sets the synchronization context for the asynchronous operation.">Ottiene o imposta il contesto di sincronizzazione per l'operazione asincrona.</summary>
      <returns vsli:raw="The synchronization context for the asynchronous operation.">Il contesto di sincronizzazione per l'operazione asincrona.</returns>
    </member>
    <member name="T:System.ComponentModel.BackgroundWorker">
      <summary vsli:raw="Executes an operation on a separate thread.">Esegue un'operazione su un thread separato.</summary>
    </member>
    <member name="M:System.ComponentModel.BackgroundWorker.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.BackgroundWorker&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.BackgroundWorker" />.</summary>
    </member>
    <member name="M:System.ComponentModel.BackgroundWorker.CancelAsync">
      <summary vsli:raw="Requests cancellation of a pending background operation.">Richiede l'annullamento di un'operazione in background in attesa.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="P:System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation" /> è <see langword="false" />.</exception>
    </member>
    <member name="P:System.ComponentModel.BackgroundWorker.CancellationPending">
      <summary vsli:raw="Gets a value indicating whether the application has requested cancellation of a background operation.">Ottiene un valore che indica se l'applicazione ha richiesto l'annullamento di un'operazione in background.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the application has requested cancellation of a background operation; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'applicazione ha richiesto l'annullamento di un operazione in background; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.BackgroundWorker.Dispose(System.Boolean)">
      <param name="disposing" vsli:raw="This method does not do anything." />
    </member>
    <member name="E:System.ComponentModel.BackgroundWorker.DoWork">
      <summary vsli:raw="Occurs when &lt;see cref=&quot;M:System.ComponentModel.BackgroundWorker.RunWorkerAsync&quot; /&gt; is called.">Si verifica quando viene chiamato il metodo <see cref="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync" />.</summary>
    </member>
    <member name="P:System.ComponentModel.BackgroundWorker.IsBusy">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.ComponentModel.BackgroundWorker&quot; /&gt; is running an asynchronous operation.">Ottiene un valore che indica se <see cref="T:System.ComponentModel.BackgroundWorker" /> sta eseguendo un'operazione asincrona.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the &lt;see cref=&quot;T:System.ComponentModel.BackgroundWorker&quot; /&gt; is running an asynchronous operation; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se la classe <see cref="T:System.ComponentModel.BackgroundWorker" /> sta eseguendo un'operazione asincrona; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.BackgroundWorker.OnDoWork(System.ComponentModel.DoWorkEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.BackgroundWorker.DoWork&quot; /&gt; event.">Genera l'evento <see cref="E:System.ComponentModel.BackgroundWorker.DoWork" />.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="M:System.ComponentModel.BackgroundWorker.OnProgressChanged(System.ComponentModel.ProgressChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.BackgroundWorker.ProgressChanged&quot; /&gt; event.">Genera l'evento <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" />.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="M:System.ComponentModel.BackgroundWorker.OnRunWorkerCompleted(System.ComponentModel.RunWorkerCompletedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted&quot; /&gt; event.">Genera l'evento <see cref="E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted" />.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="E:System.ComponentModel.BackgroundWorker.ProgressChanged">
      <summary vsli:raw="Occurs when &lt;see cref=&quot;M:System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32)&quot; /&gt; is called.">Si verifica quando viene chiamato il metodo <see cref="M:System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32)" />.</summary>
    </member>
    <member name="M:System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.BackgroundWorker.ProgressChanged&quot; /&gt; event.">Genera l'evento <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" />.</summary>
      <param name="percentProgress" vsli:raw="The percentage, from 0 to 100, of the background operation that is complete.">La percentuale di completamento, da 0 a 100, dell'operazione in background.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.ComponentModel.BackgroundWorker.WorkerReportsProgress&quot; /&gt; property is set to &lt;see langword=&quot;false&quot; /&gt;.">La proprietà <see cref="P:System.ComponentModel.BackgroundWorker.WorkerReportsProgress" /> è impostata su <see langword="false" />.</exception>
    </member>
    <member name="M:System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32,System.Object)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.BackgroundWorker.ProgressChanged&quot; /&gt; event.">Genera l'evento <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" />.</summary>
      <param name="percentProgress" vsli:raw="The percentage, from 0 to 100, of the background operation that is complete.">La percentuale di completamento, da 0 a 100, dell'operazione in background.</param>
      <param name="userState" vsli:raw="A unique &lt;see cref=&quot;T:System.Object&quot; /&gt; indicating the user state. Returned as the &lt;see cref=&quot;P:System.ComponentModel.ProgressChangedEventArgs.UserState&quot; /&gt; property of the &lt;see cref=&quot;T:System.ComponentModel.ProgressChangedEventArgs&quot; /&gt;.">L'oggetto di stato passato a <see cref="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync(System.Object)" />.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.ComponentModel.BackgroundWorker.WorkerReportsProgress&quot; /&gt; property is set to &lt;see langword=&quot;false&quot; /&gt;.">La proprietà <see cref="P:System.ComponentModel.BackgroundWorker.WorkerReportsProgress" /> è impostata su <see langword="false" />.</exception>
    </member>
    <member name="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync">
      <summary vsli:raw="Starts execution of a background operation.">Avvia l'esecuzione di un'operazione in background.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.ComponentModel.BackgroundWorker.IsBusy&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="P:System.ComponentModel.BackgroundWorker.IsBusy" /> è <see langword="true" />.</exception>
    </member>
    <member name="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync(System.Object)">
      <summary vsli:raw="Starts execution of a background operation.">Avvia l'esecuzione di un'operazione in background.</summary>
      <param name="argument" vsli:raw="A parameter for use by the background operation to be executed in the &lt;see cref=&quot;E:System.ComponentModel.BackgroundWorker.DoWork&quot; /&gt; event handler.">Parametro che deve essere utilizzato dall'operazione in background da eseguire nell'evento <see cref="E:System.ComponentModel.BackgroundWorker.DoWork" />.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.ComponentModel.BackgroundWorker.IsBusy&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="P:System.ComponentModel.BackgroundWorker.IsBusy" /> è <see langword="true" />.</exception>
    </member>
    <member name="E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted">
      <summary vsli:raw="Occurs when the background operation has completed, has been canceled, or has raised an exception.">Viene generato quando l'operazione in background è stata annullata o ha generato un'eccezione.</summary>
    </member>
    <member name="P:System.ComponentModel.BackgroundWorker.WorkerReportsProgress">
      <summary vsli:raw="Gets or sets a value indicating whether the &lt;see cref=&quot;T:System.ComponentModel.BackgroundWorker&quot; /&gt; can report progress updates.">Ottiene o imposta un valore che indica se la classe <see cref="T:System.ComponentModel.BackgroundWorker" /> è in grado di segnalare gli aggiornamenti dello stato.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.BackgroundWorker&quot; /&gt; supports progress updates; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se la classe <see cref="T:System.ComponentModel.BackgroundWorker" /> supporta gli aggiornamenti dello stato; in caso contrario <see langword="false" />. Il valore predefinito è <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation">
      <summary vsli:raw="Gets or sets a value indicating whether the &lt;see cref=&quot;T:System.ComponentModel.BackgroundWorker&quot; /&gt; supports asynchronous cancellation.">Ottiene o imposta un valore che indica se la classe <see cref="T:System.ComponentModel.BackgroundWorker" /> supporta l'annullamento asincrono.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.BackgroundWorker&quot; /&gt; supports cancellation; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="T:System.ComponentModel.BackgroundWorker" /> supporta l'annullamento; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DoWorkEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.ComponentModel.BackgroundWorker.DoWork&quot; /&gt; event handler.">Fornisce i dati per il gestore eventi <see cref="E:System.ComponentModel.BackgroundWorker.DoWork" />.</summary>
    </member>
    <member name="M:System.ComponentModel.DoWorkEventArgs.#ctor(System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DoWorkEventArgs&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.DoWorkEventArgs" />.</summary>
      <param name="argument" vsli:raw="Specifies an argument for an asynchronous operation.">Specifica un argomento per un'operazione asincrona.</param>
    </member>
    <member name="P:System.ComponentModel.DoWorkEventArgs.Argument">
      <summary vsli:raw="Gets a value that represents the argument of an asynchronous operation.">Ottiene un valore che rappresenta l'argomento di un'operazione asincrona.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; representing the argument of an asynchronous operation.">Oggetto <see cref="T:System.Object" /> che rappresenta l'argomento di un'operazione asincrona.</returns>
    </member>
    <member name="P:System.ComponentModel.DoWorkEventArgs.Result">
      <summary vsli:raw="Gets or sets a value that represents the result of an asynchronous operation.">Ottiene o imposta un valore che rappresenta il risultato di un'operazione asincrona.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; representing the result of an asynchronous operation.">Oggetto <see cref="T:System.Object" /> che rappresenta il risultato di un'operazione asincrona.</returns>
    </member>
    <member name="T:System.ComponentModel.DoWorkEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.ComponentModel.BackgroundWorker.DoWork&quot; /&gt; event. This class cannot be inherited.">Rappresenta il metodo che gestirà l'evento <see cref="E:System.ComponentModel.BackgroundWorker.DoWork" />. Questa classe non può essere ereditata.</summary>
      <param name="sender" vsli:raw="The source of the event.">Origine dell'evento.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.DoWorkEventArgs&quot; /&gt; that contains the event data.">Oggetto <see cref="T:System.ComponentModel.DoWorkEventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="T:System.ComponentModel.ProgressChangedEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.ComponentModel.BackgroundWorker.ProgressChanged&quot; /&gt; event.">Fornisce dati per l'evento <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" />.</summary>
    </member>
    <member name="M:System.ComponentModel.ProgressChangedEventArgs.#ctor(System.Int32,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.ProgressChangedEventArgs&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.ProgressChangedEventArgs" />.</summary>
      <param name="progressPercentage" vsli:raw="The percentage of an asynchronous task that has been completed.">Percentuale dell'attività asincrona già completata.</param>
      <param name="userState" vsli:raw="A unique user state.">Stato utente univoco.</param>
    </member>
    <member name="P:System.ComponentModel.ProgressChangedEventArgs.ProgressPercentage">
      <summary vsli:raw="Gets the asynchronous task progress percentage.">Ottiene la percentuale di avanzamento dell'attività asincrona.</summary>
      <returns vsli:raw="A percentage value indicating the asynchronous task progress.">Valore percentuale che indica l'avanzamento dell'attività asincrona.</returns>
    </member>
    <member name="P:System.ComponentModel.ProgressChangedEventArgs.UserState">
      <summary vsli:raw="Gets a unique user state.">Ottiene uno stato utente univoco.</summary>
      <returns vsli:raw="A unique &lt;see cref=&quot;T:System.Object&quot; /&gt; indicating the user state.">Oggetto <see cref="T:System.Object" /> univoco che indica lo stato utente.</returns>
    </member>
    <member name="T:System.ComponentModel.ProgressChangedEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.ComponentModel.BackgroundWorker.ProgressChanged&quot; /&gt; event of the &lt;see cref=&quot;T:System.ComponentModel.BackgroundWorker&quot; /&gt; class. This class cannot be inherited.">Rappresenta il metodo che gestirà l'evento <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" /> della classe <see cref="T:System.ComponentModel.BackgroundWorker" />. Questa classe non può essere ereditata.</summary>
      <param name="sender" vsli:raw="The source of the event.">Origine dell'evento.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ProgressChangedEventArgs&quot; /&gt; that contains the event data.">Oggetto <see cref="T:System.ComponentModel.ProgressChangedEventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="T:System.ComponentModel.RunWorkerCompletedEventArgs">
      <summary vsli:raw="Provides data for the MethodName&lt;see langword=&quot;Completed&quot; /&gt; event.">Specifica dati per l'evento MethodName<see langword="Completed" />.</summary>
    </member>
    <member name="M:System.ComponentModel.RunWorkerCompletedEventArgs.#ctor(System.Object,System.Exception,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.RunWorkerCompletedEventArgs&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.RunWorkerCompletedEventArgs" />.</summary>
      <param name="result" vsli:raw="The result of an asynchronous operation.">Risultato di un'operazione asincrona.</param>
      <param name="error" vsli:raw="Any error that occurred during the asynchronous operation.">Qualsiasi errore verificatosi durante l'esecuzione dell'operazione asincrona.</param>
      <param name="cancelled" vsli:raw="A value indicating whether the asynchronous operation was canceled.">Valore che indica se l'operazione asincrona è stata annullata.</param>
    </member>
    <member name="P:System.ComponentModel.RunWorkerCompletedEventArgs.Result">
      <summary vsli:raw="Gets a value that represents the result of an asynchronous operation.">Ottiene un valore che rappresenta il risultato di un'operazione asincrona.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; representing the result of an asynchronous operation.">Oggetto <see cref="T:System.Object" /> che rappresenta il risultato di un'operazione asincrona.</returns>
      <exception cref="T:System.Reflection.TargetInvocationException" vsli:raw="&lt;see cref=&quot;P:System.ComponentModel.AsyncCompletedEventArgs.Error&quot; /&gt; is not &lt;see langword=&quot;null&quot; /&gt;. The &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property holds a reference to &lt;see cref=&quot;P:System.ComponentModel.AsyncCompletedEventArgs.Error&quot; /&gt;.">
        <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" /> non è <see langword="null" />. La proprietà <see cref="P:System.Exception.InnerException" /> contiene un riferimento a <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" /> è <see langword="true" />.</exception>
    </member>
    <member name="P:System.ComponentModel.RunWorkerCompletedEventArgs.UserState">
      <summary vsli:raw="Gets a value that represents the user state.">Ottiene un valore che rappresenta lo stato dell'utente.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; representing the user state.">Oggetto <see cref="T:System.Object" /> che rappresenta lo stato dell'utente.</returns>
    </member>
    <member name="T:System.ComponentModel.RunWorkerCompletedEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted&quot; /&gt; event of a &lt;see cref=&quot;T:System.ComponentModel.BackgroundWorker&quot; /&gt; class.">Rappresenta il metodo che gestirà l'evento <see cref="E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted" /> di una classe <see cref="T:System.ComponentModel.BackgroundWorker" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Origine dell'evento.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.RunWorkerCompletedEventArgs&quot; /&gt; that contains the event data.">Oggetto <see cref="T:System.ComponentModel.RunWorkerCompletedEventArgs" /> che contiene i dati dell'evento.</param>
    </member>
  </members>
</doc>