<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Runtime.Extensions</name>
  </assembly>
  <members>
    <member name="T:System.AppDomain">
      <summary>Rappresenta un dominio applicazione, ossia un ambiente isolato nel quale vengono eseguite le applicazioni. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.AppDomain.AppendPrivatePath(System.String)">
      <summary>Aggiunge il nome di directory specificato all'elenco di percorsi privati.</summary>
      <param name="path">Nome della directory da aggiungere al percorso privato.</param>
      <exception cref="T:System.AppDomainUnloadedException">L'operazione viene tentata in un dominio dell'applicazione non caricato.</exception>
    </member>
    <member name="M:System.AppDomain.ApplyPolicy(System.String)">
      <summary>Restituisce il nome visualizzato dell'assembly dopo l'applicazione dei criteri.</summary>
      <param name="assemblyName">Nome visualizzato dell'assembly, nel formato fornito dalla proprietà <see cref="P:System.Reflection.Assembly.FullName" />.</param>
      <returns>Stringa contenente il nome visualizzato dell'assembly dopo l'applicazione dei criteri.</returns>
    </member>
    <member name="E:System.AppDomain.AssemblyLoad">
      <summary>Si verifica al caricamento di un assembly.</summary>
    </member>
    <member name="E:System.AppDomain.AssemblyResolve">
      <summary>Si verifica quando la risoluzione di un assembly ha esito negativo.</summary>
    </member>
    <member name="P:System.AppDomain.BaseDirectory">
      <summary>Ottiene la directory di base usata dal resolver dell'assembly per verificare la presenza di assembly.</summary>
      <returns>Directory di base usata dal resolver dell'assembly per verificare la presenza di assembly.</returns>
      <exception cref="T:System.AppDomainUnloadedException">L'operazione viene tentata in un dominio dell'applicazione non caricato.</exception>
    </member>
    <member name="M:System.AppDomain.ClearPrivatePath">
      <summary>Reimposta su stringa vuota ("") il percorso che specifica la posizione degli assembly privati.</summary>
      <exception cref="T:System.AppDomainUnloadedException">L'operazione viene tentata in un dominio dell'applicazione non caricato.</exception>
    </member>
    <member name="M:System.AppDomain.ClearShadowCopyPath">
      <summary>Reimposta su stringa vuota ("") l'elenco di directory contenenti assembly replicati mediante copia shadow.</summary>
      <exception cref="T:System.AppDomainUnloadedException">L'operazione viene tentata in un dominio dell'applicazione non caricato.</exception>
    </member>
    <member name="M:System.AppDomain.CreateDomain(System.String)">
      <summary>Crea un nuovo dominio applicazione con il nome specificato.</summary>
      <param name="friendlyName">Nome descrittivo del dominio.</param>
      <returns>Dominio applicazione appena creato.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="friendlyName" /> è <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Metodo non supportato in .NET Core.</exception>
    </member>
    <member name="M:System.AppDomain.CreateInstance(System.String,System.String)">
      <summary>Crea una nuova istanza del tipo specificato definito nell'assembly specificato.</summary>
      <param name="assemblyName">Nome visualizzato dell'assembly. Vedere <see cref="P:System.Reflection.Assembly.FullName" />.</param>
      <param name="typeName">Nome completo del tipo richiesto, compreso lo spazio dei nomi ed escluso l'assembly, restituito dalla proprietà <see cref="P:System.Type.FullName" />.</param>
      <returns>Oggetto che rappresenta un wrapper per la nuova istanza specificata da <paramref name="typeName" />. Per accedere all'oggetto reale è necessario rimuovere il wrapping del valore restituito.</returns>
      <exception cref="T:System.AppDomainUnloadedException">L'operazione viene tentata in un dominio dell'applicazione non caricato.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> o <paramref name="typeName" /> è <see langword="null" />.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyName" /> non è un assembly valido.  
In alternativa 
Attualmente è caricata la versione 2.0 o successiva di Common Language Runtime e l'oggetto <paramref name="assemblyName" /> è stato compilato con una versione successiva.</exception>
      <exception cref="T:System.IO.FileLoadException">Un assembly o un modulo è stato caricato due volte con due evidenze diverse.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Il parametro <paramref name="assemblyName" /> non è stato trovato.</exception>
      <exception cref="T:System.MethodAccessException">Il chiamante non ha l'autorizzazione necessaria per chiamare il costruttore.</exception>
      <exception cref="T:System.MissingMethodException">Non è stato trovato alcun costruttore pubblico corrispondente.</exception>
      <exception cref="T:System.TypeLoadException">Non è possibile trovare <paramref name="typename" /> in <paramref name="assemblyName" />.</exception>
      <exception cref="T:System.NullReferenceException">Questa istanza è <see langword="null" />.</exception>
    </member>
    <member name="M:System.AppDomain.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
      <summary>Crea una nuova istanza del tipo specificato definito nell'assembly specificato. I parametri specificano uno strumento di associazione, i flag di associazione, gli argomenti del costruttore, le informazioni specifiche delle impostazioni cultura usate per interpretare gli argomenti e gli attributi di attivazione facoltativi.</summary>
      <param name="assemblyName">Nome visualizzato dell'assembly. Vedere <see cref="P:System.Reflection.Assembly.FullName" />.</param>
      <param name="typeName">Nome completo del tipo richiesto, compreso lo spazio dei nomi ed escluso l'assembly, restituito dalla proprietà <see cref="P:System.Type.FullName" />.</param>
      <param name="ignoreCase">Valore booleano che indica se deve o meno essere eseguita una ricerca con distinzione tra maiuscole e minuscole.</param>
      <param name="bindingAttr">Combinazione di zero o più flag di bit che influiscono sulla ricerca del costruttore <paramref name="typeName" />. Se <paramref name="bindingAttr" /> è uguale a zero, verrà eseguita una ricerca di costruttori pubblici con distinzione tra maiuscole e minuscole.</param>
      <param name="binder">Oggetto che consente l'associazione, la coercizione dei tipi di argomento, la chiamata dei membri e il recupero di oggetti <see cref="T:System.Reflection.MemberInfo" /> tramite reflection. Se <paramref name="binder" /> è Null, verrà usato il binder predefinito.</param>
      <param name="args">Argomenti da passare al costruttore. La matrice di argomenti deve corrispondere ai parametri del costruttore da richiamare in quanto a numero, ordine e tipo. Per usare il costruttore senza parametri, <paramref name="args" /> deve essere una matrice vuota o Null.</param>
      <param name="culture">Informazioni specifiche delle impostazioni cultura che regolano la coercizione di <paramref name="args" /> ai tipi formali dichiarati per il costruttore <paramref name="typeName" />. Se <paramref name="culture" /> è <see langword="null" />, per il thread corrente verrà usato l'oggetto <see cref="T:System.Globalization.CultureInfo" />.</param>
      <param name="activationAttributes">Matrice di uno o più attributi che possono prendere parte all'attivazione. In genere, matrice che contiene un singolo oggetto <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> che specifica l'URL necessario per attivare un oggetto remoto.  
Il parametro è correlato agli oggetti attivati dal client. L'attivazione del client è una tecnologia legacy mantenuta per garantire la compatibilità con le versioni precedenti, ma non è consigliata per nuove attività di sviluppo. Per le applicazioni distribuite si dovrebbe usare invece Windows Communication Foundation.</param>
      <returns>Oggetto che rappresenta un wrapper per la nuova istanza specificata da <paramref name="typeName" />. Per accedere all'oggetto reale è necessario rimuovere il wrapping del valore restituito.</returns>
      <exception cref="T:System.AppDomainUnloadedException">L'operazione viene tentata in un dominio dell'applicazione non caricato.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> o <paramref name="typeName" /> è <see langword="null" />.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyName" /> non è un assembly valido.  
In alternativa 
 <paramref name="assemblyName" /> è stato compilato con una versione successiva di Common Language Runtime rispetto alla versione attualmente caricata.</exception>
      <exception cref="T:System.IO.FileLoadException">Un assembly o un modulo è stato caricato due volte con due evidenze diverse.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Il parametro <paramref name="assemblyName" /> non è stato trovato.</exception>
      <exception cref="T:System.MethodAccessException">Il chiamante non ha l'autorizzazione necessaria per chiamare il costruttore.</exception>
      <exception cref="T:System.MissingMethodException">Non è stato trovato alcun costruttore corrispondente.</exception>
      <exception cref="T:System.NotSupportedException">Il chiamante non può fornire attributi di attivazione per un oggetto che non eredita da <see cref="T:System.MarshalByRefObject" />.</exception>
      <exception cref="T:System.TypeLoadException">Non è possibile trovare <paramref name="typename" /> in <paramref name="assemblyName" />.</exception>
      <exception cref="T:System.NullReferenceException">Questa istanza è <see langword="null" />.</exception>
    </member>
    <member name="M:System.AppDomain.CreateInstance(System.String,System.String,System.Object[])">
      <summary>Crea una nuova istanza del tipo specificato definito nell'assembly specificato. Un parametro specifica una matrice di attributi di attivazione.</summary>
      <param name="assemblyName">Nome visualizzato dell'assembly. Vedere <see cref="P:System.Reflection.Assembly.FullName" />.</param>
      <param name="typeName">Nome completo del tipo richiesto, compreso lo spazio dei nomi ed escluso l'assembly, restituito dalla proprietà <see cref="P:System.Type.FullName" />.</param>
      <param name="activationAttributes">Matrice di uno o più attributi che possono prendere parte all'attivazione. In genere, matrice che contiene un singolo oggetto <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> che specifica l'URL necessario per attivare un oggetto remoto.  
Il parametro è correlato agli oggetti attivati dal client. L'attivazione del client è una tecnologia legacy mantenuta per garantire la compatibilità con le versioni precedenti, ma non è consigliata per nuove attività di sviluppo. Per le applicazioni distribuite si dovrebbe usare invece Windows Communication Foundation.</param>
      <returns>Oggetto che rappresenta un wrapper per la nuova istanza specificata da <paramref name="typeName" />. Per accedere all'oggetto reale è necessario rimuovere il wrapping del valore restituito.</returns>
      <exception cref="T:System.AppDomainUnloadedException">L'operazione viene tentata in un dominio dell'applicazione non caricato.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> o <paramref name="typeName" /> è <see langword="null" />.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyName" /> non è un assembly valido.  
-oppure- 
Attualmente è caricata la versione 2.0 o successiva di Common Language Runtime e l'oggetto <paramref name="assemblyName" /> è stato compilato con una versione successiva.</exception>
      <exception cref="T:System.IO.FileLoadException">Un assembly o un modulo è stato caricato due volte con due evidenze diverse.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Il parametro <paramref name="assemblyName" /> non è stato trovato.</exception>
      <exception cref="T:System.MethodAccessException">Il chiamante non ha l'autorizzazione necessaria per chiamare il costruttore.</exception>
      <exception cref="T:System.MissingMethodException">Non è stato trovato alcun costruttore pubblico corrispondente.</exception>
      <exception cref="T:System.NotSupportedException">Il chiamante non può fornire attributi di attivazione per un oggetto che non eredita da <see cref="T:System.MarshalByRefObject" />.</exception>
      <exception cref="T:System.TypeLoadException">Non è possibile trovare <paramref name="typename" /> in <paramref name="assemblyName" />.</exception>
      <exception cref="T:System.NullReferenceException">Questa istanza è <see langword="null" />.</exception>
    </member>
    <member name="M:System.AppDomain.CreateInstanceAndUnwrap(System.String,System.String)">
      <summary>Crea una nuova istanza del tipo specificato. I parametri specificano l'assembly in cui è definito il tipo e il nome del tipo.</summary>
      <param name="assemblyName">Nome visualizzato dell'assembly. Vedere <see cref="P:System.Reflection.Assembly.FullName" />.</param>
      <param name="typeName">Nome completo del tipo richiesto, compreso lo spazio dei nomi ed escluso l'assembly, restituito dalla proprietà <see cref="P:System.Type.FullName" />.</param>
      <returns>Istanza dell'oggetto specificato da <paramref name="typeName" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> o <paramref name="typeName" /> è <see langword="null" />.</exception>
      <exception cref="T:System.MissingMethodException">Non è stato trovato alcun costruttore pubblico corrispondente.</exception>
      <exception cref="T:System.TypeLoadException">Non è possibile trovare <paramref name="typename" /> in <paramref name="assemblyName" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Il parametro <paramref name="assemblyName" /> non è stato trovato.</exception>
      <exception cref="T:System.MethodAccessException">Il chiamante non ha l'autorizzazione necessaria per chiamare il costruttore.</exception>
      <exception cref="T:System.AppDomainUnloadedException">L'operazione viene tentata in un dominio dell'applicazione non caricato.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyName" /> non è un assembly valido.  
-oppure- 
Attualmente è caricata la versione 2.0 o successiva di Common Language Runtime e l'oggetto <paramref name="assemblyName" /> è stato compilato con una versione successiva.</exception>
      <exception cref="T:System.IO.FileLoadException">Un assembly o un modulo è stato caricato due volte con due evidenze diverse.</exception>
    </member>
    <member name="M:System.AppDomain.CreateInstanceAndUnwrap(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
      <summary>Crea una nuova istanza del tipo specificato definito nell'assembly specificato, indicando se ignorare le maiuscole/minuscole del nome del tipo, gli attributi e lo strumento di associazione usati per selezionare il tipo da creare, gli argomenti del costruttore, le impostazioni cultura e gli attributi di attivazione.</summary>
      <param name="assemblyName">Nome visualizzato dell'assembly. Vedere <see cref="P:System.Reflection.Assembly.FullName" />.</param>
      <param name="typeName">Nome completo del tipo richiesto, compreso lo spazio dei nomi ed escluso l'assembly, restituito dalla proprietà <see cref="P:System.Type.FullName" />.</param>
      <param name="ignoreCase">Valore booleano che indica se deve o meno essere eseguita una ricerca con distinzione tra maiuscole e minuscole.</param>
      <param name="bindingAttr">Combinazione di zero o più flag di bit che influiscono sulla ricerca del costruttore <paramref name="typeName" />. Se <paramref name="bindingAttr" /> è uguale a zero, verrà eseguita una ricerca di costruttori pubblici con distinzione tra maiuscole e minuscole.</param>
      <param name="binder">Oggetto che consente l'associazione, la coercizione dei tipi di argomento, la chiamata dei membri e il recupero di oggetti <see cref="T:System.Reflection.MemberInfo" /> tramite reflection. Se <paramref name="binder" /> è Null, verrà usato il binder predefinito.</param>
      <param name="args">Argomenti da passare al costruttore. La matrice di argomenti deve corrispondere ai parametri del costruttore da richiamare in quanto a numero, ordine e tipo. Per usare il costruttore senza parametri, <paramref name="args" /> deve essere una matrice vuota o Null.</param>
      <param name="culture">Oggetto specifico delle impostazioni cultura usato per regolare la coercizione dei tipi. Se <paramref name="culture" /> è <see langword="null" />, per il thread corrente verrà usato l'oggetto <see langword="CultureInfo" />.</param>
      <param name="activationAttributes">Matrice di uno o più attributi che possono prendere parte all'attivazione. In genere, corrisponde a una matrice che contiene un singolo oggetto <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" />. specifica l'URL necessario per attivare un oggetto remoto.  
Il parametro è correlato agli oggetti attivati dal client. L'attivazione del client è una tecnologia legacy mantenuta per garantire la compatibilità con le versioni precedenti, ma non è consigliata per nuove attività di sviluppo. Per le applicazioni distribuite si dovrebbe usare invece Windows Communication Foundation.</param>
      <returns>Istanza dell'oggetto specificato da <paramref name="typeName" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> o <paramref name="typeName" /> è <see langword="null" />.</exception>
      <exception cref="T:System.MissingMethodException">Non è stato trovato alcun costruttore corrispondente.</exception>
      <exception cref="T:System.TypeLoadException">Non è possibile trovare <paramref name="typename" /> in <paramref name="assemblyName" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Il parametro <paramref name="assemblyName" /> non è stato trovato.</exception>
      <exception cref="T:System.MethodAccessException">Il chiamante non ha l'autorizzazione necessaria per chiamare il costruttore.</exception>
      <exception cref="T:System.NotSupportedException">Il chiamante non può fornire attributi di attivazione per un oggetto che non eredita da <see cref="T:System.MarshalByRefObject" />.</exception>
      <exception cref="T:System.AppDomainUnloadedException">L'operazione viene tentata in un dominio dell'applicazione non caricato.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyName" /> non è un assembly valido.  
-oppure- 
 <paramref name="assemblyName" /> è stato compilato con una versione successiva di Common Language Runtime rispetto alla versione attualmente caricata.</exception>
      <exception cref="T:System.IO.FileLoadException">Un assembly o un modulo è stato caricato due volte con due evidenze diverse.</exception>
    </member>
    <member name="M:System.AppDomain.CreateInstanceAndUnwrap(System.String,System.String,System.Object[])">
      <summary>Crea una nuova istanza del tipo specificato. I parametri specificano l'assembly in cui è definito il tipo, il nome del tipo e una matrice di attributi di attivazione.</summary>
      <param name="assemblyName">Nome visualizzato dell'assembly. Vedere <see cref="P:System.Reflection.Assembly.FullName" />.</param>
      <param name="typeName">Nome completo del tipo richiesto, compreso lo spazio dei nomi ed escluso l'assembly, restituito dalla proprietà <see cref="P:System.Type.FullName" />.</param>
      <param name="activationAttributes">Matrice di uno o più attributi che possono prendere parte all'attivazione. In genere, matrice che contiene un singolo oggetto <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> che specifica l'URL necessario per attivare un oggetto remoto.  
Il parametro è correlato agli oggetti attivati dal client. L'attivazione del client è una tecnologia legacy mantenuta per garantire la compatibilità con le versioni precedenti, ma non è consigliata per nuove attività di sviluppo. Per le applicazioni distribuite si dovrebbe usare invece Windows Communication Foundation.</param>
      <returns>Istanza dell'oggetto specificato da <paramref name="typeName" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> o <paramref name="typeName" /> è <see langword="null" />.</exception>
      <exception cref="T:System.MissingMethodException">Non è stato trovato alcun costruttore pubblico corrispondente.</exception>
      <exception cref="T:System.TypeLoadException">Non è possibile trovare <paramref name="typename" /> in <paramref name="assemblyName" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Il parametro <paramref name="assemblyName" /> non è stato trovato.</exception>
      <exception cref="T:System.MethodAccessException">Il chiamante non ha l'autorizzazione necessaria per chiamare il costruttore.</exception>
      <exception cref="T:System.NotSupportedException">Il chiamante non può fornire attributi di attivazione per un oggetto che non eredita da <see cref="T:System.MarshalByRefObject" />.</exception>
      <exception cref="T:System.AppDomainUnloadedException">L'operazione viene tentata in un dominio dell'applicazione non caricato.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyName" /> non è un assembly valido.  
-oppure- 
Attualmente è caricata la versione 2.0 o successiva di Common Language Runtime e l'oggetto <paramref name="assemblyName" /> è stato compilato con una versione successiva.</exception>
      <exception cref="T:System.IO.FileLoadException">Un assembly o un modulo è stato caricato due volte con due evidenze diverse.</exception>
    </member>
    <member name="M:System.AppDomain.CreateInstanceFrom(System.String,System.String)">
      <summary>Crea una nuova istanza del tipo specificato definito nel file di assembly specificato.</summary>
      <param name="assemblyFile">Nome di un file, comprensivo di percorso, contenente un assembly in cui viene definito il tipo richiesto. L'assembly viene caricato utilizzando il metodo <see cref="M:System.Reflection.Assembly.LoadFrom(System.String)" />.</param>
      <param name="typeName">Nome completo del tipo richiesto, compreso lo spazio dei nomi ed escluso l'assembly, restituito dalla proprietà <see cref="P:System.Type.FullName" />.</param>
      <returns>Wrapper per la nuova istanza oppure <see langword="null" /> se <paramref name="typeName" /> non viene trovato. Per accedere all'oggetto reale è necessario rimuovere il wrapping del valore restituito.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyFile" /> è <see langword="null" />.  
-oppure- 
 <paramref name="typeName" /> è <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Il parametro <paramref name="assemblyFile" /> non è stato trovato.</exception>
      <exception cref="T:System.TypeLoadException">Non è possibile trovare <paramref name="typeName" /> in <paramref name="assemblyFile" />.</exception>
      <exception cref="T:System.AppDomainUnloadedException">L'operazione viene tentata in un dominio dell'applicazione non caricato.</exception>
      <exception cref="T:System.MissingMethodException">Non è stato trovato alcun costruttore pubblico senza parametri.</exception>
      <exception cref="T:System.MethodAccessException">Il chiamante non ha autorizzazioni sufficienti per chiamare il costruttore.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyFile" /> non è un assembly valido.  
In alternativa 
Attualmente è caricata la versione 2.0 o successiva di Common Language Runtime e l'oggetto <paramref name="assemblyFile" /> è stato compilato con una versione successiva.</exception>
      <exception cref="T:System.IO.FileLoadException">Un assembly o un modulo è stato caricato due volte con due evidenze diverse.</exception>
      <exception cref="T:System.NullReferenceException">Questa istanza è <see langword="null" />.</exception>
    </member>
    <member name="M:System.AppDomain.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
      <summary>Crea una nuova istanza del tipo specificato definito nel file di assembly specificato.</summary>
      <param name="assemblyFile">Nome di un file, comprensivo di percorso, contenente un assembly in cui viene definito il tipo richiesto. L'assembly viene caricato utilizzando il metodo <see cref="M:System.Reflection.Assembly.LoadFrom(System.String)" />.</param>
      <param name="typeName">Nome completo del tipo richiesto, compreso lo spazio dei nomi ed escluso l'assembly, restituito dalla proprietà <see cref="P:System.Type.FullName" />.</param>
      <param name="ignoreCase">Valore booleano che indica se deve o meno essere eseguita una ricerca con distinzione tra maiuscole e minuscole.</param>
      <param name="bindingAttr">Combinazione di zero o più flag di bit che influiscono sulla ricerca del costruttore <paramref name="typeName" />. Se <paramref name="bindingAttr" /> è uguale a zero, verrà eseguita una ricerca di costruttori pubblici con distinzione tra maiuscole e minuscole.</param>
      <param name="binder">Oggetto che consente l'associazione, la coercizione di tipi di argomento, la chiamata di membri e il recupero di oggetti <see cref="T:System.Reflection.MemberInfo" /> tramite la reflection. Se <paramref name="binder" /> è Null, verrà usato il binder predefinito.</param>
      <param name="args">Argomenti da passare al costruttore. La matrice di argomenti deve corrispondere ai parametri del costruttore da richiamare in quanto a numero, ordine e tipo. Per usare il costruttore senza parametri, <paramref name="args" /> deve essere una matrice vuota o Null.</param>
      <param name="culture">Informazioni specifiche delle impostazioni cultura che regolano la coercizione di <paramref name="args" /> ai tipi formali dichiarati per il costruttore <paramref name="typeName" />. Se <paramref name="culture" /> è <see langword="null" />, per il thread corrente verrà usato l'oggetto <see cref="T:System.Globalization.CultureInfo" />.</param>
      <param name="activationAttributes">Matrice di uno o più attributi che possono prendere parte all'attivazione. In genere, matrice che contiene un singolo oggetto <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> che specifica l'URL necessario per attivare un oggetto remoto.  
Il parametro è correlato agli oggetti attivati dal client. L'attivazione del client è una tecnologia legacy mantenuta per garantire la compatibilità con le versioni precedenti, ma non è consigliata per nuove attività di sviluppo. Per le applicazioni distribuite si dovrebbe usare invece Windows Communication Foundation.</param>
      <returns>Wrapper per la nuova istanza oppure <see langword="null" /> se <paramref name="typeName" /> non viene trovato. Per accedere all'oggetto reale è necessario rimuovere il wrapping del valore restituito.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyFile" /> è <see langword="null" />.  
In alternativa 
 <paramref name="typeName" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Il chiamante non può fornire attributi di attivazione per un oggetto che non eredita da <see cref="T:System.MarshalByRefObject" />.</exception>
      <exception cref="T:System.AppDomainUnloadedException">L'operazione viene tentata in un dominio dell'applicazione non caricato.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Il parametro<paramref name="assemblyFile" /> non è stato trovato.</exception>
      <exception cref="T:System.TypeLoadException">Non è possibile trovare<paramref name="typeName" /> in <paramref name="assemblyFile" />.</exception>
      <exception cref="T:System.MissingMethodException">Non è stato trovato alcun costruttore pubblico corrispondente.</exception>
      <exception cref="T:System.MethodAccessException">Il chiamante non ha autorizzazioni sufficienti per chiamare il costruttore.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyFile" /> non è un assembly valido.  
-oppure- 
 <paramref name="assemblyFile" /> è stato compilato con una versione successiva di Common Language Runtime rispetto alla versione attualmente caricata.</exception>
      <exception cref="T:System.IO.FileLoadException">Un assembly o un modulo è stato caricato due volte con due evidenze diverse.</exception>
      <exception cref="T:System.NullReferenceException">Questa istanza è <see langword="null" />.</exception>
    </member>
    <member name="M:System.AppDomain.CreateInstanceFrom(System.String,System.String,System.Object[])">
      <summary>Crea una nuova istanza del tipo specificato definito nel file di assembly specificato.</summary>
      <param name="assemblyFile">Nome di un file, comprensivo di percorso, contenente un assembly in cui viene definito il tipo richiesto. L'assembly viene caricato utilizzando il metodo <see cref="M:System.Reflection.Assembly.LoadFrom(System.String)" />.</param>
      <param name="typeName">Nome completo del tipo richiesto, compreso lo spazio dei nomi ed escluso l'assembly, restituito dalla proprietà <see cref="P:System.Type.FullName" />.</param>
      <param name="activationAttributes">Matrice di uno o più attributi che possono prendere parte all'attivazione. In genere, matrice che contiene un singolo oggetto <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> che specifica l'URL necessario per attivare un oggetto remoto.  
Il parametro è correlato agli oggetti attivati dal client. L'attivazione del client è una tecnologia legacy mantenuta per garantire la compatibilità con le versioni precedenti, ma non è consigliata per nuove attività di sviluppo. Per le applicazioni distribuite si dovrebbe usare invece Windows Communication Foundation.</param>
      <returns>Wrapper per la nuova istanza oppure <see langword="null" /> se <paramref name="typeName" /> non viene trovato. Per accedere all'oggetto reale è necessario rimuovere il wrapping del valore restituito.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyFile" /> è <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Il parametro <paramref name="assemblyFile" /> non è stato trovato.</exception>
      <exception cref="T:System.TypeLoadException">Non è possibile trovare <paramref name="typeName" /> in <paramref name="assemblyFile" />.</exception>
      <exception cref="T:System.MethodAccessException">Il chiamante non ha autorizzazioni sufficienti per chiamare il costruttore.</exception>
      <exception cref="T:System.MissingMethodException">Non è stato trovato alcun costruttore pubblico corrispondente.</exception>
      <exception cref="T:System.NotSupportedException">Il chiamante non può fornire attributi di attivazione per un oggetto che non eredita da <see cref="T:System.MarshalByRefObject" />.</exception>
      <exception cref="T:System.AppDomainUnloadedException">L'operazione viene tentata in un dominio dell'applicazione non caricato.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyFile" /> non è un assembly valido.  
-oppure- 
Attualmente è caricata la versione 2.0 o successiva di Common Language Runtime e l'oggetto <paramref name="assemblyFile" /> è stato compilato con una versione successiva.</exception>
      <exception cref="T:System.IO.FileLoadException">Un assembly o un modulo è stato caricato due volte con due evidenze diverse.</exception>
      <exception cref="T:System.NullReferenceException">Questa istanza è <see langword="null" />.</exception>
    </member>
    <member name="M:System.AppDomain.CreateInstanceFromAndUnwrap(System.String,System.String)">
      <summary>Crea una nuova istanza del tipo specificato definito nel file di assembly specificato.</summary>
      <param name="assemblyName">Nome e percorso del file dell'assembly in cui viene definito il tipo richiesto.</param>
      <param name="typeName">Nome completo del tipo richiesto, compreso lo spazio dei nomi ed escluso l'assembly, restituito dalla proprietà <see cref="P:System.Type.FullName" />.</param>
      <returns>Oggetto richiesto o <see langword="null" /> se <paramref name="typeName" /> non è stato trovato.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> è <see langword="null" />.  
-oppure- 
 <paramref name="typeName" /> è <see langword="null" />.</exception>
      <exception cref="T:System.AppDomainUnloadedException">L'operazione viene tentata in un dominio dell'applicazione non caricato.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Il parametro<paramref name="assemblyName" /> non è stato trovato.</exception>
      <exception cref="T:System.TypeLoadException">Non è possibile trovare <paramref name="typeName" /> in <paramref name="assemblyName" />.</exception>
      <exception cref="T:System.MissingMethodException">Non è stato trovato alcun costruttore pubblico senza parametri.</exception>
      <exception cref="T:System.MethodAccessException">Il chiamante non ha autorizzazioni sufficienti per chiamare il costruttore.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyName" /> non è un assembly valido.  
-oppure- 
Attualmente è caricata la versione 2.0 o successiva di Common Language Runtime e l'oggetto <paramref name="assemblyName" /> è stato compilato con una versione successiva.</exception>
      <exception cref="T:System.IO.FileLoadException">Un assembly o un modulo è stato caricato due volte con due evidenze diverse.</exception>
    </member>
    <member name="M:System.AppDomain.CreateInstanceFromAndUnwrap(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
      <summary>Crea una nuova istanza del tipo specificato definito nel file di assembly specificato, indicando se ignorare le maiuscole/minuscole del nome del tipo, gli attributi e lo strumento di associazione usati per selezionare il tipo da creare, gli argomenti del costruttore, le impostazioni cultura e gli attributi di attivazione.</summary>
      <param name="assemblyFile">Nome e percorso del file dell'assembly in cui viene definito il tipo richiesto.</param>
      <param name="typeName">Nome completo del tipo richiesto, compreso lo spazio dei nomi ed escluso l'assembly, restituito dalla proprietà <see cref="P:System.Type.FullName" />.</param>
      <param name="ignoreCase">Valore booleano che indica se deve o meno essere eseguita una ricerca con distinzione tra maiuscole e minuscole.</param>
      <param name="bindingAttr">Combinazione di zero o più flag di bit che influiscono sulla ricerca del costruttore <paramref name="typeName" />. Se <paramref name="bindingAttr" /> è uguale a zero, verrà eseguita una ricerca di costruttori pubblici con distinzione tra maiuscole e minuscole.</param>
      <param name="binder">Oggetto che consente l'associazione, la coercizione di tipi di argomento, la chiamata di membri e il recupero di oggetti <see cref="T:System.Reflection.MemberInfo" /> tramite la reflection. Se <paramref name="binder" /> è Null, verrà usato il binder predefinito.</param>
      <param name="args">Argomenti da passare al costruttore. La matrice di argomenti deve corrispondere ai parametri del costruttore da richiamare in quanto a numero, ordine e tipo. Per usare il costruttore senza parametri, <paramref name="args" /> deve essere una matrice vuota o Null.</param>
      <param name="culture">Informazioni specifiche delle impostazioni cultura che regolano la coercizione di <paramref name="args" /> ai tipi formali dichiarati per il costruttore <paramref name="typeName" />. Se <paramref name="culture" /> è <see langword="null" />, per il thread corrente verrà usato l'oggetto <see cref="T:System.Globalization.CultureInfo" />.</param>
      <param name="activationAttributes">Matrice di uno o più attributi che possono prendere parte all'attivazione. In genere, matrice che contiene un singolo oggetto <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> che specifica l'URL necessario per attivare un oggetto remoto.  
Il parametro è correlato agli oggetti attivati dal client. L'attivazione del client è una tecnologia legacy mantenuta per garantire la compatibilità con le versioni precedenti, ma non è consigliata per nuove attività di sviluppo. Per le applicazioni distribuite si dovrebbe usare invece Windows Communication Foundation.</param>
      <returns>Oggetto richiesto o <see langword="null" /> se <paramref name="typeName" /> non è stato trovato.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> è <see langword="null" />.  
-oppure- 
 <paramref name="typeName" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Il chiamante non può fornire attributi di attivazione per un oggetto che non eredita da <see cref="T:System.MarshalByRefObject" />.</exception>
      <exception cref="T:System.AppDomainUnloadedException">L'operazione viene tentata in un dominio dell'applicazione non caricato.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Il parametro<paramref name="assemblyName" /> non è stato trovato.</exception>
      <exception cref="T:System.TypeLoadException">Non è possibile trovare<paramref name="typeName" /> in <paramref name="assemblyName" />.</exception>
      <exception cref="T:System.MissingMethodException">Non è stato trovato alcun costruttore pubblico corrispondente.</exception>
      <exception cref="T:System.MethodAccessException">Il chiamante non ha autorizzazioni sufficienti per chiamare il costruttore.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyName" /> non è un assembly valido.  
In alternativa 
 <paramref name="assemblyName" /> è stato compilato con una versione successiva di Common Language Runtime rispetto alla versione attualmente caricata.</exception>
      <exception cref="T:System.IO.FileLoadException">Un assembly o un modulo è stato caricato due volte con due evidenze diverse.</exception>
    </member>
    <member name="M:System.AppDomain.CreateInstanceFromAndUnwrap(System.String,System.String,System.Object[])">
      <summary>Crea una nuova istanza del tipo specificato definito nel file di assembly specificato.</summary>
      <param name="assemblyName">Nome e percorso del file dell'assembly in cui viene definito il tipo richiesto.</param>
      <param name="typeName">Nome completo del tipo richiesto, incluso lo spazio dei nomi ma non l'assembly (vedere la proprietà <see cref="P:System.Type.FullName" />).</param>
      <param name="activationAttributes">Matrice di uno o più attributi che possono prendere parte all'attivazione. In genere, matrice che contiene un singolo oggetto <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> che specifica l'URL necessario per attivare un oggetto remoto.  
Il parametro è correlato agli oggetti attivati dal client. L'attivazione del client è una tecnologia legacy mantenuta per garantire la compatibilità con le versioni precedenti, ma non è consigliata per nuove attività di sviluppo. Per le applicazioni distribuite si dovrebbe usare invece Windows Communication Foundation.</param>
      <returns>Oggetto richiesto o <see langword="null" /> se <paramref name="typeName" /> non è stato trovato.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> è <see langword="null" />.  
-oppure- 
 <paramref name="typeName" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Il chiamante non può fornire attributi di attivazione per un oggetto che non eredita da <see cref="T:System.MarshalByRefObject" />.</exception>
      <exception cref="T:System.AppDomainUnloadedException">L'operazione viene tentata in un dominio dell'applicazione non caricato.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Il parametro<paramref name="assemblyName" /> non è stato trovato.</exception>
      <exception cref="T:System.TypeLoadException">Non è possibile trovare <paramref name="typeName" /> in <paramref name="assemblyName" />.</exception>
      <exception cref="T:System.MissingMethodException">Non è stato trovato alcun costruttore pubblico senza parametri.</exception>
      <exception cref="T:System.MethodAccessException">Il chiamante non ha autorizzazioni sufficienti per chiamare il costruttore.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyName" /> non è un assembly valido.  
-oppure- 
Attualmente è caricata la versione 2.0 o successiva di Common Language Runtime e l'oggetto <paramref name="assemblyName" /> è stato compilato con una versione successiva.</exception>
      <exception cref="T:System.IO.FileLoadException">Un assembly o un modulo è stato caricato due volte con due evidenze diverse.</exception>
    </member>
    <member name="P:System.AppDomain.CurrentDomain">
      <summary>Ottiene il dominio applicazione corrente per l'oggetto <see cref="T:System.Threading.Thread" /> corrente.</summary>
      <returns>Dominio applicazione corrente.</returns>
    </member>
    <member name="E:System.AppDomain.DomainUnload">
      <summary>Si verifica quando un oggetto <see cref="T:System.AppDomain" /> sta per essere scaricato.</summary>
    </member>
    <member name="P:System.AppDomain.DynamicDirectory">
      <summary>Ottiene la directory usata dal resolver dell'assembly per verificare la presenza di assembly creati dinamicamente.</summary>
      <returns>Directory usata dal resolver dell'assembly per verificare la presenza di assembly creati dinamicamente.</returns>
      <exception cref="T:System.AppDomainUnloadedException">L'operazione viene tentata in un dominio dell'applicazione non caricato.</exception>
    </member>
    <member name="M:System.AppDomain.ExecuteAssembly(System.String)">
      <summary>Esegue l'assembly contenuto nel file specificato.</summary>
      <param name="assemblyFile">Nome del file contenente l'assembly da eseguire.</param>
      <returns>Valore restituito dal punto di ingresso dell'assembly.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyFile" /> è <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyFile" /> non trovata.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyFile" /> non è un assembly valido.  
-oppure- 
Attualmente è caricata la versione 2.0 o successiva di Common Language Runtime e il parametro <paramref name="assemblyFile" /> è stato compilato con una versione successiva.</exception>
      <exception cref="T:System.AppDomainUnloadedException">L'operazione viene tentata in un dominio dell'applicazione non caricato.</exception>
      <exception cref="T:System.IO.FileLoadException">Un assembly o un modulo è stato caricato due volte con due evidenze diverse.</exception>
      <exception cref="T:System.MissingMethodException">L'assembly specificato non ha alcun punto di ingresso.</exception>
    </member>
    <member name="M:System.AppDomain.ExecuteAssembly(System.String,System.String[])">
      <summary>Esegue l'assembly contenuto nel file specificato, usando gli argomenti specificati.</summary>
      <param name="assemblyFile">Nome del file contenente l'assembly da eseguire.</param>
      <param name="args">Argomenti per il punto di ingresso dell'assembly.</param>
      <returns>Valore restituito dal punto di ingresso dell'assembly.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyFile" /> è <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyFile" /> non trovata.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyFile" /> non è un assembly valido.  
In alternativa 
 <paramref name="assemblyFile" /> è stato compilato con una versione successiva di Common Language Runtime rispetto alla versione attualmente caricata.</exception>
      <exception cref="T:System.AppDomainUnloadedException">L'operazione viene tentata in un dominio dell'applicazione non caricato.</exception>
      <exception cref="T:System.IO.FileLoadException">Un assembly o un modulo è stato caricato due volte con due evidenze diverse.</exception>
      <exception cref="T:System.MissingMethodException">L'assembly specificato non ha alcun punto di ingresso.</exception>
    </member>
    <member name="M:System.AppDomain.ExecuteAssembly(System.String,System.String[],System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)">
      <summary>Esegue l'assembly contenuto nel file specificato, usando gli argomenti, il valore hash e l'algoritmo hash specificati.</summary>
      <param name="assemblyFile">Nome del file contenente l'assembly da eseguire.</param>
      <param name="args">Argomenti per il punto di ingresso dell'assembly.</param>
      <param name="hashValue">Rappresenta il valore del codice hash calcolato.</param>
      <param name="hashAlgorithm">Rappresenta l'algoritmo hash usato dal manifesto dell'assembly.</param>
      <returns>Valore restituito dal punto di ingresso dell'assembly.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyFile" /> è <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyFile" /> non trovata.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyFile" /> non è un assembly valido.  
In alternativa 
 <paramref name="assemblyFile" /> è stato compilato con una versione successiva di Common Language Runtime rispetto alla versione attualmente caricata.</exception>
      <exception cref="T:System.AppDomainUnloadedException">L'operazione viene tentata in un dominio dell'applicazione non caricato.</exception>
      <exception cref="T:System.IO.FileLoadException">Un assembly o un modulo è stato caricato due volte con due evidenze diverse.</exception>
      <exception cref="T:System.MissingMethodException">L'assembly specificato non ha alcun punto di ingresso.</exception>
    </member>
    <member name="M:System.AppDomain.ExecuteAssemblyByName(System.Reflection.AssemblyName,System.String[])">
      <summary>Esegue l'assembly in base a un oggetto <see cref="T:System.Reflection.AssemblyName" />, usando gli argomenti specificati.</summary>
      <param name="assemblyName">Oggetto <see cref="T:System.Reflection.AssemblyName" /> che rappresenta il nome dell'assembly.</param>
      <param name="args">Argomenti della riga di comando da passare all'avvio del processo.</param>
      <returns>Valore restituito dal punto di ingresso dell'assembly.</returns>
      <exception cref="T:System.IO.FileNotFoundException">L'assembly specificato da <paramref name="assemblyName" /> non è stato trovato.</exception>
      <exception cref="T:System.IO.FileLoadException">L'assembly specificato da <paramref name="assemblyName" /> è stato trovato, ma non è stato possibile caricarlo.</exception>
      <exception cref="T:System.BadImageFormatException">L'assembly specificato da <paramref name="assemblyName" /> non è un assembly valido.  
-oppure- 
 <paramref name="assemblyName" /> è stato compilato con una versione successiva di Common Language Runtime rispetto alla versione attualmente caricata.</exception>
      <exception cref="T:System.AppDomainUnloadedException">L'operazione viene tentata in un dominio dell'applicazione non caricato.</exception>
      <exception cref="T:System.MissingMethodException">L'assembly specificato non ha alcun punto di ingresso.</exception>
    </member>
    <member name="M:System.AppDomain.ExecuteAssemblyByName(System.String)">
      <summary>Esegue un assembly in base al nome visualizzato.</summary>
      <param name="assemblyName">Nome visualizzato dell'assembly. Vedere <see cref="P:System.Reflection.Assembly.FullName" />.</param>
      <returns>Valore restituito dal punto di ingresso dell'assembly.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> è <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">L'assembly specificato da <paramref name="assemblyName" /> non è stato trovato.</exception>
      <exception cref="T:System.BadImageFormatException">L'assembly specificato da <paramref name="assemblyName" /> non è un assembly valido.  
-oppure- 
Attualmente è caricata la versione 2.0 o successiva di Common Language Runtime e il parametro <paramref name="assemblyName" /> è stato compilato con una versione successiva.</exception>
      <exception cref="T:System.AppDomainUnloadedException">L'operazione viene tentata in un dominio dell'applicazione non caricato.</exception>
      <exception cref="T:System.IO.FileLoadException">L'assembly specificato da <paramref name="assemblyName" /> è stato trovato, ma non è stato possibile caricarlo.</exception>
      <exception cref="T:System.MissingMethodException">L'assembly specificato non ha alcun punto di ingresso.</exception>
    </member>
    <member name="M:System.AppDomain.ExecuteAssemblyByName(System.String,System.String[])">
      <summary>Esegue l'assembly in base al nome visualizzato, usando gli argomenti specificati.</summary>
      <param name="assemblyName">Nome visualizzato dell'assembly. Vedere <see cref="P:System.Reflection.Assembly.FullName" />.</param>
      <param name="args">Argomenti della riga di comando da passare all'avvio del processo.</param>
      <returns>Valore restituito dal punto di ingresso dell'assembly.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> è <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">L'assembly specificato da <paramref name="assemblyName" /> non è stato trovato.</exception>
      <exception cref="T:System.IO.FileLoadException">L'assembly specificato da <paramref name="assemblyName" /> è stato trovato, ma non è stato possibile caricarlo.</exception>
      <exception cref="T:System.BadImageFormatException">L'assembly specificato da <paramref name="assemblyName" /> non è un assembly valido.  
-oppure- 
 <paramref name="assemblyName" /> è stato compilato con una versione successiva di Common Language Runtime rispetto alla versione attualmente caricata.</exception>
      <exception cref="T:System.AppDomainUnloadedException">L'operazione viene tentata in un dominio dell'applicazione non caricato.</exception>
      <exception cref="T:System.MissingMethodException">L'assembly specificato non ha alcun punto di ingresso.</exception>
    </member>
    <member name="E:System.AppDomain.FirstChanceException">
      <summary>Si verifica quando un'eccezione viene generata in codice gestito prima che il runtime cerchi un gestore di eccezioni nello stack di chiamate del dominio applicazione.</summary>
    </member>
    <member name="P:System.AppDomain.FriendlyName">
      <summary>Ottiene il nome descrittivo del dominio applicazione.</summary>
      <returns>Nome descrittivo del dominio applicazione.</returns>
      <exception cref="T:System.AppDomainUnloadedException">L'operazione viene tentata in un dominio dell'applicazione non caricato.</exception>
    </member>
    <member name="M:System.AppDomain.GetAssemblies">
      <summary>Ottiene gli assembly caricati nel contesto di esecuzione del dominio applicazione.</summary>
      <returns>Matrice di assembly nel dominio applicazione.</returns>
      <exception cref="T:System.AppDomainUnloadedException">L'operazione viene tentata in un dominio dell'applicazione non caricato.</exception>
    </member>
    <member name="M:System.AppDomain.GetCurrentThreadId">
      <summary>Ottiene l'identificatore del thread attuale.</summary>
      <returns>Intero con segno a 32 bit che rappresenta l'identificatore del thread attuale.</returns>
    </member>
    <member name="M:System.AppDomain.GetData(System.String)">
      <summary>Ottiene il valore archiviato nel dominio applicazione attuale per il nome specificato.</summary>
      <param name="name">Nome di una proprietà del dominio applicazione predefinita o nome della proprietà di un dominio applicazione definito.</param>
      <returns>Valore della proprietà <paramref name="name" /> oppure <see langword="null" /> se la proprietà non esiste.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> è <see langword="null" />.</exception>
      <exception cref="T:System.AppDomainUnloadedException">L'operazione viene tentata in un dominio dell'applicazione non caricato.</exception>
    </member>
    <member name="P:System.AppDomain.Id">
      <summary>Ottiene un intero che identifica in modo univoco il dominio applicazione all'interno del processo.</summary>
      <returns>Intero che identifica il dominio applicazione.</returns>
    </member>
    <member name="M:System.AppDomain.IsCompatibilitySwitchSet(System.String)">
      <summary>Ottiene un valore booleano che ammette valori Null, indica se sono impostate opzioni di compatibilità e, in tal caso, se è impostata l'opzione di compatibilità specificata.</summary>
      <param name="value">Opzione di compatibilità da testare.</param>
      <returns>Riferimento Null (<see langword="Nothing" /> in Visual Basic) se non è impostata alcuna opzione di compatibilità; in caso contrario, un valore booleano che indica se l'opzione di compatibilità specificata da <paramref name="value" /> è impostata.</returns>
    </member>
    <member name="M:System.AppDomain.IsDefaultAppDomain">
      <summary>Restituisce un valore che indica se il dominio applicazione è quello predefinito per il processo.</summary>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="T:System.AppDomain" /> corrente rappresenta il dominio applicazione predefinito per il processo. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.AppDomain.IsFinalizingForUnload">
      <summary>Indica se è in corso lo scaricamento del dominio applicazione e se il completamento degli oggetti in esso contenuti è stato avviato in Common Language Runtime.</summary>
      <returns>
        <see langword="true" /> se è in corso lo scaricamento del dominio applicazione ed è stato avviato il richiamo dei finalizzatori in Common Language Runtime. In caso contrario, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.AppDomain.IsFullyTrusted">
      <summary>Ottiene un valore che indica se gli assembly caricati nel dominio applicazione corrente vengono eseguiti con attendibilità totale.</summary>
      <returns>
        <see langword="true" /> se gli assembly caricati nel dominio dell'applicazione corrente vengono eseguiti con attendibilità totale; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.AppDomain.IsHomogenous">
      <summary>Ottiene un valore che indica se il dominio applicazione corrente dispone di un set di autorizzazioni concesso a tutti gli assembly caricati nel dominio applicazione.</summary>
      <returns>
        <see langword="true" /> se il dominio applicazione corrente dispone di un set omogeneo di autorizzazioni; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.AppDomain.Load(System.Byte[])">
      <summary>Carica l'oggetto <see cref="T:System.Reflection.Assembly" /> con un'immagine in formato COFF (Common Object File Format) contenente un oggetto <see cref="T:System.Reflection.Assembly" /> generato.</summary>
      <param name="rawAssembly">Matrice di tipo <see langword="byte" /> costituita da un'immagine in formato COFF contenente un assembly generato.</param>
      <returns>Assembly caricato.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rawAssembly" /> è <see langword="null" />.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="rawAssembly" /> non è un assembly valido.  
-oppure- 
Attualmente è caricata la versione 2.0 o successiva di Common Language Runtime e il parametro <paramref name="rawAssembly" /> è stato compilato con una versione successiva.</exception>
      <exception cref="T:System.AppDomainUnloadedException">L'operazione viene tentata in un dominio dell'applicazione non caricato.</exception>
      <exception cref="T:System.IO.FileLoadException">Un assembly o un modulo è stato caricato due volte con due evidenze diverse.</exception>
    </member>
    <member name="M:System.AppDomain.Load(System.Byte[],System.Byte[])">
      <summary>Carica l'oggetto <see cref="T:System.Reflection.Assembly" /> con un'immagine in formato COFF (Common Object File Format) contenente un oggetto <see cref="T:System.Reflection.Assembly" /> generato. Vengono caricati anche i byte non elaborati che rappresentano i simboli per l'oggetto <see cref="T:System.Reflection.Assembly" />.</summary>
      <param name="rawAssembly">Matrice di tipo <see langword="byte" /> costituita da un'immagine in formato COFF contenente un assembly generato.</param>
      <param name="rawSymbolStore">Matrice di tipo <see langword="byte" /> contenente i byte non elaborati che rappresentano i simboli per l'assembly.</param>
      <returns>Assembly caricato.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rawAssembly" /> è <see langword="null" />.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="rawAssembly" /> non è un assembly valido.  
-oppure- 
Attualmente è caricata la versione 2.0 o successiva di Common Language Runtime e il parametro <paramref name="rawAssembly" /> è stato compilato con una versione successiva.</exception>
      <exception cref="T:System.AppDomainUnloadedException">L'operazione viene tentata in un dominio dell'applicazione non caricato.</exception>
      <exception cref="T:System.IO.FileLoadException">Un assembly o un modulo è stato caricato due volte con due evidenze diverse.</exception>
    </member>
    <member name="M:System.AppDomain.Load(System.Reflection.AssemblyName)">
      <summary>Carica <see cref="T:System.Reflection.Assembly" />, dato il relativo <see cref="T:System.Reflection.AssemblyName" />.</summary>
      <param name="assemblyRef">Oggetto che descrive l'assembly da caricare.</param>
      <returns>Assembly caricato.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyRef" /> è <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyRef" /> non trovata.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyRef" /> non è un assembly valido.  
-oppure- 
Attualmente è caricata la versione 2.0 o successiva di Common Language Runtime e il parametro <paramref name="assemblyRef" /> è stato compilato con una versione successiva.</exception>
      <exception cref="T:System.AppDomainUnloadedException">L'operazione viene tentata in un dominio dell'applicazione non caricato.</exception>
      <exception cref="T:System.IO.FileLoadException">Un assembly o un modulo è stato caricato due volte con due evidenze diverse.</exception>
    </member>
    <member name="M:System.AppDomain.Load(System.String)">
      <summary>Carica <see cref="T:System.Reflection.Assembly" />, dato il nome visualizzato.</summary>
      <param name="assemblyString">Nome visualizzato dell'assembly. Vedere <see cref="P:System.Reflection.Assembly.FullName" />.</param>
      <returns>Assembly caricato.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyString" /> è <see langword="null" /></exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyString" /> non viene trovato.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyString" /> non è un assembly valido.  
In alternativa 
Attualmente è caricata la versione 2.0 o successiva di Common Language Runtime e il parametro <paramref name="assemblyString" /> è stato compilato con una versione successiva.</exception>
      <exception cref="T:System.AppDomainUnloadedException">L'operazione viene tentata in un dominio dell'applicazione non caricato.</exception>
      <exception cref="T:System.IO.FileLoadException">Un assembly o un modulo è stato caricato due volte con due evidenze diverse.</exception>
    </member>
    <member name="P:System.AppDomain.MonitoringIsEnabled">
      <summary>Ottiene o imposta un valore che indica se il monitoraggio della memoria e della CPU dei domini applicazione è abilitato per il processo corrente. Una volta abilitato per un processo, il monitoraggio non può più essere disabilitato.</summary>
      <returns>
        <see langword="true" /> se il monitoraggio è abilitato; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Il processo corrente ha tentato di assegnare il valore <see langword="false" /> a questa proprietà.</exception>
    </member>
    <member name="P:System.AppDomain.MonitoringSurvivedMemorySize">
      <summary>Ottiene il numero di byte esclusi dall'ultima raccolta e a cui fa riferimento il dominio applicazione corrente.</summary>
      <returns>Numero di byte esclusi.</returns>
      <exception cref="T:System.InvalidOperationException">La proprietà <see langword="static" /> (<see langword="Shared" /> in Visual Basic) <see cref="P:System.AppDomain.MonitoringIsEnabled" /> è impostata su <see langword="false" />.</exception>
    </member>
    <member name="P:System.AppDomain.MonitoringSurvivedProcessMemorySize">
      <summary>Ottiene i byte totali esclusi dall'ultima raccolta per tutti i domini applicazione nel processo.</summary>
      <returns>Numero totale di byte esclusi per il processo.</returns>
      <exception cref="T:System.InvalidOperationException">La proprietà <see langword="static" /> (<see langword="Shared" /> in Visual Basic) <see cref="P:System.AppDomain.MonitoringIsEnabled" /> è impostata su <see langword="false" />.</exception>
    </member>
    <member name="P:System.AppDomain.MonitoringTotalAllocatedMemorySize">
      <summary>Ottiene le dimensioni totali, in byte, di tutte le allocazioni di memoria effettuate dal dominio applicazione da quando è stato creato, senza sottrarre la memoria che è stata raccolta.</summary>
      <returns>Dimensioni totali, in byte, di tutte le allocazioni di memoria.</returns>
      <exception cref="T:System.InvalidOperationException">La proprietà <see langword="static" /> (<see langword="Shared" /> in Visual Basic) <see cref="P:System.AppDomain.MonitoringIsEnabled" /> è impostata su <see langword="false" />.</exception>
    </member>
    <member name="P:System.AppDomain.MonitoringTotalProcessorTime">
      <summary>Ottiene il tempo del processore totale usato da tutti i thread durante l'esecuzione nel dominio applicazione corrente, da quando il processo è stato avviato.</summary>
      <returns>Tempo del processore totale per il dominio applicazione corrente.</returns>
      <exception cref="T:System.InvalidOperationException">La proprietà <see langword="static" /> (<see langword="Shared" /> in Visual Basic) <see cref="P:System.AppDomain.MonitoringIsEnabled" /> è impostata su <see langword="false" />.</exception>
    </member>
    <member name="P:System.AppDomain.PermissionSet">
      <summary>Ottiene il set di autorizzazioni di un dominio applicazione creato mediante sandbox.</summary>
      <returns>Set di autorizzazioni di un dominio applicazione creato mediante sandbox.</returns>
    </member>
    <member name="E:System.AppDomain.ProcessExit">
      <summary>Si verifica alla chiusura del processo padre del dominio applicazione predefinito.</summary>
    </member>
    <member name="E:System.AppDomain.ReflectionOnlyAssemblyResolve">
      <summary>Si verifica quando la risoluzione di un assembly ha esito negativo nel contesto ReflectionOnly.</summary>
    </member>
    <member name="M:System.AppDomain.ReflectionOnlyGetAssemblies">
      <summary>Restituisce gli assembly caricati nel contesto ReflectionOnly del dominio applicazione.</summary>
      <returns>Matrice di oggetti <see cref="T:System.Reflection.Assembly" /> che rappresentano gli assembly caricati nel contesto ReflectionOnly del dominio applicazione.</returns>
      <exception cref="T:System.AppDomainUnloadedException">Si è tentato di effettuare un'operazione su un dominio applicazione non caricato.</exception>
    </member>
    <member name="P:System.AppDomain.RelativeSearchPath">
      <summary>Ottiene il percorso nella directory di base in cui deve essere verificata la presenza di assembly privati mediante il resolver dell'assembly.</summary>
      <returns>Percorso nella directory di base in cui deve essere verificata la presenza di assembly privati mediante il resolver dell'assembly.</returns>
      <exception cref="T:System.AppDomainUnloadedException">L'operazione viene tentata in un dominio dell'applicazione non caricato.</exception>
    </member>
    <member name="E:System.AppDomain.ResourceResolve">
      <summary>Si verifica quando la risoluzione di una risorsa ha esito negativo in quanto la risorsa stessa non è una risorsa collegata valida o non è incorporata nell'assembly.</summary>
    </member>
    <member name="M:System.AppDomain.SetCachePath(System.String)">
      <summary>Imposta il percorso di directory specificato come percorso in cui vengono replicati gli assembly mediante copia shadow.</summary>
      <param name="path">Percorso completo delle copie shadow.</param>
      <exception cref="T:System.AppDomainUnloadedException">L'operazione viene tentata in un dominio dell'applicazione non caricato.</exception>
    </member>
    <member name="M:System.AppDomain.SetData(System.String,System.Object)">
      <summary>Assegna il valore specificato alla proprietà specificata del dominio applicazione.</summary>
      <param name="name">Nome della proprietà del dominio applicazione definito dall'utente da creare o modificare.</param>
      <param name="data">Valore della proprietà.</param>
      <exception cref="T:System.AppDomainUnloadedException">L'operazione viene tentata in un dominio dell'applicazione non caricato.</exception>
    </member>
    <member name="M:System.AppDomain.SetDynamicBase(System.String)">
      <summary>Imposta il percorso di directory specificato come directory di base per sottodirectory in cui vengono archiviati i file generati dinamicamente e tramite cui si accede a questi ultimi.</summary>
      <param name="path">Percorso completo che costituisce la directory di base per le sottodirectory in cui sono archiviati gli assembly dinamici.</param>
      <exception cref="T:System.AppDomainUnloadedException">L'operazione viene tentata in un dominio dell'applicazione non caricato.</exception>
    </member>
    <member name="M:System.AppDomain.SetPrincipalPolicy(System.Security.Principal.PrincipalPolicy)">
      <summary>Specifica come collegare oggetti Principal e Identity a un thread se si tenta di associare il thread a un Principal durante l'esecuzione nel dominio applicazione.</summary>
      <param name="policy">Uno dei valori dell'enumerazione <see cref="T:System.Security.Principal.PrincipalPolicy" /> che specifica il tipo dell'oggetto Principal da associare ai thread.</param>
      <exception cref="T:System.AppDomainUnloadedException">L'operazione viene tentata in un dominio dell'applicazione non caricato.</exception>
    </member>
    <member name="M:System.AppDomain.SetShadowCopyFiles">
      <summary>Attiva la replica tramite copia shadow.</summary>
      <exception cref="T:System.AppDomainUnloadedException">L'operazione viene tentata in un dominio dell'applicazione non caricato.</exception>
    </member>
    <member name="M:System.AppDomain.SetShadowCopyPath(System.String)">
      <summary>Imposta il percorso di directory specificato come percorso degli assembly da replicare mediante copia shadow.</summary>
      <param name="path">Elenco di nomi di directory in cui i nomi sono separati da un punto e virgola.</param>
      <exception cref="T:System.AppDomainUnloadedException">L'operazione viene tentata in un dominio dell'applicazione non caricato.</exception>
    </member>
    <member name="M:System.AppDomain.SetThreadPrincipal(System.Security.Principal.IPrincipal)">
      <summary>Imposta l'oggetto Principal predefinito da collegare ai thread se si prova ad associare questi ultimi a un oggetto Principal durante l'esecuzione nel dominio applicazione.</summary>
      <param name="principal">Oggetto Principal da collegare ai thread.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="principal" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Security.Policy.PolicyException">L'oggetto Principal del thread è già stato impostato.</exception>
      <exception cref="T:System.AppDomainUnloadedException">L'operazione viene tentata in un dominio dell'applicazione non caricato.</exception>
    </member>
    <member name="P:System.AppDomain.SetupInformation">
      <summary>Ottiene le informazioni sulla configurazione del dominio applicazione per l'istanza.</summary>
      <returns>Informazioni sull'inizializzazione del dominio applicazione.</returns>
      <exception cref="T:System.AppDomainUnloadedException">L'operazione viene tentata in un dominio dell'applicazione non caricato.</exception>
    </member>
    <member name="P:System.AppDomain.ShadowCopyFiles">
      <summary>Indica se il dominio applicazione è configurato per eseguire la copia shadow di file.</summary>
      <returns>
        <see langword="true" /> se il dominio applicazione è configurato per eseguire la copia shadow di file; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.AppDomainUnloadedException">L'operazione viene tentata in un dominio dell'applicazione non caricato.</exception>
    </member>
    <member name="M:System.AppDomain.ToString">
      <summary>Ottiene una rappresentazione di stringa che comprende il nome descrittivo del dominio applicazione e qualsiasi criterio di contesto.</summary>
      <returns>Stringa formata concatenando la rappresentazione formale di stringa "Name:", il nome descrittivo del dominio applicazione e le rappresentazioni di stringa dei criteri di contesto o la stringa "There are no context policies".</returns>
      <exception cref="T:System.AppDomainUnloadedException">Il dominio applicazione rappresentato dall'oggetto <see cref="T:System.AppDomain" /> corrente è stato scaricato.</exception>
    </member>
    <member name="E:System.AppDomain.TypeResolve">
      <summary>Si verifica quando la risoluzione di un tipo non riesce.</summary>
    </member>
    <member name="E:System.AppDomain.UnhandledException">
      <summary>Si verifica quando non viene intercettata un'eccezione.</summary>
    </member>
    <member name="M:System.AppDomain.Unload(System.AppDomain)">
      <summary>Scarica il dominio applicazione corrente.</summary>
      <param name="domain">Dominio applicazione da scaricare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="domain" /> è <see langword="null" />.</exception>
      <exception cref="T:System.CannotUnloadAppDomainException">Impossibile scaricare <paramref name="domain" />.</exception>
      <exception cref="T:System.Exception">Si è verificato un errore durante il processo di scaricamento.</exception>
    </member>
    <member name="T:System.AppDomainSetup">
      <summary>Rappresenta le informazioni di associazione dell'assembly che possono essere aggiunte a un'istanza di <see cref="T:System.AppDomain" />.</summary>
    </member>
    <member name="P:System.AppDomainSetup.ApplicationBase">
      <summary>Ottiene o imposta il nome della directory contenente l'applicazione.</summary>
      <returns>Nome della directory della base dell'applicazione.</returns>
    </member>
    <member name="P:System.AppDomainSetup.TargetFrameworkName">
      <summary>Ottiene o imposta una stringa che specifica la versione di destinazione e il profilo di .NET Framework per il dominio applicazione, in un formato che può essere analizzato dal costruttore <see cref="M:System.Runtime.Versioning.FrameworkName.#ctor(System.String)" /> .</summary>
      <returns>Versione e profilo di .NET Framework di destinazione.</returns>
    </member>
    <member name="T:System.AppDomainUnloadedException">
      <summary>L'eccezione generata quando si tenta di accedere a un dominio applicazione non caricato.</summary>
    </member>
    <member name="M:System.AppDomainUnloadedException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.AppDomainUnloadedException" />.</summary>
    </member>
    <member name="M:System.AppDomainUnloadedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.AppDomainUnloadedException" /> con dati serializzati.</summary>
      <param name="info">Oggetto che contiene i dati oggetto serializzati.</param>
      <param name="context">Informazioni contestuali sull'origine o sulla destinazione.</param>
    </member>
    <member name="M:System.AppDomainUnloadedException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.AppDomainUnloadedException" /> con un messaggio di errore specificato.</summary>
      <param name="message">Messaggio in cui viene descritto l'errore.</param>
    </member>
    <member name="M:System.AppDomainUnloadedException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.AppDomainUnloadedException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message">Messaggio in cui viene descritto l'errore.</param>
      <param name="innerException">Eccezione che ha determinato l'eccezione corrente. Se il parametro <paramref name="innerException" /> non è un riferimento Null, l'eccezione corrente verrà generata in un blocco <see langword="catch" /> che gestisce l'eccezione interna.</param>
    </member>
    <member name="T:System.ApplicationId">
      <summary>Contiene informazioni utilizzate per identificare in modo univoco un'applicazione basata su manifesto. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.ApplicationId.#ctor(System.Byte[],System.String,System.Version,System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ApplicationId" />.</summary>
      <param name="publicKeyToken">Matrice di byte che rappresenta i dati non elaborati della chiave pubblica.</param>
      <param name="name">Nome dell'applicazione.</param>
      <param name="version">Oggetto <see cref="T:System.Version" /> che specifica la versione dell'applicazione.</param>
      <param name="processorArchitecture">Architettura di processore dell'applicazione.</param>
      <param name="culture">Impostazioni cultura dell'applicazione.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> è <see langword="null" />.  
-oppure- 
 <paramref name="version" /> è <see langword="null" />.  
In alternativa 
 <paramref name="publicKeyToken" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Il parametro <paramref name="name" /> è una stringa vuota.</exception>
    </member>
    <member name="M:System.ApplicationId.Copy">
      <summary>Crea e restituisce una copia identica dell'identità di applicazione corrente.</summary>
      <returns>Oggetto <see cref="T:System.ApplicationId" /> che rappresenta una copia esatta dell'originale.</returns>
    </member>
    <member name="P:System.ApplicationId.Culture">
      <summary>Ottiene una stringa che rappresenta le informazioni sulle impostazioni cultura per l'applicazione.</summary>
      <returns>Informazioni sulle impostazioni cultura per l'applicazione.</returns>
    </member>
    <member name="M:System.ApplicationId.Equals(System.Object)">
      <summary>Determina se l'oggetto <see cref="T:System.ApplicationId" /> specificato è equivalente all'oggetto <see cref="T:System.ApplicationId" /> corrente.</summary>
      <param name="o">Oggetto <see cref="T:System.ApplicationId" /> da confrontare con l'oggetto <see cref="T:System.ApplicationId" /> corrente.</param>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="T:System.ApplicationId" /> specificato è equivalente all'oggetto <see cref="T:System.ApplicationId" /> corrente. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ApplicationId.GetHashCode">
      <summary>Ottiene il codice hash per l'identità dell'applicazione corrente.</summary>
      <returns>Codice hash per l'identità dell'applicazione corrente.</returns>
    </member>
    <member name="P:System.ApplicationId.Name">
      <summary>Ottiene il nome dell'applicazione.</summary>
      <returns>Nome dell'applicazione.</returns>
    </member>
    <member name="P:System.ApplicationId.ProcessorArchitecture">
      <summary>Ottiene l'architettura del processore di destinazione per l'applicazione.</summary>
      <returns>Architettura di processore dell'applicazione.</returns>
    </member>
    <member name="P:System.ApplicationId.PublicKeyToken">
      <summary>Ottiene il token di chiave pubblica per l'applicazione.</summary>
      <returns>Matrice di byte contenente il token di chiave pubblica per l'applicazione.</returns>
    </member>
    <member name="M:System.ApplicationId.ToString">
      <summary>Crea e restituisce una rappresentazione di stringa dell'identità di applicazione.</summary>
      <returns>Rappresentazione di stringa dell'identità di applicazione.</returns>
    </member>
    <member name="P:System.ApplicationId.Version">
      <summary>Ottiene la versione dell'applicazione.</summary>
      <returns>Oggetto <see cref="T:System.Version" /> che specifica la versione dell'applicazione.</returns>
    </member>
    <member name="T:System.AssemblyLoadEventArgs">
      <summary>Fornisce dati per l'evento <see cref="E:System.AppDomain.AssemblyLoad" />.</summary>
    </member>
    <member name="M:System.AssemblyLoadEventArgs.#ctor(System.Reflection.Assembly)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.AssemblyLoadEventArgs" /> usando il <see cref="T:System.Reflection.Assembly" /> specificato.</summary>
      <param name="loadedAssembly">Istanza che rappresenta l'assembly attualmente caricato.</param>
    </member>
    <member name="P:System.AssemblyLoadEventArgs.LoadedAssembly">
      <summary>Ottiene un oggetto <see cref="T:System.Reflection.Assembly" /> che rappresenta l'assembly attualmente caricato.</summary>
      <returns>Istanza dell'oggetto <see cref="T:System.Reflection.Assembly" /> che rappresenta l'assembly attualmente caricato.</returns>
    </member>
    <member name="T:System.AssemblyLoadEventHandler">
      <summary>Rappresenta il metodo di gestione dell'evento <see cref="E:System.AppDomain.AssemblyLoad" /> di un oggetto <see cref="T:System.AppDomain" />.</summary>
      <param name="sender">Origine dell'evento.</param>
      <param name="args">Oggetto <see cref="T:System.AssemblyLoadEventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="T:System.Base64FormattingOptions">
      <summary>Specifica se i metodi rilevanti <see cref="Overload:System.Convert.ToBase64CharArray" /> e <see cref="Overload:System.Convert.ToBase64String" /> inseriscono un'interruzione di riga nell'output.</summary>
    </member>
    <member name="F:System.Base64FormattingOptions.InsertLineBreaks">
      <summary>Inserisce interruzioni di riga ogni 76 caratteri nella rappresentazione di stringa.</summary>
    </member>
    <member name="F:System.Base64FormattingOptions.None">
      <summary>Non inserisce interruzioni di riga ogni 76 caratteri nella rappresentazione di stringa.</summary>
    </member>
    <member name="T:System.BitConverter">
      <summary>Converte tipi di dati di base in una matrice di byte e una matrice di byte in tipi di dati di base.</summary>
    </member>
    <member name="M:System.BitConverter.DoubleToInt64Bits(System.Double)">
      <summary>Converte il numero in virgola mobile e precisione doppia specificato in un intero con segno a 64 bit.</summary>
      <param name="value">Numero da convertire.</param>
      <returns>Un intero con segno a 64 bit il cui valore è equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.BitConverter.GetBytes(System.Boolean)">
      <summary>Restituisce il valore booleano specificato come matrice di byte.</summary>
      <param name="value">Valore booleano.</param>
      <returns>Matrice di byte di lunghezza 1.</returns>
    </member>
    <member name="M:System.BitConverter.GetBytes(System.Char)">
      <summary>Restituisce il valore del carattere Unicode specificato come matrice di byte.</summary>
      <param name="value">Carattere da convertire</param>
      <returns>Matrice di byte con lunghezza 2.</returns>
    </member>
    <member name="M:System.BitConverter.GetBytes(System.Double)">
      <summary>Restituisce il valore in virgola mobile e precisione doppia specificato come matrice di byte.</summary>
      <param name="value">Numero da convertire.</param>
      <returns>Matrice di byte con lunghezza 8.</returns>
    </member>
    <member name="M:System.BitConverter.GetBytes(System.Int16)">
      <summary>Restituisce il valore dell'integer con segno a 16 bit specificato come matrice di byte.</summary>
      <param name="value">Numero da convertire.</param>
      <returns>Matrice di byte con lunghezza 2.</returns>
    </member>
    <member name="M:System.BitConverter.GetBytes(System.Int32)">
      <summary>Restituisce il valore intero con segno a 32 bit specificato come matrice di byte.</summary>
      <param name="value">Numero da convertire.</param>
      <returns>Matrice di byte con lunghezza 4.</returns>
    </member>
    <member name="M:System.BitConverter.GetBytes(System.Int64)">
      <summary>Restituisce il valore intero con segno a 64 bit specificato come matrice di byte.</summary>
      <param name="value">Numero da convertire.</param>
      <returns>Matrice di byte con lunghezza 8.</returns>
    </member>
    <member name="M:System.BitConverter.GetBytes(System.Single)">
      <summary>Restituisce il valore in virgola mobile e precisione singola specificato come matrice di byte.</summary>
      <param name="value">Numero da convertire.</param>
      <returns>Matrice di byte con lunghezza 4.</returns>
    </member>
    <member name="M:System.BitConverter.GetBytes(System.UInt16)">
      <summary>Restituisce il valore dell'integer senza segno a 16 bit specificato come matrice di byte.</summary>
      <param name="value">Numero da convertire.</param>
      <returns>Matrice di byte con lunghezza 2.</returns>
    </member>
    <member name="M:System.BitConverter.GetBytes(System.UInt32)">
      <summary>Restituisce il valore dell'intero senza segno a 32 bit specificato come matrice di byte.</summary>
      <param name="value">Numero da convertire.</param>
      <returns>Matrice di byte con lunghezza 4.</returns>
    </member>
    <member name="M:System.BitConverter.GetBytes(System.UInt64)">
      <summary>Restituisce il valore dell'intero senza segno a 64 bit specificato come matrice di byte.</summary>
      <param name="value">Numero da convertire.</param>
      <returns>Matrice di byte con lunghezza 8.</returns>
    </member>
    <member name="M:System.BitConverter.Int32BitsToSingle(System.Int32)">
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.Int64BitsToDouble(System.Int64)">
      <summary>Converte l'intero con segno a 64 bit specificato in un numero in virgola mobile e precisione doppia.</summary>
      <param name="value">Numero da convertire.</param>
      <returns>Numero in virgola mobile e precisione doppia il cui valore è equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="F:System.BitConverter.IsLittleEndian">
      <summary>Indica l'ordine dei byte ("architettura endian") in cui vengono memorizzati i dati in questa architettura di computer.</summary>
    </member>
    <member name="M:System.BitConverter.SingleToInt32Bits(System.Single)">
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.ToBoolean(System.Byte[],System.Int32)">
      <summary>Restituisce un valore booleano convertito da un byte in una posizione specificata in una matrice di byte.</summary>
      <param name="value">Matrice di byte.</param>
      <param name="startIndex">Indice del byte all'interno di <paramref name="value" />.</param>
      <returns>
        <see langword="true" /> se il byte in <paramref name="startIndex" /> di <paramref name="value" /> è diverso da zero; in caso contrario <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" />è minore di zero o maggiore della lunghezza di <paramref name="value" /> meno 1.</exception>
    </member>
    <member name="M:System.BitConverter.ToBoolean(System.ReadOnlySpan{System.Byte})">
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.ToChar(System.Byte[],System.Int32)">
      <summary>Restituisce un carattere Unicode convertito da due byte nella posizione specificata in una matrice di byte.</summary>
      <param name="value">Una matrice.</param>
      <param name="startIndex">Posizione iniziale all'interno di <paramref name="value" />.</param>
      <returns>Carattere formato da due byte a partire da <paramref name="startIndex" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="startIndex" /> è uguale alla lunghezza di <paramref name="value" /> meno 1.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" />è minore di zero o maggiore della lunghezza di <paramref name="value" /> meno 1.</exception>
    </member>
    <member name="M:System.BitConverter.ToChar(System.ReadOnlySpan{System.Byte})">
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.ToDouble(System.Byte[],System.Int32)">
      <summary>Restituisce un numero in virgola mobile e precisione doppia convertito da otto byte nella posizione specificata in una matrice di byte.</summary>
      <param name="value">Matrice di byte.</param>
      <param name="startIndex">Posizione iniziale all'interno di <paramref name="value" />.</param>
      <returns>Un numero in virgola mobile e precisione doppia formato da otto byte a partire da <paramref name="startIndex" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="startIndex" /> è maggiore o uguale alla lunghezza di <paramref name="value" /> meno 7 e minore o uguale alla lunghezza di <paramref name="value" /> meno 1.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" />è minore di zero o maggiore della lunghezza di <paramref name="value" /> meno 1.</exception>
    </member>
    <member name="M:System.BitConverter.ToDouble(System.ReadOnlySpan{System.Byte})">
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.ToInt16(System.Byte[],System.Int32)">
      <summary>Restituisce un intero con segno a 16 bit convertito da due byte nella posizione specificata in una matrice di byte.</summary>
      <param name="value">Matrice di byte.</param>
      <param name="startIndex">Posizione iniziale all'interno di <paramref name="value" />.</param>
      <returns>Un intero con segno a 16 bit formato da due byte a partire da <paramref name="startIndex" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="startIndex" /> è uguale alla lunghezza di <paramref name="value" /> meno 1.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" />è minore di zero o maggiore della lunghezza di <paramref name="value" /> meno 1.</exception>
    </member>
    <member name="M:System.BitConverter.ToInt16(System.ReadOnlySpan{System.Byte})">
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.ToInt32(System.Byte[],System.Int32)">
      <summary>Restituisce un intero con segno a 32 bit convertito da quattro byte nella posizione specificata in una matrice di byte.</summary>
      <param name="value">Matrice di byte.</param>
      <param name="startIndex">Posizione iniziale all'interno di <paramref name="value" />.</param>
      <returns>Un intero con segno a 32 bit formato da quattro byte a partire da <paramref name="startIndex" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="startIndex" /> è maggiore o uguale alla lunghezza di <paramref name="value" /> meno 3 e minore o uguale alla lunghezza di <paramref name="value" /> meno 1.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" />è minore di zero o maggiore della lunghezza di <paramref name="value" /> meno 1.</exception>
    </member>
    <member name="M:System.BitConverter.ToInt32(System.ReadOnlySpan{System.Byte})">
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.ToInt64(System.Byte[],System.Int32)">
      <summary>Restituisce un intero con segno a 64 bit convertito da otto byte nella posizione specificata in una matrice di byte.</summary>
      <param name="value">Matrice di byte.</param>
      <param name="startIndex">Posizione iniziale all'interno di <paramref name="value" />.</param>
      <returns>Un intero con segno a 64 bit formato da otto byte a partire da <paramref name="startIndex" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="startIndex" /> è maggiore o uguale alla lunghezza di <paramref name="value" /> meno 7 e minore o uguale alla lunghezza di <paramref name="value" /> meno 1.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" />è minore di zero o maggiore della lunghezza di <paramref name="value" /> meno 1.</exception>
    </member>
    <member name="M:System.BitConverter.ToInt64(System.ReadOnlySpan{System.Byte})">
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.ToSingle(System.Byte[],System.Int32)">
      <summary>Restituisce un numero in virgola mobile e precisione singola convertito da quattro byte nella posizione specificata in una matrice di byte.</summary>
      <param name="value">Matrice di byte.</param>
      <param name="startIndex">Posizione iniziale all'interno di <paramref name="value" />.</param>
      <returns>Un numero in virgola mobile e precisione singola formato da quattro byte a partire da <paramref name="startIndex" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="startIndex" /> è maggiore o uguale alla lunghezza di <paramref name="value" /> meno 3 e minore o uguale alla lunghezza di <paramref name="value" /> meno 1.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" />è minore di zero o maggiore della lunghezza di <paramref name="value" /> meno 1.</exception>
    </member>
    <member name="M:System.BitConverter.ToSingle(System.ReadOnlySpan{System.Byte})">
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.ToString(System.Byte[])">
      <summary>Converte il valore numerico di ogni elemento di una matrice specificata di byte nella relativa rappresentazione di stringa esadecimale equivalente.</summary>
      <param name="value">Matrice di byte.</param>
      <returns>Stringa di coppie esadecimali separate da trattini, dove ogni coppia rappresenta l'elemento corrispondente in <paramref name="value" />, ad esempio "7F-2C-4A-00".</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.BitConverter.ToString(System.Byte[],System.Int32)">
      <summary>Converte il valore numerico di ogni elemento di una sottomatrice specificata di byte nella relativa rappresentazione di stringa esadecimale equivalente.</summary>
      <param name="value">Matrice di byte.</param>
      <param name="startIndex">Posizione iniziale all'interno di <paramref name="value" />.</param>
      <returns>Stringa di coppie esadecimali separate da trattini, dove ogni coppia rappresenta l'elemento corrispondente in una sottomatrice di <paramref name="value" />, ad esempio "7F-2C-4A-00".</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" />è minore di zero o maggiore della lunghezza di <paramref name="value" /> meno 1.</exception>
    </member>
    <member name="M:System.BitConverter.ToString(System.Byte[],System.Int32,System.Int32)">
      <summary>Converte il valore numerico di ogni elemento di una sottomatrice specificata di byte nella relativa rappresentazione di stringa esadecimale equivalente.</summary>
      <param name="value">Matrice di byte.</param>
      <param name="startIndex">Posizione iniziale all'interno di <paramref name="value" />.</param>
      <param name="length">Numero di elementi della matrice di <paramref name="value" /> da convertire.</param>
      <returns>Stringa di coppie esadecimali separate da trattini, dove ogni coppia rappresenta l'elemento corrispondente in una sottomatrice di <paramref name="value" />, ad esempio "7F-2C-4A-00".</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> o <paramref name="length" /> è minore di zero.  
-oppure- 
 <paramref name="startIndex" /> è maggiore di zero ed è maggiore o uguale alla lunghezza di <paramref name="value" />.</exception>
      <exception cref="T:System.ArgumentException">La combinazione di <paramref name="startIndex" /> e di <paramref name="length" /> non specifica una posizione all'interno di <paramref name="value" />, vale a dire che il parametro <paramref name="startIndex" /> è maggiore della lunghezza di <paramref name="value" /> meno il parametro <paramref name="length" />.</exception>
    </member>
    <member name="M:System.BitConverter.ToUInt16(System.Byte[],System.Int32)">
      <summary>Restituisce un intero senza segno a 16 bit convertito da due byte nella posizione specificata in una matrice di byte.</summary>
      <param name="value">La matrice di byte.</param>
      <param name="startIndex">Posizione iniziale all'interno di <paramref name="value" />.</param>
      <returns>Un intero senza segno a 16 bit formato da due byte a partire da <paramref name="startIndex" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="startIndex" /> è uguale alla lunghezza di <paramref name="value" /> meno 1.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" />è minore di zero o maggiore della lunghezza di <paramref name="value" /> meno 1.</exception>
    </member>
    <member name="M:System.BitConverter.ToUInt16(System.ReadOnlySpan{System.Byte})">
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.ToUInt32(System.Byte[],System.Int32)">
      <summary>Restituisce un intero senza segno a 32 bit convertito da quattro byte nella posizione specificata in una matrice di byte.</summary>
      <param name="value">Matrice di byte.</param>
      <param name="startIndex">Posizione iniziale all'interno di <paramref name="value" />.</param>
      <returns>Un intero senza segno a 32 bit formato da quattro byte a partire da <paramref name="startIndex" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="startIndex" /> è maggiore o uguale alla lunghezza di <paramref name="value" /> meno 3 e minore o uguale alla lunghezza di <paramref name="value" /> meno 1.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" />è minore di zero o maggiore della lunghezza di <paramref name="value" /> meno 1.</exception>
    </member>
    <member name="M:System.BitConverter.ToUInt32(System.ReadOnlySpan{System.Byte})">
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.ToUInt64(System.Byte[],System.Int32)">
      <summary>Restituisce un intero senza segno a 64 bit convertito da otto byte nella posizione specificata in una matrice di byte.</summary>
      <param name="value">Matrice di byte.</param>
      <param name="startIndex">Posizione iniziale all'interno di <paramref name="value" />.</param>
      <returns>Un intero senza segno a 64 bit formato da otto byte a partire da <paramref name="startIndex" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="startIndex" /> è maggiore o uguale alla lunghezza di <paramref name="value" /> meno 7 e minore o uguale alla lunghezza di <paramref name="value" /> meno 1.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" />è minore di zero o maggiore della lunghezza di <paramref name="value" /> meno 1.</exception>
    </member>
    <member name="M:System.BitConverter.ToUInt64(System.ReadOnlySpan{System.Byte})">
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.Boolean)">
      <param name="destination" />
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.Char)">
      <param name="destination" />
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.Double)">
      <param name="destination" />
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.Int16)">
      <param name="destination" />
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.Int32)">
      <param name="destination" />
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.Int64)">
      <param name="destination" />
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.Single)">
      <param name="destination" />
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.UInt16)">
      <param name="destination" />
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.UInt32)">
      <param name="destination" />
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.UInt64)">
      <param name="destination" />
      <param name="value" />
    </member>
    <member name="T:System.CannotUnloadAppDomainException">
      <summary>Eccezione generata quando un tentativo di scaricare un dominio applicazione non riesce.</summary>
    </member>
    <member name="M:System.CannotUnloadAppDomainException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CannotUnloadAppDomainException" />.</summary>
    </member>
    <member name="M:System.CannotUnloadAppDomainException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CannotUnloadAppDomainException" /> dai dati serializzati.</summary>
      <param name="info">Oggetto che contiene i dati oggetto serializzati.</param>
      <param name="context">Informazioni contestuali sull'origine o sulla destinazione.</param>
    </member>
    <member name="M:System.CannotUnloadAppDomainException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CannotUnloadAppDomainException" /> con un messaggio di errore specificato.</summary>
      <param name="message">
        <see cref="T:System.String" /> che descrive l'errore.</param>
    </member>
    <member name="M:System.CannotUnloadAppDomainException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CannotUnloadAppDomainException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message">Messaggio di errore in cui viene indicato il motivo dell'eccezione.</param>
      <param name="innerException">Eccezione che ha determinato l'eccezione corrente. Se il parametro <paramref name="innerException" /> non è un riferimento null (<see langword="Nothing" /> in Visual Basic), l'eccezione corrente viene generata in un blocco <see langword="catch" /> che gestisce l'eccezione interna.</param>
    </member>
    <member name="T:System.CodeDom.Compiler.IndentedTextWriter">
      <summary>Fornisce un writer di testo in grado di applicare un rientro alle nuove righe in base a un token relativo a una stringa di tabulazioni.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.#ctor(System.IO.TextWriter)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.Compiler.IndentedTextWriter" /> utilizzando il writer di testo specificato e la stringa di tabulazioni predefinita.</summary>
      <param name="writer">Oggetto <see cref="T:System.IO.TextWriter" /> da utilizzare per l'output.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.#ctor(System.IO.TextWriter,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.Compiler.IndentedTextWriter" /> utilizzando il writer di testo e la stringa di tabulazioni specificati.</summary>
      <param name="writer">Oggetto <see cref="T:System.IO.TextWriter" /> da utilizzare per l'output.</param>
      <param name="tabString">Stringa di tabulazioni da utilizzare per il rientro.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Close">
      <summary>Chiude il documento in cui viene effettuata la scrittura.</summary>
    </member>
    <member name="F:System.CodeDom.Compiler.IndentedTextWriter.DefaultTabString">
      <summary>Specifica la stringa di tabulazioni predefinita. Questo campo è costante.</summary>
    </member>
    <member name="P:System.CodeDom.Compiler.IndentedTextWriter.Encoding">
      <summary>Ottiene la codifica che deve essere utilizzata dal writer di testo.</summary>
      <returns>Oggetto <see cref="T:System.Text.Encoding" /> che indica la codifica che deve essere utilizzata dal writer di testo.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Flush">
      <summary>Svuota il flusso.</summary>
    </member>
    <member name="P:System.CodeDom.Compiler.IndentedTextWriter.Indent">
      <summary>Ottiene o imposta il numero di spazi da utilizzare per il rientro.</summary>
      <returns>Numero di spazi da utilizzare per il rientro.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.IndentedTextWriter.InnerWriter">
      <summary>Ottiene l'oggetto <see cref="T:System.IO.TextWriter" /> da utilizzare.</summary>
      <returns>Oggetto <see cref="T:System.IO.TextWriter" /> da usare.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.IndentedTextWriter.NewLine">
      <summary>Ottiene o imposta il carattere di nuova riga da utilizzare.</summary>
      <returns>Carattere di nuova riga da utilizzare.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.OutputTabs">
      <summary>Restituisce la stringa di tabulazioni una volta per ciascun livello di rientro in base alla proprietà <see cref="P:System.CodeDom.Compiler.IndentedTextWriter.Indent" />.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Boolean)">
      <summary>Inserisce nel flusso di testo la rappresentazione testuale di un valore booleano.</summary>
      <param name="value">Valore booleano da inserire.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Char)">
      <summary>Scrive un carattere nel flusso di testo.</summary>
      <param name="value">Carattere da scrivere.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Char[])">
      <summary>Scrive una matrice di caratteri nel flusso di testo.</summary>
      <param name="buffer">Matrice di caratteri da scrivere.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Char[],System.Int32,System.Int32)">
      <summary>Scrive una sottomatrice di caratteri nel flusso di testo.</summary>
      <param name="buffer">Matrice di caratteri da cui scrivere i dati.</param>
      <param name="index">Indice iniziale nel buffer.</param>
      <param name="count">Numero di caratteri da scrivere.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Double)">
      <summary>Inserisce nel flusso di testo la rappresentazione testuale di un valore Double.</summary>
      <param name="value">Valore <see langword="double" /> da scrivere.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Int32)">
      <summary>Inserisce nel flusso di testo la rappresentazione testuale di un intero.</summary>
      <param name="value">Intero da inserire.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Int64)">
      <summary>Inserisce nel flusso di testo la rappresentazione testuale di un intero a 8 byte.</summary>
      <param name="value">Intero a 8 byte da inserire.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Object)">
      <summary>Inserisce nel flusso di testo la rappresentazione testuale di un oggetto.</summary>
      <param name="value">Oggetto da scrivere.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Single)">
      <summary>Inserisce nel flusso di testo la rappresentazione testuale di un valore Single.</summary>
      <param name="value">Valore <see langword="single" /> da scrivere.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.String)">
      <summary>Inserisce nel flusso di testo la stringa specificata.</summary>
      <param name="s">Stringa da scrivere.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.String,System.Object)">
      <summary>Inserisce una stringa formattata utilizzando la semantica specificata.</summary>
      <param name="format">Stringa di formattazione.</param>
      <param name="arg0">Oggetto da scrivere nella stringa formattata.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.String,System.Object,System.Object)">
      <summary>Inserisce una stringa formattata utilizzando la semantica specificata.</summary>
      <param name="format">Stringa di formattazione da utilizzare.</param>
      <param name="arg0">Primo oggetto da inserire nella stringa formattata.</param>
      <param name="arg1">Secondo oggetto da inserire nella stringa formattata.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.String,System.Object[])">
      <summary>Inserisce una stringa formattata utilizzando la semantica specificata.</summary>
      <param name="format">Stringa di formattazione da utilizzare.</param>
      <param name="arg">Matrice di argomenti che deve essere restituita.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine">
      <summary>Inserisce un terminatore di riga.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Boolean)">
      <summary>Inserisce nel flusso di testo la rappresentazione testuale di un valore booleano, seguita da un terminatore di riga.</summary>
      <param name="value">Valore booleano da inserire.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Char)">
      <summary>Inserisce nel flusso di testo un carattere, seguito da un terminatore di riga.</summary>
      <param name="value">Carattere da scrivere.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Char[])">
      <summary>Inserisce nel flusso di testo una matrice di caratteri, seguita da un terminatore di riga.</summary>
      <param name="buffer">Matrice di caratteri da scrivere.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
      <summary>Inserisce nel flusso di testo una sottomatrice di caratteri, seguita da un terminatore di riga.</summary>
      <param name="buffer">Matrice di caratteri da cui scrivere i dati.</param>
      <param name="index">Indice iniziale nel buffer.</param>
      <param name="count">Numero di caratteri da scrivere.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Double)">
      <summary>Inserisce nel flusso di testo la rappresentazione testuale di un valore Double, seguita da un terminatore di riga.</summary>
      <param name="value">Valore <see langword="double" /> da scrivere.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Int32)">
      <summary>Inserisce nel flusso di testo la rappresentazione testuale di un intero, seguita da un terminatore di riga.</summary>
      <param name="value">Intero da inserire.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Int64)">
      <summary>Inserisce nel flusso di testo la rappresentazione testuale di un intero a 8 byte, seguita da un terminatore di riga.</summary>
      <param name="value">Intero a 8 byte da inserire.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Object)">
      <summary>Inserisce nel flusso di testo la rappresentazione testuale di un oggetto, seguita da un terminatore di riga.</summary>
      <param name="value">Oggetto da scrivere.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Single)">
      <summary>Inserisce nel flusso di testo la rappresentazione testuale di un valore Single, seguita da un terminatore di riga.</summary>
      <param name="value">Valore <see langword="single" /> da scrivere.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.String)">
      <summary>Inserisce nel flusso di testo la stringa specificata, seguita da un terminatore di riga.</summary>
      <param name="s">Stringa da scrivere.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.String,System.Object)">
      <summary>Inserisce una stringa formattata seguita da un terminatore di riga, utilizzando la semantica specificata.</summary>
      <param name="format">Stringa di formattazione.</param>
      <param name="arg0">Oggetto da scrivere nella stringa formattata.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.String,System.Object,System.Object)">
      <summary>Inserisce una stringa formattata seguita da un terminatore di riga, utilizzando la semantica specificata.</summary>
      <param name="format">Stringa di formattazione da utilizzare.</param>
      <param name="arg0">Primo oggetto da inserire nella stringa formattata.</param>
      <param name="arg1">Secondo oggetto da inserire nella stringa formattata.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.String,System.Object[])">
      <summary>Inserisce una stringa formattata seguita da un terminatore di riga, utilizzando la semantica specificata.</summary>
      <param name="format">Stringa di formattazione da utilizzare.</param>
      <param name="arg">Matrice di argomenti che deve essere restituita.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.UInt32)">
      <summary>Inserisce nel flusso di testo la rappresentazione testuale di un valore UInt32, seguita da un terminatore di riga.</summary>
      <param name="value">Valore UInt32 che deve essere restituito.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLineNoTabs(System.String)">
      <summary>Inserisce la stringa specificata in una riga priva di tabulazioni.</summary>
      <param name="s">Stringa da scrivere.</param>
    </member>
    <member name="T:System.Collections.ArrayList">
      <summary>Implementa l'interfaccia <see cref="T:System.Collections.IList" /> usando una matrice la cui dimensione viene incrementata in modo dinamico in base alle esigenze.</summary>
    </member>
    <member name="M:System.Collections.ArrayList.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.ArrayList" /> vuota e con capacità iniziale predefinita.</summary>
    </member>
    <member name="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.ArrayList" /> che contiene gli elementi copiati dalla raccolta specificata e ha la stessa capacità iniziale definita dal numero degli elementi copiati.</summary>
      <param name="c">Oggetto <see cref="T:System.Collections.ICollection" /> i cui elementi vengono copiati nel nuovo elenco.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="c" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.#ctor(System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.ArrayList" /> vuota e con capacità iniziale specificata.</summary>
      <param name="capacity">Numero di elementi che possono essere archiviati inizialmente nel nuovo elenco.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> è minore di zero.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.Adapter(System.Collections.IList)">
      <summary>Crea un wrapper <see cref="T:System.Collections.ArrayList" /> per un oggetto <see cref="T:System.Collections.IList" /> specifico.</summary>
      <param name="list">
        <see cref="T:System.Collections.IList" /> di cui eseguire il wrapping.</param>
      <returns>Wrapper <see cref="T:System.Collections.ArrayList" /> per <see cref="T:System.Collections.IList" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="list" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.Add(System.Object)">
      <summary>Aggiunge un oggetto alla fine di <see cref="T:System.Collections.ArrayList" />.</summary>
      <param name="value">
        <see cref="T:System.Object" /> da aggiungere alla fine della classe <see cref="T:System.Collections.ArrayList" />. Il valore può essere <see langword="null" />.</param>
      <returns>Indice <see cref="T:System.Collections.ArrayList" /> in corrispondenza del quale è stato aggiunto <paramref name="value" />.</returns>
      <exception cref="T:System.NotSupportedException">La classe <see cref="T:System.Collections.ArrayList" /> è di sola lettura.  
-oppure- 
Le dimensioni dell'oggetto <see cref="T:System.Collections.ArrayList" /> sono fisse.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)">
      <summary>Aggiunge gli elementi di un oggetto <see cref="T:System.Collections.ICollection" /> alla fine di <see cref="T:System.Collections.ArrayList" />.</summary>
      <param name="c">Oggetto <see cref="T:System.Collections.ICollection" /> i cui elementi devono essere aggiunti alla fine di <see cref="T:System.Collections.ArrayList" />. La raccolta non può essere <see langword="null" />, ma può contenere elementi <see langword="null" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="c" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">La classe <see cref="T:System.Collections.ArrayList" /> è di sola lettura.  
In alternativa 
Le dimensioni dell'oggetto <see cref="T:System.Collections.ArrayList" /> sono fisse.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)">
      <summary>Cerca un elemento in un intervallo di elementi nell'oggetto <see cref="T:System.Collections.ArrayList" /> ordinato usando l'operatore di confronto specificato e restituisce l'indice in base zero dell'elemento.</summary>
      <param name="index">Indice iniziale in base zero dell'intervallo in cui eseguire la ricerca.</param>
      <param name="count">Lunghezza dell'intervallo in cui eseguire la ricerca.</param>
      <param name="value">La classe <see cref="T:System.Object" /> da individuare. Il valore può essere <see langword="null" />.</param>
      <param name="comparer">Implementazione <see cref="T:System.Collections.IComparer" /> da usare quando si confrontano gli elementi.  
-oppure- 
 <see langword="null" /> per usare l'operatore di confronto predefinito che è l'implementazione di <see cref="T:System.IComparable" /> di ogni elemento.</param>
      <returns>Indice in base zero di <paramref name="value" /> nell'oggetto <see cref="T:System.Collections.ArrayList" /> ordinato, se viene trovato <paramref name="value" />; in caso contrario, un numero negativo che rappresenta il complemento bit per bit dell'indice dell'elemento successivo maggiore di <paramref name="value" /> oppure, se non c'è un elemento maggiore, il complemento bit per bit di <see cref="P:System.Collections.ArrayList.Count" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> e <paramref name="count" /> non indicano un intervallo valido nell'oggetto <see cref="T:System.Collections.ArrayList" />.  
In alternativa 
 <paramref name="comparer" /> è <see langword="null" /> e né <paramref name="value" /> né gli elementi di <see cref="T:System.Collections.ArrayList" /> implementano l'interfaccia <see cref="T:System.IComparable" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" /> è <see langword="null" /> e <paramref name="value" /> non è dello stesso tipo degli elementi di <see cref="T:System.Collections.ArrayList" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero.  
-oppure- 
 <paramref name="count" /> è minore di zero.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.BinarySearch(System.Object)">
      <summary>Cerca un elemento nell'intero <see cref="T:System.Collections.ArrayList" /> ordinato usando l'operatore di confronto predefinito e restituisce l'indice in base zero dell'elemento.</summary>
      <param name="value">La classe <see cref="T:System.Object" /> da individuare. Il valore può essere <see langword="null" />.</param>
      <returns>Indice in base zero di <paramref name="value" /> nell'oggetto <see cref="T:System.Collections.ArrayList" /> ordinato, se viene trovato <paramref name="value" />; in caso contrario, un numero negativo che rappresenta il complemento bit per bit dell'indice dell'elemento successivo maggiore di <paramref name="value" /> oppure, se non c'è un elemento maggiore, il complemento bit per bit di <see cref="P:System.Collections.ArrayList.Count" />.</returns>
      <exception cref="T:System.ArgumentException">Né <paramref name="value" /> né gli elementi di <see cref="T:System.Collections.ArrayList" /> implementano l'interfaccia <see cref="T:System.IComparable" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="value" /> non è dello stesso tipo degli elementi di <see cref="T:System.Collections.ArrayList" />.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.BinarySearch(System.Object,System.Collections.IComparer)">
      <summary>Cerca un elemento nell'intero <see cref="T:System.Collections.ArrayList" /> ordinato usando l'operatore di confronto specificato e restituisce l'indice in base zero dell'elemento.</summary>
      <param name="value">La classe <see cref="T:System.Object" /> da individuare. Il valore può essere <see langword="null" />.</param>
      <param name="comparer">Implementazione <see cref="T:System.Collections.IComparer" /> da usare quando si confrontano gli elementi.  
In alternativa 
 <see langword="null" /> per usare l'operatore di confronto predefinito che è l'implementazione di <see cref="T:System.IComparable" /> di ogni elemento.</param>
      <returns>Indice in base zero di <paramref name="value" /> nell'oggetto <see cref="T:System.Collections.ArrayList" /> ordinato, se viene trovato <paramref name="value" />; in caso contrario, un numero negativo che rappresenta il complemento bit per bit dell'indice dell'elemento successivo maggiore di <paramref name="value" /> oppure, se non c'è un elemento maggiore, il complemento bit per bit di <see cref="P:System.Collections.ArrayList.Count" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparer" /> è <see langword="null" /> e né <paramref name="value" /> né gli elementi di <see cref="T:System.Collections.ArrayList" /> implementano l'interfaccia <see cref="T:System.IComparable" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" /> è <see langword="null" /> e <paramref name="value" /> non è dello stesso tipo degli elementi di <see cref="T:System.Collections.ArrayList" />.</exception>
    </member>
    <member name="P:System.Collections.ArrayList.Capacity">
      <summary>Ottiene o imposta il numero di elementi che <see cref="T:System.Collections.ArrayList" /> può contenere.</summary>
      <returns>Numero degli elementi che <see cref="T:System.Collections.ArrayList" /> può contenere.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">L'oggetto <see cref="P:System.Collections.ArrayList.Capacity" /> è impostato su un valore minore di <see cref="P:System.Collections.ArrayList.Count" />.</exception>
      <exception cref="T:System.OutOfMemoryException">La memoria disponibile nel sistema non è sufficiente.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.Clear">
      <summary>Rimuove tutti gli elementi da <see cref="T:System.Collections.ArrayList" />.</summary>
      <exception cref="T:System.NotSupportedException">La classe <see cref="T:System.Collections.ArrayList" /> è di sola lettura.  
-oppure- 
Le dimensioni dell'oggetto <see cref="T:System.Collections.ArrayList" /> sono fisse.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.Clone">
      <summary>Crea una copia superficiale di <see cref="T:System.Collections.ArrayList" />.</summary>
      <returns>Copia superficiale di <see cref="T:System.Collections.ArrayList" />.</returns>
    </member>
    <member name="M:System.Collections.ArrayList.Contains(System.Object)">
      <summary>Determina se un elemento è incluso in <see cref="T:System.Collections.ArrayList" />.</summary>
      <param name="item">Oggetto <see cref="T:System.Object" /> da individuare in <see cref="T:System.Collections.ArrayList" />. Il valore può essere <see langword="null" />.</param>
      <returns>
        <see langword="true" /> se <paramref name="item" /> è presente in <see cref="T:System.Collections.ArrayList" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.ArrayList.CopyTo(System.Array)">
      <summary>Copia l'intero oggetto <see cref="T:System.Collections.ArrayList" /> in un oggetto <see cref="T:System.Array" /> unidimensionale compatibile, a partire dall'inizio della matrice di destinazione.</summary>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.ArrayList" />. L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> è multidimensionale.  
-oppure- 
Il numero di elementi nell'oggetto <see cref="T:System.Collections.ArrayList" /> di origine è maggiore del numero di elementi che l'oggetto <paramref name="array" /> di destinazione può contenere.</exception>
      <exception cref="T:System.InvalidCastException">Non è possibile eseguire il cast automatico del tipo dell'oggetto <see cref="T:System.Collections.ArrayList" /> di origine al tipo dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.CopyTo(System.Array,System.Int32)">
      <summary>Copia l'intero oggetto <see cref="T:System.Collections.ArrayList" /> in un oggetto <see cref="T:System.Array" /> compatibile unidimensionale, a partire dall'indice specificato della matrice di destinazione.</summary>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.ArrayList" />. L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</param>
      <param name="arrayIndex">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> è multidimensionale.  
-oppure- 
Il numero di elementi nell'oggetto <see cref="T:System.Collections.ArrayList" /> di origine è maggiore dello spazio disponibile tra <paramref name="arrayIndex" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.</exception>
      <exception cref="T:System.InvalidCastException">Non è possibile eseguire il cast automatico del tipo dell'oggetto <see cref="T:System.Collections.ArrayList" /> di origine al tipo dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.CopyTo(System.Int32,System.Array,System.Int32,System.Int32)">
      <summary>Copia una serie di elementi da <see cref="T:System.Collections.ArrayList" /> in un oggetto <see cref="T:System.Array" /> compatibile unidimensionale, a partire dall'indice specificato della matrice di destinazione.</summary>
      <param name="index">Indice in base zero dell'oggetto <see cref="T:System.Collections.ArrayList" /> di origine a partire dal quale viene effettuata la copia.</param>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.ArrayList" />. L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</param>
      <param name="arrayIndex">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <param name="count">Numero degli elementi da copiare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero.  
In alternativa 
 <paramref name="arrayIndex" /> è minore di zero.  
-oppure- 
 <paramref name="count" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> è multidimensionale.  
-oppure- 
 <paramref name="index" /> è maggiore o uguale al valore di <see cref="P:System.Collections.ArrayList.Count" /> dell'oggetto <see cref="T:System.Collections.ArrayList" />di origine.  
-oppure- 
Il numero di elementi da <paramref name="index" /> alla fine dell'oggetto <see cref="T:System.Collections.ArrayList" /> di origine è maggiore dello spazio disponibile da <paramref name="arrayIndex" /> alla fine dell'oggetto <paramref name="array" /> di destinazione.</exception>
      <exception cref="T:System.InvalidCastException">Non è possibile eseguire il cast automatico del tipo dell'oggetto <see cref="T:System.Collections.ArrayList" /> di origine al tipo dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="P:System.Collections.ArrayList.Count">
      <summary>Ottiene il numero di elementi effettivamente contenuti nell'oggetto <see cref="T:System.Collections.ArrayList" />.</summary>
      <returns>Numero di elementi effettivamente contenuti nell'oggetto <see cref="T:System.Collections.ArrayList" />.</returns>
    </member>
    <member name="M:System.Collections.ArrayList.FixedSize(System.Collections.ArrayList)">
      <summary>Restituisce un wrapper <see cref="T:System.Collections.ArrayList" /> di dimensioni fisse.</summary>
      <param name="list">
        <see cref="T:System.Collections.ArrayList" /> di cui eseguire il wrapping.</param>
      <returns>Wrapper <see cref="T:System.Collections.ArrayList" /> di dimensioni fisse.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="list" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.FixedSize(System.Collections.IList)">
      <summary>Restituisce un wrapper <see cref="T:System.Collections.IList" /> di dimensioni fisse.</summary>
      <param name="list">
        <see cref="T:System.Collections.IList" /> di cui eseguire il wrapping.</param>
      <returns>Wrapper <see cref="T:System.Collections.IList" /> di dimensioni fisse.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="list" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.GetEnumerator">
      <summary>Restituisce un enumeratore per l'intero <see cref="T:System.Collections.ArrayList" />.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> per l'intero oggetto <see cref="T:System.Collections.ArrayList" />.</returns>
    </member>
    <member name="M:System.Collections.ArrayList.GetEnumerator(System.Int32,System.Int32)">
      <summary>Restituisce un enumeratore per un intervallo di elementi nell'oggetto <see cref="T:System.Collections.ArrayList" />.</summary>
      <param name="index">Indice iniziale in base zero della sezione di <see cref="T:System.Collections.ArrayList" /> a cui l'enumeratore deve fare riferimento.</param>
      <param name="count">Numero di elementi nella sezione di <see cref="T:System.Collections.ArrayList" /> a cui l'enumeratore deve fare riferimento.</param>
      <returns>Oggetto <see cref="T:System.Collections.IEnumerator" /> per l'intervallo di elementi specificato nell'oggetto <see cref="T:System.Collections.ArrayList" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero.  
In alternativa 
 <paramref name="count" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> e <paramref name="count" /> non specificano un intervallo valido in <see cref="T:System.Collections.ArrayList" />.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)">
      <summary>Restituisce <see cref="T:System.Collections.ArrayList" /> che rappresenta un subset di elementi nell'oggetto <see cref="T:System.Collections.ArrayList" /> di origine.</summary>
      <param name="index">Indice in base zero di <see cref="T:System.Collections.ArrayList" /> in corrispondenza del quale inizia la serie.</param>
      <param name="count">Numero di elementi nell'intervallo.</param>
      <returns>Oggetto <see cref="T:System.Collections.ArrayList" /> che rappresenta un subset di elementi nell'oggetto <see cref="T:System.Collections.ArrayList" /> di origine.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero.  
In alternativa 
 <paramref name="count" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> e <paramref name="count" /> non indicano un intervallo valido di elementi nell'oggetto <see cref="T:System.Collections.ArrayList" />.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.IndexOf(System.Object)">
      <summary>Cerca l'oggetto <see cref="T:System.Object" /> specificato e restituisce l'indice in base zero della prima occorrenza all'interno dell'intero <see cref="T:System.Collections.ArrayList" />.</summary>
      <param name="value">Oggetto <see cref="T:System.Object" /> da individuare in <see cref="T:System.Collections.ArrayList" />. Il valore può essere <see langword="null" />.</param>
      <returns>Indice in base zero della prima occorrenza di <paramref name="value" /> all'interno dell'intero oggetto <see cref="T:System.Collections.ArrayList" />, se presente; in caso contrario, -1.</returns>
    </member>
    <member name="M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32)">
      <summary>Cerca l'oggetto <see cref="T:System.Object" /> specificato e restituisce l'indice in base zero della prima occorrenza all'interno dell'intervallo di elementi dell'oggetto <see cref="T:System.Collections.ArrayList" /> compreso tra l'indice specificato e l'ultimo elemento.</summary>
      <param name="value">Oggetto <see cref="T:System.Object" /> da individuare in <see cref="T:System.Collections.ArrayList" />. Il valore può essere <see langword="null" />.</param>
      <param name="startIndex">Indice iniziale in base zero della ricerca. 0 (zero) è valido in un elenco vuoto.</param>
      <returns>Indice in base zero della prima occorrenza di <paramref name="value" /> all'interno dell'intervallo di elementi dell'oggetto <see cref="T:System.Collections.ArrayList" /> compreso tra <paramref name="startIndex" /> e l'ultimo elemento, se presente; in caso contrario, -1.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> non è compreso nell'intervallo di indici validi per <see cref="T:System.Collections.ArrayList" />.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32,System.Int32)">
      <summary>Cerca l'oggetto <see cref="T:System.Object" /> specificato e restituisce l'indice in base zero della prima occorrenza all'interno dell'intervallo di elementi nell'oggetto <see cref="T:System.Collections.ArrayList" /> che inizia in corrispondenza dell'indice specificato e contiene il numero specificato di elementi.</summary>
      <param name="value">Oggetto <see cref="T:System.Object" /> da individuare in <see cref="T:System.Collections.ArrayList" />. Il valore può essere <see langword="null" />.</param>
      <param name="startIndex">Indice iniziale in base zero della ricerca. 0 (zero) è valido in un elenco vuoto.</param>
      <param name="count">Numero di elementi nella sezione in cui eseguire la ricerca.</param>
      <returns>Indice in base zero della prima occorrenza di <paramref name="value" /> all'interno dell'intervallo di elementi dell'oggetto <see cref="T:System.Collections.ArrayList" /> che inizia da <paramref name="startIndex" /> e contiene il numero di elementi corrispondente a <paramref name="count" />, se presente; in caso contrario, -1.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> non è compreso nell'intervallo di indici validi per <see cref="T:System.Collections.ArrayList" />.  
-oppure- 
 <paramref name="count" /> è minore di zero.  
-oppure- 
 <paramref name="startIndex" /> e <paramref name="count" /> non specificano una sezione valida in <see cref="T:System.Collections.ArrayList" />.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)">
      <summary>Inserisce un elemento in <see cref="T:System.Collections.ArrayList" /> in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice in base zero nel quale <paramref name="value" /> deve essere inserito.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da inserire. Il valore può essere <see langword="null" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero.  
-oppure- 
 <paramref name="index" /> è maggiore di <see cref="P:System.Collections.ArrayList.Count" />.</exception>
      <exception cref="T:System.NotSupportedException">La classe <see cref="T:System.Collections.ArrayList" /> è di sola lettura.  
-oppure- 
Le dimensioni dell'oggetto <see cref="T:System.Collections.ArrayList" /> sono fisse.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)">
      <summary>Inserisce gli elementi di una raccolta in <see cref="T:System.Collections.ArrayList" /> in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice in base zero in corrispondenza del quale devono essere inseriti i nuovi elementi.</param>
      <param name="c">Oggetto <see cref="T:System.Collections.ICollection" /> i cui elementi devono essere inseriti in <see cref="T:System.Collections.ArrayList" />. La raccolta non può essere <see langword="null" />, ma può contenere elementi <see langword="null" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="c" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero.  
-oppure- 
 <paramref name="index" /> è maggiore di <see cref="P:System.Collections.ArrayList.Count" />.</exception>
      <exception cref="T:System.NotSupportedException">La classe <see cref="T:System.Collections.ArrayList" /> è di sola lettura.  
-oppure- 
Le dimensioni dell'oggetto <see cref="T:System.Collections.ArrayList" /> sono fisse.</exception>
    </member>
    <member name="P:System.Collections.ArrayList.IsFixedSize">
      <summary>Ottiene un valore che indica se <see cref="T:System.Collections.ArrayList" /> ha dimensioni fisse.</summary>
      <returns>
        <see langword="true" /> se <see cref="T:System.Collections.ArrayList" /> ha dimensioni fisse; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.ArrayList.IsReadOnly">
      <summary>Ottiene un valore che indica se <see cref="T:System.Collections.ArrayList" /> è di sola lettura.</summary>
      <returns>
        <see langword="true" /> se <see cref="T:System.Collections.ArrayList" /> è di sola lettura; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.ArrayList.IsSynchronized">
      <summary>Ottiene un valore che indica se l'accesso a <see cref="T:System.Collections.ArrayList" /> è sincronizzato (thread-safe).</summary>
      <returns>
        <see langword="true" /> se l'accesso a <see cref="T:System.Collections.ArrayList" /> è sincronizzato (thread-safe); in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.ArrayList.Item(System.Int32)">
      <summary>Ottiene o imposta l'elemento in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice in base zero dell'elemento da ottenere o impostare.</param>
      <returns>Elemento in corrispondenza dell'indice specificato.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero.  
In alternativa 
 <paramref name="index" /> è uguale a o maggiore di <see cref="P:System.Collections.ArrayList.Count" />.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.LastIndexOf(System.Object)">
      <summary>Cerca l'oggetto <see cref="T:System.Object" /> specificato e restituisce l'indice in base zero dell'ultima occorrenza all'interno dell'insieme <see cref="T:System.Collections.ArrayList" />.</summary>
      <param name="value">Oggetto <see cref="T:System.Object" /> da individuare in <see cref="T:System.Collections.ArrayList" />. Il valore può essere <see langword="null" />.</param>
      <returns>Indice in base zero dell'ultima occorrenza di <paramref name="value" /> all'interno dell'intero oggetto <see cref="T:System.Collections.ArrayList" />, se presente; in caso contrario, –1.</returns>
    </member>
    <member name="M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32)">
      <summary>Cerca l'oggetto specificato <see cref="T:System.Object" /> e restituisce l'indice in base zero dell'ultima occorrenza all'interno dell'intervallo di elementi nella classe <see cref="T:System.Collections.ArrayList" /> che è compresa tra il primo elemento e l'indice specificato.</summary>
      <param name="value">Oggetto <see cref="T:System.Object" /> da individuare in <see cref="T:System.Collections.ArrayList" />. Il valore può essere <see langword="null" />.</param>
      <param name="startIndex">Indice iniziale in base zero della ricerca all'indietro.</param>
      <returns>Indice in base zero dell'ultima occorrenza di <paramref name="value" /> all'interno dell'intervallo di elementi dell'oggetto <see cref="T:System.Collections.ArrayList" /> compreso tra il primo elemento e <paramref name="startIndex" />, se presente; in caso contrario, –1.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> non è compreso nell'intervallo di indici validi per <see cref="T:System.Collections.ArrayList" />.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32,System.Int32)">
      <summary>Cerca l'oggetto <see cref="T:System.Object" /> specificato e restituisce l'indice in base zero dell'ultima occorrenza all'interno dell'intervallo di elementi della classe <see cref="T:System.Collections.ArrayList" /> che contiene il numero specificato di elementi e termina in corrispondenza dell'indice specificato.</summary>
      <param name="value">Oggetto <see cref="T:System.Object" /> da individuare in <see cref="T:System.Collections.ArrayList" />. Il valore può essere <see langword="null" />.</param>
      <param name="startIndex">Indice iniziale in base zero della ricerca all'indietro.</param>
      <param name="count">Numero di elementi nella sezione in cui eseguire la ricerca.</param>
      <returns>Indice in base zero dell'ultima occorrenza di <paramref name="value" /> all'interno dell'intervallo di elementi in <see cref="T:System.Collections.ArrayList" /> che contiene un numero di elementi corrispondente a <paramref name="count" /> e termina in corrispondenza di <paramref name="startIndex" />, se presente; in caso contrario, -1.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> non è compreso nell'intervallo di indici validi per <see cref="T:System.Collections.ArrayList" />.  
-oppure- 
 <paramref name="count" /> è minore di zero.  
-oppure- 
 <paramref name="startIndex" /> e <paramref name="count" /> non specificano una sezione valida in <see cref="T:System.Collections.ArrayList" />.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.ReadOnly(System.Collections.ArrayList)">
      <summary>Restituisce un wrapper <see cref="T:System.Collections.ArrayList" /> di sola lettura.</summary>
      <param name="list">
        <see cref="T:System.Collections.ArrayList" /> di cui eseguire il wrapping.</param>
      <returns>Wrapper <see cref="T:System.Collections.ArrayList" /> di sola lettura di <paramref name="list" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="list" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.ReadOnly(System.Collections.IList)">
      <summary>Restituisce un wrapper <see cref="T:System.Collections.IList" /> di sola lettura.</summary>
      <param name="list">
        <see cref="T:System.Collections.IList" /> di cui eseguire il wrapping.</param>
      <returns>Wrapper <see cref="T:System.Collections.IList" /> di sola lettura di <paramref name="list" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="list" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.Remove(System.Object)">
      <summary>Rimuove la prima occorrenza di un oggetto specifico da <see cref="T:System.Collections.ArrayList" />.</summary>
      <param name="obj">Oggetto <see cref="T:System.Object" /> da rimuovere da <see cref="T:System.Collections.ArrayList" />. Il valore può essere <see langword="null" />.</param>
      <exception cref="T:System.NotSupportedException">La classe <see cref="T:System.Collections.ArrayList" /> è di sola lettura.  
-oppure- 
Le dimensioni dell'oggetto <see cref="T:System.Collections.ArrayList" /> sono fisse.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.RemoveAt(System.Int32)">
      <summary>Rimuove l'elemento in corrispondenza dell'indice specificato di <see cref="T:System.Collections.ArrayList" />.</summary>
      <param name="index">Indice in base zero dell'elemento da rimuovere.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero.  
-oppure- 
 <paramref name="index" /> è uguale a o maggiore di <see cref="P:System.Collections.ArrayList.Count" />.</exception>
      <exception cref="T:System.NotSupportedException">La classe <see cref="T:System.Collections.ArrayList" /> è di sola lettura.  
-oppure- 
Le dimensioni dell'oggetto <see cref="T:System.Collections.ArrayList" /> sono fisse.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)">
      <summary>Rimuove un intervallo di elementi da <see cref="T:System.Collections.ArrayList" />.</summary>
      <param name="index">Indice iniziale in base zero dell'intervallo di elementi da rimuovere.</param>
      <param name="count">Numero di elementi da rimuovere.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero.  
In alternativa 
 <paramref name="count" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> e <paramref name="count" /> non indicano un intervallo valido di elementi nell'oggetto <see cref="T:System.Collections.ArrayList" />.</exception>
      <exception cref="T:System.NotSupportedException">La classe <see cref="T:System.Collections.ArrayList" /> è di sola lettura.  
-oppure- 
Le dimensioni dell'oggetto <see cref="T:System.Collections.ArrayList" /> sono fisse.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.Repeat(System.Object,System.Int32)">
      <summary>Restituisce un <see cref="T:System.Collections.ArrayList" /> i cui elementi sono copie del valore specificato.</summary>
      <param name="value">Oggetto <see cref="T:System.Object" /> da copiare più volte nel nuovo <see cref="T:System.Collections.ArrayList" />. Il valore può essere <see langword="null" />.</param>
      <param name="count">Numero di volte che <paramref name="value" /> deve essere copiato.</param>
      <returns>
        <see cref="T:System.Collections.ArrayList" /> con un numero di elementi pari a <paramref name="count" />, dei quali tutti sono copie di <paramref name="value" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> è minore di zero.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.Reverse">
      <summary>Inverte l'ordine degli elementi nell'intero <see cref="T:System.Collections.ArrayList" />.</summary>
      <exception cref="T:System.NotSupportedException">La classe <see cref="T:System.Collections.ArrayList" /> è di sola lettura.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.Reverse(System.Int32,System.Int32)">
      <summary>Inverte l'ordine degli elementi nell'intervallo specificato.</summary>
      <param name="index">Indice iniziale in base zero dell'intervallo da invertire.</param>
      <param name="count">Numero di elementi nell'intervallo da invertire.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero.  
In alternativa 
 <paramref name="count" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> e <paramref name="count" /> non indicano un intervallo valido di elementi nell'oggetto <see cref="T:System.Collections.ArrayList" />.</exception>
      <exception cref="T:System.NotSupportedException">La classe <see cref="T:System.Collections.ArrayList" /> è di sola lettura.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)">
      <summary>Copia gli elementi di una raccolta in un intervallo di elementi nell'oggetto <see cref="T:System.Collections.ArrayList" />.</summary>
      <param name="index">Indice in base zero di <see cref="T:System.Collections.ArrayList" /> in corrispondenza del quale iniziare a copiare gli elementi di <paramref name="c" />.</param>
      <param name="c">Oggetto <see cref="T:System.Collections.ICollection" /> di cui copiare gli elementi in <see cref="T:System.Collections.ArrayList" />. La raccolta non può essere <see langword="null" />, ma può contenere elementi <see langword="null" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero.  
-oppure- 
 La somma di <paramref name="index" /> e del numero di elementi in <paramref name="c" /> è maggiore di <see cref="P:System.Collections.ArrayList.Count" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="c" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">La classe <see cref="T:System.Collections.ArrayList" /> è di sola lettura.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.Sort">
      <summary>Ordina gli elementi dell'intero oggetto <see cref="T:System.Collections.ArrayList" />.</summary>
      <exception cref="T:System.NotSupportedException">La classe <see cref="T:System.Collections.ArrayList" /> è di sola lettura.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.Sort(System.Collections.IComparer)">
      <summary>Ordina gli elementi dell'intero <see cref="T:System.Collections.ArrayList" /> usando l'operatore di confronto specificato.</summary>
      <param name="comparer">Implementazione <see cref="T:System.Collections.IComparer" /> da usare quando si confrontano gli elementi.  
In alternativa 
Riferimento Null (<see langword="Nothing" /> in Visual Basic) per usare l'implementazione <see cref="T:System.IComparable" /> di ciascun elemento.</param>
      <exception cref="T:System.NotSupportedException">La classe <see cref="T:System.Collections.ArrayList" /> è di sola lettura.</exception>
      <exception cref="T:System.InvalidOperationException">Si è verificato un errore durante il confronto tra due elementi.</exception>
      <exception cref="T:System.ArgumentException">
        <see langword="null" /> viene passato per <paramref name="comparer" /> e gli elementi nell'elenco non implementano <see cref="T:System.IComparable" />.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
      <summary>Ordina gli elementi di un intervallo di elementi di <see cref="T:System.Collections.ArrayList" /> usando l'operatore di confronto specificato.</summary>
      <param name="index">Indice iniziale in base zero dell'intervallo da ordinare.</param>
      <param name="count">Lunghezza dell'intervallo da ordinare.</param>
      <param name="comparer">Implementazione <see cref="T:System.Collections.IComparer" /> da usare quando si confrontano gli elementi.  
In alternativa 
Riferimento Null (<see langword="Nothing" /> in Visual Basic) per usare l'implementazione <see cref="T:System.IComparable" /> di ciascun elemento.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero.  
-oppure- 
 <paramref name="count" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> e <paramref name="count" /> non specificano un intervallo valido in <see cref="T:System.Collections.ArrayList" />.</exception>
      <exception cref="T:System.NotSupportedException">La classe <see cref="T:System.Collections.ArrayList" /> è di sola lettura.</exception>
      <exception cref="T:System.InvalidOperationException">Si è verificato un errore durante il confronto tra due elementi.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.Synchronized(System.Collections.ArrayList)">
      <summary>Restituisce un wrapper <see cref="T:System.Collections.ArrayList" /> sincronizzato (thread-safe).</summary>
      <param name="list">Oggetto <see cref="T:System.Collections.ArrayList" /> da sincronizzare.</param>
      <returns>Wrapper <see cref="T:System.Collections.ArrayList" /> sincronizzato (thread-safe).</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="list" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)">
      <summary>Restituisce un wrapper <see cref="T:System.Collections.IList" /> sincronizzato (thread-safe).</summary>
      <param name="list">Oggetto <see cref="T:System.Collections.IList" /> da sincronizzare.</param>
      <returns>Wrapper <see cref="T:System.Collections.IList" /> sincronizzato (thread-safe).</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="list" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Collections.ArrayList.SyncRoot">
      <summary>Ottiene un oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.ArrayList" />.</summary>
      <returns>Oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.ArrayList" />.</returns>
    </member>
    <member name="M:System.Collections.ArrayList.ToArray">
      <summary>Copia gli elementi di <see cref="T:System.Collections.ArrayList" /> in una nuova matrice <see cref="T:System.Object" />.</summary>
      <returns>Matrice <see cref="T:System.Object" /> contenente le copie degli elementi di <see cref="T:System.Collections.ArrayList" />.</returns>
    </member>
    <member name="M:System.Collections.ArrayList.ToArray(System.Type)">
      <summary>Copia gli elementi di <see cref="T:System.Collections.ArrayList" /> in una nuova matrice del tipo di elemento specificato.</summary>
      <param name="type">Elemento <see cref="T:System.Type" /> della matrice di destinazione da creare e in cui copiare gli elementi.</param>
      <returns>Matrice del tipo di elemento specificato, contenente copie degli elementi di <see cref="T:System.Collections.ArrayList" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidCastException">Non è possibile eseguire automaticamente il cast del tipo dell'oggetto <see cref="T:System.Collections.ArrayList" /> di origine al tipo specificato.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.TrimToSize">
      <summary>Imposta la capacità sul numero effettivo di elementi contenuti in <see cref="T:System.Collections.ArrayList" />.</summary>
      <exception cref="T:System.NotSupportedException">La classe <see cref="T:System.Collections.ArrayList" /> è di sola lettura.  
-oppure- 
Le dimensioni dell'oggetto <see cref="T:System.Collections.ArrayList" /> sono fisse.</exception>
    </member>
    <member name="T:System.Collections.Comparer">
      <summary>Confronta due oggetti in termini di uguaglianza, dove i confronti tra stringhe prevedono la distinzione tra maiuscole e minuscole.</summary>
    </member>
    <member name="M:System.Collections.Comparer.#ctor(System.Globalization.CultureInfo)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Comparer" /> usando il <see cref="T:System.Globalization.CultureInfo" /> specificato.</summary>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo" /> da utilizzare per la nuova <see cref="T:System.Collections.Comparer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="culture" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Comparer.Compare(System.Object,System.Object)">
      <summary>Esegue un confronto con distinzione tra maiuscole e minuscole tra due oggetti dello stesso tipo e restituisce un valore che indica se un oggetto è minore, uguale o maggiore dell'altro.</summary>
      <param name="a">Primo oggetto da confrontare.</param>
      <param name="b">Secondo oggetto da confrontare.</param>
      <returns>Intero con segno che indica i valori relativi di <paramref name="a" /> e <paramref name="b" />, come illustrato nella tabella seguente.  
  Value 
  Significato 
  Minore di zero 
 <paramref name="a" /> è minore di <paramref name="b" />.  

  Zero 
 <paramref name="a" /> è uguale a <paramref name="b" />.  

  Maggiore di zero 
 <paramref name="a" /> è maggiore di <paramref name="b" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="a" /> e <paramref name="b" /> non implementano l'interfaccia <see cref="T:System.IComparable" />.  
In alternativa 
 <paramref name="a" /> e <paramref name="b" /> sono di tipi diversi e nessuno dei due può gestire confronti con l'altro.</exception>
    </member>
    <member name="F:System.Collections.Comparer.Default">
      <summary>Rappresenta un'istanza di <see cref="T:System.Collections.Comparer" /> associata alla proprietà <see cref="P:System.Threading.Thread.CurrentCulture" /> del thread corrente. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.Collections.Comparer.DefaultInvariant">
      <summary>Rappresenta un'istanza di <see cref="T:System.Collections.Comparer" /> associata a <see cref="P:System.Globalization.CultureInfo.InvariantCulture" />. Questo campo è di sola lettura.</summary>
    </member>
    <member name="M:System.Collections.Comparer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Compila un oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con i dati richiesti per la serializzazione.</summary>
      <param name="info">Oggetto da popolare con i dati.</param>
      <param name="context">Informazioni contestuali sull'origine o sulla destinazione della serializzazione.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> è <see langword="null" />.</exception>
    </member>
    <member name="T:System.Collections.Hashtable">
      <summary>Rappresenta una raccolta di coppie chiave/valore organizzate in base al codice hash della chiave.</summary>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor">
      <summary>Inizializza una nuova istanza vuota della classe <see cref="T:System.Collections.Hashtable" /> usando la capacità iniziale, il fattore di carico, il provider di codice hash e l'operatore di confronto predefiniti.</summary>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Hashtable" /> copiando gli elementi dal dizionario specificato nel nuovo oggetto <see cref="T:System.Collections.Hashtable" />. Il nuovo oggetto <see cref="T:System.Collections.Hashtable" /> ha una capacità iniziale uguale al numero di elementi copiati e usa il fattore di carico, il provider di codice hash e l'operatore di confronto predefiniti.</summary>
      <param name="d">Oggetto <see cref="T:System.Collections.IDictionary" /> da copiare in un nuovo oggetto <see cref="T:System.Collections.Hashtable" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Collections.IEqualityComparer)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Hashtable" /> copiando gli elementi dal dizionario specificato in un nuovo oggetto <see cref="T:System.Collections.Hashtable" />. Il nuovo oggetto <see cref="T:System.Collections.Hashtable" /> ha una capacità iniziale uguale al numero di elementi copiati e usa il fattore di carico predefinito e l'oggetto <see cref="T:System.Collections.IEqualityComparer" /> specificato.</summary>
      <param name="d">Oggetto <see cref="T:System.Collections.IDictionary" /> da copiare in un nuovo oggetto <see cref="T:System.Collections.Hashtable" />.</param>
      <param name="equalityComparer">Oggetto <see cref="T:System.Collections.IEqualityComparer" /> che definisce il provider di codice hash e l'operatore di confronto da usare con <see cref="T:System.Collections.Hashtable" />.  
-oppure- 
 <see langword="null" /> per utilizzare il provider predefinito di codice hash e l'operatore di confronto predefinito. Il provider di codice hash predefinito è l'implementazione di <see cref="M:System.Object.GetHashCode" /> di ogni chiave e l'operatore di confronto predefinito è l'implementazione di <see cref="M:System.Object.Equals(System.Object)" /> di ogni chiave.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Hashtable" /> copiando gli elementi dal dizionario specificato nel nuovo oggetto <see cref="T:System.Collections.Hashtable" />. Il nuovo oggetto <see cref="T:System.Collections.Hashtable" /> ha una capacità iniziale uguale al numero di elementi copiati e usa il fattore di carico predefinito e il provider di codice hash e l'operatore di confronto specificati. Questa API è obsoleta. Per un'alternativa, vedere <see cref="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Collections.IEqualityComparer)" />.</summary>
      <param name="d">Oggetto <see cref="T:System.Collections.IDictionary" /> da copiare in un nuovo oggetto <see cref="T:System.Collections.Hashtable" />.</param>
      <param name="hcp">Oggetto <see cref="T:System.Collections.IHashCodeProvider" /> che fornisce i codici hash per tutte le chiavi in <see cref="T:System.Collections.Hashtable" />.  
-oppure- 
 <see langword="null" /> per usare il provider predefinito di codice hash, che rappresenta l'implementazione di ogni chiave di <see cref="M:System.Object.GetHashCode" />.</param>
      <param name="comparer">Oggetto <see cref="T:System.Collections.IComparer" /> da usare per determinare se due chiavi sono uguali.  
-oppure- 
 <see langword="null" /> per usare l'operatore di confronto predefinito, che rappresenta l'implementazione del metodo <see cref="M:System.Object.Equals(System.Object)" /> di ogni chiave.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Hashtable" /> copiando gli elementi dal dizionario specificato nel nuovo oggetto <see cref="T:System.Collections.Hashtable" />. Il nuovo oggetto <see cref="T:System.Collections.Hashtable" /> ha una capacità iniziale uguale al numero di elementi copiati e usa il fattore di carico specificato e il provider di codice hash e l'operatore di confronto predefiniti.</summary>
      <param name="d">Oggetto <see cref="T:System.Collections.IDictionary" /> da copiare in un nuovo oggetto <see cref="T:System.Collections.Hashtable" />.</param>
      <param name="loadFactor">Un numero nell'intervallo da 0,1 a 1,0 moltiplicato per il valore predefinito che garantisce le prestazioni migliori. Il risultato è il rapporto massimo tra elementi e bucket.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="loadFactor" /> è minore di 0,1.  
In alternativa 
 <paramref name="loadFactor" /> è maggiore di 1,0.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single,System.Collections.IEqualityComparer)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Hashtable" /> copiando gli elementi dal dizionario specificato nel nuovo oggetto <see cref="T:System.Collections.Hashtable" />. Il nuovo oggetto <see cref="T:System.Collections.Hashtable" /> ha una capacità iniziale uguale al numero di elementi copiati e usa il fattore di carico e l'oggetto <see cref="T:System.Collections.IEqualityComparer" /> specificati.</summary>
      <param name="d">Oggetto <see cref="T:System.Collections.IDictionary" /> da copiare in un nuovo oggetto <see cref="T:System.Collections.Hashtable" />.</param>
      <param name="loadFactor">Un numero nell'intervallo da 0,1 a 1,0 moltiplicato per il valore predefinito che garantisce le prestazioni migliori. Il risultato è il rapporto massimo tra elementi e bucket.</param>
      <param name="equalityComparer">Oggetto <see cref="T:System.Collections.IEqualityComparer" /> che definisce il provider di codice hash e l'operatore di confronto da usare con <see cref="T:System.Collections.Hashtable" />.  
In alternativa 
 <see langword="null" /> per utilizzare il provider predefinito di codice hash e l'operatore di confronto predefinito. Il provider di codice hash predefinito è l'implementazione di <see cref="M:System.Object.GetHashCode" /> di ogni chiave e l'operatore di confronto predefinito è l'implementazione di <see cref="M:System.Object.Equals(System.Object)" /> di ogni chiave.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="loadFactor" /> è minore di 0,1.  
In alternativa 
 <paramref name="loadFactor" /> è maggiore di 1,0.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Hashtable" /> copiando gli elementi dal dizionario specificato nel nuovo oggetto <see cref="T:System.Collections.Hashtable" />. Il nuovo oggetto <see cref="T:System.Collections.Hashtable" /> ha una capacità iniziale uguale al numero di elementi copiati e usa il fattore di carico, il provider di codice hash e l'operatore di confronto specificati.</summary>
      <param name="d">Oggetto <see cref="T:System.Collections.IDictionary" /> da copiare in un nuovo oggetto <see cref="T:System.Collections.Hashtable" />.</param>
      <param name="loadFactor">Un numero nell'intervallo da 0,1 a 1,0 moltiplicato per il valore predefinito che garantisce le prestazioni migliori. Il risultato è il rapporto massimo tra elementi e bucket.</param>
      <param name="hcp">Oggetto <see cref="T:System.Collections.IHashCodeProvider" /> che fornisce i codici hash per tutte le chiavi in <see cref="T:System.Collections.Hashtable" />.  
In alternativa 
 <see langword="null" /> per usare il provider predefinito di codice hash, che rappresenta l'implementazione di ogni chiave di <see cref="M:System.Object.GetHashCode" />.</param>
      <param name="comparer">Oggetto <see cref="T:System.Collections.IComparer" /> da usare per determinare se due chiavi sono uguali.  
In alternativa 
 <see langword="null" /> per usare l'operatore di confronto predefinito, che rappresenta l'implementazione del metodo <see cref="M:System.Object.Equals(System.Object)" /> di ogni chiave.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="loadFactor" /> è minore di 0,1.  
-oppure- 
 <paramref name="loadFactor" /> è maggiore di 1,0.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor(System.Collections.IEqualityComparer)">
      <summary>Inizializza una nuova istanza vuota della classe <see cref="T:System.Collections.Hashtable" /> usando la capacità iniziale e il fattore di carico predefiniti e l'oggetto <see cref="T:System.Collections.IEqualityComparer" /> specificato.</summary>
      <param name="equalityComparer">Oggetto <see cref="T:System.Collections.IEqualityComparer" /> che definisce il provider di codice hash e l'operatore di confronto da usare con l'oggetto <see cref="T:System.Collections.Hashtable" />.  
-oppure- 
 <see langword="null" /> per utilizzare il provider predefinito di codice hash e l'operatore di confronto predefinito. Il provider di codice hash predefinito è l'implementazione di <see cref="M:System.Object.GetHashCode" /> di ogni chiave e l'operatore di confronto predefinito è l'implementazione di <see cref="M:System.Object.Equals(System.Object)" /> di ogni chiave.</param>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)">
      <summary>Inizializza una nuova istanza vuota della classe <see cref="T:System.Collections.Hashtable" /> usando la capacità iniziale e il fattore di carico predefiniti e il provider di codice hash e l'operatore di confronto specificati.</summary>
      <param name="hcp">Oggetto <see cref="T:System.Collections.IHashCodeProvider" /> che fornisce i codici hash per tutte le chiavi dell'oggetto <see cref="T:System.Collections.Hashtable" />.  
In alternativa 
 <see langword="null" /> per usare il provider predefinito di codice hash, che rappresenta l'implementazione di ogni chiave di <see cref="M:System.Object.GetHashCode" />.</param>
      <param name="comparer">Oggetto <see cref="T:System.Collections.IComparer" /> da usare per determinare se due chiavi sono uguali.  
-oppure- 
 <see langword="null" /> per usare l'operatore di confronto predefinito, che rappresenta l'implementazione del metodo <see cref="M:System.Object.Equals(System.Object)" /> di ogni chiave.</param>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor(System.Int32)">
      <summary>Inizializza una nuova istanza vuota della classe <see cref="T:System.Collections.Hashtable" /> usando la capacità iniziale specificata e il fattore di carico, il provider di codice hash e l'operatore di confronto predefiniti.</summary>
      <param name="capacity">Numero approssimativo di elementi che l'oggetto <see cref="T:System.Collections.Hashtable" /> può contenere inizialmente.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> è minore di zero.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor(System.Int32,System.Collections.IEqualityComparer)">
      <summary>Inizializza una nuova istanza vuota della classe <see cref="T:System.Collections.Hashtable" /> usando la capacità iniziale e l'interfaccia <see cref="T:System.Collections.IEqualityComparer" /> specificate e il fattore di carico predefinito.</summary>
      <param name="capacity">Numero approssimativo di elementi che l'oggetto <see cref="T:System.Collections.Hashtable" /> può contenere inizialmente.</param>
      <param name="equalityComparer">Oggetto <see cref="T:System.Collections.IEqualityComparer" /> che definisce il provider di codice hash e l'operatore di confronto da usare con <see cref="T:System.Collections.Hashtable" />.  
In alternativa 
 <see langword="null" /> per utilizzare il provider predefinito di codice hash e l'operatore di confronto predefinito. Il provider di codice hash predefinito è l'implementazione di <see cref="M:System.Object.GetHashCode" /> di ogni chiave e l'operatore di confronto predefinito è l'implementazione di <see cref="M:System.Object.Equals(System.Object)" /> di ogni chiave.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> è minore di zero.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
      <summary>Inizializza una nuova istanza vuota della classe <see cref="T:System.Collections.Hashtable" /> usando la capacità iniziale, il provider di codice hash e l'operatore di confronto specificati e il fattore di carico predefinito.</summary>
      <param name="capacity">Numero approssimativo di elementi che l'oggetto <see cref="T:System.Collections.Hashtable" /> può contenere inizialmente.</param>
      <param name="hcp">Oggetto <see cref="T:System.Collections.IHashCodeProvider" /> che fornisce i codici hash per tutte le chiavi in <see cref="T:System.Collections.Hashtable" />.  
-oppure- 
 <see langword="null" /> per usare il provider predefinito di codice hash, che rappresenta l'implementazione di ogni chiave di <see cref="M:System.Object.GetHashCode" />.</param>
      <param name="comparer">Oggetto <see cref="T:System.Collections.IComparer" /> da usare per determinare se due chiavi sono uguali.  
-oppure- 
 <see langword="null" /> per usare l'operatore di confronto predefinito, che rappresenta l'implementazione del metodo <see cref="M:System.Object.Equals(System.Object)" /> di ogni chiave.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> è minore di zero.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor(System.Int32,System.Single)">
      <summary>Inizializza una nuova istanza vuota della classe <see cref="T:System.Collections.Hashtable" /> usando la capacità iniziale e il fattore di carico specificati e il provider di codice hash e l'operatore di confronto predefiniti.</summary>
      <param name="capacity">Numero approssimativo di elementi che l'oggetto <see cref="T:System.Collections.Hashtable" /> può contenere inizialmente.</param>
      <param name="loadFactor">Un numero nell'intervallo da 0,1 a 1,0 moltiplicato per il valore predefinito che garantisce le prestazioni migliori. Il risultato è il rapporto massimo tra elementi e bucket.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> è minore di zero.  
-oppure- 
 <paramref name="loadFactor" /> è minore di 0,1.  
In alternativa 
 <paramref name="loadFactor" /> è maggiore di 1,0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="capacity" /> sta causando un overflow.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor(System.Int32,System.Single,System.Collections.IEqualityComparer)">
      <summary>Inizializza una nuova istanza vuota della classe <see cref="T:System.Collections.Hashtable" /> usando la capacità iniziale, il fattore di carico e l'oggetto <see cref="T:System.Collections.IEqualityComparer" /> specificati.</summary>
      <param name="capacity">Numero approssimativo di elementi che l'oggetto <see cref="T:System.Collections.Hashtable" /> può contenere inizialmente.</param>
      <param name="loadFactor">Un numero nell'intervallo da 0,1 a 1,0 moltiplicato per il valore predefinito che garantisce le prestazioni migliori. Il risultato è il rapporto massimo tra elementi e bucket.</param>
      <param name="equalityComparer">Oggetto <see cref="T:System.Collections.IEqualityComparer" /> che definisce il provider di codice hash e l'operatore di confronto da usare con <see cref="T:System.Collections.Hashtable" />.  
-oppure- 
 <see langword="null" /> per utilizzare il provider predefinito di codice hash e l'operatore di confronto predefinito. Il provider di codice hash predefinito è l'implementazione di <see cref="M:System.Object.GetHashCode" /> di ogni chiave e l'operatore di confronto predefinito è l'implementazione di <see cref="M:System.Object.Equals(System.Object)" /> di ogni chiave.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> è minore di zero.  
-oppure- 
 <paramref name="loadFactor" /> è minore di 0,1.  
-oppure- 
 <paramref name="loadFactor" /> è maggiore di 1,0.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor(System.Int32,System.Single,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
      <summary>Inizializza una nuova istanza vuota della classe <see cref="T:System.Collections.Hashtable" /> usando la capacità iniziale, il fattore di carico, il provider di codice hash e l'operatore di confronto specificati.</summary>
      <param name="capacity">Numero approssimativo di elementi che l'oggetto <see cref="T:System.Collections.Hashtable" /> può contenere inizialmente.</param>
      <param name="loadFactor">Un numero nell'intervallo da 0,1 a 1,0 moltiplicato per il valore predefinito che garantisce le prestazioni migliori. Il risultato è il rapporto massimo tra elementi e bucket.</param>
      <param name="hcp">Oggetto <see cref="T:System.Collections.IHashCodeProvider" /> che fornisce i codici hash per tutte le chiavi in <see cref="T:System.Collections.Hashtable" />.  
-oppure- 
 <see langword="null" /> per usare il provider predefinito di codice hash, che rappresenta l'implementazione di ogni chiave di <see cref="M:System.Object.GetHashCode" />.</param>
      <param name="comparer">Oggetto <see cref="T:System.Collections.IComparer" /> da usare per determinare se due chiavi sono uguali.  
-oppure- 
 <see langword="null" /> per usare l'operatore di confronto predefinito, che rappresenta l'implementazione del metodo <see cref="M:System.Object.Equals(System.Object)" /> di ogni chiave.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> è minore di zero.  
-oppure- 
 <paramref name="loadFactor" /> è minore di 0,1.  
-oppure- 
 <paramref name="loadFactor" /> è maggiore di 1,0.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inizializza una nuova istanza vuota della classe <see cref="T:System.Collections.Hashtable" /> che è serializzabile tramite gli oggetti <see cref="T:System.Runtime.Serialization.SerializationInfo" /> e <see cref="T:System.Runtime.Serialization.StreamingContext" /> specificati.</summary>
      <param name="info">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> contenente le informazioni necessarie per serializzare l'oggetto <see cref="T:System.Collections.Hashtable" />.</param>
      <param name="context">Oggetto <see cref="T:System.Runtime.Serialization.StreamingContext" /> contenente l'origine e la destinazione del flusso serializzato associato a <see cref="T:System.Collections.Hashtable" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.Add(System.Object,System.Object)">
      <summary>Aggiunge un elemento con la chiave e il valore specificati al metodo <see cref="T:System.Collections.Hashtable" />.</summary>
      <param name="key">Chiave dell'elemento da aggiungere.</param>
      <param name="value">Valore dell'elemento da aggiungere. Il valore può essere <see langword="null" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">In <see cref="T:System.Collections.Hashtable" /> è già presente un elemento con la stessa chiave.</exception>
      <exception cref="T:System.NotSupportedException">La classe <see cref="T:System.Collections.Hashtable" /> è di sola lettura.  
In alternativa 
Le dimensioni dell'oggetto <see cref="T:System.Collections.Hashtable" /> sono fisse.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.Clear">
      <summary>Rimuove tutti gli elementi da <see cref="T:System.Collections.Hashtable" />.</summary>
      <exception cref="T:System.NotSupportedException">La classe <see cref="T:System.Collections.Hashtable" /> è di sola lettura.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.Clone">
      <summary>Crea una copia superficiale di <see cref="T:System.Collections.Hashtable" />.</summary>
      <returns>Copia superficiale di <see cref="T:System.Collections.Hashtable" />.</returns>
    </member>
    <member name="P:System.Collections.Hashtable.comparer">
      <summary>Ottiene o imposta l'oggetto <see cref="T:System.Collections.IComparer" /> da usare per <see cref="T:System.Collections.Hashtable" />.</summary>
      <returns>Oggetto <see cref="T:System.Collections.IComparer" /> da usare per <see cref="T:System.Collections.Hashtable" />.</returns>
      <exception cref="T:System.ArgumentException">La proprietà è impostata su un valore ma la tabella hash è stata creata mediante un'interfaccia <see cref="T:System.Collections.IEqualityComparer" />.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.Contains(System.Object)">
      <summary>Determina se l'oggetto <see cref="T:System.Collections.Hashtable" /> contiene una chiave specifica.</summary>
      <param name="key">Chiave da individuare in <see cref="T:System.Collections.Hashtable" />.</param>
      <returns>
        <see langword="true" /> se <see cref="T:System.Collections.Hashtable" /> contiene un elemento con la chiave specificata; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.ContainsKey(System.Object)">
      <summary>Determina se l'oggetto <see cref="T:System.Collections.Hashtable" /> contiene una chiave specifica.</summary>
      <param name="key">Chiave da individuare in <see cref="T:System.Collections.Hashtable" />.</param>
      <returns>
        <see langword="true" /> se <see cref="T:System.Collections.Hashtable" /> contiene un elemento con la chiave specificata; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.ContainsValue(System.Object)">
      <summary>Stabilisce se <see cref="T:System.Collections.Hashtable" /> contiene un valore specifico.</summary>
      <param name="value">Valore da individuare in <see cref="T:System.Collections.Hashtable" />. Il valore può essere <see langword="null" />.</param>
      <returns>
        <see langword="true" /> se la classe <see cref="T:System.Collections.Hashtable" /> contiene un elemento con l'oggetto <paramref name="value" /> specificato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Hashtable.CopyTo(System.Array,System.Int32)">
      <summary>Copia gli elementi della classe <see cref="T:System.Collections.Hashtable" /> gli elementi della classe <see cref="T:System.Array" /> unidimensionale in corrispondenza dell'indice specificato.</summary>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale che corrisponde alla destinazione degli oggetti <see cref="T:System.Collections.DictionaryEntry" /> copiati da <see cref="T:System.Collections.Hashtable" />. L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</param>
      <param name="arrayIndex">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> è multidimensionale.  
-oppure- 
Il numero di elementi nell'oggetto <see cref="T:System.Collections.Hashtable" /> di origine è maggiore dello spazio disponibile tra <paramref name="arrayIndex" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.</exception>
      <exception cref="T:System.InvalidCastException">Non è possibile eseguire il cast automatico del tipo dell'oggetto <see cref="T:System.Collections.Hashtable" /> di origine al tipo dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="P:System.Collections.Hashtable.Count">
      <summary>Ottiene il numero di coppie chiave/valore contenute in <see cref="T:System.Collections.Hashtable" />.</summary>
      <returns>Numero di coppie chiave/valore contenute in <see cref="T:System.Collections.Hashtable" />.</returns>
    </member>
    <member name="P:System.Collections.Hashtable.EqualityComparer">
      <summary>Ottiene l'interfaccia <see cref="T:System.Collections.IEqualityComparer" /> da usare per la classe <see cref="T:System.Collections.Hashtable" />.</summary>
      <returns>Oggetto <see cref="T:System.Collections.IEqualityComparer" /> da usare per <see cref="T:System.Collections.Hashtable" />.</returns>
      <exception cref="T:System.ArgumentException">La proprietà è impostata su un valore ma la tabella hash è stata creata mediante un'interfaccia <see cref="T:System.Collections.IHashCodeProvider" /> e un'interfaccia <see cref="T:System.Collections.IComparer" />.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.GetEnumerator">
      <summary>Restituisce un oggetto <see cref="T:System.Collections.IDictionaryEnumerator" /> che esegue l'iterazione di <see cref="T:System.Collections.Hashtable" />.</summary>
      <returns>
        <see cref="T:System.Collections.IDictionaryEnumerator" /> per l'oggetto <see cref="T:System.Collections.Hashtable" />.</returns>
    </member>
    <member name="M:System.Collections.Hashtable.GetHash(System.Object)">
      <summary>Restituisce il codice hash per la chiave specificata.</summary>
      <param name="key">Oggetto <see cref="T:System.Object" /> per cui è necessario che sia restituito un codice hash.</param>
      <returns>Codice hash per <paramref name="key" />.</returns>
      <exception cref="T:System.NullReferenceException">
        <paramref name="key" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Implementa l'interfaccia <see cref="T:System.Runtime.Serialization.ISerializable" /> restituendo i dati necessari per serializzare la <see cref="T:System.Collections.Hashtable" />.</summary>
      <param name="info">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> contenente le informazioni necessarie per serializzare l'oggetto <see cref="T:System.Collections.Hashtable" />.</param>
      <param name="context">Oggetto <see cref="T:System.Runtime.Serialization.StreamingContext" /> contenente l'origine e la destinazione del flusso serializzato associato a <see cref="T:System.Collections.Hashtable" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">L'insieme è stato modificato.</exception>
    </member>
    <member name="P:System.Collections.Hashtable.hcp">
      <summary>Ottiene o imposta l'oggetto dal quale verranno distribuiti i codici hash.</summary>
      <returns>Oggetto dal quale possono essere distribuiti i codici hash.</returns>
      <exception cref="T:System.ArgumentException">La proprietà è impostata su un valore ma la tabella hash è stata creata mediante un'interfaccia <see cref="T:System.Collections.IEqualityComparer" />.</exception>
    </member>
    <member name="P:System.Collections.Hashtable.IsFixedSize">
      <summary>Ottiene un valore che indica se <see cref="T:System.Collections.Hashtable" /> ha dimensioni fisse.</summary>
      <returns>
        <see langword="true" /> se <see cref="T:System.Collections.Hashtable" /> ha dimensioni fisse; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Hashtable.IsReadOnly">
      <summary>Ottiene un valore che indica se <see cref="T:System.Collections.Hashtable" /> è di sola lettura.</summary>
      <returns>
        <see langword="true" /> se <see cref="T:System.Collections.Hashtable" /> è di sola lettura; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Hashtable.IsSynchronized">
      <summary>Ottiene un valore che indica se l'accesso a <see cref="T:System.Collections.Hashtable" /> è sincronizzato (thread-safe).</summary>
      <returns>
        <see langword="true" /> se l'accesso a <see cref="T:System.Collections.Hashtable" /> è sincronizzato (thread-safe); in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Hashtable.Item(System.Object)">
      <summary>Ottiene o imposta il valore associato alla chiave specificata.</summary>
      <param name="key">Chiave di cui si deve ottenere o impostare il valore.</param>
      <returns>Valore associato alla chiave specificata. Se la chiave specificata non viene trovata, tentando di ottenerla viene restituito <see langword="null" /> mentre tentando di impostarla viene creato un nuovo elemento con la chiave specificata.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">La proprietà è stata impostata e l'interfaccia <see cref="T:System.Collections.Hashtable" /> è in sola lettura.  
-oppure- 
La proprietà è impostata, <paramref name="key" /> non esiste nella raccolta e <see cref="T:System.Collections.Hashtable" /> è di dimensioni fisse.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.KeyEquals(System.Object,System.Object)">
      <summary>Confronta un <see cref="T:System.Object" /> specifico con una chiave specifica nella <see cref="T:System.Collections.Hashtable" />.</summary>
      <param name="item">
        <see cref="T:System.Object" /> da confrontare con <paramref name="key" />.</param>
      <param name="key">Chiave della <see cref="T:System.Collections.Hashtable" /> da confrontare con <paramref name="item" />.</param>
      <returns>
        <see langword="true" /> se <paramref name="item" /> e <paramref name="key" /> sono uguali; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> è <see langword="null" />.  
In alternativa 
 <paramref name="key" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Collections.Hashtable.Keys">
      <summary>Ottiene un oggetto <see cref="T:System.Collections.ICollection" /> contenente le chiavi presenti nell'oggetto <see cref="T:System.Collections.Hashtable" />.</summary>
      <returns>Oggetto <see cref="T:System.Collections.ICollection" /> contenente le chiavi presenti in <see cref="T:System.Collections.Hashtable" />.</returns>
    </member>
    <member name="M:System.Collections.Hashtable.OnDeserialization(System.Object)">
      <summary>Implementa l'interfaccia <see cref="T:System.Runtime.Serialization.ISerializable" /> e genera l'evento di deserializzazione quando la deserializzazione è completa.</summary>
      <param name="sender">Origine dell'evento di deserializzazione.</param>
      <exception cref="T:System.Runtime.Serialization.SerializationException">L'oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> associato alla <see cref="T:System.Collections.Hashtable" /> corrente non è valido.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.Remove(System.Object)">
      <summary>Rimuove l'elemento con la chiave specificata da <see cref="T:System.Collections.Hashtable" />.</summary>
      <param name="key">Chiave dell'elemento da rimuovere.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">La classe <see cref="T:System.Collections.Hashtable" /> è di sola lettura.  
-oppure- 
Le dimensioni dell'oggetto <see cref="T:System.Collections.Hashtable" /> sono fisse.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)">
      <summary>Restituisce un wrapper sincronizzato (thread-safe) per la classe <see cref="T:System.Collections.Hashtable" />.</summary>
      <param name="table">Oggetto <see cref="T:System.Collections.Hashtable" /> da sincronizzare.</param>
      <returns>Wrapper sincronizzato (thread-safe) per la classe <see cref="T:System.Collections.Hashtable" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="table" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Collections.Hashtable.SyncRoot">
      <summary>Ottiene un oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.Hashtable" />.</summary>
      <returns>Oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.Hashtable" />.</returns>
    </member>
    <member name="M:System.Collections.Hashtable.System#Collections#IEnumerable#GetEnumerator">
      <summary>Restituisce un enumeratore che consente di eseguire l'iterazione di una raccolta.</summary>
      <returns>Oggetto <see cref="T:System.Collections.IEnumerator" /> che può essere usato per eseguire l'iterazione della raccolta.</returns>
    </member>
    <member name="P:System.Collections.Hashtable.Values">
      <summary>Ottiene <see cref="T:System.Collections.ICollection" /> contenente i valori in <see cref="T:System.Collections.Hashtable" />.</summary>
      <returns>Interfaccia <see cref="T:System.Collections.ICollection" /> contenente i valori dell'interfaccia <see cref="T:System.Collections.Hashtable" />.</returns>
    </member>
    <member name="T:System.Collections.IHashCodeProvider">
      <summary>Fornisce un codice hash per un oggetto, utilizzando una funzione hash personalizzata.</summary>
    </member>
    <member name="M:System.Collections.IHashCodeProvider.GetHashCode(System.Object)">
      <summary>Viene restituito un codice hash per l'oggetto specificato.</summary>
      <param name="obj">Oggetto <see cref="T:System.Object" /> per cui è necessario che sia restituito un codice hash.</param>
      <returns>Codice hash per l'oggetto specificato.</returns>
      <exception cref="T:System.ArgumentNullException">Il tipo di <paramref name="obj" /> è un tipo di riferimento e <paramref name="obj" /> è <see langword="null" />.</exception>
    </member>
    <member name="T:System.ContextBoundObject">
      <summary>Definisce la classe base per tutte le classi associate al contesto.</summary>
    </member>
    <member name="M:System.ContextBoundObject.#ctor">
      <summary>Crea un'istanza della classe <see cref="T:System.ContextBoundObject" />.</summary>
    </member>
    <member name="T:System.ContextMarshalException">
      <summary>Eccezione generata quando un tentativo di effettuare il marshalling di un oggetto attraverso il limite di un contesto non riesce.</summary>
    </member>
    <member name="M:System.ContextMarshalException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ContextMarshalException" /> con le proprietà predefinite.</summary>
    </member>
    <member name="M:System.ContextMarshalException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ContextMarshalException" /> con dati serializzati.</summary>
      <param name="info">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> che contiene i dati oggetto serializzati relativi all'eccezione generata.</param>
      <param name="context">Oggetto <see cref="T:System.Runtime.Serialization.StreamingContext" /> contenente le informazioni contestuali sull'origine o sulla destinazione.</param>
    </member>
    <member name="M:System.ContextMarshalException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ContextMarshalException" /> con un messaggio di errore specificato.</summary>
      <param name="message">Messaggio di errore in cui viene indicato il motivo dell'eccezione.</param>
    </member>
    <member name="M:System.ContextMarshalException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ContextMarshalException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message">Messaggio di errore in cui viene indicato il motivo dell'eccezione.</param>
      <param name="inner">Eccezione che ha determinato l'eccezione corrente. Se il parametro <paramref name="inner" /> non è <see langword="null" />, l'eccezione corrente viene generata in un blocco <see langword="catch" /> in cui viene gestita l'eccezione interna.</param>
    </member>
    <member name="T:System.ContextStaticAttribute">
      <summary>Indica che il valore di un campo statico è univoco per un particolare contesto.</summary>
    </member>
    <member name="M:System.ContextStaticAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ContextStaticAttribute" />.</summary>
    </member>
    <member name="T:System.Convert">
      <summary>Converte un tipo di dati di base in un altro tipo di dati di base.</summary>
    </member>
    <member name="M:System.Convert.ChangeType(System.Object,System.Type)">
      <summary>Restituisce un oggetto del tipo specificato e il cui valore è equivalente all'oggetto specificato.</summary>
      <param name="value">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" />.</param>
      <param name="conversionType">Tipo di oggetto da restituire.</param>
      <returns>Oggetto il cui tipo è <paramref name="conversionType" /> e il cui valore è equivalente a <paramref name="value" />.  
-oppure- 
Riferimento Null (<see langword="Nothing" /> in Visual Basic), se <paramref name="value" /> è <see langword="null" /> e <paramref name="conversionType" /> non è un tipo di valore.</returns>
      <exception cref="T:System.InvalidCastException">Questa conversione non è supportata.  
-oppure- 
 <paramref name="value" /> è <see langword="null" /> e <paramref name="conversionType" /> è un tipo di valore.  
-oppure- 
 <paramref name="value" /> non implementa l'interfaccia <see cref="T:System.IConvertible" /> .</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> non è in un formato riconosciuto da <paramref name="conversionType" />.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> rappresenta un numero non compreso nell'intervallo di <paramref name="conversionType" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="conversionType" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)">
      <summary>Restituisce un oggetto del tipo specificato, il cui valore è equivalente all'oggetto specificato. Un parametro fornisce le informazioni di formattazione specifiche delle impostazioni cultura.</summary>
      <param name="value">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" />.</param>
      <param name="conversionType">Tipo di oggetto da restituire.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <returns>Oggetto il cui tipo è <paramref name="conversionType" /> e il cui valore è equivalente a <paramref name="value" />.  
-oppure- 
 <paramref name="value" />, se gli attributi <see cref="T:System.Type" /> di <paramref name="value" /> e <paramref name="conversionType" /> sono uguali.  
In alternativa 
Riferimento Null (<see langword="Nothing" /> in Visual Basic), se <paramref name="value" /> è <see langword="null" /> e <paramref name="conversionType" /> non è un tipo di valore.</returns>
      <exception cref="T:System.InvalidCastException">Questa conversione non è supportata.  
-oppure- 
 <paramref name="value" /> è <see langword="null" /> e <paramref name="conversionType" /> è un tipo di valore.  
In alternativa 
 <paramref name="value" /> non implementa l'interfaccia <see cref="T:System.IConvertible" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> non è in un formato <paramref name="conversionType" /> riconosciuto da <paramref name="provider" />.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> rappresenta un numero non compreso nell'intervallo di <paramref name="conversionType" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="conversionType" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Convert.ChangeType(System.Object,System.TypeCode)">
      <summary>Restituisce un oggetto del tipo specificato, il cui valore è equivalente all'oggetto specificato.</summary>
      <param name="value">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" />.</param>
      <param name="typeCode">Tipo di oggetto da restituire.</param>
      <returns>Oggetto il cui tipo sottostante è <paramref name="typeCode" /> e il cui valore è equivalente a <paramref name="value" />.  
-oppure- 
Riferimento Null (<see langword="Nothing" /> in Visual Basic), se <paramref name="value" /> è <see langword="null" /> e <paramref name="typeCode" /> è <see cref="F:System.TypeCode.Empty" />, <see cref="F:System.TypeCode.String" /> o <see cref="F:System.TypeCode.Object" />.</returns>
      <exception cref="T:System.InvalidCastException">Questa conversione non è supportata.  
-oppure- 
 <paramref name="value" /> è <see langword="null" /> e <paramref name="typeCode" /> specifica un tipo di valore.  
-oppure- 
 <paramref name="value" /> non implementa l'interfaccia <see cref="T:System.IConvertible" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> non è in un formato riconosciuto dal tipo <paramref name="typeCode" />.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> rappresenta un numero non compreso nell'intervallo del tipo <paramref name="typeCode" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="typeCode" /> non è valido.</exception>
    </member>
    <member name="M:System.Convert.ChangeType(System.Object,System.TypeCode,System.IFormatProvider)">
      <summary>Restituisce un oggetto del tipo specificato, il cui valore è equivalente all'oggetto specificato. Un parametro fornisce le informazioni di formattazione specifiche delle impostazioni cultura.</summary>
      <param name="value">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" />.</param>
      <param name="typeCode">Tipo di oggetto da restituire.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <returns>Oggetto il cui tipo sottostante è <paramref name="typeCode" /> e il cui valore è equivalente a <paramref name="value" />.  
-oppure- 
Riferimento Null (<see langword="Nothing" /> in Visual Basic), se <paramref name="value" /> è <see langword="null" /> e <paramref name="typeCode" /> è <see cref="F:System.TypeCode.Empty" />, <see cref="F:System.TypeCode.String" /> o <see cref="F:System.TypeCode.Object" />.</returns>
      <exception cref="T:System.InvalidCastException">Questa conversione non è supportata.  
-oppure- 
 <paramref name="value" /> è <see langword="null" /> e <paramref name="typeCode" /> specifica un tipo di valore.  
-oppure- 
 <paramref name="value" /> non implementa l'interfaccia <see cref="T:System.IConvertible" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> non è in un formato per il tipo <paramref name="typeCode" /> riconosciuto da <paramref name="provider" />.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> rappresenta un numero non compreso nell'intervallo del tipo <paramref name="typeCode" /> .</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="typeCode" /> non è valido.</exception>
    </member>
    <member name="F:System.Convert.DBNull">
      <summary>Costante che rappresenta una colonna di database senza dati, ovvero un database Null.</summary>
    </member>
    <member name="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)">
      <summary>Converte un sottoinsieme di una matrice di caratteri Unicode, in cui sono codificati dati binari come cifre base 64, in una matrice di interi senza segno a 8 bit equivalente. I parametri specificano il sottoinsieme nella matrice di input e il numero di elementi da convertire.</summary>
      <param name="inArray">Matrice di caratteri Unicode.</param>
      <param name="offset">Posizione all'interno di <paramref name="inArray" />.</param>
      <param name="length">Numero di elementi di <paramref name="inArray" /> da convertire.</param>
      <returns>Matrice di interi senza segno a 8 bit equivalente agli elementi <paramref name="length" /> in corrispondenza della posizione <paramref name="offset" /> in <paramref name="inArray" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inArray" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> o <paramref name="length" /> è minore di 0.  
In alternativa 
 La somma di <paramref name="offset" /> e <paramref name="length" /> indica una posizione non all'interno di <paramref name="inArray" />.</exception>
      <exception cref="T:System.FormatException">La lunghezza di <paramref name="inArray" />, esclusi i caratteri di spazio vuoto, non è zero o un multiplo di 4.  
In alternativa 
Il formato di <paramref name="inArray" /> non è valido. <paramref name="inArray" /> contiene un carattere non Base 64, più di due caratteri di riempimento o uno spazio non vuoto tra i caratteri di riempimento.</exception>
    </member>
    <member name="M:System.Convert.FromBase64String(System.String)">
      <summary>Converte la stringa specificata, che codifica dati binari come cifre base 64, in una matrice di interi senza segno a 8 bit equivalente.</summary>
      <param name="s">Stringa da convertire.</param>
      <returns>Matrice di interi senza segno a 8 bit equivalente a <paramref name="s" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> è <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">La lunghezza di <paramref name="s" />, esclusi i caratteri di spazio vuoto, non è zero o un multiplo di 4.  
-oppure- 
Il formato di <paramref name="s" /> non è valido. <paramref name="s" /> contiene un carattere non Base 64, più di due caratteri di riempimento o uno spazio non vuoto tra i caratteri di riempimento.</exception>
    </member>
    <member name="M:System.Convert.GetTypeCode(System.Object)">
      <summary>Restituisce l'attributo <see cref="T:System.TypeCode" /> dell'oggetto specificato.</summary>
      <param name="value">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" />.</param>
      <returns>Oggetto <see cref="T:System.TypeCode" /> di <paramref name="value" /> oppure <see cref="F:System.TypeCode.Empty" /> se <paramref name="value" /> è <see langword="null" />.</returns>
    </member>
    <member name="M:System.Convert.IsDBNull(System.Object)">
      <summary>Indica se l'oggetto specificato è di tipo <see cref="T:System.DBNull" />.</summary>
      <param name="value">Oggetto.</param>
      <returns>
        <see langword="true" /> se <paramref name="value" /> è di tipo <see cref="T:System.DBNull" /> ; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
      <summary>Converte un subset di una matrice di interi senza segno a 8 bit in un subset equivalente di una matrice di caratteri Unicode codificati con cifre base 64. I parametri specificano i sottoinsiemi come offset nelle matrici di input e output e il numero di elementi nella matrice di input da convertire.</summary>
      <param name="inArray">Matrice di input di interi senza segno a 8 bit.</param>
      <param name="offsetIn">Posizione all'interno di <paramref name="inArray" />.</param>
      <param name="length">Numero di elementi di <paramref name="inArray" /> da convertire.</param>
      <param name="outArray">Matrice di output di caratteri Unicode.</param>
      <param name="offsetOut">Posizione all'interno di <paramref name="outArray" />.</param>
      <returns>Un intero con segno a 32 bit contenente il numero di byte in <paramref name="outArray" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inArray" /> o <paramref name="outArray" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offsetIn" />, <paramref name="offsetOut" /> o <paramref name="length" /> è negativo.  
-oppure- 
 La somma di <paramref name="offsetIn" /> e <paramref name="length" /> è maggiore della lunghezza di <paramref name="inArray" />.  
In alternativa 
 La somma di <paramref name="offsetOut" /> e del numero di elementi da restituire è maggiore della lunghezza di <paramref name="outArray" />.</exception>
    </member>
    <member name="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Base64FormattingOptions)">
      <summary>Converte un subset di una matrice di interi senza segno a 8 bit in un subset equivalente di una matrice di caratteri Unicode codificati con cifre base 64. I parametri specificano i sottoinsiemi come offset nelle matrici di input e output, il numero di elementi nella matrice di input da convertire e se vengono inserite interruzioni di riga nella matrice di output.</summary>
      <param name="inArray">Matrice di input di interi senza segno a 8 bit.</param>
      <param name="offsetIn">Posizione all'interno di <paramref name="inArray" />.</param>
      <param name="length">Numero di elementi di <paramref name="inArray" /> da convertire.</param>
      <param name="outArray">Matrice di output di caratteri Unicode.</param>
      <param name="offsetOut">Posizione all'interno di <paramref name="outArray" />.</param>
      <param name="options">
        <see cref="F:System.Base64FormattingOptions.InsertLineBreaks" /> per inserire un'interruzione di riga ogni 76 caratteri o <see cref="F:System.Base64FormattingOptions.None" /> per non inserire le interruzioni di riga.</param>
      <returns>Un intero con segno a 32 bit contenente il numero di byte in <paramref name="outArray" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inArray" /> o <paramref name="outArray" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offsetIn" />, <paramref name="offsetOut" /> o <paramref name="length" /> è negativo.  
-oppure- 
 La somma di <paramref name="offsetIn" /> e <paramref name="length" /> è maggiore della lunghezza di <paramref name="inArray" />.  
In alternativa 
 La somma di<paramref name="offsetOut" /> e del numero di elementi da restituire è maggiore della lunghezza di <paramref name="outArray" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="options" /> non è un valore valido di <see cref="T:System.Base64FormattingOptions" />.</exception>
    </member>
    <member name="M:System.Convert.ToBase64String(System.Byte[])">
      <summary>Converte una matrice di interi senza segno a 8 bit nella relativa rappresentazione di stringa equivalente codificata con cifre base 64.</summary>
      <param name="inArray">Matrice di interi senza segno a 8 bit.</param>
      <returns>Rappresentazione di stringa, in base 64, del contenuto di <paramref name="inArray" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inArray" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Convert.ToBase64String(System.Byte[],System.Base64FormattingOptions)">
      <summary>Converte una matrice di interi senza segno a 8 bit nella relativa rappresentazione di stringa equivalente codificata con cifre base 64. Un parametro specifica se inserire interruzioni di riga nel valore restituito.</summary>
      <param name="inArray">Matrice di interi senza segno a 8 bit.</param>
      <param name="options">
        <see cref="F:System.Base64FormattingOptions.InsertLineBreaks" /> per inserire un'interruzione di riga ogni 76 caratteri o <see cref="F:System.Base64FormattingOptions.None" /> per non inserire le interruzioni di riga.</param>
      <returns>Rappresentazione di stringa in base 64 degli elementi di <paramref name="inArray" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inArray" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="options" /> non è un valore valido di <see cref="T:System.Base64FormattingOptions" />.</exception>
    </member>
    <member name="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32)">
      <summary>Converte un subset di una matrice di interi senza segno a 8 bit nella relativa rappresentazione di stringa equivalente codificata con cifre base 64. I parametri specificano il subset come offset nella matrice di input e il numero di elementi nella matrice da convertire.</summary>
      <param name="inArray">Matrice di interi senza segno a 8 bit.</param>
      <param name="offset">Offset in <paramref name="inArray" />.</param>
      <param name="length">Numero di elementi di <paramref name="inArray" /> da convertire.</param>
      <returns>Rappresentazione di stringa in base 64 di elementi <paramref name="length" /> di <paramref name="inArray" />, a partire dalla posizione <paramref name="offset" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inArray" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> o <paramref name="length" /> è negativo.  
-oppure- 
 La somma di <paramref name="offset" /> e <paramref name="length" /> è maggiore della lunghezza di <paramref name="inArray" />.</exception>
    </member>
    <member name="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32,System.Base64FormattingOptions)">
      <summary>Converte un subset di una matrice di interi senza segno a 8 bit nella relativa rappresentazione di stringa equivalente codificata con cifre base 64. I parametri specificano il sottoinsieme come offset nella matrice di input, il numero di elementi nella matrice da convertire e se inserire interruzioni di riga nel valore restituito.</summary>
      <param name="inArray">Matrice di interi senza segno a 8 bit.</param>
      <param name="offset">Offset in <paramref name="inArray" />.</param>
      <param name="length">Numero di elementi di <paramref name="inArray" /> da convertire.</param>
      <param name="options">
        <see cref="F:System.Base64FormattingOptions.InsertLineBreaks" /> per inserire un'interruzione di riga ogni 76 caratteri o <see cref="F:System.Base64FormattingOptions.None" /> per non inserire le interruzioni di riga.</param>
      <returns>Rappresentazione di stringa in base 64 di elementi <paramref name="length" /> di <paramref name="inArray" />, a partire dalla posizione <paramref name="offset" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inArray" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> o <paramref name="length" /> è negativo.  
-oppure- 
 La somma di <paramref name="offset" /> e <paramref name="length" /> è maggiore della lunghezza di <paramref name="inArray" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="options" /> non è un valore valido di <see cref="T:System.Base64FormattingOptions" />.</exception>
    </member>
    <member name="M:System.Convert.ToBase64String(System.ReadOnlySpan{System.Byte},System.Base64FormattingOptions)">
      <param name="bytes" />
      <param name="options" />
    </member>
    <member name="M:System.Convert.ToBoolean(System.Boolean)">
      <summary>Restituisce il valore booleano specificato; non viene eseguita alcuna conversione effettiva.</summary>
      <param name="value">Valore booleano da restituire.</param>
      <returns>
        <paramref name="value" /> viene restituito invariato.</returns>
    </member>
    <member name="M:System.Convert.ToBoolean(System.Byte)">
      <summary>Converte il valore dell'intero senza segno a 8 bit specificato in un valore booleano equivalente.</summary>
      <param name="value">Intero senza segno a 8 bit da convertire.</param>
      <returns>
        <see langword="true" /> se <paramref name="value" /> non è zero; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Convert.ToBoolean(System.Char)">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">Carattere Unicode da convertire.</param>
      <returns>Questa conversione non è supportata. Non vengono restituiti valori.</returns>
      <exception cref="T:System.InvalidCastException">Questa conversione non è supportata.</exception>
    </member>
    <member name="M:System.Convert.ToBoolean(System.DateTime)">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">Valore di data e ora da convertire.</param>
      <returns>Questa conversione non è supportata. Non vengono restituiti valori.</returns>
      <exception cref="T:System.InvalidCastException">Questa conversione non è supportata.</exception>
    </member>
    <member name="M:System.Convert.ToBoolean(System.Decimal)">
      <summary>Converte il valore del numero decimale specificato in un valore booleano equivalente.</summary>
      <param name="value">Numero da convertire.</param>
      <returns>
        <see langword="true" /> se <paramref name="value" /> non è zero; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Convert.ToBoolean(System.Double)">
      <summary>Converte il valore del numero a virgola mobile e con precisione doppia specificato in un valore booleano equivalente.</summary>
      <param name="value">Numero a virgola mobile a precisione doppia da convertire.</param>
      <returns>
        <see langword="true" /> se <paramref name="value" /> non è zero; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Convert.ToBoolean(System.Int16)">
      <summary>Converte il valore dell'intero con segno a 16 bit specificato in un valore booleano equivalente.</summary>
      <param name="value">Intero con segno a 16 bit da convertire.</param>
      <returns>
        <see langword="true" /> se <paramref name="value" /> non è zero; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Convert.ToBoolean(System.Int32)">
      <summary>Converte il valore dell'intero con segno a 32 bit specificato in un valore booleano equivalente.</summary>
      <param name="value">Intero con segno a 32 bit da convertire.</param>
      <returns>
        <see langword="true" /> se <paramref name="value" /> non è zero; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Convert.ToBoolean(System.Int64)">
      <summary>Converte il valore dell'intero con segno a 64 bit specificato in un valore booleano equivalente.</summary>
      <param name="value">Intero con segno a 64 bit da convertire.</param>
      <returns>
        <see langword="true" /> se <paramref name="value" /> non è zero; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Convert.ToBoolean(System.Object)">
      <summary>Converte il valore di un oggetto specificato in un valore booleano equivalente.</summary>
      <param name="value">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" /> oppure <see langword="null" />.</param>
      <returns>
        <see langword="true" /> o <see langword="false" />, che riflette il valore restituito richiamando il metodo <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" /> per il tipo sottostante di <paramref name="value" />. Se <paramref name="value" /> è <see langword="null" />, il metodo restituisce <see langword="false" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> è una stringa diversa da <see cref="F:System.Boolean.TrueString" /> o <see cref="F:System.Boolean.FalseString" />.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> non implementa l'interfaccia <see cref="T:System.IConvertible" />.  
-oppure- 
La conversione di <paramref name="value" /> in <see cref="T:System.Boolean" /> non è supportata.</exception>
    </member>
    <member name="M:System.Convert.ToBoolean(System.Object,System.IFormatProvider)">
      <summary>Converte il valore dell'oggetto specificato in un valore booleano equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</summary>
      <param name="value">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" /> oppure <see langword="null" />.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <returns>
        <see langword="true" /> o <see langword="false" />, che riflette il valore restituito richiamando il metodo <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" /> per il tipo sottostante di <paramref name="value" />. Se <paramref name="value" /> è <see langword="null" />, il metodo restituisce <see langword="false" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> è una stringa diversa da <see cref="F:System.Boolean.TrueString" /> o <see cref="F:System.Boolean.FalseString" />.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> non implementa l'interfaccia <see cref="T:System.IConvertible" />.  
-oppure- 
La conversione di <paramref name="value" /> in <see cref="T:System.Boolean" /> non è supportata.</exception>
    </member>
    <member name="M:System.Convert.ToBoolean(System.SByte)">
      <summary>Converte il valore dell'intero con segno a 8 bit specificato in un valore booleano equivalente.</summary>
      <param name="value">Intero con segno a 8 bit da convertire.</param>
      <returns>
        <see langword="true" /> se <paramref name="value" /> non è zero; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Convert.ToBoolean(System.Single)">
      <summary>Converte il valore del numero a virgola mobile a precisione singola specificato in un valore booleano equivalente.</summary>
      <param name="value">Numero a virgola mobile a precisione singola da convertire.</param>
      <returns>
        <see langword="true" /> se <paramref name="value" /> non è zero; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Convert.ToBoolean(System.String)">
      <summary>Converte la rappresentazione di stringa specificata di un valore logico nel relativo valore booleano equivalente.</summary>
      <param name="value">Stringa che contiene il valore <see cref="F:System.Boolean.TrueString" /> o <see cref="F:System.Boolean.FalseString" />.</param>
      <returns>
        <see langword="true" /> se <paramref name="value" /> è uguale a <see cref="F:System.Boolean.TrueString" /> oppure <see langword="false" /> se <paramref name="value" /> è uguale a <see cref="F:System.Boolean.FalseString" /> o a <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> non è uguale a <see cref="F:System.Boolean.TrueString" /> o a <see cref="F:System.Boolean.FalseString" />.</exception>
    </member>
    <member name="M:System.Convert.ToBoolean(System.String,System.IFormatProvider)">
      <summary>Converte la rappresentazione di stringa specificata di un valore logico nel valore booleano equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</summary>
      <param name="value">Stringa che contiene il valore <see cref="F:System.Boolean.TrueString" /> o <see cref="F:System.Boolean.FalseString" />.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura. Questo parametro viene ignorato.</param>
      <returns>
        <see langword="true" /> se <paramref name="value" /> è uguale a <see cref="F:System.Boolean.TrueString" /> oppure <see langword="false" /> se <paramref name="value" /> è uguale a <see cref="F:System.Boolean.FalseString" /> o a <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> non è uguale a <see cref="F:System.Boolean.TrueString" /> o a <see cref="F:System.Boolean.FalseString" />.</exception>
    </member>
    <member name="M:System.Convert.ToBoolean(System.UInt16)">
      <summary>Converte il valore dell'intero senza segno a 16 bit specificato in un valore booleano equivalente.</summary>
      <param name="value">Intero senza segno a 16 bit da convertire.</param>
      <returns>
        <see langword="true" /> se <paramref name="value" /> non è zero; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Convert.ToBoolean(System.UInt32)">
      <summary>Converte il valore dell'intero senza segno a 32 bit specificato in un valore booleano equivalente.</summary>
      <param name="value">Intero senza segno a 32 bit da convertire.</param>
      <returns>
        <see langword="true" /> se <paramref name="value" /> non è zero; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Convert.ToBoolean(System.UInt64)">
      <summary>Converte il valore dell'intero senza segno a 64 bit specificato in un valore booleano equivalente.</summary>
      <param name="value">Intero senza segno a 64 bit da convertire.</param>
      <returns>
        <see langword="true" /> se <paramref name="value" /> non è zero; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Convert.ToByte(System.Boolean)">
      <summary>Converte il valore booleano specificato nell'intero senza segno a 8 bit equivalente.</summary>
      <param name="value">Valore booleano da convertire.</param>
      <returns>Il numero 1 se <paramref name="value" /> è <see langword="true" />; in caso contrario, 0.</returns>
    </member>
    <member name="M:System.Convert.ToByte(System.Byte)">
      <summary>Restituisce l'intero senza segno a 8 bit specificato; non viene eseguita alcuna conversione effettiva.</summary>
      <param name="value">Intero senza segno a 8 bit da restituire.</param>
      <returns>
        <paramref name="value" /> viene restituito invariato.</returns>
    </member>
    <member name="M:System.Convert.ToByte(System.Char)">
      <summary>Converte il valore del carattere Unicode specificato nell'intero senza segno a 8 bit equivalente.</summary>
      <param name="value">Carattere Unicode da convertire.</param>
      <returns>Intero senza segno a 8 bit equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> rappresenta un numero maggiore di <see cref="F:System.Byte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.DateTime)">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">Valore di data e ora da convertire.</param>
      <returns>Questa conversione non è supportata. Non vengono restituiti valori.</returns>
      <exception cref="T:System.InvalidCastException">Questa conversione non è supportata.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.Decimal)">
      <summary>Converte il valore del numero decimale specificato in un intero senza segno a 8 bit equivalente.</summary>
      <param name="value">Numero da convertire.</param>
      <returns>
        <paramref name="value" />, arrotondato all'intero senza segno a 8 bit più vicino. Se <paramref name="value" /> si trova a metà tra due numeri interi, viene restituito il numero intero pari; vale a dire, 4,5 viene convertito in 4, mentre 5,5 viene convertito in 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è maggiore di <see cref="F:System.Byte.MaxValue" /> o minore di <see cref="F:System.Byte.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.Double)">
      <summary>Converte il valore del numero a virgola mobile e con precisione doppia specificato in un intero senza segno a 8 bit equivalente.</summary>
      <param name="value">Numero a virgola mobile a precisione doppia da convertire.</param>
      <returns>
        <paramref name="value" />, arrotondato all'intero senza segno a 8 bit più vicino. Se <paramref name="value" /> si trova a metà tra due numeri interi, viene restituito il numero intero pari; vale a dire, 4,5 viene convertito in 4, mentre 5,5 viene convertito in 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è maggiore di <see cref="F:System.Byte.MaxValue" /> o minore di <see cref="F:System.Byte.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.Int16)">
      <summary>Converte il valore dell'intero con segno a 16 bit specificato in un intero senza segno a 8 bit equivalente.</summary>
      <param name="value">Intero con segno a 16 bit da convertire.</param>
      <returns>Intero senza segno a 8 bit equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è minore di <see cref="F:System.Byte.MinValue" /> o maggiore di <see cref="F:System.Byte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.Int32)">
      <summary>Converte il valore dell'intero con segno a 32 bit specificato in un intero senza segno a 8 bit equivalente.</summary>
      <param name="value">Intero con segno a 32 bit da convertire.</param>
      <returns>Intero senza segno a 8 bit equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è minore di <see cref="F:System.Byte.MinValue" /> o maggiore di <see cref="F:System.Byte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.Int64)">
      <summary>Converte il valore dell'intero con segno a 64 bit specificato in un intero senza segno a 8 bit equivalente.</summary>
      <param name="value">Intero con segno a 64 bit da convertire.</param>
      <returns>Intero senza segno a 8 bit equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è minore di <see cref="F:System.Byte.MinValue" /> o maggiore di <see cref="F:System.Byte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.Object)">
      <summary>Converte il valore dell'oggetto specificato in un intero senza segno a 8 bit.</summary>
      <param name="value">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" /> oppure <see langword="null" />.</param>
      <returns>Intero senza segno a 8 bit equivalente a <paramref name="value" /> oppure zero se <paramref name="value" /> è <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">Il formato di <paramref name="value" /> non è quello della proprietà per un valore di <see cref="T:System.Byte" />.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> non implementa <see cref="T:System.IConvertible" />.  
In alternativa 
La conversione da <paramref name="value" /> al tipo <see cref="T:System.Byte" /> non è supportata.</exception>
      <exception cref="T:System.OverflowException">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Byte.MinValue" /> o maggiore di <see cref="F:System.Byte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.Object,System.IFormatProvider)">
      <summary>Converte il valore dell'oggetto specificato in un intero senza segno a 8 bit mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</summary>
      <param name="value">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" />.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <returns>Intero senza segno a 8 bit equivalente a <paramref name="value" /> oppure zero se <paramref name="value" /> è <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">Il formato di <paramref name="value" /> non è quello della proprietà per un valore di <see cref="T:System.Byte" />.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> non implementa <see cref="T:System.IConvertible" />.  
In alternativa 
La conversione da <paramref name="value" /> al tipo <see cref="T:System.Byte" /> non è supportata.</exception>
      <exception cref="T:System.OverflowException">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Byte.MinValue" /> o maggiore di <see cref="F:System.Byte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.SByte)">
      <summary>Converte il valore dell'intero con segno a 8 bit specificato in un intero senza segno a 8 bit equivalente.</summary>
      <param name="value">Intero con segno a 8 bit da convertire.</param>
      <returns>Intero senza segno a 8 bit equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è minore di <see cref="F:System.Byte.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.Single)">
      <summary>Converte il valore del numero a virgola mobile a precisione singola specificato in un intero senza segno a 8 bit equivalente.</summary>
      <param name="value">Numero a virgola mobile a precisione singola.</param>
      <returns>
        <paramref name="value" />, arrotondato all'intero senza segno a 8 bit più vicino. Se <paramref name="value" /> si trova a metà tra due numeri interi, viene restituito il numero intero pari; vale a dire, 4,5 viene convertito in 4, mentre 5,5 viene convertito in 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è maggiore di <see cref="F:System.Byte.MaxValue" /> o minore di <see cref="F:System.Byte.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.String)">
      <summary>Converte la rappresentazione di stringa specificata di un numero in un intero senza segno a 8 bit equivalente.</summary>
      <param name="value">Stringa che contiene il numero da convertire.</param>
      <returns>Intero senza segno a 8 bit equivalente a <paramref name="value" /> oppure zero se <paramref name="value" /> è <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> non è costituito da un segno facoltativo seguito da una sequenza di cifre (da 0 a 9).</exception>
      <exception cref="T:System.OverflowException">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Byte.MinValue" /> o maggiore di <see cref="F:System.Byte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.String,System.IFormatProvider)">
      <summary>Converte la rappresentazione di stringa specificata di un numero in un intero senza segno a 8 bit equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</summary>
      <param name="value">Stringa che contiene il numero da convertire.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <returns>Intero senza segno a 8 bit equivalente a <paramref name="value" /> oppure zero se <paramref name="value" /> è <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> non è costituito da un segno facoltativo seguito da una sequenza di cifre (da 0 a 9).</exception>
      <exception cref="T:System.OverflowException">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Byte.MinValue" /> o maggiore di <see cref="F:System.Byte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.String,System.Int32)">
      <summary>Converte la rappresentazione di stringa di un numero in una base specificata nell'intero senza segno a 8 bit equivalente.</summary>
      <param name="value">Stringa che contiene il numero da convertire.</param>
      <param name="fromBase">Base del numero in <paramref name="value" />, che deve essere 2, 8, 10 o 16.</param>
      <returns>Intero senza segno a 8 bit equivalente al numero in <paramref name="value" /> oppure 0 (zero) se <paramref name="value" /> è <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentException">Il valore di <paramref name="fromBase" /> non è 2, 8, 10 o 16.  
-oppure- 
 <paramref name="value" />, che rappresenta un numero senza segno non in base 10, è preceduto da un segno negativo.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> è <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> contiene un carattere che corrisponde a una cifra non valida nella base specificata da <paramref name="fromBase" />. Il messaggio di eccezione indica che non ci sono cifre da convertire se il primo carattere in <paramref name="value" /> non è valido; in caso contrario, il messaggio indica che <paramref name="value" /> contiene caratteri finali non validi.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" />, che rappresenta un numero senza segno in base 10, è preceduto da un segno negativo.  
-oppure- 
 L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Byte.MinValue" /> o maggiore di <see cref="F:System.Byte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.UInt16)">
      <summary>Converte il valore dell'intero senza segno a 16 bit specificato in un intero senza segno a 8 bit equivalente.</summary>
      <param name="value">Intero senza segno a 16 bit da convertire.</param>
      <returns>Intero senza segno a 8 bit equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è maggiore di <see cref="F:System.Byte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.UInt32)">
      <summary>Converte il valore dell'intero senza segno a 32 bit specificato in un intero senza segno a 8 bit equivalente.</summary>
      <param name="value">Intero senza segno a 32 bit da convertire.</param>
      <returns>Intero senza segno a 8 bit equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è maggiore di <see cref="F:System.Byte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.UInt64)">
      <summary>Converte il valore dell'intero senza segno a 64 bit specificato in un intero senza segno a 8 bit equivalente.</summary>
      <param name="value">Intero senza segno a 64 bit da convertire.</param>
      <returns>Intero senza segno a 8 bit equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è maggiore di <see cref="F:System.Byte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToChar(System.Boolean)">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">Valore booleano da convertire.</param>
      <returns>Questa conversione non è supportata. Non vengono restituiti valori.</returns>
      <exception cref="T:System.InvalidCastException">Questa conversione non è supportata.</exception>
    </member>
    <member name="M:System.Convert.ToChar(System.Byte)">
      <summary>Converte il valore dell'intero senza segno a 8 bit specificato nel carattere Unicode equivalente.</summary>
      <param name="value">Intero senza segno a 8 bit da convertire.</param>
      <returns>Carattere Unicode equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToChar(System.Char)">
      <summary>Restituisce il valore del carattere Unicode specificato; non viene eseguita alcuna conversione effettiva.</summary>
      <param name="value">Carattere Unicode da restituire.</param>
      <returns>
        <paramref name="value" /> viene restituito invariato.</returns>
    </member>
    <member name="M:System.Convert.ToChar(System.DateTime)">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">Valore di data e ora da convertire.</param>
      <returns>Questa conversione non è supportata. Non vengono restituiti valori.</returns>
      <exception cref="T:System.InvalidCastException">Questa conversione non è supportata.</exception>
    </member>
    <member name="M:System.Convert.ToChar(System.Decimal)">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">Numero decimale da convertire.</param>
      <returns>Questa conversione non è supportata. Non vengono restituiti valori.</returns>
      <exception cref="T:System.InvalidCastException">Questa conversione non è supportata.</exception>
    </member>
    <member name="M:System.Convert.ToChar(System.Double)">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">Numero a virgola mobile a precisione doppia da convertire.</param>
      <returns>Questa conversione non è supportata. Non vengono restituiti valori.</returns>
      <exception cref="T:System.InvalidCastException">Questa conversione non è supportata.</exception>
    </member>
    <member name="M:System.Convert.ToChar(System.Int16)">
      <summary>Converte il valore dell'intero con segno a 16 bit specificato nel carattere Unicode equivalente.</summary>
      <param name="value">Intero con segno a 16 bit da convertire.</param>
      <returns>Carattere Unicode equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è minore di <see cref="F:System.Char.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToChar(System.Int32)">
      <summary>Converte il valore dell'intero con segno a 32 bit specificato nel carattere Unicode equivalente.</summary>
      <param name="value">Intero con segno a 32 bit da convertire.</param>
      <returns>Carattere Unicode equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è minore di <see cref="F:System.Char.MinValue" /> o maggiore di <see cref="F:System.Char.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToChar(System.Int64)">
      <summary>Converte il valore dell'intero con segno a 64 bit specificato nel carattere Unicode equivalente.</summary>
      <param name="value">Intero con segno a 64 bit da convertire.</param>
      <returns>Carattere Unicode equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è minore di <see cref="F:System.Char.MinValue" /> o maggiore di <see cref="F:System.Char.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToChar(System.Object)">
      <summary>Converte il valore dell'oggetto specificato in un carattere Unicode.</summary>
      <param name="value">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" />.</param>
      <returns>Carattere Unicode equivalente a value oppure <see cref="F:System.Char.MinValue" /> se <paramref name="value" /> è <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è una stringa Null.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> non implementa l'interfaccia <see cref="T:System.IConvertible" />.  
-oppure- 
La conversione di <paramref name="value" /> in <see cref="T:System.Char" /> non è supportata.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è minore di <see cref="F:System.Char.MinValue" /> o maggiore di <see cref="F:System.Char.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToChar(System.Object,System.IFormatProvider)">
      <summary>Converte il valore dell'oggetto specificato nel relativo carattere Unicode equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</summary>
      <param name="value">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" />.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <returns>Carattere Unicode equivalente a <paramref name="value" /> oppure <see cref="F:System.Char.MinValue" /> se <paramref name="value" /> è <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è una stringa Null.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> non implementa l'interfaccia <see cref="T:System.IConvertible" />.  
-oppure- 
La conversione di <paramref name="value" /> in <see cref="T:System.Char" /> non è supportata.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è minore di <see cref="F:System.Char.MinValue" /> o maggiore di <see cref="F:System.Char.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToChar(System.SByte)">
      <summary>Converte il valore dell'intero con segno a 8 bit specificato nel carattere Unicode equivalente.</summary>
      <param name="value">Intero con segno a 8 bit da convertire.</param>
      <returns>Carattere Unicode equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è minore di <see cref="F:System.Char.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToChar(System.Single)">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">Numero a virgola mobile a precisione singola da convertire.</param>
      <returns>Questa conversione non è supportata. Non vengono restituiti valori.</returns>
      <exception cref="T:System.InvalidCastException">Questa conversione non è supportata.</exception>
    </member>
    <member name="M:System.Convert.ToChar(System.String)">
      <summary>Converte il primo carattere di una stringa specificata in un carattere Unicode.</summary>
      <param name="value">Stringa di lunghezza 1.</param>
      <returns>Carattere Unicode equivalente al primo e unico carattere in <paramref name="value" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">La lunghezza di <paramref name="value" /> non è 1.</exception>
    </member>
    <member name="M:System.Convert.ToChar(System.String,System.IFormatProvider)">
      <summary>Converte il primo carattere di una stringa specificata in un carattere Unicode mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</summary>
      <param name="value">Stringa di lunghezza 1 oppure <see langword="null" />.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura. Questo parametro viene ignorato.</param>
      <returns>Carattere Unicode equivalente al primo e unico carattere in <paramref name="value" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">La lunghezza di <paramref name="value" /> non è 1.</exception>
    </member>
    <member name="M:System.Convert.ToChar(System.UInt16)">
      <summary>Converte il valore dell'intero senza segno a 16 bit specificato nel carattere Unicode equivalente.</summary>
      <param name="value">Intero senza segno a 16 bit da convertire.</param>
      <returns>Carattere Unicode equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToChar(System.UInt32)">
      <summary>Converte il valore dell'intero senza segno a 32 bit specificato nel carattere Unicode equivalente.</summary>
      <param name="value">Intero senza segno a 32 bit da convertire.</param>
      <returns>Carattere Unicode equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è maggiore di <see cref="F:System.Char.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToChar(System.UInt64)">
      <summary>Converte il valore dell'intero senza segno a 64 bit specificato nel carattere Unicode equivalente.</summary>
      <param name="value">Intero senza segno a 64 bit da convertire.</param>
      <returns>Carattere Unicode equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è maggiore di <see cref="F:System.Char.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.Boolean)">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">Valore booleano da convertire.</param>
      <returns>Questa conversione non è supportata. Non vengono restituiti valori.</returns>
      <exception cref="T:System.InvalidCastException">Questa conversione non è supportata.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.Byte)">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">Intero senza segno a 8 bit da convertire.</param>
      <returns>Questa conversione non è supportata. Non vengono restituiti valori.</returns>
      <exception cref="T:System.InvalidCastException">Questa conversione non è supportata.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.Char)">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">Carattere Unicode da convertire.</param>
      <returns>Questa conversione non è supportata. Non vengono restituiti valori.</returns>
      <exception cref="T:System.InvalidCastException">Questa conversione non è supportata.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.DateTime)">
      <summary>Restituisce l'oggetto <see cref="T:System.DateTime" /> specificato; di fatto, non viene eseguita alcuna conversione.</summary>
      <param name="value">Valore di data e ora.</param>
      <returns>
        <paramref name="value" /> viene restituito invariato.</returns>
    </member>
    <member name="M:System.Convert.ToDateTime(System.Decimal)">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">Numero da convertire.</param>
      <returns>Questa conversione non è supportata. Non vengono restituiti valori.</returns>
      <exception cref="T:System.InvalidCastException">Questa conversione non è supportata.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.Double)">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">Valore a virgola mobile e con precisione doppia da convertire.</param>
      <returns>Questa conversione non è supportata. Non vengono restituiti valori.</returns>
      <exception cref="T:System.InvalidCastException">Questa conversione non è supportata.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.Int16)">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">Intero con segno a 16 bit da convertire.</param>
      <returns>Questa conversione non è supportata. Non vengono restituiti valori.</returns>
      <exception cref="T:System.InvalidCastException">Questa conversione non è supportata.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.Int32)">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">Intero con segno a 32 bit da convertire.</param>
      <returns>Questa conversione non è supportata. Non vengono restituiti valori.</returns>
      <exception cref="T:System.InvalidCastException">Questa conversione non è supportata.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.Int64)">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">Intero con segno a 64 bit da convertire.</param>
      <returns>Questa conversione non è supportata. Non vengono restituiti valori.</returns>
      <exception cref="T:System.InvalidCastException">Questa conversione non è supportata.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.Object)">
      <summary>Converte il valore dell'oggetto specificato in un oggetto <see cref="T:System.DateTime" />.</summary>
      <param name="value">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" /> oppure <see langword="null" />.</param>
      <returns>Data e ora equivalenti al valore di <paramref name="value" /> oppure data e ora equivalenti a <see cref="F:System.DateTime.MinValue" /> se <paramref name="value" /> è <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">Valore di data e ora <paramref name="value" /> non valido.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> non implementa l'interfaccia <see cref="T:System.IConvertible" />.  
In alternativa 
La conversione non è supportata.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.Object,System.IFormatProvider)">
      <summary>Converte il valore dell'oggetto specificato in un oggetto <see cref="T:System.DateTime" /> mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</summary>
      <param name="value">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" />.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <returns>Data e ora equivalenti al valore di <paramref name="value" /> oppure data e ora equivalenti a <see cref="F:System.DateTime.MinValue" /> se <paramref name="value" /> è <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">Valore di data e ora <paramref name="value" /> non valido.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> non implementa l'interfaccia <see cref="T:System.IConvertible" />.  
In alternativa 
La conversione non è supportata.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.SByte)">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">Intero con segno a 8 bit da convertire.</param>
      <returns>Questa conversione non è supportata. Non vengono restituiti valori.</returns>
      <exception cref="T:System.InvalidCastException">Questa conversione non è supportata.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.Single)">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">Valore a virgola mobile a precisione singola da convertire.</param>
      <returns>Questa conversione non è supportata. Non vengono restituiti valori.</returns>
      <exception cref="T:System.InvalidCastException">Questa conversione non è supportata.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.String)">
      <summary>Converte la rappresentazione di stringa specificata di una data e un'ora in un valore di data e ora equivalente.</summary>
      <param name="value">Rappresentazione di stringa di una data e ora.</param>
      <returns>Data e ora equivalenti al valore di <paramref name="value" /> oppure data e ora equivalenti a <see cref="F:System.DateTime.MinValue" /> se <paramref name="value" /> è <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> non è una stringa di data e ora formattata correttamente.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.String,System.IFormatProvider)">
      <summary>Converte la rappresentazione di stringa specificata di un numero in un valore di data e ora equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</summary>
      <param name="value">Stringa che contiene una data e un'ora da convertire.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <returns>Data e ora equivalenti al valore di <paramref name="value" /> oppure data e ora equivalenti a <see cref="F:System.DateTime.MinValue" /> se <paramref name="value" /> è <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> non è una stringa di data e ora formattata correttamente.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.UInt16)">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">Intero senza segno a 16 bit da convertire.</param>
      <returns>Questa conversione non è supportata. Non vengono restituiti valori.</returns>
      <exception cref="T:System.InvalidCastException">Questa conversione non è supportata.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.UInt32)">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">Intero senza segno a 32 bit da convertire.</param>
      <returns>Questa conversione non è supportata. Non vengono restituiti valori.</returns>
      <exception cref="T:System.InvalidCastException">Questa conversione non è supportata.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.UInt64)">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">Intero senza segno a 64 bit da convertire.</param>
      <returns>Questa conversione non è supportata. Non vengono restituiti valori.</returns>
      <exception cref="T:System.InvalidCastException">Questa conversione non è supportata.</exception>
    </member>
    <member name="M:System.Convert.ToDecimal(System.Boolean)">
      <summary>Converte il valore booleano specificato nel numero decimale equivalente.</summary>
      <param name="value">Valore booleano da convertire.</param>
      <returns>Il numero 1 se <paramref name="value" /> è <see langword="true" />; in caso contrario, 0.</returns>
    </member>
    <member name="M:System.Convert.ToDecimal(System.Byte)">
      <summary>Converte il valore dell'intero senza segno a 8 bit specificato nel numero decimale equivalente.</summary>
      <param name="value">Intero senza segno a 8 bit da convertire.</param>
      <returns>Numero decimale equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToDecimal(System.Char)">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">Carattere Unicode da convertire.</param>
      <returns>Questa conversione non è supportata. Non vengono restituiti valori.</returns>
      <exception cref="T:System.InvalidCastException">Questa conversione non è supportata.</exception>
    </member>
    <member name="M:System.Convert.ToDecimal(System.DateTime)">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">Valore di data e ora da convertire.</param>
      <returns>Questa conversione non è supportata. Non vengono restituiti valori.</returns>
      <exception cref="T:System.InvalidCastException">Questa conversione non è supportata.</exception>
    </member>
    <member name="M:System.Convert.ToDecimal(System.Decimal)">
      <summary>Restituisce il numero decimale specificato; non viene eseguita alcuna conversione effettiva.</summary>
      <param name="value">Numero decimale.</param>
      <returns>
        <paramref name="value" /> viene restituito invariato.</returns>
    </member>
    <member name="M:System.Convert.ToDecimal(System.Double)">
      <summary>Converte il valore del numero a virgola mobile a precisione doppia specificato in un numero decimale equivalente.</summary>
      <param name="value">Numero a virgola mobile a precisione doppia da convertire.</param>
      <returns>Numero decimale equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è maggiore di <see cref="F:System.Decimal.MaxValue" /> o minore di <see cref="F:System.Decimal.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToDecimal(System.Int16)">
      <summary>Converte il valore dell'intero con segno a 16 bit specificato in un numero decimale equivalente.</summary>
      <param name="value">Intero con segno a 16 bit da convertire.</param>
      <returns>Numero decimale equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToDecimal(System.Int32)">
      <summary>Converte il valore dell'intero con segno a 32 bit specificato in un numero decimale equivalente.</summary>
      <param name="value">Intero con segno a 32 bit da convertire.</param>
      <returns>Numero decimale equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToDecimal(System.Int64)">
      <summary>Converte il valore dell'intero con segno a 64 bit specificato in un numero decimale equivalente.</summary>
      <param name="value">Intero con segno a 64 bit da convertire.</param>
      <returns>Numero decimale equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToDecimal(System.Object)">
      <summary>Converte il valore dell'oggetto specificato in un numero decimale equivalente.</summary>
      <param name="value">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" /> oppure <see langword="null" />.</param>
      <returns>Numero decimale equivalente a <paramref name="value" /> oppure 0 (zero) se <paramref name="value" /> è <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">Il formato di <paramref name="value" /> non è appropriato per un tipo <see cref="T:System.Decimal" />.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> non implementa l'interfaccia <see cref="T:System.IConvertible" />.  
-oppure- 
La conversione non è supportata.</exception>
      <exception cref="T:System.OverflowException">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Decimal.MinValue" /> o maggiore di <see cref="F:System.Decimal.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToDecimal(System.Object,System.IFormatProvider)">
      <summary>Converte il valore dell'oggetto specificato in un numero decimale equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</summary>
      <param name="value">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" />.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <returns>Numero decimale equivalente a <paramref name="value" /> oppure 0 (zero) se <paramref name="value" /> è <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">Il formato di <paramref name="value" /> non è appropriato per un tipo <see cref="T:System.Decimal" />.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> non implementa l'interfaccia <see cref="T:System.IConvertible" />.  
In alternativa 
La conversione non è supportata.</exception>
      <exception cref="T:System.OverflowException">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Decimal.MinValue" /> o maggiore di <see cref="F:System.Decimal.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToDecimal(System.SByte)">
      <summary>Converte il valore dell'intero con segno a 8 bit specificato nel numero decimale equivalente.</summary>
      <param name="value">Intero con segno a 8 bit da convertire.</param>
      <returns>Numero decimale equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToDecimal(System.Single)">
      <summary>Converte il valore del numero a virgola mobile e con precisione singola specificato nel numero decimale equivalente.</summary>
      <param name="value">Numero a virgola mobile a precisione singola da convertire.</param>
      <returns>Numero decimale equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è maggiore di <see cref="F:System.Decimal.MaxValue" /> o minore di <see cref="F:System.Decimal.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToDecimal(System.String)">
      <summary>Converte la rappresentazione di stringa specificata di un numero in un numero decimale equivalente.</summary>
      <param name="value">Stringa contenente un numero da convertire.</param>
      <returns>Numero decimale equivalente al numero in <paramref name="value" /> oppure 0 (zero) se <paramref name="value" /> è <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> non è un numero in formato valido.</exception>
      <exception cref="T:System.OverflowException">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Decimal.MinValue" /> o maggiore di <see cref="F:System.Decimal.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToDecimal(System.String,System.IFormatProvider)">
      <summary>Converte la rappresentazione di stringa specificata di un numero in un numero decimale equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</summary>
      <param name="value">Stringa contenente un numero da convertire.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <returns>Numero decimale equivalente al numero in <paramref name="value" /> oppure 0 (zero) se <paramref name="value" /> è <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> non è un numero in formato valido.</exception>
      <exception cref="T:System.OverflowException">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Decimal.MinValue" /> o maggiore di <see cref="F:System.Decimal.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToDecimal(System.UInt16)">
      <summary>Converte il valore dell'intero senza segno a 16 bit specificato in un numero decimale equivalente.</summary>
      <param name="value">Intero senza segno a 16 bit da convertire.</param>
      <returns>Numero decimale equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToDecimal(System.UInt32)">
      <summary>Converte il valore dell'intero senza segno a 32 bit specificato in un numero decimale equivalente.</summary>
      <param name="value">Intero senza segno a 32 bit da convertire.</param>
      <returns>Numero decimale equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToDecimal(System.UInt64)">
      <summary>Converte il valore dell'intero senza segno a 64 bit specificato in un numero decimale equivalente.</summary>
      <param name="value">Intero senza segno a 64 bit da convertire.</param>
      <returns>Numero decimale equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToDouble(System.Boolean)">
      <summary>Converte il valore booleano specificato nel numero a virgola mobile a precisione doppia equivalente.</summary>
      <param name="value">Valore booleano da convertire.</param>
      <returns>Il numero 1 se <paramref name="value" /> è <see langword="true" />; in caso contrario, 0.</returns>
    </member>
    <member name="M:System.Convert.ToDouble(System.Byte)">
      <summary>Converte il valore dell'intero senza segno a 8 bit specificato nel numero a virgola mobile e con precisione doppia equivalente.</summary>
      <param name="value">Intero senza segno a 8 bit da convertire.</param>
      <returns>Numero a virgola mobile a precisione doppia equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToDouble(System.Char)">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">Carattere Unicode da convertire.</param>
      <returns>Questa conversione non è supportata. Non vengono restituiti valori.</returns>
      <exception cref="T:System.InvalidCastException">Questa conversione non è supportata.</exception>
    </member>
    <member name="M:System.Convert.ToDouble(System.DateTime)">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">Valore di data e ora da convertire.</param>
      <returns>Questa conversione non è supportata. Non vengono restituiti valori.</returns>
      <exception cref="T:System.InvalidCastException">Questa conversione non è supportata.</exception>
    </member>
    <member name="M:System.Convert.ToDouble(System.Decimal)">
      <summary>Converte il valore del numero decimale specificato in un numero a virgola mobile e con precisione doppia equivalente.</summary>
      <param name="value">Numero decimale da convertire.</param>
      <returns>Numero a virgola mobile a precisione doppia equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToDouble(System.Double)">
      <summary>Restituisce il numero a virgola mobile a precisione doppia specificato; non viene eseguita alcuna conversione effettiva.</summary>
      <param name="value">Numero a virgola mobile a precisione doppia da restituire.</param>
      <returns>
        <paramref name="value" /> viene restituito invariato.</returns>
    </member>
    <member name="M:System.Convert.ToDouble(System.Int16)">
      <summary>Converte il valore dell'intero con segno a 16 bit specificato in un numero a virgola mobile a precisione doppia equivalente.</summary>
      <param name="value">Intero con segno a 16 bit da convertire.</param>
      <returns>Numero a virgola mobile e con precisione doppia equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToDouble(System.Int32)">
      <summary>Converte il valore dell'intero con segno a 32 bit specificato in un numero a virgola mobile e con precisione doppia equivalente.</summary>
      <param name="value">Intero con segno a 32 bit da convertire.</param>
      <returns>Numero a virgola mobile a precisione doppia equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToDouble(System.Int64)">
      <summary>Converte il valore dell'intero con segno a 64 bit specificato in un numero a virgola mobile e con precisione doppia equivalente.</summary>
      <param name="value">Intero con segno a 64 bit da convertire.</param>
      <returns>Numero a virgola mobile a precisione doppia equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToDouble(System.Object)">
      <summary>Converte il valore dell'oggetto specificato in un numero a virgola mobile e con precisione doppia.</summary>
      <param name="value">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" /> oppure <see langword="null" />.</param>
      <returns>Numero a virgola mobile e con precisione doppia equivalente a <paramref name="value" /> oppure zero se <paramref name="value" /> è <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">Il formato di <paramref name="value" /> non è appropriato per un tipo <see cref="T:System.Double" />.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> non implementa l'interfaccia <see cref="T:System.IConvertible" />.  
-oppure- 
La conversione non è supportata.</exception>
      <exception cref="T:System.OverflowException">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Double.MinValue" /> o maggiore di <see cref="F:System.Double.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToDouble(System.Object,System.IFormatProvider)">
      <summary>Converte il valore dell'oggetto specificato in un numero a virgola mobile e con precisione doppia mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</summary>
      <param name="value">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" />.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <returns>Numero a virgola mobile e con precisione doppia equivalente a <paramref name="value" /> oppure zero se <paramref name="value" /> è <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">Il formato di <paramref name="value" /> non è appropriato per un tipo <see cref="T:System.Double" />.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> non implementa l'interfaccia <see cref="T:System.IConvertible" />.</exception>
      <exception cref="T:System.OverflowException">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Double.MinValue" /> o maggiore di <see cref="F:System.Double.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToDouble(System.SByte)">
      <summary>Converte il valore dell'intero con segno a 8 bit specificato nel numero a virgola mobile a precisione doppia equivalente.</summary>
      <param name="value">Intero con segno a 8 bit da convertire.</param>
      <returns>Intero con segno a 8 bit equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToDouble(System.Single)">
      <summary>Converte il valore del numero a virgola mobile e con precisione singola specificato in un numero a virgola mobile e con precisione doppia equivalente.</summary>
      <param name="value">Numero a virgola mobile e con precisione singola.</param>
      <returns>Numero a virgola mobile a precisione doppia equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToDouble(System.String)">
      <summary>Converte la rappresentazione di stringa specificata di un numero in un numero a virgola mobile a precisione doppia equivalente.</summary>
      <param name="value">Stringa che contiene il numero da convertire.</param>
      <returns>Numero a virgola mobile e con precisione doppia equivalente al numero in <paramref name="value" /> oppure 0 (zero) se <paramref name="value" /> è <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> non è un numero in formato valido.</exception>
      <exception cref="T:System.OverflowException">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Double.MinValue" /> o maggiore di <see cref="F:System.Double.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToDouble(System.String,System.IFormatProvider)">
      <summary>Converte la rappresentazione di stringa specificata di un numero in un numero a virgola mobile a precisione doppia equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</summary>
      <param name="value">Stringa che contiene il numero da convertire.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <returns>Numero a virgola mobile e con precisione doppia equivalente al numero in <paramref name="value" /> oppure 0 (zero) se <paramref name="value" /> è <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> non è un numero in formato valido.</exception>
      <exception cref="T:System.OverflowException">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Double.MinValue" /> o maggiore di <see cref="F:System.Double.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToDouble(System.UInt16)">
      <summary>Converte il valore dell'intero senza segno a 16 bit specificato nel numero a virgola mobile e con precisione doppia equivalente.</summary>
      <param name="value">Intero senza segno a 16 bit da convertire.</param>
      <returns>Numero a virgola mobile a precisione doppia equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToDouble(System.UInt32)">
      <summary>Converte il valore dell'intero senza segno a 32 bit specificato in un numero a virgola mobile e con precisione doppia equivalente.</summary>
      <param name="value">Intero senza segno a 32 bit da convertire.</param>
      <returns>Numero a virgola mobile a precisione doppia equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToDouble(System.UInt64)">
      <summary>Converte il valore dell'intero senza segno a 64 bit specificato in un numero a virgola mobile a precisione doppia equivalente.</summary>
      <param name="value">Intero senza segno a 64 bit da convertire.</param>
      <returns>Numero a virgola mobile a precisione doppia equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToInt16(System.Boolean)">
      <summary>Converte il valore booleano specificato nell'intero con segno a 16 bit equivalente.</summary>
      <param name="value">Valore booleano da convertire.</param>
      <returns>Il numero 1 se <paramref name="value" /> è <see langword="true" />; in caso contrario, 0.</returns>
    </member>
    <member name="M:System.Convert.ToInt16(System.Byte)">
      <summary>Converte il valore dell'intero senza segno a 8 bit specificato nell'intero con segno a 16 bit equivalente.</summary>
      <param name="value">Intero senza segno a 8 bit da convertire.</param>
      <returns>Intero con segno a 16 bit equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToInt16(System.Char)">
      <summary>Converte il valore del carattere Unicode specificato nell'intero con segno a 16 bit equivalente.</summary>
      <param name="value">Carattere Unicode da convertire.</param>
      <returns>Intero con segno a 16 bit equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è maggiore di <see cref="F:System.Int16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt16(System.DateTime)">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">Valore di data e ora da convertire.</param>
      <returns>Questa conversione non è supportata. Non vengono restituiti valori.</returns>
      <exception cref="T:System.InvalidCastException">Questa conversione non è supportata.</exception>
    </member>
    <member name="M:System.Convert.ToInt16(System.Decimal)">
      <summary>Converte il valore del numero decimale specificato in un intero con segno a 16 bit equivalente.</summary>
      <param name="value">Numero decimale da convertire.</param>
      <returns>
        <paramref name="value" />, arrotondato all'intero con segno a 16 bit più vicino. Se <paramref name="value" /> si trova a metà tra due numeri interi, viene restituito il numero intero pari; vale a dire, 4,5 viene convertito in 4, mentre 5,5 viene convertito in 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è maggiore di <see cref="F:System.Int16.MaxValue" /> o minore di <see cref="F:System.Int16.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt16(System.Double)">
      <summary>Converte il valore del numero a virgola mobile e con precisione doppia specificato in un intero con segno a 16 bit equivalente.</summary>
      <param name="value">Numero a virgola mobile a precisione doppia da convertire.</param>
      <returns>
        <paramref name="value" />, arrotondato all'intero con segno a 16 bit più vicino. Se <paramref name="value" /> si trova a metà tra due numeri interi, viene restituito il numero intero pari; vale a dire, 4,5 viene convertito in 4, mentre 5,5 viene convertito in 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è maggiore di <see cref="F:System.Int16.MaxValue" /> o minore di <see cref="F:System.Int16.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt16(System.Int16)">
      <summary>Restituisce l'intero con segno a 16 bit specificato; non viene eseguita alcuna conversione effettiva.</summary>
      <param name="value">Intero con segno a 16 bit da restituire.</param>
      <returns>
        <paramref name="value" /> viene restituito invariato.</returns>
    </member>
    <member name="M:System.Convert.ToInt16(System.Int32)">
      <summary>Converte il valore dell'intero con segno a 32 bit specificato in un intero con segno a 16 bit equivalente.</summary>
      <param name="value">Intero con segno a 32 bit da convertire.</param>
      <returns>Intero con segno a 16 bit equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è maggiore di <see cref="F:System.Int16.MaxValue" /> o minore di <see cref="F:System.Int16.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt16(System.Int64)">
      <summary>Converte il valore dell'intero con segno a 64 bit specificato in un intero con segno a 16 bit equivalente.</summary>
      <param name="value">Intero con segno a 64 bit da convertire.</param>
      <returns>Intero con segno a 16 bit equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è maggiore di <see cref="F:System.Int16.MaxValue" /> o minore di <see cref="F:System.Int16.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt16(System.Object)">
      <summary>Converte il valore dell'oggetto specificato in un intero con segno a 16 bit.</summary>
      <param name="value">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" /> oppure <see langword="null" />.</param>
      <returns>Intero con segno a 16 bit equivalente a <paramref name="value" /> oppure zero se <paramref name="value" /> è <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">Il formato di <paramref name="value" /> non è appropriato per un tipo <see cref="T:System.Int16" />.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> non implementa l'interfaccia <see cref="T:System.IConvertible" />.  
-oppure- 
La conversione non è supportata.</exception>
      <exception cref="T:System.OverflowException">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Int16.MinValue" /> o maggiore di <see cref="F:System.Int16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt16(System.Object,System.IFormatProvider)">
      <summary>Converte il valore dell'oggetto specificato in un intero con segno a 16 bit mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</summary>
      <param name="value">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" />.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <returns>Intero con segno a 16 bit equivalente a <paramref name="value" /> oppure zero se <paramref name="value" /> è <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">Il formato di <paramref name="value" /> non è appropriato per un tipo <see cref="T:System.Int16" />.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> non implementa <see cref="T:System.IConvertible" />.</exception>
      <exception cref="T:System.OverflowException">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Int16.MinValue" /> o maggiore di <see cref="F:System.Int16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt16(System.SByte)">
      <summary>Converte il valore dell'intero con segno a 8 bit specificato nell'intero con segno a 16 bit equivalente.</summary>
      <param name="value">Intero con segno a 8 bit da convertire.</param>
      <returns>Intero con segno a 8 bit equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToInt16(System.Single)">
      <summary>Converte il valore del numero a virgola mobile a precisione singola specificato in un intero con segno a 16 bit equivalente.</summary>
      <param name="value">Numero a virgola mobile a precisione singola da convertire.</param>
      <returns>
        <paramref name="value" />, arrotondato all'intero con segno a 16 bit più vicino. Se <paramref name="value" /> si trova a metà tra due numeri interi, viene restituito il numero intero pari; vale a dire, 4,5 viene convertito in 4, mentre 5,5 viene convertito in 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è maggiore di <see cref="F:System.Int16.MaxValue" /> o minore di <see cref="F:System.Int16.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt16(System.String)">
      <summary>Converte la rappresentazione di stringa specificata di un numero in un intero con segno a 16 bit equivalente.</summary>
      <param name="value">Stringa che contiene il numero da convertire.</param>
      <returns>Intero con segno a 16 bit equivalente al numero in <paramref name="value" /> oppure 0 (zero) se <paramref name="value" /> è <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> non è costituito da un segno facoltativo seguito da una sequenza di cifre (da 0 a 9).</exception>
      <exception cref="T:System.OverflowException">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Int16.MinValue" /> o maggiore di <see cref="F:System.Int16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt16(System.String,System.IFormatProvider)">
      <summary>Converte la rappresentazione di stringa specificata di un numero in un intero con segno a 16 bit equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</summary>
      <param name="value">Stringa che contiene il numero da convertire.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <returns>Intero con segno a 16 bit equivalente al numero in <paramref name="value" /> oppure 0 (zero) se <paramref name="value" /> è <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> non è costituito da un segno facoltativo seguito da una sequenza di cifre (da 0 a 9).</exception>
      <exception cref="T:System.OverflowException">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Int16.MinValue" /> o maggiore di <see cref="F:System.Int16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt16(System.String,System.Int32)">
      <summary>Converte la rappresentazione di stringa di un numero in una base specificata nell'intero con segno a 16 bit equivalente.</summary>
      <param name="value">Stringa che contiene il numero da convertire.</param>
      <param name="fromBase">Base del numero in <paramref name="value" />, che deve essere 2, 8, 10 o 16.</param>
      <returns>Intero con segno a 16 bit equivalente al numero in <paramref name="value" /> oppure 0 (zero) se <paramref name="value" /> è <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentException">Il valore di <paramref name="fromBase" /> non è 2, 8, 10 o 16.  
-oppure- 
 <paramref name="value" />, che rappresenta un numero con segno non in base 10, è preceduto da un segno negativo.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> è <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> contiene un carattere che corrisponde a una cifra non valida nella base specificata da <paramref name="fromBase" />. Il messaggio di eccezione indica che non ci sono cifre da convertire se il primo carattere in <paramref name="value" /> non è valido; in caso contrario, il messaggio indica che <paramref name="value" /> contiene caratteri finali non validi.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" />, che rappresenta un numero con segno non in base 10, è preceduto da un segno negativo.  
In alternativa 
 L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Int16.MinValue" /> o maggiore di <see cref="F:System.Int16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt16(System.UInt16)">
      <summary>Converte il valore dell'intero senza segno a 16 bit specificato nell'intero con segno a 16 bit equivalente.</summary>
      <param name="value">Intero senza segno a 16 bit da convertire.</param>
      <returns>Intero con segno a 16 bit equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è maggiore di <see cref="F:System.Int16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt16(System.UInt32)">
      <summary>Converte il valore dell'intero senza segno a 32 bit specificato in un intero con segno a 16 bit equivalente.</summary>
      <param name="value">Intero senza segno a 32 bit da convertire.</param>
      <returns>Intero con segno a 16 bit equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è maggiore di <see cref="F:System.Int16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt16(System.UInt64)">
      <summary>Converte il valore dell'intero senza segno a 64 bit specificato in un intero con segno a 16 bit equivalente.</summary>
      <param name="value">Intero senza segno a 64 bit da convertire.</param>
      <returns>Intero con segno a 16 bit equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è maggiore di <see cref="F:System.Int16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt32(System.Boolean)">
      <summary>Converte il valore booleano specificato nell'intero con segno a 32 bit equivalente.</summary>
      <param name="value">Valore booleano da convertire.</param>
      <returns>Il numero 1 se <paramref name="value" /> è <see langword="true" />; in caso contrario, 0.</returns>
    </member>
    <member name="M:System.Convert.ToInt32(System.Byte)">
      <summary>Converte il valore dell'intero senza segno a 8 bit specificato nell'intero con segno a 32 bit equivalente.</summary>
      <param name="value">Intero senza segno a 8 bit da convertire.</param>
      <returns>Intero con segno a 32 bit equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToInt32(System.Char)">
      <summary>Converte il valore del carattere Unicode specificato nell'intero con segno a 32 bit equivalente.</summary>
      <param name="value">Carattere Unicode da convertire.</param>
      <returns>Intero con segno a 32 bit equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToInt32(System.DateTime)">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">Valore di data e ora da convertire.</param>
      <returns>Questa conversione non è supportata. Non vengono restituiti valori.</returns>
      <exception cref="T:System.InvalidCastException">Questa conversione non è supportata.</exception>
    </member>
    <member name="M:System.Convert.ToInt32(System.Decimal)">
      <summary>Converte il valore del numero decimale specificato in un intero con segno a 32 bit equivalente.</summary>
      <param name="value">Numero decimale da convertire.</param>
      <returns>
        <paramref name="value" />, arrotondato all'intero con segno a 32 bit più vicino. Se <paramref name="value" /> si trova a metà tra due numeri interi, viene restituito il numero intero pari; vale a dire, 4,5 viene convertito in 4, mentre 5,5 viene convertito in 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è maggiore di <see cref="F:System.Int32.MaxValue" /> o minore di <see cref="F:System.Int32.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt32(System.Double)">
      <summary>Converte il valore del numero a virgola mobile a precisione doppia specificato in un intero con segno a 32 bit equivalente.</summary>
      <param name="value">Numero a virgola mobile a precisione doppia da convertire.</param>
      <returns>
        <paramref name="value" />, arrotondato all'intero con segno a 32 bit più vicino. Se <paramref name="value" /> si trova a metà tra due numeri interi, viene restituito il numero intero pari; vale a dire, 4,5 viene convertito in 4, mentre 5,5 viene convertito in 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è maggiore di <see cref="F:System.Int32.MaxValue" /> o minore di <see cref="F:System.Int32.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt32(System.Int16)">
      <summary>Converte il valore dell'intero con segno a 16 bit specificato in un intero con segno a 32 bit equivalente.</summary>
      <param name="value">Intero con segno a 16 bit da convertire.</param>
      <returns>Intero con segno a 32 bit equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToInt32(System.Int32)">
      <summary>Restituisce l'intero con segno a 32 bit specificato; non viene eseguita alcuna conversione effettiva.</summary>
      <param name="value">Intero con segno a 32 bit da restituire.</param>
      <returns>
        <paramref name="value" /> viene restituito invariato.</returns>
    </member>
    <member name="M:System.Convert.ToInt32(System.Int64)">
      <summary>Converte il valore dell'intero con segno a 64 bit specificato in un intero con segno a 32 bit equivalente.</summary>
      <param name="value">Intero con segno a 64 bit da convertire.</param>
      <returns>Intero con segno a 32 bit equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è maggiore di <see cref="F:System.Int32.MaxValue" /> o minore di <see cref="F:System.Int32.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt32(System.Object)">
      <summary>Converte il valore dell'oggetto specificato in un intero con segno a 32 bit.</summary>
      <param name="value">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" /> oppure <see langword="null" />.</param>
      <returns>Intero con segno a 32 bit equivalente a <paramref name="value" /> oppure zero se <paramref name="value" /> è <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">Il formato di <paramref name="value" /> non è appropriato.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> non implementa l'interfaccia <see cref="T:System.IConvertible" />.  
-oppure- 
La conversione non è supportata.</exception>
      <exception cref="T:System.OverflowException">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Int32.MinValue" /> o maggiore di <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt32(System.Object,System.IFormatProvider)">
      <summary>Converte il valore dell'oggetto specificato in un intero con segno a 32 bit mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</summary>
      <param name="value">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" />.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <returns>Intero con segno a 32 bit equivalente a <paramref name="value" /> oppure zero se <paramref name="value" /> è <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">Il formato di <paramref name="value" /> non è appropriato.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> non implementa <see cref="T:System.IConvertible" />.</exception>
      <exception cref="T:System.OverflowException">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Int32.MinValue" /> o maggiore di <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt32(System.SByte)">
      <summary>Converte il valore dell'intero con segno a 8 bit specificato nell'intero con segno a 32 bit equivalente.</summary>
      <param name="value">Intero con segno a 8 bit da convertire.</param>
      <returns>Intero con segno a 8 bit equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToInt32(System.Single)">
      <summary>Converte il valore del numero a virgola mobile a precisione singola specificato in un intero con segno a 32 bit equivalente.</summary>
      <param name="value">Numero a virgola mobile a precisione singola da convertire.</param>
      <returns>
        <paramref name="value" />, arrotondato all'intero con segno a 32 bit più vicino. Se <paramref name="value" /> si trova a metà tra due numeri interi, viene restituito il numero intero pari; vale a dire, 4,5 viene convertito in 4, mentre 5,5 viene convertito in 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è maggiore di <see cref="F:System.Int32.MaxValue" /> o minore di <see cref="F:System.Int32.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt32(System.String)">
      <summary>Converte la rappresentazione di stringa specificata di un numero in un intero con segno a 32 bit equivalente.</summary>
      <param name="value">Stringa che contiene il numero da convertire.</param>
      <returns>Intero con segno a 32 bit equivalente al numero in <paramref name="value" /> oppure 0 (zero) se <paramref name="value" /> è <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> non è costituito da un segno facoltativo seguito da una sequenza di cifre (da 0 a 9).</exception>
      <exception cref="T:System.OverflowException">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Int32.MinValue" /> o maggiore di <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt32(System.String,System.IFormatProvider)">
      <summary>Converte la rappresentazione di stringa specificata di un numero in un intero con segno a 32 bit equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</summary>
      <param name="value">Stringa che contiene il numero da convertire.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <returns>Intero con segno a 32 bit equivalente al numero in <paramref name="value" /> oppure 0 (zero) se <paramref name="value" /> è <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> non è costituito da un segno facoltativo seguito da una sequenza di cifre (da 0 a 9).</exception>
      <exception cref="T:System.OverflowException">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Int32.MinValue" /> o maggiore di <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt32(System.String,System.Int32)">
      <summary>Converte la rappresentazione di stringa di un numero in una base specificata nell'intero con segno a 32 bit equivalente.</summary>
      <param name="value">Stringa che contiene il numero da convertire.</param>
      <param name="fromBase">Base del numero in <paramref name="value" />, che deve essere 2, 8, 10 o 16.</param>
      <returns>Intero con segno a 32 bit equivalente al numero in <paramref name="value" /> oppure 0 (zero) se <paramref name="value" /> è <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentException">Il valore di <paramref name="fromBase" /> non è 2, 8, 10 o 16.  
-oppure- 
 <paramref name="value" />, che rappresenta un numero con segno non in base 10, è preceduto da un segno negativo.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> è <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> contiene un carattere che corrisponde a una cifra non valida nella base specificata da <paramref name="fromBase" />. Il messaggio di eccezione indica che non ci sono cifre da convertire se il primo carattere in <paramref name="value" /> non è valido; in caso contrario, il messaggio indica che <paramref name="value" /> contiene caratteri finali non validi.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" />, che rappresenta un numero con segno non in base 10, è preceduto da un segno negativo.  
In alternativa 
 L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Int32.MinValue" /> o maggiore di <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt32(System.UInt16)">
      <summary>Converte il valore dell'intero senza segno a 16 bit specificato nell'intero con segno a 32 bit equivalente.</summary>
      <param name="value">Intero senza segno a 16 bit da convertire.</param>
      <returns>Intero con segno a 32 bit equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToInt32(System.UInt32)">
      <summary>Converte il valore dell'intero senza segno a 32 bit specificato in un intero con segno a 32 bit equivalente.</summary>
      <param name="value">Intero senza segno a 32 bit da convertire.</param>
      <returns>Intero con segno a 32 bit equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è maggiore di <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt32(System.UInt64)">
      <summary>Converte il valore dell'intero senza segno a 64 bit specificato in un intero con segno a 32 bit equivalente.</summary>
      <param name="value">Intero senza segno a 64 bit da convertire.</param>
      <returns>Intero con segno a 32 bit equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è maggiore di <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt64(System.Boolean)">
      <summary>Converte il valore booleano specificato nell'intero con segno a 64 bit equivalente.</summary>
      <param name="value">Valore booleano da convertire.</param>
      <returns>Il numero 1 se <paramref name="value" /> è <see langword="true" />; in caso contrario, 0.</returns>
    </member>
    <member name="M:System.Convert.ToInt64(System.Byte)">
      <summary>Converte il valore dell'intero senza segno a 8 bit specificato nell'intero con segno a 64 bit equivalente.</summary>
      <param name="value">Intero senza segno a 8 bit da convertire.</param>
      <returns>Intero con segno a 64 bit equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToInt64(System.Char)">
      <summary>Converte il valore del carattere Unicode specificato nell'intero con segno a 64 bit equivalente.</summary>
      <param name="value">Carattere Unicode da convertire.</param>
      <returns>Intero con segno a 64 bit equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToInt64(System.DateTime)">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">Valore di data e ora da convertire.</param>
      <returns>Questa conversione non è supportata. Non vengono restituiti valori.</returns>
      <exception cref="T:System.InvalidCastException">Questa conversione non è supportata.</exception>
    </member>
    <member name="M:System.Convert.ToInt64(System.Decimal)">
      <summary>Converte il valore del numero decimale specificato in un intero con segno a 64 bit equivalente.</summary>
      <param name="value">Numero decimale da convertire.</param>
      <returns>
        <paramref name="value" />, arrotondato all'intero con segno a 64 bit più vicino. Se <paramref name="value" /> si trova a metà tra due numeri interi, viene restituito il numero intero pari; vale a dire, 4,5 viene convertito in 4, mentre 5,5 viene convertito in 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è maggiore di <see cref="F:System.Int64.MaxValue" /> o minore di <see cref="F:System.Int64.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt64(System.Double)">
      <summary>Converte il valore del numero a virgola mobile a precisione doppia specificato in un intero con segno a 64 bit equivalente.</summary>
      <param name="value">Numero a virgola mobile a precisione doppia da convertire.</param>
      <returns>
        <paramref name="value" />, arrotondato all'intero con segno a 64 bit più vicino. Se <paramref name="value" /> si trova a metà tra due numeri interi, viene restituito il numero intero pari; vale a dire, 4,5 viene convertito in 4, mentre 5,5 viene convertito in 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è maggiore di <see cref="F:System.Int64.MaxValue" /> o minore di <see cref="F:System.Int64.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt64(System.Int16)">
      <summary>Converte il valore dell'intero con segno a 16 bit specificato in un intero con segno a 64 bit equivalente.</summary>
      <param name="value">Intero con segno a 16 bit da convertire.</param>
      <returns>Intero con segno a 64 bit equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToInt64(System.Int32)">
      <summary>Converte il valore dell'intero con segno a 32 bit specificato in un intero con segno a 64 bit equivalente.</summary>
      <param name="value">Intero con segno a 32 bit da convertire.</param>
      <returns>Intero con segno a 64 bit equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToInt64(System.Int64)">
      <summary>Restituisce l'intero con segno a 64 bit specificato; non viene eseguita alcuna conversione effettiva.</summary>
      <param name="value">Intero con segno a 64 bit.</param>
      <returns>
        <paramref name="value" /> viene restituito invariato.</returns>
    </member>
    <member name="M:System.Convert.ToInt64(System.Object)">
      <summary>Converte il valore dell'oggetto specificato in un intero con segno a 64 bit.</summary>
      <param name="value">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" /> oppure <see langword="null" />.</param>
      <returns>Intero con segno a 64 bit equivalente a <paramref name="value" /> oppure zero se <paramref name="value" /> è <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">Il formato di <paramref name="value" /> non è appropriato.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> non implementa l'interfaccia <see cref="T:System.IConvertible" />.  
In alternativa 
La conversione non è supportata.</exception>
      <exception cref="T:System.OverflowException">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Int64.MinValue" /> o maggiore di <see cref="F:System.Int64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt64(System.Object,System.IFormatProvider)">
      <summary>Converte il valore dell'oggetto specificato in un intero con segno a 64 bit mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</summary>
      <param name="value">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" />.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <returns>Intero con segno a 64 bit equivalente a <paramref name="value" /> oppure zero se <paramref name="value" /> è <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">Il formato di <paramref name="value" /> non è appropriato.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> non implementa l'interfaccia <see cref="T:System.IConvertible" />.  
-oppure- 
La conversione non è supportata.</exception>
      <exception cref="T:System.OverflowException">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Int64.MinValue" /> o maggiore di <see cref="F:System.Int64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt64(System.SByte)">
      <summary>Converte il valore dell'intero con segno a 8 bit specificato nell'intero con segno a 64 bit equivalente.</summary>
      <param name="value">Intero con segno a 8 bit da convertire.</param>
      <returns>Intero con segno a 64 bit equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToInt64(System.Single)">
      <summary>Converte il valore del numero a virgola mobile a precisione singola specificato in un intero con segno a 64 bit equivalente.</summary>
      <param name="value">Numero a virgola mobile a precisione singola da convertire.</param>
      <returns>
        <paramref name="value" />, arrotondato all'intero con segno a 64 bit più vicino. Se <paramref name="value" /> si trova a metà tra due numeri interi, viene restituito il numero intero pari; vale a dire, 4,5 viene convertito in 4, mentre 5,5 viene convertito in 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è maggiore di <see cref="F:System.Int64.MaxValue" /> o minore di <see cref="F:System.Int64.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt64(System.String)">
      <summary>Converte la rappresentazione di stringa specificata di un numero in un intero con segno a 64 bit equivalente.</summary>
      <param name="value">Stringa contenente un numero da convertire.</param>
      <returns>Intero con segno a 64 bit equivalente al numero in <paramref name="value" /> oppure 0 (zero) se <paramref name="value" /> è <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> non è costituito da un segno facoltativo seguito da una sequenza di cifre (da 0 a 9).</exception>
      <exception cref="T:System.OverflowException">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Int64.MinValue" /> o maggiore di <see cref="F:System.Int64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt64(System.String,System.IFormatProvider)">
      <summary>Converte la rappresentazione di stringa specificata di un numero in un intero con segno a 64 bit equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</summary>
      <param name="value">Stringa che contiene il numero da convertire.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <returns>Intero con segno a 64 bit equivalente al numero in <paramref name="value" /> oppure 0 (zero) se <paramref name="value" /> è <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> non è costituito da un segno facoltativo seguito da una sequenza di cifre (da 0 a 9).</exception>
      <exception cref="T:System.OverflowException">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Int64.MinValue" /> o maggiore di <see cref="F:System.Int64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt64(System.String,System.Int32)">
      <summary>Converte la rappresentazione di stringa di un numero in una base specificata nell'intero con segno a 64 bit equivalente.</summary>
      <param name="value">Stringa che contiene il numero da convertire.</param>
      <param name="fromBase">Base del numero in <paramref name="value" />, che deve essere 2, 8, 10 o 16.</param>
      <returns>Intero con segno a 64 bit equivalente al numero in <paramref name="value" /> oppure 0 (zero) se <paramref name="value" /> è <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentException">Il valore di <paramref name="fromBase" /> non è 2, 8, 10 o 16.  
-oppure- 
 <paramref name="value" />, che rappresenta un numero con segno non in base 10, è preceduto da un segno negativo.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> è <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> contiene un carattere che corrisponde a una cifra non valida nella base specificata da <paramref name="fromBase" />. Il messaggio di eccezione indica che non ci sono cifre da convertire se il primo carattere in <paramref name="value" /> non è valido; in caso contrario, il messaggio indica che <paramref name="value" /> contiene caratteri finali non validi.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" />, che rappresenta un numero con segno non in base 10, è preceduto da un segno negativo.  
-oppure- 
 L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Int64.MinValue" /> o maggiore di <see cref="F:System.Int64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt64(System.UInt16)">
      <summary>Converte il valore dell'intero senza segno a 16 bit specificato nell'intero con segno a 64 bit equivalente.</summary>
      <param name="value">Intero senza segno a 16 bit da convertire.</param>
      <returns>Intero con segno a 64 bit equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToInt64(System.UInt32)">
      <summary>Converte il valore dell'intero senza segno a 32 bit specificato in un intero con segno a 64 bit equivalente.</summary>
      <param name="value">Intero senza segno a 32 bit da convertire.</param>
      <returns>Intero con segno a 64 bit equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToInt64(System.UInt64)">
      <summary>Converte il valore dell'intero senza segno a 64 bit specificato in un intero con segno a 64 bit equivalente.</summary>
      <param name="value">Intero senza segno a 64 bit da convertire.</param>
      <returns>Intero con segno a 64 bit equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è maggiore di <see cref="F:System.Int64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.Boolean)">
      <summary>Converte il valore booleano specificato nell'intero con segno a 8 bit equivalente.</summary>
      <param name="value">Valore booleano da convertire.</param>
      <returns>Il numero 1 se <paramref name="value" /> è <see langword="true" />; in caso contrario, 0.</returns>
    </member>
    <member name="M:System.Convert.ToSByte(System.Byte)">
      <summary>Converte il valore dell'intero senza segno a 8 bit specificato nell'intero con segno a 8 bit equivalente.</summary>
      <param name="value">Intero senza segno a 8 bit da convertire.</param>
      <returns>Intero con segno a 8 bit equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è maggiore di <see cref="F:System.SByte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.Char)">
      <summary>Converte il valore del carattere Unicode specificato nell'intero con segno a 8 bit equivalente.</summary>
      <param name="value">Carattere Unicode da convertire.</param>
      <returns>Intero con segno a 8 bit equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è maggiore di <see cref="F:System.SByte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.DateTime)">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">Valore di data e ora da convertire.</param>
      <returns>Questa conversione non è supportata. Non vengono restituiti valori.</returns>
      <exception cref="T:System.InvalidCastException">Questa conversione non è supportata.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.Decimal)">
      <summary>Converte il valore del numero decimale specificato in un intero con segno a 8 bit equivalente.</summary>
      <param name="value">Numero decimale da convertire.</param>
      <returns>
        <paramref name="value" />, arrotondato all'intero con segno a 8 bit più vicino. Se <paramref name="value" /> si trova a metà tra due numeri interi, viene restituito il numero intero pari; vale a dire, 4,5 viene convertito in 4, mentre 5,5 viene convertito in 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è maggiore di <see cref="F:System.SByte.MaxValue" /> o minore di <see cref="F:System.SByte.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.Double)">
      <summary>Converte il valore del numero a virgola mobile e con precisione doppia specificato in un intero con segno a 8 bit equivalente.</summary>
      <param name="value">Numero a virgola mobile a precisione doppia da convertire.</param>
      <returns>
        <paramref name="value" />, arrotondato all'intero con segno a 8 bit più vicino. Se <paramref name="value" /> si trova a metà tra due numeri interi, viene restituito il numero intero pari; vale a dire, 4,5 viene convertito in 4, mentre 5,5 viene convertito in 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è maggiore di <see cref="F:System.SByte.MaxValue" /> o minore di <see cref="F:System.SByte.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.Int16)">
      <summary>Converte il valore dell'intero con segno a 16 bit specificato nell'intero con segno a 8 bit equivalente.</summary>
      <param name="value">Intero con segno a 16 bit da convertire.</param>
      <returns>Intero con segno a 8 bit equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è maggiore di <see cref="F:System.SByte.MaxValue" /> o minore di <see cref="F:System.SByte.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.Int32)">
      <summary>Converte il valore dell'intero con segno a 32 bit specificato in un intero con segno a 8 bit equivalente.</summary>
      <param name="value">Intero con segno a 32 bit da convertire.</param>
      <returns>Intero con segno a 8 bit equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è maggiore di <see cref="F:System.SByte.MaxValue" /> o minore di <see cref="F:System.SByte.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.Int64)">
      <summary>Converte il valore dell'intero con segno a 64 bit specificato in un intero con segno a 8 bit equivalente.</summary>
      <param name="value">Intero con segno a 64 bit da convertire.</param>
      <returns>Intero con segno a 8 bit equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è maggiore di <see cref="F:System.SByte.MaxValue" /> o minore di <see cref="F:System.SByte.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.Object)">
      <summary>Converte il valore dell'oggetto specificato in un intero con segno a 8 bit.</summary>
      <param name="value">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" /> oppure <see langword="null" />.</param>
      <returns>Intero con segno a 8 bit equivalente a <paramref name="value" /> oppure zero se <paramref name="value" /> è <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">Il formato di <paramref name="value" /> non è appropriato.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> non implementa l'interfaccia <see cref="T:System.IConvertible" />.  
In alternativa 
La conversione non è supportata.</exception>
      <exception cref="T:System.OverflowException">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.SByte.MinValue" /> o maggiore di <see cref="F:System.SByte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.Object,System.IFormatProvider)">
      <summary>Converte il valore dell'oggetto specificato in un intero con segno a 8 bit mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</summary>
      <param name="value">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" />.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <returns>Intero con segno a 8 bit equivalente a <paramref name="value" /> oppure zero se <paramref name="value" /> è <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">Il formato di <paramref name="value" /> non è appropriato.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> non implementa l'interfaccia <see cref="T:System.IConvertible" />.  
-oppure- 
La conversione non è supportata.</exception>
      <exception cref="T:System.OverflowException">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.SByte.MinValue" /> o maggiore di <see cref="F:System.SByte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.SByte)">
      <summary>Restituisce l'intero con segno a 8 bit specificato; non viene eseguita alcuna conversione effettiva.</summary>
      <param name="value">Intero con segno a 8 bit da restituire.</param>
      <returns>
        <paramref name="value" /> viene restituito invariato.</returns>
    </member>
    <member name="M:System.Convert.ToSByte(System.Single)">
      <summary>Converte il valore del numero a virgola mobile e con precisione singola specificato in un intero con segno a 8 bit equivalente.</summary>
      <param name="value">Numero a virgola mobile a precisione singola da convertire.</param>
      <returns>
        <paramref name="value" />, arrotondato all'intero con segno a 8 bit più vicino. Se <paramref name="value" /> si trova a metà tra due numeri interi, viene restituito il numero intero pari; vale a dire, 4,5 viene convertito in 4, mentre 5,5 viene convertito in 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è maggiore di <see cref="F:System.SByte.MaxValue" /> o minore di <see cref="F:System.SByte.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.String)">
      <summary>Converte la rappresentazione di stringa specificata di un numero in un intero con segno a 8 bit equivalente.</summary>
      <param name="value">Stringa che contiene il numero da convertire.</param>
      <returns>Intero con segno a 8 bit equivalente al numero in <paramref name="value" /> oppure 0 (zero) se value è <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> non è costituito da un segno facoltativo seguito da una sequenza di cifre (da 0 a 9).</exception>
      <exception cref="T:System.OverflowException">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.SByte.MinValue" /> o maggiore di <see cref="F:System.SByte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.String,System.IFormatProvider)">
      <summary>Converte la rappresentazione di stringa specificata di un numero in un intero con segno a 8 bit equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</summary>
      <param name="value">Stringa che contiene il numero da convertire.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <returns>Intero con segno a 8 bit equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> non è costituito da un segno facoltativo seguito da una sequenza di cifre (da 0 a 9).</exception>
      <exception cref="T:System.OverflowException">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.SByte.MinValue" /> o maggiore di <see cref="F:System.SByte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.String,System.Int32)">
      <summary>Converte la rappresentazione di stringa di un numero in una base specificata nell'intero con segno a 8 bit equivalente.</summary>
      <param name="value">Stringa che contiene il numero da convertire.</param>
      <param name="fromBase">Base del numero in <paramref name="value" />, che deve essere 2, 8, 10 o 16.</param>
      <returns>Intero con segno a 8 bit equivalente al numero in <paramref name="value" /> oppure 0 (zero) se <paramref name="value" /> è <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentException">Il valore di <paramref name="fromBase" /> non è 2, 8, 10 o 16.  
In alternativa 
 <paramref name="value" />, che rappresenta un numero con segno non in base 10, è preceduto da un segno negativo.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> è <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> contiene un carattere che corrisponde a una cifra non valida nella base specificata da <paramref name="fromBase" />. Il messaggio di eccezione indica che non ci sono cifre da convertire se il primo carattere in <paramref name="value" /> non è valido; in caso contrario, il messaggio indica che <paramref name="value" /> contiene caratteri finali non validi.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" />, che rappresenta un numero con segno non in base 10, è preceduto da un segno negativo.  
-oppure- 
 L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.SByte.MinValue" /> o maggiore di <see cref="F:System.SByte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.UInt16)">
      <summary>Converte il valore dell'intero senza segno a 16 bit specificato nell'intero con segno a 8 bit equivalente.</summary>
      <param name="value">Intero senza segno a 16 bit da convertire.</param>
      <returns>Intero con segno a 8 bit equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è maggiore di <see cref="F:System.SByte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.UInt32)">
      <summary>Converte il valore dell'intero senza segno a 32 bit specificato in un intero con segno a 8 bit equivalente.</summary>
      <param name="value">Intero senza segno a 32 bit da convertire.</param>
      <returns>Intero con segno a 8 bit equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è maggiore di <see cref="F:System.SByte.MaxValue" /> o minore di <see cref="F:System.SByte.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.UInt64)">
      <summary>Converte il valore dell'intero senza segno a 64 bit specificato in un intero con segno a 8 bit equivalente.</summary>
      <param name="value">Intero senza segno a 64 bit da convertire.</param>
      <returns>Intero con segno a 8 bit equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è maggiore di <see cref="F:System.SByte.MaxValue" /> o minore di <see cref="F:System.SByte.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSingle(System.Boolean)">
      <summary>Converte il valore booleano specificato nel numero a virgola mobile e con precisione singola equivalente.</summary>
      <param name="value">Valore booleano da convertire.</param>
      <returns>Il numero 1 se <paramref name="value" /> è <see langword="true" />; in caso contrario, 0.</returns>
    </member>
    <member name="M:System.Convert.ToSingle(System.Byte)">
      <summary>Converte il valore dell'intero senza segno a 8 bit specificato nel numero a virgola mobile a precisione singola equivalente.</summary>
      <param name="value">Intero senza segno a 8 bit da convertire.</param>
      <returns>Numero a virgola mobile e con precisione singola equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToSingle(System.Char)">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">Carattere Unicode da convertire.</param>
      <returns>Questa conversione non è supportata. Non vengono restituiti valori.</returns>
      <exception cref="T:System.InvalidCastException">Questa conversione non è supportata.</exception>
    </member>
    <member name="M:System.Convert.ToSingle(System.DateTime)">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">Valore di data e ora da convertire.</param>
      <returns>Questa conversione non è supportata. Non vengono restituiti valori.</returns>
      <exception cref="T:System.InvalidCastException">Questa conversione non è supportata.</exception>
    </member>
    <member name="M:System.Convert.ToSingle(System.Decimal)">
      <summary>Converte il valore del numero decimale specificato in un numero a virgola mobile a precisione singola equivalente.</summary>
      <param name="value">Numero decimale da convertire.</param>
      <returns>Numero a virgola mobile e con precisione singola equivalente a <paramref name="value" />.  
 <paramref name="value" /> viene arrotondato al valore più vicino. Se arrotondato a due numeri decimali, ad esempio, il valore 2,345 diventa 2,34 e il valore 2,355 diventa 2,36.</returns>
    </member>
    <member name="M:System.Convert.ToSingle(System.Double)">
      <summary>Converte il valore del numero a virgola mobile e con precisione doppia specificato in un numero a virgola mobile e con precisione singola equivalente.</summary>
      <param name="value">Numero a virgola mobile a precisione doppia da convertire.</param>
      <returns>Numero a virgola mobile e con precisione singola equivalente a <paramref name="value" />.  
 <paramref name="value" /> viene arrotondato al valore più vicino. Se arrotondato a due numeri decimali, ad esempio, il valore 2,345 diventa 2,34 e il valore 2,355 diventa 2,36.</returns>
    </member>
    <member name="M:System.Convert.ToSingle(System.Int16)">
      <summary>Converte il valore dell'intero con segno a 16 bit specificato in un numero a virgola mobile e con precisione singola equivalente.</summary>
      <param name="value">Intero con segno a 16 bit da convertire.</param>
      <returns>Numero a virgola mobile e con precisione singola equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToSingle(System.Int32)">
      <summary>Converte il valore dell'intero con segno a 32 bit specificato in un numero a virgola mobile e con precisione singola equivalente.</summary>
      <param name="value">Intero con segno a 32 bit da convertire.</param>
      <returns>Numero a virgola mobile e con precisione singola equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToSingle(System.Int64)">
      <summary>Converte il valore dell'intero con segno a 64 bit specificato in un numero a virgola mobile a precisione singola equivalente.</summary>
      <param name="value">Intero con segno a 64 bit da convertire.</param>
      <returns>Numero a virgola mobile e con precisione singola equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToSingle(System.Object)">
      <summary>Converte il valore dell'oggetto specificato in un numero a virgola mobile a precisione singola.</summary>
      <param name="value">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" /> oppure <see langword="null" />.</param>
      <returns>Numero a virgola mobile e con precisione singola equivalente a <paramref name="value" /> oppure zero se <paramref name="value" /> è <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">Il formato di <paramref name="value" /> non è appropriato.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> non implementa l'interfaccia <see cref="T:System.IConvertible" />.  
-oppure- 
La conversione non è supportata.</exception>
      <exception cref="T:System.OverflowException">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Single.MinValue" /> o maggiore di <see cref="F:System.Single.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSingle(System.Object,System.IFormatProvider)">
      <summary>Converte il valore dell'oggetto specificato in un numero a virgola mobile a precisione singola mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</summary>
      <param name="value">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" />.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <returns>Numero a virgola mobile e con precisione singola equivalente a <paramref name="value" /> oppure zero se <paramref name="value" /> è <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">Il formato di <paramref name="value" /> non è appropriato.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> non implementa <see cref="T:System.IConvertible" />.</exception>
      <exception cref="T:System.OverflowException">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Single.MinValue" /> o maggiore di <see cref="F:System.Single.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSingle(System.SByte)">
      <summary>Converte il valore dell'intero con segno a 8 bit specificato nel numero a virgola mobile a precisione singola equivalente.</summary>
      <param name="value">Intero con segno a 8 bit da convertire.</param>
      <returns>Intero con segno a 8 bit equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToSingle(System.Single)">
      <summary>Restituisce il numero a virgola mobile e con precisione singola specificato; non viene eseguita alcuna conversione effettiva.</summary>
      <param name="value">Numero a virgola mobile a precisione singola da restituire.</param>
      <returns>
        <paramref name="value" /> viene restituito invariato.</returns>
    </member>
    <member name="M:System.Convert.ToSingle(System.String)">
      <summary>Converte la rappresentazione di stringa specificata di un numero in un numero a virgola mobile e con precisione singola equivalente.</summary>
      <param name="value">Stringa che contiene il numero da convertire.</param>
      <returns>Numero a virgola mobile e con precisione singola equivalente al numero in <paramref name="value" /> oppure 0 (zero) se <paramref name="value" /> è <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> non è un numero in formato valido.</exception>
      <exception cref="T:System.OverflowException">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Single.MinValue" /> o maggiore di <see cref="F:System.Single.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSingle(System.String,System.IFormatProvider)">
      <summary>Converte la rappresentazione di stringa specificata di un numero in un numero a virgola mobile a precisione singola equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</summary>
      <param name="value">Stringa che contiene il numero da convertire.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <returns>Numero a virgola mobile e con precisione singola equivalente al numero in <paramref name="value" /> oppure 0 (zero) se <paramref name="value" /> è <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> non è un numero in formato valido.</exception>
      <exception cref="T:System.OverflowException">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.Single.MinValue" /> o maggiore di <see cref="F:System.Single.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSingle(System.UInt16)">
      <summary>Converte il valore dell'intero senza segno a 16 bit specificato nel numero a virgola mobile a precisione singola equivalente.</summary>
      <param name="value">Intero senza segno a 16 bit da convertire.</param>
      <returns>Numero a virgola mobile e con precisione singola equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToSingle(System.UInt32)">
      <summary>Converte il valore dell'intero senza segno a 32 bit specificato in un numero a virgola mobile a precisione singola equivalente.</summary>
      <param name="value">Intero senza segno a 32 bit da convertire.</param>
      <returns>Numero a virgola mobile e con precisione singola equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToSingle(System.UInt64)">
      <summary>Converte il valore dell'intero senza segno a 64 bit specificato in un numero a virgola mobile a precisione singola equivalente.</summary>
      <param name="value">Intero senza segno a 64 bit da convertire.</param>
      <returns>Numero a virgola mobile e con precisione singola equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Boolean)">
      <summary>Converte il valore booleano specificato nella relativa rappresentazione di stringa equivalente.</summary>
      <param name="value">Valore booleano da convertire.</param>
      <returns>Rappresentazione di stringa di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Boolean,System.IFormatProvider)">
      <summary>Converte il valore booleano specificato nella relativa rappresentazione di stringa equivalente.</summary>
      <param name="value">Valore booleano da convertire.</param>
      <param name="provider">Istanza di un oggetto. Questo parametro viene ignorato.</param>
      <returns>Rappresentazione di stringa di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Byte)">
      <summary>Converte il valore dell'intero senza segno a 8 bit specificato nella relativa rappresentazione di stringa equivalente.</summary>
      <param name="value">Intero senza segno a 8 bit da convertire.</param>
      <returns>Rappresentazione di stringa di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Byte,System.IFormatProvider)">
      <summary>Converte il valore dell'intero senza segno a 8 bit specificato nella relativa rappresentazione di stringa equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</summary>
      <param name="value">Intero senza segno a 8 bit da convertire.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <returns>Rappresentazione di stringa di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Byte,System.Int32)">
      <summary>Converte il valore di un intero senza segno a 8 bit nella rappresentazione di stringa equivalente in una base specificata.</summary>
      <param name="value">Intero senza segno a 8 bit da convertire.</param>
      <param name="toBase">Base del valore restituito, che deve essere 2, 8, 10 o 16.</param>
      <returns>Rappresentazione di stringa di <paramref name="value" /> in base <paramref name="toBase" />.</returns>
      <exception cref="T:System.ArgumentException">Il valore di <paramref name="toBase" /> non è 2, 8, 10 o 16.</exception>
    </member>
    <member name="M:System.Convert.ToString(System.Char)">
      <summary>Converte il valore del carattere Unicode specificato nella relativa rappresentazione di stringa equivalente.</summary>
      <param name="value">Carattere Unicode da convertire.</param>
      <returns>Rappresentazione di stringa di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Char,System.IFormatProvider)">
      <summary>Converte il valore del carattere Unicode specificato nella relativa rappresentazione di stringa equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</summary>
      <param name="value">Carattere Unicode da convertire.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura. Questo parametro viene ignorato.</param>
      <returns>Rappresentazione di stringa di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.DateTime)">
      <summary>Converte il valore dell'oggetto <see cref="T:System.DateTime" /> specificato nella relativa rappresentazione di stringa equivalente.</summary>
      <param name="value">Valore di data e ora da convertire.</param>
      <returns>Rappresentazione di stringa di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.DateTime,System.IFormatProvider)">
      <summary>Converte il valore dell'oggetto <see cref="T:System.DateTime" /> specificato nella relativa rappresentazione di stringa equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</summary>
      <param name="value">Valore di data e ora da convertire.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <returns>Rappresentazione di stringa di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Decimal)">
      <summary>Converte il valore del numero decimale specificato nella relativa rappresentazione di stringa equivalente.</summary>
      <param name="value">Numero decimale da convertire.</param>
      <returns>Rappresentazione di stringa di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Decimal,System.IFormatProvider)">
      <summary>Converte il valore del numero decimale specificato nella relativa rappresentazione di stringa equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</summary>
      <param name="value">Numero decimale da convertire.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <returns>Rappresentazione di stringa di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Double)">
      <summary>Converte il valore del numero a virgola mobile e con precisione doppia specificato nella relativa rappresentazione di stringa equivalente.</summary>
      <param name="value">Numero a virgola mobile a precisione doppia da convertire.</param>
      <returns>Rappresentazione di stringa di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Double,System.IFormatProvider)">
      <summary>Converte il valore del numero a virgola mobile e con precisione doppia specificato nella relativa rappresentazione di stringa equivalente.</summary>
      <param name="value">Numero a virgola mobile a precisione doppia da convertire.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <returns>Rappresentazione di stringa di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Int16)">
      <summary>Converte il valore dell'intero con segno a 16 bit specificato nella relativa rappresentazione di stringa equivalente.</summary>
      <param name="value">Intero con segno a 16 bit da convertire.</param>
      <returns>Rappresentazione di stringa di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Int16,System.IFormatProvider)">
      <summary>Converte il valore dell'intero con segno a 16 bit specificato nella relativa rappresentazione di stringa equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</summary>
      <param name="value">Intero con segno a 16 bit da convertire.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <returns>Rappresentazione di stringa di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Int16,System.Int32)">
      <summary>Converte il valore di un intero con segno a 16 bit nella relativa rappresentazione di stringa equivalente in una base specificata.</summary>
      <param name="value">Intero con segno a 16 bit da convertire.</param>
      <param name="toBase">Base del valore restituito, che deve essere 2, 8, 10 o 16.</param>
      <returns>Rappresentazione di stringa di <paramref name="value" /> in base <paramref name="toBase" />.</returns>
      <exception cref="T:System.ArgumentException">Il valore di <paramref name="toBase" /> non è 2, 8, 10 o 16.</exception>
    </member>
    <member name="M:System.Convert.ToString(System.Int32)">
      <summary>Converte il valore dell'intero con segno a 32 bit specificato nella relativa rappresentazione di stringa equivalente.</summary>
      <param name="value">Intero con segno a 32 bit da convertire.</param>
      <returns>Rappresentazione di stringa di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Int32,System.IFormatProvider)">
      <summary>Converte il valore dell'intero con segno a 32 bit specificato nella relativa rappresentazione di stringa equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</summary>
      <param name="value">Intero con segno a 32 bit da convertire.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <returns>Rappresentazione di stringa di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Int32,System.Int32)">
      <summary>Converte il valore di un intero con segno a 32 bit nella relativa rappresentazione di stringa equivalente in una base specificata.</summary>
      <param name="value">Intero con segno a 32 bit da convertire.</param>
      <param name="toBase">Base del valore restituito, che deve essere 2, 8, 10 o 16.</param>
      <returns>Rappresentazione di stringa di <paramref name="value" /> in base <paramref name="toBase" />.</returns>
      <exception cref="T:System.ArgumentException">Il valore di <paramref name="toBase" /> non è 2, 8, 10 o 16.</exception>
    </member>
    <member name="M:System.Convert.ToString(System.Int64)">
      <summary>Converte il valore dell'intero con segno a 64 bit specificato nella relativa rappresentazione di stringa equivalente.</summary>
      <param name="value">Intero con segno a 64 bit da convertire.</param>
      <returns>Rappresentazione di stringa di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Int64,System.IFormatProvider)">
      <summary>Converte il valore dell'intero con segno a 64 bit specificato nella relativa rappresentazione di stringa equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</summary>
      <param name="value">Intero con segno a 64 bit da convertire.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <returns>Rappresentazione di stringa di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Int64,System.Int32)">
      <summary>Converte il valore di un intero con segno a 64 bit nella relativa rappresentazione di stringa equivalente in una base specificata.</summary>
      <param name="value">Intero con segno a 64 bit da convertire.</param>
      <param name="toBase">Base del valore restituito, che deve essere 2, 8, 10 o 16.</param>
      <returns>Rappresentazione di stringa di <paramref name="value" /> in base <paramref name="toBase" />.</returns>
      <exception cref="T:System.ArgumentException">Il valore di <paramref name="toBase" /> non è 2, 8, 10 o 16.</exception>
    </member>
    <member name="M:System.Convert.ToString(System.Object)">
      <summary>Converte il valore dell'oggetto specificato nella relativa rappresentazione di stringa equivalente.</summary>
      <param name="value">Oggetto che fornisce il valore da convertire oppure <see langword="null" />.</param>
      <returns>Rappresentazione di stringa di <paramref name="value" /> oppure <see cref="F:System.String.Empty" /> se <paramref name="value" /> è <see langword="null" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Object,System.IFormatProvider)">
      <summary>Converte il valore dell'oggetto specificato nella relativa rappresentazione di stringa equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</summary>
      <param name="value">Oggetto che fornisce il valore da convertire oppure <see langword="null" />.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <returns>Rappresentazione di stringa di <paramref name="value" /> o <see cref="F:System.String.Empty" /> se <paramref name="value" /> è un oggetto il cui valore è <see langword="null" />. Se <paramref name="value" /> è <see langword="null" />, il metodo restituisce <see langword="null" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.SByte)">
      <summary>Converte il valore dell'intero con segno a 8 bit specificato nella relativa rappresentazione di stringa equivalente.</summary>
      <param name="value">Intero con segno a 8 bit da convertire.</param>
      <returns>Rappresentazione di stringa di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.SByte,System.IFormatProvider)">
      <summary>Converte il valore dell'intero con segno a 8 bit specificato nella relativa rappresentazione di stringa equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</summary>
      <param name="value">Intero con segno a 8 bit da convertire.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <returns>Rappresentazione di stringa di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Single)">
      <summary>Converte il valore del numero a virgola mobile a precisione singola specificato nella relativa rappresentazione di stringa equivalente.</summary>
      <param name="value">Numero a virgola mobile a precisione singola da convertire.</param>
      <returns>Rappresentazione di stringa di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Single,System.IFormatProvider)">
      <summary>Converte il valore del numero a virgola mobile a precisione singola specificato nella relativa rappresentazione di stringa equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</summary>
      <param name="value">Numero a virgola mobile a precisione singola da convertire.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <returns>Rappresentazione di stringa di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.String)">
      <summary>Restituisce l'istanza di stringa specificata; non viene eseguita alcuna conversione effettiva.</summary>
      <param name="value">Stringa da restituire.</param>
      <returns>
        <paramref name="value" /> viene restituito invariato.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.String,System.IFormatProvider)">
      <summary>Restituisce l'istanza di stringa specificata; non viene eseguita alcuna conversione effettiva.</summary>
      <param name="value">Stringa da restituire.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura. Questo parametro viene ignorato.</param>
      <returns>
        <paramref name="value" /> viene restituito invariato.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.UInt16)">
      <summary>Converte il valore dell'intero senza segno a 16 bit specificato nella relativa rappresentazione di stringa equivalente.</summary>
      <param name="value">Intero senza segno a 16 bit da convertire.</param>
      <returns>Rappresentazione di stringa di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.UInt16,System.IFormatProvider)">
      <summary>Converte il valore dell'intero senza segno a 16 bit specificato nella relativa rappresentazione di stringa equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</summary>
      <param name="value">Intero senza segno a 16 bit da convertire.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <returns>Rappresentazione di stringa di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.UInt32)">
      <summary>Converte il valore dell'intero senza segno a 32 bit specificato nella relativa rappresentazione di stringa equivalente.</summary>
      <param name="value">Intero senza segno a 32 bit da convertire.</param>
      <returns>Rappresentazione di stringa di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.UInt32,System.IFormatProvider)">
      <summary>Converte il valore dell'intero senza segno a 32 bit specificato nella relativa rappresentazione di stringa equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</summary>
      <param name="value">Intero senza segno a 32 bit da convertire.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <returns>Rappresentazione di stringa di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.UInt64)">
      <summary>Converte il valore dell'intero senza segno a 64 bit specificato nella relativa rappresentazione di stringa equivalente.</summary>
      <param name="value">Intero senza segno a 64 bit da convertire.</param>
      <returns>Rappresentazione di stringa di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.UInt64,System.IFormatProvider)">
      <summary>Converte il valore dell'intero senza segno a 64 bit specificato nella relativa rappresentazione di stringa equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</summary>
      <param name="value">Intero senza segno a 64 bit da convertire.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <returns>Rappresentazione di stringa di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToUInt16(System.Boolean)">
      <summary>Converte il valore booleano specificato nell'intero senza segno a 16 bit equivalente.</summary>
      <param name="value">Valore booleano da convertire.</param>
      <returns>Il numero 1 se <paramref name="value" /> è <see langword="true" />; in caso contrario, 0.</returns>
    </member>
    <member name="M:System.Convert.ToUInt16(System.Byte)">
      <summary>Converte il valore dell'intero senza segno a 8 bit specificato nell'intero senza segno a 16 bit equivalente.</summary>
      <param name="value">Intero senza segno a 8 bit da convertire.</param>
      <returns>Intero senza segno a 16 bit equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToUInt16(System.Char)">
      <summary>Converte il valore del carattere Unicode specificato nell'intero senza segno a 16 bit equivalente.</summary>
      <param name="value">Carattere Unicode da convertire.</param>
      <returns>Intero senza segno a 16 bit equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToUInt16(System.DateTime)">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">Valore di data e ora da convertire.</param>
      <returns>Questa conversione non è supportata. Non vengono restituiti valori.</returns>
      <exception cref="T:System.InvalidCastException">Questa conversione non è supportata.</exception>
    </member>
    <member name="M:System.Convert.ToUInt16(System.Decimal)">
      <summary>Converte il valore del numero decimale specificato in un intero senza segno a 16 bit equivalente.</summary>
      <param name="value">Numero decimale da convertire.</param>
      <returns>
        <paramref name="value" />, arrotondato all'intero senza segno a 16 bit più vicino. Se <paramref name="value" /> si trova a metà tra due numeri interi, viene restituito il numero intero pari; vale a dire, 4,5 viene convertito in 4, mentre 5,5 viene convertito in 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è minore di zero o maggiore di <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt16(System.Double)">
      <summary>Converte il valore del numero a virgola mobile a precisione doppia specificato in un intero senza segno a 16 bit equivalente.</summary>
      <param name="value">Numero a virgola mobile a precisione doppia da convertire.</param>
      <returns>
        <paramref name="value" />, arrotondato all'intero senza segno a 16 bit più vicino. Se <paramref name="value" /> si trova a metà tra due numeri interi, viene restituito il numero intero pari; vale a dire, 4,5 viene convertito in 4, mentre 5,5 viene convertito in 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è minore di zero o maggiore di <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt16(System.Int16)">
      <summary>Converte il valore dell'intero con segno a 16 bit specificato nell'intero senza segno a 16 bit equivalente.</summary>
      <param name="value">Intero con segno a 16 bit da convertire.</param>
      <returns>Intero senza segno a 16 bit equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è minore di zero.</exception>
    </member>
    <member name="M:System.Convert.ToUInt16(System.Int32)">
      <summary>Converte il valore dell'intero con segno a 32 bit specificato in un intero senza segno a 16 bit equivalente.</summary>
      <param name="value">Intero con segno a 32 bit da convertire.</param>
      <returns>Intero senza segno a 16 bit equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è minore di zero o maggiore di <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt16(System.Int64)">
      <summary>Converte il valore dell'intero con segno a 64 bit specificato in un intero senza segno a 16 bit equivalente.</summary>
      <param name="value">Intero con segno a 64 bit da convertire.</param>
      <returns>Intero senza segno a 16 bit equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è minore di zero o maggiore di <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt16(System.Object)">
      <summary>Converte il valore dell'oggetto specificato in un intero senza segno a 16 bit.</summary>
      <param name="value">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" /> oppure <see langword="null" />.</param>
      <returns>Intero senza segno a 16 bit equivalente a <paramref name="value" /> oppure zero se <paramref name="value" /> è <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">Il formato di <paramref name="value" /> non è appropriato.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> non implementa l'interfaccia <see cref="T:System.IConvertible" />.  
In alternativa 
La conversione non è supportata.</exception>
      <exception cref="T:System.OverflowException">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.UInt16.MinValue" /> o maggiore di <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt16(System.Object,System.IFormatProvider)">
      <summary>Converte il valore dell'oggetto specificato in un intero senza segno a 16 bit mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</summary>
      <param name="value">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" />.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <returns>Intero senza segno a 16 bit equivalente a <paramref name="value" /> oppure zero se <paramref name="value" /> è <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">Il formato di <paramref name="value" /> non è appropriato.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> non implementa l'interfaccia <see cref="T:System.IConvertible" />.  
In alternativa 
La conversione non è supportata.</exception>
      <exception cref="T:System.OverflowException">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.UInt16.MinValue" /> o maggiore di <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt16(System.SByte)">
      <summary>Converte il valore dell'intero con segno a 8 bit specificato nell'intero senza segno a 16 bit equivalente.</summary>
      <param name="value">Intero con segno a 8 bit da convertire.</param>
      <returns>Intero senza segno a 16 bit equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è minore di zero.</exception>
    </member>
    <member name="M:System.Convert.ToUInt16(System.Single)">
      <summary>Converte il valore del numero a virgola mobile a precisione singola specificato in un intero senza segno a 16 bit equivalente.</summary>
      <param name="value">Numero a virgola mobile a precisione singola da convertire.</param>
      <returns>
        <paramref name="value" />, arrotondato all'intero senza segno a 16 bit più vicino. Se <paramref name="value" /> si trova a metà tra due numeri interi, viene restituito il numero intero pari; vale a dire, 4,5 viene convertito in 4, mentre 5,5 viene convertito in 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è minore di zero o maggiore di <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt16(System.String)">
      <summary>Converte la rappresentazione di stringa specificata di un numero in un intero senza segno a 16 bit equivalente.</summary>
      <param name="value">Stringa che contiene il numero da convertire.</param>
      <returns>Intero senza segno a 16 bit equivalente al numero in <paramref name="value" /> oppure 0 (zero) se <paramref name="value" /> è <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> non è costituito da un segno facoltativo seguito da una sequenza di cifre (da 0 a 9).</exception>
      <exception cref="T:System.OverflowException">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.UInt16.MinValue" /> o maggiore di <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt16(System.String,System.IFormatProvider)">
      <summary>Converte la rappresentazione di stringa specificata di un numero in un intero senza segno a 16 bit equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</summary>
      <param name="value">Stringa che contiene il numero da convertire.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <returns>Intero senza segno a 16 bit equivalente al numero in <paramref name="value" /> oppure 0 (zero) se <paramref name="value" /> è <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> non è costituito da un segno facoltativo seguito da una sequenza di cifre (da 0 a 9).</exception>
      <exception cref="T:System.OverflowException">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.UInt16.MinValue" /> o maggiore di <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt16(System.String,System.Int32)">
      <summary>Converte la rappresentazione di stringa di un numero in una base specificata nell'intero senza segno a 16 bit equivalente.</summary>
      <param name="value">Stringa che contiene il numero da convertire.</param>
      <param name="fromBase">Base del numero in <paramref name="value" />, che deve essere 2, 8, 10 o 16.</param>
      <returns>Intero senza segno a 16 bit equivalente al numero in <paramref name="value" /> oppure 0 (zero) se <paramref name="value" /> è <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentException">Il valore di <paramref name="fromBase" /> non è 2, 8, 10 o 16.  
-oppure- 
 <paramref name="value" />, che rappresenta un numero senza segno non in base 10, è preceduto da un segno negativo.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> è <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> contiene un carattere che corrisponde a una cifra non valida nella base specificata da <paramref name="fromBase" />. Il messaggio di eccezione indica che non ci sono cifre da convertire se il primo carattere in <paramref name="value" /> non è valido; in caso contrario, il messaggio indica che <paramref name="value" /> contiene caratteri finali non validi.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" />, che rappresenta un numero senza segno non in base 10, è preceduto da un segno negativo.  
In alternativa 
 L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.UInt16.MinValue" /> o maggiore di <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt16(System.UInt16)">
      <summary>Restituisce l'intero senza segno a 16 bit specificato; non viene eseguita alcuna conversione effettiva.</summary>
      <param name="value">Intero senza segno a 16 bit da restituire.</param>
      <returns>
        <paramref name="value" /> viene restituito invariato.</returns>
    </member>
    <member name="M:System.Convert.ToUInt16(System.UInt32)">
      <summary>Converte il valore dell'intero senza segno a 32 bit specificato in un intero senza segno a 16 bit equivalente.</summary>
      <param name="value">Intero senza segno a 32 bit da convertire.</param>
      <returns>Intero senza segno a 16 bit equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è maggiore di <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt16(System.UInt64)">
      <summary>Converte il valore dell'intero senza segno a 64 bit specificato in un intero senza segno a 16 bit equivalente.</summary>
      <param name="value">Intero senza segno a 64 bit da convertire.</param>
      <returns>Intero senza segno a 16 bit equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è maggiore di <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt32(System.Boolean)">
      <summary>Converte il valore booleano specificato nell'intero senza segno a 32 bit equivalente.</summary>
      <param name="value">Valore booleano da convertire.</param>
      <returns>Il numero 1 se <paramref name="value" /> è <see langword="true" />; in caso contrario, 0.</returns>
    </member>
    <member name="M:System.Convert.ToUInt32(System.Byte)">
      <summary>Converte il valore dell'intero senza segno a 8 bit specificato nell'intero senza segno a 32 bit equivalente.</summary>
      <param name="value">Intero senza segno a 8 bit da convertire.</param>
      <returns>Intero senza segno a 32 bit equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToUInt32(System.Char)">
      <summary>Converte il valore del carattere Unicode specificato nell'intero senza segno a 32 bit equivalente.</summary>
      <param name="value">Carattere Unicode da convertire.</param>
      <returns>Intero senza segno a 32 bit equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToUInt32(System.DateTime)">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">Valore di data e ora da convertire.</param>
      <returns>Questa conversione non è supportata. Non vengono restituiti valori.</returns>
      <exception cref="T:System.InvalidCastException">Questa conversione non è supportata.</exception>
    </member>
    <member name="M:System.Convert.ToUInt32(System.Decimal)">
      <summary>Converte il valore del numero decimale specificato in un intero senza segno a 32 bit equivalente.</summary>
      <param name="value">Numero decimale da convertire.</param>
      <returns>
        <paramref name="value" />, arrotondato all'intero senza segno a 32 bit più vicino. Se <paramref name="value" /> si trova a metà tra due numeri interi, viene restituito il numero intero pari; vale a dire, 4,5 viene convertito in 4, mentre 5,5 viene convertito in 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è minore di zero o maggiore di <see cref="F:System.UInt32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt32(System.Double)">
      <summary>Converte il valore del numero a virgola mobile a precisione doppia specificato in un intero senza segno a 32 bit equivalente.</summary>
      <param name="value">Numero a virgola mobile a precisione doppia da convertire.</param>
      <returns>
        <paramref name="value" />, arrotondato all'intero senza segno a 32 bit più vicino. Se <paramref name="value" /> si trova a metà tra due numeri interi, viene restituito il numero intero pari; vale a dire, 4,5 viene convertito in 4, mentre 5,5 viene convertito in 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è minore di zero o maggiore di <see cref="F:System.UInt32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt32(System.Int16)">
      <summary>Converte il valore dell'intero con segno a 16 bit specificato nell'intero senza segno a 32 bit equivalente.</summary>
      <param name="value">Intero con segno a 16 bit da convertire.</param>
      <returns>Intero senza segno a 32 bit equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è minore di zero.</exception>
    </member>
    <member name="M:System.Convert.ToUInt32(System.Int32)">
      <summary>Converte il valore dell'intero con segno a 32 bit specificato in un intero senza segno a 32 bit equivalente.</summary>
      <param name="value">Intero con segno a 32 bit da convertire.</param>
      <returns>Intero senza segno a 32 bit equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è minore di zero.</exception>
    </member>
    <member name="M:System.Convert.ToUInt32(System.Int64)">
      <summary>Converte il valore dell'intero con segno a 64 bit specificato in un intero senza segno a 32 bit equivalente.</summary>
      <param name="value">Intero con segno a 64 bit da convertire.</param>
      <returns>Intero senza segno a 32 bit equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è minore di zero o maggiore di <see cref="F:System.UInt32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt32(System.Object)">
      <summary>Converte il valore dell'oggetto specificato in un intero senza segno a 32 bit.</summary>
      <param name="value">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" /> oppure <see langword="null" />.</param>
      <returns>Intero senza segno a 32 bit equivalente a <paramref name="value" /> oppure 0 (zero) se <paramref name="value" /> è <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">Il formato di <paramref name="value" /> non è appropriato.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> non implementa l'interfaccia <see cref="T:System.IConvertible" />.  
In alternativa 
La conversione non è supportata.</exception>
      <exception cref="T:System.OverflowException">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.UInt32.MinValue" /> o maggiore di <see cref="F:System.UInt32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt32(System.Object,System.IFormatProvider)">
      <summary>Converte il valore dell'oggetto specificato in un intero senza segno a 32 bit mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</summary>
      <param name="value">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" />.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <returns>Intero senza segno a 32 bit equivalente a <paramref name="value" /> oppure zero se <paramref name="value" /> è <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">Il formato di <paramref name="value" /> non è appropriato.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> non implementa l'interfaccia <see cref="T:System.IConvertible" />.  
-oppure- 
La conversione non è supportata.</exception>
      <exception cref="T:System.OverflowException">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.UInt32.MinValue" /> o maggiore di <see cref="F:System.UInt32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt32(System.SByte)">
      <summary>Converte il valore dell'intero con segno a 8 bit specificato nell'intero senza segno a 32 bit equivalente.</summary>
      <param name="value">Intero con segno a 8 bit da convertire.</param>
      <returns>Intero senza segno a 32 bit equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è minore di zero.</exception>
    </member>
    <member name="M:System.Convert.ToUInt32(System.Single)">
      <summary>Converte il valore del numero a virgola mobile a precisione singola specificato in un intero senza segno a 32 bit equivalente.</summary>
      <param name="value">Numero a virgola mobile a precisione singola da convertire.</param>
      <returns>
        <paramref name="value" />, arrotondato all'intero senza segno a 32 bit più vicino. Se <paramref name="value" /> si trova a metà tra due numeri interi, viene restituito il numero intero pari; vale a dire, 4,5 viene convertito in 4, mentre 5,5 viene convertito in 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è minore di zero o maggiore di <see cref="F:System.UInt32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt32(System.String)">
      <summary>Converte la rappresentazione di stringa specificata di un numero in un intero senza segno a 32 bit equivalente.</summary>
      <param name="value">Stringa che contiene il numero da convertire.</param>
      <returns>Intero senza segno a 32 bit equivalente al numero in <paramref name="value" /> oppure 0 (zero) se <paramref name="value" /> è <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> non è costituito da un segno facoltativo seguito da una sequenza di cifre (da 0 a 9).</exception>
      <exception cref="T:System.OverflowException">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.UInt32.MinValue" /> o maggiore di <see cref="F:System.UInt32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt32(System.String,System.IFormatProvider)">
      <summary>Converte la rappresentazione di stringa specificata di un numero in un intero senza segno a 32 bit equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</summary>
      <param name="value">Stringa che contiene il numero da convertire.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <returns>Intero senza segno a 32 bit equivalente al numero in <paramref name="value" /> oppure 0 (zero) se <paramref name="value" /> è <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> non è costituito da un segno facoltativo seguito da una sequenza di cifre (da 0 a 9).</exception>
      <exception cref="T:System.OverflowException">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.UInt32.MinValue" /> o maggiore di <see cref="F:System.UInt32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt32(System.String,System.Int32)">
      <summary>Converte la rappresentazione di stringa di un numero in una base specificata nell'intero senza segno a 32 bit equivalente.</summary>
      <param name="value">Stringa che contiene il numero da convertire.</param>
      <param name="fromBase">Base del numero in <paramref name="value" />, che deve essere 2, 8, 10 o 16.</param>
      <returns>Intero senza segno a 32 bit equivalente al numero in <paramref name="value" /> oppure 0 (zero) se <paramref name="value" /> è <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentException">Il valore di <paramref name="fromBase" /> non è 2, 8, 10 o 16.  
In alternativa 
 <paramref name="value" />, che rappresenta un numero senza segno non in base 10, è preceduto da un segno negativo.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> è <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> contiene un carattere che corrisponde a una cifra non valida nella base specificata da <paramref name="fromBase" />. Il messaggio di eccezione indica che non ci sono cifre da convertire se il primo carattere in <paramref name="value" /> non è valido; in caso contrario, il messaggio indica che <paramref name="value" /> contiene caratteri finali non validi.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" />, che rappresenta un numero senza segno non in base 10, è preceduto da un segno negativo.  
-oppure- 
 L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.UInt32.MinValue" /> o maggiore di <see cref="F:System.UInt32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt32(System.UInt16)">
      <summary>Converte il valore dell'intero senza segno a 16 bit specificato nell'intero senza segno a 32 bit equivalente.</summary>
      <param name="value">Intero senza segno a 16 bit da convertire.</param>
      <returns>Intero senza segno a 32 bit equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToUInt32(System.UInt32)">
      <summary>Restituisce l'intero senza segno a 32 bit specificato; non viene eseguita alcuna conversione effettiva.</summary>
      <param name="value">Intero senza segno a 32 bit da restituire.</param>
      <returns>
        <paramref name="value" /> viene restituito invariato.</returns>
    </member>
    <member name="M:System.Convert.ToUInt32(System.UInt64)">
      <summary>Converte il valore dell'intero senza segno a 64 bit specificato in un intero senza segno a 32 bit equivalente.</summary>
      <param name="value">Intero senza segno a 64 bit da convertire.</param>
      <returns>Intero senza segno a 32 bit equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è maggiore di <see cref="F:System.UInt32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt64(System.Boolean)">
      <summary>Converte il valore booleano specificato nell'intero senza segno a 64 bit equivalente.</summary>
      <param name="value">Valore booleano da convertire.</param>
      <returns>Il numero 1 se <paramref name="value" /> è <see langword="true" />; in caso contrario, 0.</returns>
    </member>
    <member name="M:System.Convert.ToUInt64(System.Byte)">
      <summary>Converte il valore dell'intero senza segno a 8 bit specificato nell'intero senza segno a 64 bit equivalente.</summary>
      <param name="value">Intero senza segno a 8 bit da convertire.</param>
      <returns>Intero con segno a 64 bit equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToUInt64(System.Char)">
      <summary>Converte il valore del carattere Unicode specificato nell'intero senza segno a 64 bit equivalente.</summary>
      <param name="value">Carattere Unicode da convertire.</param>
      <returns>Intero senza segno a 64 bit equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToUInt64(System.DateTime)">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">Valore di data e ora da convertire.</param>
      <returns>Questa conversione non è supportata. Non vengono restituiti valori.</returns>
      <exception cref="T:System.InvalidCastException">Questa conversione non è supportata.</exception>
    </member>
    <member name="M:System.Convert.ToUInt64(System.Decimal)">
      <summary>Converte il valore del numero decimale specificato in un intero senza segno a 64 bit equivalente.</summary>
      <param name="value">Numero decimale da convertire.</param>
      <returns>
        <paramref name="value" />, arrotondato all'intero senza segno a 64 bit più vicino. Se <paramref name="value" /> si trova a metà tra due numeri interi, viene restituito il numero intero pari; vale a dire, 4,5 viene convertito in 4, mentre 5,5 viene convertito in 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è minore di zero o maggiore di <see cref="F:System.UInt64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt64(System.Double)">
      <summary>Converte il valore del numero a virgola mobile e con precisione doppia specificato in un intero senza segno a 64 bit equivalente.</summary>
      <param name="value">Numero a virgola mobile a precisione doppia da convertire.</param>
      <returns>
        <paramref name="value" />, arrotondato all'intero senza segno a 64 bit più vicino. Se <paramref name="value" /> si trova a metà tra due numeri interi, viene restituito il numero intero pari; vale a dire, 4,5 viene convertito in 4, mentre 5,5 viene convertito in 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è minore di zero o maggiore di <see cref="F:System.UInt64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt64(System.Int16)">
      <summary>Converte il valore dell'intero con segno a 16 bit specificato nell'intero senza segno a 64 bit equivalente.</summary>
      <param name="value">Intero con segno a 16 bit da convertire.</param>
      <returns>Intero senza segno a 64 bit equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è minore di zero.</exception>
    </member>
    <member name="M:System.Convert.ToUInt64(System.Int32)">
      <summary>Converte il valore dell'intero con segno a 32 bit specificato in un intero senza segno a 64 bit equivalente.</summary>
      <param name="value">Intero con segno a 32 bit da convertire.</param>
      <returns>Intero senza segno a 64 bit equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è minore di zero.</exception>
    </member>
    <member name="M:System.Convert.ToUInt64(System.Int64)">
      <summary>Converte il valore dell'intero con segno a 64 bit specificato in un intero senza segno a 64 bit equivalente.</summary>
      <param name="value">Intero con segno a 64 bit da convertire.</param>
      <returns>Intero senza segno a 64 bit equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è minore di zero.</exception>
    </member>
    <member name="M:System.Convert.ToUInt64(System.Object)">
      <summary>Converte il valore dell'oggetto specificato in un intero senza segno a 64 bit.</summary>
      <param name="value">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" /> oppure <see langword="null" />.</param>
      <returns>Intero senza segno a 64 bit equivalente a <paramref name="value" /> oppure zero se <paramref name="value" /> è <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">Il formato di <paramref name="value" /> non è appropriato.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> non implementa l'interfaccia <see cref="T:System.IConvertible" />.  
-oppure- 
La conversione non è supportata.</exception>
      <exception cref="T:System.OverflowException">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.UInt64.MinValue" /> o maggiore di <see cref="F:System.UInt64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt64(System.Object,System.IFormatProvider)">
      <summary>Converte il valore dell'oggetto specificato in un intero senza segno a 64 bit mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</summary>
      <param name="value">Oggetto che implementa l'interfaccia <see cref="T:System.IConvertible" />.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <returns>Intero senza segno a 64 bit equivalente a <paramref name="value" /> oppure zero se <paramref name="value" /> è <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">Il formato di <paramref name="value" /> non è appropriato.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> non implementa l'interfaccia <see cref="T:System.IConvertible" />.  
In alternativa 
La conversione non è supportata.</exception>
      <exception cref="T:System.OverflowException">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.UInt64.MinValue" /> o maggiore di <see cref="F:System.UInt64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt64(System.SByte)">
      <summary>Converte il valore dell'intero con segno a 8 bit specificato nell'intero senza segno a 64 bit equivalente.</summary>
      <param name="value">Intero con segno a 8 bit da convertire.</param>
      <returns>Intero senza segno a 64 bit equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è minore di zero.</exception>
    </member>
    <member name="M:System.Convert.ToUInt64(System.Single)">
      <summary>Converte il valore del numero a virgola mobile a precisione singola specificato in un intero senza segno a 64 bit equivalente.</summary>
      <param name="value">Numero a virgola mobile a precisione singola da convertire.</param>
      <returns>
        <paramref name="value" />, arrotondato all'intero senza segno a 64 bit più vicino. Se <paramref name="value" /> si trova a metà tra due numeri interi, viene restituito il numero intero pari; vale a dire, 4,5 viene convertito in 4, mentre 5,5 viene convertito in 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è minore di zero o maggiore di <see cref="F:System.UInt64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt64(System.String)">
      <summary>Converte la rappresentazione di stringa specificata di un numero in un intero senza segno a 64 bit equivalente.</summary>
      <param name="value">Stringa che contiene il numero da convertire.</param>
      <returns>Intero con segno a 64 bit equivalente al numero in <paramref name="value" /> oppure 0 (zero) se <paramref name="value" /> è <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> non è costituito da un segno facoltativo seguito da una sequenza di cifre (da 0 a 9).</exception>
      <exception cref="T:System.OverflowException">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.UInt64.MinValue" /> o maggiore di <see cref="F:System.UInt64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt64(System.String,System.IFormatProvider)">
      <summary>Converte la rappresentazione di stringa specificata di un numero in un intero senza segno a 64 bit equivalente mediante le informazioni di formattazione specifiche delle impostazioni cultura indicate.</summary>
      <param name="value">Stringa che contiene il numero da convertire.</param>
      <param name="provider">Oggetto che fornisce informazioni di formattazione specifiche delle impostazioni cultura.</param>
      <returns>Intero senza segno a 64 bit equivalente al numero in <paramref name="value" /> oppure 0 (zero) se <paramref name="value" /> è <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> non è costituito da un segno facoltativo seguito da una sequenza di cifre (da 0 a 9).</exception>
      <exception cref="T:System.OverflowException">L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.UInt64.MinValue" /> o maggiore di <see cref="F:System.UInt64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt64(System.String,System.Int32)">
      <summary>Converte la rappresentazione di stringa di un numero in una base specificata nell'intero senza segno a 64 bit equivalente.</summary>
      <param name="value">Stringa che contiene il numero da convertire.</param>
      <param name="fromBase">Base del numero in <paramref name="value" />, che deve essere 2, 8, 10 o 16.</param>
      <returns>Intero senza segno a 64 bit equivalente al numero in <paramref name="value" /> oppure 0 (zero) se <paramref name="value" /> è <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentException">Il valore di <paramref name="fromBase" /> non è 2, 8, 10 o 16.  
-oppure- 
 <paramref name="value" />, che rappresenta un numero senza segno non in base 10, è preceduto da un segno negativo.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> è <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> contiene un carattere che corrisponde a una cifra non valida nella base specificata da <paramref name="fromBase" />. Il messaggio di eccezione indica che non ci sono cifre da convertire se il primo carattere in <paramref name="value" /> non è valido; in caso contrario, il messaggio indica che <paramref name="value" /> contiene caratteri finali non validi.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" />, che rappresenta un numero senza segno non in base 10, è preceduto da un segno negativo.  
-oppure- 
 L'oggetto <paramref name="value" /> rappresenta un numero minore di <see cref="F:System.UInt64.MinValue" /> o maggiore di <see cref="F:System.UInt64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt64(System.UInt16)">
      <summary>Converte il valore dell'intero senza segno a 16 bit specificato nell'intero senza segno a 64 bit equivalente.</summary>
      <param name="value">Intero senza segno a 16 bit da convertire.</param>
      <returns>Intero senza segno a 64 bit equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToUInt64(System.UInt32)">
      <summary>Converte l'intero senza segno a 32 bit specificato in un equivalente intero senza segno a 64 bit.</summary>
      <param name="value">Intero senza segno a 32 bit da convertire.</param>
      <returns>Intero senza segno a 64 bit equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToUInt64(System.UInt64)">
      <summary>Restituisce l'intero senza segno a 64 bit specificato; non viene eseguita alcuna conversione effettiva.</summary>
      <param name="value">Intero senza segno a 64 bit da restituire.</param>
      <returns>
        <paramref name="value" /> viene restituito invariato.</returns>
    </member>
    <member name="M:System.Convert.TryFromBase64Chars(System.ReadOnlySpan{System.Char},System.Span{System.Byte},System.Int32@)">
      <param name="chars" />
      <param name="bytes" />
      <param name="bytesWritten" />
    </member>
    <member name="M:System.Convert.TryFromBase64String(System.String,System.Span{System.Byte},System.Int32@)">
      <param name="s" />
      <param name="bytes" />
      <param name="bytesWritten" />
    </member>
    <member name="M:System.Convert.TryToBase64Chars(System.ReadOnlySpan{System.Byte},System.Span{System.Char},System.Int32@,System.Base64FormattingOptions)">
      <param name="bytes" />
      <param name="chars" />
      <param name="charsWritten" />
      <param name="options" />
    </member>
    <member name="T:System.Diagnostics.Stopwatch">
      <summary>Fornisce un set di metodi e proprietà che possono essere utilizzati per misurare con precisione il tempo trascorso.</summary>
    </member>
    <member name="M:System.Diagnostics.Stopwatch.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.Stopwatch" />.</summary>
    </member>
    <member name="P:System.Diagnostics.Stopwatch.Elapsed">
      <summary>Ottiene il tempo totale trascorso misurato dall'istanza corrente.</summary>
      <returns>Struttura <see cref="T:System.TimeSpan" /> di sola lettura che rappresenta il tempo totale trascorso misurato dall'istanza corrente.</returns>
    </member>
    <member name="P:System.Diagnostics.Stopwatch.ElapsedMilliseconds">
      <summary>Ottiene il tempo totale trascorso misurato dall'istanza corrente in millisecondi.</summary>
      <returns>Valore long integer di sola lettura che rappresenta il numero totale di millisecondi misurato dall'istanza corrente.</returns>
    </member>
    <member name="P:System.Diagnostics.Stopwatch.ElapsedTicks">
      <summary>Ottiene il tempo totale trascorso misurato dall'istanza corrente in segni di graduazione del timer.</summary>
      <returns>Valore long integer di sola lettura che rappresenta il numero totale di segni di graduazione del timer misurati dall'istanza corrente.</returns>
    </member>
    <member name="F:System.Diagnostics.Stopwatch.Frequency">
      <summary>Ottiene la frequenza del timer sotto forma di numero di segni di graduazione al secondo. Questo campo è di sola lettura.</summary>
    </member>
    <member name="M:System.Diagnostics.Stopwatch.GetTimestamp">
      <summary>Ottiene il numero corrente di segni di graduazione nel meccanismo del timer.</summary>
      <returns>Valore long integer che rappresenta il valore del contatore dei segni di graduazione del meccanismo del timer sottostante.</returns>
    </member>
    <member name="F:System.Diagnostics.Stopwatch.IsHighResolution">
      <summary>Indica se il timer è basato su un contatore delle prestazioni ad alta risoluzione. Questo campo è di sola lettura.</summary>
    </member>
    <member name="P:System.Diagnostics.Stopwatch.IsRunning">
      <summary>Ottiene un valore che indica se il timer <see cref="T:System.Diagnostics.Stopwatch" /> è in funzione.</summary>
      <returns>
        <see langword="true" /> se l'istanza di <see cref="T:System.Diagnostics.Stopwatch" /> è attualmente in funzione e sta misurando il tempo trascorso per un intervallo; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Stopwatch.Reset">
      <summary>Interrompe la misurazione dell'intervallo di tempo e reimposta il tempo trascorso su zero.</summary>
    </member>
    <member name="M:System.Diagnostics.Stopwatch.Restart">
      <summary>Arresta la misurazione dell'intervallo di tempo, azzera il tempo trascorso e avvia la misurazione del tempo trascorso.</summary>
    </member>
    <member name="M:System.Diagnostics.Stopwatch.Start">
      <summary>Avvia o riprende la misurazione del tempo trascorso per un intervallo.</summary>
    </member>
    <member name="M:System.Diagnostics.Stopwatch.StartNew">
      <summary>Inizializza una nuova istanza di <see cref="T:System.Diagnostics.Stopwatch" />, imposta su zero la proprietà del tempo trascorso e avvia la misurazione del tempo trascorso.</summary>
      <returns>Timer <see cref="T:System.Diagnostics.Stopwatch" /> che ha appena iniziato a misurare il tempo trascorso.</returns>
    </member>
    <member name="M:System.Diagnostics.Stopwatch.Stop">
      <summary>Interrompe la misurazione del tempo trascorso per un intervallo.</summary>
    </member>
    <member name="T:System.Environment">
      <summary>Fornisce informazioni e mezzi per manipolare l'ambiente e la piattaforma correnti. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="P:System.Environment.CommandLine">
      <summary>Ottiene la riga di comando per questo processo.</summary>
      <returns>Stringa contenente gli argomenti della riga di comando.</returns>
    </member>
    <member name="P:System.Environment.CurrentDirectory">
      <summary>Ottiene o imposta il percorso completo della directory di lavoro corrente.</summary>
      <returns>Stringa che contiene un percorso di directory.</returns>
      <exception cref="T:System.ArgumentException">Si è provato a impostare su una stringa vuota ("").</exception>
      <exception cref="T:System.ArgumentNullException">Si è provato a impostare su <see langword="null." />.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Si è provato a impostare un percorso locale che non è stato trovato.</exception>
      <exception cref="T:System.Security.SecurityException">Il chiamante non ha l'autorizzazione appropriata.</exception>
    </member>
    <member name="P:System.Environment.CurrentManagedThreadId">
      <summary>Ottiene un identificatore univoco per il thread gestito corrente.</summary>
      <returns>Intero che rappresenta un identificatore univoco per il thread gestito.</returns>
    </member>
    <member name="M:System.Environment.Exit(System.Int32)">
      <summary>Termina questo processo e restituisce un codice di uscita al sistema operativo.</summary>
      <param name="exitCode">Codice di uscita da restituire al sistema operativo. Usare 0 (zero) per indicare che il processo è stato completato correttamente.</param>
      <exception cref="T:System.Security.SecurityException">Il chiamante non ha autorizzazioni di sicurezza sufficienti per eseguire questa funzione.</exception>
    </member>
    <member name="P:System.Environment.ExitCode">
      <summary>Ottiene o imposta il codice di uscita del processo.</summary>
      <returns>Intero con segno a 32 bit contenente il codice di uscita. Il valore predefinito è 0 (zero), che indica che il processo è stato completato con successo.</returns>
    </member>
    <member name="M:System.Environment.ExpandEnvironmentVariables(System.String)">
      <summary>Sostituisce il nome di ogni variabile di ambiente incorporata nella stringa specificata con l'equivalente di stringa del valore della variabile, quindi restituisce la stringa risultante.</summary>
      <param name="name">Stringa che contiene i nomi di zero o più variabili di ambiente. Ogni variabile di ambiente è inserita tra apici con il simbolo di percentuale (%).</param>
      <returns>Stringa in cui ogni variabile di ambiente viene sostituita dal relativo valore.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Environment.FailFast(System.String)">
      <summary>Interrompe immediatamente un processo dopo aver scritto un messaggio nel registro eventi dell'applicazione di Windows. Quindi, include il messaggio nella segnalazione errori da inviare a Microsoft.</summary>
      <param name="message">Messaggio in cui viene indicato il motivo dell'interruzione del processo o <see langword="null" /> se non è fornita alcuna spiegazione.</param>
    </member>
    <member name="M:System.Environment.FailFast(System.String,System.Exception)">
      <summary>Interrompe immediatamente un processo dopo aver scritto un messaggio nel registro eventi dell'applicazione di Windows. Quindi, include il messaggio e informazioni sull'eccezione nella segnalazione errori da inviare a Microsoft.</summary>
      <param name="message">Messaggio in cui viene indicato il motivo dell'interruzione del processo o <see langword="null" /> se non è fornita alcuna spiegazione.</param>
      <param name="exception">Eccezione che rappresenta l'errore che ha causato l'interruzione. In genere si tratta di un'eccezione in un blocco <see langword="catch" />.</param>
    </member>
    <member name="M:System.Environment.GetCommandLineArgs">
      <summary>Restituisce una matrice di stringa contenente gli argomenti della riga di comando per il processo corrente.</summary>
      <returns>Una matrice di stringa in cui ogni elemento contiene un argomento della riga di comando. Il primo elemento è il nome del file eseguibile, mentre i successivi zero o più elementi contengono i restanti argomenti della riga di comando.</returns>
      <exception cref="T:System.NotSupportedException">Il sistema non supporta gli argomenti della riga di comando.</exception>
    </member>
    <member name="M:System.Environment.GetEnvironmentVariable(System.String)">
      <summary>Recupera dal processo corrente il valore di una variabile di ambiente.</summary>
      <param name="variable">Nome della variabile di ambiente.</param>
      <returns>Valore della variabile di ambiente specificata nel parametro <paramref name="variable" /> o <see langword="null" /> se la variabile di ambiente non viene trovata.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="variable" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">Il chiamante non ha l'autorizzazione richiesta per eseguire questa operazione.</exception>
    </member>
    <member name="M:System.Environment.GetEnvironmentVariable(System.String,System.EnvironmentVariableTarget)">
      <summary>Recupera il valore di una variabile di ambiente dal processo corrente o dalla chiave del Registro del sistema operativo Windows per l'utente corrente o per il computer locale.</summary>
      <param name="variable">Nome di una variabile di ambiente.</param>
      <param name="target">Uno dei valori di <see cref="T:System.EnvironmentVariableTarget" />. Solo <see cref="F:System.EnvironmentVariableTarget.Process" /> è supportato in .NET Core in esecuzione su sistemi basati su Unix.</param>
      <returns>Valore della variabile di ambiente specificata nei parametri <paramref name="variable" /> e <paramref name="target" /> oppure <see langword="null" /> se la variabile di ambiente non viene trovata.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="variable" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> non è un valore valido di <see cref="T:System.EnvironmentVariableTarget" />.</exception>
      <exception cref="T:System.Security.SecurityException">Il chiamante non ha l'autorizzazione richiesta per eseguire questa operazione.</exception>
    </member>
    <member name="M:System.Environment.GetEnvironmentVariables">
      <summary>Recupera tutti i nomi delle variabili di ambiente e i rispettivi valori dal processo corrente.</summary>
      <returns>Dizionario contenente tutti i nomi delle variabili di ambiente e i rispettivi valori, se presenti; in caso contrario, se non viene trovata alcuna variabile di ambiente, verrà restituito un dizionario vuoto.</returns>
      <exception cref="T:System.Security.SecurityException">Il chiamante non ha l'autorizzazione richiesta per eseguire questa operazione.</exception>
      <exception cref="T:System.OutOfMemoryException">La memoria del buffer è insufficiente.</exception>
    </member>
    <member name="M:System.Environment.GetEnvironmentVariables(System.EnvironmentVariableTarget)">
      <summary>Recupera tutti i nomi delle variabili di ambiente e i rispettivi valori dal processo corrente o dalla chiave del Registro del sistema operativo Windows per l'utente corrente o per il computer locale.</summary>
      <param name="target">Uno dei valori di <see cref="T:System.EnvironmentVariableTarget" />. Solo  è supportato in .NET Core in esecuzione su sistemi basati su Unix.</param>
      <returns>Dizionario contenente tutti i nomi delle variabili di ambiente e i rispettivi valori ricavati dall'origine specificata dal parametro <paramref name="target" />, se presenti; in caso contrario, se non viene trovata alcuna variabile di ambiente, verrà restituito un dizionario vuoto.</returns>
      <exception cref="T:System.Security.SecurityException">Il chiamante non ha l'autorizzazione richiesta per eseguire questa operazione per il valore specificato di <paramref name="target" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> contiene un valore non valido.</exception>
    </member>
    <member name="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder)">
      <summary>Ottiene il percorso della cartella speciale di sistema identificata dall'enumerazione specificata.</summary>
      <param name="folder">Uno dei valori di enumerazione che identifica una cartella speciale di sistema.</param>
      <returns>Percorso della cartella speciale di sistema specificata, se tale cartella è fisicamente presente nel computer. In caso contrario, stringa vuota ("").  
 Una cartella non è fisicamente esistente se non è stata creata dal sistema operativo o se è stata eliminata, oppure se si tratta di una directory virtuale, come Risorse del computer, che non corrisponde a un percorso fisico.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="folder" /> non è un membro di <see cref="T:System.Environment.SpecialFolder" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">La piattaforma corrente non è supportata.</exception>
    </member>
    <member name="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder,System.Environment.SpecialFolderOption)">
      <summary>Ottiene il percorso della cartella speciale di sistema identificata dall'enumerazione specificata e usa un'opzione specificata per l'accesso a cartelle speciali.</summary>
      <param name="folder">Uno dei valori di enumerazione che identifica una cartella speciale di sistema.</param>
      <param name="option">Uno dei valori di enumerazione che specifica le opzioni da usare per l'accesso a una cartella speciale.</param>
      <returns>Percorso della cartella speciale di sistema specificata, se tale cartella è fisicamente presente nel computer. In caso contrario, stringa vuota ("").  
 Una cartella non è fisicamente esistente se non è stata creata dal sistema operativo o se è stata eliminata, oppure se si tratta di una directory virtuale, come Risorse del computer, che non corrisponde a un percorso fisico.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="folder" /> non è un membro di <see cref="T:System.Environment.SpecialFolder" />.
-oppure-
<paramref name="options" /> non è un membro di <see cref="T:System.Environment.SpecialFolderOption" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">La piattaforma corrente non è supportata.</exception>
    </member>
    <member name="M:System.Environment.GetLogicalDrives">
      <summary>Restituisce una matrice di stringa contenente i nomi delle unità logiche sul computer corrente.</summary>
      <returns>Matrice di stringhe in cui ogni elemento contiene il nome di un'unità logica. Ad esempio, se il disco rigido del computer è la prima unità logica, il primo elemento restituito è "C:\".</returns>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
      <exception cref="T:System.Security.SecurityException">Il chiamante non ha le autorizzazioni richieste.</exception>
    </member>
    <member name="P:System.Environment.HasShutdownStarted">
      <summary>Ottiene un valore che indica se si sta scaricando il dominio applicazione corrente o se è in corso la chiusura di Common Language Runtime (CLR).</summary>
      <returns>
        <see langword="true" />Se è in corso lo scaricamento del dominio dell'applicazione corrente o se è in corso l'arresto di CLR; in caso <see langword="false" />contrario,.</returns>
    </member>
    <member name="P:System.Environment.Is64BitOperatingSystem">
      <summary>Determina se il sistema operativo corrente è un sistema operativo a 64 bit.</summary>
      <returns>
        <see langword="true" /> se il sistema operativo è a 64 bit. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Environment.Is64BitProcess">
      <summary>Determina se il processo corrente è un processo a 64 bit.</summary>
      <returns>
        <see langword="true" /> se il processo è a 64 bit; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Environment.MachineName">
      <summary>Ottiene il nome NetBIOS del computer locale.</summary>
      <returns>Stringa contenente il nome di questo computer.</returns>
      <exception cref="T:System.InvalidOperationException">Non è possibile ottenere il nome del computer.</exception>
    </member>
    <member name="P:System.Environment.NewLine">
      <summary>Ottiene la stringa della nuova riga definita per questo ambiente.</summary>
      <returns>Stringa che contiene "\r\n" per le piattaforme non Unix o "\n" per le piattaforme Unix.</returns>
    </member>
    <member name="P:System.Environment.OSVersion">
      <summary>Ottiene un oggetto <see cref="T:System.OperatingSystem" /> che contiene l'identificatore e il numero di versione della piattaforma corrente.</summary>
      <returns>Oggetto contenente l'identificatore e il numero di versione della piattaforma.</returns>
      <exception cref="T:System.InvalidOperationException">Questa proprietà non è riuscita a ottenere la versione del sistema.  
-oppure- 
L'identificatore di piattaforma ottenuto non è un membro di <see cref="T:System.PlatformID" /></exception>
    </member>
    <member name="P:System.Environment.ProcessorCount">
      <summary>Ottiene il numero di processori sul computer corrente.</summary>
      <returns>Intero con segno a 32 bit che specifica il numero di processori sul computer corrente. Non è prevista alcuna impostazione predefinita. Se il computer corrente contiene più gruppi di processori, questa proprietà restituisce il numero di processori logici disponibili per l'uso da parte di Common Language Runtime (CLR).</returns>
    </member>
    <member name="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
      <summary>Crea, modifica o elimina una variabile di ambiente memorizzata nel processo corrente.</summary>
      <param name="variable">Nome di una variabile di ambiente.</param>
      <param name="value">Valore da assegnare a <paramref name="variable" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="variable" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="variable" /> contiene una stringa di lunghezza zero, un carattere iniziale zero esadecimale (0x00) o un segno di uguale ("=").  
In alternativa 
La lunghezza di <paramref name="variable" /> o <paramref name="value" /> è maggiore o uguale a 32.767 caratteri.  
In alternativa 
Si è verificato un errore durante l'esecuzione dell'operazione.</exception>
      <exception cref="T:System.Security.SecurityException">Il chiamante non ha l'autorizzazione richiesta per eseguire questa operazione.</exception>
    </member>
    <member name="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
      <summary>Crea, modifica o elimina una variabile di ambiente memorizzata nel processo corrente o nella chiave del Registro del sistema operativo Windows riservata all'utente corrente o al computer locale.</summary>
      <param name="variable">Nome di una variabile di ambiente.</param>
      <param name="value">Valore da assegnare a <paramref name="variable" />.</param>
      <param name="target">Uno dei valori di enumerazione che specifica la posizione della variabile di ambiente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="variable" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="variable" /> contiene una stringa di lunghezza zero, un carattere iniziale zero esadecimale (0x00) o un segno di uguale ("=").  
-oppure- 
La lunghezza di <paramref name="variable" /> è maggiore o uguale a 32.767 caratteri.  
-oppure- 
 <paramref name="target" /> non è membro dell'enumerazione <see cref="T:System.EnvironmentVariableTarget" /> .  
-oppure- 
 <paramref name="target" /> è <see cref="F:System.EnvironmentVariableTarget.Machine" /> o <see cref="F:System.EnvironmentVariableTarget.User" />e la lunghezza di <paramref name="variable" /> è maggiore o uguale a 255.  
-oppure- 
 <paramref name="target" /> è <see cref="F:System.EnvironmentVariableTarget.Process" /> e la lunghezza di <paramref name="value" /> è maggiore o uguale a 32.767 caratteri.  
-oppure- 
Si è verificato un errore durante l'esecuzione dell'operazione.</exception>
      <exception cref="T:System.Security.SecurityException">Il chiamante non ha l'autorizzazione richiesta per eseguire questa operazione.</exception>
    </member>
    <member name="T:System.Environment.SpecialFolder">
      <summary>Specifica costanti enumerate usate per recuperare percorsi di directory a cartelle speciali di sistema.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.AdminTools">
      <summary>Directory del file system usata per archiviare strumenti amministrativi per un singolo utente. Microsoft Management Console (MMC) salverà le console personalizzate in questa directory e verrà eseguito il roaming. Aggiunto in .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.ApplicationData">
      <summary>Directory usata come repository comune dei dati specifici dell'applicazione per l'utente roaming corrente. Un utente mobile lavora su più computer di una rete. Il profilo di un utente mobile viene conservato in un server della rete e viene caricato in un sistema quando l'utente esegue l'accesso.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CDBurning">
      <summary>Directory del file system che viene usata come un'area di gestione temporanea per i file in attesa di essere scritti su un CD. Aggiunto in .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonAdminTools">
      <summary>Directory del file system che contiene strumenti amministrativi per tutti gli utenti del computer. Aggiunto in .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonApplicationData">
      <summary>Directory usata come repository comune dei dati specifici dell'applicazione usati da tutti gli utenti.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonDesktopDirectory">
      <summary>Directory del file system che contiene file e cartelle che vengono visualizzati sul desktop di tutti gli utenti. Questa cartella speciale è valida solo per i sistemi Windows NT. Aggiunto in .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonDocuments">
      <summary>Directory del file system che contiene documenti comuni a tutti gli utenti. Questa cartella speciale è valida per i sistemi Windows NT, Windows 95 e Windows 98 con Shfolder.dll installato. Aggiunto in .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonMusic">
      <summary>Directory del file system che viene usata come repository per i file musicali comuni a tutti gli utenti. Aggiunto in .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonOemLinks">
      <summary>Questo valore è riconosciuto in Windows Vista per la compatibilità con le versioni precedenti, ma la cartella speciale non è più usata. Aggiunto in .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonPictures">
      <summary>Directory del file system che viene usata come repository per i file di immagine comuni a tutti gli utenti. Aggiunto in .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonProgramFiles">
      <summary>Directory per i componenti condivisi da più applicazioni.  
Per ottenere la directory dei file di programma comuni x86 in un sistema non x86, usare il membro <see cref="F:System.Environment.SpecialFolder.ProgramFilesX86" />.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonProgramFilesX86">
      <summary>Cartella Programmi. Aggiunto in .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonPrograms">
      <summary>Cartella per i componenti condivisi da più applicazioni. Questa cartella speciale è valida solo per i sistemi Windows NT, Windows 2000 e Windows XP. Aggiunto in .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonStartMenu">
      <summary>Directory del file system che contiene i programmi e le cartelle che vengono visualizzati nel menu Start per tutti gli utenti. Questa cartella speciale è valida solo per i sistemi Windows NT. Aggiunto in .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonStartup">
      <summary>Directory del file system che contiene i programmi che vengono visualizzati nella cartella Avvio per tutti gli utenti. Questa cartella speciale è valida solo per i sistemi Windows NT. Aggiunto in .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonTemplates">
      <summary>Directory del file system che contiene i modelli disponibili per tutti gli utenti. Questa cartella speciale è valida solo per i sistemi Windows NT.  Aggiunto in .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonVideos">
      <summary>Directory del file system che viene usata come repository per i file video comuni a tutti gli utenti. Aggiunto in .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Cookies">
      <summary>Directory usata come repository comune dei cookie di Internet.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Desktop">
      <summary>Desktop logico anziché percorso fisico del file system.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.DesktopDirectory">
      <summary>Directory usata per archiviare fisicamente gli oggetti file sul desktop. Non confondere questa directory con la cartella desktop, che è una cartella virtuale.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Favorites">
      <summary>Directory usata come repository degli elementi preferiti dell'utente.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Fonts">
      <summary>Cartella virtuale che contiene i tipi di carattere. Aggiunto in .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.History">
      <summary>Directory usata come repository comune degli elementi della cronologia di Internet.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.InternetCache">
      <summary>Directory usata come repository comune dei file temporanei Internet.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.LocalApplicationData">
      <summary>Directory usata come repository comune dei dati specifici dell'applicazione usati dall'utente non roaming corrente.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.LocalizedResources">
      <summary>Directory del file system che contiene i dati di risorsa localizzati. Aggiunto in .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.MyComputer">
      <summary>Cartella Risorse del computer. Quando viene passato al metodo <see langword="Environment.GetFolderPath" />, il membro di enumerazione <see langword="MyComputer" /> restituisce sempre la stringa vuota ("") perché non è definito alcun percorso per la cartella Risorse del computer.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.MyDocuments">
      <summary>Cartella Documenti. Questo membro equivale a <see cref="F:System.Environment.SpecialFolder.Personal" />.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.MyMusic">
      <summary>Cartella Musica.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.MyPictures">
      <summary>Cartella Immagini.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.MyVideos">
      <summary>Directory del file system che viene usata come repository per i video che appartengono a un utente.  Aggiunto in .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.NetworkShortcuts">
      <summary>Directory del file system che contiene gli oggetti collegamento che esistono nella cartella virtuale Risorse di rete. Aggiunto in .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Personal">
      <summary>Directory usata come repository comune dei documenti.  Questo membro equivale a <see cref="F:System.Environment.SpecialFolder.MyDocuments" />.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.PrinterShortcuts">
      <summary>Directory del file system che contiene gli oggetti collegamento che possono esistere nella cartella virtuale Stampanti. Aggiunto in .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.ProgramFiles">
      <summary>Directory dei programmi.  
In un sistema non x86, il passaggio di <see cref="F:System.Environment.SpecialFolder.ProgramFiles" /> al metodo <see cref="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder)" /> restituisce il percorso dei programmi non x86. Per ottenere la directory dei file di programma x86 in un sistema non x86, usare il membro <see cref="F:System.Environment.SpecialFolder.ProgramFilesX86" />.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.ProgramFilesX86">
      <summary>Cartella Programmi x86. Aggiunto in .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Programs">
      <summary>Directory contenente i gruppi di programmi dell'utente.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Recent">
      <summary>Directory contenente i documenti usati di recente dall'utente.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Resources">
      <summary>Directory del file system che contiene i dati di risorsa. Aggiunto in .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.SendTo">
      <summary>Directory contenente le voci del menu Invia a.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.StartMenu">
      <summary>Directory contenente le voci del menu Start.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Startup">
      <summary>Directory corrispondente al gruppo di programmi di Esecuzione automatica dell'utente. Il sistema avvia questi programmi ogni volta che un utente avvia o accede a Windows.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.System">
      <summary>Directory System.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.SystemX86">
      <summary>Cartella System di Windows. Aggiunto in .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Templates">
      <summary>Directory usata come repository comune dei modelli di documenti.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.UserProfile">
      <summary>Cartella del profilo dell'utente. Le applicazioni non devono creare file o cartelle a questo livello; devono inserire i dati nei percorsi a cui fa riferimento il campo <see cref="F:System.Environment.SpecialFolder.ApplicationData" />. Aggiunto in .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Windows">
      <summary>Directory di Windows o SYSROOT. Corrisponde alle variabili di ambiente %windir% o %SYSTEMROOT%. Aggiunto in .NET Framework 4.</summary>
    </member>
    <member name="T:System.Environment.SpecialFolderOption">
      <summary>Specifica opzioni da utilizzare per ottenere il percorso di una cartella speciale.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolderOption.Create">
      <summary>Il percorso della cartella viene creato, se non esiste già.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolderOption.DoNotVerify">
      <summary>Il percorso della cartella viene restituito senza verificare se il percorso esista. Se la cartella si trova in una rete, l'utilizzo di questa opzione può ridurre il tempo di ritardo.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolderOption.None">
      <summary>Il percorso della cartella viene verificato. Se la cartella esiste, viene restituito il percorso. Se la cartella non esiste, viene restituita una stringa vuota. Comportamento predefinito.</summary>
    </member>
    <member name="P:System.Environment.StackTrace">
      <summary>Ottiene informazioni sull'analisi dello stack corrente.</summary>
      <returns>Stringa che contiene informazioni sull'analisi dello stack. Il valore può essere <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="P:System.Environment.SystemDirectory">
      <summary>Recupera il percorso completo della directory di sistema.</summary>
      <returns>Stringa che contiene un percorso di directory.</returns>
    </member>
    <member name="P:System.Environment.SystemPageSize">
      <summary>Ottiene il numero di byte nella pagina di memoria del sistema operativo.</summary>
      <returns>Numero di byte in una pagina di memoria di sistema.</returns>
    </member>
    <member name="P:System.Environment.TickCount">
      <summary>Ottiene il numero di millisecondi trascorsi dall'avvio del sistema.</summary>
      <returns>Intero con segno a 32 bit contenente il tempo espresso in millisecondi che sono trascorsi dall'ultimo avvio del computer.</returns>
    </member>
    <member name="P:System.Environment.TickCount64">
      <summary>Ottiene il numero di millisecondi trascorsi dall'avvio del sistema.</summary>
      <returns>Millisecondi trascorsi dall'avvio del sistema.</returns>
    </member>
    <member name="P:System.Environment.UserDomainName">
      <summary>Ottiene il nome del dominio di rete associato all'utente corrente.</summary>
      <returns>Nome di dominio della rete associato all'utente corrente.</returns>
      <exception cref="T:System.PlatformNotSupportedException">Il sistema operativo non supporta il recupero del nome del dominio di rete.</exception>
      <exception cref="T:System.InvalidOperationException">Non è possibile recuperare il nome del dominio di rete.</exception>
    </member>
    <member name="P:System.Environment.UserInteractive">
      <summary>Ottiene un valore che indica se il processo corrente viene eseguito in modalità interattiva utente.</summary>
      <returns>
        <see langword="true" /> se il processo corrente viene eseguito in modalità interattiva utente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Environment.UserName">
      <summary>Ottiene il nome utente della persona attualmente connessa al sistema operativo.</summary>
      <returns>Nome utente della persona che ha eseguito l'accesso al sistema operativo.</returns>
    </member>
    <member name="P:System.Environment.Version">
      <summary>Ottiene un oggetto <see cref="T:System.Version" /> che descrive i numeri di versione principale, di versione secondaria, di build e di revisione di Common Language Runtime.</summary>
      <returns>Oggetto che visualizza la versione di Common Language Runtime.</returns>
    </member>
    <member name="P:System.Environment.WorkingSet">
      <summary>Ottiene la quantità di memoria fisica associata al contesto del processo.</summary>
      <returns>Intero con segno a 64 bit contenente il numero di byte di memoria fisica associata al contesto del processo.</returns>
    </member>
    <member name="T:System.EnvironmentVariableTarget">
      <summary>Specifica la posizione in cui una variabile di ambiente viene memorizzata o recuperata durante un'operazione di impostazione o di lettura.</summary>
    </member>
    <member name="F:System.EnvironmentVariableTarget.Machine">
      <summary>La variabile di ambiente viene memorizzata o recuperata dalla chiave <see langword="HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Session Manager\Environment" /> nel Registro del sistema operativo Windows. Questo valore deve essere usato nelle implementazioni di .NET in esecuzione solo nei sistemi Windows.</summary>
    </member>
    <member name="F:System.EnvironmentVariableTarget.Process">
      <summary>La variabile di ambiente viene memorizzata o recuperata dal blocco di ambiente associato al processo corrente.</summary>
    </member>
    <member name="F:System.EnvironmentVariableTarget.User">
      <summary>La variabile di ambiente viene memorizzata o recuperata dalla chiave <see langword="HKEY_CURRENT_USER\Environment" /> nel Registro del sistema operativo Windows. Questo valore deve essere usato nelle implementazioni di .NET in esecuzione solo nei sistemi Windows.</summary>
    </member>
    <member name="T:System.Globalization.GlobalizationExtensions">
      <summary>Offre metodi di estensione correlati alla globalizzazione.</summary>
    </member>
    <member name="M:System.Globalization.GlobalizationExtensions.GetStringComparer(System.Globalization.CompareInfo,System.Globalization.CompareOptions)">
      <summary>Restituisce un oggetto <see cref="T:System.StringComparer" /> in base alle regole di confronto delle stringhe con distinzione delle impostazioni cultura di un oggetto <see cref="T:System.Globalization.CompareInfo" /> specificato.</summary>
      <param name="compareInfo">Un oggetto che supporta il confronto delle stringhe con distinzione delle impostazioni cultura.</param>
      <param name="options">Un valore che definisce la modalità di confronto delle stringhe. <paramref name="options" /> è il valore di enumerazione <see cref="F:System.Globalization.CompareOptions.Ordinal" />, il valore di enumerazione <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> o una combinazione bit per bit di uno o più dei valori seguenti: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> e <see cref="F:System.Globalization.CompareOptions.StringSort" />.</param>
      <returns>Un oggetto che può essere usato per eseguire confronti tra stringhe.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="compareInfo" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="options" /> non è valido.</exception>
    </member>
    <member name="T:System.IO.BinaryReader">
      <summary>Legge i tipi di dati primitivi come valori binari in una determinata codifica.</summary>
    </member>
    <member name="M:System.IO.BinaryReader.#ctor(System.IO.Stream)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.BinaryReader" /> in base al flusso specificato e usando la codifica UTF-8.</summary>
      <param name="input">Flusso di input.</param>
      <exception cref="T:System.ArgumentException">Il flusso non supporta la lettura, è <see langword="null" /> o è già chiuso.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.#ctor(System.IO.Stream,System.Text.Encoding)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.BinaryReader" /> in base alla codifica dei caratteri e del flusso specificata.</summary>
      <param name="input">Flusso di input.</param>
      <param name="encoding">Codifica dei caratteri da usare.</param>
      <exception cref="T:System.ArgumentException">Il flusso non supporta la lettura, è <see langword="null" /> o è già chiuso.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="encoding" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.BinaryReader" /> in base alla codifica dei caratteri e di flusso specificati. Facoltativamente mantiene aperto il flusso.</summary>
      <param name="input">Flusso di input.</param>
      <param name="encoding">Codifica dei caratteri da usare.</param>
      <param name="leaveOpen">
        <see langword="true" /> per mantenere il flusso aperto dopo avere eliminato l'oggetto <see cref="T:System.IO.BinaryReader" />; in caso contrario, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException">Il flusso non supporta la lettura, è <see langword="null" /> o è già chiuso.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="encoding" /> o <paramref name="input" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.IO.BinaryReader.BaseStream">
      <summary>Espone l'accesso al flusso sottostante dell'oggetto <see cref="T:System.IO.BinaryReader" />.</summary>
      <returns>Flusso sottostante associato all'oggetto <see langword="BinaryReader" />.</returns>
    </member>
    <member name="M:System.IO.BinaryReader.Close">
      <summary>Chiude il visualizzatore corrente e il flusso sottostante.</summary>
    </member>
    <member name="M:System.IO.BinaryReader.Dispose">
      <summary>Rilascia tutte le risorse usate dall'istanza corrente della classe <see cref="T:System.IO.BinaryReader" />.</summary>
    </member>
    <member name="M:System.IO.BinaryReader.Dispose(System.Boolean)">
      <summary>Rilascia le risorse non gestite usate dalla classe <see cref="T:System.IO.BinaryReader" /> e facoltativamente le risorse gestite.</summary>
      <param name="disposing">
        <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite, <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="M:System.IO.BinaryReader.FillBuffer(System.Int32)">
      <summary>Inserisce nel buffer interno il numero specificato di byte letti dal flusso.</summary>
      <param name="numBytes">Numero di byte da leggere.</param>
      <exception cref="T:System.IO.EndOfStreamException">È stata raggiunta la fine del flusso prima che fosse possibile leggere <paramref name="numBytes" />.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">I <paramref name="numBytes" /> richiesti sono superiori alla dimensione del buffer interno.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.PeekChar">
      <summary>Restituisce il successivo carattere disponibile senza spostare in avanti la posizione del byte o del carattere.</summary>
      <returns>Carattere successivo disponibile oppure -1 se non sono disponibili altri caratteri o se il flusso non supporta la ricerca.</returns>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
      <exception cref="T:System.ArgumentException">Impossibile decodificare il carattere corrente nel buffer di caratteri interno tramite l'oggetto <see cref="T:System.Text.Encoding" /> selezionato per il flusso.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.Read">
      <summary>Legge i caratteri dal flusso sottostante e sposta in avanti la posizione corrente del flusso secondo il valore <see langword="Encoding" /> usato e il carattere specifico che il flusso sta leggendo.</summary>
      <returns>Carattere successivo dal flusso di input oppure -1 se non vi sono caratteri disponibili.</returns>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
      <exception cref="T:System.ObjectDisposedException">Il flusso è chiuso.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>Legge il numero specificato di byte dal flusso, a partire da un punto specificato nella matrice di byte.</summary>
      <param name="buffer">Buffer in cui leggere i dati.</param>
      <param name="index">Punto di partenza nel buffer dal quale avviare la lettura nel buffer.</param>
      <param name="count">Numero di byte da leggere.</param>
      <returns>Numero di byte letti nell'oggetto <paramref name="buffer" />. Può essere minore del numero di byte richiesti, se tale quantità di byte non è disponibile, oppure zero, se è stata raggiunta la fine del flusso.</returns>
      <exception cref="T:System.ArgumentException">La lunghezza del buffer meno <paramref name="index" /> è minore di <paramref name="count" />.  
In alternativa 
Il numero dei caratteri decodificati da leggere è maggiore di <paramref name="count" />. Questa situazione può verificarsi se un decodificatore Unicode restituisce caratteri di fallback o una coppia di surrogati.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> o <paramref name="count" /> è negativo.</exception>
      <exception cref="T:System.ObjectDisposedException">Il flusso è chiuso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.Read(System.Char[],System.Int32,System.Int32)">
      <summary>Legge il numero specificato di caratteri dal flusso, a partire da un punto specificato nella matrice di caratteri.</summary>
      <param name="buffer">Buffer in cui leggere i dati.</param>
      <param name="index">Punto di partenza nel buffer dal quale avviare la lettura nel buffer.</param>
      <param name="count">Numero di caratteri da leggere.</param>
      <returns>Numero complessivo di caratteri letti nel buffer. Può essere minore del numero di caratteri richiesti, se tale quantità di caratteri non è attualmente disponibile, oppure zero, se è stata raggiunta la fine del flusso.</returns>
      <exception cref="T:System.ArgumentException">La lunghezza del buffer meno <paramref name="index" /> è minore di <paramref name="count" />.  
In alternativa 
Il numero dei caratteri decodificati da leggere è maggiore di <paramref name="count" />. Questa situazione può verificarsi se un decodificatore Unicode restituisce caratteri di fallback o una coppia di surrogati.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> o <paramref name="count" /> è negativo.</exception>
      <exception cref="T:System.ObjectDisposedException">Il flusso è chiuso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.Read(System.Span{System.Byte})">
      <param name="buffer" />
    </member>
    <member name="M:System.IO.BinaryReader.Read(System.Span{System.Char})">
      <param name="buffer" />
    </member>
    <member name="M:System.IO.BinaryReader.Read7BitEncodedInt">
      <summary>Legge un intero a 32 bit in formato compresso.</summary>
      <returns>Intero a 32 bit in formato compresso.</returns>
      <exception cref="T:System.IO.EndOfStreamException">È stata raggiunta la fine del flusso.</exception>
      <exception cref="T:System.ObjectDisposedException">Il flusso è chiuso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
      <exception cref="T:System.FormatException">Il flusso è danneggiato.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadBoolean">
      <summary>Legge un valore <see langword="Boolean" /> dal flusso corrente e sposta in avanti di 1 byte la posizione corrente del flusso.</summary>
      <returns>
        <see langword="true" /> se il byte è diverso da zero; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.IO.EndOfStreamException">È stata raggiunta la fine del flusso.</exception>
      <exception cref="T:System.ObjectDisposedException">Il flusso è chiuso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadByte">
      <summary>Legge il byte successivo dal flusso corrente e sposta in avanti di 1 byte la posizione corrente del flusso.</summary>
      <returns>Byte successivo letto dal flusso corrente.</returns>
      <exception cref="T:System.IO.EndOfStreamException">È stata raggiunta la fine del flusso.</exception>
      <exception cref="T:System.ObjectDisposedException">Il flusso è chiuso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadBytes(System.Int32)">
      <summary>Legge il numero specificato di byte dal flusso corrente in una matrice di byte e sposta in avanti la posizione corrente in base a tale numero di byte.</summary>
      <param name="count">Numero di byte da leggere. Questo valore deve essere 0 o un numero non negativo; in caso contrario, si verificherà un'eccezione.</param>
      <returns>Matrice di byte contenente dati letti dal flusso sottostante. Può essere minore del numero di byte necessari se viene raggiunta la fine del flusso.</returns>
      <exception cref="T:System.ArgumentException">Il numero dei caratteri decodificati da leggere è maggiore di <paramref name="count" />. Questa situazione può verificarsi se un decodificatore Unicode restituisce caratteri di fallback o una coppia di surrogati.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
      <exception cref="T:System.ObjectDisposedException">Il flusso è chiuso.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> è negativo.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadChar">
      <summary>Legge il carattere successivo dal flusso corrente e sposta in avanti la posizione corrente del flusso secondo il valore <see langword="Encoding" /> usato e il carattere specifico letto dal flusso.</summary>
      <returns>Carattere letto dal flusso corrente.</returns>
      <exception cref="T:System.IO.EndOfStreamException">È stata raggiunta la fine del flusso.</exception>
      <exception cref="T:System.ObjectDisposedException">Il flusso è chiuso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
      <exception cref="T:System.ArgumentException">È stato letto un carattere surrogato.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadChars(System.Int32)">
      <summary>Legge il numero specificato di caratteri dal flusso corrente, restituisce i dati in una matrice di caratteri e sposta in avanti la posizione corrente secondo il valore <see langword="Encoding" /> usato e il carattere specifico letto dal flusso.</summary>
      <param name="count">Numero di caratteri da leggere.</param>
      <returns>Matrice di caratteri contenente dati letti dal flusso sottostante. Può essere minore del numero di caratteri necessari se viene raggiunta la fine del flusso.</returns>
      <exception cref="T:System.ArgumentException">Il numero dei caratteri decodificati da leggere è maggiore di <paramref name="count" />. Questa situazione può verificarsi se un decodificatore Unicode restituisce caratteri di fallback o una coppia di surrogati.</exception>
      <exception cref="T:System.ObjectDisposedException">Il flusso è chiuso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> è negativo.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadDecimal">
      <summary>Legge un valore decimale dal flusso corrente e sposta in avanti di sedici byte la posizione corrente del flusso.</summary>
      <returns>Valore decimale letto dal flusso corrente.</returns>
      <exception cref="T:System.IO.EndOfStreamException">È stata raggiunta la fine del flusso.</exception>
      <exception cref="T:System.ObjectDisposedException">Il flusso è chiuso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadDouble">
      <summary>Legge un valore a virgola mobile a 8 byte dal flusso corrente e sposta in avanti di otto byte la posizione corrente del flusso.</summary>
      <returns>Valore a virgola mobile a 8 byte letto dal flusso corrente.</returns>
      <exception cref="T:System.IO.EndOfStreamException">È stata raggiunta la fine del flusso.</exception>
      <exception cref="T:System.ObjectDisposedException">Il flusso è chiuso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadInt16">
      <summary>Legge un intero con segno a 2 byte dal flusso corrente e sposta in avanti di 2 byte la posizione corrente del flusso.</summary>
      <returns>Intero con segno a 2 byte letto dal flusso corrente.</returns>
      <exception cref="T:System.IO.EndOfStreamException">È stata raggiunta la fine del flusso.</exception>
      <exception cref="T:System.ObjectDisposedException">Il flusso è chiuso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadInt32">
      <summary>Legge un intero con segno a 4 byte dal flusso corrente e sposta in avanti di quattro byte la posizione corrente del flusso.</summary>
      <returns>Intero con segno a 4 byte letto dal flusso corrente.</returns>
      <exception cref="T:System.IO.EndOfStreamException">È stata raggiunta la fine del flusso.</exception>
      <exception cref="T:System.ObjectDisposedException">Il flusso è chiuso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadInt64">
      <summary>Legge un intero con segno a 8 byte dal flusso corrente e sposta in avanti di 8 byte la posizione del flusso.</summary>
      <returns>Intero con segno a 8 byte letto dal flusso corrente.</returns>
      <exception cref="T:System.IO.EndOfStreamException">È stata raggiunta la fine del flusso.</exception>
      <exception cref="T:System.ObjectDisposedException">Il flusso è chiuso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadSByte">
      <summary>Legge un byte con segno dal flusso corrente e sposta in avanti di un byte la posizione corrente del flusso.</summary>
      <returns>Byte con segno letto dal flusso corrente.</returns>
      <exception cref="T:System.IO.EndOfStreamException">È stata raggiunta la fine del flusso.</exception>
      <exception cref="T:System.ObjectDisposedException">Il flusso è chiuso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadSingle">
      <summary>Legge un valore a virgola mobile a 4 byte dal flusso corrente e sposta in avanti di quattro byte la posizione corrente del flusso.</summary>
      <returns>Valore a virgola mobile a 4 byte letto dal flusso corrente.</returns>
      <exception cref="T:System.IO.EndOfStreamException">È stata raggiunta la fine del flusso.</exception>
      <exception cref="T:System.ObjectDisposedException">Il flusso è chiuso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadString">
      <summary>Legge una stringa dal flusso corrente. La stringa ha un prefisso di lunghezza e viene codificata come intero, 7 bit alla volta.</summary>
      <returns>Stringa da leggere.</returns>
      <exception cref="T:System.IO.EndOfStreamException">È stata raggiunta la fine del flusso.</exception>
      <exception cref="T:System.ObjectDisposedException">Il flusso è chiuso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadUInt16">
      <summary>Legge un intero senza segno a 2 byte dal flusso corrente usando la codifica little-endian e sposta in avanti di due byte la posizione del flusso.</summary>
      <returns>Intero senza segno a 2 byte letto dal flusso corrente.</returns>
      <exception cref="T:System.IO.EndOfStreamException">È stata raggiunta la fine del flusso.</exception>
      <exception cref="T:System.ObjectDisposedException">Il flusso è chiuso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadUInt32">
      <summary>Legge un intero senza segno a 4 byte dal flusso corrente e sposta in avanti di quattro byte la posizione del flusso.</summary>
      <returns>Intero senza segno a 4 byte letto dal flusso corrente.</returns>
      <exception cref="T:System.IO.EndOfStreamException">È stata raggiunta la fine del flusso.</exception>
      <exception cref="T:System.ObjectDisposedException">Il flusso è chiuso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadUInt64">
      <summary>Legge un intero senza segno a 8 byte dal flusso corrente e sposta in avanti di otto byte la posizione del flusso.</summary>
      <returns>Intero senza segno a 8 byte letto dal flusso corrente.</returns>
      <exception cref="T:System.IO.EndOfStreamException">È stata raggiunta la fine del flusso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
      <exception cref="T:System.ObjectDisposedException">Il flusso è chiuso.</exception>
    </member>
    <member name="T:System.IO.BinaryWriter">
      <summary>Scrive i tipi primitivi in formato binario in un flusso e supporta la scrittura delle stringhe in una codifica specifica.</summary>
    </member>
    <member name="M:System.IO.BinaryWriter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.BinaryWriter" /> che scrive in un flusso.</summary>
    </member>
    <member name="M:System.IO.BinaryWriter.#ctor(System.IO.Stream)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.BinaryWriter" /> in base al flusso specificato e usando la codifica UTF-8.</summary>
      <param name="output">Flusso di output.</param>
      <exception cref="T:System.ArgumentException">Il flusso non supporta la scrittura o è già chiuso.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="output" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.BinaryWriter" /> in base alla codifica dei caratteri e del flusso specificata.</summary>
      <param name="output">Flusso di output.</param>
      <param name="encoding">Codifica dei caratteri da usare.</param>
      <exception cref="T:System.ArgumentException">Il flusso non supporta la scrittura o è già chiuso.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="output" /> o <paramref name="encoding" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.BinaryWriter" /> in base alla codifica dei caratteri e di flusso specificati. Facoltativamente mantiene aperto il flusso.</summary>
      <param name="output">Flusso di output.</param>
      <param name="encoding">Codifica dei caratteri da usare.</param>
      <param name="leaveOpen">
        <see langword="true" /> per mantenere il flusso aperto dopo avere eliminato l'oggetto <see cref="T:System.IO.BinaryWriter" />; in caso contrario, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException">Il flusso non supporta la scrittura o è già chiuso.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="output" /> o <paramref name="encoding" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.IO.BinaryWriter.BaseStream">
      <summary>Ottiene il flusso sottostante dell'oggetto <see cref="T:System.IO.BinaryWriter" />.</summary>
      <returns>Flusso sottostante associato all'oggetto <see langword="BinaryWriter" />.</returns>
    </member>
    <member name="M:System.IO.BinaryWriter.Close">
      <summary>Chiude l'oggetto <see cref="T:System.IO.BinaryWriter" /> corrente e il flusso sottostante.</summary>
    </member>
    <member name="M:System.IO.BinaryWriter.Dispose">
      <summary>Rilascia tutte le risorse usate dall'istanza corrente della classe <see cref="T:System.IO.BinaryWriter" />.</summary>
    </member>
    <member name="M:System.IO.BinaryWriter.Dispose(System.Boolean)">
      <summary>Rilascia le risorse non gestite usate da <see cref="T:System.IO.BinaryWriter" /> e, facoltativamente, le risorse gestite.</summary>
      <param name="disposing">
        <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite, <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="M:System.IO.BinaryWriter.DisposeAsync">
      <summary>Rilascia in modo asincrono le risorse usate dall'istanza corrente della classe <see cref="T:System.IO.BinaryWriter" />.</summary>
      <returns>Attività che rappresenta l'operazione di eliminazione asincrona.</returns>
    </member>
    <member name="M:System.IO.BinaryWriter.Flush">
      <summary>Cancella i dati di tutti i buffer del writer corrente e consente la scrittura dei dati memorizzati nel buffer nel dispositivo sottostante.</summary>
    </member>
    <member name="F:System.IO.BinaryWriter.Null">
      <summary>Specifica un oggetto <see cref="T:System.IO.BinaryWriter" /> privo di archivio di backup.</summary>
    </member>
    <member name="F:System.IO.BinaryWriter.OutStream">
      <summary>Contiene il flusso sottostante.</summary>
    </member>
    <member name="M:System.IO.BinaryWriter.Seek(System.Int32,System.IO.SeekOrigin)">
      <summary>Imposta la posizione all'interno del flusso corrente.</summary>
      <param name="offset">Offset dei byte relativo a <paramref name="origin" />.</param>
      <param name="origin">Campo di <see cref="T:System.IO.SeekOrigin" /> che indica il punto di riferimento dal quale ottenere la nuova posizione.</param>
      <returns>Posizione all'interno del flusso corrente.</returns>
      <exception cref="T:System.IO.IOException">Il puntatore al file è stato spostato in un percorso non valido.</exception>
      <exception cref="T:System.ArgumentException">Il valore <see cref="T:System.IO.SeekOrigin" /> non è valido.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.Boolean)">
      <summary>Scrive un valore <see langword="Boolean" /> a un byte nel flusso corrente, con 0 che rappresenta <see langword="false" /> e 1 che rappresenta <see langword="true" />.</summary>
      <param name="value">Valore <see langword="Boolean" /> da scrivere (0 o 1).</param>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
      <exception cref="T:System.ObjectDisposedException">Il flusso è chiuso.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.Byte)">
      <summary>Scrive un byte senza segno nel flusso corrente e sposta in avanti di un byte la posizione del flusso.</summary>
      <param name="value">Byte senza segno da scrivere.</param>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
      <exception cref="T:System.ObjectDisposedException">Il flusso è chiuso.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.Byte[])">
      <summary>Scrive una matrice di byte nel flusso sottostante.</summary>
      <param name="buffer">Matrice di byte che contiene i dati da scrivere.</param>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
      <exception cref="T:System.ObjectDisposedException">Il flusso è chiuso.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>Scrive un'area di una matrice di byte nel flusso corrente.</summary>
      <param name="buffer">Matrice di byte che contiene i dati da scrivere.</param>
      <param name="index">L'indice del primo byte da leggere da <paramref name="buffer" /> e da scrivere nel flusso.</param>
      <param name="count">Il numero di byte da leggere da <paramref name="buffer" /> e da scrivere nel flusso.</param>
      <exception cref="T:System.ArgumentException">La lunghezza del buffer meno <paramref name="index" /> è minore di <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> o <paramref name="count" /> è negativo.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
      <exception cref="T:System.ObjectDisposedException">Il flusso è chiuso.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.Char)">
      <summary>Scrive un carattere Unicode nel flusso corrente e sposta in avanti la posizione corrente del flusso secondo il valore <see langword="Encoding" /> usato e i caratteri specifici scritti nel flusso.</summary>
      <param name="ch">Carattere Unicode non surrogato da scrivere.</param>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
      <exception cref="T:System.ObjectDisposedException">Il flusso è chiuso.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="ch" /> è un carattere surrogato singolo.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.Char[])">
      <summary>Scrive una matrice di caratteri nel flusso corrente e sposta in avanti la posizione corrente del flusso secondo il valore <see langword="Encoding" /> usato e i caratteri specifici scritti nel flusso.</summary>
      <param name="chars">Matrice di caratteri che contiene i dati da scrivere.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="chars" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Il flusso è chiuso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.Char[],System.Int32,System.Int32)">
      <summary>Scrive una sezione di una matrice di caratteri nel flusso corrente e sposta in avanti la posizione corrente del flusso secondo il valore <see langword="Encoding" /> usato e i caratteri specifici scritti nel flusso.</summary>
      <param name="chars">Matrice di caratteri che contiene i dati da scrivere.</param>
      <param name="index">L'indice del primo carattere da leggere da <paramref name="chars" /> e da scrivere nel flusso.</param>
      <param name="count">Il numero di caratteri da leggere da <paramref name="chars" /> e da scrivere nel flusso.</param>
      <exception cref="T:System.ArgumentException">La lunghezza del buffer meno <paramref name="index" /> è minore di <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="chars" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> o <paramref name="count" /> è negativo.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
      <exception cref="T:System.ObjectDisposedException">Il flusso è chiuso.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.Decimal)">
      <summary>Scrive un valore decimale nel flusso corrente e sposta in avanti di sedici byte la posizione del flusso.</summary>
      <param name="value">Valore decimale da scrivere.</param>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
      <exception cref="T:System.ObjectDisposedException">Il flusso è chiuso.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.Double)">
      <summary>Scrive un valore a virgola mobile a otto byte nel flusso corrente e sposta in avanti di otto byte la posizione del flusso.</summary>
      <param name="value">Valore a virgola mobile a otto byte da scrivere.</param>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
      <exception cref="T:System.ObjectDisposedException">Il flusso è chiuso.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.Int16)">
      <summary>Scrive un intero con segno a due byte nel flusso corrente e sposta in avanti di due byte la posizione del flusso.</summary>
      <param name="value">Intero con segno a due byte da scrivere.</param>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
      <exception cref="T:System.ObjectDisposedException">Il flusso è chiuso.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.Int32)">
      <summary>Scrive un intero con segno a quattro byte nel flusso corrente e sposta in avanti di quattro byte la posizione del flusso.</summary>
      <param name="value">Intero con segno a quattro byte da scrivere.</param>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
      <exception cref="T:System.ObjectDisposedException">Il flusso è chiuso.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.Int64)">
      <summary>Scrive un intero con segno a otto byte nel flusso corrente e sposta in avanti di otto byte la posizione del flusso.</summary>
      <param name="value">Intero con segno a otto byte da scrivere.</param>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
      <exception cref="T:System.ObjectDisposedException">Il flusso è chiuso.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.ReadOnlySpan{System.Byte})">
      <summary>Scrive un intervallo di byte nel flusso corrente.</summary>
      <param name="buffer">Intervallo di byte da scrivere.</param>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.ReadOnlySpan{System.Char})">
      <summary>Scrive un intervallo di caratteri nel flusso corrente e sposta in avanti la posizione corrente del flusso secondo il valore <see langword="Encoding" /> usato e i caratteri specifici scritti nel flusso.</summary>
      <param name="chars">Intervallo di caratteri da scrivere.</param>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.SByte)">
      <summary>Scrive un byte con segno nel flusso corrente e sposta in avanti di un byte la posizione del flusso.</summary>
      <param name="value">Byte con segno da scrivere.</param>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
      <exception cref="T:System.ObjectDisposedException">Il flusso è chiuso.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.Single)">
      <summary>Scrive un valore a virgola mobile a quattro byte nel flusso corrente e sposta in avanti di quattro byte la posizione del flusso.</summary>
      <param name="value">Valore a virgola mobile a quattro byte da scrivere.</param>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
      <exception cref="T:System.ObjectDisposedException">Il flusso è chiuso.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.String)">
      <summary>Scrive una stringa con prefisso di lunghezza nel flusso con la codifica corrente dell'oggetto <see cref="T:System.IO.BinaryWriter" /> e sposta in avanti la posizione corrente del flusso secondo la codifica usata e i caratteri specifici scritti nel flusso.</summary>
      <param name="value">Valore da scrivere.</param>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Il flusso è chiuso.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.UInt16)">
      <summary>Scrive un intero senza segno a due byte nel flusso corrente e sposta in avanti di due byte la posizione del flusso.</summary>
      <param name="value">Intero senza segno a due byte da scrivere.</param>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
      <exception cref="T:System.ObjectDisposedException">Il flusso è chiuso.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.UInt32)">
      <summary>Scrive un intero senza segno a quattro byte nel flusso corrente e sposta in avanti di quattro byte la posizione del flusso.</summary>
      <param name="value">Intero senza segno a quattro byte da scrivere.</param>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
      <exception cref="T:System.ObjectDisposedException">Il flusso è chiuso.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.UInt64)">
      <summary>Scrive un intero senza segno a otto byte nel flusso corrente e sposta in avanti di otto byte la posizione del flusso.</summary>
      <param name="value">Intero senza segno a otto byte da scrivere.</param>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
      <exception cref="T:System.ObjectDisposedException">Il flusso è chiuso.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write7BitEncodedInt(System.Int32)">
      <summary>Scrive un intero a 32 bit in un formato compresso.</summary>
      <param name="value">Intero a 32 bit da scrivere.</param>
      <exception cref="T:System.IO.EndOfStreamException">È stata raggiunta la fine del flusso.</exception>
      <exception cref="T:System.ObjectDisposedException">Il flusso è chiuso.</exception>
      <exception cref="T:System.IO.IOException">Il flusso è chiuso.</exception>
    </member>
    <member name="T:System.IO.BufferedStream">
      <summary>Aggiunge un livello di buffer per operazioni di lettura e scrittura in un altro flusso. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.IO.BufferedStream.#ctor(System.IO.Stream)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.BufferedStream" /> con una dimensione predefinita del buffer di 4096 byte.</summary>
      <param name="stream">Flusso corrente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.BufferedStream.#ctor(System.IO.Stream,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.BufferedStream" /> con la dimensione specificata del buffer.</summary>
      <param name="stream">Flusso corrente.</param>
      <param name="bufferSize">Dimensioni del buffer, in byte.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="bufferSize" /> è negativo.</exception>
    </member>
    <member name="M:System.IO.BufferedStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Inizia un'operazione di lettura asincrona. (In alternativa, si consideri l'uso di <see cref="M:System.IO.BufferedStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />.)</summary>
      <param name="buffer">Buffer in cui leggere i dati.</param>
      <param name="offset">Offset dei byte nel <paramref name="buffer" /> da cui iniziare la scrittura dei dati letti dal flusso.</param>
      <param name="count">Numero massimo di byte da leggere.</param>
      <param name="callback">Callback asincrono facoltativo, da chiamare quando la lettura è completa.</param>
      <param name="state">Oggetto fornito dall'utente che distingue questa specifica richiesta di lettura asincrona da altre richieste.</param>
      <returns>Oggetto che rappresenta la lettura asincrona, che può essere ancora in sospeso.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> o <paramref name="count" /> è negativo.</exception>
      <exception cref="T:System.IO.IOException">Si è tentato di eseguire la lettura asincrona oltre la fine del flusso.</exception>
      <exception cref="T:System.ArgumentException">La lunghezza del buffer meno <paramref name="offset" /> è minore di <paramref name="count" />.</exception>
      <exception cref="T:System.NotSupportedException">Il flusso corrente non supporta l'operazione di lettura.</exception>
    </member>
    <member name="M:System.IO.BufferedStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Inizia un'operazione di scrittura asincrona. (In alternativa, si consideri l'uso di <see cref="M:System.IO.BufferedStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />.)</summary>
      <param name="buffer">Buffer contenente i dati da scrivere nel flusso corrente.</param>
      <param name="offset">Offset dei byte in base zero in <paramref name="buffer" /> da cui iniziare la copia dei byte nel flusso corrente.</param>
      <param name="count">Numero massimo di byte da scrivere.</param>
      <param name="callback">Metodo da chiamare quando l'operazione di scrittura asincrona viene completata.</param>
      <param name="state">Oggetto fornito dall'utente che distingue questa specifica richiesta di scrittura asincrona da altre richieste.</param>
      <returns>Oggetto che rappresenta la scrittura asincrona che può essere ancora in sospeso.</returns>
      <exception cref="T:System.ArgumentException">La lunghezza di <paramref name="buffer" /> meno <paramref name="offset" /> è minore di <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> o <paramref name="count" /> è negativo.</exception>
      <exception cref="T:System.NotSupportedException">Il flusso non supporta la scrittura.</exception>
    </member>
    <member name="P:System.IO.BufferedStream.BufferSize">
      <summary>Ottiene le dimensioni del buffer in byte per questo flusso memorizzato nel buffer.</summary>
      <returns>Integer che rappresenta la dimensione del buffer in byte.</returns>
    </member>
    <member name="P:System.IO.BufferedStream.CanRead">
      <summary>Ottiene un valore che indica se il flusso corrente supporta la lettura.</summary>
      <returns>
        <see langword="true" /> se il flusso supporta la lettura; <see langword="false" /> se il flusso è chiuso o è stato aperto con accesso in sola scrittura.</returns>
    </member>
    <member name="P:System.IO.BufferedStream.CanSeek">
      <summary>Ottiene un valore che indica se il flusso corrente supporta la ricerca.</summary>
      <returns>
        <see langword="true" /> se il flusso supporta la ricerca; <see langword="false" /> se il flusso è chiuso o è stato creato da un handle del sistema operativo, ad esempio un pipe o un output di console.</returns>
    </member>
    <member name="P:System.IO.BufferedStream.CanWrite">
      <summary>Ottiene un valore che indica se il flusso corrente supporta la scrittura.</summary>
      <returns>
        <see langword="true" /> se il flusso supporta la scrittura; <see langword="false" /> se il flusso è chiuso o è stato aperto con accesso in sola lettura.</returns>
    </member>
    <member name="M:System.IO.BufferedStream.CopyTo(System.IO.Stream,System.Int32)">
      <summary>Legge i byte dal flusso memorizzato nel buffer corrente e li scrive in un altro flusso.</summary>
      <param name="destination">Flusso in cui verrà copiato il contenuto del flusso memorizzato nel buffer corrente.</param>
      <param name="bufferSize">Dimensione del buffer. Il valore deve essere maggiore di zero. La dimensione predefinita è 81920.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destination" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="bufferSize" /> è un valore negativo o zero.</exception>
      <exception cref="T:System.NotSupportedException">Il flusso corrente non supporta la lettura.
-oppure-
<paramref name="destination" /> non supporta la scrittura.</exception>
      <exception cref="T:System.ObjectDisposedException">Il flusso corrente o <paramref name="destination" /> è stato chiuso prima che venisse chiamato il metodo <see cref="M:System.IO.Stream.CopyTo(System.IO.Stream)" />.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
    </member>
    <member name="M:System.IO.BufferedStream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)">
      <summary>Legge in modo asincrono i byte dal flusso memorizzato nel buffer corrente e li scrive in un altro flusso, usando dimensioni del buffer e un token di annullamento specificati.</summary>
      <param name="destination">Flusso in cui verrà copiato il contenuto del flusso memorizzato nel buffer corrente.</param>
      <param name="bufferSize">Dimensione del buffer, in byte. Il valore deve essere maggiore di zero. La dimensione predefinita è 81920.</param>
      <param name="cancellationToken">Token da monitorare per le richieste di annullamento. Il valore predefinito è <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Attività che rappresenta l'operazione di copia asincrona.</returns>
    </member>
    <member name="M:System.IO.BufferedStream.DisposeAsync">
      <summary>Consente di rilasciare in modo asincrono le risorse non gestite usate dal flusso memorizzato nel buffer.</summary>
      <returns>Attività che rappresenta l'operazione di eliminazione asincrona.</returns>
    </member>
    <member name="M:System.IO.BufferedStream.EndRead(System.IAsyncResult)">
      <summary>Attende il completamento dell'operazione di lettura asincrona in sospeso. (In alternativa, si consideri l'uso di <see cref="M:System.IO.BufferedStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />.)</summary>
      <param name="asyncResult">Riferimento alla richiesta asincrona in sospeso da attendere.</param>
      <returns>Numero di byte letti dal flusso, tra 0 (zero) e il numero di byte richiesto. I flussi restituiscono solo 0 solo alla fine del flusso; in caso contrario, è necessario che effettuino un blocco fino a quando sia disponibile almeno 1 byte.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">L'oggetto <see cref="T:System.IAsyncResult" /> non è stato creato chiamando <see cref="M:System.IO.BufferedStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> in questa classe.</exception>
    </member>
    <member name="M:System.IO.BufferedStream.EndWrite(System.IAsyncResult)">
      <summary>Termina un'operazione di scrittura asincrona, rimanendo bloccato fino al completamento dell'operazione di I/O. (In alternativa, si consideri l'uso di <see cref="M:System.IO.BufferedStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />.)</summary>
      <param name="asyncResult">La richiesta asincrona in sospeso.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">L'oggetto <see cref="T:System.IAsyncResult" /> non è stato creato chiamando <see cref="M:System.IO.BufferedStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> in questa classe.</exception>
    </member>
    <member name="M:System.IO.BufferedStream.Flush">
      <summary>Consente di cancellare i dati di tutti i buffer del flusso e la scrittura dei dati memorizzati nel buffer nella periferica sottostante.</summary>
      <exception cref="T:System.ObjectDisposedException">Il flusso è stato eliminato.</exception>
      <exception cref="T:System.IO.IOException">L'origine dati o il repository non è aperto.</exception>
    </member>
    <member name="M:System.IO.BufferedStream.FlushAsync(System.Threading.CancellationToken)">
      <summary>Cancella in modo asincrono i dati di tutti i buffer del flusso, determina la scrittura dei dati memorizzati nel buffer nel dispositivo sottostante e monitora le richieste di annullamento.</summary>
      <param name="cancellationToken">Token da monitorare per le richieste di annullamento.</param>
      <returns>Attività che rappresenta l'operazione di scaricamento asincrona.</returns>
      <exception cref="T:System.ObjectDisposedException">Il flusso è stato eliminato.</exception>
    </member>
    <member name="P:System.IO.BufferedStream.Length">
      <summary>Ottiene la lunghezza del flusso in byte.</summary>
      <returns>Lunghezza del flusso in byte.</returns>
      <exception cref="T:System.IO.IOException">Il flusso sottostante è <see langword="null" /> o è chiuso.</exception>
      <exception cref="T:System.NotSupportedException">Il flusso non supporta la ricerca.</exception>
      <exception cref="T:System.ObjectDisposedException">Sono stati chiamati dei metodi dopo la chiusura del flusso.</exception>
    </member>
    <member name="P:System.IO.BufferedStream.Position">
      <summary>Ottiene la posizione all'interno del flusso corrente.</summary>
      <returns>Posizione all'interno del flusso corrente.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore passato a <see cref="M:System.IO.BufferedStream.Seek(System.Int64,System.IO.SeekOrigin)" /> è negativo.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O, quale la chiusura del flusso.</exception>
      <exception cref="T:System.NotSupportedException">Il flusso non supporta la ricerca.</exception>
      <exception cref="T:System.ObjectDisposedException">Sono stati chiamati dei metodi dopo la chiusura del flusso.</exception>
    </member>
    <member name="M:System.IO.BufferedStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>Copia i byte dal flusso correntemente memorizzato nel buffer in una matrice.</summary>
      <param name="array">Buffer in cui verranno copiati i byte.</param>
      <param name="offset">Offset dei byte nel buffer da cui iniziare la lettura dei byte.</param>
      <param name="count">Numero di byte da leggere.</param>
      <returns>Numero complessivo di byte letti nel parametro <paramref name="array" />. Può essere minore del numero di byte richiesti se tale quantità di byte non è disponibile o 0 se è stata raggiunta la fine del flusso prima della lettura dei dati.</returns>
      <exception cref="T:System.ArgumentException">La lunghezza di <paramref name="array" /> meno <paramref name="offset" /> è minore di <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> o <paramref name="count" /> è negativo.</exception>
      <exception cref="T:System.IO.IOException">Il flusso non è aperto o è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Il flusso non supporta la lettura.</exception>
      <exception cref="T:System.ObjectDisposedException">Sono stati chiamati dei metodi dopo la chiusura del flusso.</exception>
    </member>
    <member name="M:System.IO.BufferedStream.Read(System.Span{System.Byte})">
      <summary>Copia byte dal flusso memorizzato nel buffer corrente a un intervallo di byte e sposta in avanti la posizione all'interno del flusso memorizzato nel buffer in base al numero di byte letti.</summary>
      <param name="destination">Un'area di memoria. Quando questo metodo termina, il contenuto di quest'area viene sostituito dai byte letti dall'origine corrente.</param>
      <returns>Numero complessivo di byte letti nel buffer. È possibile che questo numero sia inferiore a quello dei byte allocati nel buffer se la quantità di byte disponibili è minore oppure che corrisponda a zero (0) se è stata raggiunta la fine del flusso.</returns>
    </member>
    <member name="M:System.IO.BufferedStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>Legge in modo asincrono una sequenza di byte dal flusso corrente e passa alla posizione successiva all'interno del flusso corrente in base al numero di byte letti e monitora le richieste di annullamento.</summary>
      <param name="buffer">Buffer in cui scrivere i dati.</param>
      <param name="offset">Offset dei byte in <paramref name="buffer" /> da cui iniziare la scrittura dei dati dal flusso.</param>
      <param name="count">Numero massimo di byte da leggere.</param>
      <param name="cancellationToken">Token da monitorare per le richieste di annullamento.</param>
      <returns>Attività che rappresenta l'operazione di lettura asincrona. Il valore del parametro di <paramref name="TResult" /> contiene il numero totale di byte letti nel buffer. Il valore del risultato può essere minore del numero di byte richiesti se il numero di byte attualmente disponibili è minore di quelli richiesti o può essere pari a 0 (zero) se è stata raggiunta la fine del flusso.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> o <paramref name="count" /> è negativo.</exception>
      <exception cref="T:System.ArgumentException">La somma di <paramref name="offset" /> e <paramref name="count" /> è maggiore della lunghezza del buffer.</exception>
      <exception cref="T:System.NotSupportedException">Il flusso non supporta la lettura.</exception>
      <exception cref="T:System.ObjectDisposedException">Il flusso è stato eliminato.</exception>
      <exception cref="T:System.InvalidOperationException">Il flusso è attualmente usato da un'operazione di lettura precedente.</exception>
    </member>
    <member name="M:System.IO.BufferedStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
      <summary>Legge in modo asincrono una sequenza di byte dal flusso memorizzato nel buffer corrente e sposta in avanti la posizione all'interno del flusso memorizzato nel buffer in base al numero di byte letti.</summary>
      <param name="buffer">L'area di memoria su cui scrivere i dati.</param>
      <param name="cancellationToken">Token da monitorare per le richieste di annullamento. Il valore predefinito è <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Attività che rappresenta l'operazione di lettura asincrona. Il valore della proprietà <see cref="P:System.Threading.Tasks.ValueTask`1.Result" /> contiene il numero totale di byte letti nel buffer. È possibile che il valore risultante sia inferiore al numero dei byte allocati nel buffer se la quantità di byte disponibili è minore oppure che corrisponda a zero (0) se è stata raggiunta la fine del flusso.</returns>
    </member>
    <member name="M:System.IO.BufferedStream.ReadByte">
      <summary>Legge un byte dal flusso sottostante e restituisce il cast di byte su un parametro <see langword="int" /> o restituisce -1 se la lettura viene eseguita a partire dalla fine del flusso.</summary>
      <returns>Cast di byte su un parametro <see langword="int" /> o -1 se la lettura viene eseguita a partire dalla fine del flusso.</returns>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O, quale la chiusura del flusso.</exception>
      <exception cref="T:System.NotSupportedException">Il flusso non supporta la lettura.</exception>
      <exception cref="T:System.ObjectDisposedException">Sono stati chiamati dei metodi dopo la chiusura del flusso.</exception>
    </member>
    <member name="M:System.IO.BufferedStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>Imposta la posizione all'interno del flusso corrente memorizzato nel buffer.</summary>
      <param name="offset">Offset dei byte relativo a <paramref name="origin" />.</param>
      <param name="origin">Valore del tipo <see cref="T:System.IO.SeekOrigin" /> che indica il punto di riferimento dal quale ottenere la nuova posizione.</param>
      <returns>Nuova posizione all'interno del flusso corrente memorizzato nel buffer.</returns>
      <exception cref="T:System.IO.IOException">Il flusso non è aperto o è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Il flusso non supporta la ricerca.</exception>
      <exception cref="T:System.ObjectDisposedException">Sono stati chiamati dei metodi dopo la chiusura del flusso.</exception>
    </member>
    <member name="M:System.IO.BufferedStream.SetLength(System.Int64)">
      <summary>Imposta la lunghezza del flusso memorizzato nel buffer.</summary>
      <param name="value">Intero che indica la lunghezza desiderata in byte del flusso corrente memorizzato nel buffer.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> è negativo.</exception>
      <exception cref="T:System.IO.IOException">Il flusso non è aperto o è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Il flusso non supporta né la scrittura né la ricerca.</exception>
      <exception cref="T:System.ObjectDisposedException">Sono stati chiamati dei metodi dopo la chiusura del flusso.</exception>
    </member>
    <member name="P:System.IO.BufferedStream.UnderlyingStream">
      <summary>Ottiene l'istanza di <see cref="T:System.IO.Stream" /> sottostante per questo flusso memorizzato nel buffer.</summary>
      <returns>Istanza del flusso sottostante.</returns>
    </member>
    <member name="M:System.IO.BufferedStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>Copia i byte nel flusso memorizzato nel buffer e sposta la posizione corrente, all'interno del flusso memorizzato nel buffer, in base al numero di byte scritto.</summary>
      <param name="array">Matrice di byte da cui copiare i byte di <paramref name="count" /> nel flusso corrente memorizzato nel buffer.</param>
      <param name="offset">Offset nel buffer da cui avviare la copia dei byte nel flusso corrente memorizzato nel buffer.</param>
      <param name="count">Numero di byte da scrivere nel flusso corrente memorizzato nel buffer.</param>
      <exception cref="T:System.ArgumentException">La lunghezza di <paramref name="array" /> meno <paramref name="offset" /> è minore di <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> o <paramref name="count" /> è negativo.</exception>
      <exception cref="T:System.IO.IOException">Il flusso è chiuso o <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Il flusso non supporta la scrittura.</exception>
      <exception cref="T:System.ObjectDisposedException">Sono stati chiamati dei metodi dopo la chiusura del flusso.</exception>
    </member>
    <member name="M:System.IO.BufferedStream.Write(System.ReadOnlySpan{System.Byte})">
      <summary>Scrive una sequenza di byte nel flusso memorizzato nel buffer corrente e sposta in avanti la posizione nel flusso in base al numero di byte scritti.</summary>
      <param name="buffer">Un'area di memoria. Questo metodo copia il contenuto di quest'area nel flusso memorizzato nel buffer corrente.</param>
    </member>
    <member name="M:System.IO.BufferedStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>Scrive in modo asincrono una sequenza di byte nel flusso corrente e passa alla posizione successiva all'interno del flusso corrente in base al numero di byte scritti e monitora le richieste di annullamento.</summary>
      <param name="buffer">Buffer da cui scrivere i dati.</param>
      <param name="offset">Offset dei byte in base zero in <paramref name="buffer" /> da cui iniziare la copia dei byte nel flusso.</param>
      <param name="count">Numero massimo di byte da scrivere.</param>
      <param name="cancellationToken">Token da monitorare per le richieste di annullamento.</param>
      <returns>Attività che rappresenta l'operazione di scrittura asincrona.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> o <paramref name="count" /> è negativo.</exception>
      <exception cref="T:System.ArgumentException">La somma di <paramref name="offset" /> e <paramref name="count" /> è maggiore della lunghezza del buffer.</exception>
      <exception cref="T:System.NotSupportedException">Il flusso non supporta la scrittura.</exception>
      <exception cref="T:System.ObjectDisposedException">Il flusso è stato eliminato.</exception>
      <exception cref="T:System.InvalidOperationException">Il flusso è attualmente usato da un'operazione di scrittura precedente.</exception>
    </member>
    <member name="M:System.IO.BufferedStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
      <summary>Scrive in modo asincrono una sequenza di byte nel flusso memorizzato nel buffer corrente e sposta in avanti la posizione all'interno del flusso memorizzato nel buffer corrente in base al numero di byte scritti ed esegue il monitoraggio delle richieste di annullamento.</summary>
      <param name="buffer">L'area di memoria da cui scrivere i dati.</param>
      <param name="cancellationToken">Token da monitorare per le richieste di annullamento. Il valore predefinito è <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Attività che rappresenta l'operazione di scrittura asincrona.</returns>
    </member>
    <member name="M:System.IO.BufferedStream.WriteByte(System.Byte)">
      <summary>Scrive un byte nella posizione corrente all'interno del flusso memorizzato nel buffer.</summary>
      <param name="value">Byte da scrivere nel flusso.</param>
      <exception cref="T:System.NotSupportedException">Il flusso non supporta la scrittura.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Sono stati chiamati dei metodi dopo la chiusura del flusso.</exception>
    </member>
    <member name="T:System.IO.EndOfStreamException">
      <summary>Eccezione generata durante il tentativo di leggere oltre la fine di un flusso.</summary>
    </member>
    <member name="M:System.IO.EndOfStreamException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.EndOfStreamException" /> con la relativa stringa di messaggio impostata su un messaggio fornito dal sistema e il relativo HRESULT impostato su COR_E_ENDOFSTREAM.</summary>
    </member>
    <member name="M:System.IO.EndOfStreamException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.EndOfStreamException" /> con le informazioni di serializzazione e di contesto specificate.</summary>
      <param name="info">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> che contiene i dati oggetto serializzati relativi all'eccezione generata.</param>
      <param name="context">Oggetto <see cref="T:System.Runtime.Serialization.StreamingContext" /> contenente le informazioni contestuali sull'origine o sulla destinazione.</param>
    </member>
    <member name="M:System.IO.EndOfStreamException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.EndOfStreamException" /> con la relativa stringa di messaggio impostata su <paramref name="message" /> e HRESULT impostato su COR_E_ENDOFSTREAM.</summary>
      <param name="message">Stringa che descrive l'errore. Il contenuto di <paramref name="message" /> deve essere facilmente comprensibile. Il chiamante del costruttore deve garantire che la stringa sia stata localizzata in base alle impostazioni cultura correnti del sistema.</param>
    </member>
    <member name="M:System.IO.EndOfStreamException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.EndOfStreamException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message">Stringa che descrive l'errore. Il contenuto di <paramref name="message" /> deve essere facilmente comprensibile. Il chiamante del costruttore deve garantire che la stringa sia stata localizzata in base alle impostazioni cultura correnti del sistema.</param>
      <param name="innerException">Eccezione che ha determinato l'eccezione corrente. Se il parametro <paramref name="innerException" /> non è <see langword="null" />, l'eccezione corrente viene generata in un blocco <see langword="catch" /> in cui viene gestita l'eccezione interna.</param>
    </member>
    <member name="T:System.IO.InvalidDataException">
      <summary>Eccezione generata se un flusso di dati è in un formato non valido.</summary>
    </member>
    <member name="M:System.IO.InvalidDataException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.InvalidDataException" />.</summary>
    </member>
    <member name="M:System.IO.InvalidDataException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.InvalidDataException" /> con un messaggio di errore specificato.</summary>
      <param name="message">Messaggio di errore in cui viene indicato il motivo dell'eccezione.</param>
    </member>
    <member name="M:System.IO.InvalidDataException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.InvalidDataException" /> con un riferimento all'eccezione interna che è la causa dell'eccezione.</summary>
      <param name="message">Messaggio di errore in cui viene indicato il motivo dell'eccezione.</param>
      <param name="innerException">Eccezione che ha determinato l'eccezione corrente. Se il parametro <paramref name="innerException" /> non è <see langword="null" />, l'eccezione corrente viene generata in un blocco <see langword="catch" /> in cui viene gestita l'eccezione interna.</param>
    </member>
    <member name="T:System.IO.MemoryStream">
      <summary>Crea un flusso il cui archivio di backup è costituito dalla memoria.</summary>
    </member>
    <member name="M:System.IO.MemoryStream.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.MemoryStream" /> con una capacità espandibile inizializzata su zero.</summary>
    </member>
    <member name="M:System.IO.MemoryStream.#ctor(System.Byte[])">
      <summary>Inizializza una nuova istanza non ridimensionabile della classe <see cref="T:System.IO.MemoryStream" /> in base alla matrice di byte specificata.</summary>
      <param name="buffer">Matrice di byte senza segno da cui creare il flusso corrente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Boolean)">
      <summary>Inizializza una nuova istanza non ridimensionabile della classe <see cref="T:System.IO.MemoryStream" /> in base alla matrice di byte specificata, con la proprietà <see cref="P:System.IO.MemoryStream.CanWrite" /> impostata secondo quanto specificato.</summary>
      <param name="buffer">Matrice di byte senza segno da cui creare il flusso.</param>
      <param name="writable">Impostazione della proprietà <see cref="P:System.IO.MemoryStream.CanWrite" />, che determina se il flusso supporta la scrittura.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Int32,System.Int32)">
      <summary>Inizializza una nuova istanza non ridimensionabile della classe <see cref="T:System.IO.MemoryStream" /> in base alla regione specificata (indice) di una matrice di byte.</summary>
      <param name="buffer">Matrice di byte senza segno da cui creare il flusso.</param>
      <param name="index">Indice in <paramref name="buffer" /> in corrispondenza del quale inizia il flusso.</param>
      <param name="count">Lunghezza del flusso in byte.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> o <paramref name="count" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException">La lunghezza del buffer meno <paramref name="index" /> è minore di <paramref name="count" />.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean)">
      <summary>Inizializza una nuova istanza non ridimensionabile della classe <see cref="T:System.IO.MemoryStream" /> in base alla regione specificata di una matrice di byte, con la proprietà <see cref="P:System.IO.MemoryStream.CanWrite" /> impostata secondo quanto specificato.</summary>
      <param name="buffer">Matrice di byte senza segno da cui creare il flusso.</param>
      <param name="index">Indice in <paramref name="buffer" /> in corrispondenza del quale inizia il flusso.</param>
      <param name="count">Lunghezza del flusso in byte.</param>
      <param name="writable">Impostazione della proprietà <see cref="P:System.IO.MemoryStream.CanWrite" />, che determina se il flusso supporta la scrittura.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> o <paramref name="count" /> è un valore negativo.</exception>
      <exception cref="T:System.ArgumentException">La lunghezza del buffer meno <paramref name="index" /> è minore di <paramref name="count" />.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.MemoryStream" /> in base alla regione specificata di una matrice di byte, con la proprietà <see cref="P:System.IO.MemoryStream.CanWrite" /> impostata secondo quanto specificato e la possibilità di chiamare il metodo <see cref="M:System.IO.MemoryStream.GetBuffer" /> impostato nel modo specificato.</summary>
      <param name="buffer">Matrice di byte senza segno da cui creare il flusso.</param>
      <param name="index">Indice in <paramref name="buffer" /> in corrispondenza del quale inizia il flusso.</param>
      <param name="count">Lunghezza del flusso in byte.</param>
      <param name="writable">Impostazione della proprietà <see cref="P:System.IO.MemoryStream.CanWrite" />, che determina se il flusso supporta la scrittura.</param>
      <param name="publiclyVisible">
        <see langword="true" /> per abilitare il metodo <see cref="M:System.IO.MemoryStream.GetBuffer" />, che restituisce la matrice di byte senza segno da cui è stato creato il flusso; in caso contrario, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> o <paramref name="count" /> è negativo.</exception>
      <exception cref="T:System.ArgumentException">La lunghezza del buffer meno <paramref name="index" /> è minore di <paramref name="count" />.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.#ctor(System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.MemoryStream" /> con una capacità espandibile inizializzata secondo quanto specificato.</summary>
      <param name="capacity">Dimensione iniziale in byte della matrice interna.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> è negativo.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <param name="buffer" />
      <param name="offset" />
      <param name="count" />
      <param name="callback" />
      <param name="state" />
    </member>
    <member name="M:System.IO.MemoryStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <param name="buffer" />
      <param name="offset" />
      <param name="count" />
      <param name="callback" />
      <param name="state" />
    </member>
    <member name="P:System.IO.MemoryStream.CanRead">
      <summary>Ottiene un valore che indica se il flusso corrente supporta la lettura.</summary>
      <returns>
        <see langword="true" /> se il flusso è aperto.</returns>
    </member>
    <member name="P:System.IO.MemoryStream.CanSeek">
      <summary>Ottiene un valore che indica se il flusso corrente supporta la ricerca.</summary>
      <returns>
        <see langword="true" /> se il flusso è aperto.</returns>
    </member>
    <member name="P:System.IO.MemoryStream.CanWrite">
      <summary>Ottiene un valore che indica se il flusso corrente supporta la scrittura.</summary>
      <returns>
        <see langword="true" /> se il flusso supporta la scrittura; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.IO.MemoryStream.Capacity">
      <summary>Ottiene o imposta il numero di byte allocati per questo flusso.</summary>
      <returns>Lunghezza della parte utilizzabile del buffer per il flusso.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">È stata impostata una capacità negativa o minore della lunghezza corrente del flusso.</exception>
      <exception cref="T:System.ObjectDisposedException">Il flusso corrente è chiuso.</exception>
      <exception cref="T:System.NotSupportedException">
        <see langword="set" /> è stato richiamato su un flusso del quale non è possibile modificare la capacità.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.CopyTo(System.IO.Stream,System.Int32)">
      <param name="destination" />
      <param name="bufferSize" />
    </member>
    <member name="M:System.IO.MemoryStream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)">
      <summary>Legge in modo asincrono tutti i byte dal flusso corrente e li scrive in un altro flusso, utilizzando una dimensione di buffer specificata e un token di annullamento.</summary>
      <param name="destination">Flusso in cui verrà copiato il contenuto del flusso corrente.</param>
      <param name="bufferSize">Dimensione del buffer, in byte. Il valore deve essere maggiore di zero.</param>
      <param name="cancellationToken">Token da monitorare per le richieste di annullamento.</param>
      <returns>Attività che rappresenta l'operazione di copia asincrona.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destination" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="buffersize" /> è un valore negativo o zero.</exception>
      <exception cref="T:System.ObjectDisposedException">Il flusso corrente o il flusso di destinazione viene eliminato.</exception>
      <exception cref="T:System.NotSupportedException">Il flusso corrente non supporta la lettura, o il flusso di destinazione non supporta la scrittura.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.Dispose(System.Boolean)">
      <summary>Rilascia le risorse non gestite usate dalla classe <see cref="T:System.IO.MemoryStream" /> e facoltativamente le risorse gestite.</summary>
      <param name="disposing">
        <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite, <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="M:System.IO.MemoryStream.EndRead(System.IAsyncResult)">
      <param name="asyncResult" />
    </member>
    <member name="M:System.IO.MemoryStream.EndWrite(System.IAsyncResult)">
      <param name="asyncResult" />
    </member>
    <member name="M:System.IO.MemoryStream.Flush">
      <summary>Esegue l'override del metodo <see cref="M:System.IO.Stream.Flush" /> in modo che non venga effettuata alcuna operazione.</summary>
    </member>
    <member name="M:System.IO.MemoryStream.FlushAsync(System.Threading.CancellationToken)">
      <summary>In modo asincrono rimuove tutti i buffer per questo flusso e monitora le richieste di annullamento.</summary>
      <param name="cancellationToken">Token da monitorare per le richieste di annullamento.</param>
      <returns>Attività che rappresenta l'operazione di scaricamento asincrona.</returns>
      <exception cref="T:System.ObjectDisposedException">Il flusso è stato eliminato.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.GetBuffer">
      <summary>Restituisce la matrice di byte senza segno da cui è stato creato questo flusso.</summary>
      <returns>Matrice di byte da cui è stato creato il flusso o la matrice sottostante se una matrice di byte non è stata fornita al costruttore di <see cref="T:System.IO.MemoryStream" /> durante la costruzione dell'istanza corrente.</returns>
      <exception cref="T:System.UnauthorizedAccessException">L'istanza di <see langword="MemoryStream" /> non è stata creata con un buffer visibile pubblicamente.</exception>
    </member>
    <member name="P:System.IO.MemoryStream.Length">
      <summary>Ottiene la lunghezza in byte del flusso.</summary>
      <returns>Lunghezza del flusso in byte.</returns>
      <exception cref="T:System.ObjectDisposedException">Il flusso è chiuso.</exception>
    </member>
    <member name="P:System.IO.MemoryStream.Position">
      <summary>Ottiene o imposta la posizione corrente all'interno del flusso.</summary>
      <returns>Posizione corrente all'interno del flusso.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">La posizione è impostata su un valore negativo o maggiore di <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Il flusso è chiuso.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>Legge un blocco di byte dal flusso corrente e scrive i dati in un buffer.</summary>
      <param name="buffer">Quando questo metodo viene restituito, contiene la matrice di byte specificata con i valori compresi <paramref name="offset" /> and (<paramref name="offset" /> + <paramref name="count" /> - 1) sostituiti con i caratteri letti dall'origine corrente.</param>
      <param name="offset">Offset dei byte nel <paramref name="buffer" /> da cui iniziare l'archiviazione dei dati dal flusso corrente.</param>
      <param name="count">Numero massimo di byte da leggere.</param>
      <returns>Numero complessivo di byte scritti nel buffer. Può essere minore del numero di byte richiesti se tale numero di byte non è al momento disponibile o pari a zero se è stata raggiunta la fine del flusso prima della lettura di qualsiasi byte.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> o <paramref name="count" /> è negativo.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset" /> sottratto alla lunghezza del buffer è minore di <paramref name="count" />.</exception>
      <exception cref="T:System.ObjectDisposedException">L'istanza del flusso corrente è chiusa.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.Read(System.Span{System.Byte})">
      <param name="destination" />
    </member>
    <member name="M:System.IO.MemoryStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>Legge in modo asincrono una sequenza di byte dal flusso corrente e passa alla posizione successiva all'interno del flusso corrente in base al numero di byte letti e monitora le richieste di annullamento.</summary>
      <param name="buffer">Buffer in cui scrivere i dati.</param>
      <param name="offset">Offset dei byte in <paramref name="buffer" /> da cui iniziare la scrittura dei dati dal flusso.</param>
      <param name="count">Numero massimo di byte da leggere.</param>
      <param name="cancellationToken">Token da monitorare per le richieste di annullamento. Il valore predefinito è <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Attività che rappresenta l'operazione di lettura asincrona. Il valore del parametro di <paramref name="TResult" /> contiene il numero totale di byte letti nel buffer. Il valore del risultato può essere minore del numero di byte richiesti se il numero di byte attualmente disponibili è minore di quelli richiesti o può essere pari a 0 (zero) se è stata raggiunta la fine del flusso.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> o <paramref name="count" /> è negativo.</exception>
      <exception cref="T:System.ArgumentException">La somma di <paramref name="offset" /> e <paramref name="count" /> è maggiore della lunghezza del buffer.</exception>
      <exception cref="T:System.NotSupportedException">Il flusso non supporta la lettura.</exception>
      <exception cref="T:System.ObjectDisposedException">Il flusso è stato eliminato.</exception>
      <exception cref="T:System.InvalidOperationException">Il flusso è attualmente usato da un'operazione di lettura precedente.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
      <param name="destination" />
      <param name="cancellationToken" />
    </member>
    <member name="M:System.IO.MemoryStream.ReadByte">
      <summary>Legge un byte dal flusso corrente.</summary>
      <returns>Cast di byte su un oggetto <see cref="T:System.Int32" /> o -1 se la fine del flusso è stata raggiunta.</returns>
      <exception cref="T:System.ObjectDisposedException">L'istanza del flusso corrente è chiusa.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>Imposta la posizione all'interno del flusso corrente sul valore specificato.</summary>
      <param name="offset">Nuova posizione all'interno del flusso. È relativa al parametro <paramref name="loc" /> e può essere positiva o negativa.</param>
      <param name="loc">Valore di tipo <see cref="T:System.IO.SeekOrigin" />, che funge da punto di riferimento per la ricerca.</param>
      <returns>Nuova posizione all'interno del flusso, calcolata combinando il punto di riferimento iniziale e l'offset.</returns>
      <exception cref="T:System.IO.IOException">La ricerca viene tentata prima dell'inizio del flusso.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> è maggiore di <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.ArgumentException">Il valore di <see cref="T:System.IO.SeekOrigin" /> non è valido.  
-oppure- 
 <paramref name="offset" /> causato da un overflow aritmetico.</exception>
      <exception cref="T:System.ObjectDisposedException">L'istanza del flusso corrente è chiusa.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.SetLength(System.Int64)">
      <summary>Imposta la lunghezza del flusso corrente sul valore specificato.</summary>
      <param name="value">Valore su cui impostare la lunghezza.</param>
      <exception cref="T:System.NotSupportedException">Il flusso corrente non è ridimensionabile e il parametro <paramref name="value" /> è maggiore della capacità corrente.  
-oppure- 
Il flusso corrente non supporta la scrittura.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> è negativo o maggiore della lunghezza massima dell'oggetto <see cref="T:System.IO.MemoryStream" />, in cui la lunghezza massima corrisponde a (<see cref="F:System.Int32.MaxValue" /> - origine) e l'origine corrisponde all'indice nel buffer sottostante in corrispondenza del quale inizia il flusso.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.ToArray">
      <summary>Scrive il contenuto del flusso in una matrice di byte, indipendentemente dalla proprietà <see cref="P:System.IO.MemoryStream.Position" />.</summary>
      <returns>Nuova matrice di byte.</returns>
    </member>
    <member name="M:System.IO.MemoryStream.TryGetBuffer(System.ArraySegment{System.Byte}@)">
      <summary>Restituisce la matrice di byte senza segno da cui è stato creato questo flusso. Il valore restituito indica se la conversione è riuscita.</summary>
      <param name="buffer">Segmento di matrice di byte da cui è stato creato questo flusso.</param>
      <returns>
        <see langword="true" /> se la conversione riesce. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.IO.MemoryStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>Scrive un blocco di byte nel flusso corrente utilizzando dati letti da un buffer.</summary>
      <param name="buffer">Buffer da cui scrivere i dati.</param>
      <param name="offset">Offset dei byte in base zero in <paramref name="buffer" /> da cui iniziare la copia dei byte nel flusso corrente.</param>
      <param name="count">Numero massimo di byte da scrivere.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Il flusso non supporta la scrittura. Per ulteriori informazioni, vedere <see cref="P:System.IO.Stream.CanWrite" />.  
-oppure- 
La posizione corrente, rispetto al numero di byte specificati in <paramref name="count" />, è più vicina alla fine del flusso e non è possibile modificare la capacità.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset" /> sottratto alla lunghezza del buffer è minore di <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> o <paramref name="count" /> è un valore negativo.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
      <exception cref="T:System.ObjectDisposedException">L'istanza del flusso corrente è chiusa.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.Write(System.ReadOnlySpan{System.Byte})">
      <param name="source" />
    </member>
    <member name="M:System.IO.MemoryStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>Scrive in modo asincrono una sequenza di byte nel flusso corrente e passa alla posizione successiva all'interno del flusso corrente in base al numero di byte scritti e monitora le richieste di annullamento.</summary>
      <param name="buffer">Buffer da cui scrivere i dati.</param>
      <param name="offset">Offset dei byte in base zero in <paramref name="buffer" /> da cui iniziare la copia dei byte nel flusso.</param>
      <param name="count">Numero massimo di byte da scrivere.</param>
      <param name="cancellationToken">Token da monitorare per le richieste di annullamento. Il valore predefinito è <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Attività che rappresenta l'operazione di scrittura asincrona.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> o <paramref name="count" /> è negativo.</exception>
      <exception cref="T:System.ArgumentException">La somma di <paramref name="offset" /> e <paramref name="count" /> è maggiore della lunghezza del buffer.</exception>
      <exception cref="T:System.NotSupportedException">Il flusso non supporta la scrittura.</exception>
      <exception cref="T:System.ObjectDisposedException">Il flusso è stato eliminato.</exception>
      <exception cref="T:System.InvalidOperationException">Il flusso è attualmente usato da un'operazione di scrittura precedente.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
      <param name="source" />
      <param name="cancellationToken" />
    </member>
    <member name="M:System.IO.MemoryStream.WriteByte(System.Byte)">
      <summary>Scrive un byte nella posizione corrente all'interno del flusso corrente.</summary>
      <param name="value">Byte da scrivere.</param>
      <exception cref="T:System.NotSupportedException">Il flusso non supporta la scrittura. Per ulteriori informazioni, vedere <see cref="P:System.IO.Stream.CanWrite" />.  
-oppure- 
La posizione corrente è alla fine del flusso e non è possibile modificare la capacità.</exception>
      <exception cref="T:System.ObjectDisposedException">Il flusso corrente è chiuso.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.WriteTo(System.IO.Stream)">
      <summary>Scrive l'intero contenuto del flusso di memoria in un altro flusso.</summary>
      <param name="stream">Flusso in cui scrivere il flusso di memoria.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Il flusso corrente o di destinazione è chiuso.</exception>
    </member>
    <member name="T:System.IO.Path">
      <summary>Esegue operazioni sulle istanze <see cref="T:System.String" /> che contengono informazioni sul percorso di file o directory. Le operazioni vengono eseguite su più piattaforme.</summary>
    </member>
    <member name="F:System.IO.Path.AltDirectorySeparatorChar">
      <summary>Fornisce un carattere alternativo specifico della piattaforma usato per separare i livelli di directory in una stringa di percorso che riflette un'organizzazione di file system gerarchica.</summary>
    </member>
    <member name="M:System.IO.Path.ChangeExtension(System.String,System.String)">
      <summary>Cambia l'estensione di una stringa di percorso.</summary>
      <param name="path">Informazioni sul percorso da modificare. Il percorso non può contenere i caratteri definiti in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</param>
      <param name="extension">Nuova estensione, con o senza un punto iniziale. Specificare <see langword="null" /> per rimuovere un'estensione esistente da <paramref name="path" />.</param>
      <returns>Informazioni sul percorso modificato.  
Nelle piattaforme desktop basate su Windows, se <paramref name="path" /> è <see langword="null" /> o una stringa vuota (""), le informazioni sul percorso verranno restituite immutate. Se <paramref name="extension" /> è <see langword="null" />, la stringa restituita conterrà il percorso specificato senza estensione. Se <paramref name="path" /> non ha estensione e <paramref name="extension" /> non è <see langword="null" />, la stringa di percorso restituita conterrà <paramref name="extension" /> alla fine di <paramref name="path" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> contiene uno o più dei caratteri non validi definiti nel metodo <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
    </member>
    <member name="M:System.IO.Path.Combine(System.String,System.String)">
      <summary>Combina due stringhe in un percorso.</summary>
      <param name="path1">Primo percorso da combinare.</param>
      <param name="path2">Secondo percorso da combinare.</param>
      <returns>Percorsi combinati. Se uno dei percorsi specificati è una stringa di lunghezza zero, il metodo restituirà solo l'altro percorso. Se <paramref name="path2" /> contiene un percorso assoluto, il metodo restituisce <paramref name="path2" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path1" /> o <paramref name="path2" /> contiene uno o più caratteri non validi definiti in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path1" /> o <paramref name="path2" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Path.Combine(System.String,System.String,System.String)">
      <summary>Combina tre stringhe in un percorso.</summary>
      <param name="path1">Primo percorso da combinare.</param>
      <param name="path2">Secondo percorso da combinare.</param>
      <param name="path3">Terzo percorso da combinare.</param>
      <returns>Percorsi combinati.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path1" />, <paramref name="path2" /> o <paramref name="path3" /> contiene uno o più dei caratteri non validi definiti in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path1" />, <paramref name="path2" /> o <paramref name="path3" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Path.Combine(System.String,System.String,System.String,System.String)">
      <summary>Combina quattro stringhe in un percorso.</summary>
      <param name="path1">Primo percorso da combinare.</param>
      <param name="path2">Secondo percorso da combinare.</param>
      <param name="path3">Terzo percorso da combinare.</param>
      <param name="path4">Quarto percorso da combinare.</param>
      <returns>Percorsi combinati.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path1" />, <paramref name="path2" />, <paramref name="path3" /> o <paramref name="path4" /> contiene uno o più dei caratteri non validi definiti in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path1" />, <paramref name="path2" />, <paramref name="path3" /> o <paramref name="path4" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Path.Combine(System.String[])">
      <summary>Combina una matrice di stringhe in un percorso.</summary>
      <param name="paths">Matrice di parti del percorso.</param>
      <returns>Percorsi combinati.</returns>
      <exception cref="T:System.ArgumentException">Una delle stringhe nella matrice contiene almeno un carattere non valido definito in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">Una delle stringhe nella matrice è <see langword="null" />.</exception>
    </member>
    <member name="F:System.IO.Path.DirectorySeparatorChar">
      <summary>Fornisce un carattere specifico della piattaforma usato per separare i livelli di directory in una stringa di percorso che riflette un'organizzazione di file system gerarchica.</summary>
    </member>
    <member name="M:System.IO.Path.EndsInDirectorySeparator(System.ReadOnlySpan{System.Char})">
      <summary>Restituisce un valore che indica se il percorso, specificato come intervallo di sola lettura, termina in un separatore di directory.</summary>
      <param name="path">Percorso da analizzare.</param>
      <returns>
        <see langword="true" /> se il percorso termina in un separatore di directory- In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.IO.Path.EndsInDirectorySeparator(System.String)">
      <summary>Restituisce un valore che indica se il percorso specificato termina in un separatore di directory.</summary>
      <param name="path">Percorso da analizzare.</param>
      <returns>
        <see langword="true" /> se il percorso termina in un separatore di directory- In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.IO.Path.GetDirectoryName(System.ReadOnlySpan{System.Char})">
      <summary>Restituisce le informazioni sulla directory per il percorso specificato rappresentato da un intervallo di caratteri.</summary>
      <param name="path">Percorso da cui recuperare le informazioni sulla directory.</param>
      <returns>Informazioni sulla directory per <paramref name="path" />, o un intervallo vuoto se <paramref name="path" /> è <see langword="null" />, un intervallo vuoto o un percorso radice, ad esempio , C: o \server\share.</returns>
    </member>
    <member name="M:System.IO.Path.GetDirectoryName(System.String)">
      <summary>Restituisce le informazioni sulla directory per la stringa di percorso specificata.</summary>
      <param name="path">Percorso di un file o di una directory.</param>
      <returns>Informazioni sulla directory per <paramref name="path" /> o <see langword="null" /> se <paramref name="path" /> indica una directory radice o è Null. Restituisce <see cref="F:System.String.Empty" /> se <paramref name="path" /> non contiene informazioni sulla directory.</returns>
      <exception cref="T:System.ArgumentException">Il parametro <paramref name="path" /> contiene caratteri non validi, è vuoto o contiene solo spazi vuoti.</exception>
      <exception cref="T:System.IO.PathTooLongException">In .NET per app di Windows Store o nella libreria di classi portabile rilevare invece l'eccezione della classe di base, <see cref="T:System.IO.IOException" />.  


            

 La lunghezza del parametro <paramref name="path" /> è maggiore della lunghezza massima definita nel sistema.</exception>
    </member>
    <member name="M:System.IO.Path.GetExtension(System.ReadOnlySpan{System.Char})">
      <summary>Restituisce l'estensione di un percorso di file che è rappresentato da un intervallo di caratteri di sola lettura.</summary>
      <param name="path">Percorso di file da cui ottenere l'estensione.</param>
      <returns>Estensione del percorso specificato, incluso il punto ("."), o <see cref="P:System.ReadOnlySpan`1.Empty" /> se <paramref name="path" /> non contiene informazioni sull'estensione.</returns>
    </member>
    <member name="M:System.IO.Path.GetExtension(System.String)">
      <summary>Restituisce l'estensione, incluso il punto ("."), della stringa del percorso specificato.</summary>
      <param name="path">Stringa di percorso dalla quale ottenere l'estensione.</param>
      <returns>Estensione del percorso specificato, incluso il punto ("."), oppure <see langword="null" /> oppure <see cref="F:System.String.Empty" />. Se <paramref name="path" /> è <see langword="null" />, <see cref="M:System.IO.Path.GetExtension(System.String)" /> restituisce <see langword="null" />. Se <paramref name="path" /> non include informazioni sull'estensione, <see cref="M:System.IO.Path.GetExtension(System.String)" /> restituisce <see cref="F:System.String.Empty" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> contiene uno o più dei caratteri non validi definiti nel metodo <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
    </member>
    <member name="M:System.IO.Path.GetFileName(System.ReadOnlySpan{System.Char})">
      <summary>Restituisce il nome file e l'estensione di un percorso di file che è rappresentato da un intervallo di caratteri di sola lettura.</summary>
      <param name="path">Intervallo di sola lettura che contiene il percorso da cui ottenere il nome del file e l'estensione.</param>
      <returns>Caratteri successivi all'ultimo carattere separatore di directory in <paramref name="path" />.</returns>
    </member>
    <member name="M:System.IO.Path.GetFileName(System.String)">
      <summary>Restituisce il nome del file e l'estensione della stringa di percorso specificata.</summary>
      <param name="path">Stringa di percorso dalla quale ottenere il nome del file e l'estensione.</param>
      <returns>Caratteri successivi all'ultimo carattere separatore di directory in <paramref name="path" />. Se l'ultimo carattere di <paramref name="path" /> è un separatore di directory o di volumi, questo metodo restituisce <see cref="F:System.String.Empty" />. Se <paramref name="path" /> è <see langword="null" />, questo metodo restituisce <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> contiene uno o più dei caratteri non validi definiti nel metodo <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
    </member>
    <member name="M:System.IO.Path.GetFileNameWithoutExtension(System.ReadOnlySpan{System.Char})">
      <summary>Restituisce il nome file senza l'estensione di un percorso di file che è rappresentato da un intervallo di caratteri di sola lettura.</summary>
      <param name="path">Intervallo di sola lettura che contiene il percorso da cui ottenere il nome del file senza l'estensione.</param>
      <returns>Caratteri nell'intervallo di sola lettura restituiti da <see cref="M:System.IO.Path.GetFileName(System.ReadOnlySpan{System.Char})" />, senza l'ultimo punto (.) e tutti i caratteri che lo seguono.</returns>
    </member>
    <member name="M:System.IO.Path.GetFileNameWithoutExtension(System.String)">
      <summary>Restituisce il nome del file della stringa di percorso specificata senza estensione.</summary>
      <param name="path">Percorso del file.</param>
      <returns>Stringa restituita da <see cref="M:System.IO.Path.GetFileName(System.ReadOnlySpan{System.Char})" />, senza l'ultimo punto (.) e tutti i caratteri che lo seguono.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> contiene uno o più dei caratteri non validi definiti nel metodo <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
    </member>
    <member name="M:System.IO.Path.GetFullPath(System.String)">
      <summary>Restituisce il percorso assoluto della stringa di percorso specificata.</summary>
      <param name="path">File o directory per cui ottenere informazioni relative al percorso assoluto.</param>
      <returns>Percorso completo di <paramref name="path" />, ad esempio "C:\MyFile.txt".</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> è una stringa di lunghezza zero, contiene solo spazi vuoti oppure uno o più caratteri non validi definiti nel metodo <see cref="M:System.IO.Path.GetInvalidPathChars" />.  
-oppure- 
Il sistema non è riuscito a recuperare il percorso assoluto.</exception>
      <exception cref="T:System.Security.SecurityException">Il chiamante non ha le autorizzazioni richieste.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> contiene due punti (":") che non fanno parte di un identificatore di volume (ad esempio "c:\").</exception>
      <exception cref="T:System.IO.PathTooLongException">Il percorso specificato, il nome file o entrambi superano la lunghezza massima definita dal sistema.</exception>
    </member>
    <member name="M:System.IO.Path.GetFullPath(System.String,System.String)">
      <summary>Restituisce un percorso assoluto da un percorso base completo e un percorso relativo.</summary>
      <param name="path">Percorso relativo da concatenare a <paramref name="basePath" />.</param>
      <param name="basePath">Inizio di un percorso completo.</param>
      <returns>Percorso assoluto.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> o <paramref name="basePath" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="basePath" /> non è un percorso completo.
In alternativa
<paramref name="path" /> o <paramref name="basePath" /> contiene caratteri del percorso non validi, ad esempio U+0000.</exception>
    </member>
    <member name="M:System.IO.Path.GetInvalidFileNameChars">
      <summary>Ottiene una matrice contenente i caratteri non consentiti nei nomi di file.</summary>
      <returns>Matrice contenente i caratteri non consentiti nei nomi di file.</returns>
    </member>
    <member name="M:System.IO.Path.GetInvalidPathChars">
      <summary>Ottiene una matrice contenente i caratteri non consentiti nei nomi di percorso.</summary>
      <returns>Matrice contenente i caratteri non consentiti nei nomi di percorso.</returns>
    </member>
    <member name="M:System.IO.Path.GetPathRoot(System.ReadOnlySpan{System.Char})">
      <summary>Ottiene la directory radice dal percorso contenuto nell'intervallo di caratteri specificato.</summary>
      <param name="path">Percorso dal quale ottenere informazioni sulla directory radice.</param>
      <returns>Intervallo di caratteri che contiene la directory radice di path.</returns>
    </member>
    <member name="M:System.IO.Path.GetPathRoot(System.String)">
      <summary>Ottiene la directory radice del percorso specificato.</summary>
      <param name="path">Percorso dal quale ottenere informazioni sulla directory radice.</param>
      <returns>La directory radice di <paramref name="path" />, oppure <see langword="null" /> se <paramref name="path" /> è <see langword="null" /> oppure una stringa vuota se <paramref name="path" /> non contiene informazioni sulla directory radice.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> contiene uno o più dei caratteri non validi definiti nel metodo <see cref="M:System.IO.Path.GetInvalidPathChars" />.  
-oppure- 
 <see cref="F:System.String.Empty" /> è stato passato a <paramref name="path" />.</exception>
    </member>
    <member name="M:System.IO.Path.GetRandomFileName">
      <summary>Restituisce un nome casuale di cartella o di file.</summary>
      <returns>Nome casuale di cartella o di file.</returns>
    </member>
    <member name="M:System.IO.Path.GetRelativePath(System.String,System.String)">
      <summary>Restituisce un percorso relativo da un percorso all'altro.</summary>
      <param name="relativeTo">Percorso di origine a cui il risultato deve essere relativo. Questo percorso è sempre considerato una directory.</param>
      <param name="path">Percorso di destinazione.</param>
      <returns>Percorso relativo o <paramref name="path" /> se i percorsi non condividono la stessa radice.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="relativeTo" /> o <paramref name="path" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Path.GetTempFileName">
      <summary>Crea un file temporaneo a zero byte con nome univoco sul disco e restituisce il percorso intero di quel file.</summary>
      <returns>Percorso completo del file temporaneo.</returns>
      <exception cref="T:System.IO.IOException">Si verifica un errore I/O, ad esempio non è disponibile alcun nome univoco del file temporaneo.  
In alternativa
 Il metodo non consente la creazione di un file temporaneo.</exception>
    </member>
    <member name="M:System.IO.Path.GetTempPath">
      <summary>Restituisce il percorso della cartella temporanea dell'utente corrente.</summary>
      <returns>Percorso alla cartella temporanea che termina con una barra rovesciata.</returns>
      <exception cref="T:System.Security.SecurityException">Il chiamante non ha le autorizzazioni richieste.</exception>
    </member>
    <member name="M:System.IO.Path.HasExtension(System.ReadOnlySpan{System.Char})">
      <summary>Determina se il percorso rappresentato dall'intervallo di caratteri specificato include un'estensione di file.</summary>
      <param name="path">Percorso in cui cercare un'estensione.</param>
      <returns>
        <see langword="true" /> se i caratteri che seguono l'ultimo carattere separatore di directory o il separatore di volume nel percorso includono un punto (".") seguito da uno o più caratteri; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.IO.Path.HasExtension(System.String)">
      <summary>Determina se un percorso include un'estensione di nome di file.</summary>
      <param name="path">Percorso in cui cercare un'estensione.</param>
      <returns>
        <see langword="true" /> se i caratteri che seguono l'ultimo separatore di directory (\\ o /) o di volume (:) nel percorso includono un punto (.) seguito da uno o più caratteri; in caso contrario <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> contiene uno o più dei caratteri non validi definiti nel metodo <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
    </member>
    <member name="F:System.IO.Path.InvalidPathChars">
      <summary>Fornisce una matrice di caratteri specifici della piattaforma che non possono essere usati negli argomenti della stringa di percorso passati ai membri della classe <see cref="T:System.IO.Path" />.</summary>
    </member>
    <member name="M:System.IO.Path.IsPathFullyQualified(System.ReadOnlySpan{System.Char})">
      <summary>Restituisce un valore che indica se il percorso di file rappresentato dall'intervallo di caratteri specificato è fisso in un'unità specifica o in un percorso UNC.</summary>
      <param name="path">Percorso di file.</param>
      <returns>
        <see langword="true" /> se il percorso è fisso in un'unità specifica o in un percorso UNC; <see langword="false" /> se il percorso è relativo nell'unità corrente o nella directory di lavoro.</returns>
    </member>
    <member name="M:System.IO.Path.IsPathFullyQualified(System.String)">
      <summary>Restituisce un valore che indica se il percorso di file specificato è fisso in un'unità specifica o in un percorso UNC.</summary>
      <param name="path">Percorso di file.</param>
      <returns>
        <see langword="true" /> se il percorso è fisso in un'unità specifica o in un percorso UNC; <see langword="false" /> se il percorso è relativo nell'unità corrente o nella directory di lavoro.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Path.IsPathRooted(System.ReadOnlySpan{System.Char})">
      <summary>Restituisce un valore che indica se l'intervallo di caratteri specificato che rappresenta un percorso di file contiene una radice.</summary>
      <param name="path">Percorso da testare.</param>
      <returns>
        <see langword="true" /> se <paramref name="path" /> contiene un percorso radice, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.IO.Path.IsPathRooted(System.String)">
      <summary>Restituisce un valore che indica se la stringa di percorso specificata contiene una radice.</summary>
      <param name="path">Percorso da testare.</param>
      <returns>
        <see langword="true" /> se <paramref name="path" /> contiene un percorso radice, in caso contrario <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> contiene uno o più dei caratteri non validi definiti nel metodo <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
    </member>
    <member name="M:System.IO.Path.Join(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char})">
      <summary>Concatena due componenti del percorso in un unico percorso.</summary>
      <param name="path1">Intervallo di caratteri che contiene il primo percorso da aggiungere.</param>
      <param name="path2">Intervallo di caratteri che contiene il secondo percorso da aggiungere.</param>
      <returns>Percorsi combinati.</returns>
    </member>
    <member name="M:System.IO.Path.Join(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char})">
      <summary>Concatena tre componenti del percorso in un unico percorso.</summary>
      <param name="path1">Intervallo di caratteri che contiene il primo percorso da aggiungere.</param>
      <param name="path2">Intervallo di caratteri che contiene il secondo percorso da aggiungere.</param>
      <param name="path3">Intervallo di caratteri che contiene il terzo percorso da aggiungere.</param>
      <returns>Percorso concatenato.</returns>
    </member>
    <member name="M:System.IO.Path.Join(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char})">
      <summary>Concatena quattro componenti del percorso in un unico percorso.</summary>
      <param name="path1">Intervallo di caratteri che contiene il primo percorso da aggiungere.</param>
      <param name="path2">Intervallo di caratteri che contiene il secondo percorso da aggiungere.</param>
      <param name="path3">Intervallo di caratteri che contiene il terzo percorso da aggiungere.</param>
      <param name="path4">Intervallo di caratteri che contiene il quarto percorso da aggiungere.</param>
      <returns>Percorso concatenato.</returns>
    </member>
    <member name="M:System.IO.Path.Join(System.String,System.String)">
      <summary>Concatena due percorsi in un unico percorso.</summary>
      <param name="path1">Primo percorso da aggiungere.</param>
      <param name="path2">Secondo percorso da aggiungere.</param>
      <returns>Percorso concatenato.</returns>
    </member>
    <member name="M:System.IO.Path.Join(System.String,System.String,System.String)">
      <summary>Concatena tre percorsi in un unico percorso.</summary>
      <param name="path1">Primo percorso da aggiungere.</param>
      <param name="path2">Secondo percorso da aggiungere.</param>
      <param name="path3">Terzo percorso da aggiungere.</param>
      <returns>Percorso concatenato.</returns>
    </member>
    <member name="M:System.IO.Path.Join(System.String,System.String,System.String,System.String)">
      <summary>Concatena quattro percorsi in un unico percorso.</summary>
      <param name="path1">Primo percorso da aggiungere.</param>
      <param name="path2">Secondo percorso da aggiungere.</param>
      <param name="path3">Terzo percorso da aggiungere.</param>
      <param name="path4">Quarto percorso da aggiungere.</param>
      <returns>Percorso concatenato.</returns>
    </member>
    <member name="M:System.IO.Path.Join(System.String[])">
      <summary>Concatena una matrice di percorsi in un unico percorso.</summary>
      <param name="paths">Matrice di percorsi.</param>
      <returns>Percorso concatenato.</returns>
    </member>
    <member name="F:System.IO.Path.PathSeparator">
      <summary>Carattere separatore specifico della piattaforma, usato per separare le stringhe di percorso nelle variabili di ambiente.</summary>
    </member>
    <member name="M:System.IO.Path.TrimEndingDirectorySeparator(System.ReadOnlySpan{System.Char})">
      <summary>Taglia un separatore di directory finale oltre la radice del percorso specificato.</summary>
      <param name="path">Percorso da tagliare.</param>
      <returns>
        <paramref name="path" /> senza separatori di directory finali.</returns>
    </member>
    <member name="M:System.IO.Path.TrimEndingDirectorySeparator(System.String)">
      <summary>Taglia un separatore di directory finale oltre la radice del percorso specificato.</summary>
      <param name="path">Percorso da tagliare.</param>
      <returns>
        <paramref name="path" /> senza separatori di directory finali.</returns>
    </member>
    <member name="M:System.IO.Path.TryJoin(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.Span{System.Char},System.Int32@)">
      <summary>Prova a concatenare due componenti del percorso in un singolo intervallo di caratteri preallocati e restituisce un valore che indica se l'operazione è riuscita.</summary>
      <param name="path1">Intervallo di caratteri che contiene il primo percorso da aggiungere.</param>
      <param name="path2">Intervallo di caratteri che contiene il secondo percorso da aggiungere.</param>
      <param name="path3">Intervallo di caratteri che contiene il terzo percorso da aggiungere.</param>
      <param name="destination">Intervallo di caratteri per contenere il percorso concatenato.</param>
      <param name="charsWritten">Al termine del metodo, valore che indica il numero di caratteri scritti in <paramref name="destination" />.</param>
      <returns>
        <see langword="true" /> se l'operazione di concatenazione ha esito positivo; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.IO.Path.TryJoin(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.Span{System.Char},System.Int32@)">
      <summary>Prova a concatenare due componenti del percorso in un singolo intervallo di caratteri preallocati e restituisce un valore che indica se l'operazione è riuscita.</summary>
      <param name="path1">Intervallo di caratteri che contiene il primo percorso da aggiungere.</param>
      <param name="path2">Intervallo di caratteri che contiene il secondo percorso da aggiungere.</param>
      <param name="destination">Intervallo di caratteri per contenere il percorso concatenato.</param>
      <param name="charsWritten">Al termine del metodo, valore che indica il numero di caratteri scritti in <paramref name="destination" />.</param>
      <returns>
        <see langword="true" /> se l'operazione di concatenazione ha esito positivo; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="F:System.IO.Path.VolumeSeparatorChar">
      <summary>Fornisce un carattere separatore di volume specifico della piattaforma.</summary>
    </member>
    <member name="T:System.IO.StreamReader">
      <summary>Implementa un oggetto <see cref="T:System.IO.TextReader" /> che legge i caratteri da un flusso di byte in una particolare codifica.</summary>
    </member>
    <member name="M:System.IO.StreamReader.#ctor(System.IO.Stream)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.StreamReader" /> per il flusso specificato.</summary>
      <param name="stream">Flusso da leggere.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> non supporta la lettura.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.StreamReader.#ctor(System.IO.Stream,System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.StreamReader" /> per il flusso specificato, con l'opzione specificata per il rilevamento degli indicatori dell'ordine dei byte.</summary>
      <param name="stream">Flusso da leggere.</param>
      <param name="detectEncodingFromByteOrderMarks">Indica se cercare i byte order mark all'inizio del file.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> non supporta la lettura.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.StreamReader.#ctor(System.IO.Stream,System.Text.Encoding)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.StreamReader" /> per il flusso specificato, con la codifica caratteri specificata.</summary>
      <param name="stream">Flusso da leggere.</param>
      <param name="encoding">Codifica dei caratteri da usare.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> non supporta la lettura.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> o <paramref name="encoding" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.StreamReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.StreamReader" /> per il flusso specificato, con le opzioni specificate per la codifica caratteri e il rilevamento degli indicatori dell'ordine dei byte.</summary>
      <param name="stream">Flusso da leggere.</param>
      <param name="encoding">Codifica dei caratteri da usare.</param>
      <param name="detectEncodingFromByteOrderMarks">Indica se cercare i byte order mark all'inizio del file.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> non supporta la lettura.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> o <paramref name="encoding" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.StreamReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.StreamReader" /> per il flusso specificato, con le opzioni specificate per la codifica caratteri, il rilevamento degli indicatori dell'ordine dei byte e per la dimensione del buffer.</summary>
      <param name="stream">Flusso da leggere.</param>
      <param name="encoding">Codifica dei caratteri da usare.</param>
      <param name="detectEncodingFromByteOrderMarks">Indica se cercare i byte order mark all'inizio del file.</param>
      <param name="bufferSize">Dimensione minima del buffer.</param>
      <exception cref="T:System.ArgumentException">Il flusso non supporta la lettura.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> o <paramref name="encoding" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="bufferSize" /> è minore o uguale a zero.</exception>
    </member>
    <member name="M:System.IO.StreamReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Int32,System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.StreamReader" /> per il flusso specificato in base alla codifica dei caratteri, all'opzione per il rilevamento degli indicatori dell'ordine dei byte e alla dimensione del buffer specificati. Facoltativamente mantiene aperto il flusso.</summary>
      <param name="stream">Flusso da leggere.</param>
      <param name="encoding">Codifica dei caratteri da usare.</param>
      <param name="detectEncodingFromByteOrderMarks">
        <see langword="true" /> per cercare gli indicatori per l'ordine dei byte all'inizio del file; in caso contrario, <see langword="false" />.</param>
      <param name="bufferSize">Dimensione minima del buffer.</param>
      <param name="leaveOpen">
        <see langword="true" /> per mantenere il flusso aperto dopo avere eliminato l'oggetto <see cref="T:System.IO.StreamReader" />; in caso contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.IO.StreamReader.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.StreamReader" /> per il nome file specificato.</summary>
      <param name="path">Percorso completo del file da leggere.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> è una stringa vuota ("").</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> è <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Impossibile trovare il file.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Il percorso specificato non è valido, ad esempio si trova in un'unità non mappata.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> include una sintassi non corretta o non valida relativa al nome del file, al nome della directory o all'etichetta del volume.</exception>
    </member>
    <member name="M:System.IO.StreamReader.#ctor(System.String,System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.StreamReader" /> per il nome file specificato, con l'opzione specificata per il rilevamento degli indicatori dell'ordine dei byte.</summary>
      <param name="path">Percorso completo del file da leggere.</param>
      <param name="detectEncodingFromByteOrderMarks">Indica se cercare i byte order mark all'inizio del file.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> è una stringa vuota ("").</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> è <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Impossibile trovare il file.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Il percorso specificato non è valido, ad esempio si trova in un'unità non mappata.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> include una sintassi non corretta o non valida relativa al nome del file, al nome della directory o all'etichetta del volume.</exception>
    </member>
    <member name="M:System.IO.StreamReader.#ctor(System.String,System.Text.Encoding)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.StreamReader" /> per il nome file specificato, con la codifica caratteri specificata.</summary>
      <param name="path">Percorso completo del file da leggere.</param>
      <param name="encoding">Codifica dei caratteri da usare.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> è una stringa vuota ("").</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> o <paramref name="encoding" /> è <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Impossibile trovare il file.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Il percorso specificato non è valido, ad esempio si trova in un'unità non mappata.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> include una sintassi non corretta o non valida relativa al nome del file, al nome della directory o all'etichetta del volume.</exception>
    </member>
    <member name="M:System.IO.StreamReader.#ctor(System.String,System.Text.Encoding,System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.StreamReader" /> per il nome file specificato, con le opzioni specificate per la codifica caratteri e il rilevamento degli indicatori dell'ordine dei byte.</summary>
      <param name="path">Percorso completo del file da leggere.</param>
      <param name="encoding">Codifica dei caratteri da usare.</param>
      <param name="detectEncodingFromByteOrderMarks">Indica se cercare i byte order mark all'inizio del file.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> è una stringa vuota ("").</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> o <paramref name="encoding" /> è <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Impossibile trovare il file.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Il percorso specificato non è valido, ad esempio si trova in un'unità non mappata.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> include una sintassi non corretta o non valida relativa al nome del file, al nome della directory o all'etichetta del volume.</exception>
    </member>
    <member name="M:System.IO.StreamReader.#ctor(System.String,System.Text.Encoding,System.Boolean,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.StreamReader" /> per il nome file specificato, con le opzioni specificate per la codifica caratteri, il rilevamento degli indicatori dell'ordine dei byte e per la dimensione del buffer.</summary>
      <param name="path">Percorso completo del file da leggere.</param>
      <param name="encoding">Codifica dei caratteri da usare.</param>
      <param name="detectEncodingFromByteOrderMarks">Indica se cercare i byte order mark all'inizio del file.</param>
      <param name="bufferSize">Dimensione minima del buffer, in numero di caratteri a 16 bit.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> è una stringa vuota ("").</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> o <paramref name="encoding" /> è <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Impossibile trovare il file.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Il percorso specificato non è valido, ad esempio si trova in un'unità non mappata.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> include una sintassi non corretta o non valida relativa al nome del file, al nome della directory o all'etichetta del volume.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="buffersize" /> è minore o uguale a zero.</exception>
    </member>
    <member name="P:System.IO.StreamReader.BaseStream">
      <summary>Restituisce il flusso sottostante.</summary>
      <returns>Flusso sottostante.</returns>
    </member>
    <member name="M:System.IO.StreamReader.Close">
      <summary>Chiude l'oggetto <see cref="T:System.IO.StreamReader" /> e il flusso sottostante e rilascia tutte le risorse di sistema associate al lettore.</summary>
    </member>
    <member name="P:System.IO.StreamReader.CurrentEncoding">
      <summary>Ottiene la codifica caratteri corrente usata dall'oggetto <see cref="T:System.IO.StreamReader" /> corrente.</summary>
      <returns>Codifica caratteri usata dal lettore corrente. Il valore può essere diverso dopo la prima chiamata a un metodo <see cref="Overload:System.IO.StreamReader.Read" /> di <see cref="T:System.IO.StreamReader" />, in quanto il rilevamento automatico della codifica non è completo fino alla prima chiamata a un metodo <see cref="Overload:System.IO.StreamReader.Read" />.</returns>
    </member>
    <member name="M:System.IO.StreamReader.DiscardBufferedData">
      <summary>Cancella il buffer interno.</summary>
    </member>
    <member name="M:System.IO.StreamReader.Dispose(System.Boolean)">
      <summary>Chiude il flusso sottostante, libera le risorse non gestite utilizzate dall'oggetto <see cref="T:System.IO.StreamReader" /> ed eventualmente libera le risorse gestite.</summary>
      <param name="disposing">
        <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite, <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="P:System.IO.StreamReader.EndOfStream">
      <summary>Ottiene un valore che indica se la posizione corrente del flusso è alla fine del flusso.</summary>
      <returns>
        <see langword="true" /> se la posizione corrente del flusso è alla fine del flusso; in caso contrario <see langword="false" />.</returns>
      <exception cref="T:System.ObjectDisposedException">Il flusso sottostante è stato eliminato.</exception>
    </member>
    <member name="F:System.IO.StreamReader.Null">
      <summary>Oggetto <see cref="T:System.IO.StreamReader" /> che include un flusso vuoto.</summary>
    </member>
    <member name="M:System.IO.StreamReader.Peek">
      <summary>Restituisce il carattere successivo disponibile senza utilizzarlo.</summary>
      <returns>Intero che rappresenta il carattere successivo da leggere oppure -1 se non sono presenti caratteri da lettere oppure se il flusso non supporta la ricerca.</returns>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
    </member>
    <member name="M:System.IO.StreamReader.Read">
      <summary>Legge il carattere successivo dal flusso di input e fa avanzare di un carattere la posizione del carattere.</summary>
      <returns>Carattere successivo dal flusso di input rappresentato come oggetto <see cref="T:System.Int32" /> oppure -1, se non sono presenti altri caratteri disponibili.</returns>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
    </member>
    <member name="M:System.IO.StreamReader.Read(System.Char[],System.Int32,System.Int32)">
      <summary>Legge un numero massimo specificato di caratteri dal flusso corrente e scrive i dati in un buffer, iniziando dall'indice specifico.</summary>
      <param name="buffer">Quando questo metodo viene restituito, il buffer contiene la matrice di caratteri specificata con i valori compresi tra <paramref name="index" /> e (<c>index + count - 1</c>) sostituiti dai caratteri letti dall'origine corrente.</param>
      <param name="index">Indice di <paramref name="buffer" /> da cui iniziare la scrittura.</param>
      <param name="count">Numero massimo di caratteri da leggere.</param>
      <returns>Numero di caratteri letti oppure 0 se alla fine del flusso non è stato letto alcun dato. Il numero sarà minore o uguale al parametro <paramref name="count" />, a seconda che i dati siano disponibili o meno all'interno del flusso.</returns>
      <exception cref="T:System.ArgumentException">La lunghezza del buffer meno <paramref name="index" /> è minore di <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> o <paramref name="count" /> è negativo.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O, come la chiusura del flusso.</exception>
    </member>
    <member name="M:System.IO.StreamReader.Read(System.Span{System.Char})">
      <param name="buffer" />
    </member>
    <member name="M:System.IO.StreamReader.ReadAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Legge in modo asincrono un numero massimo specificato di caratteri dal flusso corrente e scrive i dati in un buffer, a partire dall'indice specificato.</summary>
      <param name="buffer">Quando questo metodo viene restituito, contiene la matrice di caratteri specificata con i valori compresi tra <paramref name="index" /> e (<paramref name="index" /> +  + <paramref name="count" /> - 1) sostituiti con i caratteri letti dall'origine corrente.</param>
      <param name="index">Posizione in <paramref name="buffer" /> da cui iniziare la scrittura.</param>
      <param name="count">Numero massimo di caratteri da leggere. Se viene raggiunta la fine del flusso prima che il numero di caratteri specificato venga scritto nel buffer, il metodo corrente terminerà.</param>
      <returns>Attività che rappresenta l'operazione di lettura asincrona. Il valore del parametro <paramref name="TResult" /> contiene il numero totale di caratteri letti nel buffer. Il valore del risultato può essere minore del numero di caratteri richiesti se il numero di caratteri attualmente disponibili è minore di quelli richiesti o può essere pari a 0 (zero) se è stata raggiunta la fine del flusso.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> o <paramref name="count" /> è negativo.</exception>
      <exception cref="T:System.ArgumentException">La somma di <paramref name="index" /> e <paramref name="count" /> è maggiore della lunghezza del buffer.</exception>
      <exception cref="T:System.ObjectDisposedException">Il flusso è stato eliminato.</exception>
      <exception cref="T:System.InvalidOperationException">Il lettore è attualmente usato da un'operazione di lettura precedente.</exception>
    </member>
    <member name="M:System.IO.StreamReader.ReadAsync(System.Memory{System.Char},System.Threading.CancellationToken)">
      <param name="buffer" />
      <param name="cancellationToken" />
    </member>
    <member name="M:System.IO.StreamReader.ReadBlock(System.Char[],System.Int32,System.Int32)">
      <summary>Legge un numero massimo specificato di caratteri dal flusso corrente e scrive i dati in un buffer, a partire dall'indice specificato.</summary>
      <param name="buffer">Quando questo metodo viene restituito, il buffer contiene la matrice di caratteri specificata con i valori compresi tra <paramref name="index" /> e (<c>index + count - 1</c>) sostituiti dai caratteri letti dall'origine corrente.</param>
      <param name="index">Posizione in <paramref name="buffer" /> da cui iniziare la scrittura.</param>
      <param name="count">Numero massimo di caratteri da leggere.</param>
      <returns>Numero di caratteri letti. Il numero sarà minore di o uguale a <paramref name="count" />, a seconda che tutti i caratteri di input siano stati letti o meno.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La lunghezza del buffer meno <paramref name="index" /> è minore di <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> o <paramref name="count" /> è negativo.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.IO.StreamReader" /> è chiuso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
    </member>
    <member name="M:System.IO.StreamReader.ReadBlock(System.Span{System.Char})">
      <param name="buffer" />
    </member>
    <member name="M:System.IO.StreamReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Legge in modo asincrono un numero massimo specificato di caratteri dal flusso corrente e scrive i dati in un buffer, a partire dall'indice specificato.</summary>
      <param name="buffer">Quando questo metodo viene restituito, contiene la matrice di caratteri specificata con i valori compresi tra <paramref name="index" /> e (<paramref name="index" /> +  + <paramref name="count" /> - 1) sostituiti con i caratteri letti dall'origine corrente.</param>
      <param name="index">Posizione in <paramref name="buffer" /> da cui iniziare la scrittura.</param>
      <param name="count">Numero massimo di caratteri da leggere. Se viene raggiunta la fine del flusso prima che il numero di caratteri specificato venga scritto nel buffer, il metodo restituisce un risultato.</param>
      <returns>Attività che rappresenta l'operazione di lettura asincrona. Il valore del parametro <paramref name="TResult" /> contiene il numero totale di caratteri letti nel buffer. Il valore del risultato può essere minore del numero di caratteri richiesti se il numero di caratteri attualmente disponibili è minore di quelli richiesti o può essere pari a 0 (zero) se è stata raggiunta la fine del flusso.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> o <paramref name="count" /> è negativo.</exception>
      <exception cref="T:System.ArgumentException">La somma di <paramref name="index" /> e <paramref name="count" /> è maggiore della lunghezza del buffer.</exception>
      <exception cref="T:System.ObjectDisposedException">Il flusso è stato eliminato.</exception>
      <exception cref="T:System.InvalidOperationException">Il lettore è attualmente usato da un'operazione di lettura precedente.</exception>
    </member>
    <member name="M:System.IO.StreamReader.ReadBlockAsync(System.Memory{System.Char},System.Threading.CancellationToken)">
      <param name="buffer" />
      <param name="cancellationToken" />
    </member>
    <member name="M:System.IO.StreamReader.ReadLine">
      <summary>Legge una riga di caratteri dal flusso corrente e restituisce i dati come stringa.</summary>
      <returns>Riga successiva del flusso di input oppure <see langword="null" /> se viene raggiunta la fine del flusso di input.</returns>
      <exception cref="T:System.OutOfMemoryException">La memoria disponibile non è sufficiente per l’allocazione di un buffer per la stringa restituita.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
    </member>
    <member name="M:System.IO.StreamReader.ReadLineAsync">
      <summary>Legge una riga di caratteri in modo asincrono dal flusso corrente e restituisce i dati come stringa.</summary>
      <returns>Attività che rappresenta l'operazione di lettura asincrona. Il valore del parametro <paramref name="TResult" /> contiene la riga successiva di flusso oppure è <see langword="null" /> se tutti i caratteri sono stati letti.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Il numero di caratteri nella riga successiva è maggiore di <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Il flusso è stato eliminato.</exception>
      <exception cref="T:System.InvalidOperationException">Il lettore è attualmente usato da un'operazione di lettura precedente.</exception>
    </member>
    <member name="M:System.IO.StreamReader.ReadToEnd">
      <summary>Legge tutti i caratteri dalla posizione corrente fino alla fine del flusso.</summary>
      <returns>Parte restante del flusso come stringa, dalla posizione corrente alla fine del flusso. Se la posizione corrente è alla fine del flusso, restituisce una stringa vuota ("").</returns>
      <exception cref="T:System.OutOfMemoryException">La memoria disponibile non è sufficiente per l’allocazione di un buffer per la stringa restituita.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
    </member>
    <member name="M:System.IO.StreamReader.ReadToEndAsync">
      <summary>Legge tutti i caratteri dalla posizione corrente fino alla fine del flusso in modo asincrono e li restituisce come singola stringa.</summary>
      <returns>Attività che rappresenta l'operazione di lettura asincrona. Il valore del parametro <paramref name="TResult" /> contiene una stringa con i caratteri compresi tra la posizione corrente e l'estremità del flusso.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Il numero di caratteri è maggiore di <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Il flusso è stato eliminato.</exception>
      <exception cref="T:System.InvalidOperationException">Il lettore è attualmente usato da un'operazione di lettura precedente.</exception>
    </member>
    <member name="T:System.IO.StreamWriter">
      <summary>Implementa un oggetto <see cref="T:System.IO.TextWriter" /> che scrive i caratteri in un flusso con una particolare codifica.</summary>
    </member>
    <member name="M:System.IO.StreamWriter.#ctor(System.IO.Stream)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.StreamWriter" /> per il flusso specificato tramite la codifica UTF-8 e la dimensione del buffer predefinita.</summary>
      <param name="stream">Flusso in cui scrivere.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> non è scrivibile.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> costruito in modo predefinito è <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.StreamWriter" /> per il flusso specificato tramite la codifica dei caratteri e la dimensione del buffer specificate.</summary>
      <param name="stream">Flusso in cui scrivere.</param>
      <param name="encoding">Codifica dei caratteri da usare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> o <paramref name="encoding" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> non è scrivibile.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.StreamWriter" /> per il flusso specificato tramite la codifica caratteri e la dimensione del buffer specificate.</summary>
      <param name="stream">Flusso in cui scrivere.</param>
      <param name="encoding">Codifica dei caratteri da usare.</param>
      <param name="bufferSize">Dimensioni del buffer, in byte.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> o <paramref name="encoding" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="bufferSize" /> è negativo.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> non è scrivibile.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32,System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.StreamWriter" /> per il flusso specificato tramite la codifica dei caratteri e la dimensione del buffer specificate. Facoltativamente mantiene aperto il flusso.</summary>
      <param name="stream">Flusso in cui scrivere.</param>
      <param name="encoding">Codifica dei caratteri da usare.</param>
      <param name="bufferSize">Dimensioni del buffer, in byte.</param>
      <param name="leaveOpen">
        <see langword="true" /> per mantenere il flusso aperto dopo avere eliminato l'oggetto <see cref="T:System.IO.StreamWriter" />; in caso contrario, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> o <paramref name="encoding" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="bufferSize" /> è negativo.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> non è scrivibile.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.StreamWriter" /> per il file specificato tramite la codifica e la dimensione del buffer predefinite.</summary>
      <param name="path">Percorso completo del file in cui scrivere. <paramref name="path" /> può essere un nome file.</param>
      <exception cref="T:System.UnauthorizedAccessException">Accesso negato.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> è una stringa vuota ("").  
In alternativa 
 <paramref name="path" /> contiene il nome di una periferica di sistema (com1, com2 e così via).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> costruito in modo predefinito è <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Il percorso specificato non è valido, ad esempio si trova in un'unità non mappata.</exception>
      <exception cref="T:System.IO.PathTooLongException">Il percorso specificato, il nome file o entrambi superano la lunghezza massima definita dal sistema.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> include una sintassi non corretta o non valida per il nome file, il nome della directory o l'etichetta del volume.</exception>
      <exception cref="T:System.Security.SecurityException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.StreamWriter" /> per il file specificato tramite la codifica e la dimensione del buffer predefinite. Se il file esiste, è possibile sovrascriverlo o aggiungervi informazioni. Se il file non esiste, il costruttore crea un nuovo file.</summary>
      <param name="path">Percorso completo del file in cui scrivere.</param>
      <param name="append">
        <see langword="true" /> per aggiungere i dati al file; <see langword="false" /> per sovrascrivere il file. Se il file specificato non esiste, questo parametro non ha alcun effetto e viene creato un nuovo file dal costruttore.</param>
      <exception cref="T:System.UnauthorizedAccessException">Accesso negato.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> è vuoto.  
-oppure- 
 <paramref name="path" /> contiene il nome di una periferica di sistema (com1, com2 e così via).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> costruito in modo predefinito è <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Il percorso specificato non è valido, ad esempio si trova in un'unità non mappata.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> include una sintassi non corretta o non valida per il nome file, il nome della directory o l'etichetta del volume.</exception>
      <exception cref="T:System.IO.PathTooLongException">Il percorso specificato, il nome file o entrambi superano la lunghezza massima definita dal sistema.</exception>
      <exception cref="T:System.Security.SecurityException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.StreamWriter" /> per il file specificato tramite la codifica specificata e la dimensione del buffer predefinita. Se il file esiste, è possibile sovrascriverlo o aggiungervi informazioni. Se il file non esiste, il costruttore crea un nuovo file.</summary>
      <param name="path">Percorso completo del file in cui scrivere.</param>
      <param name="append">
        <see langword="true" /> per aggiungere i dati al file; <see langword="false" /> per sovrascrivere il file. Se il file specificato non esiste, questo parametro non ha alcun effetto e viene creato un nuovo file dal costruttore.</param>
      <param name="encoding">Codifica dei caratteri da usare.</param>
      <exception cref="T:System.UnauthorizedAccessException">Accesso negato.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> è vuoto.  
-oppure- 
 <paramref name="path" /> contiene il nome di una periferica di sistema (com1, com2 e così via).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> costruito in modo predefinito è <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Il percorso specificato non è valido, ad esempio si trova in un'unità non mappata.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> include una sintassi non corretta o non valida per il nome file, il nome della directory o l'etichetta del volume.</exception>
      <exception cref="T:System.IO.PathTooLongException">Il percorso specificato, il nome file o entrambi superano la lunghezza massima definita dal sistema.</exception>
      <exception cref="T:System.Security.SecurityException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.StreamWriter" /> per il file specificato nel percorso specificato, utilizzando le dimensioni di buffer e la codifica specificate. Se il file esiste, è possibile sovrascriverlo o aggiungervi informazioni. Se il file non esiste, il costruttore crea un nuovo file.</summary>
      <param name="path">Percorso completo del file in cui scrivere.</param>
      <param name="append">
        <see langword="true" /> per aggiungere i dati al file; <see langword="false" /> per sovrascrivere il file. Se il file specificato non esiste, questo parametro non ha alcun effetto e viene creato un nuovo file dal costruttore.</param>
      <param name="encoding">Codifica dei caratteri da usare.</param>
      <param name="bufferSize">Dimensioni del buffer, in byte.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> è una stringa vuota ("").  
In alternativa 
 <paramref name="path" /> contiene il nome di una periferica di sistema (com1, com2 e così via).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> o <paramref name="encoding" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="bufferSize" /> è negativo.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> include una sintassi non corretta o non valida per il nome file, il nome della directory o l'etichetta del volume.</exception>
      <exception cref="T:System.Security.SecurityException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Accesso negato.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Il percorso specificato non è valido, ad esempio si trova in un'unità non mappata.</exception>
      <exception cref="T:System.IO.PathTooLongException">Il percorso specificato, il nome file o entrambi superano la lunghezza massima definita dal sistema.</exception>
    </member>
    <member name="P:System.IO.StreamWriter.AutoFlush">
      <summary>Ottiene o imposta un valore che indica se <see cref="T:System.IO.StreamWriter" /> invia i dati contenuti nel proprio buffer nel flusso sottostante dopo ogni chiamata a <see cref="M:System.IO.StreamWriter.Write(System.Char)" />.</summary>
      <returns>
        <see langword="true" /> per determinare l'invio da parte di <see cref="T:System.IO.StreamWriter" /> dei dati del buffer; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.IO.StreamWriter.BaseStream">
      <summary>Recupera il flusso sottostante che si interfaccia con un archivio di backup.</summary>
      <returns>Flusso in cui <see langword="StreamWriter" /> scrive.</returns>
    </member>
    <member name="M:System.IO.StreamWriter.Close">
      <summary>Chiude l'oggetto <see langword="StreamWriter" /> corrente e il flusso sottostante.</summary>
      <exception cref="T:System.Text.EncoderFallbackException">La codifica corrente non supporta la visualizzazione della metà di una coppia di surrogati Unicode.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.Dispose(System.Boolean)">
      <summary>Causa la scrittura di eventuali dati memorizzati nel buffer nel flusso sottostante, libera le risorse non gestite usate dall'oggetto <see cref="T:System.IO.StreamWriter" /> ed eventualmente libera le risorse gestite.</summary>
      <param name="disposing">
        <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite, <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
      <exception cref="T:System.Text.EncoderFallbackException">La codifica corrente non supporta la visualizzazione della metà di una coppia di surrogati Unicode.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.DisposeAsync">
      <summary>Scrive in modo asincrono tutti i dati memorizzati nel buffer nel flusso sottostante e rilascia le risorse non gestite usate da <see cref="T:System.IO.StreamWriter" />.</summary>
      <returns>Attività che rappresenta l'operazione di eliminazione asincrona.</returns>
    </member>
    <member name="P:System.IO.StreamWriter.Encoding">
      <summary>Recupera l'oggetto <see cref="T:System.Text.Encoding" /> in cui viene scritto l'output.</summary>
      <returns>Oggetto <see cref="T:System.Text.Encoding" /> specificato nel costruttore per l'istanza corrente o <see cref="T:System.Text.UTF8Encoding" />, se non è stata specificata alcuna codifica.</returns>
    </member>
    <member name="M:System.IO.StreamWriter.Flush">
      <summary>Cancella tutti i buffer relativi al writer corrente e consente la scrittura dei dati memorizzati nel buffer nel flusso sottostante.</summary>
      <exception cref="T:System.ObjectDisposedException">Il writer corrente è chiuso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
      <exception cref="T:System.Text.EncoderFallbackException">La codifica corrente non supporta la visualizzazione della metà di una coppia di surrogati Unicode.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.FlushAsync">
      <summary>Consente di cancellare in modo asincrono i dati di tutti i buffer del flusso e la scrittura dei dati memorizzati nel buffer nel dispositivo sottostante.</summary>
      <returns>Attività che rappresenta l'operazione di scaricamento asincrona.</returns>
      <exception cref="T:System.ObjectDisposedException">Il flusso è stato eliminato.</exception>
    </member>
    <member name="F:System.IO.StreamWriter.Null">
      <summary>Fornisce un oggetto <see langword="StreamWriter" /> senza archivio di backup, in cui è possibile scrivere, ma da cui non è possibile leggere.</summary>
    </member>
    <member name="M:System.IO.StreamWriter.Write(System.Char)">
      <summary>Scrive un carattere nel flusso.</summary>
      <param name="value">Carattere da scrivere nel flusso di testo.</param>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="P:System.IO.StreamWriter.AutoFlush" /> è true o il buffer di <see cref="T:System.IO.StreamWriter" /> è pieno e il writer corrente è chiuso.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="P:System.IO.StreamWriter.AutoFlush" /> è true o il buffer di <see cref="T:System.IO.StreamWriter" /> è pieno e il contenuto del buffer non può essere scritto nel flusso sottostante di dimensione fissa poiché <see cref="T:System.IO.StreamWriter" /> si trova al termine del flusso.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.Write(System.Char[])">
      <summary>Scrive una matrice di caratteri nel flusso.</summary>
      <param name="buffer">Matrice di caratteri che contiene i dati da scrivere. Se <paramref name="buffer" /> è <see langword="null" />, non viene scritta alcuna voce.</param>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="P:System.IO.StreamWriter.AutoFlush" /> è true o il buffer di <see cref="T:System.IO.StreamWriter" /> è pieno e il writer corrente è chiuso.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="P:System.IO.StreamWriter.AutoFlush" /> è true o il buffer di <see cref="T:System.IO.StreamWriter" /> è pieno e il contenuto del buffer non può essere scritto nel flusso sottostante di dimensione fissa poiché <see cref="T:System.IO.StreamWriter" /> si trova al termine del flusso.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)">
      <summary>Scrive una sottomatrice di caratteri nel flusso.</summary>
      <param name="buffer">Matrice di caratteri che contiene i dati da scrivere.</param>
      <param name="index">Posizione del carattere nel buffer da cui iniziare la lettura dei dati.</param>
      <param name="count">Numero massimo di caratteri da scrivere.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> costruito in modo predefinito è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La lunghezza del buffer meno <paramref name="index" /> è minore di <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> o <paramref name="count" /> è negativo.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="P:System.IO.StreamWriter.AutoFlush" /> è true o il buffer di <see cref="T:System.IO.StreamWriter" /> è pieno e il writer corrente è chiuso.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="P:System.IO.StreamWriter.AutoFlush" /> è true o il buffer di <see cref="T:System.IO.StreamWriter" /> è pieno e il contenuto del buffer non può essere scritto nel flusso sottostante di dimensione fissa poiché <see cref="T:System.IO.StreamWriter" /> si trova al termine del flusso.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.Write(System.ReadOnlySpan{System.Char})">
      <summary>Scrive un intervallo di caratteri nel flusso.</summary>
      <param name="buffer">Intervallo di caratteri da scrivere.</param>
    </member>
    <member name="M:System.IO.StreamWriter.Write(System.String)">
      <summary>Scrive una stringa nel flusso.</summary>
      <param name="value">Stringa da scrivere nel flusso. Se <paramref name="value" /> è null, non viene scritta alcuna voce.</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="P:System.IO.StreamWriter.AutoFlush" /> è true o il buffer di <see cref="T:System.IO.StreamWriter" /> è pieno e il writer corrente è chiuso.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="P:System.IO.StreamWriter.AutoFlush" /> è true o il buffer di <see cref="T:System.IO.StreamWriter" /> è pieno e il contenuto del buffer non può essere scritto nel flusso sottostante di dimensione fissa poiché <see cref="T:System.IO.StreamWriter" /> si trova al termine del flusso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.Write(System.String,System.Object)">
      <summary>Scrive una stringa formattata nel flusso, usando la stessa semantica del metodo <see cref="M:System.String.Format(System.String,System.Object)" />.</summary>
      <param name="format">Stringa in formato composito.</param>
      <param name="arg0">Oggetto da formattare e scrivere.</param>
    </member>
    <member name="M:System.IO.StreamWriter.Write(System.String,System.Object,System.Object)">
      <summary>Scrive una stringa formattata nel flusso, usando la stessa semantica del metodo <see cref="M:System.String.Format(System.String,System.Object,System.Object)" />.</summary>
      <param name="format">Stringa in formato composito.</param>
      <param name="arg0">Primo oggetto da formattare e scrivere.</param>
      <param name="arg1">Secondo oggetto da formattare e scrivere.</param>
    </member>
    <member name="M:System.IO.StreamWriter.Write(System.String,System.Object,System.Object,System.Object)">
      <summary>Scrive una stringa formattata nel flusso, usando la stessa semantica del metodo <see cref="M:System.String.Format(System.String,System.Object,System.Object,System.Object)" />.</summary>
      <param name="format">Stringa in formato composito.</param>
      <param name="arg0">Primo oggetto da formattare e scrivere.</param>
      <param name="arg1">Secondo oggetto da formattare e scrivere.</param>
      <param name="arg2">Terzo oggetto da formattare e scrivere.</param>
    </member>
    <member name="M:System.IO.StreamWriter.Write(System.String,System.Object[])">
      <summary>Scrive una stringa formattata nel flusso, usando la stessa semantica del metodo <see cref="M:System.String.Format(System.String,System.Object[])" />.</summary>
      <param name="format">Stringa in formato composito.</param>
      <param name="arg">Matrice di oggetti che contiene zero o più oggetti da formattare e scrivere.</param>
    </member>
    <member name="M:System.IO.StreamWriter.WriteAsync(System.Char)">
      <summary>Scrive in modo asincrono un carattere nel flusso.</summary>
      <param name="value">Carattere da scrivere nel flusso di testo.</param>
      <returns>Attività che rappresenta l'operazione di scrittura asincrona.</returns>
      <exception cref="T:System.ObjectDisposedException">Il writer di flusso viene eliminato.</exception>
      <exception cref="T:System.InvalidOperationException">Il writer di flusso è attualmente utilizzato da un'operazione di scrittura precedente.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Scrive in modo asincrono una sottomatrice di caratteri nel flusso.</summary>
      <param name="buffer">Matrice di caratteri che contiene i dati da scrivere.</param>
      <param name="index">Posizione del carattere nel buffer da cui iniziare la lettura dei dati.</param>
      <param name="count">Numero massimo di caratteri da scrivere.</param>
      <returns>Attività che rappresenta l'operazione di scrittura asincrona.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> costruito in modo predefinito è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La somma di <paramref name="index" /> e <paramref name="count" /> è maggiore della lunghezza del buffer.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> o <paramref name="count" /> è negativo.</exception>
      <exception cref="T:System.ObjectDisposedException">Il writer di flusso viene eliminato.</exception>
      <exception cref="T:System.InvalidOperationException">Il writer di flusso è attualmente utilizzato da un'operazione di scrittura precedente.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.WriteAsync(System.ReadOnlyMemory{System.Char},System.Threading.CancellationToken)">
      <summary>Scrive in modo asincrono un'area di memoria dei caratteri nel flusso.</summary>
      <param name="buffer">Area di memoria dei caratteri da scrivere nel flusso.</param>
      <param name="cancellationToken">Token da monitorare per le richieste di annullamento. Il valore predefinito è <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Attività che rappresenta l'operazione di scrittura asincrona.</returns>
    </member>
    <member name="M:System.IO.StreamWriter.WriteAsync(System.String)">
      <summary>Scrive in modo asincrono una stringa nel flusso.</summary>
      <param name="value">Stringa da scrivere nel flusso. Se <paramref name="value" /> è <see langword="null" />, non viene scritta alcuna voce.</param>
      <returns>Attività che rappresenta l'operazione di scrittura asincrona.</returns>
      <exception cref="T:System.ObjectDisposedException">Il writer di flusso viene eliminato.</exception>
      <exception cref="T:System.InvalidOperationException">Il writer di flusso è attualmente utilizzato da un'operazione di scrittura precedente.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.WriteLine(System.ReadOnlySpan{System.Char})">
      <summary>Scrive nel flusso la rappresentazione testuale di un intervallo di caratteri, seguita da un terminatore di riga.</summary>
      <param name="buffer">Intervallo di caratteri da scrivere nel flusso.</param>
    </member>
    <member name="M:System.IO.StreamWriter.WriteLine(System.String)">
      <summary>Scrive una stringa nel flusso, seguita da un terminatore di riga.</summary>
      <param name="value">Stringa da scrivere. Se il parametro <paramref name="value" /> è <see langword="null" />, verrà scritto solo il terminatore di riga.</param>
    </member>
    <member name="M:System.IO.StreamWriter.WriteLine(System.String,System.Object)">
      <summary>Scrive una stringa formattata e una nuova riga nel flusso, usando la stessa semantica del metodo <see cref="M:System.String.Format(System.String,System.Object)" />.</summary>
      <param name="format">Stringa in formato composito.</param>
      <param name="arg0">Oggetto da formattare e scrivere.</param>
    </member>
    <member name="M:System.IO.StreamWriter.WriteLine(System.String,System.Object,System.Object)">
      <summary>Scrive una stringa formattata e una nuova riga nel flusso, usando la stessa semantica del metodo <see cref="M:System.String.Format(System.String,System.Object,System.Object)" />.</summary>
      <param name="format">Stringa in formato composito.</param>
      <param name="arg0">Primo oggetto da formattare e scrivere.</param>
      <param name="arg1">Secondo oggetto da formattare e scrivere.</param>
    </member>
    <member name="M:System.IO.StreamWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
      <summary>Scrive una stringa formattata e una nuova riga nel flusso, usando la stessa semantica di <see cref="M:System.String.Format(System.String,System.Object)" />.</summary>
      <param name="format">Stringa in formato composito.</param>
      <param name="arg0">Primo oggetto da formattare e scrivere.</param>
      <param name="arg1">Secondo oggetto da formattare e scrivere.</param>
      <param name="arg2">Terzo oggetto da formattare e scrivere.</param>
    </member>
    <member name="M:System.IO.StreamWriter.WriteLine(System.String,System.Object[])">
      <summary>Scrive una stringa formattata e una nuova riga nel flusso, usando la stessa semantica di <see cref="M:System.String.Format(System.String,System.Object)" />.</summary>
      <param name="format">Stringa in formato composito.</param>
      <param name="arg">Matrice di oggetti che contiene zero o più oggetti da formattare e scrivere.</param>
    </member>
    <member name="M:System.IO.StreamWriter.WriteLineAsync">
      <summary>Scrive in modo asincrono un terminatore di riga nel flusso.</summary>
      <returns>Attività che rappresenta l'operazione di scrittura asincrona.</returns>
      <exception cref="T:System.ObjectDisposedException">Il writer di flusso viene eliminato.</exception>
      <exception cref="T:System.InvalidOperationException">Il writer di flusso è attualmente utilizzato da un'operazione di scrittura precedente.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.WriteLineAsync(System.Char)">
      <summary>Scrive in modo asincrono un carattere nel flusso, seguito da un terminatore di riga.</summary>
      <param name="value">Carattere da scrivere nel flusso di testo.</param>
      <returns>Attività che rappresenta l'operazione di scrittura asincrona.</returns>
      <exception cref="T:System.ObjectDisposedException">Il writer di flusso viene eliminato.</exception>
      <exception cref="T:System.InvalidOperationException">Il writer di flusso è attualmente utilizzato da un'operazione di scrittura precedente.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Scrive in modo asincrono una sottomatrice di caratteri nel flusso, seguiti da un terminatore di riga.</summary>
      <param name="buffer">Matrice di caratteri da cui scrivere i dati.</param>
      <param name="index">Posizione del carattere nel buffer da cui iniziare la lettura dei dati.</param>
      <param name="count">Numero massimo di caratteri da scrivere.</param>
      <returns>Attività che rappresenta l'operazione di scrittura asincrona.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> costruito in modo predefinito è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La somma di <paramref name="index" /> e <paramref name="count" /> è maggiore della lunghezza del buffer.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> o <paramref name="count" /> è negativo.</exception>
      <exception cref="T:System.ObjectDisposedException">Il writer di flusso viene eliminato.</exception>
      <exception cref="T:System.InvalidOperationException">Il writer di flusso è attualmente utilizzato da un'operazione di scrittura precedente.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.WriteLineAsync(System.ReadOnlyMemory{System.Char},System.Threading.CancellationToken)">
      <summary>Scrive in modo asincrono la rappresentazione testuale di un'area di memoria dei caratteri nel flusso, seguita da un terminatore di riga.</summary>
      <param name="buffer">Area di memoria dei caratteri da scrivere nel flusso.</param>
      <param name="cancellationToken">Token da monitorare per le richieste di annullamento. Il valore predefinito è <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Attività che rappresenta l'operazione di scrittura asincrona.</returns>
    </member>
    <member name="M:System.IO.StreamWriter.WriteLineAsync(System.String)">
      <summary>Scrive in modo asincrono una stringa nel flusso, seguita da un terminatore di riga.</summary>
      <param name="value">Stringa da scrivere. Se il valore è <see langword="null" />, verrà scritto solo il terminatore della riga.</param>
      <returns>Attività che rappresenta l'operazione di scrittura asincrona.</returns>
      <exception cref="T:System.ObjectDisposedException">Il writer di flusso viene eliminato.</exception>
      <exception cref="T:System.InvalidOperationException">Il writer di flusso è attualmente utilizzato da un'operazione di scrittura precedente.</exception>
    </member>
    <member name="T:System.IO.StringReader">
      <summary>Implementa un oggetto <see cref="T:System.IO.TextReader" /> che legge da una stringa.</summary>
    </member>
    <member name="M:System.IO.StringReader.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.StringReader" /> che legge dalla stringa specificata.</summary>
      <param name="s">Stringa sulla quale inizializzare <see cref="T:System.IO.StringReader" />.</param>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="s" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.StringReader.Close">
      <summary>Chiude l'oggetto <see cref="T:System.IO.StringReader" />.</summary>
    </member>
    <member name="M:System.IO.StringReader.Dispose(System.Boolean)">
      <summary>Rilascia le risorse non gestite usate da <see cref="T:System.IO.StringReader" /> e, facoltativamente, le risorse gestite.</summary>
      <param name="disposing">
        <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite, <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="M:System.IO.StringReader.Peek">
      <summary>Restituisce il carattere successivo disponibile senza utilizzarlo.</summary>
      <returns>Integer che rappresenta il carattere successivo da leggere oppure -1 se non sono disponibili altri caratteri o se il flusso non supporta la ricerca.</returns>
      <exception cref="T:System.ObjectDisposedException">Il lettore corrente è chiuso.</exception>
    </member>
    <member name="M:System.IO.StringReader.Read">
      <summary>Legge il carattere successivo dalla stringa di input e fa avanzare di un carattere la posizione del carattere.</summary>
      <returns>Carattere successivo della stringa sottostante oppure -1 se non sono disponibili altri caratteri.</returns>
      <exception cref="T:System.ObjectDisposedException">Il lettore corrente è chiuso.</exception>
    </member>
    <member name="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
      <summary>Legge un blocco di caratteri dalla stringa di input e fa avanzare la posizione del carattere di <paramref name="count" />.</summary>
      <param name="buffer">Quando questo metodo viene restituito, contiene la matrice di caratteri specificata con i valori compresi tra <paramref name="index" /> e (<paramref name="index" /> +  + <paramref name="count" /> - 1) sostituiti con i caratteri letti dall'origine corrente.</param>
      <param name="index">Indice iniziale nel buffer.</param>
      <param name="count">Numero di caratteri da leggere.</param>
      <returns>Numero complessivo di caratteri letti nel buffer. È possibile che sia inferiore al numero di caratteri richiesti se la quantità di caratteri non è correntemente disponibile oppure può corrispondere a zero se è stata raggiunta la fine della stringa sottostante.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La lunghezza del buffer meno <paramref name="index" /> è minore di <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> o <paramref name="count" /> è negativo.</exception>
      <exception cref="T:System.ObjectDisposedException">Il lettore corrente è chiuso.</exception>
    </member>
    <member name="M:System.IO.StringReader.Read(System.Span{System.Char})">
      <param name="buffer" />
    </member>
    <member name="M:System.IO.StringReader.ReadAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Legge in modo asincrono un numero massimo specificato di caratteri dalla stringa corrente e scrive i dati in un buffer, a partire dall'indice specificato.</summary>
      <param name="buffer">Quando questo metodo viene restituito, contiene la matrice di caratteri specificata con i valori compresi tra <paramref name="index" /> e (<paramref name="index" /> +  + <paramref name="count" /> - 1) sostituiti con i caratteri letti dall'origine corrente.</param>
      <param name="index">Posizione in <paramref name="buffer" /> da cui iniziare la scrittura.</param>
      <param name="count">Numero massimo di caratteri da leggere. Se viene raggiunta la fine della stringa prima che il numero di caratteri specificato venga scritto nel buffer, il metodo restituisce un risultato.</param>
      <returns>Attività che rappresenta l'operazione di lettura asincrona. Il valore del parametro di <paramref name="TResult" /> contiene il numero totale di byte letti nel buffer. Il valore del risultato può essere minore del numero di byte richiesti se il numero di byte attualmente disponibili è minore di quelli richiesti o può essere pari a zero se è stata raggiunta la fine della stringa.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> o <paramref name="count" /> è negativo.</exception>
      <exception cref="T:System.ArgumentException">La somma di <paramref name="index" /> e <paramref name="count" /> è maggiore della lunghezza del buffer.</exception>
      <exception cref="T:System.ObjectDisposedException">Il lettore della stringa è stato eliminato.</exception>
      <exception cref="T:System.InvalidOperationException">Il lettore è attualmente usato da un'operazione di lettura precedente.</exception>
    </member>
    <member name="M:System.IO.StringReader.ReadAsync(System.Memory{System.Char},System.Threading.CancellationToken)">
      <param name="buffer" />
      <param name="cancellationToken" />
    </member>
    <member name="M:System.IO.StringReader.ReadBlock(System.Span{System.Char})">
      <param name="buffer" />
    </member>
    <member name="M:System.IO.StringReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Legge in modo asincrono un numero massimo specificato di caratteri dalla stringa corrente e scrive i dati in un buffer, a partire dall'indice specificato.</summary>
      <param name="buffer">Quando questo metodo viene restituito, contiene la matrice di caratteri specificata con i valori compresi tra <paramref name="index" /> e (<paramref name="index" /> +  + <paramref name="count" /> - 1) sostituiti con i caratteri letti dall'origine corrente.</param>
      <param name="index">Posizione in <paramref name="buffer" /> da cui iniziare la scrittura.</param>
      <param name="count">Numero massimo di caratteri da leggere. Se viene raggiunta la fine della stringa prima che il numero di caratteri specificato venga scritto nel buffer, il metodo restituisce un risultato.</param>
      <returns>Attività che rappresenta l'operazione di lettura asincrona. Il valore del parametro di <paramref name="TResult" /> contiene il numero totale di byte letti nel buffer. Il valore del risultato può essere minore del numero di byte richiesti se il numero di byte attualmente disponibili è minore di quelli richiesti o può essere pari a zero se è stata raggiunta la fine della stringa.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> o <paramref name="count" /> è negativo.</exception>
      <exception cref="T:System.ArgumentException">La somma di <paramref name="index" /> e <paramref name="count" /> è maggiore della lunghezza del buffer.</exception>
      <exception cref="T:System.ObjectDisposedException">Il lettore della stringa è stato eliminato.</exception>
      <exception cref="T:System.InvalidOperationException">Il lettore è attualmente usato da un'operazione di lettura precedente.</exception>
    </member>
    <member name="M:System.IO.StringReader.ReadBlockAsync(System.Memory{System.Char},System.Threading.CancellationToken)">
      <param name="buffer" />
      <param name="cancellationToken" />
    </member>
    <member name="M:System.IO.StringReader.ReadLine">
      <summary>Legge una riga di caratteri dalla stringa corrente e restituisce i dati come stringa.</summary>
      <returns>Riga successiva della stringa corrente oppure <see langword="null" /> se viene raggiunta la fine della stringa.</returns>
      <exception cref="T:System.ObjectDisposedException">Il lettore corrente è chiuso.</exception>
      <exception cref="T:System.OutOfMemoryException">La memoria disponibile non è sufficiente per l’allocazione di un buffer per la stringa restituita.</exception>
    </member>
    <member name="M:System.IO.StringReader.ReadLineAsync">
      <summary>Legge una riga di caratteri in modo asincrono dalla stringa corrente e restituisce i dati come stringa.</summary>
      <returns>Attività che rappresenta l'operazione di lettura asincrona. Il valore del parametro <paramref name="TResult" /> contiene la riga successiva del lettore di stringhe oppure è <see langword="null" /> se tutti i caratteri sono stati letti.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Il numero di caratteri nella riga successiva è maggiore di <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Il lettore della stringa è stato eliminato.</exception>
      <exception cref="T:System.InvalidOperationException">Il lettore è attualmente usato da un'operazione di lettura precedente.</exception>
    </member>
    <member name="M:System.IO.StringReader.ReadToEnd">
      <summary>Legge tutti i caratteri dalla posizione corrente fino alla fine della stringa e li restituisce come singola stringa.</summary>
      <returns>Contenuto dalla posizione corrente alla fine della stringa sottostante.</returns>
      <exception cref="T:System.OutOfMemoryException">La memoria disponibile non è sufficiente per l’allocazione di un buffer per la stringa restituita.</exception>
      <exception cref="T:System.ObjectDisposedException">Il lettore corrente è chiuso.</exception>
    </member>
    <member name="M:System.IO.StringReader.ReadToEndAsync">
      <summary>Legge in modo asincrono tutti i caratteri dalla posizione corrente fino alla fine della stringa e li restituisce come singola stringa.</summary>
      <returns>Attività che rappresenta l'operazione di lettura asincrona. Il valore del parametro <paramref name="TResult" /> contiene una stringa con i caratteri compresi tra la posizione corrente e l'estremità della stringa.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Il numero di caratteri è maggiore di <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Il lettore della stringa è stato eliminato.</exception>
      <exception cref="T:System.InvalidOperationException">Il lettore è attualmente usato da un'operazione di lettura precedente.</exception>
    </member>
    <member name="T:System.IO.StringWriter">
      <summary>Implementa un oggetto <see cref="T:System.IO.TextWriter" /> per la scrittura di informazioni in una stringa. Le informazioni vengono archiviate in un oggetto <see cref="T:System.Text.StringBuilder" /> sottostante.</summary>
    </member>
    <member name="M:System.IO.StringWriter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.StringWriter" />.</summary>
    </member>
    <member name="M:System.IO.StringWriter.#ctor(System.IFormatProvider)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.StringWriter" /> con il controllo di formato specificato.</summary>
      <param name="formatProvider">Oggetto <see cref="T:System.IFormatProvider" /> che controlla la formattazione.</param>
    </member>
    <member name="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.StringWriter" /> che scrive nell'oggetto <see cref="T:System.Text.StringBuilder" /> specificato.</summary>
      <param name="sb">Oggetto <see cref="T:System.Text.StringBuilder" /> su cui scrivere.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sb" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder,System.IFormatProvider)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.StringWriter" /> che scrive nello <see cref="T:System.Text.StringBuilder" /> specificato e dispone del provider di formato specificato.</summary>
      <param name="sb">Oggetto <see cref="T:System.Text.StringBuilder" /> su cui scrivere.</param>
      <param name="formatProvider">Oggetto <see cref="T:System.IFormatProvider" /> che controlla la formattazione.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sb" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.StringWriter.Close">
      <summary>Chiude l'oggetto <see cref="T:System.IO.StringWriter" /> corrente e il flusso sottostante.</summary>
    </member>
    <member name="M:System.IO.StringWriter.Dispose(System.Boolean)">
      <summary>Rilascia le risorse non gestite usate da <see cref="T:System.IO.StringWriter" /> e, facoltativamente, le risorse gestite.</summary>
      <param name="disposing">
        <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite, <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="P:System.IO.StringWriter.Encoding">
      <summary>Recupera l'oggetto <see cref="T:System.Text.Encoding" /> in cui viene scritto l'output.</summary>
      <returns>
        <see langword="Encoding" /> in cui viene scritto l'output.</returns>
    </member>
    <member name="M:System.IO.StringWriter.FlushAsync">
      <summary>Cancella in modo asincrono i dati di tutti i buffer del writer corrente e consente la scrittura dei dati memorizzati nel buffer nel dispositivo sottostante.</summary>
      <returns>Attività che rappresenta l'operazione di scaricamento asincrona.</returns>
    </member>
    <member name="M:System.IO.StringWriter.GetStringBuilder">
      <summary>Restituisce l'oggetto <see cref="T:System.Text.StringBuilder" /> sottostante.</summary>
      <returns>Oggetto <see langword="StringBuilder" /> sottostante.</returns>
    </member>
    <member name="M:System.IO.StringWriter.ToString">
      <summary>Restituisce una stringa contenente i caratteri scritti finora nell'oggetto <see langword="StringWriter" /> corrente.</summary>
      <returns>Stringa contenente i caratteri scritti nell'oggetto <see langword="StringWriter" /> corrente.</returns>
    </member>
    <member name="M:System.IO.StringWriter.Write(System.Char)">
      <summary>Scrive un carattere nella stringa.</summary>
      <param name="value">Carattere da scrivere.</param>
      <exception cref="T:System.ObjectDisposedException">Il writer viene chiuso.</exception>
    </member>
    <member name="M:System.IO.StringWriter.Write(System.Char[],System.Int32,System.Int32)">
      <summary>Scrive una sottomatrice di caratteri nella stringa.</summary>
      <param name="buffer">Matrice di caratteri da cui scrivere i dati.</param>
      <param name="index">Posizione nel buffer da cui iniziare la lettura dei dati.</param>
      <param name="count">Numero massimo di caratteri da scrivere.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> o <paramref name="count" /> è negativo.</exception>
      <exception cref="T:System.ArgumentException">(<paramref name="index" /> + <paramref name="count" />)&gt; <paramref name="buffer" />. <see langword="Length" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Il writer viene chiuso.</exception>
    </member>
    <member name="M:System.IO.StringWriter.Write(System.ReadOnlySpan{System.Char})">
      <summary>Scrive la rappresentazione stringa di un intervallo di caratteri nella stringa corrente.</summary>
      <param name="buffer">Intervallo di caratteri da scrivere nella stringa.</param>
    </member>
    <member name="M:System.IO.StringWriter.Write(System.String)">
      <summary>Scrive una stringa nella stringa corrente.</summary>
      <param name="value">Stringa da scrivere.</param>
      <exception cref="T:System.ObjectDisposedException">Il writer viene chiuso.</exception>
    </member>
    <member name="M:System.IO.StringWriter.Write(System.Text.StringBuilder)">
      <summary>Scrive nella stringa corrente la rappresentazione stringa di un generatore di stringhe.</summary>
      <param name="value">Generatore di stringhe da scrivere nella stringa.</param>
    </member>
    <member name="M:System.IO.StringWriter.WriteAsync(System.Char)">
      <summary>Scrive un carattere nella stringa in modo asincrono.</summary>
      <param name="value">Carattere da scrivere nella stringa.</param>
      <returns>Attività che rappresenta l'operazione di scrittura asincrona.</returns>
      <exception cref="T:System.ObjectDisposedException">Il writer di stringa viene eliminato.</exception>
      <exception cref="T:System.InvalidOperationException">Il writer di stringa è attualmente utilizzato da un'operazione di scrittura precedente.</exception>
    </member>
    <member name="M:System.IO.StringWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Scrive una sottomatrice di caratteri nella stringa in modo asincrono.</summary>
      <param name="buffer">Matrice di caratteri da cui scrivere i dati.</param>
      <param name="index">Posizione nel buffer da cui iniziare la lettura dei dati.</param>
      <param name="count">Numero massimo di caratteri da scrivere.</param>
      <returns>Attività che rappresenta l'operazione di scrittura asincrona.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La somma di <paramref name="index" /> e <paramref name="count" /> è maggiore della lunghezza del buffer.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> o <paramref name="count" /> è negativo.</exception>
      <exception cref="T:System.ObjectDisposedException">Il writer di stringa viene eliminato.</exception>
      <exception cref="T:System.InvalidOperationException">Il writer di stringa è attualmente utilizzato da un'operazione di scrittura precedente.</exception>
    </member>
    <member name="M:System.IO.StringWriter.WriteAsync(System.ReadOnlyMemory{System.Char},System.Threading.CancellationToken)">
      <summary>Scrive in modo asincrono un'area di memoria di caratteri nella stringa.</summary>
      <param name="buffer">Area di memoria dei caratteri da scrivere nella stringa.</param>
      <param name="cancellationToken">Token da monitorare per le richieste di annullamento. Il valore predefinito è <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Attività che rappresenta l'operazione di scrittura asincrona.</returns>
    </member>
    <member name="M:System.IO.StringWriter.WriteAsync(System.String)">
      <summary>Scrive una stringa nella stringa corrente in modo asincrono.</summary>
      <param name="value">Stringa da scrivere. Se <paramref name="value" /> è <see langword="null" />, nel flusso di testo non viene scritto alcun dato.</param>
      <returns>Attività che rappresenta l'operazione di scrittura asincrona.</returns>
      <exception cref="T:System.ObjectDisposedException">Il writer di stringa viene eliminato.</exception>
      <exception cref="T:System.InvalidOperationException">Il writer di stringa è attualmente utilizzato da un'operazione di scrittura precedente.</exception>
    </member>
    <member name="M:System.IO.StringWriter.WriteAsync(System.Text.StringBuilder,System.Threading.CancellationToken)">
      <summary>Scrive in modo asincrono nella stringa la rappresentazione testuale di un generatore di stringhe.</summary>
      <param name="value">Generatore di stringhe da scrivere nella stringa.</param>
      <param name="cancellationToken">Token da monitorare per le richieste di annullamento. Il valore predefinito è <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Attività che rappresenta l'operazione di scrittura asincrona.</returns>
    </member>
    <member name="M:System.IO.StringWriter.WriteLine(System.ReadOnlySpan{System.Char})">
      <summary>Scrive nella stringa la rappresentazione testuale di un intervallo di caratteri, seguita da un terminatore di riga.</summary>
      <param name="buffer">Intervallo di caratteri da scrivere nella stringa.</param>
    </member>
    <member name="M:System.IO.StringWriter.WriteLine(System.Text.StringBuilder)">
      <summary>Scrive nella stringa la rappresentazione testuale di un generatore di stringhe, seguita da un terminatore di riga.</summary>
      <param name="value">Stringa, come un generatore di stringhe, da scrivere nella stringa.</param>
    </member>
    <member name="M:System.IO.StringWriter.WriteLineAsync(System.Char)">
      <summary>Scrive in modo asincrono un carattere nella stringa, seguito da un terminatore di riga.</summary>
      <param name="value">Carattere da scrivere nella stringa.</param>
      <returns>Attività che rappresenta l'operazione di scrittura asincrona.</returns>
      <exception cref="T:System.ObjectDisposedException">Il writer di stringa viene eliminato.</exception>
      <exception cref="T:System.InvalidOperationException">Il writer di stringa è attualmente utilizzato da un'operazione di scrittura precedente.</exception>
    </member>
    <member name="M:System.IO.StringWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Scrive in modo asincrono una sottomatrice di caratteri nella stringa, seguiti da un terminatore di riga.</summary>
      <param name="buffer">Matrice di caratteri da cui scrivere i dati.</param>
      <param name="index">Posizione nel buffer da cui iniziare la lettura dei dati.</param>
      <param name="count">Numero massimo di caratteri da scrivere.</param>
      <returns>Attività che rappresenta l'operazione di scrittura asincrona.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La somma di <paramref name="index" /> e <paramref name="count" /> è maggiore della lunghezza del buffer.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> o <paramref name="count" /> è negativo.</exception>
      <exception cref="T:System.ObjectDisposedException">Il writer di stringa viene eliminato.</exception>
      <exception cref="T:System.InvalidOperationException">Il writer di stringa è attualmente utilizzato da un'operazione di scrittura precedente.</exception>
    </member>
    <member name="M:System.IO.StringWriter.WriteLineAsync(System.ReadOnlyMemory{System.Char},System.Threading.CancellationToken)">
      <summary>Scrive in modo asincrono la rappresentazione stringa dell'area di memoria dei caratteri nella stringa corrente, seguita da un terminatore di riga.</summary>
      <param name="buffer">Area di memoria dei caratteri da scrivere nella stringa.</param>
      <param name="cancellationToken">Token da monitorare per le richieste di annullamento. Il valore predefinito è <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Attività che rappresenta l'operazione di scrittura asincrona.</returns>
    </member>
    <member name="M:System.IO.StringWriter.WriteLineAsync(System.String)">
      <summary>Scrive in modo asincrono una stringa nella stringa corrente, seguita da un terminatore di riga.</summary>
      <param name="value">Stringa da scrivere. Se il valore è <see langword="null" />, verrà scritto solo il terminatore della riga.</param>
      <returns>Attività che rappresenta l'operazione di scrittura asincrona.</returns>
      <exception cref="T:System.ObjectDisposedException">Il writer di stringa viene eliminato.</exception>
      <exception cref="T:System.InvalidOperationException">Il writer di stringa è attualmente utilizzato da un'operazione di scrittura precedente.</exception>
    </member>
    <member name="M:System.IO.StringWriter.WriteLineAsync(System.Text.StringBuilder,System.Threading.CancellationToken)">
      <summary>Scrive in modo asincrono la rappresentazione stringa del generatore di stringhe nella stringa corrente, seguita da un terminatore di riga.</summary>
      <param name="value">Generatore di stringhe da scrivere nella stringa.</param>
      <param name="cancellationToken">Token da monitorare per le richieste di annullamento. Il valore predefinito è <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Attività che rappresenta l'operazione di scrittura asincrona.</returns>
    </member>
    <member name="T:System.IO.TextReader">
      <summary>Rappresenta un visualizzatore in grado di leggere una serie sequenziale di caratteri.</summary>
    </member>
    <member name="M:System.IO.TextReader.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.TextReader" />.</summary>
    </member>
    <member name="M:System.IO.TextReader.Close">
      <summary>Chiude l'oggetto <see cref="T:System.IO.TextReader" /> e libera tutte le risorse di sistema associate a <see langword="TextReader" />.</summary>
    </member>
    <member name="M:System.IO.TextReader.Dispose">
      <summary>Rilascia tutte le risorse usate dall'oggetto <see cref="T:System.IO.TextReader" />.</summary>
    </member>
    <member name="M:System.IO.TextReader.Dispose(System.Boolean)">
      <summary>Rilascia le risorse non gestite usate da <see cref="T:System.IO.TextReader" /> e, facoltativamente, le risorse gestite.</summary>
      <param name="disposing">
        <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite, <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="F:System.IO.TextReader.Null">
      <summary>Fornisce un oggetto <see langword="TextReader" /> senza dati da cui sia possibile eseguire letture.</summary>
    </member>
    <member name="M:System.IO.TextReader.Peek">
      <summary>Legge il carattere successivo senza modificare lo stato del visualizzatore o dell'origine del carattere. Restituisce il successivo carattere disponibile senza leggerlo effettivamente dal lettore.</summary>
      <returns>Integer che rappresenta il carattere successivo da leggere oppure -1 se non sono disponibili altri caratteri o se il lettore non supporta la ricerca.</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.IO.TextReader" /> è chiuso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
    </member>
    <member name="M:System.IO.TextReader.Read">
      <summary>Legge il carattere successivo dal lettore di testo e fa avanzare di un carattere la posizione del carattere.</summary>
      <returns>Carattere successivo del lettore di testo oppure -1 se non sono disponibili altri caratteri. L'implementazione predefinita restituisce -1.</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.IO.TextReader" /> è chiuso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
    </member>
    <member name="M:System.IO.TextReader.Read(System.Char[],System.Int32,System.Int32)">
      <summary>Legge un numero massimo specificato di caratteri dal lettore corrente e scrive i dati in un buffer, a partire dall'indice specificato.</summary>
      <param name="buffer">Quando questo metodo viene restituito, contiene la matrice di caratteri specificata con i valori compresi tra <paramref name="index" /> e (<paramref name="index" /> +  + <paramref name="count" /> - 1) sostituiti con i caratteri letti dall'origine corrente.</param>
      <param name="index">Posizione in <paramref name="buffer" /> da cui iniziare la scrittura.</param>
      <param name="count">Numero massimo di caratteri da leggere. Se viene raggiunta la fine del reader prima che il numero di caratteri specificato venga letto nel buffer, il metodo restituisce un risultato.</param>
      <returns>Numero di caratteri letti. Il numero sarà minore o uguale a <paramref name="count" />, a seconda che i dati siano disponibili all'interno del lettore o meno. Se viene chiamato quando non sono più disponibili altri caratteri da leggere, questo metodo restituirà zero.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La lunghezza del buffer meno <paramref name="index" /> è minore di <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> o <paramref name="count" /> è negativo.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.IO.TextReader" /> è chiuso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
    </member>
    <member name="M:System.IO.TextReader.Read(System.Span{System.Char})">
      <param name="buffer" />
    </member>
    <member name="M:System.IO.TextReader.ReadAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Legge un numero massimo specificato di caratteri dal lettore di testo corrente in modo asincrono e scrive i dati in un buffer, a partire dall'indice specificato.</summary>
      <param name="buffer">Quando questo metodo viene restituito, contiene la matrice di caratteri specificata con i valori compresi tra <paramref name="index" /> e (<paramref name="index" /> +  + <paramref name="count" /> - 1) sostituiti con i caratteri letti dall'origine corrente.</param>
      <param name="index">Posizione in <paramref name="buffer" /> da cui iniziare la scrittura.</param>
      <param name="count">Numero massimo di caratteri da leggere. Se viene raggiunta la fine del testo prima che il numero di caratteri specificato venga letto nel buffer, il metodo corrente terminerà.</param>
      <returns>Attività che rappresenta l'operazione di lettura asincrona. Il valore del parametro di <paramref name="TResult" /> contiene il numero totale di byte letti nel buffer. Il valore del risultato può essere minore del numero di byte richiesti se il numero di byte attualmente disponibili è minore di quelli richiesti o può essere pari a zero se è stata raggiunta la fine del testo.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> o <paramref name="count" /> è negativo.</exception>
      <exception cref="T:System.ArgumentException">La somma di <paramref name="index" /> e <paramref name="count" /> è maggiore della lunghezza del buffer.</exception>
      <exception cref="T:System.ObjectDisposedException">Il lettore di testo è stato eliminato.</exception>
      <exception cref="T:System.InvalidOperationException">Il lettore è attualmente usato da un'operazione di lettura precedente.</exception>
    </member>
    <member name="M:System.IO.TextReader.ReadAsync(System.Memory{System.Char},System.Threading.CancellationToken)">
      <param name="buffer" />
      <param name="cancellationToken" />
    </member>
    <member name="M:System.IO.TextReader.ReadBlock(System.Char[],System.Int32,System.Int32)">
      <summary>Legge un numero massimo specificato di caratteri dal lettore di testo corrente e scrive i dati in un buffer, a partire dall'indice specificato.</summary>
      <param name="buffer">Quando questo metodo viene restituito, questo parametro contiene la matrice di caratteri specificata con i valori compresi tra <paramref name="index" /> e (<paramref name="index" /> + <paramref name="count" /> -1) sostituiti con i caratteri letti dall'origine corrente.</param>
      <param name="index">Posizione in <paramref name="buffer" /> da cui iniziare la scrittura.</param>
      <param name="count">Numero massimo di caratteri da leggere.</param>
      <returns>Numero di caratteri letti. Il numero sarà minore di o uguale a <paramref name="count" />, a seconda che tutti i caratteri di input siano stati letti o meno.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La lunghezza del buffer meno <paramref name="index" /> è minore di <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> o <paramref name="count" /> è negativo.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.IO.TextReader" /> è chiuso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
    </member>
    <member name="M:System.IO.TextReader.ReadBlock(System.Span{System.Char})">
      <param name="buffer" />
    </member>
    <member name="M:System.IO.TextReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Legge un numero massimo specificato di caratteri dal lettore di testo corrente in modo asincrono e scrive i dati in un buffer, a partire dall'indice specificato.</summary>
      <param name="buffer">Quando questo metodo viene restituito, contiene la matrice di caratteri specificata con i valori compresi tra <paramref name="index" /> e (<paramref name="index" /> +  + <paramref name="count" /> - 1) sostituiti con i caratteri letti dall'origine corrente.</param>
      <param name="index">Posizione in <paramref name="buffer" /> da cui iniziare la scrittura.</param>
      <param name="count">Numero massimo di caratteri da leggere. Se viene raggiunta la fine del testo prima che il numero di caratteri specificato venga letto nel buffer, il metodo corrente terminerà.</param>
      <returns>Attività che rappresenta l'operazione di lettura asincrona. Il valore del parametro di <paramref name="TResult" /> contiene il numero totale di byte letti nel buffer. Il valore del risultato può essere minore del numero di byte richiesti se il numero di byte attualmente disponibili è minore di quelli richiesti o può essere pari a zero se è stata raggiunta la fine del testo.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> o <paramref name="count" /> è negativo.</exception>
      <exception cref="T:System.ArgumentException">La somma di <paramref name="index" /> e <paramref name="count" /> è maggiore della lunghezza del buffer.</exception>
      <exception cref="T:System.ObjectDisposedException">Il lettore di testo è stato eliminato.</exception>
      <exception cref="T:System.InvalidOperationException">Il lettore è attualmente usato da un'operazione di lettura precedente.</exception>
    </member>
    <member name="M:System.IO.TextReader.ReadBlockAsync(System.Memory{System.Char},System.Threading.CancellationToken)">
      <param name="buffer" />
      <param name="cancellationToken" />
    </member>
    <member name="M:System.IO.TextReader.ReadLine">
      <summary>Legge una riga di caratteri dal lettore di testo e restituisce i dati come stringa.</summary>
      <returns>Riga successiva dal lettore oppure <see langword="null" /> se tutti i caratteri sono stati letti.</returns>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
      <exception cref="T:System.OutOfMemoryException">La memoria disponibile non è sufficiente per l’allocazione di un buffer per la stringa restituita.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.IO.TextReader" /> è chiuso.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il numero di caratteri nella riga successiva è maggiore di <see cref="F:System.Int32.MaxValue" /></exception>
    </member>
    <member name="M:System.IO.TextReader.ReadLineAsync">
      <summary>Legge una riga di caratteri in modo asincrono e restituisce i dati come stringa.</summary>
      <returns>Attività che rappresenta l'operazione di lettura asincrona. Il valore del parametro <paramref name="TResult" /> contiene la riga successiva del lettore di testo oppure è <see langword="null" /> se tutti i caratteri sono stati letti.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Il numero di caratteri nella riga successiva è maggiore di <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Il lettore di testo è stato eliminato.</exception>
      <exception cref="T:System.InvalidOperationException">Il lettore è attualmente usato da un'operazione di lettura precedente.</exception>
    </member>
    <member name="M:System.IO.TextReader.ReadToEnd">
      <summary>Legge tutti i caratteri dalla posizione corrente fino alla fine del lettore di testo e li restituisce come singola stringa.</summary>
      <returns>Stringa contenente tutti i caratteri dalla posizione corrente fino alla fine del lettore di testo.</returns>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.IO.TextReader" /> è chiuso.</exception>
      <exception cref="T:System.OutOfMemoryException">La memoria disponibile non è sufficiente per l’allocazione di un buffer per la stringa restituita.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il numero di caratteri nella riga successiva è maggiore di <see cref="F:System.Int32.MaxValue" /></exception>
    </member>
    <member name="M:System.IO.TextReader.ReadToEndAsync">
      <summary>Legge in modo asincrono tutti i caratteri dalla posizione corrente fino alla fine del lettore di testo e li restituisce come singola stringa.</summary>
      <returns>Attività che rappresenta l'operazione di lettura asincrona. Il valore del parametro <paramref name="TResult" /> contiene una stringa con i caratteri compresi tra la posizione corrente e l'estremità del lettore di testo.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Il numero di caratteri è maggiore di <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Il lettore di testo è stato eliminato.</exception>
      <exception cref="T:System.InvalidOperationException">Il lettore è attualmente usato da un'operazione di lettura precedente.</exception>
    </member>
    <member name="M:System.IO.TextReader.Synchronized(System.IO.TextReader)">
      <summary>Crea un wrapper thread-safe per l'oggetto <see langword="TextReader" /> specificato.</summary>
      <param name="reader">Oggetto <see langword="TextReader" /> da sincronizzare.</param>
      <returns>Oggetto <see cref="T:System.IO.TextReader" /> thread-safe.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> è <see langword="null" />.</exception>
    </member>
    <member name="T:System.IO.TextWriter">
      <summary>Rappresenta un writer in grado di scrivere una serie sequenziale di caratteri. Questa classe è astratta.</summary>
    </member>
    <member name="M:System.IO.TextWriter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.TextWriter" />.</summary>
    </member>
    <member name="M:System.IO.TextWriter.#ctor(System.IFormatProvider)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.TextWriter" /> con il provider di formato specificato.</summary>
      <param name="formatProvider">Oggetto <see cref="T:System.IFormatProvider" /> che controlla la formattazione.</param>
    </member>
    <member name="M:System.IO.TextWriter.Close">
      <summary>Chiude il writer corrente e rilascia eventuali risorse di sistema a esso associate.</summary>
    </member>
    <member name="F:System.IO.TextWriter.CoreNewLine">
      <summary>Archivia i caratteri di nuova riga usati per questo <see langword="TextWriter" />.</summary>
    </member>
    <member name="M:System.IO.TextWriter.Dispose">
      <summary>Rilascia tutte le risorse usate dall'oggetto <see cref="T:System.IO.TextWriter" />.</summary>
    </member>
    <member name="M:System.IO.TextWriter.Dispose(System.Boolean)">
      <summary>Rilascia le risorse non gestite usate da <see cref="T:System.IO.TextWriter" /> e, facoltativamente, le risorse gestite.</summary>
      <param name="disposing">
        <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite, <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="M:System.IO.TextWriter.DisposeAsync">
      <summary>Rilascia in modo asincrono tutte le risorse usate dall'oggetto <see cref="T:System.IO.TextWriter" />.</summary>
      <returns>Attività che rappresenta l'operazione di eliminazione asincrona.</returns>
    </member>
    <member name="P:System.IO.TextWriter.Encoding">
      <summary>Se sottoposto a override in una classe derivata, restituisce la codifica caratteri in cui viene scritto l'output.</summary>
      <returns>Codifica caratteri in cui viene scritto l'output.</returns>
    </member>
    <member name="M:System.IO.TextWriter.Flush">
      <summary>Cancella i dati di tutti i buffer del writer corrente e consente la scrittura dei dati memorizzati nel buffer nel dispositivo sottostante.</summary>
    </member>
    <member name="M:System.IO.TextWriter.FlushAsync">
      <summary>Cancella in modo asincrono i dati di tutti i buffer del writer corrente e consente la scrittura dei dati memorizzati nel buffer nel dispositivo sottostante.</summary>
      <returns>Attività che rappresenta l'operazione di scaricamento asincrona.</returns>
      <exception cref="T:System.ObjectDisposedException">Il writer di testo viene eliminato.</exception>
      <exception cref="T:System.InvalidOperationException">Il writer è attualmente utilizzato da un'operazione di scrittura precedente.</exception>
    </member>
    <member name="P:System.IO.TextWriter.FormatProvider">
      <summary>Ottiene un oggetto che controlla la formattazione.</summary>
      <returns>Oggetto <see cref="T:System.IFormatProvider" /> per impostazioni cultura specifiche oppure la formattazione delle impostazioni cultura correnti se non sono specificate altre impostazioni cultura.</returns>
    </member>
    <member name="P:System.IO.TextWriter.NewLine">
      <summary>Recupera o imposta la stringa di terminazione di riga usata dall'oggetto <see langword="TextWriter" /> corrente.</summary>
      <returns>Stringa di terminazione di riga relativa all'oggetto <see langword="TextWriter" /> corrente.</returns>
    </member>
    <member name="F:System.IO.TextWriter.Null">
      <summary>Fornisce un oggetto <see langword="TextWriter" /> senza archivio di backup, in cui è possibile scrivere, ma da cui non è possibile leggere.</summary>
    </member>
    <member name="M:System.IO.TextWriter.Synchronized(System.IO.TextWriter)">
      <summary>Crea un wrapper thread-safe per l'oggetto <see langword="TextWriter" /> specificato.</summary>
      <param name="writer">Oggetto <see langword="TextWriter" /> da sincronizzare.</param>
      <returns>Wrapper thread-safe.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.Boolean)">
      <summary>Inserisce nel flusso di testo la rappresentazione testuale di un valore <see langword="Boolean" />.</summary>
      <param name="value">Valore <see langword="Boolean" /> da scrivere.</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.IO.TextWriter" /> è chiuso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.Char)">
      <summary>Scrive un carattere nel flusso di testo.</summary>
      <param name="value">Carattere da scrivere nel flusso di testo.</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.IO.TextWriter" /> è chiuso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.Char[])">
      <summary>Scrive una matrice di caratteri nel flusso di testo.</summary>
      <param name="buffer">Matrice di caratteri da scrivere nel flusso di testo.</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.IO.TextWriter" /> è chiuso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)">
      <summary>Scrive una sottomatrice di caratteri nel flusso di testo.</summary>
      <param name="buffer">Matrice di caratteri da cui scrivere i dati.</param>
      <param name="index">Posizione del carattere nel buffer da cui iniziare il recupero dei dati.</param>
      <param name="count">Numero di caratteri da scrivere.</param>
      <exception cref="T:System.ArgumentException">La lunghezza del buffer meno <paramref name="index" /> è minore di <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> o <paramref name="count" /> è negativo.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.IO.TextWriter" /> è chiuso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.Decimal)">
      <summary>Scrive nel flusso di testo la rappresentazione testuale di un valore decimale.</summary>
      <param name="value">Valore decimale da scrivere.</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.IO.TextWriter" /> è chiuso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.Double)">
      <summary>Scrive nel flusso di testo la rappresentazione testuale di un valore a virgola mobile a 8 byte.</summary>
      <param name="value">Valore a virgola mobile a 8 byte da scrivere.</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.IO.TextWriter" /> è chiuso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.Int32)">
      <summary>Scrive nel flusso di testo la rappresentazione testuale di un intero a 4 byte con segno.</summary>
      <param name="value">Intero a 4 byte con segno da scrivere.</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.IO.TextWriter" /> è chiuso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.Int64)">
      <summary>Scrive nel flusso di testo la rappresentazione testuale di un intero a 8 byte con segno.</summary>
      <param name="value">Intero a 8 byte con segno da scrivere.</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.IO.TextWriter" /> è chiuso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.Object)">
      <summary>Scrive nel flusso di testo la rappresentazione testuale di un oggetto chiamando il metodo <see langword="ToString" /> su tale oggetto.</summary>
      <param name="value">Oggetto da scrivere.</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.IO.TextWriter" /> è chiuso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.ReadOnlySpan{System.Char})">
      <summary>Scrive un intervallo di caratteri nel flusso di testo.</summary>
      <param name="buffer">Intervallo di caratteri da scrivere.</param>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.Single)">
      <summary>Scrive nel flusso di testo la rappresentazione testuale di un valore a virgola mobile a 4 byte.</summary>
      <param name="value">Valore a virgola mobile a 4 byte da scrivere.</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.IO.TextWriter" /> è chiuso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.String)">
      <summary>Scrive una stringa nel flusso di testo.</summary>
      <param name="value">Stringa da scrivere.</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.IO.TextWriter" /> è chiuso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.String,System.Object)">
      <summary>Scrive una stringa formattata nel flusso di testo, usando la stessa semantica del metodo <see cref="M:System.String.Format(System.String,System.Object)" />.</summary>
      <param name="format">Stringa in formato composito.</param>
      <param name="arg0">Oggetto da formattare e scrivere.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.IO.TextWriter" /> è chiuso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> non è una stringa di formato composto valido.  
-oppure- 
L'indice di un elemento di formato è minore di 0 (zero) o maggiore o uguale al numero di oggetti da formattare (che, per questo overload del metodo, è uno).</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
      <summary>Scrive una stringa formattata nel flusso di testo, usando la stessa semantica del metodo <see cref="M:System.String.Format(System.String,System.Object,System.Object)" />.</summary>
      <param name="format">Stringa in formato composito.</param>
      <param name="arg0">Primo oggetto da formattare e scrivere.</param>
      <param name="arg1">Secondo oggetto da formattare e scrivere.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.IO.TextWriter" /> è chiuso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> non è una stringa di formato composto valido.  
In alternativa 
L'indice di un elemento di formato è minore di 0 (zero) o maggiore o uguale al numero di oggetti da formattare (che, per questo overload del metodo, è due).</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
      <summary>Scrive una stringa formattata nel flusso di testo, usando la stessa semantica del metodo <see cref="M:System.String.Format(System.String,System.Object,System.Object,System.Object)" />.</summary>
      <param name="format">Stringa in formato composito.</param>
      <param name="arg0">Primo oggetto da formattare e scrivere.</param>
      <param name="arg1">Secondo oggetto da formattare e scrivere.</param>
      <param name="arg2">Terzo oggetto da formattare e scrivere.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.IO.TextWriter" /> è chiuso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> non è una stringa di formato composto valido.  
-oppure- 
L'indice di un elemento di formato è minore di 0 (zero) o maggiore o uguale al numero di oggetti da formattare (che, per questo overload del metodo, è tre).</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.String,System.Object[])">
      <summary>Scrive una stringa formattata nel flusso di testo, usando la stessa semantica del metodo <see cref="M:System.String.Format(System.String,System.Object[])" />.</summary>
      <param name="format">Stringa in formato composito.</param>
      <param name="arg">Matrice di oggetti che contiene zero o più oggetti da formattare e scrivere.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> o <paramref name="arg" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.IO.TextWriter" /> è chiuso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> non è una stringa di formato composto valido.  
-oppure- 
L'indice di un elemento di formato è minore di zero oppure maggiore o uguale alla lunghezza della matrice <paramref name="arg" />.</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.Text.StringBuilder)">
      <summary>Scrive un generatore di stringhe nel flusso di testo.</summary>
      <param name="value">Stringa, come un generatore di stringhe, da scrivere nel flusso di testo.</param>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.UInt32)">
      <summary>Scrive nel flusso di testo la rappresentazione testuale di un intero a 4 byte senza segno.</summary>
      <param name="value">Intero a 4 byte senza segno da scrivere.</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.IO.TextWriter" /> è chiuso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.UInt64)">
      <summary>Scrive nel flusso di testo la rappresentazione testuale di un intero a 8 byte senza segno.</summary>
      <param name="value">Intero a 8 byte senza segno da scrivere.</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.IO.TextWriter" /> è chiuso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteAsync(System.Char)">
      <summary>Scrive un carattere nel flusso di testo in modo asincrono.</summary>
      <param name="value">Carattere da scrivere nel flusso di testo.</param>
      <returns>Attività che rappresenta l'operazione di scrittura asincrona.</returns>
      <exception cref="T:System.ObjectDisposedException">Il writer di testo viene eliminato.</exception>
      <exception cref="T:System.InvalidOperationException">Il writer di testo è attualmente utilizzato da un'operazione di scrittura precedente.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteAsync(System.Char[])">
      <summary>Scrive una matrice di caratteri in modo asincrono nel flusso di testo.</summary>
      <param name="buffer">Matrice di caratteri da scrivere nel flusso di testo. Se <paramref name="buffer" /> è <see langword="null" />, non viene scritta alcuna voce.</param>
      <returns>Attività che rappresenta l'operazione di scrittura asincrona.</returns>
      <exception cref="T:System.ObjectDisposedException">Il writer di testo viene eliminato.</exception>
      <exception cref="T:System.InvalidOperationException">Il writer di testo è attualmente utilizzato da un'operazione di scrittura precedente.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Scrive una sottomatrice di caratteri nel flusso di testo in modo asincrono.</summary>
      <param name="buffer">Matrice di caratteri da cui scrivere i dati.</param>
      <param name="index">Posizione del carattere nel buffer da cui iniziare il recupero dei dati.</param>
      <param name="count">Numero di caratteri da scrivere.</param>
      <returns>Attività che rappresenta l'operazione di scrittura asincrona.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La somma di <paramref name="index" /> e <paramref name="count" /> è maggiore della lunghezza del buffer.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> o <paramref name="count" /> è negativo.</exception>
      <exception cref="T:System.ObjectDisposedException">Il writer di testo viene eliminato.</exception>
      <exception cref="T:System.InvalidOperationException">Il writer di testo è attualmente utilizzato da un'operazione di scrittura precedente.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteAsync(System.ReadOnlyMemory{System.Char},System.Threading.CancellationToken)">
      <summary>Scrive in modo asincrono un'area di memoria dei caratteri nel flusso di testo.</summary>
      <param name="buffer">Area di memoria dei caratteri da scrivere nel flusso di testo.</param>
      <param name="cancellationToken">Token da monitorare per le richieste di annullamento. Il valore predefinito è <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Attività che rappresenta l'operazione di scrittura asincrona.</returns>
    </member>
    <member name="M:System.IO.TextWriter.WriteAsync(System.String)">
      <summary>Scrive una stringa nel flusso di testo in modo asincrono.</summary>
      <param name="value">Stringa da scrivere. Se <paramref name="value" /> è <see langword="null" />, nel flusso di testo non viene scritto alcun dato.</param>
      <returns>Attività che rappresenta l'operazione di scrittura asincrona.</returns>
      <exception cref="T:System.ObjectDisposedException">Il writer di testo viene eliminato.</exception>
      <exception cref="T:System.InvalidOperationException">Il writer di testo è attualmente utilizzato da un'operazione di scrittura precedente.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteAsync(System.Text.StringBuilder,System.Threading.CancellationToken)">
      <summary>Scrive in modo asincrono un generatore di stringhe nel flusso di testo.</summary>
      <param name="value">Stringa, come un generatore di stringhe, da scrivere nel flusso di testo.</param>
      <param name="cancellationToken">Token da monitorare per le richieste di annullamento. Il valore predefinito è <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Attività che rappresenta l'operazione di scrittura asincrona.</returns>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine">
      <summary>Scrive un terminatore di riga nel flusso di testo.</summary>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.IO.TextWriter" /> è chiuso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.Boolean)">
      <summary>Scrivere la rappresentazione testuale di un valore <see langword="Boolean" /> nel flusso di testo, seguita da un terminatore di riga.</summary>
      <param name="value">Valore <see langword="Boolean" /> da scrivere.</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.IO.TextWriter" /> è chiuso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.Char)">
      <summary>Scrive un carattere nel flusso di testo, seguito da un terminatore di riga.</summary>
      <param name="value">Carattere da scrivere nel flusso di testo.</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.IO.TextWriter" /> è chiuso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.Char[])">
      <summary>Scrive una matrice di caratteri nel flusso di testo, seguita da un terminatore di riga.</summary>
      <param name="buffer">Matrice di caratteri da cui vengono letti i dati.</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.IO.TextWriter" /> è chiuso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
      <summary>Scrive una sottomatrice di caratteri nel flusso di testo, seguita da un terminatore di riga.</summary>
      <param name="buffer">Matrice di caratteri da cui vengono letti i dati.</param>
      <param name="index">Posizione del carattere in <paramref name="buffer" /> dalla quale avviare la lettura dei dati.</param>
      <param name="count">Numero massimo di caratteri da scrivere.</param>
      <exception cref="T:System.ArgumentException">La lunghezza del buffer meno <paramref name="index" /> è minore di <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> o <paramref name="count" /> è negativo.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.IO.TextWriter" /> è chiuso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.Decimal)">
      <summary>Scrive la rappresentazione testuale di un valore decimale nel flusso di testo, seguita da un terminatore di riga.</summary>
      <param name="value">Valore decimale da scrivere.</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.IO.TextWriter" /> è chiuso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.Double)">
      <summary>Scrive la rappresentazione testuale di un valore a virgola mobile a 8 byte nel flusso di testo, seguita da un terminatore di riga.</summary>
      <param name="value">Valore a virgola mobile a 8 byte da scrivere.</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.IO.TextWriter" /> è chiuso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.Int32)">
      <summary>Scrive la rappresentazione testuale di un intero a 4 byte con segno nel flusso di testo, seguita da un terminatore di riga.</summary>
      <param name="value">Intero a 4 byte con segno da scrivere.</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.IO.TextWriter" /> è chiuso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.Int64)">
      <summary>Scrive la rappresentazione testuale di un intero a 8 byte con segno nel flusso di testo, seguita da un terminatore di riga.</summary>
      <param name="value">Intero a 8 byte con segno da scrivere.</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.IO.TextWriter" /> è chiuso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.Object)">
      <summary>Scrive la rappresentazione testuale di un oggetto nel flusso di testo, chiamando il metodo <see langword="ToString" /> sull'oggetto, seguita da un terminatore di riga.</summary>
      <param name="value">Oggetto da scrivere. Se il parametro <paramref name="value" /> è <see langword="null" />, verrà scritto solo il terminatore di riga.</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.IO.TextWriter" /> è chiuso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.ReadOnlySpan{System.Char})">
      <summary>Scrive nel flusso di testo la rappresentazione testuale di un intervallo di caratteri, seguita da un terminatore di riga.</summary>
      <param name="buffer">Valore dell'intervallo di caratteri da scrivere nel flusso di testo.</param>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.Single)">
      <summary>Scrive la rappresentazione testuale di un valore a virgola mobile a 4 byte nel flusso di testo, seguita da un terminatore di riga.</summary>
      <param name="value">Valore a virgola mobile a 4 byte da scrivere.</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.IO.TextWriter" /> è chiuso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.String)">
      <summary>Scrive una stringa nel flusso di testo, seguita da un terminatore di riga.</summary>
      <param name="value">Stringa da scrivere. Se il parametro <paramref name="value" /> è <see langword="null" />, verrà scritto solo il terminatore di riga.</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.IO.TextWriter" /> è chiuso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
      <summary>Scrive una stringa formattata e una nuova riga nel flusso di testo, usando la stessa semantica del metodo <see cref="M:System.String.Format(System.String,System.Object)" />.</summary>
      <param name="format">Stringa in formato composito.</param>
      <param name="arg0">Oggetto da formattare e scrivere.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.IO.TextWriter" /> è chiuso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> non è una stringa di formato composto valido.  
-oppure- 
L'indice di un elemento di formato è minore di 0 (zero) o maggiore o uguale al numero di oggetti da formattare (che, per questo overload del metodo, è uno).</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
      <summary>Scrive una stringa formattata e una nuova riga nel flusso di testo, usando la stessa semantica del metodo <see cref="M:System.String.Format(System.String,System.Object,System.Object)" />.</summary>
      <param name="format">Stringa in formato composito.</param>
      <param name="arg0">Primo oggetto da formattare e scrivere.</param>
      <param name="arg1">Secondo oggetto da formattare e scrivere.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.IO.TextWriter" /> è chiuso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> non è una stringa di formato composto valido.  
-oppure- 
L'indice di un elemento di formato è minore di 0 (zero) o maggiore o uguale al numero di oggetti da formattare (che, per questo overload del metodo, è due).</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
      <summary>Scrive una stringa formattata e una nuova riga nel flusso di testo, usando la stessa semantica di <see cref="M:System.String.Format(System.String,System.Object)" />.</summary>
      <param name="format">Stringa in formato composito.</param>
      <param name="arg0">Primo oggetto da formattare e scrivere.</param>
      <param name="arg1">Secondo oggetto da formattare e scrivere.</param>
      <param name="arg2">Terzo oggetto da formattare e scrivere.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.IO.TextWriter" /> è chiuso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> non è una stringa di formato composto valido.  
In alternativa 
L'indice di un elemento di formato è minore di 0 (zero) o maggiore o uguale al numero di oggetti da formattare (che, per questo overload del metodo, è tre).</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
      <summary>Scrive una stringa formattata e una nuova riga nel flusso di testo, usando la stessa semantica di <see cref="M:System.String.Format(System.String,System.Object)" />.</summary>
      <param name="format">Stringa in formato composito.</param>
      <param name="arg">Matrice di oggetti che contiene zero o più oggetti da formattare e scrivere.</param>
      <exception cref="T:System.ArgumentNullException">Viene passato un oggetto o una stringa come <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.IO.TextWriter" /> è chiuso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> non è una stringa di formato composto valido.  
-oppure- 
L'indice di un elemento di formato è minore di zero oppure maggiore o uguale alla lunghezza della matrice <paramref name="arg" />.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.Text.StringBuilder)">
      <summary>Scrive nel flusso di testo la rappresentazione testuale di un generatore di stringhe, seguita da un terminatore di riga.</summary>
      <param name="value">Stringa, come un generatore di stringhe, da scrivere nel flusso di testo.</param>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.UInt32)">
      <summary>Scrive la rappresentazione testuale di un intero a 4 byte senza segno nel flusso di testo, seguita da un terminatore di riga.</summary>
      <param name="value">Intero a 4 byte senza segno da scrivere.</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.IO.TextWriter" /> è chiuso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.UInt64)">
      <summary>Scrive la rappresentazione testuale di un intero a 8 byte senza segno nel flusso di testo, seguita da un terminatore di riga.</summary>
      <param name="value">Intero a 8 byte senza segno da scrivere.</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.IO.TextWriter" /> è chiuso.</exception>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLineAsync">
      <summary>Scrive in modo asincrono un terminatore di riga nel flusso di testo.</summary>
      <returns>Attività che rappresenta l'operazione di scrittura asincrona.</returns>
      <exception cref="T:System.ObjectDisposedException">Il writer di testo viene eliminato.</exception>
      <exception cref="T:System.InvalidOperationException">Il writer di testo è attualmente utilizzato da un'operazione di scrittura precedente.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLineAsync(System.Char)">
      <summary>Scrive un carattere in modo asincrono nel flusso di testo, seguito da un terminatore di riga.</summary>
      <param name="value">Carattere da scrivere nel flusso di testo.</param>
      <returns>Attività che rappresenta l'operazione di scrittura asincrona.</returns>
      <exception cref="T:System.ObjectDisposedException">Il writer di testo viene eliminato.</exception>
      <exception cref="T:System.InvalidOperationException">Il writer di testo è attualmente utilizzato da un'operazione di scrittura precedente.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLineAsync(System.Char[])">
      <summary>Scrive in modo asincrono una matrice di caratteri nel flusso di testo, seguiti da un terminatore di riga.</summary>
      <param name="buffer">Matrice di caratteri da scrivere nel flusso di testo. Se la matrice di caratteri è <see langword="null" />, viene scritto solo il terminatore di riga.</param>
      <returns>Attività che rappresenta l'operazione di scrittura asincrona.</returns>
      <exception cref="T:System.ObjectDisposedException">Il writer di testo viene eliminato.</exception>
      <exception cref="T:System.InvalidOperationException">Il writer di testo è attualmente utilizzato da un'operazione di scrittura precedente.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Scrive in modo asincrono una sottomatrice di caratteri nel flusso di testo, seguiti da un terminatore di riga.</summary>
      <param name="buffer">Matrice di caratteri da cui scrivere i dati.</param>
      <param name="index">Posizione del carattere nel buffer da cui iniziare il recupero dei dati.</param>
      <param name="count">Numero di caratteri da scrivere.</param>
      <returns>Attività che rappresenta l'operazione di scrittura asincrona.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La somma di <paramref name="index" /> e <paramref name="count" /> è maggiore della lunghezza del buffer.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> o <paramref name="count" /> è negativo.</exception>
      <exception cref="T:System.ObjectDisposedException">Il writer di testo viene eliminato.</exception>
      <exception cref="T:System.InvalidOperationException">Il writer di testo è attualmente utilizzato da un'operazione di scrittura precedente.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLineAsync(System.ReadOnlyMemory{System.Char},System.Threading.CancellationToken)">
      <summary>Scrive in modo asincrono la rappresentazione testuale di un'area di memoria dei caratteri nel flusso di testo, seguita da un terminatore di riga.</summary>
      <param name="buffer">Area di memoria dei caratteri da scrivere nel flusso di testo.</param>
      <param name="cancellationToken">Token da monitorare per le richieste di annullamento. Il valore predefinito è <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Attività che rappresenta l'operazione di scrittura asincrona.</returns>
    </member>
    <member name="M:System.IO.TextWriter.WriteLineAsync(System.String)">
      <summary>Scrive una stringa in modo asincrono nel flusso di testo, seguita da un terminatore di riga.</summary>
      <param name="value">Stringa da scrivere. Se il valore è <see langword="null" />, verrà scritto solo il terminatore della riga.</param>
      <returns>Attività che rappresenta l'operazione di scrittura asincrona.</returns>
      <exception cref="T:System.ObjectDisposedException">Il writer di testo viene eliminato.</exception>
      <exception cref="T:System.InvalidOperationException">Il writer di testo è attualmente utilizzato da un'operazione di scrittura precedente.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLineAsync(System.Text.StringBuilder,System.Threading.CancellationToken)">
      <summary>Scrive in modo asincrono nel flusso di testo la rappresentazione testuale di un generatore di stringhe, seguita da un terminatore di riga.</summary>
      <param name="value">Stringa, come un generatore di stringhe, da scrivere nel flusso di testo.</param>
      <param name="cancellationToken">Token da monitorare per le richieste di annullamento. Il valore predefinito è <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Attività che rappresenta l'operazione di scrittura asincrona.</returns>
    </member>
    <member name="T:System.LoaderOptimization">
      <summary>Enumerazione utilizzata con la classe <see cref="T:System.LoaderOptimizationAttribute" /> per specificare le ottimizzazioni del caricatore per un file eseguibile.</summary>
    </member>
    <member name="F:System.LoaderOptimization.DisallowBindings">
      <summary>Ignorato da Common Language Runtime.</summary>
    </member>
    <member name="F:System.LoaderOptimization.DomainMask">
      <summary>Non usare. Questa maschera consente di selezionare i valori relativi ai domini, escludendo il flag <see cref="F:System.LoaderOptimization.DisallowBindings" /> inutilizzato.</summary>
    </member>
    <member name="F:System.LoaderOptimization.MultiDomain">
      <summary>Indica che probabilmente nell'applicazione molti domini utilizzeranno il medesimo codice e che il caricatore dovrà condividere tutte le risorse interne nei domini applicazioni.</summary>
    </member>
    <member name="F:System.LoaderOptimization.MultiDomainHost">
      <summary>Indica che probabilmente nell'applicazione sarà contenuto codice univoco in domini multipli e che il caricatore dovrà condividere le risorse nei domini applicazioni solo per assembly disponibili a livello globale (con nome sicuro) che sono stati aggiunti alla Global Assembly Cache.</summary>
    </member>
    <member name="F:System.LoaderOptimization.NotSpecified">
      <summary>Indica che non vi sono ottimizzazioni specificate per la condivisione delle risorse interne. Verrà utilizzata dal caricatore l'ottimizzazione specificata dal dominio predefinito o dall'interfaccia di hosting, in caso contrario verrà utilizzato <see cref="F:System.LoaderOptimization.SingleDomain" />.</summary>
    </member>
    <member name="F:System.LoaderOptimization.SingleDomain">
      <summary>Indica che probabilmente nell'applicazione vi sarà un unico dominio e che il caricatore non dovrà condividere le risorse interne nei domini applicazioni.</summary>
    </member>
    <member name="T:System.LoaderOptimizationAttribute">
      <summary>Utilizzata per impostare i criteri predefiniti di ottimizzazione del caricamento per il metodo principale di un'applicazione eseguibile.</summary>
    </member>
    <member name="M:System.LoaderOptimizationAttribute.#ctor(System.Byte)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.LoaderOptimizationAttribute" /> sul valore specificato.</summary>
      <param name="value">Valore equivalente a una costante <see cref="T:System.LoaderOptimization" />.</param>
    </member>
    <member name="M:System.LoaderOptimizationAttribute.#ctor(System.LoaderOptimization)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.LoaderOptimizationAttribute" /> sul valore specificato.</summary>
      <param name="value">Costante <see cref="T:System.LoaderOptimization" />.</param>
    </member>
    <member name="P:System.LoaderOptimizationAttribute.Value">
      <summary>Ottiene il valore <see cref="T:System.LoaderOptimization" /> corrente per l'istanza.</summary>
      <returns>Costante <see cref="T:System.LoaderOptimization" />.</returns>
    </member>
    <member name="T:System.Math">
      <summary>Vengono forniti costanti e metodi statici per eseguire funzioni trigonometriche, logaritmiche e normali funzioni matematiche.</summary>
    </member>
    <member name="M:System.Math.Abs(System.Decimal)">
      <summary>Restituisce il valore assoluto di un numero <see cref="T:System.Decimal" />.</summary>
      <param name="value">Numero maggiore o uguale a <see cref="F:System.Decimal.MinValue" />, ma minore o uguale a <see cref="F:System.Decimal.MaxValue" />.</param>
      <returns>Un numero decimale, x, tale che 0 ≤ x ≤<see cref="F:System.Decimal.MaxValue" />.</returns>
    </member>
    <member name="M:System.Math.Abs(System.Double)">
      <summary>Restituisce il valore assoluto di un numero a virgola mobile e precisione doppia.</summary>
      <param name="value">Numero maggiore o uguale a <see cref="F:System.Double.MinValue" />, ma minore o uguale a <see cref="F:System.Double.MaxValue" />.</param>
      <returns>Numero a virgola mobile e precisione doppia, x, tale che 0 ≤ x ≤<see cref="F:System.Double.MaxValue" />.</returns>
    </member>
    <member name="M:System.Math.Abs(System.Int16)">
      <summary>Restituisce il valore assoluto di un intero con segno a 16 bit.</summary>
      <param name="value">Numero maggiore di <see cref="F:System.Int16.MinValue" />, ma minore o uguale a <see cref="F:System.Int16.MaxValue" />.</param>
      <returns>Intero con segno a 16 bit, x, tale che 0 ≤ x ≤<see cref="F:System.Int16.MaxValue" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è uguale a <see cref="F:System.Int16.MinValue" />.</exception>
    </member>
    <member name="M:System.Math.Abs(System.Int32)">
      <summary>Restituisce il valore assoluto di un intero con segno a 32 bit.</summary>
      <param name="value">Numero maggiore di <see cref="F:System.Int32.MinValue" />, ma minore o uguale a <see cref="F:System.Int32.MaxValue" />.</param>
      <returns>Intero con segno a 32 bit, x, tale che 0 ≤ x ≤<see cref="F:System.Int32.MaxValue" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è uguale a <see cref="F:System.Int32.MinValue" />.</exception>
    </member>
    <member name="M:System.Math.Abs(System.Int64)">
      <summary>Restituisce il valore assoluto di un intero con segno a 64 bit.</summary>
      <param name="value">Numero maggiore di <see cref="F:System.Int64.MinValue" />, ma minore o uguale a <see cref="F:System.Int64.MaxValue" />.</param>
      <returns>Intero con segno a 64 bit, x, tale che 0 ≤ x ≤<see cref="F:System.Int64.MaxValue" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è uguale a <see cref="F:System.Int64.MinValue" />.</exception>
    </member>
    <member name="M:System.Math.Abs(System.SByte)">
      <summary>Restituisce il valore assoluto di un intero con segno a 8 bit.</summary>
      <param name="value">Numero maggiore di <see cref="F:System.SByte.MinValue" />, ma minore o uguale a <see cref="F:System.SByte.MaxValue" />.</param>
      <returns>Intero con segno a 8 bit, x, tale che 0 ≤ x ≤<see cref="F:System.SByte.MaxValue" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> è uguale a <see cref="F:System.SByte.MinValue" />.</exception>
    </member>
    <member name="M:System.Math.Abs(System.Single)">
      <summary>Restituisce il valore assoluto di un numero a virgola mobile e precisione singola.</summary>
      <param name="value">Numero maggiore o uguale a <see cref="F:System.Single.MinValue" />, ma minore o uguale a <see cref="F:System.Single.MaxValue" />.</param>
      <returns>Numero a virgola mobile e precisione singola, x, tale che 0 ≤ x ≤<see cref="F:System.Single.MaxValue" />.</returns>
    </member>
    <member name="M:System.Math.Acos(System.Double)">
      <summary>Restituisce l'angolo il cui coseno è il numero specificato.</summary>
      <param name="d">Numero che rappresenta un coseno, dove <paramref name="d" /> deve essere maggiore o uguale a -1, ma minore o uguale a 1.</param>
      <returns>Un angolo, θ, misurato in radianti, tale che 0 ≤θ≤π 
In alternativa 
 <see cref="F:System.Double.NaN" /> se <paramref name="d" /> &lt; -1 o <paramref name="d" /> &gt; 1 o <paramref name="d" /> è uguale a <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="M:System.Math.Acosh(System.Double)">
      <summary>Restituisce l'angolo il cui coseno iperbolico è il numero specificato.</summary>
      <param name="d">Numero che rappresenta un coseno iperbolico, dove <paramref name="d" /> deve essere maggiore o uguale a 1, ma minore o uguale a <see cref="F:System.Double.PositiveInfinity" />.</param>
      <returns>Un angolo, θ, misurato in radianti, tale che 0 ≤ θ ≤ ∞.  
In alternativa 
 <see cref="F:System.Double.NaN" /> se <paramref name="d" /> &lt; 1 o <paramref name="d" /> è uguale a <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="M:System.Math.Asin(System.Double)">
      <summary>Restituisce l'angolo il cui seno è il numero specificato.</summary>
      <param name="d">Numero che rappresenta un seno, dove <paramref name="d" /> deve essere maggiore o uguale a -1, ma minore o uguale a 1.</param>
      <returns>Un angolo, θ, misurato in radianti, tale che -π/2 ≤θ≤π/2 
-oppure- 
 <see cref="F:System.Double.NaN" /> se <paramref name="d" /> &lt; -1 o <paramref name="d" /> &gt; 1 o <paramref name="d" /> è uguale a <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="M:System.Math.Asinh(System.Double)">
      <summary>Restituisce l'angolo il cui seno iperbolico è il numero specificato.</summary>
      <param name="d">Numero che rappresenta un seno iperbolico, dove <paramref name="d" /> deve essere maggiore o uguale a <see cref="F:System.Double.NegativeInfinity" />, ma minore o uguale a <see cref="F:System.Double.PositiveInfinity" />.</param>
      <returns>Un angolo, θ, misurato in radianti, tale che -∞ &lt; θ ≤ -1 o 1 ≤ θ &lt; ∞. 
-oppure- 
 <see cref="F:System.Double.NaN" /> se <paramref name="d" /> è uguale a <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="M:System.Math.Atan(System.Double)">
      <summary>Restituisce l'angolo la cui tangente è il numero specificato.</summary>
      <param name="d">Numero che rappresenta una tangente.</param>
      <returns>Un angolo, θ, misurato in radianti, tale che -π/2 ≤θ≤π/2.  
-oppure- 
 <see cref="F:System.Double.NaN" /> se <paramref name="d" /> è uguale a <see cref="F:System.Double.NaN" />, -π/2 arrotondato al valore a precisione doppia (-1,5707963267949) se <paramref name="d" /> è uguale a <see cref="F:System.Double.NegativeInfinity" /> o π/2 arrotondato al valore a precisione doppia (1,5707963267949) se <paramref name="d" /> è uguale a <see cref="F:System.Double.PositiveInfinity" />.</returns>
    </member>
    <member name="M:System.Math.Atan2(System.Double,System.Double)">
      <summary>Restituisce l'angolo la cui tangente è il quoziente di due numeri specificati.</summary>
      <param name="y">Coordinata y di un punto.</param>
      <param name="x">Coordinata x di un punto.</param>
      <returns>Un angolo, θ, misurato in radianti, tale che -π≤θ≤π, e tan(θ) = <paramref name="y" /> / <paramref name="x" />, dove (<paramref name="x" />, <paramref name="y" />) è un punto nel piano cartesiano. Osservare quanto segue: 

Per (<paramref name="x" />, <paramref name="y" />) nel quadrante 1, 0 &lt; θ &lt; π/2.  

Per (<paramref name="x" />, <paramref name="y" />) nel quadrante 2, π/2 &lt; θ≤π.  

Per (<paramref name="x" />, <paramref name="y" />) nel quadrante 3, -π &lt; θ &lt; -π/2.  

Per (<paramref name="x" />, <paramref name="y" />) nel quadrante 4, -π/2 &lt; θ &lt; 0.  


Per i punti sui limiti dei quadranti, il valore restituito è il seguente: 

Se y è 0 e x non è negativo, θ = 0.  

Se y è 0 e x è negativo, θ = π.  

Se y è positivo e x è 0, θ = π/2.  

Se y è negativo e x è 0, θ = -π/2.  

Se y è 0 e x è 0, θ = 0.  


Se <paramref name="x" /> o <paramref name="y" /> è <see cref="F:System.Double.NaN" /> o se <paramref name="x" /> e <paramref name="y" /> sono <see cref="F:System.Double.PositiveInfinity" /> o <see cref="F:System.Double.NegativeInfinity" />, il metodo restituisce <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="M:System.Math.Atanh(System.Double)">
      <summary>Restituisce l'angolo la cui tangente iperbolica è il numero specificato.</summary>
      <param name="d">Numero che rappresenta una tangente iperbolica, dove <paramref name="d" /> deve essere maggiore o uguale a -1, ma minore o uguale a 1.</param>
      <returns>Un angolo, θ, misurato in radianti, tale che -∞ &lt; θ &lt;-1 o 1 &lt; θ &lt; ∞. 
-oppure- 
 <see cref="F:System.Double.NaN" /> se <paramref name="d" /> &lt; -1 o <paramref name="d" /> &gt; 1 o <paramref name="d" /> è uguale a <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="M:System.Math.BigMul(System.Int32,System.Int32)">
      <summary>Restituisce il prodotto completo di due numeri a 32 bit.</summary>
      <param name="a">Primo numero da moltiplicare.</param>
      <param name="b">Secondo numero da moltiplicare.</param>
      <returns>Numero contenente il prodotto dei numeri specificati.</returns>
    </member>
    <member name="M:System.Math.BitDecrement(System.Double)">
      <summary>Restituisce il successivo valore più piccolo che risulta minore di <paramref name="x" />.</summary>
      <param name="x">Il valore da decrementare.</param>
      <returns>Il successivo valore più piccolo che risulta minore di <paramref name="x" />.  
-oppure- 
 <see cref="F:System.Double.NegativeInfinity" /> se <paramref name="x" /> è uguale a <see cref="F:System.Double.NegativeInfinity" />.
-oppure- 
 <see cref="F:System.Double.NaN" /> se <paramref name="x" /> è uguale a <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="M:System.Math.BitIncrement(System.Double)">
      <summary>Restituisce il successivo valore più grande che risulta maggiore di <paramref name="x" />.</summary>
      <param name="x">Valore da incrementare.</param>
      <returns>Il successivo valore più grande che risulta maggiore di <paramref name="x" />.  
-oppure- 
 <see cref="F:System.Double.PositiveInfinity" /> se <paramref name="x" /> è uguale a <see cref="F:System.Double.PositiveInfinity" />.
In alternativa 
 <see cref="F:System.Double.NaN" /> se <paramref name="x" /> è uguale a <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="M:System.Math.Cbrt(System.Double)">
      <summary>Restituisce la radice cubica di un numero specificato.</summary>
      <param name="d">Numero di cui è necessario trovare la radice cubica.</param>
      <returns>La radice cubica di <paramref name="d" />.  
In alternativa 
 <see cref="F:System.Double.NaN" /> se <paramref name="x" /> è uguale a <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="M:System.Math.Ceiling(System.Decimal)">
      <summary>Restituisce il valore integrale minimo maggiore o uguale al numero decimale specificato.</summary>
      <param name="d">Numero decimale.</param>
      <returns>Valore intero minimo maggiore o uguale a <paramref name="d" />. Si noti che questo metodo restituisce <see cref="T:System.Decimal" /> anziché un tipo integrale.</returns>
    </member>
    <member name="M:System.Math.Ceiling(System.Double)">
      <summary>Restituisce il valore integrale minimo maggiore del o uguale al numero a virgola mobile e con precisione doppia specificato.</summary>
      <param name="a">Numero a virgola mobile a precisione doppia.</param>
      <returns>Valore intero minimo maggiore o uguale a <paramref name="a" />. Se <paramref name="a" /> è uguale a <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" /> o <see cref="F:System.Double.PositiveInfinity" />, verrà restituito tale valore. Si noti che questo metodo restituisce <see cref="T:System.Double" /> anziché un tipo integrale.</returns>
    </member>
    <member name="M:System.Math.Clamp(System.Byte,System.Byte,System.Byte)">
      <summary>Restituisce il valore <paramref name="value" /> fissato all'intervallo inclusivo di <paramref name="min" /> e <paramref name="max" />.</summary>
      <param name="value">Il valore da fissare.</param>
      <param name="min">Il limite inferiore del risultato.</param>
      <param name="max">Il limite superiore del risultato.</param>
      <returns>
        <paramref name="value" /> se <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.  
-oppure- 
 <paramref name="min" /> se <paramref name="value" /> &lt; <paramref name="min" />.
-oppure- 
 <paramref name="max" /> se <paramref name="max" /> &lt; <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Math.Clamp(System.Decimal,System.Decimal,System.Decimal)">
      <summary>Restituisce il valore <paramref name="value" /> fissato all'intervallo inclusivo di <paramref name="min" /> e <paramref name="max" />.</summary>
      <param name="value">Il valore da fissare.</param>
      <param name="min">Il limite inferiore del risultato.</param>
      <param name="max">Il limite superiore del risultato.</param>
      <returns>
        <paramref name="value" /> se <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.
-oppure- 
 <paramref name="min" /> se <paramref name="value" /> &lt;<paramref name="min" />.
-oppure- 
 <paramref name="max" /> se <paramref name="max" /> &lt; <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Math.Clamp(System.Double,System.Double,System.Double)">
      <summary>Restituisce il valore <paramref name="value" /> fissato all'intervallo inclusivo di <paramref name="min" /> e <paramref name="max" />.</summary>
      <param name="value">Il valore da fissare.</param>
      <param name="min">Il limite inferiore del risultato.</param>
      <param name="max">Il limite superiore del risultato.</param>
      <returns>
        <paramref name="value" /> se <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.
In alternativa 
 <paramref name="min" /> se <paramref name="value" /> &lt; <paramref name="min" />.
-oppure- 
 <paramref name="max" /> se <paramref name="max" /> &lt; <paramref name="value" />.`` 
-oppure- 
  <see cref="F:System.Double.NaN" /> se <paramref name="value" /> è uguale a <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="M:System.Math.Clamp(System.Int16,System.Int16,System.Int16)">
      <summary>Restituisce il valore <paramref name="value" /> fissato all'intervallo inclusivo di <paramref name="min" /> e <paramref name="max" />.</summary>
      <param name="value">Il valore da fissare.</param>
      <param name="min">Il limite inferiore del risultato.</param>
      <param name="max">Il limite superiore del risultato.</param>
      <returns>
        <paramref name="value" /> se <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.
-oppure- 
 <paramref name="min" /> se <paramref name="value" /> &lt; <paramref name="min" />.
In alternativa 
 <paramref name="max" /> se <paramref name="max" /> &lt; <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Math.Clamp(System.Int32,System.Int32,System.Int32)">
      <summary>Restituisce il valore <paramref name="value" /> fissato all'intervallo inclusivo di <paramref name="min" /> e <paramref name="max" />.</summary>
      <param name="value">Il valore da fissare.</param>
      <param name="min">Il limite inferiore del risultato.</param>
      <param name="max">Il limite superiore del risultato.</param>
      <returns>
        <paramref name="value" /> se <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.
In alternativa 
 <paramref name="min" /> se <paramref name="value" /> &lt; <paramref name="min" />.
In alternativa 
 <paramref name="max" /> se <paramref name="max" /> &lt; <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Math.Clamp(System.Int64,System.Int64,System.Int64)">
      <summary>Restituisce il valore <paramref name="value" /> fissato all'intervallo inclusivo di <paramref name="min" /> e <paramref name="max" />.</summary>
      <param name="value">Il valore da fissare.</param>
      <param name="min">Il limite inferiore del risultato.</param>
      <param name="max">Il limite superiore del risultato.</param>
      <returns>
        <paramref name="value" /> se <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.
-oppure- 
 <paramref name="min" /> se <paramref name="value" /> &lt; <paramref name="min" />.
In alternativa 
 <paramref name="max" /> se <paramref name="max" /> &lt; <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Math.Clamp(System.SByte,System.SByte,System.SByte)">
      <summary>Restituisce il valore <paramref name="value" /> fissato all'intervallo inclusivo di <paramref name="min" /> e <paramref name="max" />.</summary>
      <param name="value">Il valore da fissare.</param>
      <param name="min">Il limite inferiore del risultato.</param>
      <param name="max">Il limite superiore del risultato.</param>
      <returns>
        <paramref name="value" /> se <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.
In alternativa 
 <paramref name="min" /> se <paramref name="value" /> &lt; <paramref name="min" />.
-oppure- 
 <paramref name="max" /> se <paramref name="max" /> &lt; <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Math.Clamp(System.Single,System.Single,System.Single)">
      <summary>Restituisce il valore <paramref name="value" /> fissato all'intervallo inclusivo di <paramref name="min" /> e <paramref name="max" />.</summary>
      <param name="value">Il valore da fissare.</param>
      <param name="min">Il limite inferiore del risultato.</param>
      <param name="max">Il limite superiore del risultato.</param>
      <returns>
        <paramref name="value" /> se <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.  
In alternativa 
 <paramref name="min" /> se <paramref name="value" /> &lt; <paramref name="min" />.
-oppure- 
 <paramref name="max" /> se <paramref name="max" /> &lt; <paramref name="value" />.
-oppure- 
  <see cref="F:System.Single.NaN" /> se <paramref name="value" /> è uguale a <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="M:System.Math.Clamp(System.UInt16,System.UInt16,System.UInt16)">
      <summary>Restituisce il valore <paramref name="value" /> fissato all'intervallo inclusivo di <paramref name="min" /> e <paramref name="max" />.</summary>
      <param name="value">Il valore da fissare.</param>
      <param name="min">Il limite inferiore del risultato.</param>
      <param name="max">Il limite superiore del risultato.</param>
      <returns>
        <paramref name="value" /> se <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.  
-oppure- 
 <paramref name="min" /> se <paramref name="value" /> &lt; <paramref name="min" />.
-oppure- 
 <paramref name="max" /> se <paramref name="max" /> &lt; <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Math.Clamp(System.UInt32,System.UInt32,System.UInt32)">
      <summary>Restituisce il valore <paramref name="value" /> fissato all'intervallo inclusivo di <paramref name="min" /> e <paramref name="max" />.</summary>
      <param name="value">Il valore da fissare.</param>
      <param name="min">Il limite inferiore del risultato.</param>
      <param name="max">Il limite superiore del risultato.</param>
      <returns>
        <paramref name="value" /> se <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.  
-oppure- 
 <paramref name="min" /> se <paramref name="value" /> &lt; <paramref name="min" />.
In alternativa 
 <paramref name="max" /> se <paramref name="max" /> &lt; <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Math.Clamp(System.UInt64,System.UInt64,System.UInt64)">
      <summary>Restituisce il valore <paramref name="value" /> fissato all'intervallo inclusivo di <paramref name="min" /> e <paramref name="max" />.</summary>
      <param name="value">Il valore da fissare.</param>
      <param name="min">Il limite inferiore del risultato.</param>
      <param name="max">Il limite superiore del risultato.</param>
      <returns>
        <paramref name="value" /> se <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.
In alternativa 
 <paramref name="min" /> se <paramref name="value" /> &lt; <paramref name="min" />.
In alternativa 
 <paramref name="max" /> se <paramref name="max" /> &lt; <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Math.CopySign(System.Double,System.Double)">
      <summary>Restituisce un valore con grandezza pari a <paramref name="x" /> e segno <paramref name="y" />.</summary>
      <param name="x">Numero la cui grandezza viene usata nel risultato.</param>
      <param name="y">Numero il cui segno viene usato nel risultato.</param>
      <returns>Valore con grandezza <paramref name="x" /> e segno <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Math.Cos(System.Double)">
      <summary>Restituisce il coseno dell'angolo specificato.</summary>
      <param name="d">Angolo, espresso in radianti.</param>
      <returns>Coseno di <paramref name="d" />. Se <paramref name="d" /> è uguale a <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" /> o <see cref="F:System.Double.PositiveInfinity" />, questo metodo restituisce <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="M:System.Math.Cosh(System.Double)">
      <summary>Restituisce il coseno iperbolico dell'angolo specificato.</summary>
      <param name="value">Angolo, espresso in radianti.</param>
      <returns>Coseno iperbolico di <paramref name="value" />. Se <paramref name="value" /> è uguale a <see cref="F:System.Double.NegativeInfinity" /> o <see cref="F:System.Double.PositiveInfinity" />, verrà restituito <see cref="F:System.Double.PositiveInfinity" />. Se <paramref name="value" /> è uguale a <see cref="F:System.Double.NaN" />, verrà restituito <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="M:System.Math.DivRem(System.Int32,System.Int32,System.Int32@)">
      <summary>Calcola il quoziente di due interi con segno a 32 bit e restituisce il resto come parametro di output.</summary>
      <param name="a">Dividendo.</param>
      <param name="b">Divisore.</param>
      <param name="result">Resto.</param>
      <returns>Quoziente dei numeri specificati.</returns>
      <exception cref="T:System.DivideByZeroException">
        <paramref name="b" /> è zero.</exception>
    </member>
    <member name="M:System.Math.DivRem(System.Int64,System.Int64,System.Int64@)">
      <summary>Calcola il quoziente di due interi con segno a 64 bit e restituisce il resto come parametro di output.</summary>
      <param name="a">Dividendo.</param>
      <param name="b">Divisore.</param>
      <param name="result">Resto.</param>
      <returns>Quoziente dei numeri specificati.</returns>
      <exception cref="T:System.DivideByZeroException">
        <paramref name="b" /> è zero.</exception>
    </member>
    <member name="F:System.Math.E">
      <summary>Rappresenta la base logaritmica naturale, specificata dalla costante, <see langword="e" />.</summary>
    </member>
    <member name="M:System.Math.Exp(System.Double)">
      <summary>Restituisce <see langword="e" /> elevato alla potenza specificata.</summary>
      <param name="d">Numero che specifica una potenza.</param>
      <returns>Numero <see langword="e" /> elevato alla potenza <paramref name="d" />. Se <paramref name="d" /> è uguale a <see cref="F:System.Double.NaN" /> o <see cref="F:System.Double.PositiveInfinity" />, verrà restituito il valore. Se <paramref name="d" /> è uguale a <see cref="F:System.Double.NegativeInfinity" />, verrà restituito 0.</returns>
    </member>
    <member name="M:System.Math.Floor(System.Decimal)">
      <summary>Restituisce il valore integrale massimo minore o uguale al numero decimale specificato.</summary>
      <param name="d">Numero decimale.</param>
      <returns>Valore integrale massimo minore o uguale a <paramref name="d" />.  Si noti che il metodo restituisce un valore intero del tipo <see cref="T:System.Decimal" />.</returns>
    </member>
    <member name="M:System.Math.Floor(System.Double)">
      <summary>Restituisce il valore integrale massimo minore o uguale al numero a virgola mobile a precisione doppia specificato.</summary>
      <param name="d">Numero a virgola mobile a precisione doppia.</param>
      <returns>Valore integrale massimo minore o uguale a <paramref name="d" />. Se <paramref name="d" /> è uguale a <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" /> o <see cref="F:System.Double.PositiveInfinity" />, verrà restituito tale valore.</returns>
    </member>
    <member name="M:System.Math.FusedMultiplyAdd(System.Double,System.Double,System.Double)">
      <summary>Restituisce (x * y) + z, arrotondato come unica operazione ternaria.</summary>
      <param name="x">Il numero da moltiplicare con <paramref name="y" />.</param>
      <param name="y">Il numero da moltiplicare con <paramref name="x" />.</param>
      <param name="z">Il numero da aggiungere al risultato di <paramref name="x" /> moltiplicato per <paramref name="y" />.</param>
      <returns>(x * y) + z, arrotondato come unica operazione ternaria.</returns>
    </member>
    <member name="M:System.Math.IEEERemainder(System.Double,System.Double)">
      <summary>Restituisce il resto della divisione tra il numero specificato e un altro numero specificato.</summary>
      <param name="x">Dividendo.</param>
      <param name="y">Divisore.</param>
      <returns>Un numero uguale a <paramref name="x" /> - (<paramref name="y" /> Q), dove Q è il quoziente di <paramref name="x" /> / <paramref name="y" /> arrotondato all'intero più vicino; se <paramref name="x" /> / <paramref name="y" /> è contenuto tra due interi, verrà restituito l'intero pari.  
Se <paramref name="x" /> - (<paramref name="y" /> Q) è zero, verrà restituito il valore +0 se <paramref name="x" /> è positivo oppure -0 se <paramref name="x" /> è negativo.  
Se <paramref name="y" /> = 0, verrà restituito <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="M:System.Math.ILogB(System.Double)">
      <summary>Restituisce la parte intera del logaritmo in base 2 del numero specificato.</summary>
      <param name="x">Numero di cui è necessario trovare il logaritmo.</param>
      <returns>Uno dei valori della tabella seguente.  
 Parametro <paramref name="x" />. 
  Valore restituito 
  Impostazione predefinita 
  La parte intera del logaritmo in base 2 di <paramref name="x" />; ovvero, (int)log2(<paramref name="x" />).  

  Zero 
 <see cref="F:System.Int32.MinValue" /> Uguale a <see cref="F:System.Double.NaN" /> o <see cref="F:System.Double.PositiveInfinity" /> o <see cref="F:System.Double.NegativeInfinity" /><see cref="F:System.Int32.MaxValue" /></returns>
    </member>
    <member name="M:System.Math.Log(System.Double)">
      <summary>Restituisce il logaritmo naturale (in base <see langword="e" />) di un numero specificato.</summary>
      <param name="d">Numero di cui è necessario trovare il logaritmo.</param>
      <returns>Uno dei valori della tabella seguente.  
 Parametro <paramref name="d" />. 
  Valore restituito 
  Positivo 
  Logaritmo naturale di <paramref name="d" />: ln <paramref name="d" /> o log e <paramref name="d" /> Zero 
 <see cref="F:System.Double.NegativeInfinity" /> Negativo 
 <see cref="F:System.Double.NaN" /> Uguale a <see cref="F:System.Double.NaN" /><see cref="F:System.Double.NaN" /> Uguale a <see cref="F:System.Double.PositiveInfinity" /><see cref="F:System.Double.PositiveInfinity" /></returns>
    </member>
    <member name="M:System.Math.Log(System.Double,System.Double)">
      <summary>Restituisce il logaritmo del numero specificato in una base specificata.</summary>
      <param name="a">Numero di cui è necessario trovare il logaritmo.</param>
      <param name="newBase">Base del logaritmo.</param>
      <returns>Uno dei valori della tabella seguente. (+Infinito indica <see cref="F:System.Double.PositiveInfinity" />, -Infinito indica <see cref="F:System.Double.NegativeInfinity" /> e NaN indica <see cref="F:System.Double.NaN" />). 
 <paramref name="a" /><paramref name="newBase" /> Valore restituito 
 <paramref name="a" />&gt; 0 
  (0 &lt;<paramref name="newBase" />&lt; 1) -o-(<paramref name="newBase" />&gt; 1) 
  lognewBase(a) 
 <paramref name="a" />&lt; 0 
  (qualsiasi valore) 
  NaN 
  (qualsiasi valore) 
 <paramref name="newBase" />&lt; 0 
  NaN 
 <paramref name="a" /> != 1 
 <paramref name="newBase" /> = 0 
  NaN 
 <paramref name="a" /> != 1 
 <paramref name="newBase" /> = +Infinito 
  NaN 
 <paramref name="a" /> = NaN 
  (qualsiasi valore) 
  NaN 
  (qualsiasi valore) 
 <paramref name="newBase" /> = NaN 
  NaN 
  (qualsiasi valore) 
 <paramref name="newBase" /> = 1 
  NaN 
 <paramref name="a" /> = 0 
  0 &lt;<paramref name="newBase" />&lt; 1 
  +Infinito 
 <paramref name="a" /> = 0 
 <paramref name="newBase" />&gt; 1 
  -Infinito 
 <paramref name="a" /> =  +Infinito 
  0 &lt;<paramref name="newBase" />&lt; 1 
  -Infinito 
 <paramref name="a" /> =  +Infinito 
 <paramref name="newBase" />&gt; 1 
  +Infinito 
 <paramref name="a" /> = 1 
 <paramref name="newBase" /> = 0 
  0 
 <paramref name="a" /> = 1 
 <paramref name="newBase" /> = +Infinito 
  0</returns>
    </member>
    <member name="M:System.Math.Log10(System.Double)">
      <summary>Restituisce il logaritmo in base 10 del numero specificato.</summary>
      <param name="d">Numero di cui trovare il logaritmo.</param>
      <returns>Uno dei valori della tabella seguente.  
 Parametro <paramref name="d" />. 
  Valore restituito 
  Positivo 
  Logaritmo in base 10 di <paramref name="d" />: log 10<paramref name="d" />.  

  Zero 
 <see cref="F:System.Double.NegativeInfinity" /> Negativo 
 <see cref="F:System.Double.NaN" /> Uguale a <see cref="F:System.Double.NaN" /><see cref="F:System.Double.NaN" /> Uguale a <see cref="F:System.Double.PositiveInfinity" /><see cref="F:System.Double.PositiveInfinity" /></returns>
    </member>
    <member name="M:System.Math.Log2(System.Double)">
      <summary>Restituisce il logaritmo in base 2 di un numero specificato.</summary>
      <param name="x">Numero di cui trovare il logaritmo.</param>
      <returns>Uno dei valori della tabella seguente.  
 Parametro <paramref name="x" />. 
  Valore restituito 
  Positivo 
  Logaritmo in base 2 di <paramref name="x" />, ovvero log 2<paramref name="x" />.  

  Zero 
 <see cref="F:System.Double.NegativeInfinity" /> Negativo 
 <see cref="F:System.Double.NaN" /> Uguale a <see cref="F:System.Double.NaN" /><see cref="F:System.Double.NaN" /> Uguale a <see cref="F:System.Double.PositiveInfinity" /><see cref="F:System.Double.PositiveInfinity" /></returns>
    </member>
    <member name="M:System.Math.Max(System.Byte,System.Byte)">
      <summary>Restituisce il più elevato tra due interi senza segno a 8 bit.</summary>
      <param name="val1">Primo di due interi senza segno a 8 bit da confrontare.</param>
      <param name="val2">Secondo di due interi senza segno a 8 bit da confrontare.</param>
      <returns>Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il maggiore.</returns>
    </member>
    <member name="M:System.Math.Max(System.Decimal,System.Decimal)">
      <summary>Restituisce il più elevato tra due numeri decimali.</summary>
      <param name="val1">Primo di due numeri decimali da confrontare.</param>
      <param name="val2">Secondo di due numeri decimali da confrontare.</param>
      <returns>Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il maggiore.</returns>
    </member>
    <member name="M:System.Math.Max(System.Double,System.Double)">
      <summary>Restituisce il più elevato tra due numeri a virgola mobile e precisione doppia.</summary>
      <param name="val1">Primo di due numeri a virgola mobile e precisione doppia da confrontare.</param>
      <param name="val2">Secondo di due numeri a virgola mobile e precisione doppia da confrontare.</param>
      <returns>Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il maggiore. Se <paramref name="val1" />, <paramref name="val2" /> o sia <paramref name="val1" /> che <paramref name="val2" /> sono uguali a <see cref="F:System.Double.NaN" />, verrà restituito <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="M:System.Math.Max(System.Int16,System.Int16)">
      <summary>Restituisce il più elevato tra due interi con segno a 16 bit.</summary>
      <param name="val1">Primo di due interi con segno a 16 bit da confrontare.</param>
      <param name="val2">Secondo di due interi con segno a 16 bit da confrontare.</param>
      <returns>Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il maggiore.</returns>
    </member>
    <member name="M:System.Math.Max(System.Int32,System.Int32)">
      <summary>Restituisce il più elevato tra due interi con segno a 32 bit.</summary>
      <param name="val1">Primo di due interi con segno a 32 bit da confrontare.</param>
      <param name="val2">Secondo di due interi con segno a 32 bit da confrontare.</param>
      <returns>Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il maggiore.</returns>
    </member>
    <member name="M:System.Math.Max(System.Int64,System.Int64)">
      <summary>Restituisce il più elevato tra due interi con segno a 64 bit.</summary>
      <param name="val1">Primo di due interi con segno a 64 bit da confrontare.</param>
      <param name="val2">Secondo di due interi con segno a 64 bit da confrontare.</param>
      <returns>Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il maggiore.</returns>
    </member>
    <member name="M:System.Math.Max(System.SByte,System.SByte)">
      <summary>Restituisce il più elevato tra due interi con segno a 8 bit.</summary>
      <param name="val1">Primo di due interi con segno a 8 bit da confrontare.</param>
      <param name="val2">Secondo di due interi con segno a 8 bit da confrontare.</param>
      <returns>Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il maggiore.</returns>
    </member>
    <member name="M:System.Math.Max(System.Single,System.Single)">
      <summary>Restituisce il più elevato tra due numeri a virgola mobile e precisione singola.</summary>
      <param name="val1">Primo di due numeri a virgola mobile e precisione singola da confrontare.</param>
      <param name="val2">Secondo di due numeri a virgola mobile e precisione singola da confrontare.</param>
      <returns>Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il maggiore. Se <paramref name="val1" />, <paramref name="val2" /> o entrambi <paramref name="val1" /> e <paramref name="val2" /> sono uguali a <see cref="F:System.Single.NaN" />, verrà restituito <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="M:System.Math.Max(System.UInt16,System.UInt16)">
      <summary>Restituisce il più elevato tra due interi senza segno a 16 bit.</summary>
      <param name="val1">Primo di due interi senza segno a 16 bit da confrontare.</param>
      <param name="val2">Secondo di due interi senza segno a 16 bit da confrontare.</param>
      <returns>Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il maggiore.</returns>
    </member>
    <member name="M:System.Math.Max(System.UInt32,System.UInt32)">
      <summary>Restituisce il più elevato tra due interi senza segno a 32 bit.</summary>
      <param name="val1">Primo di due interi senza segno a 32 bit da confrontare.</param>
      <param name="val2">Secondo di due interi senza segno a 32 bit da confrontare.</param>
      <returns>Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il maggiore.</returns>
    </member>
    <member name="M:System.Math.Max(System.UInt64,System.UInt64)">
      <summary>Restituisce il più elevato tra due interi senza segno a 64 bit.</summary>
      <param name="val1">Primo di due interi senza segno a 64 bit da confrontare.</param>
      <param name="val2">Secondo di due interi senza segno a 64 bit da confrontare.</param>
      <returns>Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il maggiore.</returns>
    </member>
    <member name="M:System.Math.MaxMagnitude(System.Double,System.Double)">
      <summary>Restituisce la grandezza più elevata tra due numeri a virgola mobile e precisione doppia.</summary>
      <param name="x">Primo di due numeri a virgola mobile e precisione doppia da confrontare.</param>
      <param name="y">Secondo di due numeri a virgola mobile e precisione doppia da confrontare.</param>
      <returns>Parametro <paramref name="x" /> o <paramref name="y" />, a seconda di quale ha la grandezza maggiore. Se <paramref name="x" />, <paramref name="y" /> o entrambi <paramref name="x" /> e <paramref name="y" /> sono uguali a <see cref="F:System.Double.NaN" />, verrà restituito <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="M:System.Math.Min(System.Byte,System.Byte)">
      <summary>Restituisce il meno elevato tra due interi senza segno a 8 bit.</summary>
      <param name="val1">Primo di due interi senza segno a 8 bit da confrontare.</param>
      <param name="val2">Secondo di due interi senza segno a 8 bit da confrontare.</param>
      <returns>Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il minore.</returns>
    </member>
    <member name="M:System.Math.Min(System.Decimal,System.Decimal)">
      <summary>Restituisce il meno elevato tra due numeri decimali.</summary>
      <param name="val1">Primo di due numeri decimali da confrontare.</param>
      <param name="val2">Secondo di due numeri decimali da confrontare.</param>
      <returns>Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il minore.</returns>
    </member>
    <member name="M:System.Math.Min(System.Double,System.Double)">
      <summary>Restituisce il meno elevato tra due numeri a virgola mobile e precisione doppia.</summary>
      <param name="val1">Primo di due numeri a virgola mobile e precisione doppia da confrontare.</param>
      <param name="val2">Secondo di due numeri a virgola mobile e precisione doppia da confrontare.</param>
      <returns>Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il minore. Se <paramref name="val1" />, <paramref name="val2" /> o sia <paramref name="val1" /> che <paramref name="val2" /> sono uguali a <see cref="F:System.Double.NaN" />, verrà restituito <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="M:System.Math.Min(System.Int16,System.Int16)">
      <summary>Restituisce il meno elevato tra due interi con segno a 16 bit.</summary>
      <param name="val1">Primo di due interi con segno a 16 bit da confrontare.</param>
      <param name="val2">Secondo di due interi con segno a 16 bit da confrontare.</param>
      <returns>Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il minore.</returns>
    </member>
    <member name="M:System.Math.Min(System.Int32,System.Int32)">
      <summary>Restituisce il meno elevato tra due interi con segno a 32 bit.</summary>
      <param name="val1">Primo di due interi con segno a 32 bit da confrontare.</param>
      <param name="val2">Secondo di due interi con segno a 32 bit da confrontare.</param>
      <returns>Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il minore.</returns>
    </member>
    <member name="M:System.Math.Min(System.Int64,System.Int64)">
      <summary>Restituisce il meno elevato tra due interi con segno a 64 bit.</summary>
      <param name="val1">Primo di due interi con segno a 64 bit da confrontare.</param>
      <param name="val2">Secondo di due interi con segno a 64 bit da confrontare.</param>
      <returns>Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il minore.</returns>
    </member>
    <member name="M:System.Math.Min(System.SByte,System.SByte)">
      <summary>Restituisce il meno elevato tra due interi con segno a 8 bit.</summary>
      <param name="val1">Primo di due interi con segno a 8 bit da confrontare.</param>
      <param name="val2">Secondo di due interi con segno a 8 bit da confrontare.</param>
      <returns>Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il minore.</returns>
    </member>
    <member name="M:System.Math.Min(System.Single,System.Single)">
      <summary>Restituisce il meno elevato tra due numeri a virgola mobile e precisione singola.</summary>
      <param name="val1">Primo di due numeri a virgola mobile e precisione singola da confrontare.</param>
      <param name="val2">Secondo di due numeri a virgola mobile e precisione singola da confrontare.</param>
      <returns>Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il minore. Se <paramref name="val1" />, <paramref name="val2" /> o sia <paramref name="val1" /> che <paramref name="val2" /> sono uguali a <see cref="F:System.Single.NaN" />, verrà restituito <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="M:System.Math.Min(System.UInt16,System.UInt16)">
      <summary>Restituisce il meno elevato tra due interi senza segno a 16 bit.</summary>
      <param name="val1">Primo di due interi senza segno a 16 bit da confrontare.</param>
      <param name="val2">Secondo di due interi senza segno a 16 bit da confrontare.</param>
      <returns>Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il minore.</returns>
    </member>
    <member name="M:System.Math.Min(System.UInt32,System.UInt32)">
      <summary>Restituisce il meno elevato tra due interi senza segno a 32 bit.</summary>
      <param name="val1">Primo di due interi senza segno a 32 bit da confrontare.</param>
      <param name="val2">Secondo di due interi senza segno a 32 bit da confrontare.</param>
      <returns>Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il minore.</returns>
    </member>
    <member name="M:System.Math.Min(System.UInt64,System.UInt64)">
      <summary>Restituisce il meno elevato tra due interi senza segno a 64 bit.</summary>
      <param name="val1">Primo di due interi senza segno a 64 bit da confrontare.</param>
      <param name="val2">Secondo di due interi senza segno a 64 bit da confrontare.</param>
      <returns>Parametro <paramref name="val1" /> o <paramref name="val2" />, qualunque sia il minore.</returns>
    </member>
    <member name="M:System.Math.MinMagnitude(System.Double,System.Double)">
      <summary>Restituisce la grandezza meno elevata tra due numeri a virgola mobile e precisione doppia.</summary>
      <param name="x">Primo di due numeri a virgola mobile e precisione doppia da confrontare.</param>
      <param name="y">Secondo di due numeri a virgola mobile e precisione doppia da confrontare.</param>
      <returns>Parametro <paramref name="x" /> o <paramref name="y" />, a seconda di quale ha la grandezza minore. Se <paramref name="x" />, <paramref name="y" /> o entrambi <paramref name="x" /> e <paramref name="y" /> sono uguali a <see cref="F:System.Double.NaN" />, verrà restituito <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="F:System.Math.PI">
      <summary>Rappresenta il rapporto tra la circonferenza del cerchio e il relativo diametro, specificato dalla costante π.</summary>
    </member>
    <member name="M:System.Math.Pow(System.Double,System.Double)">
      <summary>Restituisce il numero specificato elevato alla potenza specificata.</summary>
      <param name="x">Numero a virgola mobile e precisione doppia da elevare a potenza.</param>
      <param name="y">Numero a virgola mobile a precisione doppia che specifica una potenza.</param>
      <returns>Numero <paramref name="x" /> elevato alla potenza <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Math.Round(System.Decimal)">
      <summary>Arrotonda un valore decimale al valore integrale più vicino e arrotonda i valori che si trovano a metà tra due numeri al numero pari più vicino.</summary>
      <param name="d">Numero decimale da arrotondare.</param>
      <returns>Intero più vicino al parametro <paramref name="d" />. Se il componente frazionario di <paramref name="d" /> è a metà fra due interi, uno pari e uno dispari, viene restituito il numero pari. Si noti che questo metodo restituisce <see cref="T:System.Decimal" /> anziché un tipo integrale.</returns>
      <exception cref="T:System.OverflowException">Il risultato non è compreso nell'intervallo di un oggetto <see cref="T:System.Decimal" />.</exception>
    </member>
    <member name="M:System.Math.Round(System.Decimal,System.Int32)">
      <summary>Arrotonda un valore decimale del numero di cifre frazionarie specificato e arrotonda i valori che si trovano a metà tra due numeri al numero pari più vicino.</summary>
      <param name="d">Numero decimale da arrotondare.</param>
      <param name="decimals">Numero di posizioni decimali nel valore restituito.</param>
      <returns>Numero più vicino a <paramref name="d" /> contenente un numero di cifre frazionarie pari a <paramref name="decimals" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="decimals" /> è minore di 0 o maggiore di 28.</exception>
      <exception cref="T:System.OverflowException">Il risultato non è compreso nell'intervallo di un oggetto <see cref="T:System.Decimal" />.</exception>
    </member>
    <member name="M:System.Math.Round(System.Decimal,System.Int32,System.MidpointRounding)">
      <summary>Arrotonda un valore decimale del numero di cifre frazionarie specificato e usa la convenzione di arrotondamento specificata per i valori che si trovano a metà tra due numeri.</summary>
      <param name="d">Numero decimale da arrotondare.</param>
      <param name="decimals">Numero di posizioni decimali nel valore restituito.</param>
      <param name="mode">Spiegazione della modalità di arrotondamento di <paramref name="d" /> se si trova a metà tra due numeri.</param>
      <returns>Numero più vicino a <paramref name="d" /> contenente un numero di cifre frazionarie pari a <paramref name="decimals" />. Se <paramref name="d" /> ha meno cifre frazionarie di <paramref name="decimals" />, <paramref name="d" /> viene restituito invariato.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="decimals" /> è minore di 0 o maggiore di 28.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="mode" /> non è un valore valido di <see cref="T:System.MidpointRounding" />.</exception>
      <exception cref="T:System.OverflowException">Il risultato non è compreso nell'intervallo di un oggetto <see cref="T:System.Decimal" />.</exception>
    </member>
    <member name="M:System.Math.Round(System.Decimal,System.MidpointRounding)">
      <summary>Arrotonda un valore decimale all'intero più vicino e usa la convenzione di arrotondamento specificata per i valori che si trovano a metà tra due numeri.</summary>
      <param name="d">Numero decimale da arrotondare.</param>
      <param name="mode">Spiegazione della modalità di arrotondamento di <paramref name="d" /> se si trova a metà tra due numeri.</param>
      <returns>Il <paramref name="d" /> più vicino all'intero. Se <paramref name="d" /> è contenuto tra due numeri, di cui per definizione uno è pari e l'altro dispari, <paramref name="mode" /> determina quale dei due numeri deve essere restituito. Si noti che questo metodo restituisce <see cref="T:System.Decimal" /> anziché un tipo integrale.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="mode" /> non è un valore valido di <see cref="T:System.MidpointRounding" />.</exception>
      <exception cref="T:System.OverflowException">Il risultato non è compreso nell'intervallo di un oggetto <see cref="T:System.Decimal" />.</exception>
    </member>
    <member name="M:System.Math.Round(System.Double)">
      <summary>Arrotonda un valore a virgola mobile e precisione doppia al valore integrale più vicino e arrotonda i valori che si trovano a metà tra due numeri al numero pari più vicino.</summary>
      <param name="a">Numero a virgola mobile e precisione doppia da arrotondare.</param>
      <returns>Il <paramref name="a" /> più vicino all'intero. Se il componente frazionario di <paramref name="a" /> è compreso tra due interi, di cui uno è pari e l'altro dispari, allora viene restituito il numero pari. Si noti che questo metodo restituisce <see cref="T:System.Double" /> anziché un tipo integrale.</returns>
    </member>
    <member name="M:System.Math.Round(System.Double,System.Int32)">
      <summary>Arrotonda un valore a virgola mobile e precisione doppia del numero di cifre frazionarie specificato e arrotonda i valori che si trovano a metà tra due numeri al numero pari più vicino.</summary>
      <param name="value">Numero a virgola mobile e precisione doppia da arrotondare.</param>
      <param name="digits">Numero di cifre frazionarie nel valore restituito.</param>
      <returns>Numero più vicino a <paramref name="value" /> contenente un numero di cifre frazionarie pari a <paramref name="digits" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="digits" /> è minore di 0 o maggiore di 15.</exception>
    </member>
    <member name="M:System.Math.Round(System.Double,System.Int32,System.MidpointRounding)">
      <summary>Arrotonda un valore a virgola mobile e precisione doppia del numero di cifre frazionarie specificato e usa la convenzione di arrotondamento specificata per i valori che si trovano a metà tra due numeri.</summary>
      <param name="value">Numero a virgola mobile e precisione doppia da arrotondare.</param>
      <param name="digits">Numero di cifre frazionarie nel valore restituito.</param>
      <param name="mode">Spiegazione della modalità di arrotondamento di <paramref name="value" /> se si trova a metà tra due numeri.</param>
      <returns>Numero più vicino a <paramref name="value" /> contenente un numero di cifre frazionarie pari a <paramref name="digits" />. Se <paramref name="value" /> ha meno cifre frazionarie di <paramref name="digits" />, <paramref name="value" /> viene restituito invariato.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="digits" /> è minore di 0 o maggiore di 15.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="mode" /> non è un valore valido di <see cref="T:System.MidpointRounding" />.</exception>
    </member>
    <member name="M:System.Math.Round(System.Double,System.MidpointRounding)">
      <summary>Arrotonda un valore a virgola mobile e precisione doppia all'intero più vicino e usa la convenzione di arrotondamento specificata per i valori che si trovano a metà tra due numeri.</summary>
      <param name="value">Numero a virgola mobile e precisione doppia da arrotondare.</param>
      <param name="mode">Spiegazione della modalità di arrotondamento di <paramref name="value" /> se si trova a metà tra due numeri.</param>
      <returns>Il <paramref name="value" /> più vicino all'intero. Se <paramref name="value" /> è contenuto tra due interi, di cui per definizione uno è pari e l'altro dispari, <paramref name="mode" /> determina quale dei due numeri deve essere restituito. Si noti che questo metodo restituisce <see cref="T:System.Double" /> anziché un tipo integrale.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="mode" /> non è un valore valido di <see cref="T:System.MidpointRounding" />.</exception>
    </member>
    <member name="M:System.Math.ScaleB(System.Double,System.Int32)">
      <summary>Restituisce x * 2^n calcolato in modo efficiente.</summary>
      <param name="x">Numero a virgola mobile e precisione singola che specifica il valore della base.</param>
      <param name="n">Numero a virgola mobile e precisione singola che specifica la potenza.</param>
      <returns>x * 2^n calcolato in modo efficiente.</returns>
    </member>
    <member name="M:System.Math.Sign(System.Decimal)">
      <summary>Restituisce un intero che indica il segno di un numero decimale.</summary>
      <param name="value">Numero decimale con segno.</param>
      <returns>Numero che indica il segno di <paramref name="value" />, come illustrato nella tabella seguente.  
  Valore restituito 
  Significato 
  -1 
 <paramref name="value" /> è minore di zero.  

  0 
 <paramref name="value" /> è uguale a zero.  

  1 
 <paramref name="value" /> è maggiore di zero.</returns>
    </member>
    <member name="M:System.Math.Sign(System.Double)">
      <summary>Restituisce un intero che indica il segno di un numero a virgola mobile e a precisione doppia.</summary>
      <param name="value">Numero con segno.</param>
      <returns>Numero che indica il segno di <paramref name="value" />, come illustrato nella tabella seguente.  
  Valore restituito 
  Significato 
  -1 
 <paramref name="value" /> è minore di zero.  

  0 
 <paramref name="value" /> è uguale a zero.  

  1 
 <paramref name="value" /> è maggiore di zero.</returns>
      <exception cref="T:System.ArithmeticException">
        <paramref name="value" /> è uguale a <see cref="F:System.Double.NaN" />.</exception>
    </member>
    <member name="M:System.Math.Sign(System.Int16)">
      <summary>Restituisce un intero che indica il segno di un intero con firma a 16 bit.</summary>
      <param name="value">Numero con segno.</param>
      <returns>Numero che indica il segno di <paramref name="value" />, come illustrato nella tabella seguente.  
  Valore restituito 
  Significato 
  -1 
 <paramref name="value" /> è minore di zero.  

  0 
 <paramref name="value" /> è uguale a zero.  

  1 
 <paramref name="value" /> è maggiore di zero.</returns>
    </member>
    <member name="M:System.Math.Sign(System.Int32)">
      <summary>Restituisce un intero che indica il segno di un intero con segno a 32 bit.</summary>
      <param name="value">Numero con segno.</param>
      <returns>Numero che indica il segno di <paramref name="value" />, come illustrato nella tabella seguente.  
  Valore restituito 
  Significato 
  -1 
 <paramref name="value" /> è minore di zero.  

  0 
 <paramref name="value" /> è uguale a zero.  

  1 
 <paramref name="value" /> è maggiore di zero.</returns>
    </member>
    <member name="M:System.Math.Sign(System.Int64)">
      <summary>Restituisce un intero che indica il segno di un intero con segno a 64 bit.</summary>
      <param name="value">Numero con segno.</param>
      <returns>Numero che indica il segno di <paramref name="value" />, come illustrato nella tabella seguente.  
  Valore restituito 
  Significato 
  -1 
 <paramref name="value" /> è minore di zero.  

  0 
 <paramref name="value" /> è uguale a zero.  

  1 
 <paramref name="value" /> è maggiore di zero.</returns>
    </member>
    <member name="M:System.Math.Sign(System.SByte)">
      <summary>Restituisce un intero che indica il segno di un intero con segno a 8 bit.</summary>
      <param name="value">Numero con segno.</param>
      <returns>Numero che indica il segno di <paramref name="value" />, come illustrato nella tabella seguente.  
  Valore restituito 
  Significato 
  -1 
 <paramref name="value" /> è minore di zero.  

  0 
 <paramref name="value" /> è uguale a zero.  

  1 
 <paramref name="value" /> è maggiore di zero.</returns>
    </member>
    <member name="M:System.Math.Sign(System.Single)">
      <summary>Restituisce un intero che indica il segno di un numero a virgola mobile e a precisione singola.</summary>
      <param name="value">Numero con segno.</param>
      <returns>Numero che indica il segno di <paramref name="value" />, come illustrato nella tabella seguente.  
  Valore restituito 
  Significato 
  -1 
 <paramref name="value" /> è minore di zero.  

  0 
 <paramref name="value" /> è uguale a zero.  

  1 
 <paramref name="value" /> è maggiore di zero.</returns>
      <exception cref="T:System.ArithmeticException">
        <paramref name="value" /> è uguale a <see cref="F:System.Single.NaN" />.</exception>
    </member>
    <member name="M:System.Math.Sin(System.Double)">
      <summary>Restituisce il seno dell'angolo specificato.</summary>
      <param name="a">Angolo, espresso in radianti.</param>
      <returns>Seno di <paramref name="a" />. Se <paramref name="a" /> è uguale a <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" /> o <see cref="F:System.Double.PositiveInfinity" />, questo metodo restituisce <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="M:System.Math.Sinh(System.Double)">
      <summary>Restituisce il seno iperbolico dell'angolo specificato.</summary>
      <param name="value">Angolo, espresso in radianti.</param>
      <returns>Seno iperbolico di <paramref name="value" />. Se <paramref name="value" /> è uguale a <see cref="F:System.Double.NegativeInfinity" />, <see cref="F:System.Double.PositiveInfinity" /> o <see cref="F:System.Double.NaN" />, verrà restituito dal metodo un oggetto <see cref="T:System.Double" /> uguale a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Math.Sqrt(System.Double)">
      <summary>Restituisce la radice quadrata del numero specificato.</summary>
      <param name="d">Numero di cui è necessario trovare la radice quadrata.</param>
      <returns>Uno dei valori della tabella seguente.  
 Parametro <paramref name="d" />. 
  Valore restituito 
  Zero o positivo 
  Radice quadrata positiva di <paramref name="d" />.  

  Negativo 
 <see cref="F:System.Double.NaN" /> Uguale a <see cref="F:System.Double.NaN" />.<see cref="F:System.Double.NaN" /> Uguale a <see cref="F:System.Double.PositiveInfinity" />.<see cref="F:System.Double.PositiveInfinity" /></returns>
    </member>
    <member name="M:System.Math.Tan(System.Double)">
      <summary>Restituisce la tangente dell'angolo specificato.</summary>
      <param name="a">Angolo, espresso in radianti.</param>
      <returns>Tangente di <paramref name="a" />. Se <paramref name="a" /> è uguale a <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" /> o <see cref="F:System.Double.PositiveInfinity" />, questo metodo restituisce <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="M:System.Math.Tanh(System.Double)">
      <summary>Restituisce la tangente iperbolica dell'angolo specificato.</summary>
      <param name="value">Angolo, espresso in radianti.</param>
      <returns>Tangente iperbolica di <paramref name="value" />. Se <paramref name="value" /> è uguale a <see cref="F:System.Double.NegativeInfinity" />, il metodo restituirà -1. Se il valore è uguale a <see cref="F:System.Double.PositiveInfinity" />, questo metodo restituirà 1. Se <paramref name="value" /> è uguale a <see cref="F:System.Double.NaN" />, questo metodo restituisce <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="M:System.Math.Truncate(System.Decimal)">
      <summary>Calcola la parte integrale di un numero decimale specificato.</summary>
      <param name="d">Numero da troncare.</param>
      <returns>Parte integrale di <paramref name="d" />, vale a dire il numero che rimane dopo l'eliminazione delle cifre frazionarie.</returns>
    </member>
    <member name="M:System.Math.Truncate(System.Double)">
      <summary>Calcola la parte integrale di un numero a virgola mobile e precisione doppia specificato.</summary>
      <param name="d">Numero da troncare.</param>
      <returns>La parte integrale di <paramref name="d" />, vale a dire il numero che rimane dopo l'eliminazione delle cifre frazionarie o uno dei valori elencati nella seguente tabella.  
 <paramref name="d" /> Valore restituito 
 <see cref="F:System.Double.NaN" /><see cref="F:System.Double.NaN" /><see cref="F:System.Double.NegativeInfinity" /><see cref="F:System.Double.NegativeInfinity" /><see cref="F:System.Double.PositiveInfinity" /><see cref="F:System.Double.PositiveInfinity" /></returns>
    </member>
    <member name="T:System.MathF">
      <summary>Vengono forniti costanti e metodi statici per eseguire funzioni trigonometriche, logaritmiche e normali funzioni matematiche.</summary>
    </member>
    <member name="M:System.MathF.Abs(System.Single)">
      <summary>Restituisce il valore assoluto di un numero a virgola mobile e precisione singola.</summary>
      <param name="x">Numero maggiore o uguale a <see cref="F:System.Single.MinValue" />, ma minore o uguale a <see cref="F:System.Single.MaxValue" />.</param>
      <returns>Numero a virgola mobile e precisione singola, x, tale che 0 ≤ x ≤ <see cref="F:System.Single.MaxValue" />.</returns>
    </member>
    <member name="M:System.MathF.Acos(System.Single)">
      <summary>Restituisce l'angolo il cui coseno è il numero specificato.</summary>
      <param name="x">Numero che rappresenta un coseno, dove <paramref name="x" /> deve essere maggiore o uguale a -1, ma minore o uguale a 1.</param>
      <returns>Un angolo, θ, misurato in radianti, tale che 0 ≤ θ ≤ π.
-oppure- 
 <see cref="F:System.Single.NaN" /> se <paramref name="x" /> &lt; -1 o <paramref name="x" /> &gt; 1 o <paramref name="x" /> è uguale a <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="M:System.MathF.Acosh(System.Single)">
      <summary>Restituisce l'angolo il cui coseno iperbolico è il numero specificato.</summary>
      <param name="x">Numero che rappresenta un coseno iperbolico, dove <paramref name="x" /> deve essere maggiore o uguale a 1, ma minore o uguale a <see cref="F:System.Single.PositiveInfinity" />.</param>
      <returns>Un angolo, θ, misurato in radianti, tale che 0 ≤ θ ≤ ∞.
-oppure- 
 <see cref="F:System.Single.NaN" /> se <paramref name="x" /> &lt; 1 o <paramref name="x" /> è uguale a <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="M:System.MathF.Asin(System.Single)">
      <summary>Restituisce l'angolo il cui seno è il numero specificato.</summary>
      <param name="x">Numero che rappresenta un seno, dove <paramref name="x" /> deve essere maggiore o uguale a -1, ma minore o uguale a 1.</param>
      <returns>Un angolo, θ, misurato in radianti, tale che -π/2 ≤ θ ≤ π/2.
-oppure- 
 <see cref="F:System.Single.NaN" /> se <paramref name="x" /> &lt; -1 o <paramref name="x" /> &gt; 1 o <paramref name="x" /> è uguale a <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="M:System.MathF.Asinh(System.Single)">
      <summary>Restituisce l'angolo il cui seno iperbolico è il numero specificato.</summary>
      <param name="x">Numero che rappresenta un seno iperbolico, dove <paramref name="x" /> deve essere maggiore o uguale a <see cref="F:System.Single.NegativeInfinity" />, ma minore o uguale a <see cref="F:System.Single.PositiveInfinity" />.</param>
      <returns>Un angolo, θ, misurato in radianti, tale che -∞ &lt; θ ≤ -1 o 1 ≤ θ &lt; ∞. 
-oppure- 
 <see cref="F:System.Single.NaN" /> se <paramref name="x" /> è uguale a <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="M:System.MathF.Atan(System.Single)">
      <summary>Restituisce l'angolo la cui tangente è il numero specificato.</summary>
      <param name="x">Numero che rappresenta una tangente.</param>
      <returns>Un angolo, θ, misurato in radianti, tale che -π/2 ≤ θ ≤ π/2.  
-oppure- 
 <see cref="F:System.Single.NaN" /> se <paramref name="x" /> è uguale a <see cref="F:System.Single.NaN" />, -π/2 arrotondato al valore a precisione doppia (-1,5707963267949) se <paramref name="x" /> è uguale a <see cref="F:System.Single.NegativeInfinity" /> o π/2 arrotondato al valore a precisione doppia (1,5707963267949) se <paramref name="x" /> è uguale a <see cref="F:System.Single.PositiveInfinity" />.</returns>
    </member>
    <member name="M:System.MathF.Atan2(System.Single,System.Single)">
      <summary>Restituisce l'angolo la cui tangente è il quoziente di due numeri specificati.</summary>
      <param name="y">Coordinata y di un punto.</param>
      <param name="x">Coordinata x di un punto.</param>
      <returns>Un angolo, θ, misurato in radianti, tale che -π ≤ θ ≤ π, e tan(θ) = <paramref name="y" /> / <paramref name="x" />, dove (<paramref name="x" />, <paramref name="y" />) è un punto nel piano cartesiano. Osservare quanto segue: 

Per (<paramref name="x" />, <paramref name="y" />) nel quadrante 1, 0 &lt; θ &lt; π/2.  

Per (<paramref name="x" />, <paramref name="y" />) nel quadrante 2, π/2 &lt; θ ≤ π.  

Per (<paramref name="x" />, <paramref name="y" />) nel quadrante 3, -π &lt; θ &lt; -π/2.  

Per (<paramref name="x" />, <paramref name="y" />) nel quadrante 4, -π/2 &lt; θ &lt; 0.  


Per i punti sui limiti dei quadranti, il valore restituito è il seguente: 

Se y è 0 e x non è negativo, θ = 0.  

Se y è 0 e x è negativo, θ = π.  

Se y è positivo e x è 0, θ = π/2.  

Se y è negativo e x è 0, θ = -π/2.  

Se y è 0 e x è 0, θ = 0.  


Se <paramref name="x" /> o <paramref name="y" /> è <see cref="F:System.Single.NaN" /> o se <paramref name="x" /> e <paramref name="y" /> sono <see cref="F:System.Single.PositiveInfinity" /> o <see cref="F:System.Single.NegativeInfinity" />, il metodo restituisce <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="M:System.MathF.Atanh(System.Single)">
      <summary>Restituisce l'angolo la cui tangente iperbolica è il numero specificato.</summary>
      <param name="x">Numero che rappresenta una tangente iperbolica, dove <paramref name="x" /> deve essere maggiore o uguale a -1, ma minore o uguale a 1.</param>
      <returns>Un angolo, θ, misurato in radianti, tale che -∞ &lt; θ &lt;-1 o 1 &lt; θ &lt; ∞.  
In alternativa 
 <see cref="F:System.Single.NaN" /> se <paramref name="x" /> &lt; -1 o <paramref name="x" /> &gt; 1 o <paramref name="x" /> è uguale a <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="M:System.MathF.BitDecrement(System.Single)">
      <summary>Restituisce il successivo valore più piccolo che risulta minore di <paramref name="x" />.</summary>
      <param name="x">Il valore da decrementare.</param>
      <returns>Il successivo valore più piccolo che risulta minore di <paramref name="x" />.
In alternativa 
 <see cref="F:System.Single.NegativeInfinity" /> se <paramref name="x" /> è uguale a <see cref="F:System.Single.NegativeInfinity" />.
-oppure- 
 <see cref="F:System.Single.NaN" /> se <paramref name="x" /> è uguale a <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="M:System.MathF.BitIncrement(System.Single)">
      <summary>Restituisce il successivo valore più grande maggiore di <paramref name="x" />.</summary>
      <param name="x">Valore da incrementare.</param>
      <returns>Il successivo valore più grande maggiore di <paramref name="x" />.
-oppure- 
 <see cref="F:System.Single.PositiveInfinity" /> se <paramref name="x" /> è uguale a <see cref="F:System.Single.PositiveInfinity" />.
-oppure- 
 <see cref="F:System.Single.NaN" /> se <paramref name="x" /> è uguale a <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="M:System.MathF.Cbrt(System.Single)">
      <summary>Restituisce la radice cubica di un numero specificato.</summary>
      <param name="x">Numero di cui è necessario trovare la radice cubica.</param>
      <returns>La radice cubica di <paramref name="x" />.
In alternativa 
 <see cref="F:System.Single.NaN" /> se <paramref name="x" /> è uguale a <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="M:System.MathF.Ceiling(System.Single)">
      <summary>Restituisce il valore integrale minimo maggiore del o uguale al numero a virgola mobile e con precisione singola specificato.</summary>
      <param name="x">Numero a virgola mobile a precisione singola.</param>
      <returns>Valore intero minimo maggiore o uguale a <paramref name="x" />. Se <paramref name="x" /> è uguale a <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NegativeInfinity" /> o <see cref="F:System.Single.PositiveInfinity" />, verrà restituito tale valore. Si noti che questo metodo restituisce <see cref="T:System.Single" /> anziché un tipo integrale.</returns>
    </member>
    <member name="M:System.MathF.CopySign(System.Single,System.Single)">
      <summary>Restituisce un valore con grandezza pari a <paramref name="x" /> e segno <paramref name="y" />.</summary>
      <param name="x">Numero la cui grandezza viene usata nel risultato.</param>
      <param name="y">Numero il cui segno viene usato nel risultato.</param>
      <returns>Valore con grandezza <paramref name="x" /> e segno <paramref name="y" />.</returns>
    </member>
    <member name="M:System.MathF.Cos(System.Single)">
      <summary>Restituisce il coseno dell'angolo specificato.</summary>
      <param name="x">Angolo, espresso in radianti.</param>
      <returns>Coseno di <paramref name="x" />. Se <paramref name="x" /> è uguale a <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NegativeInfinity" /> o <see cref="F:System.Single.PositiveInfinity" />, questo metodo restituisce <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="M:System.MathF.Cosh(System.Single)">
      <summary>Restituisce il coseno iperbolico dell'angolo specificato.</summary>
      <param name="x">Angolo, espresso in radianti.</param>
      <returns>Coseno iperbolico di <paramref name="x" />. Se <paramref name="x" /> è uguale a <see cref="F:System.Single.NegativeInfinity" /> o <see cref="F:System.Single.PositiveInfinity" />, verrà restituito <see cref="F:System.Single.PositiveInfinity" />. Se <paramref name="x" /> è uguale a <see cref="F:System.Single.NaN" />, verrà restituito <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="F:System.MathF.E">
      <summary>Rappresenta la base logaritmica naturale, specificata dalla costante, <see langword="e" />.</summary>
    </member>
    <member name="M:System.MathF.Exp(System.Single)">
      <summary>Restituisce <see langword="e" /> elevato alla potenza specificata.</summary>
      <param name="x">Numero che specifica una potenza.</param>
      <returns>Numero <see langword="e" /> elevato alla potenza <paramref name="x" />. Se <paramref name="x" /> è uguale a <see cref="F:System.Single.NaN" /> o <see cref="F:System.Single.PositiveInfinity" />, verrà restituito il valore. Se <paramref name="x" /> è uguale a <see cref="F:System.Single.NegativeInfinity" />, verrà restituito 0.</returns>
    </member>
    <member name="M:System.MathF.Floor(System.Single)">
      <summary>Restituisce il valore integrale massimo minore o uguale al numero a virgola mobile a precisione singola specificato.</summary>
      <param name="x">Numero a virgola mobile a precisione singola.</param>
      <returns>Valore integrale massimo minore o uguale a <paramref name="x" />. Se <paramref name="x" /> è uguale a <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NegativeInfinity" /> o <see cref="F:System.Single.PositiveInfinity" />, verrà restituito tale valore.</returns>
    </member>
    <member name="M:System.MathF.FusedMultiplyAdd(System.Single,System.Single,System.Single)">
      <summary>Restituisce (x * y) + z, arrotondato come unica operazione ternaria.</summary>
      <param name="x">Il numero da moltiplicare con <paramref name="y" />.</param>
      <param name="y">Il numero da moltiplicare con <paramref name="x" />.</param>
      <param name="z">Il numero da aggiungere al risultato di <paramref name="x" /> moltiplicato per <paramref name="y" />.</param>
      <returns>(x * y) + z, arrotondato come unica operazione ternaria.</returns>
    </member>
    <member name="M:System.MathF.IEEERemainder(System.Single,System.Single)">
      <summary>Restituisce il resto della divisione tra il numero specificato e un altro numero specificato.</summary>
      <param name="x">Dividendo.</param>
      <param name="y">Divisore.</param>
      <returns>Un numero uguale a <paramref name="x" /> - (<paramref name="y" /> Q), dove Q è il quoziente di <paramref name="x" /> / <paramref name="y" /> arrotondato all'intero più vicino; se <paramref name="x" /> / <paramref name="y" /> è contenuto tra due interi, verrà restituito l'intero pari.  
Se <paramref name="x" /> - (<paramref name="y" /> Q) è zero, verrà restituito il valore +0 se <paramref name="x" /> è positivo oppure -0 se <paramref name="x" /> è negativo.  
Se <paramref name="y" /> = 0, verrà restituito <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="M:System.MathF.ILogB(System.Single)">
      <summary>Restituisce la parte intera del logaritmo in base 2 del numero specificato.</summary>
      <param name="x">Numero di cui è necessario trovare il logaritmo.</param>
      <returns>Uno dei valori della tabella seguente.  
 Parametro <paramref name="x" />. 
  Valore restituito 
  Impostazione predefinita 
  La parte intera del logaritmo in base 2 di <paramref name="x" />; ovvero, (int)log2(<paramref name="x" />).  

  Zero 
 <see cref="F:System.Int32.MinValue" /> Uguale a <see cref="F:System.Single.NaN" /> o <see cref="F:System.Single.PositiveInfinity" /> o <see cref="F:System.Single.NegativeInfinity" /><see cref="F:System.Int32.MaxValue" /></returns>
    </member>
    <member name="M:System.MathF.Log(System.Single)">
      <summary>Restituisce il logaritmo naturale (in base <see langword="e" />) di un numero specificato.</summary>
      <param name="x">Numero di cui è necessario trovare il logaritmo.</param>
      <returns>Uno dei valori della tabella seguente.  
 Parametro <paramref name="x" />. 
  Valore restituito 
  Positivo 
  Logaritmo naturale di <paramref name="x" />: ln <paramref name="x" /> o log e <paramref name="x" /> Zero 
 <see cref="F:System.Single.NegativeInfinity" /> Negativo 
 <see cref="F:System.Single.NaN" /> Uguale a <see cref="F:System.Single.NaN" /><see cref="F:System.Single.NaN" /> Uguale a <see cref="F:System.Single.PositiveInfinity" /><see cref="F:System.Single.PositiveInfinity" /></returns>
    </member>
    <member name="M:System.MathF.Log(System.Single,System.Single)">
      <summary>Restituisce il logaritmo del numero specificato in una base specificata.</summary>
      <param name="x">Numero di cui è necessario trovare il logaritmo.</param>
      <param name="y">La base.</param>
      <returns>Uno dei valori della tabella seguente. (+Infinito indica <see cref="F:System.Single.PositiveInfinity" />, -Infinito indica <see cref="F:System.Single.NegativeInfinity" /> e NaN indica <see cref="F:System.Single.NaN" />). 
 <paramref name="x" /><paramref name="newBase" /> Valore restituito 
 <paramref name="x" />&gt; 0 
  (0 &lt;<paramref name="newBase" />&lt; 1) -o-(<paramref name="newBase" />&gt; 1) 
  lognewBase(a) 
 <paramref name="x" />&lt; 0 
  (qualsiasi valore) 
  NaN 
  (qualsiasi valore) 
 <paramref name="newBase" />&lt; 0 
  NaN 
 <paramref name="x" /> != 1 
 <paramref name="newBase" /> = 0 
  NaN 
 <paramref name="x" /> != 1 
 <paramref name="newBase" /> = +Infinito 
  NaN 
 <paramref name="x" /> = NaN 
  (qualsiasi valore) 
  NaN 
  (qualsiasi valore) 
 <paramref name="newBase" /> = NaN 
  NaN 
  (qualsiasi valore) 
 <paramref name="newBase" /> = 1 
  NaN 
 <paramref name="x" /> = 0 
  0 &lt;<paramref name="newBase" />&lt; 1 
  +Infinito 
 <paramref name="x" /> = 0 
 <paramref name="newBase" />&gt; 1 
  -Infinito 
 <paramref name="x" /> =  +Infinito 
  0 &lt;<paramref name="newBase" />&lt; 1 
  -Infinito 
 <paramref name="x" /> =  +Infinito 
 <paramref name="newBase" />&gt; 1 
  +Infinito 
 <paramref name="x" /> = 1 
 <paramref name="newBase" /> = 0 
  0 
 <paramref name="x" /> = 1 
 <paramref name="newBase" /> = +Infinito 
  0</returns>
    </member>
    <member name="M:System.MathF.Log10(System.Single)">
      <summary>Restituisce il logaritmo in base 10 del numero specificato.</summary>
      <param name="x">Numero di cui trovare il logaritmo.</param>
      <returns>Uno dei valori della tabella seguente.  
 Parametro <paramref name="x" />. 
  Valore restituito 
  Positivo 
  Logaritmo in base 10 di <paramref name="x" />: log 10<paramref name="x" />.  

  Zero 
 <see cref="F:System.Single.NegativeInfinity" /> Negativo 
 <see cref="F:System.Single.NaN" /> Uguale a <see cref="F:System.Single.NaN" /><see cref="F:System.Single.NaN" /> Uguale a <see cref="F:System.Single.PositiveInfinity" /><see cref="F:System.Single.PositiveInfinity" /></returns>
    </member>
    <member name="M:System.MathF.Log2(System.Single)">
      <summary>Restituisce il logaritmo in base 2 di un numero specificato.</summary>
      <param name="x">Numero di cui trovare il logaritmo.</param>
      <returns>Uno dei valori della tabella seguente.  
 Parametro <paramref name="x" />. 
  Valore restituito 
  Positivo 
  Logaritmo in base 2 di <paramref name="x" />, ovvero log 2<paramref name="x" />.  

  Zero 
 <see cref="F:System.Single.NegativeInfinity" /> Negativo 
 <see cref="F:System.Single.NaN" /> Uguale a <see cref="F:System.Single.NaN" /><see cref="F:System.Single.NaN" /> Uguale a <see cref="F:System.Single.PositiveInfinity" /><see cref="F:System.Single.PositiveInfinity" /></returns>
    </member>
    <member name="M:System.MathF.Max(System.Single,System.Single)">
      <summary>Restituisce il più elevato tra due numeri a virgola mobile e precisione singola.</summary>
      <param name="x">Primo di due numeri a virgola mobile e precisione singola da confrontare.</param>
      <param name="y">Secondo di due numeri a virgola mobile e precisione singola da confrontare.</param>
      <returns>Parametro <paramref name="x" /> o <paramref name="y" />, qualunque sia il maggiore. Se <paramref name="x" />, <paramref name="y" /> o entrambi <paramref name="x" /> e <paramref name="y" /> sono uguali a <see cref="F:System.Single.NaN" />, verrà restituito <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="M:System.MathF.MaxMagnitude(System.Single,System.Single)">
      <summary>Restituisce la grandezza più elevata tra due numeri a virgola mobile e precisione singola.</summary>
      <param name="x">Primo di due numeri a virgola mobile e precisione singola da confrontare.</param>
      <param name="y">Secondo di due numeri a virgola mobile e precisione singola da confrontare.</param>
      <returns>Parametro <paramref name="x" /> o <paramref name="y" />, a seconda di quale ha la grandezza maggiore. Se <paramref name="x" />, <paramref name="y" /> o entrambi <paramref name="x" /> e <paramref name="y" /> sono uguali a <see cref="F:System.Single.NaN" />, verrà restituito <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="M:System.MathF.Min(System.Single,System.Single)">
      <summary>Restituisce il meno elevato tra due numeri a virgola mobile e precisione singola.</summary>
      <param name="x">Primo di due numeri a virgola mobile e precisione singola da confrontare.</param>
      <param name="y">Secondo di due numeri a virgola mobile e precisione singola da confrontare.</param>
      <returns>Parametro <paramref name="x" /> o <paramref name="y" />, qualunque sia il minore. Se <paramref name="x" />, <paramref name="y" /> o sia <paramref name="x" /> che <paramref name="y" /> sono uguali a <see cref="F:System.Single.NaN" />, verrà restituito <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="M:System.MathF.MinMagnitude(System.Single,System.Single)">
      <summary>Restituisce la grandezza meno elevata tra due numeri a virgola mobile e precisione singola.</summary>
      <param name="x">Primo di due numeri a virgola mobile e precisione singola da confrontare.</param>
      <param name="y">Secondo di due numeri a virgola mobile e precisione singola da confrontare.</param>
      <returns>Parametro <paramref name="x" /> o <paramref name="y" />, a seconda di quale ha la grandezza minore. Se <paramref name="x" />, <paramref name="y" /> o entrambi <paramref name="x" /> e <paramref name="y" /> sono uguali a <see cref="F:System.Single.NaN" />, verrà restituito <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="F:System.MathF.PI">
      <summary>Rappresenta il rapporto tra la circonferenza del cerchio e il relativo diametro, specificato dalla costante π.</summary>
    </member>
    <member name="M:System.MathF.Pow(System.Single,System.Single)">
      <summary>Restituisce il numero specificato elevato alla potenza specificata.</summary>
      <param name="x">Numero a virgola mobile e precisione singola da elevare a potenza.</param>
      <param name="y">Numero a virgola mobile e precisione singola che specifica una potenza.</param>
      <returns>Numero <paramref name="x" /> elevato alla potenza <paramref name="y" />.</returns>
    </member>
    <member name="M:System.MathF.Round(System.Single)">
      <summary>Arrotonda un valore a virgola mobile e precisione singola al valore integrale più vicino e arrotonda i valori che si trovano a metà tra due numeri al numero pari più vicino.</summary>
      <param name="x">Numero a virgola mobile e precisione singola da arrotondare.</param>
      <returns>Il <paramref name="x" /> più vicino all'intero. Se il componente frazionario di <paramref name="x" /> è compreso tra due interi, di cui uno è pari e l'altro dispari, allora viene restituito il numero pari. Si noti che questo metodo restituisce <see cref="T:System.Single" /> anziché un tipo integrale.</returns>
    </member>
    <member name="M:System.MathF.Round(System.Single,System.Int32)">
      <summary>Arrotonda un valore a virgola mobile e precisione singola al numero di cifre frazionarie specificato e arrotonda i valori che si trovano a metà tra due numeri al numero pari più vicino.</summary>
      <param name="x">Numero a virgola mobile e precisione singola da arrotondare.</param>
      <param name="digits">Numero di cifre frazionarie nel valore restituito.</param>
      <returns>Numero più vicino a <paramref name="x" /> contenente un numero di cifre frazionarie pari a <paramref name="digits" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="digits" /> è minore di 0 o maggiore di 6.</exception>
    </member>
    <member name="M:System.MathF.Round(System.Single,System.Int32,System.MidpointRounding)">
      <summary>Arrotonda un valore a virgola mobile e precisione singola al numero di cifre frazionarie specificato e usa la convenzione di arrotondamento specificata per i valori che si trovano a metà tra due numeri.</summary>
      <param name="x">Numero a virgola mobile e precisione singola da arrotondare.</param>
      <param name="digits">Numero di cifre frazionarie nel valore restituito.</param>
      <param name="mode">Spiegazione della modalità di arrotondamento di <paramref name="x" /> se si trova a metà tra due numeri.</param>
      <returns>Numero più vicino a <paramref name="x" /> contenente un numero di cifre frazionarie pari a <paramref name="digits" />. Se <paramref name="x" /> ha meno cifre frazionarie di <paramref name="digits" />, <paramref name="x" /> viene restituito invariato.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="digits" /> è minore di 0 o maggiore di 6.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="mode" /> non è un valore valido di <see cref="T:System.MidpointRounding" />.</exception>
    </member>
    <member name="M:System.MathF.Round(System.Single,System.MidpointRounding)">
      <summary>Arrotonda un valore a virgola mobile e precisione singola all'intero più vicino e usa la convenzione di arrotondamento specificata per i valori che si trovano a metà tra due numeri.</summary>
      <param name="x">Numero a virgola mobile e precisione singola da arrotondare.</param>
      <param name="mode">Spiegazione della modalità di arrotondamento di <paramref name="x" /> se si trova a metà tra due numeri.</param>
      <returns>Il <paramref name="x" /> più vicino all'intero. Se <paramref name="x" /> è contenuto tra due interi, di cui per definizione uno è pari e l'altro dispari, <paramref name="mode" /> determina quale dei due numeri deve essere restituito. Si noti che questo metodo restituisce <see cref="T:System.Single" /> anziché un tipo integrale.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="mode" /> non è un valore valido di <see cref="T:System.MidpointRounding" />.</exception>
    </member>
    <member name="M:System.MathF.ScaleB(System.Single,System.Int32)">
      <summary>Restituisce x * 2^n calcolato in modo efficiente.</summary>
      <param name="x">Numero a virgola mobile e precisione singola che specifica il valore della base.</param>
      <param name="n">Numero a virgola mobile e precisione singola che specifica la potenza.</param>
      <returns>x * 2^n calcolato in modo efficiente.</returns>
    </member>
    <member name="M:System.MathF.Sign(System.Single)">
      <summary>Restituisce un intero che indica il segno di un numero a virgola mobile e a precisione singola.</summary>
      <param name="x">Numero con segno.</param>
      <returns>Numero che indica il segno di <paramref name="x" />, come illustrato nella tabella seguente.  
  Valore restituito 
  Significato 
  -1 
 <paramref name="x" /> è minore di zero.  

  0 
 <paramref name="x" /> è uguale a zero.  

  1 
 <paramref name="x" /> è maggiore di zero.</returns>
      <exception cref="T:System.ArithmeticException">
        <paramref name="x" /> è uguale a <see cref="F:System.Single.NaN" />.</exception>
    </member>
    <member name="M:System.MathF.Sin(System.Single)">
      <summary>Restituisce il seno dell'angolo specificato.</summary>
      <param name="x">Angolo, espresso in radianti.</param>
      <returns>Seno di <paramref name="x" />. Se <paramref name="x" /> è uguale a <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NegativeInfinity" /> o <see cref="F:System.Single.PositiveInfinity" />, questo metodo restituisce <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="M:System.MathF.Sinh(System.Single)">
      <summary>Restituisce il seno iperbolico dell'angolo specificato.</summary>
      <param name="x">Angolo, espresso in radianti.</param>
      <returns>Seno iperbolico di <paramref name="x" />. Se <paramref name="x" /> è uguale a <see cref="F:System.Single.NegativeInfinity" />, <see cref="F:System.Single.PositiveInfinity" /> o <see cref="F:System.Single.NaN" />, verrà restituito dal metodo un oggetto <see cref="T:System.Single" /> uguale a <paramref name="x" />.</returns>
    </member>
    <member name="M:System.MathF.Sqrt(System.Single)">
      <summary>Restituisce la radice quadrata del numero specificato.</summary>
      <param name="x">Numero di cui è necessario trovare la radice quadrata.</param>
      <returns>Uno dei valori della tabella seguente.  
 Parametro <paramref name="x" />. 
  Valore restituito 
  Zero o positivo 
  Radice quadrata positiva di <paramref name="x" />.  

  Negativo 
 <see cref="F:System.Single.NaN" /> Uguale a <see cref="F:System.Single.NaN" />.<see cref="F:System.Single.NaN" /> Uguale a <see cref="F:System.Single.PositiveInfinity" />.<see cref="F:System.Single.PositiveInfinity" /></returns>
    </member>
    <member name="M:System.MathF.Tan(System.Single)">
      <summary>Restituisce la tangente dell'angolo specificato.</summary>
      <param name="x">Angolo, espresso in radianti.</param>
      <returns>Tangente di <paramref name="x" />. Se <paramref name="x" /> è uguale a <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NegativeInfinity" /> o <see cref="F:System.Single.PositiveInfinity" />, questo metodo restituisce <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="M:System.MathF.Tanh(System.Single)">
      <summary>Restituisce la tangente iperbolica dell'angolo specificato.</summary>
      <param name="x">Angolo, espresso in radianti.</param>
      <returns>Tangente iperbolica di <paramref name="x" />. Se <paramref name="x" /> è uguale a <see cref="F:System.Single.NegativeInfinity" />, il metodo restituirà -1. Se il valore è uguale a <see cref="F:System.Single.PositiveInfinity" />, questo metodo restituirà 1. Se <paramref name="x" /> è uguale a <see cref="F:System.Single.NaN" />, questo metodo restituisce <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="M:System.MathF.Truncate(System.Single)">
      <summary>Calcola la parte integrale di un numero a virgola mobile e precisione singola specificato.</summary>
      <param name="x">Numero da troncare.</param>
      <returns>La parte integrale di <paramref name="x" />, vale a dire il numero che rimane dopo l'eliminazione delle cifre frazionarie o uno dei valori elencati nella seguente tabella.  
 <paramref name="x" /> Valore restituito 
 <see cref="F:System.Single.NaN" /><see cref="F:System.Single.NaN" /><see cref="F:System.Single.NegativeInfinity" /><see cref="F:System.Single.NegativeInfinity" /><see cref="F:System.Single.PositiveInfinity" /><see cref="F:System.Single.PositiveInfinity" /></returns>
    </member>
    <member name="T:System.Net.WebUtility">
      <summary>Fornisce metodi per la codifica e la decodifica degli URL durante l'elaborazione delle richieste Web.</summary>
    </member>
    <member name="M:System.Net.WebUtility.HtmlDecode(System.String)">
      <summary>Consente di convertire una stringa codificata in HTML per la trasmissione HTTP in una stringa decodificata.</summary>
      <param name="value">Stringa da decodificare.</param>
      <returns>Stringa decodificata.</returns>
    </member>
    <member name="M:System.Net.WebUtility.HtmlDecode(System.String,System.IO.TextWriter)">
      <summary>Consente di convertire una stringa codificata in HTML in una stringa decodificata e di inviare la stringa decodificata al flusso di output di un oggetto <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="value">Stringa da decodificare.</param>
      <param name="output">Flusso di output dell'oggetto <see cref="T:System.IO.TextWriter" />.</param>
      <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="output" /> non può essere <see langword="null" /> se il parametro <paramref name="value" /> non è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.WebUtility.HtmlEncode(System.String)">
      <summary>Esegue la conversione di una stringa in una stringa con codifica HTML.</summary>
      <param name="value">Stringa da codificare.</param>
      <returns>Stringa codificata.</returns>
    </member>
    <member name="M:System.Net.WebUtility.HtmlEncode(System.String,System.IO.TextWriter)">
      <summary>Consente di convertire una stringa in una stringa codificata in HTML e restituisce l'output come flusso <see cref="T:System.IO.TextWriter" /> di output.</summary>
      <param name="value">Stringa da codificare.</param>
      <param name="output">Flusso di output <see cref="T:System.IO.TextWriter" />.</param>
      <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="output" /> non può essere <see langword="null" /> se il parametro <paramref name="value" /> non è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.WebUtility.UrlDecode(System.String)">
      <summary>Consente di convertire in una stringa decodificata una stringa codificata per la trasmissione in un URL.</summary>
      <param name="encodedValue">Stringa con codifica URL da decodificare.</param>
      <returns>Stringa decodificata.</returns>
    </member>
    <member name="M:System.Net.WebUtility.UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)">
      <summary>Converte una matrice di byte codificata per la trasmissione in un URL in una matrice di byte decodificata.</summary>
      <param name="encodedValue">Una matrice <see cref="T:System.Byte" /> con codifica URL da decodificare.</param>
      <param name="offset">Offset, in byte, dall'inizio della matrice <see cref="T:System.Byte" /> da decodificare.</param>
      <param name="count">Conteggio, in byte, per decodificare dalla matrice <see cref="T:System.Byte" />.</param>
      <returns>Una matrice <see cref="T:System.Byte" /> decodificata.</returns>
    </member>
    <member name="M:System.Net.WebUtility.UrlEncode(System.String)">
      <summary>Converte una stringa di testo in una stringa con codifica URL.</summary>
      <param name="value">Testo da codificare in URL.</param>
      <returns>Stringa con codifica URL.</returns>
    </member>
    <member name="M:System.Net.WebUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)">
      <summary>Consente di convertire una matrice di byte in una matrice di byte con codifica URL.</summary>
      <param name="value">Matrice <see cref="T:System.Byte" /> da codificare in URL.</param>
      <param name="offset">Offset, in byte, dall'inizio della matrice <see cref="T:System.Byte" /> da codificare.</param>
      <param name="count">Conteggio, in byte, per codificare dalla matrice <see cref="T:System.Byte" />.</param>
      <returns>Matrice <see cref="T:System.Byte" /> di byte codificata.</returns>
    </member>
    <member name="T:System.Numerics.BitOperations">
      <summary>Offre metodi di utilità per operazioni su bit intrinseche. I metodi usano intrinseci hardware, se disponibili nella piattaforma sottostante. In caso contrario, usano fallback software ottimizzati.</summary>
    </member>
    <member name="M:System.Numerics.BitOperations.LeadingZeroCount(System.UInt32)">
      <summary>Conta il numero di bit zero iniziali in una maschera di Integer senza segno a 32 bit.</summary>
      <param name="value">La maschera.</param>
      <returns>Numero di bit zero iniziali in una maschera.</returns>
    </member>
    <member name="M:System.Numerics.BitOperations.LeadingZeroCount(System.UInt64)">
      <summary>Conta il numero di bit zero iniziali in una maschera di Integer senza segno a 64 bit.</summary>
      <param name="value">La maschera.</param>
      <returns>Numero di bit zero iniziali in una maschera.</returns>
    </member>
    <member name="M:System.Numerics.BitOperations.Log2(System.UInt32)">
      <summary>Restituisce il logaritmo (floor) Integer del valore specificato, in base 2.</summary>
      <param name="value">Numero da cui ottenere il logaritmo.</param>
      <returns>Logaritmo del valore specificato, in base 2.</returns>
    </member>
    <member name="M:System.Numerics.BitOperations.Log2(System.UInt64)">
      <summary>Restituisce il logaritmo (floor) Integer del valore specificato, in base 2.</summary>
      <param name="value">Numero da cui ottenere il logaritmo.</param>
      <returns>Logaritmo del valore specificato, in base 2.</returns>
    </member>
    <member name="M:System.Numerics.BitOperations.PopCount(System.UInt32)">
      <summary>Restituisce il conteggio della popolazione (numero di bit impostati) di una maschera.</summary>
      <param name="value">La maschera.</param>
      <returns>Conteggio della popolazione di una maschera.</returns>
    </member>
    <member name="M:System.Numerics.BitOperations.PopCount(System.UInt64)">
      <summary>Restituisce il conteggio della popolazione (numero di bit impostati) di una maschera di Integer a 64 bit.</summary>
      <param name="value">La maschera.</param>
      <returns>Conteggio della popolazione della maschera.</returns>
    </member>
    <member name="M:System.Numerics.BitOperations.RotateLeft(System.UInt32,System.Int32)">
      <summary>Ruota il valore specificato a sinistra del numero di bit specificato.</summary>
      <param name="value">Valore da ruotare.</param>
      <param name="offset">Numero di bit in base a cui ruotare. Qualsiasi valore non compreso nell'intervallo [0..31] viene trattato come mod 32 congruo.</param>
      <returns>Il valore ruotato.</returns>
    </member>
    <member name="M:System.Numerics.BitOperations.RotateLeft(System.UInt64,System.Int32)">
      <summary>Ruota il valore specificato a sinistra del numero di bit specificato.</summary>
      <param name="value">Valore da ruotare.</param>
      <param name="offset">Numero di bit in base a cui ruotare. Qualsiasi valore non compreso nell'intervallo [0..63] viene trattato come mod 64 congruo.</param>
      <returns>Il valore ruotato.</returns>
    </member>
    <member name="M:System.Numerics.BitOperations.RotateRight(System.UInt32,System.Int32)">
      <summary>Ruota il valore specificato a destra del numero di bit specificato.</summary>
      <param name="value">Valore da ruotare.</param>
      <param name="offset">Numero di bit in base a cui ruotare. Qualsiasi valore non compreso nell'intervallo [0..31] viene trattato come mod 32 congruo.</param>
      <returns>Il valore ruotato.</returns>
    </member>
    <member name="M:System.Numerics.BitOperations.RotateRight(System.UInt64,System.Int32)">
      <summary>Ruota il valore specificato a destra del numero di bit specificato.</summary>
      <param name="value">Valore da ruotare.</param>
      <param name="offset">Numero di bit in base a cui ruotare. Qualsiasi valore non compreso nell'intervallo [0..63] viene trattato come mod 64 congruo.</param>
      <returns>Il valore ruotato.</returns>
    </member>
    <member name="M:System.Numerics.BitOperations.TrailingZeroCount(System.Int32)">
      <summary>Conta il numero di bit zero finali in una maschera di valori Integer a 32 bit.</summary>
      <param name="value">La maschera.</param>
      <returns>Numero di bit zero finali nel valore Integer.</returns>
    </member>
    <member name="M:System.Numerics.BitOperations.TrailingZeroCount(System.Int64)">
      <summary>Conta il numero di bit zero finali in una maschera di valori Integer a 64 bit.</summary>
      <param name="value">La maschera.</param>
      <returns>Numero di bit zero finali nella maschera.</returns>
    </member>
    <member name="M:System.Numerics.BitOperations.TrailingZeroCount(System.UInt32)">
      <summary>Conta il numero di bit zero finali in una maschera di valori Integer a 32 bit senza segno.</summary>
      <param name="value">La maschera.</param>
      <returns>Numero di bit zero finali nella maschera.</returns>
    </member>
    <member name="M:System.Numerics.BitOperations.TrailingZeroCount(System.UInt64)">
      <summary>Conta il numero di bit zero finali in una maschera di valori Integer a 64 bit senza segno.</summary>
      <param name="value">La maschera.</param>
      <returns>Numero di bit zero finali nella maschera.</returns>
    </member>
    <member name="T:System.OperatingSystem">
      <summary>Rappresenta le informazioni relative a un sistema operativo, come la versione e l'identificatore della piattaforma. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.OperatingSystem.#ctor(System.PlatformID,System.Version)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.OperatingSystem" />con il valore dell'identificatore di piattaforma e l'oggetto versione specificati.</summary>
      <param name="platform">Uno dei valori <see cref="T:System.PlatformID" /> che indicano la piattaforma del sistema operativo.</param>
      <param name="version">Oggetto <see cref="T:System.Version" /> che indica la versione del sistema operativo.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="platform" /> non è un valore dell'enumerazione <see cref="T:System.PlatformID" />.</exception>
    </member>
    <member name="M:System.OperatingSystem.Clone">
      <summary>Crea un oggetto <see cref="T:System.OperatingSystem" /> identico a questa istanza.</summary>
      <returns>Oggetto <see cref="T:System.OperatingSystem" /> che è una copia di questa istanza.</returns>
    </member>
    <member name="M:System.OperatingSystem.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Compila un oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con i dati necessari per deserializzare questa istanza.</summary>
      <param name="info">Oggetto da popolare con le informazioni sulla serializzazione.</param>
      <param name="context">Posizione di archiviazione e recupero dei dati serializzati. Riservato per usi futuri.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.OperatingSystem.Platform">
      <summary>Ottiene un valore di enumerazione <see cref="T:System.PlatformID" /> che identifica la piattaforma del sistema operativo.</summary>
      <returns>Uno dei valori di <see cref="T:System.PlatformID" />.</returns>
    </member>
    <member name="P:System.OperatingSystem.ServicePack">
      <summary>Ottiene la versione del service pack rappresentata dall'oggetto <see cref="T:System.OperatingSystem" />.</summary>
      <returns>La versione del service pack, se i service pack sono supportati e se almeno uno di questi è installato. In caso contrario, una stringa vuota ("").</returns>
    </member>
    <member name="M:System.OperatingSystem.ToString">
      <summary>Converte il valore dell'oggetto <see cref="T:System.OperatingSystem" /> nell'equivalente rappresentazione in forma di stringa.</summary>
      <returns>Rappresentazione in forma di stringa dei valori restituiti dalle proprietà <see cref="P:System.OperatingSystem.Platform" />, <see cref="P:System.OperatingSystem.Version" /> e <see cref="P:System.OperatingSystem.ServicePack" />.</returns>
    </member>
    <member name="P:System.OperatingSystem.Version">
      <summary>Ottiene un oggetto <see cref="T:System.Version" /> che identifica il sistema operativo corrente.</summary>
      <returns>Oggetto <see cref="T:System.Version" /> che descrive il numero di versione principale, il numero di versione secondaria, la build e i numeri di revisione del sistema operativo corrente.</returns>
    </member>
    <member name="P:System.OperatingSystem.VersionString">
      <summary>Ottiene la rappresentazione in forma di stringa concatenata dell'identificatore della piattaforma, della versione e del service pack correntemente installati nel sistema operativo.</summary>
      <returns>Rappresentazione in forma di stringa dei valori restituiti dalle proprietà <see cref="P:System.OperatingSystem.Platform" />, <see cref="P:System.OperatingSystem.Version" /> e <see cref="P:System.OperatingSystem.ServicePack" />.</returns>
    </member>
    <member name="T:System.PlatformID">
      <summary>Identifica il sistema operativo o piattaforma supportato da un assembly.</summary>
    </member>
    <member name="F:System.PlatformID.MacOSX">
      <summary>Il sistema operativo è Macintosh. Questo valore è stato restituito da Silverlight. In .NET Core si può sostituire con Unix.</summary>
    </member>
    <member name="F:System.PlatformID.Unix">
      <summary>Il sistema operativo è Unix.</summary>
    </member>
    <member name="F:System.PlatformID.Win32NT">
      <summary>Il sistema operativo è Windows NT o versioni successive.</summary>
    </member>
    <member name="F:System.PlatformID.Win32S">
      <summary>Il sistema operativo è di tipo Win32s. Questo valore non è più usato.</summary>
    </member>
    <member name="F:System.PlatformID.Win32Windows">
      <summary>Il sistema operativo è Windows 95 o Windows 98. Questo valore non è più usato.</summary>
    </member>
    <member name="F:System.PlatformID.WinCE">
      <summary>Il sistema operativo è Windows CE. Questo valore non è più usato.</summary>
    </member>
    <member name="F:System.PlatformID.Xbox">
      <summary>La piattaforma di sviluppo è Xbox 360. Questo valore non è più usato.</summary>
    </member>
    <member name="T:System.Progress`1">
      <summary>Fornisce un oggetto <see cref="T:System.IProgress`1" /> che richiama i callback per ogni valore dello stato di avanzamento segnalato.</summary>
      <typeparam name="T">Specifica il tipo del valore del report stato di avanzamento.</typeparam>
    </member>
    <member name="M:System.Progress`1.#ctor">
      <summary>Inizializza l'oggetto <see cref="T:System.Progress`1" />.</summary>
    </member>
    <member name="M:System.Progress`1.#ctor(System.Action{`0})">
      <summary>Inizializza l'oggetto <see cref="T:System.Progress`1" /> con il callback specificato.</summary>
      <param name="handler">Gestore da richiamare per ogni valore dello stato di avanzamento segnalato. Il gestore verrà richiamato oltre a tutti i delegati registrati con l'evento <see cref="E:System.Progress`1.ProgressChanged" /> . In base all'istanza di <see cref="T:System.Threading.SynchronizationContext" /> acquisita da <see cref="T:System.Progress`1" /> in fase di creazione, è possibile che questa istanza del gestore venga richiamata contemporaneamente a se stessa.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="handler" /> è <see langword="null" /> (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Progress`1.OnReport(`0)">
      <summary>Segnala una modifica dello stato.</summary>
      <param name="value">Valore del progresso aggiornato.</param>
    </member>
    <member name="E:System.Progress`1.ProgressChanged">
      <summary>Generato per ogni valore di stato di avanzamento segnalato.</summary>
    </member>
    <member name="M:System.Progress`1.System#IProgress{T}#Report(`0)">
      <summary>Segnala una modifica dello stato.</summary>
      <param name="value">Valore del progresso aggiornato.</param>
    </member>
    <member name="T:System.Random">
      <summary>Rappresenta un generatore di numeri pseudo-casuali, ovvero un dispositivo che produce una sequenza di numeri che soddisfano determinati requisiti statistici di casualità.</summary>
    </member>
    <member name="M:System.Random.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Random" /> utilizzando un valore di inizializzazione predefinito dipendente da un fattore temporale.</summary>
    </member>
    <member name="M:System.Random.#ctor(System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Random" /> usando il valore di inizializzazione specificato.</summary>
      <param name="Seed">Numero utilizzato per calcolare un valore iniziale per la sequenza di numeri pseudo-casuali. Se viene specificato un numero negativo, viene utilizzato il valore assoluto del numero.</param>
    </member>
    <member name="M:System.Random.Next">
      <summary>Restituisce un intero casuale non negativo.</summary>
      <returns>Intero con segno a 32 bit maggiore o uguale a 0 e minore di <see cref="F:System.Int32.MaxValue" />.</returns>
    </member>
    <member name="M:System.Random.Next(System.Int32)">
      <summary>Restituisce un intero casuale non negativo inferiore al massimo specificato.</summary>
      <param name="maxValue">Limite superiore esclusivo del numero casuale da generare. <paramref name="maxValue" /> deve essere maggiore o uguale a 0.</param>
      <returns>Intero con segno a 32 bit maggiore o uguale a 0 e minore di <paramref name="maxValue" />; ovvero, l'intervallo dei valori restituiti in genere include 0 ma non <paramref name="maxValue" />. Se tuttavia <paramref name="maxValue" /> è uguale a 0 viene restituito <paramref name="maxValue" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maxValue" /> è minore di 0.</exception>
    </member>
    <member name="M:System.Random.Next(System.Int32,System.Int32)">
      <summary>Restituisce un numero intero casuale all'interno di un intervallo specificato.</summary>
      <param name="minValue">Limite inferiore inclusivo del numero casuale restituito.</param>
      <param name="maxValue">Limite superiore esclusivo del numero casuale restituito. <paramref name="maxValue" /> deve essere maggiore o uguale a <paramref name="minValue" />.</param>
      <returns>Intero con segno a 32 bit maggiore o uguale a <paramref name="minValue" /> e minore di <paramref name="maxValue" />: l'intervallo dei valori restituiti includerà <paramref name="minValue" /> ma non <paramref name="maxValue" />. Se <paramref name="minValue" /> è uguale a <paramref name="maxValue" />, viene restituito <paramref name="minValue" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="minValue" /> è maggiore di <paramref name="maxValue" />.</exception>
    </member>
    <member name="M:System.Random.NextBytes(System.Byte[])">
      <summary>Consente di inserire numeri casuali negli elementi di una matrice di byte specificata.</summary>
      <param name="buffer">Matrice di byte che deve contenere numeri casuali.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Random.NextBytes(System.Span{System.Byte})">
      <param name="buffer" />
    </member>
    <member name="M:System.Random.NextDouble">
      <summary>Restituisce un numero casuale a virgola mobile e precisione doppia maggiore o uguale a 0,0 e minore di 1,0.</summary>
      <returns>Numero a virgola mobile e precisione doppia maggiore o uguale a 0,0 e minore di 1,0.</returns>
    </member>
    <member name="M:System.Random.Sample">
      <summary>Restituisce un numero a virgola mobile casuale compreso tra 0,0 e 1,0.</summary>
      <returns>Numero a virgola mobile e precisione doppia maggiore o uguale a 0,0 e minore di 1,0.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyNameProxy">
      <summary>Fornisce una versione remota dell'oggetto <see langword="AssemblyName" />.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyNameProxy.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Reflection.AssemblyNameProxy" />.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyNameProxy.GetAssemblyName(System.String)">
      <summary>Ottiene l'oggetto <see langword="AssemblyName" /> per un dato file.</summary>
      <param name="assemblyFile">File di assembly per il quale ottenere l'oggetto <see langword="AssemblyName" />.</param>
      <returns>Oggetto <see langword="AssemblyName" /> che rappresenta il file specificato.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyFile" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="assemblyFile" /> è vuoto.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyFile" /> non trovata.</exception>
      <exception cref="T:System.Security.SecurityException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyFile" /> non è un assembly valido.</exception>
    </member>
    <member name="T:System.ResolveEventHandler">
      <summary>Rappresenta il metodo che gestisce l'evento <see cref="E:System.AppDomain.TypeResolve" />, <see cref="E:System.AppDomain.ResourceResolve" /> o <see cref="E:System.AppDomain.AssemblyResolve" /> di un oggetto <see cref="T:System.AppDomain" />.</summary>
      <param name="sender">Origine dell'evento.</param>
      <param name="args">Dati dell'evento.</param>
      <returns>Assembly che risolve il tipo, l'assembly o la risorsa; oppure <see langword="null" /> se l'assembly non può essere risolto.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.SwitchExpressionException">
      <summary>Indica che un'espressione switch non esaustiva non è riuscita a trovare la corrispondenza con l'input in fase di esecuzione. L'eccezione contiene facoltativamente un oggetto che rappresenta il valore senza corrispondenza.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.SwitchExpressionException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.CompilerServices.SwitchExpressionException" />.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.SwitchExpressionException.#ctor(System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.CompilerServices.SwitchExpressionException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="innerException">Eccezione che ha determinato l'eccezione corrente. Se il parametro <paramref name="innerException" /> non è <see langword="null" />, l'eccezione corrente viene generata in un blocco <see langword="catch" /> in cui viene gestita l'eccezione interna.</param>
    </member>
    <member name="M:System.Runtime.CompilerServices.SwitchExpressionException.#ctor(System.Object)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.CompilerServices.SwitchExpressionException" /> con un valore dell'espressione switch non corrispondente.</summary>
      <param name="unmatchedValue">Valore dell'espressione switch che non corrisponde ad alcun caso.</param>
    </member>
    <member name="M:System.Runtime.CompilerServices.SwitchExpressionException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.CompilerServices.SwitchExpressionException" /> con il messaggio specificato.</summary>
      <param name="message">Messaggio che apparirà all'utente finale.</param>
    </member>
    <member name="M:System.Runtime.CompilerServices.SwitchExpressionException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.CompilerServices.SwitchExpressionException" /> con la descrizione dettagliata e l'eccezione specificate.</summary>
      <param name="message">Messaggio che apparirà all'utente finale.</param>
      <param name="innerException">Riferimento all'eccezione interna che è la causa di questa eccezione.</param>
    </member>
    <member name="M:System.Runtime.CompilerServices.SwitchExpressionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Imposta l'oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con il nome del parametro e le informazioni aggiuntive sull'eccezione.</summary>
      <param name="info">Memorizza i dati utilizzati per serializzare o deserializzare l'oggetto a sua volta serializzato o deserializzato dall'oggetto <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />.</param>
      <param name="context">Descrive l'origine e la destinazione del flusso che ha generato l'eccezione e rappresenta un mezzo per mantenere tale contesto e un ulteriore contesto definito dal chiamante nell'ambito della serializzazione.</param>
    </member>
    <member name="P:System.Runtime.CompilerServices.SwitchExpressionException.Message">
      <summary>Ottiene il messaggio di eccezione.</summary>
      <returns>Stringa completa del messaggio.</returns>
    </member>
    <member name="P:System.Runtime.CompilerServices.SwitchExpressionException.UnmatchedValue">
      <summary>Ottiene il valore non corrispondente associato all'eccezione.</summary>
      <returns>Valore non corrispondente che provoca l'eccezione.</returns>
    </member>
    <member name="T:System.Runtime.ProfileOptimization">
      <summary>Migliora le prestazioni di avvio dei domini applicazione in applicazioni che richiedono l'uso del compilatore JIT (Just-in-Time) eseguendo la compilazione in background dei metodi che potrebbero essere eseguiti, in base ai profili creati durante le compilazioni precedenti.</summary>
    </member>
    <member name="M:System.Runtime.ProfileOptimization.SetProfileRoot(System.String)">
      <summary>Abilita la profilatura dell'ottimizzazione per il dominio dell'applicazione corrente e imposta la cartella in cui i file del profilo di ottimizzazione sono archiviati. In un computer a core singolo il metodo viene ignorato.</summary>
      <param name="directoryPath">Il percorso completo della cartella in cui i file del profilo vengono archiviati per il dominio applicazione corrente.</param>
    </member>
    <member name="M:System.Runtime.ProfileOptimization.StartProfile(System.String)">
      <summary>Avvia la compilazione JIT dei metodi che erano stati registrati nel file del profilo specificato, in un thread in background. Avvia il processo di registrazione dell'utilizzo del metodo corrente che successivamente sovrascrive il file del profilo specificato.</summary>
      <param name="profile">Nome file del profilo da utilizzare.</param>
    </member>
    <member name="T:System.Runtime.Versioning.ComponentGuaranteesAttribute">
      <summary>Definisce la garanzia di compatibilità di un componente, di un tipo o di un membro di tipo che può estendersi a più versioni.</summary>
    </member>
    <member name="M:System.Runtime.Versioning.ComponentGuaranteesAttribute.#ctor(System.Runtime.Versioning.ComponentGuaranteesOptions)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Versioning.ComponentGuaranteesAttribute" /> con un valore che indica il livello di compatibilità garantito di librerie, tipi o membri fra più versioni.</summary>
      <param name="guarantees">Uno dei valori di enumerazione che specifica il livello di compatibilità garantito fra più versioni.</param>
    </member>
    <member name="P:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees">
      <summary>Ottiene un valore che indica il livello di compatibilità garantito di una libreria, di un tipo o di un membro di tipo che si estende a più versioni.</summary>
      <returns>Uno dei valori di enumerazione che specifica il livello di compatibilità garantito fra più versioni.</returns>
    </member>
    <member name="T:System.Runtime.Versioning.ComponentGuaranteesOptions">
      <summary>Descrive la garanzia di compatibilità di un componente, di un tipo o di un membro di tipo che può estendersi a più versioni.</summary>
    </member>
    <member name="F:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange">
      <summary>Lo sviluppatore garantisce la compatibilità tra più versioni per il tipo. I consumer del tipo possono contare sulla compatibilità con le versioni future nonché utilizzare il tipo in tutte le interfacce. I problemi relativi al controllo delle versioni non possono essere risolti mediante l'esecuzione side-by-side.</summary>
    </member>
    <member name="F:System.Runtime.Versioning.ComponentGuaranteesOptions.None">
      <summary>Lo sviluppatore non garantisce la compatibilità fra versioni. I consumer del componente, del tipo o del membro devono prevedere la possibilità che le versioni future interrompano il funzionamento del client esistente.</summary>
    </member>
    <member name="F:System.Runtime.Versioning.ComponentGuaranteesOptions.SideBySide">
      <summary>Il componente è stato testato per il funzionamento in caso di caricamento di più versioni dell'assembly nello stesso dominio applicazione. Le versioni future possono interrompere la compatibilità. Tuttavia, quando vengono apportate modifiche in grado di interrompere la compatibilità, la versione precedente non viene modificata ma continua a esistere accanto alla nuova versione.</summary>
    </member>
    <member name="F:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable">
      <summary>Lo sviluppatore garantisce una compatibilità stabile fra versioni. I consumer del tipo hanno la garanzia che le versioni future non interromperanno il funzionamento del client esistente. Tuttavia, se il client esistente viene interrotto senza aver utilizzato il tipo nelle proprie interfacce, questo problema può essere risolto mediante l'esecuzione side-by-side.</summary>
    </member>
    <member name="T:System.Runtime.Versioning.FrameworkName">
      <summary>Rappresenta il nome della versione di .NET Framework.</summary>
    </member>
    <member name="M:System.Runtime.Versioning.FrameworkName.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Versioning.FrameworkName" /> da una stringa che contiene informazioni su una versione di .NET Framework.</summary>
      <param name="frameworkName">Stringa che contiene informazioni sulla versione di .NET Framework.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="frameworkName" /> è <see cref="F:System.String.Empty" />.  
-oppure- 
 <paramref name="frameworkName" /> è composto da meno di due componenti o da più di tre componenti.  
-oppure- 
 <paramref name="frameworkName" /> non include un numero di versione principale e secondaria.  
In alternativa 
 <paramref name="frameworkName" /> non include un numero di versione valido.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="frameworkName" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Versioning.FrameworkName.#ctor(System.String,System.Version)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Versioning.FrameworkName" /> da una stringa e un oggetto <see cref="T:System.Version" /> che identifica una versione della .NET Framework.</summary>
      <param name="identifier">Stringa che identifica una versione di .NET Framework.</param>
      <param name="version">Oggetto che contiene informazioni sulla versione di .NET Framework.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="identifier" /> è <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identifier" /> è <see langword="null" />.  
In alternativa 
 <paramref name="version" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Versioning.FrameworkName.#ctor(System.String,System.Version,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Versioning.FrameworkName" /> da una stringa, un oggetto <see cref="T:System.Version" /> che identifica una versione di .NET Framework e un nome di profilo.</summary>
      <param name="identifier">Stringa che identifica una versione di .NET Framework.</param>
      <param name="version">Oggetto che contiene informazioni sulla versione di .NET Framework.</param>
      <param name="profile">Nome profilo.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="identifier" /> è <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identifier" /> è <see langword="null" />.  
-oppure- 
 <paramref name="version" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Versioning.FrameworkName.Equals(System.Object)">
      <summary>Restituisce un valore che indica se questa istanza <see cref="T:System.Runtime.Versioning.FrameworkName" /> rappresenta la stessa versione di .NET Framework di un oggetto specificato.</summary>
      <param name="obj">Oggetto da confrontare con l'istanza corrente della classe.</param>
      <returns>
        <see langword="true" /> se ogni componente dell'oggetto <see cref="T:System.Runtime.Versioning.FrameworkName" /> corrente corrisponde al componente corrispondente di <paramref name="obj" />; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Versioning.FrameworkName.Equals(System.Runtime.Versioning.FrameworkName)">
      <summary>Restituisce un valore che indica se questa istanza <see cref="T:System.Runtime.Versioning.FrameworkName" /> rappresenta la stessa versione di .NET Framework di una istanza <see cref="T:System.Runtime.Versioning.FrameworkName" /> specificata.</summary>
      <param name="other">Oggetto da confrontare con l'istanza corrente della classe.</param>
      <returns>
        <see langword="true" /> se ogni componente dell'oggetto <see cref="T:System.Runtime.Versioning.FrameworkName" /> corrente corrisponde al componente corrispondente di <paramref name="other" />; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Versioning.FrameworkName.FullName">
      <summary>Ottiene il nome completo oggetto <see cref="T:System.Runtime.Versioning.FrameworkName" />.</summary>
      <returns>Nome completo di questo oggetto <see cref="T:System.Runtime.Versioning.FrameworkName" />.</returns>
    </member>
    <member name="M:System.Runtime.Versioning.FrameworkName.GetHashCode">
      <summary>Restituisce il codice hash dell'oggetto <see cref="T:System.Runtime.Versioning.FrameworkName" />.</summary>
      <returns>Signed Integer a 32 bit che rappresenta il codice hash di questa istanza.</returns>
    </member>
    <member name="P:System.Runtime.Versioning.FrameworkName.Identifier">
      <summary>Ottiene l'identificatore di questo oggetto <see cref="T:System.Runtime.Versioning.FrameworkName" />.</summary>
      <returns>Identificatore di questo oggetto <see cref="T:System.Runtime.Versioning.FrameworkName" />.</returns>
    </member>
    <member name="M:System.Runtime.Versioning.FrameworkName.op_Equality(System.Runtime.Versioning.FrameworkName,System.Runtime.Versioning.FrameworkName)">
      <summary>Restituisce un valore che indica se due oggetti <see cref="T:System.Runtime.Versioning.FrameworkName" /> rappresentano la stessa versione di .NET Framework.</summary>
      <param name="left">Primo oggetto da confrontare.</param>
      <param name="right">Secondo oggetto da confrontare.</param>
      <returns>
        <see langword="true" /> se i parametri <paramref name="left" /> e <paramref name="right" /> rappresentano la stessa versione di .NET Framework; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Versioning.FrameworkName.op_Inequality(System.Runtime.Versioning.FrameworkName,System.Runtime.Versioning.FrameworkName)">
      <summary>Restituisce un valore che indica se due oggetti <see cref="T:System.Runtime.Versioning.FrameworkName" /> rappresentano diverse versioni di .NET Framework.</summary>
      <param name="left">Primo oggetto da confrontare.</param>
      <param name="right">Secondo oggetto da confrontare.</param>
      <returns>
        <see langword="true" /> se i parametri <paramref name="left" /> e <paramref name="right" /> rappresentano diverse versioni di .NET Framework; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Versioning.FrameworkName.Profile">
      <summary>Ottiene il nome del profilo di questo oggetto <see cref="T:System.Runtime.Versioning.FrameworkName" />.</summary>
      <returns>Nome del profilo di questo oggetto <see cref="T:System.Runtime.Versioning.FrameworkName" />.</returns>
    </member>
    <member name="M:System.Runtime.Versioning.FrameworkName.ToString">
      <summary>Restituisce la rappresentazione di stringa dell'oggetto <see cref="T:System.Runtime.Versioning.FrameworkName" />.</summary>
      <returns>Stringa che rappresenta questo oggetto <see cref="T:System.Runtime.Versioning.FrameworkName" />.</returns>
    </member>
    <member name="P:System.Runtime.Versioning.FrameworkName.Version">
      <summary>Ottiene la versione di questo oggetto <see cref="T:System.Runtime.Versioning.FrameworkName" />.</summary>
      <returns>Oggetto che contiene informazioni di versione su questo oggetto <see cref="T:System.Runtime.Versioning.FrameworkName" />.</returns>
    </member>
    <member name="T:System.Runtime.Versioning.ResourceConsumptionAttribute">
      <summary>Specifica la risorsa utilizzata da un membro di una classe. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Runtime.Versioning.ResourceConsumptionAttribute.#ctor(System.Runtime.Versioning.ResourceScope)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Versioning.ResourceConsumptionAttribute" /> che specifica l'ambito della risorsa utilizzata.</summary>
      <param name="resourceScope">Oggetto <see cref="T:System.Runtime.Versioning.ResourceScope" /> per la risorsa utilizzata.</param>
    </member>
    <member name="M:System.Runtime.Versioning.ResourceConsumptionAttribute.#ctor(System.Runtime.Versioning.ResourceScope,System.Runtime.Versioning.ResourceScope)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Versioning.ResourceConsumptionAttribute" /> che specifica l'ambito della risorsa utilizzata e l'ambito del tipo di utilizzo.</summary>
      <param name="resourceScope">Oggetto <see cref="T:System.Runtime.Versioning.ResourceScope" /> per la risorsa utilizzata.</param>
      <param name="consumptionScope">Oggetto <see cref="T:System.Runtime.Versioning.ResourceScope" /> utilizzato da questo membro.</param>
    </member>
    <member name="P:System.Runtime.Versioning.ResourceConsumptionAttribute.ConsumptionScope">
      <summary>Ottiene l'ambito di utilizzo per questo membro.</summary>
      <returns>Oggetto <see cref="T:System.Runtime.Versioning.ResourceScope" /> che specifica l'ambito di risorsa utilizzato da questo membro.</returns>
    </member>
    <member name="P:System.Runtime.Versioning.ResourceConsumptionAttribute.ResourceScope">
      <summary>Ottiene l'ambito di risorsa per la risorsa utilizzata.</summary>
      <returns>Oggetto <see cref="T:System.Runtime.Versioning.ResourceScope" /> che specifica l'ambito di risorsa del membro utilizzato.</returns>
    </member>
    <member name="T:System.Runtime.Versioning.ResourceExposureAttribute">
      <summary>Specifica l'esposizione delle risorse per un membro di una classe. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Runtime.Versioning.ResourceExposureAttribute.#ctor(System.Runtime.Versioning.ResourceScope)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Versioning.ResourceExposureAttribute" /> con il livello di esposizione specificato.</summary>
      <param name="exposureLevel">Ambito della risorsa.</param>
    </member>
    <member name="P:System.Runtime.Versioning.ResourceExposureAttribute.ResourceExposureLevel">
      <summary>Ottiene l'ambito di esposizione della risorsa.</summary>
      <returns>Oggetto <see cref="T:System.Runtime.Versioning.ResourceScope" />.</returns>
    </member>
    <member name="T:System.Runtime.Versioning.ResourceScope">
      <summary>Identifica l'ambito di una risorsa condivisibile.</summary>
    </member>
    <member name="F:System.Runtime.Versioning.ResourceScope.AppDomain">
      <summary>Lo stato è condiviso da oggetti all'interno di un oggetto <see cref="T:System.AppDomain" />.</summary>
    </member>
    <member name="F:System.Runtime.Versioning.ResourceScope.Assembly">
      <summary>La risorsa è visibile nell'ambito di un assembly.</summary>
    </member>
    <member name="F:System.Runtime.Versioning.ResourceScope.Library">
      <summary>Lo stato è condiviso da oggetti all'interno di una libreria.</summary>
    </member>
    <member name="F:System.Runtime.Versioning.ResourceScope.Machine">
      <summary>Lo stato è condiviso da oggetti all'interno di una macchina.</summary>
    </member>
    <member name="F:System.Runtime.Versioning.ResourceScope.None">
      <summary>Non sono presenti stati condivisi.</summary>
    </member>
    <member name="F:System.Runtime.Versioning.ResourceScope.Private">
      <summary>La risorsa è visibile solo al tipo.</summary>
    </member>
    <member name="F:System.Runtime.Versioning.ResourceScope.Process">
      <summary>Lo stato è condiviso all'interno di un processo.</summary>
    </member>
    <member name="T:System.Runtime.Versioning.VersioningHelper">
      <summary>Fornisce metodi che consentono agli sviluppatori di scrivere codice version-safe. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Runtime.Versioning.VersioningHelper.MakeVersionSafeName(System.String,System.Runtime.Versioning.ResourceScope,System.Runtime.Versioning.ResourceScope)">
      <summary>Restituisce un nome version-safe basato sul nome di risorsa specificato e sull'origine prevista per l'utilizzo delle risorse.</summary>
      <param name="name">Nome della risorsa.</param>
      <param name="from">Ambito della risorsa.</param>
      <param name="to">Ambito desiderato per l'utilizzo delle risorse.</param>
      <returns>Nome version-safe.</returns>
    </member>
    <member name="M:System.Runtime.Versioning.VersioningHelper.MakeVersionSafeName(System.String,System.Runtime.Versioning.ResourceScope,System.Runtime.Versioning.ResourceScope,System.Type)">
      <summary>Restituisce un nome version-safe basato sul nome di risorsa specificato, l'ambito previsto per l'utilizzo della risorsa e il tipo che utilizza la risorsa.</summary>
      <param name="name">Nome della risorsa.</param>
      <param name="from">Inizio dell'intervallo dell'ambito.</param>
      <param name="to">Fine dell'intervallo dell'ambito.</param>
      <param name="type">Oggetto <see cref="T:System.Type" /> della risorsa.</param>
      <returns>Nome version-safe.</returns>
      <exception cref="T:System.ArgumentException">I valori per <paramref name="from" /> e <paramref name="to" /> non sono validi. Il tipo di risorsa nell'enumerazione <see cref="T:System.Runtime.Versioning.ResourceScope" /> passa da un tipo più restrittivo a uno più generale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> è <see langword="null" />.</exception>
    </member>
    <member name="T:System.Security.IPermission">
      <summary>Definisce metodi implementati da tipi di autorizzazioni.</summary>
    </member>
    <member name="M:System.Security.IPermission.Copy">
      <summary>Crea e restituisce una copia identica dell'autorizzazione corrente.</summary>
      <returns>Copia dell'autorizzazione corrente.</returns>
    </member>
    <member name="M:System.Security.IPermission.Demand">
      <summary>Genera un'eccezione <see cref="T:System.Security.SecurityException" /> in fase di esecuzione se non viene soddisfatto il requisito di sicurezza.</summary>
    </member>
    <member name="M:System.Security.IPermission.Intersect(System.Security.IPermission)">
      <summary>Crea e restituisce un'autorizzazione che rappresenta l'intersezione tra l'autorizzazione corrente e quella specificata.</summary>
      <param name="target">Autorizzazione da intersecare con quella corrente. Deve essere dello stesso tipo dell'autorizzazione corrente.</param>
      <returns>Nuova autorizzazione che rappresenta l'intersezione dell'autorizzazione corrente e di quella specificata. La nuova autorizzazione è <see langword="null" /> se l'intersezione è vuota.</returns>
      <exception cref="T:System.ArgumentException">Il parametro <paramref name="target" /> non è <see langword="null" /> e non è un'istanza della stessa classe dell'autorizzazione corrente.</exception>
    </member>
    <member name="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina se l'autorizzazione corrente è un subset di quella specificata.</summary>
      <param name="target">Autorizzazione da testare per la relazione del subset. Questa autorizzazione deve essere dello stesso tipo di quella corrente.</param>
      <returns>
        <see langword="true" /> se l'autorizzazione corrente è un subset di quella specificata; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Il parametro <paramref name="target" /> non è <see langword="null" /> e non è dello stesso tipo dell'autorizzazione corrente.</exception>
    </member>
    <member name="M:System.Security.IPermission.Union(System.Security.IPermission)">
      <summary>Crea un'autorizzazione che rappresenta l'unione dell'autorizzazione corrente e di quella specificata.</summary>
      <param name="target">Autorizzazione da combinare con quella corrente. Deve essere dello stesso tipo dell'autorizzazione corrente.</param>
      <returns>Nuova autorizzazione che rappresenta l'unione dell'autorizzazione corrente e di quella specificata.</returns>
      <exception cref="T:System.ArgumentException">Il parametro <paramref name="target" /> non è <see langword="null" /> e non è dello stesso tipo dell'autorizzazione corrente.</exception>
    </member>
    <member name="T:System.Security.ISecurityEncodable">
      <summary>Definisce i metodi per la conversione dello stato dell'oggetto di autorizzazione in e da una rappresentazione di elemento XML.</summary>
    </member>
    <member name="M:System.Security.ISecurityEncodable.FromXml(System.Security.SecurityElement)">
      <summary>Ricostruisce un oggetto di sicurezza con uno stato specificato da una codifica XML.</summary>
      <param name="e">Codifica XML da usare per ricostruire l'oggetto di sicurezza.</param>
    </member>
    <member name="M:System.Security.ISecurityEncodable.ToXml">
      <summary>Crea una codifica XML dell'oggetto di sicurezza e del suo stato corrente.</summary>
      <returns>Codifica XML dell'oggetto di sicurezza, che include le eventuali informazioni sullo stato.</returns>
    </member>
    <member name="T:System.Security.IStackWalk">
      <summary>Gestisce il percorso dello stack che determina se tutti i chiamanti nello stack di chiamate dispongono delle autorizzazioni necessarie per accedere a una risorsa protetta.</summary>
    </member>
    <member name="M:System.Security.IStackWalk.Assert">
      <summary>Dichiara che il codice chiamante può accedere alla ricorsa identificata dall'oggetto autorizzazioni corrente, anche se ai chiamanti più in alto nello stack non è stata concessa l'autorizzazione ad accedere alla risorsa.</summary>
      <exception cref="T:System.Security.SecurityException">Il codice chiamante non ha <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Assertion" />.</exception>
    </member>
    <member name="M:System.Security.IStackWalk.Demand">
      <summary>In fase di esecuzione determina se a tutti i chiamanti dello stack di chiamate è stata concessa l'autorizzazione specificata dall'oggetto di autorizzazione corrente.</summary>
      <exception cref="T:System.Security.SecurityException">Un chiamante nella parte superiore dello stack di chiamate non dispone dell'autorizzazione specificata dall'oggetto di autorizzazione corrente.  
In alternativa 
Un chiamante nello stack di chiamate ha chiamato <see cref="M:System.Security.IStackWalk.Deny" /> sull'oggetto di autorizzazione corrente.</exception>
    </member>
    <member name="M:System.Security.IStackWalk.Deny">
      <summary>Determina l'annullamento di tutti i metodi <see cref="M:System.Security.IStackWalk.Demand" /> che attraversano il codice chiamante per l'oggetto corrente.</summary>
    </member>
    <member name="M:System.Security.IStackWalk.PermitOnly">
      <summary>Determina l'annullamento di tutti i metodi <see cref="M:System.Security.IStackWalk.Demand" /> che attraversano il codice chiamante per tutti gli oggetti ad eccezione dell'oggetto corrente, anche se il codice nella parte superiore dello stack di chiamate dispone dell'autorizzazione necessaria per accedere ad altre risorse.</summary>
    </member>
    <member name="T:System.Security.Permissions.CodeAccessSecurityAttribute">
      <summary>Specifica la classe Attribute di base per la sicurezza per l’accesso al codice.</summary>
    </member>
    <member name="M:System.Security.Permissions.CodeAccessSecurityAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inizializza una nuova istanza di <see cref="T:System.Security.Permissions.CodeAccessSecurityAttribute" /> con l'oggetto <see cref="T:System.Security.Permissions.SecurityAction" /> specificato.</summary>
      <param name="action">Uno dei valori di <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="T:System.Security.Permissions.PermissionState">
      <summary>Specifica se un'autorizzazione ha accesso completo o nessun accesso alle risorse durante la creazione.</summary>
    </member>
    <member name="F:System.Security.Permissions.PermissionState.None">
      <summary>Nessun accesso alla risorsa protetta dall'autorizzazione.</summary>
    </member>
    <member name="F:System.Security.Permissions.PermissionState.Unrestricted">
      <summary>Accesso completo alla risorsa protetta dall'autorizzazione.</summary>
    </member>
    <member name="T:System.Security.Permissions.SecurityAction">
      <summary>Specifica le azioni relative alla sicurezza che possono essere eseguite con la sicurezza dichiarativa.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityAction.Assert">
      <summary>Il codice chiamante consente di accedere alla risorsa identificata dall'oggetto di autorizzazione corrente, anche se i primi chiamanti dello stack non sono autorizzati ad accedere alla risorsa (vedere Uso del metodo Assert).</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityAction.Demand">
      <summary>A tutti i chiamanti nella parte superiore dello stack di chiamate deve essere concessa l'autorizzazione specificata dall'oggetto di autorizzazione corrente.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityAction.Deny">
      <summary>Ai chiamanti non viene consentito di accedere alla risorsa specificata dall'oggetto di autorizzazione corrente, anche se sono autorizzati ad accedere alla risorsa (vedere Uso del metodo Deny).</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
      <summary>La classe derivata che eredita la classe o con cui un metodo viene sottoposto a overriding deve disporre dell'autorizzazione specificata.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityAction.LinkDemand">
      <summary>È necessario concedere al chiamante diretto l'autorizzazione specificata. Non usare nell'oggetto .NET Framework 4. Per un'attendibilità totale, usare invece <see cref="T:System.Security.SecurityCriticalAttribute" />; per un'attendibilità parziale, usare <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityAction.PermitOnly">
      <summary>È possibile accedere solo alle risorse specificate dall'oggetto di autorizzazione, anche se al codice è stata concessa l'autorizzazione per accedere ad altre risorse.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityAction.RequestMinimum">
      <summary>Richiesta delle autorizzazioni minime necessarie per l'esecuzione del codice. Questa azione può essere usata solo nell'ambito dell'assembly.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityAction.RequestOptional">
      <summary>Richiesta di autorizzazioni aggiuntive facoltative (non necessarie per l'esecuzione). Con questa richiesta viene implicitamente rifiutata ogni altra autorizzazione che non sia stata esplicitamente richiesta. Questa azione può essere usata solo nell'ambito dell'assembly.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityAction.RequestRefuse">
      <summary>Richiesta per impedire che al codice chiamante vengano concesse autorizzazioni utilizzabili in modo improprio. Questa azione può essere usata solo nell'ambito dell'assembly.</summary>
    </member>
    <member name="T:System.Security.Permissions.SecurityAttribute">
      <summary>Specifica la classe Attribute di base per la sicurezza dichiarativa dalla quale deriva <see cref="T:System.Security.Permissions.CodeAccessSecurityAttribute" />.</summary>
    </member>
    <member name="M:System.Security.Permissions.SecurityAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inizializza una nuova istanza di <see cref="T:System.Security.Permissions.SecurityAttribute" /> con l'oggetto <see cref="T:System.Security.Permissions.SecurityAction" /> specificato.</summary>
      <param name="action">Uno dei valori di <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="P:System.Security.Permissions.SecurityAttribute.Action">
      <summary>Ottiene o imposta un'azione di sicurezza.</summary>
      <returns>Uno dei valori di <see cref="T:System.Security.Permissions.SecurityAction" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.SecurityAttribute.CreatePermission">
      <summary>In caso di override in una classe derivata, crea un oggetto autorizzazioni che può quindi essere serializzato in formato binario e archiviato definitivamente con <see cref="T:System.Security.Permissions.SecurityAction" /> nei metadati di un assembly.</summary>
      <returns>Oggetto autorizzazioni serializzabile.</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityAttribute.Unrestricted">
      <summary>Ottiene o imposta un valore che indica se esiste una dichiarazione di autorizzazione completa, ovvero senza restrizioni, alla risorsa protetta dall’attributo.</summary>
      <returns>
        <see langword="true" /> se la dichiarazione di autorizzazione alla risorsa protetta esiste; <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="T:System.Security.Permissions.SecurityPermissionAttribute">
      <summary>Consente di applicare azioni di sicurezza per <see cref="T:System.Security.Permissions.SecurityPermission" /> al codice usando la sicurezza dichiarativa. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.Permissions.SecurityPermissionAttribute" /> con l'oggetto <see cref="T:System.Security.Permissions.SecurityAction" /> specificato.</summary>
      <param name="action">Uno dei valori di <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermissionAttribute.Assertion">
      <summary>Ottiene o imposta un valore che indica se è stata dichiarata l'autorizzazione per l'asserzione secondo la quale tutti i chiamanti di questo codice dispongono dell'autorizzazione necessaria per l'operazione.</summary>
      <returns>
        <see langword="true" /> se l'autorizzazione per l'asserzione è stata dichiarata; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermissionAttribute.BindingRedirects">
      <summary>Ottiene o imposta un valore che indica se il codice dispone dell'autorizzazione necessaria per eseguire il reindirizzamento dell'associazione nel file di configurazione dell'applicazione.</summary>
      <returns>
        <see langword="true" /> se il codice è in grado di eseguire il reindirizzamento dell'associazione; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermissionAttribute.ControlAppDomain">
      <summary>Ottiene o imposta un valore che indica se è dichiarata l'autorizzazione per modificare <see cref="T:System.AppDomain" />.</summary>
      <returns>
        <see langword="true" /> se l'autorizzazione per modificare <see cref="T:System.AppDomain" /> è dichiarata; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermissionAttribute.ControlDomainPolicy">
      <summary>Ottiene o imposta un valore che indica se è dichiarata l'autorizzazione per modificare o gestire i criteri di sicurezza del dominio.</summary>
      <returns>
        <see langword="true" /> se l'autorizzazione per modificare o gestire i criteri di sicurezza in un dominio applicazione è dichiarata; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermissionAttribute.ControlEvidence">
      <summary>Ottiene o imposta un valore che indica se è dichiarata l'autorizzazione per alterare o modificare l'evidenza.</summary>
      <returns>
        <see langword="true" /> se è dichiarata la possibilità di alterare o modificare l'evidenza; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermissionAttribute.ControlPolicy">
      <summary>Ottiene o imposta un valore che indica se è dichiarata l'autorizzazione per visualizzare e modificare i criteri di sicurezza.</summary>
      <returns>
        <see langword="true" /> se l'autorizzazione per modificare i criteri di sicurezza è dichiarata; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermissionAttribute.ControlPrincipal">
      <summary>Ottiene o imposta un valore che indica se è stata dichiarata l'autorizzazione per modificare l'entità corrente.</summary>
      <returns>
        <see langword="true" /> se l'autorizzazione per modificare l'entità corrente è stata dichiarata; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermissionAttribute.ControlThread">
      <summary>Ottiene o imposta un valore che indica se è dichiarata l'autorizzazione per modificare thread.</summary>
      <returns>
        <see langword="true" /> se l'autorizzazione per modificare thread è dichiarata; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermissionAttribute.CreatePermission">
      <summary>Crea e restituisce un nuovo oggetto <see cref="T:System.Security.Permissions.SecurityPermission" />.</summary>
      <returns>Oggetto <see cref="T:System.Security.Permissions.SecurityPermission" /> che corrisponde a questo attributo.</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermissionAttribute.Execution">
      <summary>Ottiene o imposta un valore che indica se è stata dichiarata l'autorizzazione per l'esecuzione del codice.</summary>
      <returns>
        <see langword="true" /> se l'autorizzazione per l'esecuzione del codice è stata dichiarata; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermissionAttribute.Flags">
      <summary>Ottiene o imposta tutti i flag di autorizzazione che comprendono le autorizzazioni <see cref="T:System.Security.Permissions.SecurityPermission" />.</summary>
      <returns>Uno o più di valori <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /> combinati usando un operatore OR.</returns>
      <exception cref="T:System.ArgumentException">È stato effettuato un tentativo di impostare la proprietà su un valore non valido. Per i valori validi, vedere <see cref="T:System.Security.Permissions.SecurityPermissionFlag" />.</exception>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermissionAttribute.Infrastructure">
      <summary>Ottiene o imposta un valore che indica se il codice può essere inserito nell'infrastruttura Common Language Runtime, ad esempio, aggiungendo Remoting Context Sinks, Envoy Sinks e Dynamic Sinks.</summary>
      <returns>
        <see langword="true" /> se il codice può essere inserito nell'infrastruttura Common Language Runtime; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermissionAttribute.RemotingConfiguration">
      <summary>Ottiene o imposta un valore che indica se nel codice possono essere configurati canali e tipi in remoto.</summary>
      <returns>
        <see langword="true" /> se nel codice possono essere configurati canali e tipi in remoto; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermissionAttribute.SerializationFormatter">
      <summary>Ottiene o imposta un valore che indica se nel codice è possibile utilizzare un formattatore di serializzazione per serializzare o deserializzare un oggetto.</summary>
      <returns>
        <see langword="true" /> se nel codice è possibile utilizzare un formattatore di serializzazione per serializzare o deserializzare un oggetto; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermissionAttribute.SkipVerification">
      <summary>Ottiene o imposta un valore che indica se è stata dichiarata l'autorizzazione per ignorare la verifica del codice.</summary>
      <returns>
        <see langword="true" /> se l'autorizzazione per ignorare la verifica del codice è stata dichiarata; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">
      <summary>Ottiene o imposta un valore che indica se è stata dichiarata l'autorizzazione per chiamare codice non gestito.</summary>
      <returns>
        <see langword="true" /> se l'autorizzazione per chiamare codice non gestito è stata dichiarata; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Security.Permissions.SecurityPermissionFlag">
      <summary>Specifica i flag di accesso per l'oggetto autorizzazione di sicurezza.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.AllFlags">
      <summary>Stato senza restrizioni dell'autorizzazione.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.Assertion">
      <summary>Capacità di asserire che tutti i chiamanti del codice dispongono dell'autorizzazione necessaria per l'operazione.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.BindingRedirects">
      <summary>Autorizzazione ad eseguire un reindirizzamento esplicito dell'associazione nel file di configurazione dell'applicazione. Include il reindirizzamento di assembly di .NET Framework che sono stati unificati, oltre a quello di altri assembly trovati al di fuori di .NET Framework.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.ControlAppDomain">
      <summary>Capacità di creare e manipolare un oggetto <see cref="T:System.AppDomain" />.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.ControlDomainPolicy">
      <summary>Capacità di specificare i criteri del dominio.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence">
      <summary>Capacità di fornire l'evidenza, inclusa la possibilità di alterare le prove di Common Language Runtime.
Si tratta di un'autorizzazione efficace che deve essere concessa esclusivamente a codice altamente attendibile.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy">
      <summary>Capacità di visualizzare e modificare i criteri.
Si tratta di un'autorizzazione efficace che deve essere concessa esclusivamente a codice altamente attendibile.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal">
      <summary>Capacità di manipolare gli oggetti Principal.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.ControlThread">
      <summary>Capacità di eseguire alcune operazioni avanzate sui thread.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.Execution">
      <summary>Autorizzazione a eseguire il codice. Senza questa autorizzazione, il codice gestito non verrà eseguito.
Questo flag non ha alcun effetto se usato in modo dinamico con i modificatori di stack, ad esempio <see cref="M:System.Security.CodeAccessPermission.Deny" />, <see cref="M:System.Security.CodeAccessPermission.Assert" /> e <see cref="M:System.Security.CodeAccessPermission.PermitOnly" />.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure">
      <summary>Autorizzazione a inserire il codice nell’infrastruttura Common Language Runtime, ad esempio aggiungendo sink di contesto remoto, di invio e dinamici.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.NoFlags">
      <summary>Nessun accesso di sicurezza.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration">
      <summary>Autorizzazione alla configurazione di canali e tipi remoti.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter">
      <summary>Capacità di fornire servizi di serializzazione. Utilizzato dai formattatori di serializzazione.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.SkipVerification">
      <summary>Capacità di ignorare la verifica del codice in questo assembly. Se viene concessa questa autorizzazione, sarà possibile eseguire un codice non verificabile.
Si tratta di un'autorizzazione efficace che deve essere concessa esclusivamente a codice altamente attendibile.
Questo flag non ha alcun effetto se usato in modo dinamico con i modificatori di stack, ad esempio <see cref="M:System.Security.CodeAccessPermission.Deny" />, <see cref="M:System.Security.CodeAccessPermission.Assert" /> e <see cref="M:System.Security.CodeAccessPermission.PermitOnly" />.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode">
      <summary>Capacità di richiamare codice non gestito.
 Poiché il codice non gestito consente potenzialmente di ignorare altre autorizzazioni, si tratta di un'autorizzazione pericolosa che deve essere concessa solo a codice altamente attendibile. Viene usata per applicazioni come la chiamata di codice nativo tramite PInvoke o tramite l'interoperabilità COM.</summary>
    </member>
    <member name="T:System.Security.PermissionSet">
      <summary>Rappresenta una raccolta che contiene molti tipi diversi di autorizzazioni.</summary>
    </member>
    <member name="M:System.Security.PermissionSet.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.PermissionSet" /> con l'oggetto <see cref="T:System.Security.Permissions.PermissionState" /> specificato.</summary>
      <param name="state">Uno dei valori dell'enumerazione che specifica l'accesso del set di autorizzazioni alle risorse.</param>
      <exception cref="T:System.ArgumentException">Il parametro <paramref name="state" /> non è un valore valido di <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
    </member>
    <member name="M:System.Security.PermissionSet.#ctor(System.Security.PermissionSet)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.PermissionSet" /> usando come valori iniziali quelli del parametro <paramref name="permSet" />.</summary>
      <param name="permSet">Set da cui ottenere il valore del nuovo oggetto <see cref="T:System.Security.PermissionSet" /> oppure <see langword="null" /> per creare un oggetto <see cref="T:System.Security.PermissionSet" /> vuoto.</param>
    </member>
    <member name="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)">
      <summary>Aggiunge un'autorizzazione specificata a <see cref="T:System.Security.PermissionSet" />.</summary>
      <param name="perm">Autorizzazione da aggiungere.</param>
      <returns>Unione dell'autorizzazione aggiunta e di eventuali autorizzazioni dello stesso tipo già esistenti in <see cref="T:System.Security.PermissionSet" />.</returns>
      <exception cref="T:System.InvalidOperationException">Il metodo viene chiamato da <see cref="T:System.Security.ReadOnlyPermissionSet" />.</exception>
    </member>
    <member name="M:System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)">
      <summary>Aggiunge un'autorizzazione specificata a <see cref="T:System.Security.PermissionSet" />.</summary>
      <param name="perm">Autorizzazione da aggiungere.</param>
      <returns>L'unione dell'autorizzazione aggiunta e di eventuali autorizzazioni dello stesso tipo, già esistente in <see cref="T:System.Security.PermissionSet" /> o <see langword="null" /> se <paramref name="perm" /> è <see langword="null" />.</returns>
      <exception cref="T:System.InvalidOperationException">Il metodo viene chiamato da <see cref="T:System.Security.ReadOnlyPermissionSet" />.</exception>
    </member>
    <member name="M:System.Security.PermissionSet.Assert">
      <summary>Dichiara che il codice chiamante può accedere alla risorsa protetta da una richiesta di autorizzazione tramite il codice che chiama il metodo, anche se ai chiamanti più in alto nello stack non è stata concessa l'autorizzazione per accedere alla risorsa. L'uso di <see cref="M:System.Security.PermissionSet.Assert" /> può creare problemi di sicurezza.</summary>
      <exception cref="T:System.Security.SecurityException">L'istanza di <see cref="T:System.Security.PermissionSet" /> dichiarata non è stata concessa al codice di asserzione.  
-oppure- 
Esiste già un oggetto <see cref="M:System.Security.PermissionSet.Assert" /> attivo per il fotogramma corrente.</exception>
    </member>
    <member name="M:System.Security.PermissionSet.ContainsNonCodeAccessPermissions">
      <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Security.PermissionSet" /> contiene autorizzazioni che non sono derivate da <see cref="T:System.Security.CodeAccessPermission" />.</summary>
      <returns>
        <see langword="true" /> se <see cref="T:System.Security.PermissionSet" /> contiene autorizzazioni che non sono derivate da <see cref="T:System.Security.CodeAccessPermission" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.ConvertPermissionSet(System.String,System.Byte[],System.String)">
      <summary>Converte un oggetto <see cref="T:System.Security.PermissionSet" /> codificato da un formato di codifica XML in un altro formato di codifica XML.</summary>
      <param name="inFormat">Stringa che rappresenta uno dei formati di codifica seguenti: ASCII, Unicode o Binary. I valori possibili sono "XMLASCII" o "XML", "XMLUNICODE" e "BINARY".</param>
      <param name="inData">Set di autorizzazioni con codifica XML.</param>
      <param name="outFormat">Stringa che rappresenta uno dei formati di codifica seguenti: ASCII, Unicode o Binary. I valori possibili sono "XMLASCII" o "XML", "XMLUNICODE" e "BINARY".</param>
      <returns>Set di autorizzazioni crittografato con il formato di output specificato.</returns>
      <exception cref="T:System.NotImplementedException">In tutti i casi.</exception>
    </member>
    <member name="M:System.Security.PermissionSet.Copy">
      <summary>Crea una copia di <see cref="T:System.Security.PermissionSet" />.</summary>
      <returns>Copia di <see cref="T:System.Security.PermissionSet" />.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.CopyTo(System.Array,System.Int32)">
      <summary>Copia gli oggetti di autorizzazione del set nel percorso indicato in un oggetto <see cref="T:System.Array" />.</summary>
      <param name="array">Matrice di destinazione in cui eseguire la copia.</param>
      <param name="index">La posizione iniziale nella matrice da cui iniziare la copia (in base zero).</param>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Il parametro <paramref name="array" /> ha più di una dimensione.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Il parametro <paramref name="index" /> è compreso nell'intervallo del parametro <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Security.PermissionSet.Count">
      <summary>Ottiene il numero di oggetti autorizzazioni contenuti nel set di autorizzazioni.</summary>
      <returns>Numero di oggetti autorizzazioni contenuti nell'oggetto <see cref="T:System.Security.PermissionSet" />.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.Demand">
      <summary>Forza un oggetto <see cref="T:System.Security.SecurityException" /> in fase di esecuzione se a tutti i chiamanti nella parte superiore dello stack di chiamate non sono state concesse le autorizzazioni specificate dall'istanza corrente.</summary>
      <exception cref="T:System.Security.SecurityException">Uno dei chiamanti nella sequenza delle chiamate non ha l'autorizzazione richiesta.</exception>
    </member>
    <member name="M:System.Security.PermissionSet.Deny">
      <summary>Causa la non riuscita di tutti i metodi <see cref="M:System.Security.PermissionSet.Demand" /> che attraversano il codice chiamante per un'autorizzazione che presenta un'intersezione con un'autorizzazione di un tipo contenuto nell'oggetto <see cref="T:System.Security.PermissionSet" /> corrente.</summary>
      <exception cref="T:System.Security.SecurityException">Una precedente chiamata a <see cref="M:System.Security.PermissionSet.Deny" /> ha già limitato le autorizzazioni per lo stack frame corrente.</exception>
    </member>
    <member name="M:System.Security.PermissionSet.Equals(System.Object)">
      <summary>Determina se l'oggetto <see cref="T:System.Security.PermissionSet" /> o <see cref="T:System.Security.NamedPermissionSet" /> specificato è uguale all'oggetto <see cref="T:System.Security.PermissionSet" /> corrente.</summary>
      <param name="o">Oggetto da confrontare con l'oggetto <see cref="T:System.Security.PermissionSet" /> corrente.</param>
      <returns>
        <see langword="true" /> se l'oggetto specificato è uguale all'oggetto <see cref="T:System.Security.PermissionSet" /> corrente. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.FromXml(System.Security.SecurityElement)">
      <summary>Ricostruisce un oggetto di sicurezza con uno stato specificato da una codifica XML.</summary>
      <param name="et">Codifica XML da usare per ricostruire l'oggetto di sicurezza.</param>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="et" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Il parametro <paramref name="et" /> non è un elemento di autorizzazione valido.  
-oppure- 
Il numero di versione del parametro <paramref name="et" /> non è supportato.</exception>
    </member>
    <member name="M:System.Security.PermissionSet.GetEnumerator">
      <summary>Restituisce un enumeratore per le autorizzazioni del set.</summary>
      <returns>Oggetto enumeratore per le autorizzazioni del set.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.GetEnumeratorImpl">
      <summary>Restituisce un enumeratore per le autorizzazioni del set.</summary>
      <returns>Oggetto enumeratore per le autorizzazioni del set.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.GetHashCode">
      <summary>Ottiene un codice hash per l'oggetto <see cref="T:System.Security.PermissionSet" /> adatto per l'uso in algoritmi di hash e in strutture di dati, come una tabella hash.</summary>
      <returns>Codice hash per l'oggetto <see cref="T:System.Security.PermissionSet" /> corrente.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.GetPermission(System.Type)">
      <summary>Ottiene un oggetto di autorizzazione del tipo specificato, se è presente nel set.</summary>
      <param name="permClass">Tipo dell'oggetto autorizzazioni desiderato.</param>
      <returns>Copia dell'oggetto autorizzazioni del tipo specificato dal parametro <paramref name="permClass" /> contenuto in <see cref="T:System.Security.PermissionSet" /> oppure <see langword="null" /> se non esiste alcun oggetto autorizzazioni.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.GetPermissionImpl(System.Type)">
      <summary>Ottiene un oggetto di autorizzazione del tipo specificato, se è presente nel set.</summary>
      <param name="permClass">Tipo dell’oggetto di autorizzazione.</param>
      <returns>Una copia dell'oggetto di autorizzazione, del tipo specificato dal parametro <paramref name="permClass" />, contenuto in <see cref="T:System.Security.PermissionSet" />, o <see langword="null" /> se non esiste alcun oggetto di autorizzazione.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.Intersect(System.Security.PermissionSet)">
      <summary>Crea e restituisce un set di autorizzazioni che rappresenta l'intersezione tra l'oggetto <see cref="T:System.Security.PermissionSet" /> corrente e quello <see cref="T:System.Security.PermissionSet" /> specificato.</summary>
      <param name="other">Set di autorizzazioni da intersecare con l'oggetto <see cref="T:System.Security.PermissionSet" /> corrente.</param>
      <returns>Nuovo set di autorizzazioni che rappresenta l'intersezione dell'oggetto <see cref="T:System.Security.PermissionSet" /> corrente e della destinazione specificata. Questo oggetto è <see langword="null" /> se l'intersezione è vuota.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.IsEmpty">
      <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Security.PermissionSet" /> è vuoto.</summary>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="T:System.Security.PermissionSet" /> è vuoto; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.PermissionSet.IsReadOnly">
      <summary>Ottiene un valore che indica se la raccolta è di sola lettura.</summary>
      <returns>Sempre <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.IsSubsetOf(System.Security.PermissionSet)">
      <summary>Determina se l'oggetto <see cref="T:System.Security.PermissionSet" /> corrente è un subset dell'oggetto <see cref="T:System.Security.PermissionSet" /> specificato.</summary>
      <param name="target">Set di autorizzazioni da testare per la relazione di subset. Deve essere un oggetto <see cref="T:System.Security.PermissionSet" /> o <see cref="T:System.Security.NamedPermissionSet" />.</param>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="T:System.Security.PermissionSet" /> corrente è un subset del parametro <paramref name="target" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.PermissionSet.IsSynchronized">
      <summary>Ottiene un valore che indica se la raccolta è sicuramente thread-safe.</summary>
      <returns>Sempre <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.IsUnrestricted">
      <summary>Determina se <see cref="T:System.Security.PermissionSet" /> è <see langword="Unrestricted" />.</summary>
      <returns>
        <see langword="true" /> se <see cref="T:System.Security.PermissionSet" /> è <see langword="Unrestricted" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.PermitOnly">
      <summary>Causa la non riuscita di tutti i metodi <see cref="M:System.Security.PermissionSet.Demand" /> che attraversano il codice chiamante per un oggetto <see cref="T:System.Security.PermissionSet" /> che non è un subset dell'oggetto <see cref="T:System.Security.PermissionSet" /> corrente.</summary>
    </member>
    <member name="M:System.Security.PermissionSet.RemovePermission(System.Type)">
      <summary>Rimuove un'autorizzazione di un determinato tipo dal set.</summary>
      <param name="permClass">Tipo di autorizzazione da eliminare.</param>
      <returns>Autorizzazione rimossa dal set.</returns>
      <exception cref="T:System.InvalidOperationException">Il metodo viene chiamato da <see cref="T:System.Security.ReadOnlyPermissionSet" />.</exception>
    </member>
    <member name="M:System.Security.PermissionSet.RemovePermissionImpl(System.Type)">
      <summary>Rimuove un'autorizzazione di un determinato tipo dal set.</summary>
      <param name="permClass">Tipo dell’autorizzazione da rimuovere.</param>
      <returns>Autorizzazione rimossa dal set.</returns>
      <exception cref="T:System.InvalidOperationException">Il metodo viene chiamato da <see cref="T:System.Security.ReadOnlyPermissionSet" />.</exception>
    </member>
    <member name="M:System.Security.PermissionSet.RevertAssert">
      <summary>Qualsiasi <see cref="M:System.Security.CodeAccessPermission.Assert" /> precedente per il fotogramma corrente viene rimosso e non è più attivo.</summary>
      <exception cref="T:System.InvalidOperationException">Non è presente alcun oggetto <see cref="M:System.Security.CodeAccessPermission.Assert" /> precedente per il fotogramma corrente.</exception>
    </member>
    <member name="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)">
      <summary>Imposta un'autorizzazione su <see cref="T:System.Security.PermissionSet" />, sostituendo eventuali autorizzazioni esistenti dello stesso tipo.</summary>
      <param name="perm">Autorizzazione da impostare.</param>
      <returns>Autorizzazione impostata.</returns>
      <exception cref="T:System.InvalidOperationException">Il metodo viene chiamato da <see cref="T:System.Security.ReadOnlyPermissionSet" />.</exception>
    </member>
    <member name="M:System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)">
      <summary>Imposta un'autorizzazione su <see cref="T:System.Security.PermissionSet" />, sostituendo eventuali autorizzazioni esistenti dello stesso tipo.</summary>
      <param name="perm">Autorizzazione da impostare.</param>
      <returns>Autorizzazione impostata.</returns>
      <exception cref="T:System.InvalidOperationException">Il metodo viene chiamato da <see cref="T:System.Security.ReadOnlyPermissionSet" />.</exception>
    </member>
    <member name="P:System.Security.PermissionSet.SyncRoot">
      <summary>Ottiene l'oggetto radice della raccolta corrente.</summary>
      <returns>Oggetto radice della raccolta corrente.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
      <summary>Viene eseguito dopo la deserializzazione dell'intero grafico di oggetti.</summary>
      <param name="sender">Oggetto che ha avviato il callback. La funzionalità di questo parametro non è attualmente implementata.</param>
    </member>
    <member name="M:System.Security.PermissionSet.ToString">
      <summary>Restituisce una rappresentazione di stringa di <see cref="T:System.Security.PermissionSet" />.</summary>
      <returns>Rappresentazione dell'oggetto <see cref="T:System.Security.PermissionSet" />.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.ToXml">
      <summary>Crea una codifica XML dell'oggetto di sicurezza e del suo stato corrente.</summary>
      <returns>Codifica XML dell'oggetto di sicurezza, che include le eventuali informazioni sullo stato.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.Union(System.Security.PermissionSet)">
      <summary>Crea un oggetto <see cref="T:System.Security.PermissionSet" /> che rappresenta l'unione tra l'oggetto <see cref="T:System.Security.PermissionSet" /> corrente e l'oggetto <see cref="T:System.Security.PermissionSet" /> specificato.</summary>
      <param name="other">Set di autorizzazioni per formare l'unione con l'oggetto <see cref="T:System.Security.PermissionSet" /> corrente.</param>
      <returns>Nuova autorizzazione che rappresenta l'unione dell'oggetto <see cref="T:System.Security.PermissionSet" /> corrente e dell'oggetto <see cref="T:System.Security.PermissionSet" /> specificato.</returns>
    </member>
    <member name="T:System.Security.SecurityElement">
      <summary>Rappresenta il modello a oggetti XML per la codifica di oggetti di sicurezza. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Security.SecurityElement.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.SecurityElement" /> con il tag specificato.</summary>
      <param name="tag">Nome del tag di un elemento XML.</param>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="tag" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Il parametro <paramref name="tag" /> non è valido in XML.</exception>
    </member>
    <member name="M:System.Security.SecurityElement.#ctor(System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.SecurityElement" /> con il tag e il testo specificati.</summary>
      <param name="tag">Nome del tag dell'elemento XML.</param>
      <param name="text">Contenuto testuale dell'elemento.</param>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="tag" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Il parametro <paramref name="tag" /> o <paramref name="text" /> non è valido in XML.</exception>
    </member>
    <member name="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)">
      <summary>Aggiunge un attributo nome/valore a un elemento XML.</summary>
      <param name="name">Nome dell'attributo.</param>
      <param name="value">Valore dell'attributo.</param>
      <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="name" /> o <paramref name="value" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Il parametro <paramref name="name" /> o <paramref name="value" /> non è valido in XML.  
In alternativa 
Un attributo con il nome specificato dal parametro <paramref name="name" /> esiste già.</exception>
    </member>
    <member name="M:System.Security.SecurityElement.AddChild(System.Security.SecurityElement)">
      <summary>Aggiunge un elemento figlio all'elemento XML.</summary>
      <param name="child">Elemento figlio da aggiungere.</param>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="child" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.SecurityElement.Attribute(System.String)">
      <summary>Trova un attributo in base al nome in un elemento XML.</summary>
      <param name="name">Nome dell'attributo da ricercare.</param>
      <returns>Il valore associato all'attributo denominato oppure <see langword="null" /> se non esiste alcun attributo con parametro <paramref name="name" />.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="name" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Security.SecurityElement.Attributes">
      <summary>Ottiene o imposta gli attributi di un elemento XML come coppie nome/valore.</summary>
      <returns>Oggetto <see cref="T:System.Collections.Hashtable" /> per i valori di attributo dell'elemento XML.</returns>
      <exception cref="T:System.InvalidCastException">Il  nome o il valore dell'oggetto <see cref="T:System.Collections.Hashtable" /> non è valido.</exception>
      <exception cref="T:System.ArgumentException">Il nome non è un nome dell'attributo XML valido.</exception>
    </member>
    <member name="P:System.Security.SecurityElement.Children">
      <summary>Ottiene o imposta la matrice degli elementi figlio dell'elemento XML.</summary>
      <returns>Elementi figlio ordinati dell'elemento XML come elementi di sicurezza.</returns>
      <exception cref="T:System.ArgumentException">Un figlio del nodo XML padre è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.SecurityElement.Copy">
      <summary>Crea e restituisce una copia identica dell'oggetto <see cref="T:System.Security.SecurityElement" /> corrente.</summary>
      <returns>Copia dell'oggetto <see cref="T:System.Security.SecurityElement" /> corrente.</returns>
    </member>
    <member name="M:System.Security.SecurityElement.Equal(System.Security.SecurityElement)">
      <summary>Verifica l'uguaglianza tra due oggetti dell'elemento XML.</summary>
      <param name="other">Oggetto di un elemento XML con cui confrontare l'oggetto dell'elemento XML corrente.</param>
      <returns>
        <see langword="true" /> se il tag, i nomi e i valori di attributo, gli elementi figlio e i campi di testo dell'elemento XML corrente sono identici alle rispettive controparti nel parametro <paramref name="other" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.SecurityElement.Escape(System.String)">
      <summary>Sostituisce i caratteri XML non validi in una stringa con l'equivalente XML valido.</summary>
      <param name="str">Stringa in cui eseguire l'escape dei caratteri non validi.</param>
      <returns>Stringa di input con caratteri non validi che è stata sostituita.</returns>
    </member>
    <member name="M:System.Security.SecurityElement.FromString(System.String)">
      <summary>Crea un elemento di sicurezza da una stringa con codifica XML.</summary>
      <param name="xml">Stringa con codifica XML da cui viene creato l'elemento di sicurezza.</param>
      <returns>Elemento <see cref="T:System.Security.SecurityElement" /> creato dalla stringa XML.</returns>
      <exception cref="T:System.Security.XmlSyntaxException">
        <paramref name="xml" /> contiene uno o più caratteri di virgoletta singola.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xml" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.SecurityElement.IsValidAttributeName(System.String)">
      <summary>Determina se una stringa è un nome di attributo valido.</summary>
      <param name="name">Nome dell'attributo di cui eseguire il test di validità.</param>
      <returns>
        <see langword="true" /> se il parametro <paramref name="name" /> è un nome di attributo XML valido; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.SecurityElement.IsValidAttributeValue(System.String)">
      <summary>Determina se una stringa è un valore di attributo valido.</summary>
      <param name="value">Valore dell'attributo di cui eseguire il test di validità.</param>
      <returns>
        <see langword="true" /> se il parametro <paramref name="value" /> è un valore di attributo XML valido; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.SecurityElement.IsValidTag(System.String)">
      <summary>Determina se una stringa è un tag valido.</summary>
      <param name="tag">Tag di cui eseguire il test di validità.</param>
      <returns>
        <see langword="true" /> se il parametro <paramref name="tag" /> è un tag XML valido; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.SecurityElement.IsValidText(System.String)">
      <summary>Determina se una stringa è valida come testo all'interno di un elemento XML.</summary>
      <param name="text">Testo di cui eseguire il test di validità.</param>
      <returns>
        <see langword="true" /> se il parametro <paramref name="text" /> è un elemento testuale XML valido; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.SecurityElement.SearchForChildByTag(System.String)">
      <summary>Rileva un elemento figlio in base al nome del tag.</summary>
      <param name="tag">Tag da cercare negli elementi figlio.</param>
      <returns>Il primo elemento XML figlio con il valore di tag specificato oppure <see langword="null" /> se non esiste alcun elemento figlio con <paramref name="tag" />.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="tag" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.SecurityElement.SearchForTextOfTag(System.String)">
      <summary>Trova un elemento figlio in base al nome del tag e restituisce il testo in esso contenuto.</summary>
      <param name="tag">Tag da cercare negli elementi figlio.</param>
      <returns>Contenuto testuale del primo elemento figlio con il valore di tag specificato.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="tag" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Security.SecurityElement.Tag">
      <summary>Ottiene o imposta il nome del tag di un elemento XML.</summary>
      <returns>Nome del tag di un elemento XML.</returns>
      <exception cref="T:System.ArgumentNullException">Il tag è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Il tag non è valido in XML.</exception>
    </member>
    <member name="P:System.Security.SecurityElement.Text">
      <summary>Ottiene o imposta il testo in un elemento XML.</summary>
      <returns>Valore del testo in un elemento XML.</returns>
      <exception cref="T:System.ArgumentException">Il testo non è valido in XML.</exception>
    </member>
    <member name="M:System.Security.SecurityElement.ToString">
      <summary>Produce una rappresentazione in forma di stringa di un elemento XML e dei relativi attributi costitutivi, elementi figlio e testo.</summary>
      <returns>Elemento XML e il relativo contenuto.</returns>
    </member>
    <member name="T:System.StringComparer">
      <summary>Rappresenta un'operazione di confronto tra stringhe che utilizza regole specifiche di confronto basate sull'utilizzo di maiuscole e minuscole e specifiche delle impostazioni cultura o per ordinale.</summary>
    </member>
    <member name="M:System.StringComparer.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.StringComparer" />.</summary>
    </member>
    <member name="M:System.StringComparer.Compare(System.Object,System.Object)">
      <summary>Quando sottoposto a override in una classe derivata, confronta due oggetti e restituisce un'indicazione del relativo ordinamento.</summary>
      <param name="x">Oggetto da confrontare con <paramref name="y" />.</param>
      <param name="y">Oggetto da confrontare con <paramref name="x" />.</param>
      <returns>Intero con segno che indica i valori relativi di <paramref name="x" /> e <paramref name="y" />, come illustrato nella tabella seguente.  
  Value 
  Significato 
  Minore di zero 
 <paramref name="x" /> precede <paramref name="y" /> nell'ordinamento.  

In alternativa 
 <paramref name="x" /> è <see langword="null" /> e <paramref name="y" /> non è <see langword="null" />.  

  Zero 
 <paramref name="x" /> è uguale a <paramref name="y" />.  

In alternativa 
 <paramref name="x" /> e <paramref name="y" /> sono entrambi <see langword="null" />.  

  Maggiore di zero 
 <paramref name="x" /> segue <paramref name="y" /> nell'ordinamento.  

In alternativa 
 <paramref name="y" /> è <see langword="null" /> e <paramref name="x" /> non è <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentException">Né <paramref name="x" /> né <paramref name="y" /> è un oggetto <see cref="T:System.String" /> e né <paramref name="x" /> né <paramref name="y" /> implementa l'interfaccia <see cref="T:System.IComparable" />.</exception>
    </member>
    <member name="M:System.StringComparer.Compare(System.String,System.String)">
      <summary>Quando sottoposto a override in una classe derivata, confronta due stringhe e restituisce un'indicazione del relativo ordinamento.</summary>
      <param name="x">Stringa da confrontare con <paramref name="y" />.</param>
      <param name="y">Stringa da confrontare con <paramref name="x" />.</param>
      <returns>Intero con segno che indica i valori relativi di <paramref name="x" /> e <paramref name="y" />, come illustrato nella tabella seguente.  
  Value 
  Significato 
  Minore di zero 
 <paramref name="x" /> precede <paramref name="y" /> nell'ordinamento.  

-oppure- 
 <paramref name="x" /> è <see langword="null" /> e <paramref name="y" /> non è <see langword="null" />.  

  Zero 
 <paramref name="x" /> è uguale a <paramref name="y" />.  

-oppure- 
 <paramref name="x" /> e <paramref name="y" /> sono entrambi <see langword="null" />.  

  Maggiore di zero 
 <paramref name="x" /> segue <paramref name="y" /> nell'ordinamento.  

-oppure- 
 <paramref name="y" /> è <see langword="null" /> e <paramref name="x" /> non è <see langword="null" />.</returns>
    </member>
    <member name="M:System.StringComparer.Create(System.Globalization.CultureInfo,System.Boolean)">
      <summary>Crea un oggetto <see cref="T:System.StringComparer" /> che confronta le stringhe secondo le regole delle impostazioni cultura specificate.</summary>
      <param name="culture">impostazioni cultura le cui regole sono usate per eseguire un confronto tra stringhe.</param>
      <param name="ignoreCase">
        <see langword="true" /> per specificare che le operazioni di confronto non devono fare distinzione tra maiuscole e minuscole; <see langword="false" /> per specificare che le operazioni di confronto devono fare distinzione tra maiuscole e minuscole.</param>
      <returns>Nuovo oggetto <see cref="T:System.StringComparer" /> che esegue confronti tra stringhe in base alle regole di confronto usate dal parametro <paramref name="culture" /> e alla regola di distinzione tra maiuscole e minuscole specificata dal parametro <paramref name="ignoreCase" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="culture" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.StringComparer.Create(System.Globalization.CultureInfo,System.Globalization.CompareOptions)">
      <param name="culture" />
      <param name="options" />
    </member>
    <member name="P:System.StringComparer.CurrentCulture">
      <summary>Ottiene un oggetto <see cref="T:System.StringComparer" /> che esegue un confronto tra stringhe con distinzione tra maiuscole e minuscole usando le regole di confronto per parola delle impostazioni cultura correnti.</summary>
      <returns>Nuovo oggetto <see cref="T:System.StringComparer" />.</returns>
    </member>
    <member name="P:System.StringComparer.CurrentCultureIgnoreCase">
      <summary>Ottiene un oggetto <see cref="T:System.StringComparer" /> che esegue un confronto tra stringhe con distinzione tra maiuscole e minuscole usando le regole di confronto per parola delle impostazioni cultura correnti.</summary>
      <returns>Nuovo oggetto per il confronto tra stringhe.</returns>
    </member>
    <member name="M:System.StringComparer.Equals(System.Object,System.Object)">
      <summary>Quando sottoposto a override in una classe derivata, indica se due oggetti sono uguali.</summary>
      <param name="x">Oggetto da confrontare con <paramref name="y" />.</param>
      <param name="y">Oggetto da confrontare con <paramref name="x" />.</param>
      <returns>
        <see langword="true" /> se <paramref name="x" /> e <paramref name="y" /> fanno riferimento allo stesso oggetto o <paramref name="x" /> e <paramref name="y" /> sono entrambi dello stesso tipo di oggetto e tali oggetti sono uguali oppure sia <paramref name="x" /> che <paramref name="y" /> sono <see langword="null" />. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.StringComparer.Equals(System.String,System.String)">
      <summary>Quando sottoposto a override in una classe derivata, indica se due stringhe sono uguali.</summary>
      <param name="x">Stringa da confrontare con <paramref name="y" />.</param>
      <param name="y">Stringa da confrontare con <paramref name="x" />.</param>
      <returns>
        <see langword="true" /> se <paramref name="x" /> e <paramref name="y" /> fanno riferimento allo stesso oggetto o <paramref name="x" /> e <paramref name="y" /> sono uguali oppure <paramref name="x" /> e <paramref name="y" /> sono <see langword="null" />. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.StringComparer.FromComparison(System.StringComparison)">
      <param name="comparisonType" />
    </member>
    <member name="M:System.StringComparer.GetHashCode(System.Object)">
      <summary>Quando sottoposto a override in una classe derivata, ottiene il codice hash per l'oggetto specificato.</summary>
      <param name="obj">Oggetto.</param>
      <returns>Codice hash con segno a 32 bit calcolato dal valore del parametro <paramref name="obj" />.</returns>
      <exception cref="T:System.ArgumentException">Memoria insufficiente per l'allocazione del buffer necessario per calcolare il codice hash.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.StringComparer.GetHashCode(System.String)">
      <summary>Quando sottoposto a override in una classe derivata, ottiene il codice hash per la stringa specificata.</summary>
      <param name="obj">Stringa.</param>
      <returns>Codice hash con segno a 32 bit calcolato dal valore del parametro <paramref name="obj" />.</returns>
      <exception cref="T:System.ArgumentException">Memoria insufficiente per l'allocazione del buffer necessario per calcolare il codice hash.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.StringComparer.InvariantCulture">
      <summary>Ottiene un oggetto <see cref="T:System.StringComparer" /> che esegue un confronto tra stringhe con distinzione tra maiuscole e minuscole utilizzando le regole di confronto per parola delle impostazioni cultura invarianti.</summary>
      <returns>Nuovo oggetto <see cref="T:System.StringComparer" />.</returns>
    </member>
    <member name="P:System.StringComparer.InvariantCultureIgnoreCase">
      <summary>Ottiene un oggetto <see cref="T:System.StringComparer" /> che esegue un confronto tra stringhe senza distinzione tra maiuscole e minuscole utilizzando le regole di confronto per parola delle impostazioni cultura invarianti.</summary>
      <returns>Nuovo oggetto <see cref="T:System.StringComparer" />.</returns>
    </member>
    <member name="P:System.StringComparer.Ordinal">
      <summary>Ottiene un oggetto <see cref="T:System.StringComparer" /> che esegue un confronto ordinale tra stringhe con distinzione tra maiuscole e minuscole.</summary>
      <returns>Oggetto <see cref="T:System.StringComparer" />.</returns>
    </member>
    <member name="P:System.StringComparer.OrdinalIgnoreCase">
      <summary>Ottiene un oggetto <see cref="T:System.StringComparer" /> che esegue un confronto ordinale tra stringhe senza distinzione tra maiuscole e minuscole.</summary>
      <returns>Oggetto <see cref="T:System.StringComparer" />.</returns>
    </member>
    <member name="T:System.StringNormalizationExtensions">
      <summary>Offre metodi di estensione per l'uso con la normalizzazione delle stringhe.</summary>
    </member>
    <member name="M:System.StringNormalizationExtensions.IsNormalized(System.String)">
      <summary>Indica se la stringa specificata è nel formato di normalizzazione Unicode C.</summary>
      <param name="value">Stringa.</param>
      <returns>
        <see langword="true" /> se <paramref name="value" /> è in formato di normalizzazione C; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> contiene caratteri Unicode non validi.</exception>
    </member>
    <member name="M:System.StringNormalizationExtensions.IsNormalized(System.String,System.Text.NormalizationForm)">
      <summary>Indica se la stringa è in un formato di normalizzazione Unicode specificato.</summary>
      <param name="value">Stringa.</param>
      <param name="normalizationForm">Formato di normalizzazione Unicode.</param>
      <returns>
        <see langword="true" /> se <paramref name="value" /> è in formato di normalizzazione <paramref name="normalizationForm" />; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> contiene caratteri Unicode non validi.</exception>
    </member>
    <member name="M:System.StringNormalizationExtensions.Normalize(System.String)">
      <summary>Normalizza una stringa in base a al formato di normalizzazione Unicode C.</summary>
      <param name="value">Stringa da normalizzare.</param>
      <returns>Nuova stringa il cui valore testuale è lo stesso di <paramref name="value" />, ma la cui rappresentazione binaria è nel formato di normalizzazione Unicode C.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> contiene caratteri Unicode non validi.</exception>
    </member>
    <member name="M:System.StringNormalizationExtensions.Normalize(System.String,System.Text.NormalizationForm)">
      <summary>Normalizza una stringa nel formato di normalizzazione Unicode.</summary>
      <param name="value">Stringa da normalizzare.</param>
      <param name="normalizationForm">Il formato di normalizzazione Unicode.</param>
      <returns>Nuova stringa il cui valore testuale è lo stesso di <paramref name="value" />, ma la cui rappresentazione binaria è nel formato di normalizzazione <paramref name="normalizationForm" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> contiene caratteri Unicode non validi.</exception>
    </member>
    <member name="T:System.UriBuilder">
      <summary>Fornisce un costruttore personalizzato per gli identificatori URI (Uniform Resource Identifier) e modifica gli URI per la classe <see cref="T:System.Uri" />.</summary>
    </member>
    <member name="M:System.UriBuilder.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.UriBuilder" />.</summary>
    </member>
    <member name="M:System.UriBuilder.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.UriBuilder" /> con l'URI specificato.</summary>
      <param name="uri">Stringa URI.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> è <see langword="null" />.</exception>
      <exception cref="T:System.UriFormatException">In .NET per app di Windows Store o nella libreria di classi portabile rilevare invece l'eccezione della classe di base, <see cref="T:System.FormatException" />.  

          
          <paramref name="uri" /> è una stringa di lunghezza zero o contiene solo spazi.  
-oppure- 
Durante la routine di analisi è stato rilevato uno schema in un formato non valido.  
-oppure- 
Il parser ha rilevato più di due barre consecutive in un URI in cui non è usato lo schema "file".  
-oppure- 
 <paramref name="uri" /> non è un URI valido.</exception>
    </member>
    <member name="M:System.UriBuilder.#ctor(System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.UriBuilder" /> con lo schema e l'host specificati.</summary>
      <param name="schemeName">Protocollo di accesso Internet.</param>
      <param name="hostName">Nome dominio di tipo DNS o indirizzo IP.</param>
    </member>
    <member name="M:System.UriBuilder.#ctor(System.String,System.String,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.UriBuilder" /> con lo schema, l'host e la porta specificati.</summary>
      <param name="scheme">Protocollo di accesso Internet.</param>
      <param name="host">Nome dominio di tipo DNS o indirizzo IP.</param>
      <param name="portNumber">Numero di porta IP per il servizio.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="portNumber" /> è minore di -1 o maggiore di 65.535.</exception>
    </member>
    <member name="M:System.UriBuilder.#ctor(System.String,System.String,System.Int32,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.UriBuilder" /> con lo schema, l'host, il numero di porta e il percorso specificati.</summary>
      <param name="scheme">Protocollo di accesso Internet.</param>
      <param name="host">Nome dominio di tipo DNS o indirizzo IP.</param>
      <param name="port">Numero di porta IP per il servizio.</param>
      <param name="pathValue">Percorso alla risorsa Internet.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> è minore di -1 o maggiore di 65.535.</exception>
    </member>
    <member name="M:System.UriBuilder.#ctor(System.String,System.String,System.Int32,System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.UriBuilder" /> con lo schema, l'host, il numero di porta, il percorso e la stringa di query o l'identificatore di frammento specificati.</summary>
      <param name="scheme">Protocollo di accesso Internet.</param>
      <param name="host">Nome dominio di tipo DNS o indirizzo IP.</param>
      <param name="port">Numero di porta IP per il servizio.</param>
      <param name="path">Percorso alla risorsa Internet.</param>
      <param name="extraValue">Stringa di query o identificatore di frammento.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="extraValue" /> non è <see langword="null" /> né <see cref="F:System.String.Empty" />, un identificatore di frammento valido non inizia con un simbolo di cancelletto (#), né una stringa di query valida inizia con un punto interrogativo (?).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> è minore di -1 o maggiore di 65.535.</exception>
    </member>
    <member name="M:System.UriBuilder.#ctor(System.Uri)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.UriBuilder" /> con l'istanza di <see cref="T:System.Uri" /> specificata.</summary>
      <param name="uri">Istanza della classe <see cref="T:System.Uri" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.UriBuilder.Equals(System.Object)">
      <summary>Confronta un'istanza esistente di <see cref="T:System.Uri" /> con il contenuto della classe <see cref="T:System.UriBuilder" /> per trovare un'uguaglianza.</summary>
      <param name="rparam">Oggetto da confrontare con l'istanza corrente.</param>
      <returns>
        <see langword="true" /> se <paramref name="rparam" /> rappresenta lo stesso oggetto <see cref="T:System.Uri" /> di quello <see cref="T:System.Uri" /> costruito dalla presente istanza di <see cref="T:System.UriBuilder" />. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.UriBuilder.Fragment">
      <summary>Ottiene o imposta la parte di frammento dell'URI.</summary>
      <returns>Parte di frammento dell'URI. L'identificatore di frammento ("#") viene aggiunto all'inizio del frammento.</returns>
    </member>
    <member name="M:System.UriBuilder.GetHashCode">
      <summary>Restituisce il codice hash dell'URI.</summary>
      <returns>Codice hash generato per l'URI.</returns>
    </member>
    <member name="P:System.UriBuilder.Host">
      <summary>Ottiene o imposta il nome host DNS (Domain Name System) o l'indirizzo IP di un server.</summary>
      <returns>Nome host DNS o indirizzo IP del server.</returns>
    </member>
    <member name="P:System.UriBuilder.Password">
      <summary>Ottiene o imposta la password associata all'utente che accede all'URI.</summary>
      <returns>Password dell'utente che accede all'URI.</returns>
    </member>
    <member name="P:System.UriBuilder.Path">
      <summary>Ottiene o imposta il percorso alla risorsa cui fa riferimento l'URI.</summary>
      <returns>Percorso alla risorsa cui fa riferimento l'URI.</returns>
    </member>
    <member name="P:System.UriBuilder.Port">
      <summary>Ottiene o imposta il numero di porta dell'URI.</summary>
      <returns>Numero di porta dell'URI.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">La porta non può essere impostata su un valore minore di -1 o maggiore di 65.535.</exception>
    </member>
    <member name="P:System.UriBuilder.Query">
      <summary>Ottiene o imposta le informazioni sulle query incluse nell'URI.</summary>
      <returns>Informazioni sulle query incluse nell'URI.</returns>
    </member>
    <member name="P:System.UriBuilder.Scheme">
      <summary>Ottiene o imposta il nome dello schema dell'URI.</summary>
      <returns>Schema dell'URI.</returns>
      <exception cref="T:System.ArgumentException">Impossibile impostare un nome non valido per lo schema.</exception>
    </member>
    <member name="M:System.UriBuilder.ToString">
      <summary>Restituisce la stringa di visualizzazione dell'istanza di <see cref="T:System.UriBuilder" /> specificata.</summary>
      <returns>Stringa contenente la stringa di visualizzazione senza caratteri di escape dell'oggetto <see cref="T:System.UriBuilder" />.</returns>
      <exception cref="T:System.UriFormatException">In .NET per app di Windows Store o nella libreria di classi portabile rilevare invece l'eccezione della classe di base, <see cref="T:System.FormatException" />.  


            

 L'istanza <see cref="T:System.UriBuilder" /> ha una password errata.</exception>
    </member>
    <member name="P:System.UriBuilder.Uri">
      <summary>Ottiene l'istanza di <see cref="T:System.Uri" /> costruita dall'istanza di <see cref="T:System.UriBuilder" /> specificata.</summary>
      <returns>Oggetto <see cref="T:System.Uri" /> che contiene l'URI costruito dall'oggetto <see cref="T:System.UriBuilder" />.</returns>
      <exception cref="T:System.UriFormatException">In .NET per app di Windows Store o nella libreria di classi portabile rilevare invece l'eccezione della classe di base, <see cref="T:System.FormatException" />.  


            

 L'URI costruito dalle proprietà <see cref="T:System.UriBuilder" /> non è valido.</exception>
    </member>
    <member name="P:System.UriBuilder.UserName">
      <summary>Nome utente associato all'utente che accede all'URI.</summary>
      <returns>Nome dell'utente che accede all'URI.</returns>
    </member>
  </members>
</doc>