<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Runtime.Serialization.Formatters</name>
  </assembly>
  <members>
    <member name="T:System.Runtime.Serialization.Formatter">
      <summary>Fornisce la funzionalità di base per i formattatori di serializzazione Common Language Runtime.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Serialization.Formatter" />.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.Formatter.Binder">
      <summary>Quando si esegue l'override in una classe derivata, ottiene o imposta l'oggetto <see cref="T:System.Runtime.Serialization.SerializationBinder" /> utilizzato con il formattatore corrente.</summary>
      <returns>Oggetto <see cref="T:System.Runtime.Serialization.SerializationBinder" /> utilizzato con il formattatore corrente.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Formatter.Context">
      <summary>Quando si esegue l'override in una classe derivata, recupera o imposta l'oggetto <see cref="T:System.Runtime.Serialization.StreamingContext" /> utilizzato per la serializzazione corrente.</summary>
      <returns>
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> utilizzato per la serializzazione corrente.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.Deserialize(System.IO.Stream)">
      <summary>Quando si esegue l'override in una classe derivata, deserializza il flusso collegato al formattatore al momento della creazione, creando un grafico di oggetti identico a quello serializzato in origine in tale flusso.</summary>
      <param name="serializationStream">Flusso da deserializzare.</param>
      <returns>Oggetto di primo livello del grafico deserializzato di oggetti.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.GetNext(System.Int64@)">
      <summary>Restituisce il successivo oggetto da serializzare dalla coda di lavoro interna del formattatore.</summary>
      <param name="objID">ID assegnato all'oggetto corrente durante la serializzazione.</param>
      <returns>Successivo oggetto da serializzare.</returns>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Al successivo oggetto recuperato dalla coda di lavoro non è stato assegnato alcun ID.</exception>
    </member>
    <member name="F:System.Runtime.Serialization.Formatter.m_idGenerator">
      <summary>Contiene il <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" /> utilizzato con il formattatore corrente.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatter.m_objectQueue">
      <summary>Contiene un <see cref="T:System.Collections.Queue" /> degli oggetti ancora da serializzare.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.Schedule(System.Object)">
      <summary>Pianifica un oggetto per una successiva serializzazione.</summary>
      <param name="obj">Oggetto pianificato per la serializzazione.</param>
      <returns>ID assegnato all'oggetto.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.Serialize(System.IO.Stream,System.Object)">
      <summary>Quando si esegue l'override in una classe derivata, serializza il grafico di oggetti con l'elemento di primo livello specificato nel flusso già collegato al formattatore.</summary>
      <param name="serializationStream">Flusso in cui vengono serializzati gli oggetti.</param>
      <param name="graph">Oggetto alla radice del grafico da serializzare.</param>
    </member>
    <member name="P:System.Runtime.Serialization.Formatter.SurrogateSelector">
      <summary>Quando si esegue l'override in una classe derivata, ottiene o imposta l'oggetto <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> utilizzato con il formattatore corrente.</summary>
      <returns>Oggetto <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> utilizzato con il formattatore corrente.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteArray(System.Object,System.String,System.Type)">
      <summary>Quando si esegue l'override in una classe derivata, inserisce una matrice nel flusso già collegato al formattatore.</summary>
      <param name="obj">Matrice da inserire.</param>
      <param name="name">Nome della matrice.</param>
      <param name="memberType">Tipo degli elementi contenuti nella matrice.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteBoolean(System.Boolean,System.String)">
      <summary>Quando si esegue l'override in una classe derivata, inserisce un valore booleano nel flusso già collegato al formattatore.</summary>
      <param name="val">Valore da scrivere.</param>
      <param name="name">Nome del membro.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteByte(System.Byte,System.String)">
      <summary>Quando si esegue l'override in una classe derivata, inserisce un intero senza segno a 8 bit nel flusso già collegato al formattatore.</summary>
      <param name="val">Valore da scrivere.</param>
      <param name="name">Nome del membro.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteChar(System.Char,System.String)">
      <summary>Quando si esegue l'override in una classe derivata, inserisce un carattere Unicode nel flusso già collegato al formattatore.</summary>
      <param name="val">Valore da scrivere.</param>
      <param name="name">Nome del membro.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteDateTime(System.DateTime,System.String)">
      <summary>Quando si esegue l'override in una classe derivata, inserisce un valore <see cref="T:System.DateTime" /> nel flusso già collegato al formattatore.</summary>
      <param name="val">Valore da scrivere.</param>
      <param name="name">Nome del membro.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteDecimal(System.Decimal,System.String)">
      <summary>Quando si esegue l'override in una classe derivata, inserisce un valore <see cref="T:System.Decimal" /> nel flusso già collegato al formattatore.</summary>
      <param name="val">Valore da scrivere.</param>
      <param name="name">Nome del membro.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteDouble(System.Double,System.String)">
      <summary>Quando si esegue l'override in una classe derivata, inserisce un numero in virgola mobile e precisione doppia nel flusso già collegato al formattatore.</summary>
      <param name="val">Valore da scrivere.</param>
      <param name="name">Nome del membro.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteInt16(System.Int16,System.String)">
      <summary>Quando si esegue l'override in una classe derivata, inserisce un intero con segno a 16 bit nel flusso già collegato al formattatore.</summary>
      <param name="val">Valore da scrivere.</param>
      <param name="name">Nome del membro.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteInt32(System.Int32,System.String)">
      <summary>Quando si esegue l'override in una classe derivata, inserisce un intero con segno a 32 bit nel flusso.</summary>
      <param name="val">Valore da scrivere.</param>
      <param name="name">Nome del membro.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteInt64(System.Int64,System.String)">
      <summary>Quando si esegue l'override in una classe derivata, inserisce un intero con segno a 64 bit nel flusso.</summary>
      <param name="val">Valore da scrivere.</param>
      <param name="name">Nome del membro.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteMember(System.String,System.Object)">
      <summary>Controlla il tipo di dati ricevuti e chiama il metodo <see langword="Write" /> appropriato per eseguire la scrittura nel flusso già collegato al formattatore.</summary>
      <param name="memberName">Nome del membro da serializzare.</param>
      <param name="data">Oggetto da inserire nel flusso collegato al formattatore.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteObjectRef(System.Object,System.String,System.Type)">
      <summary>Quando si esegue l'override in una classe derivata, inserisce un riferimento a un oggetto nel flusso già collegato al formattatore.</summary>
      <param name="obj">Riferimento a un oggetto da scrivere.</param>
      <param name="name">Nome del membro.</param>
      <param name="memberType">Tipo dell'oggetto a cui punta il riferimento.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteSByte(System.SByte,System.String)">
      <summary>Quando si esegue l'override in una classe derivata, inserisce un intero con segno a 8 bit nel flusso già collegato al formattatore.</summary>
      <param name="val">Valore da scrivere.</param>
      <param name="name">Nome del membro.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteSingle(System.Single,System.String)">
      <summary>Quando si esegue l'override in una classe derivata, inserisce un numero in virgola mobile e precisione singola nel flusso già collegato al formattatore.</summary>
      <param name="val">Valore da scrivere.</param>
      <param name="name">Nome del membro.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteTimeSpan(System.TimeSpan,System.String)">
      <summary>Quando si esegue l'override in una classe derivata, inserisce un valore <see cref="T:System.TimeSpan" /> nel flusso già collegato al formattatore.</summary>
      <param name="val">Valore da scrivere.</param>
      <param name="name">Nome del membro.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteUInt16(System.UInt16,System.String)">
      <summary>Quando si esegue l'override in una classe derivata, inserisce un intero senza segno a 16 bit nel flusso già collegato al formattatore.</summary>
      <param name="val">Valore da scrivere.</param>
      <param name="name">Nome del membro.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteUInt32(System.UInt32,System.String)">
      <summary>Quando si esegue l'override in una classe derivata, inserisce un intero senza segno a 32 bit nel flusso già collegato al formattatore.</summary>
      <param name="val">Valore da scrivere.</param>
      <param name="name">Nome del membro.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteUInt64(System.UInt64,System.String)">
      <summary>Quando si esegue l'override in una classe derivata, inserisce un intero senza segno a 64 bit nel flusso già collegato al formattatore.</summary>
      <param name="val">Valore da scrivere.</param>
      <param name="name">Nome del membro.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteValueType(System.Object,System.String,System.Type)">
      <summary>Quando si esegue l'override in una classe derivata, inserisce un valore del tipo specificato nel flusso già collegato al formattatore.</summary>
      <param name="obj">Oggetto che rappresenta il tipo di valore.</param>
      <param name="name">Nome del membro.</param>
      <param name="memberType">
        <see cref="T:System.Type" /> del tipo di valore.</param>
    </member>
    <member name="T:System.Runtime.Serialization.FormatterConverter">
      <summary>Rappresenta un'implementazione di base dell'interfaccia <see cref="T:System.Runtime.Serialization.IFormatterConverter" /> che utilizza la classe <see cref="T:System.Convert" /> e l'interfaccia <see cref="T:System.IConvertible" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Serialization.FormatterConverter" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.Convert(System.Object,System.Type)">
      <summary>Converte un valore nell'oggetto <see cref="T:System.Type" /> specificato.</summary>
      <param name="value">Oggetto da convertire.</param>
      <param name="type">Oggetto <see cref="T:System.Type" /> nel quale viene convertito l'oggetto <paramref name="value" />.</param>
      <returns>Oggetto <paramref name="value" /> convertito oppure <see langword="null" /> se il parametro <paramref name="type" /> è <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.Convert(System.Object,System.TypeCode)">
      <summary>Converte un valore nell'oggetto <see cref="T:System.TypeCode" /> specificato.</summary>
      <param name="value">Oggetto da convertire.</param>
      <param name="typeCode">Oggetto <see cref="T:System.TypeCode" /> nel quale viene convertito l'oggetto <paramref name="value" />.</param>
      <returns>Oggetto <paramref name="value" /> convertito oppure <see langword="null" /> se il parametro <paramref name="type" /> è <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToBoolean(System.Object)">
      <summary>Converte un valore in un valore <see cref="T:System.Boolean" />.</summary>
      <param name="value">Oggetto da convertire.</param>
      <returns>Oggetto <paramref name="value" /> convertito oppure <see langword="null" /> se il parametro <paramref name="type" /> è <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToByte(System.Object)">
      <summary>Converte un valore in un valore integer a 8 bit senza segno.</summary>
      <param name="value">Oggetto da convertire.</param>
      <returns>Oggetto <paramref name="value" /> convertito oppure <see langword="null" /> se il parametro <paramref name="type" /> è <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToChar(System.Object)">
      <summary>Converte un valore in un carattere Unicode.</summary>
      <param name="value">Oggetto da convertire.</param>
      <returns>Oggetto <paramref name="value" /> convertito oppure <see langword="null" /> se il parametro <paramref name="type" /> è <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToDateTime(System.Object)">
      <summary>Converte un valore in un valore <see cref="T:System.DateTime" />.</summary>
      <param name="value">Oggetto da convertire.</param>
      <returns>Oggetto <paramref name="value" /> convertito oppure <see langword="null" /> se il parametro <paramref name="type" /> è <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToDecimal(System.Object)">
      <summary>Converte un valore in un valore <see cref="T:System.Decimal" />.</summary>
      <param name="value">Oggetto da convertire.</param>
      <returns>Oggetto <paramref name="value" /> convertito oppure <see langword="null" /> se il parametro <paramref name="type" /> è <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToDouble(System.Object)">
      <summary>Converte un valore in un numero in virgola mobile e precisione doppia.</summary>
      <param name="value">Oggetto da convertire.</param>
      <returns>Oggetto <paramref name="value" /> convertito oppure <see langword="null" /> se il parametro <paramref name="type" /> è <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToInt16(System.Object)">
      <summary>Converte un valore in un Signed Integer a 16 bit.</summary>
      <param name="value">Oggetto da convertire.</param>
      <returns>Oggetto <paramref name="value" /> convertito oppure <see langword="null" /> se il parametro <paramref name="type" /> è <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToInt32(System.Object)">
      <summary>Converte un valore in un intero con segno a 32 bit.</summary>
      <param name="value">Oggetto da convertire.</param>
      <returns>Oggetto <paramref name="value" /> convertito oppure <see langword="null" /> se il parametro <paramref name="type" /> è <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToInt64(System.Object)">
      <summary>Converte un valore in un intero con segno a 64 bit.</summary>
      <param name="value">Oggetto da convertire.</param>
      <returns>Oggetto <paramref name="value" /> convertito oppure <see langword="null" /> se il parametro <paramref name="type" /> è <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToSByte(System.Object)">
      <summary>Converte un valore in un valore <see cref="T:System.SByte" />.</summary>
      <param name="value">Oggetto da convertire.</param>
      <returns>Oggetto <paramref name="value" /> convertito oppure <see langword="null" /> se il parametro <paramref name="type" /> è <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToSingle(System.Object)">
      <summary>Converte un valore in un numero in virgola mobile e precisione singola</summary>
      <param name="value">Oggetto da convertire.</param>
      <returns>Oggetto <paramref name="value" /> convertito oppure <see langword="null" /> se il parametro <paramref name="type" /> è <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToString(System.Object)">
      <summary>Converte l'oggetto specificato in un oggetto <see cref="T:System.String" />.</summary>
      <param name="value">Oggetto da convertire.</param>
      <returns>Oggetto <paramref name="value" /> convertito oppure <see langword="null" /> se il parametro <paramref name="type" /> è <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToUInt16(System.Object)">
      <summary>Converte un valore in un valore integer a 16 bit senza segno.</summary>
      <param name="value">Oggetto da convertire.</param>
      <returns>Oggetto <paramref name="value" /> convertito oppure <see langword="null" /> se il parametro <paramref name="type" /> è <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToUInt32(System.Object)">
      <summary>Converte un valore in un intero senza segno a 32 bit.</summary>
      <param name="value">Oggetto da convertire.</param>
      <returns>Oggetto <paramref name="value" /> convertito oppure <see langword="null" /> se il parametro <paramref name="type" /> è <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToUInt64(System.Object)">
      <summary>Converte un valore in un intero senza segno a 64 bit.</summary>
      <param name="value">Oggetto da convertire.</param>
      <returns>Oggetto <paramref name="value" /> convertito oppure <see langword="null" /> se il parametro <paramref name="type" /> è <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter">
      <summary>Serializza e deserializza un oggetto o un intero grafico di oggetti collegati in formato binario.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" /> con i valori predefiniti.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.#ctor(System.Runtime.Serialization.ISurrogateSelector,System.Runtime.Serialization.StreamingContext)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" /> con un selettore di surrogati e un contesto di flusso specificati.</summary>
      <param name="selector">Oggetto <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> da usare. Può essere <see langword="null" />.</param>
      <param name="context">Origine e destinazione per i dati serializzati.</param>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.AssemblyFormat">
      <summary>Ottiene o imposta il comportamento del deserializzatore relativamente al reperire e caricare assembly.</summary>
      <returns>Uno dei valori di <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> che specifica il comportamento del deserializzatore.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Binder">
      <summary>Ottiene o imposta un oggetto di tipo <see cref="T:System.Runtime.Serialization.SerializationBinder" /> che controlla l'associazione di un oggetto serializzato a un tipo.</summary>
      <returns>Strumento di associazione della serializzazione da utilizzare con questo formattatore.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Context">
      <summary>Ottiene o imposta l'oggetto <see cref="T:System.Runtime.Serialization.StreamingContext" /> per questo formattatore.</summary>
      <returns>Contesto di flusso da utilizzare con questo formattatore.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize(System.IO.Stream)">
      <summary>Deserializza il flusso specificato in un grafico di oggetti.</summary>
      <param name="serializationStream">Flusso da cui deserializzare il grafico di oggetti.</param>
      <returns>Primo livello (radice) dell'oggetto grafico.</returns>
      <exception cref="T:System.ArgumentNullException">L'elemento <paramref name="serializationStream" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
        <paramref name="serializationStream" /> supporta la ricerca ma la sua lunghezza è 0.  
-oppure- 
Il tipo di destinazione è <see cref="T:System.Decimal" />, ma il valore non è compreso nell'intervallo del tipo <see cref="T:System.Decimal" />.</exception>
      <exception cref="T:System.Security.SecurityException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.FilterLevel">
      <summary>Ottiene o imposta l'oggetto <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" /> per la deserializzazione automatica eseguita da <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" />.</summary>
      <returns>Valore <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" /> che rappresenta il livello di deserializzazione automatica corrente.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Serialize(System.IO.Stream,System.Object)">
      <summary>Serializza l'oggetto o il grafico di oggetti con l'oggetto di primo livello (radice) specificato nel flusso indicato.</summary>
      <param name="serializationStream">Flusso in cui serializzare il grafico.</param>
      <param name="graph">Oggetto alla radice del grafico da serializzare.</param>
      <exception cref="T:System.ArgumentNullException">L'elemento <paramref name="serializationStream" /> è <see langword="null" />.  
In alternativa 
<paramref name="graph" /> è Null.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Si è verificato un errore durante la serializzazione, ad esempio un oggetto nel parametro <paramref name="graph" /> non è contrassegnato come serializzabile.</exception>
      <exception cref="T:System.Security.SecurityException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.SurrogateSelector">
      <summary>Ottiene o imposta un oggetto <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> che controlla la sostituzione dei tipi durante la serializzazione e la deserializzazione.</summary>
      <returns>Selettore di surrogati da utilizzare con questo formattatore.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.TypeFormat">
      <summary>Ottiene o imposta il formato in cui sono disposte le descrizioni dei tipi nel flusso serializzato.</summary>
      <returns>Stile dei layout dei tipi da utilizzare.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle">
      <summary>Indica il metodo che verrà utilizzato durante la deserializzazione per il posizionamento e il carico di assembly.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle.Full">
      <summary>Nella modalità estesa, l'assembly utilizzato durante la deserializzazione deve corrispondere esattamente a quello utilizzato durante la serializzazione. Per caricare l'assembly, viene utilizzato il metodo <see cref="Overload:System.Reflection.Assembly.Load" /> della classe <see cref="T:System.Reflection.Assembly" />.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle.Simple">
      <summary>Nella modalità semplice, non è necessario che l'assembly utilizzato durante la deserializzazione corrisponda esattamente a quello utilizzato durante la serializzazione. In modo specifico, non è necessario che i numeri di versione corrispondano quando viene utilizzato il metodo <see cref="Overload:System.Reflection.Assembly.LoadWithPartialName" /> per caricare l'assembly.</summary>
    </member>
    <member name="T:System.Runtime.Serialization.Formatters.FormatterTypeStyle">
      <summary>Indica il formato in cui sono disposte le descrizioni dei tipi all'interno del flusso serializzato.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.FormatterTypeStyle.TypesAlways">
      <summary>Indica che è possibile assegnare tipi a tutti i membri di oggetti e ai membri degli oggetti <see cref="T:System.Runtime.Serialization.ISerializable" />.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.FormatterTypeStyle.TypesWhenNeeded">
      <summary>Indica che è possibile dichiarare tipi solo per matrici di oggetti, membri di oggetti di tipo <see cref="T:System.Object" /> e tipi valore non primitivi di <see cref="T:System.Runtime.Serialization.ISerializable" />.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.FormatterTypeStyle.XsdString">
      <summary>Indica che è possibile specificare stringhe nel formato XSD anziché SOAP. Non viene trasmesso alcun ID di stringa.</summary>
    </member>
    <member name="T:System.Runtime.Serialization.Formatters.IFieldInfo">
      <summary>Consente l'accesso a nomi di campi e tipi di campi di oggetti che supportano l'interfaccia <see cref="T:System.Runtime.Serialization.ISerializable" />.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.IFieldInfo.FieldNames">
      <summary>Ottiene o imposta i nomi di campi di oggetti serializzati.</summary>
      <returns>Nomi di campi di oggetti serializzati.</returns>
      <exception cref="T:System.Security.SecurityException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.IFieldInfo.FieldTypes">
      <summary>Ottiene o imposta i tipi di campi degli oggetti serializzati.</summary>
      <returns>Tipi di campi degli oggetti serializzati.</returns>
      <exception cref="T:System.Security.SecurityException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
    </member>
    <member name="T:System.Runtime.Serialization.Formatters.TypeFilterLevel">
      <summary>Specifica il livello di deserializzazione automatica per i servizi remoti di .NET Framework.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.TypeFilterLevel.Full">
      <summary>Livello di deserializzazione completa per i servizi remoti di .NET Framework. Supporta tutti i tipi supportati dai servizi remoti in tutte le situazioni.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.TypeFilterLevel.Low">
      <summary>Livello di deserializzazione basso per i servizi remoti di .NET Framework. Supporta i tipi associati alla funzionalità di base dei servizi remoti.</summary>
    </member>
    <member name="T:System.Runtime.Serialization.FormatterServices">
      <summary>Fornisce metodi statici per supportare l'implementazione di un oggetto <see cref="T:System.Runtime.Serialization.Formatter" /> per la serializzazione. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.CheckTypeSecurity(System.Type,System.Runtime.Serialization.Formatters.TypeFilterLevel)">
      <summary>Determina se l'oggetto <see cref="T:System.Type" /> specificato può essere deserializzato con la proprietà <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" /> impostata su <see langword="Low" />.</summary>
      <param name="t">Oggetto <see cref="T:System.Type" /> di cui verificare la possibilità di deserializzazione.</param>
      <param name="securityLevel">Valore della proprietà di <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" />.</param>
      <exception cref="T:System.Security.SecurityException">Il parametro <paramref name="t" /> è un tipo avanzato che non può essere deserializzato quando la proprietà di <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" /> è impostata su <see langword="Low" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetObjectData(System.Object,System.Reflection.MemberInfo[])">
      <summary>Estrae i dati dall'oggetto specificato e li restituisce come matrice di oggetti.</summary>
      <param name="obj">Oggetto da scrivere nel formattatore.</param>
      <param name="members">Membri da estrarre dall'oggetto.</param>
      <returns>Matrice di oggetti <see cref="T:System.Object" /> in cui sono contenuti i dati memorizzati in <paramref name="members" /> e associati a <paramref name="obj" />.</returns>
      <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="obj" /> o il parametro <paramref name="members" /> è <see langword="null" />.  
Un elemento di <paramref name="members" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Un elemento di <paramref name="members" /> non rappresenta un campo.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject(System.Type)">
      <summary>Crea una nuova istanza del tipo di oggetto specificato.</summary>
      <param name="type">Tipo di oggetto da creare.</param>
      <returns>Oggetto azzerato del tipo specificato.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="type" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Il parametro <paramref name="type" /> non è un tipo Common Language Runtime valido.</exception>
      <exception cref="T:System.Security.SecurityException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type)">
      <summary>Ottiene tutti i membri serializzabili per una classe del tipo <see cref="T:System.Type" /> specificato.</summary>
      <param name="type">Tipo in fase di serializzazione.</param>
      <returns>Matrice di tipo <see cref="T:System.Reflection.MemberInfo" /> di membri non temporanei e non statici.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="type" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type,System.Runtime.Serialization.StreamingContext)">
      <summary>Ottiene tutti i membri serializzabili per una classe del tipo <see cref="T:System.Type" /> specificato e nell'oggetto <see cref="T:System.Runtime.Serialization.StreamingContext" /> indicato.</summary>
      <param name="type">Tipo in fase di serializzazione o clonazione.</param>
      <param name="context">Contesto in cui si verifica la serializzazione.</param>
      <returns>Matrice di tipo <see cref="T:System.Reflection.MemberInfo" /> di membri non temporanei e non statici.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="type" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetSurrogateForCyclicalReference(System.Runtime.Serialization.ISerializationSurrogate)">
      <summary>Restituisce un surrogato di serializzazione per l'oggetto <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" /> specificato.</summary>
      <param name="innerSurrogate">Surrogato specificato.</param>
      <returns>Oggetto <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" /> per l'oggetto <paramref name="innerSurrogate" /> specificato.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetTypeFromAssembly(System.Reflection.Assembly,System.String)">
      <summary>Cerca il tipo <see cref="T:System.Type" /> dell'oggetto specificato nell'oggetto <see cref="T:System.Reflection.Assembly" /> indicato.</summary>
      <param name="assem">Assembly in cui si desidera cercare l'oggetto.</param>
      <param name="name">Nome dell'oggetto.</param>
      <returns>
        <see cref="T:System.Type" /> dell'oggetto denominato.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="assem" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetUninitializedObject(System.Type)">
      <summary>Crea una nuova istanza del tipo di oggetto specificato.</summary>
      <param name="type">Tipo di oggetto da creare.</param>
      <returns>Oggetto azzerato del tipo specificato.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="type" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers(System.Object,System.Reflection.MemberInfo[],System.Object[])">
      <summary>Popola l'oggetto specificato con valori relativi a ciascun campo, prelevati dalla matrice di dati degli oggetti.</summary>
      <param name="obj">Oggetto da popolare.</param>
      <param name="members">Matrice di oggetti <see cref="T:System.Reflection.MemberInfo" /> in cui sono descritti i campi e le proprietà da compilare.</param>
      <param name="data">Matrice di oggetti <see cref="T:System.Object" /> in cui sono specificati i valori per ciascun campo e ciascuna proprietà da compilare.</param>
      <returns>Oggetto appena popolato.</returns>
      <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="obj" />, <paramref name="members" /> o <paramref name="data" /> è <see langword="null" />.  
Un elemento di <paramref name="members" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La lunghezza di <paramref name="members" /> non corrisponde a quella di <paramref name="data" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Un elemento di <paramref name="members" /> non è un'istanza di <see cref="T:System.Reflection.FieldInfo" />.</exception>
      <exception cref="T:System.Security.SecurityException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
    </member>
    <member name="T:System.Runtime.Serialization.IFormatter">
      <summary>Fornisce una funzionalità per la formattazione di oggetti serializzati.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.IFormatter.Binder">
      <summary>Ottiene o imposta l'oggetto <see cref="T:System.Runtime.Serialization.SerializationBinder" /> che esegue ricerche dei tipi durante la deserializzazione.</summary>
      <returns>
        <see cref="T:System.Runtime.Serialization.SerializationBinder" /> che esegue ricerche dei tipi durante la deserializzazione.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.IFormatter.Context">
      <summary>Ottiene o imposta l'oggetto <see cref="T:System.Runtime.Serialization.StreamingContext" /> utilizzato per la serializzazione e la deserializzazione.</summary>
      <returns>Oggetto <see cref="T:System.Runtime.Serialization.StreamingContext" /> utilizzato per la serializzazione e la deserializzazione.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.IFormatter.Deserialize(System.IO.Stream)">
      <summary>Deserializza i dati del flusso indicato e ricostituisce il grafico degli oggetti.</summary>
      <param name="serializationStream">Flusso che contiene i dati da deserializzare.</param>
      <returns>Oggetto di primo livello del grafico deserializzato.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.IFormatter.Serialize(System.IO.Stream,System.Object)">
      <summary>Serializza un oggetto o un grafico di oggetti con la radice specificata nel flusso indicato.</summary>
      <param name="serializationStream">Il flusso in cui il formattatore inserisce i dati serializzati. Questo flusso può fare riferimento a diversi archivi di riserva, quali file, rete, memoria e così via.</param>
      <param name="graph">Oggetto o radice del grafico di oggetti da serializzare. Tutti gli oggetti figli di questa radice vengono serializzati automaticamente.</param>
    </member>
    <member name="P:System.Runtime.Serialization.IFormatter.SurrogateSelector">
      <summary>Ottiene o imposta l'oggetto <see cref="T:System.Runtime.Serialization.SurrogateSelector" /> utilizzato dal formattatore corrente.</summary>
      <returns>Oggetto <see cref="T:System.Runtime.Serialization.SurrogateSelector" /> utilizzato da questo formattatore.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.ISerializationSurrogate">
      <summary>Implementa un selettore di surrogati di serializzazione che consente a un oggetto di eseguire la serializzazione e la deserializzazione di un altro oggetto.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.ISerializationSurrogate.GetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Popola l'oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> specificato con tutti i dati necessari per serializzare l'oggetto.</summary>
      <param name="obj">Oggetto da serializzare.</param>
      <param name="info">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> da popolare con i dati.</param>
      <param name="context">Destinazione della serializzazione (vedere <see cref="T:System.Runtime.Serialization.StreamingContext" />).</param>
      <exception cref="T:System.Security.SecurityException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ISerializationSurrogate.SetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISurrogateSelector)">
      <summary>Popola l'oggetto utilizzando le informazioni presenti nell'oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</summary>
      <param name="obj">Oggetto da popolare.</param>
      <param name="info">Informazioni con cui popolare l'oggetto.</param>
      <param name="context">Origine da cui viene deserializzato l'oggetto.</param>
      <param name="selector">Selettore di surrogati da cui viene avviata la ricerca di un surrogato compatibile.</param>
      <returns>Oggetto deserializzato popolato.</returns>
      <exception cref="T:System.Security.SecurityException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
    </member>
    <member name="T:System.Runtime.Serialization.ISurrogateSelector">
      <summary>Indica una classe di selettori di surrogati di serializzazione.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.ISurrogateSelector.ChainSelector(System.Runtime.Serialization.ISurrogateSelector)">
      <summary>Specifica il successivo elemento <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> per i surrogati da esaminare nel caso in cui l'istanza corrente non disponga di un surrogato per il tipo e l'assembly indicati nel contesto specificato.</summary>
      <param name="selector">Successivo selettore di surrogati da esaminare.</param>
      <exception cref="T:System.Security.SecurityException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ISurrogateSelector.GetNextSelector">
      <summary>Restituisce il selettore di surrogati successivo della catena.</summary>
      <returns>Selettore di surrogati successivo nella catena oppure <see langword="null" />.</returns>
      <exception cref="T:System.Security.SecurityException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ISurrogateSelector.GetSurrogate(System.Type,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISurrogateSelector@)">
      <summary>Individua il surrogato che rappresenta il tipo di oggetto specificato, a partire dal selettore di surrogati indicato per il contesto di serializzazione specificato.</summary>
      <param name="type">
        <see cref="T:System.Type" /> di oggetto (classe) che necessita di un surrogato.</param>
      <param name="context">Contesto di origine e destinazione della serializzazione corrente.</param>
      <param name="selector">Quando il metodo termina, contiene un oggetto <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> che contiene un riferimento al selettore di surrogati in cui è stato individuato il surrogato appropriato. Questo parametro viene passato non inizializzato.</param>
      <returns>Surrogato appropriato per il tipo specificato nel contesto indicato.</returns>
      <exception cref="T:System.Security.SecurityException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
    </member>
    <member name="T:System.Runtime.Serialization.ObjectIDGenerator">
      <summary>Genera ID per gli oggetti.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectIDGenerator.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectIDGenerator.GetId(System.Object,System.Boolean@)">
      <summary>Restituisce l'ID dell'oggetto specificato, generando un nuovo ID se questo oggetto non è già stato identificato da <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" />.</summary>
      <param name="obj">Oggetto per il quale si desidera un ID.</param>
      <param name="firstTime">
        <see langword="true" /> se il valore di <paramref name="obj" /> non era noto in precedenza all'oggetto <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" />; in caso contrario, <see langword="false" />.</param>
      <returns>L'ID dell'oggetto viene utilizzato per la serializzazione. Il parametro <paramref name="firstTime" /> è impostato su <see langword="true" /> se l'oggetto è stato identificato per la prima volta, altrimenti è impostato su <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="obj" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">A <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" /> è stato chiesto di tenere traccia di un numero eccessivo di oggetti.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectIDGenerator.HasId(System.Object,System.Boolean@)">
      <summary>Stabilisce se a un oggetto è già stato assegnato un ID.</summary>
      <param name="obj">L'oggetto richiesto.</param>
      <param name="firstTime">
        <see langword="true" /> se il valore di <paramref name="obj" /> non era noto in precedenza all'oggetto <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" />; in caso contrario, <see langword="false" />.</param>
      <returns>ID oggetto di <paramref name="obj" /> se noto in precedenza a <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" />; in caso contrario, zero.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="obj" /> è <see langword="null" />.</exception>
    </member>
    <member name="T:System.Runtime.Serialization.ObjectManager">
      <summary>Tiene traccia degli oggetti in fase di deserializzazione.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.#ctor(System.Runtime.Serialization.ISurrogateSelector,System.Runtime.Serialization.StreamingContext)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Serialization.ObjectManager" />.</summary>
      <param name="selector">Selettore di surrogati da utilizzare. L'oggetto <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> consente di definire il surrogato corretto da utilizzare per la deserializzazione di oggetti di un tipo specifico. Durante la deserializzazione, il selettore di surrogati crea una nuova istanza dell'oggetto dalle informazioni trasmesse nel flusso.</param>
      <param name="context">Contesto di flusso. L'oggetto <see cref="T:System.Runtime.Serialization.StreamingContext" /> non viene utilizzato da <see langword="ObjectManager" />, ma viene passato come parametro a tutti gli oggetti che implementano l'oggetto <see cref="T:System.Runtime.Serialization.ISerializable" /> o che hanno un oggetto <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />. Tali oggetti possono effettuare operazioni specifiche a seconda dell'origine delle informazioni da deserializzare.</param>
      <exception cref="T:System.Security.SecurityException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.DoFixups">
      <summary>Esegue tutte le correzioni registrate.</summary>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Una correzione non è stata completata correttamente.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.GetObject(System.Int64)">
      <summary>Restituisce l'oggetto con l'ID specificato.</summary>
      <param name="objectID">ID dell'oggetto richiesto.</param>
      <returns>Oggetto con l'ID specificato, se memorizzato in precedenza oppure <see langword="null" /> se tale oggetto non è stato registrato.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="objectID" /> è minore o uguale a zero.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RaiseDeserializationEvent">
      <summary>Genera l'evento di deserializzazione per qualsiasi oggetto registrato che implementi <see cref="T:System.Runtime.Serialization.IDeserializationCallback" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RaiseOnDeserializingEvent(System.Object)">
      <summary>Richiama il metodo contrassegnato con l'oggetto <see cref="T:System.Runtime.Serialization.OnDeserializingAttribute" />.</summary>
      <param name="obj">Istanza del tipo in cui è contenuto il metodo da richiamare.</param>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(System.Int64,System.Int32,System.Int64)">
      <summary>Registra una correzione per un elemento di una matrice.</summary>
      <param name="arrayToBeFixed">ID della matrice utilizzata per la registrazione di una correzione.</param>
      <param name="index">Indice all'interno di <c>arrayFixup</c> per il quale è richiesta una correzione.</param>
      <param name="objectRequired">ID dell'oggetto a cui punterà l'elemento corrente della matrice dopo il completamento della correzione.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="arrayToBeFixed" /> o <paramref name="objectRequired" /> è minore di o uguale a zero.</exception>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="index" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(System.Int64,System.Int32[],System.Int64)">
      <summary>Registra le correzioni per gli elementi specificati di una matrice da eseguire successivamente.</summary>
      <param name="arrayToBeFixed">ID della matrice utilizzata per la registrazione di una correzione.</param>
      <param name="indices">Indici all'interno della matrice multidimensionale per la quale è richiesta una correzione.</param>
      <param name="objectRequired">ID dell'oggetto a cui punteranno gli elementi della matrice dopo il completamento della correzione.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="arrayToBeFixed" /> o <paramref name="objectRequired" /> è minore di o uguale a zero.</exception>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="indices" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RecordDelayedFixup(System.Int64,System.String,System.Int64)">
      <summary>Registra una correzione per un membro oggetto da eseguire successivamente.</summary>
      <param name="objectToBeFixed">ID dell'oggetto che richiede il riferimento all'oggetto <paramref name="objectRequired" />.</param>
      <param name="memberName">Nome del membro del parametro <paramref name="objectToBeFixed" /> in cui verrà eseguita la correzione.</param>
      <param name="objectRequired">ID dell'oggetto richiesto dal parametro <paramref name="objectToBeFixed" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="objectToBeFixed" /> o <paramref name="objectRequired" /> è minore di o uguale a zero.</exception>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="memberName" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RecordFixup(System.Int64,System.Reflection.MemberInfo,System.Int64)">
      <summary>Registra una correzione per un membro di un oggetto da eseguire successivamente.</summary>
      <param name="objectToBeFixed">ID dell'oggetto che richiede il riferimento all'oggetto <paramref name="objectRequired" />.</param>
      <param name="member">Il membro di <paramref name="objectToBeFixed" /> in cui verrà eseguita la correzione.</param>
      <param name="objectRequired">ID dell'oggetto richiesto dal parametro <paramref name="objectToBeFixed" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="objectToBeFixed" /> o <paramref name="objectRequired" /> è minore di o uguale a zero.</exception>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="member" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64)">
      <summary>Registra un oggetto come se fosse deserializzato, associandolo a <paramref name="objectID" />.</summary>
      <param name="obj">Oggetto da registrare.</param>
      <param name="objectID">ID dell'oggetto da registrare.</param>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="obj" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="objectID" /> è minore o uguale a zero.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Il parametro <paramref name="objectID" /> è già stato registrato per un oggetto diverso da <paramref name="obj" /></exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo)">
      <summary>Registra un oggetto come se fosse deserializzato, associandolo a <paramref name="objectID" /> e registrando l'oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> utilizzato.</summary>
      <param name="obj">Oggetto da registrare.</param>
      <param name="objectID">ID dell'oggetto da registrare.</param>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> utilizzato se <paramref name="obj" /> implementa <see cref="T:System.Runtime.Serialization.ISerializable" /> o dispone di <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />. <paramref name="info" /> verrà completato con le informazioni relative a eventuali correzioni necessarie, quindi verrà passato all'oggetto richiesto quando tale oggetto sarà stato completato.</param>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="obj" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="objectID" /> è minore o uguale a zero.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Il parametro <paramref name="objectID" /> è già stato registrato per un oggetto diverso da <paramref name="obj" /></exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo)">
      <summary>Registra un membro di un oggetto come se fosse deserializzato, associandolo a <paramref name="objectID" /> e registrando l'oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</summary>
      <param name="obj">Oggetto da registrare.</param>
      <param name="objectID">ID dell'oggetto da registrare.</param>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> utilizzato se <paramref name="obj" /> implementa <see cref="T:System.Runtime.Serialization.ISerializable" /> o dispone di <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />. <paramref name="info" /> verrà completato con le informazioni relative a eventuali correzioni necessarie, quindi verrà passato all'oggetto richiesto quando tale oggetto sarà stato completato.</param>
      <param name="idOfContainingObj">ID dell'oggetto che contiene <paramref name="obj" />. Questo parametro è richiesto solo se <paramref name="obj" /> è un tipo di valore.</param>
      <param name="member">Campo dell'oggetto contenente in cui esiste <paramref name="obj" />. Questo parametro è significativo solo se <paramref name="obj" /> è un tipo di valore.</param>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="obj" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="objectID" /> è minore o uguale a zero.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Il parametro <paramref name="objectID" /> è già stato registrato per un oggetto diverso da <paramref name="obj" /> oppure <paramref name="member" /> non corrisponde a un oggetto <see cref="T:System.Reflection.FieldInfo" /> e <paramref name="member" /> non è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo,System.Int32[])">
      <summary>Registra un membro di una matrice contenuta in un oggetto durante la deserializzazione, associandolo a <paramref name="objectID" /> e registrando l'oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</summary>
      <param name="obj">Oggetto da registrare.</param>
      <param name="objectID">ID dell'oggetto da registrare.</param>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> utilizzato se <paramref name="obj" /> implementa <see cref="T:System.Runtime.Serialization.ISerializable" /> o dispone di <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />. <paramref name="info" /> verrà completato con le informazioni relative a eventuali correzioni necessarie, quindi verrà passato all'oggetto richiesto quando tale oggetto sarà stato completato.</param>
      <param name="idOfContainingObj">ID dell'oggetto che contiene <paramref name="obj" />. Questo parametro è richiesto solo se <paramref name="obj" /> è un tipo di valore.</param>
      <param name="member">Campo dell'oggetto contenente in cui esiste <paramref name="obj" />. Questo parametro è significativo solo se <paramref name="obj" /> è un tipo di valore.</param>
      <param name="arrayIndex">Se <paramref name="obj" /> è un oggetto <see cref="T:System.ValueType" /> e un membro di una matrice, <paramref name="arrayIndex" /> contiene l'indice all'interno della matrice in cui esiste <paramref name="obj" />. <paramref name="arrayIndex" /> viene ignorato se <paramref name="obj" /> non è sia un oggetto <see cref="T:System.ValueType" /> che un membro di una matrice.</param>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="obj" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="objectID" /> è minore o uguale a zero.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Il parametro <paramref name="objectID" /> è già stato registrato per un oggetto diverso da <paramref name="obj" /> oppure <paramref name="member" /> non è un <see cref="T:System.Reflection.FieldInfo" /> e <paramref name="member" /> non è <see langword="null" />.</exception>
    </member>
    <member name="T:System.Runtime.Serialization.SerializationBinder">
      <summary>Consente di controllare il caricamento delle classi e di indicare la classe da caricare.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationBinder.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Serialization.SerializationBinder" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationBinder.BindToName(System.Type,System.String@,System.String@)">
      <summary>Quando sottoposto a override in una classe derivata, controlla l'associazione tra un oggetto serializzato e un tipo.</summary>
      <param name="serializedType">Tipo dell'oggetto di cui il formattatore crea una nuova istanza.</param>
      <param name="assemblyName">Specifica il nome <see cref="T:System.Reflection.Assembly" /> dell'oggetto serializzato.</param>
      <param name="typeName">Specifica il nome <see cref="T:System.Type" /> dell'oggetto serializzato.</param>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationBinder.BindToType(System.String,System.String)">
      <summary>Quando sottoposto a override in una classe derivata, controlla l'associazione tra un oggetto serializzato e un tipo.</summary>
      <param name="assemblyName">Specifica il nome <see cref="T:System.Reflection.Assembly" /> dell'oggetto serializzato.</param>
      <param name="typeName">Specifica il nome <see cref="T:System.Type" /> dell'oggetto serializzato.</param>
      <returns>Tipo dell'oggetto di cui il formattatore crea una nuova istanza.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.SerializationObjectManager">
      <summary>Gestisce i processi di serializzazione in fase di esecuzione. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationObjectManager.#ctor(System.Runtime.Serialization.StreamingContext)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Serialization.SerializationObjectManager" />.</summary>
      <param name="context">Istanza della classe <see cref="T:System.Runtime.Serialization.StreamingContext" /> che contiene informazioni sull'operazione di serializzazione corrente.</param>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationObjectManager.RaiseOnSerializedEvent">
      <summary>Richiama l'evento di callback OnSerializing se il tipo dell'oggetto ne include uno. Registra inoltre l'oggetto per la generazione dell'evento di callback OnSerialized se il tipo dell'oggetto ne include uno.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationObjectManager.RegisterObject(System.Object)">
      <summary>Registra l'oggetto su cui saranno generati gli eventi.</summary>
      <param name="obj">Oggetto da registrare.</param>
    </member>
    <member name="T:System.Runtime.Serialization.SurrogateSelector">
      <summary>Assiste i formattatori nella scelta del surrogato di serializzazione a cui delegare il processo di serializzazione o di deserializzazione.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.SurrogateSelector.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Serialization.SurrogateSelector" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.SurrogateSelector.AddSurrogate(System.Type,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISerializationSurrogate)">
      <summary>Aggiunge un surrogato all'elenco dei surrogati verificati.</summary>
      <param name="type">Oggetto <see cref="T:System.Type" /> per il quale è necessario il surrogato.</param>
      <param name="context">Dati specifici del contesto.</param>
      <param name="surrogate">Surrogato da chiamare per questo tipo.</param>
      <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="type" /> o il parametro <paramref name="surrogate" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Esiste già un surrogato per questo tipo e contesto.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.SurrogateSelector.ChainSelector(System.Runtime.Serialization.ISurrogateSelector)">
      <summary>Aggiunge all'elenco dei surrogati l'oggetto <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> indicato in grado di gestire un tipo di oggetto specifico.</summary>
      <param name="selector">Selettore di surrogati da aggiungere.</param>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="selector" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Il selettore è già incluso nell'elenco dei selettori.</exception>
      <exception cref="T:System.Security.SecurityException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.SurrogateSelector.GetNextSelector">
      <summary>Restituisce il selettore successivo della catena dei selettori.</summary>
      <returns>
        <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> successivo nella catena dei selettori.</returns>
      <exception cref="T:System.Security.SecurityException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.SurrogateSelector.GetSurrogate(System.Type,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISurrogateSelector@)">
      <summary>Restituisce il surrogato per un tipo specifico.</summary>
      <param name="type">
        <see cref="T:System.Type" /> per cui è richiesto il surrogato.</param>
      <param name="context">Contesto di flusso.</param>
      <param name="selector">Surrogato da utilizzare.</param>
      <returns>Surrogato per un tipo specifico.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="type" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.SurrogateSelector.RemoveSurrogate(System.Type,System.Runtime.Serialization.StreamingContext)">
      <summary>Rimuove il surrogato associato a un determinato tipo.</summary>
      <param name="type">
        <see cref="T:System.Type" /> per il quale rimuovere il surrogato.</param>
      <param name="context">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> relativo al surrogato corrente.</param>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="type" /> è <see langword="null" />.</exception>
    </member>
  </members>
</doc>