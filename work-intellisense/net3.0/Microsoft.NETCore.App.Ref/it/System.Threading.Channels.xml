<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Threading.Channels</name>
  </assembly>
  <members>
    <member name="T:System.Threading.Channels.BoundedChannelFullMode">
      <summary vsli:raw="Specifies the behavior to use when writing to a bounded channel that is already full.">Specifica il comportamento da usare per la scrittura in un canale con vincoli che è già pieno.</summary>
    </member>
    <member name="F:System.Threading.Channels.BoundedChannelFullMode.DropNewest">
      <summary vsli:raw="Removes and ignores the newest item in the channel in order to make room for the item being written.">Rimuove e ignora l'elemento più recente nel canale per liberare spazio per l'elemento in corso di scrittura.</summary>
    </member>
    <member name="F:System.Threading.Channels.BoundedChannelFullMode.DropOldest">
      <summary vsli:raw="Removes and ignores the oldest item in the channel in order to make room for the item being written.">Rimuove e ignora l'elemento meno recente nel canale per liberare spazio per l'elemento in corso di scrittura.</summary>
    </member>
    <member name="F:System.Threading.Channels.BoundedChannelFullMode.DropWrite">
      <summary vsli:raw="Drops the item being written.">Trascina l'elemento in corso di scrittura.</summary>
    </member>
    <member name="F:System.Threading.Channels.BoundedChannelFullMode.Wait">
      <summary vsli:raw="Waits for space to be available in order to complete the write operation.">Attende che ci sia spazio disponibile per completare l'operazione di scrittura.</summary>
    </member>
    <member name="T:System.Threading.Channels.BoundedChannelOptions">
      <summary vsli:raw="Provides options that control the behavior of bounded &lt;see cref=&quot;T:System.Threading.Channels.Channel`1&quot; /&gt; instances.">Opzioni che controllano il comportamento delle istanze <see cref="T:System.Threading.Channels.Channel`1" /> associate.</summary>
    </member>
    <member name="M:System.Threading.Channels.BoundedChannelOptions.#ctor(System.Int32)">
      <summary vsli:raw="Initializes the options.">Inizializza le opzioni.</summary>
      <param name="capacity" vsli:raw="The maximum number of items the bounded channel may store.">Numero massimo di elementi che possono essere archiviati nel canale con vincoli.</param>
    </member>
    <member name="P:System.Threading.Channels.BoundedChannelOptions.Capacity">
      <summary vsli:raw="Gets or sets the maximum number of items the bounded channel may store.">Ottiene o imposta il numero massimo di elementi che possono essere archiviati nel canale con vincoli.</summary>
    </member>
    <member name="P:System.Threading.Channels.BoundedChannelOptions.FullMode">
      <summary vsli:raw="Gets or sets the behavior incurred by write operations when the channel is full.">Ottiene o imposta il comportamento determinato dalle operazioni di scrittura quando il canale è pieno.</summary>
    </member>
    <member name="T:System.Threading.Channels.Channel">
      <summary vsli:raw="Provides static methods for creating channels.">Fornisce i metodi statici per la creazione dei canali.</summary>
    </member>
    <member name="M:System.Threading.Channels.Channel.CreateBounded``1(System.Int32)">
      <summary vsli:raw="Creates a channel with the specified maximum capacity.">Crea un canale con la capacità massima specificata.</summary>
      <param name="capacity" vsli:raw="The maximum number of items the channel may store.">Numero massimo di elementi che possono essere archiviati nel canale.</param>
      <typeparam name="T" vsli:raw="Specifies the type of data in the channel.">Specifica il tipo di dati nel canale.</typeparam>
      <returns vsli:raw="The created channel.">Canale creato.</returns>
    </member>
    <member name="M:System.Threading.Channels.Channel.CreateBounded``1(System.Threading.Channels.BoundedChannelOptions)">
      <summary vsli:raw="Creates a channel with the specified maximum capacity.">Crea un canale con la capacità massima specificata.</summary>
      <param name="options" vsli:raw="Options that guide the behavior of the channel.">Opzioni che influiscono sul comportamento del canale.</param>
      <typeparam name="T" vsli:raw="Specifies the type of data in the channel.">Specifica il tipo di dati nel canale.</typeparam>
      <returns vsli:raw="The created channel.">Canale creato.</returns>
    </member>
    <member name="M:System.Threading.Channels.Channel.CreateUnbounded``1">
      <summary vsli:raw="Creates an unbounded channel usable by any number of readers and writers concurrently.">Crea un canale senza vincoli utilizzabile contemporaneamente da qualsiasi numero di lettori e writer.</summary>
      <typeparam name="T" vsli:raw="The type of data in the channel." />
      <returns vsli:raw="The created channel.">Canale creato.</returns>
    </member>
    <member name="M:System.Threading.Channels.Channel.CreateUnbounded``1(System.Threading.Channels.UnboundedChannelOptions)">
      <summary vsli:raw="Creates an unbounded channel subject to the provided options.">Crea un canale senza vincoli soggetto alle opzioni specificate.</summary>
      <param name="options" vsli:raw="Options that guide the behavior of the channel.">Opzioni che influiscono sul comportamento del canale.</param>
      <typeparam name="T" vsli:raw="Specifies the type of data in the channel.">Specifica il tipo di dati nel canale.</typeparam>
      <returns vsli:raw="The created channel.">Canale creato.</returns>
    </member>
    <member name="T:System.Threading.Channels.Channel`1">
      <summary vsli:raw="Provides a base class for channels that support reading and writing elements of type &lt;typeparamref name=&quot;T&quot; /&gt;.">Fornisce una classe di base per i canali che supportano gli elementi di lettura e scrittura di tipo <typeparamref name="T" />.</summary>
      <typeparam name="T" vsli:raw="Specifies the type of data readable and writable in the channel.">Specifica il tipo di dati leggibili e scrivibili nel canale.</typeparam>
    </member>
    <member name="M:System.Threading.Channels.Channel`1.#ctor" />
    <member name="T:System.Threading.Channels.Channel`2">
      <summary vsli:raw="Provides a base class for channels that support reading elements of type &lt;typeparamref name=&quot;TRead&quot; /&gt; and writing elements of type &lt;typeparamref name=&quot;TWrite&quot; /&gt;.">Fornisce una classe di base per i canali che supportano gli elementi di lettura di tipo <typeparamref name="TRead" /> e gli elementi di scrittura di tipo <typeparamref name="TWrite" />.</summary>
      <typeparam name="TWrite" vsli:raw="Specifies the type of data that may be written to the channel.">Specifica il tipo di dati che possono essere scritti nel canale.</typeparam>
      <typeparam name="TRead" vsli:raw="Specifies the type of data that may be read from the channel.">Specifica il tipo di dati che possono essere letti dal canale.</typeparam>
    </member>
    <member name="M:System.Threading.Channels.Channel`2.#ctor" />
    <member name="M:System.Threading.Channels.Channel`2.op_Implicit(System.Threading.Channels.Channel{`0,`1})~System.Threading.Channels.ChannelReader{`1}">
      <summary vsli:raw="Implicit cast from a &lt;see cref=&quot;T:System.Threading.Channels.Channel`2&quot; /&gt; to its readable half.">Cast implicito da <see cref="T:System.Threading.Channels.Channel`2" /> alla metà leggibile corrispondente.</summary>
      <param name="channel" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Channels.Channel`2&quot; /&gt; being cast.">Oggetto <see cref="T:System.Threading.Channels.Channel`2" /> di cui viene eseguito il cast.</param>
      <returns vsli:raw="The readable half.">Metà leggibile.</returns>
    </member>
    <member name="M:System.Threading.Channels.Channel`2.op_Implicit(System.Threading.Channels.Channel{`0,`1})~System.Threading.Channels.ChannelWriter{`0}">
      <summary vsli:raw="Implicit cast from a &lt;see cref=&quot;T:System.Threading.Channels.Channel`2&quot; /&gt; to its writable half.">Cast implicito da <see cref="T:System.Threading.Channels.Channel`2" /> alla metà scrivibile corrispondente.</summary>
      <param name="channel" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Channels.Channel`2&quot; /&gt; being cast.">Oggetto <see cref="T:System.Threading.Channels.Channel`2" /> di cui viene eseguito il cast.</param>
      <returns vsli:raw="The writable half.">Metà scrivibile.</returns>
    </member>
    <member name="P:System.Threading.Channels.Channel`2.Reader">
      <summary vsli:raw="Gets the readable half of this channel.">Ottiene la metà leggibile del canale.</summary>
    </member>
    <member name="P:System.Threading.Channels.Channel`2.Writer">
      <summary vsli:raw="Gets the writable half of this channel.">Ottiene la metà scrivibile del canale.</summary>
    </member>
    <member name="T:System.Threading.Channels.ChannelClosedException">
      <summary vsli:raw="Exception thrown when a channel is used after it's been closed.">Eccezione generata quando si usa un canale dopo che è stato chiuso.</summary>
    </member>
    <member name="M:System.Threading.Channels.ChannelClosedException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Channels.ChannelClosedException&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Threading.Channels.ChannelClosedException" />.</summary>
    </member>
    <member name="M:System.Threading.Channels.ChannelClosedException.#ctor(System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Channels.ChannelClosedException&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Threading.Channels.ChannelClosedException" />.</summary>
      <param name="innerException" vsli:raw="The exception that is the cause of this exception.">Eccezione che rappresenta la causa dell'eccezione corrente.</param>
    </member>
    <member name="M:System.Threading.Channels.ChannelClosedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Channels.ChannelClosedException&quot; /&gt; class with serialized data.">Inizializza una nuova istanza della classe <see cref="T:System.Threading.Channels.ChannelClosedException" /> con dati serializzati.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Oggetto che contiene i dati oggetto serializzati.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Informazioni contestuali sull'origine o sulla destinazione.</param>
    </member>
    <member name="M:System.Threading.Channels.ChannelClosedException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Channels.ChannelClosedException&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Threading.Channels.ChannelClosedException" />.</summary>
      <param name="message" vsli:raw="The message that describes the error.">Messaggio in cui viene descritto l'errore.</param>
    </member>
    <member name="M:System.Threading.Channels.ChannelClosedException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Channels.ChannelClosedException&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Threading.Channels.ChannelClosedException" />.</summary>
      <param name="message" vsli:raw="The message that describes the error.">Messaggio in cui viene descritto l'errore.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of this exception.">Eccezione che rappresenta la causa dell'eccezione corrente.</param>
    </member>
    <member name="T:System.Threading.Channels.ChannelOptions">
      <summary vsli:raw="Provides options that control the behavior of channel instances.">Fornisce opzioni che controllano il comportamento delle istanze del canale.</summary>
    </member>
    <member name="M:System.Threading.Channels.ChannelOptions.#ctor" />
    <member name="P:System.Threading.Channels.ChannelOptions.AllowSynchronousContinuations">
      <summary vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if operations performed on a channel may synchronously invoke continuations subscribed to&#xA;            notifications of pending async operations; &lt;see langword=&quot;false&quot; /&gt; if all continuations should be invoked asynchronously.">Restituisce <see langword="true" /> se le operazioni eseguite in un canale richiamano in modo sincrono continuazioni che hanno sottoscritto notifiche di operazioni asincrone in sospeso. Restituisce <see langword="false" /> se tutte le continuazioni devono essere richiamate in modo asincrono.</summary>
    </member>
    <member name="P:System.Threading.Channels.ChannelOptions.SingleReader">
      <summary vsli:raw="&lt;see langword=&quot;true&quot; /&gt; readers from the channel guarantee that there will only ever be at most one read operation at a time;&#xA;            &lt;see langword=&quot;false&quot; /&gt; if no such constraint is guaranteed.">
        <see langword="true" /> i lettori del canale garantiscono che non ci sarà mai più di una operazione di lettura alla volta; <see langword="false" /> se non è garantito un vincolo di questo genere.</summary>
    </member>
    <member name="P:System.Threading.Channels.ChannelOptions.SingleWriter">
      <summary vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if writers to the channel guarantee that there will only ever be at most one write operation&#xA;            at a time; &lt;see langword=&quot;false&quot; /&gt; if no such constraint is guaranteed.">
        <see langword="true" /> i writer del canale garantiscono che non ci sarà mai più di una operazione di scrittura alla volta; <see langword="false" /> se non è garantito un vincolo di questo genere.</summary>
    </member>
    <member name="T:System.Threading.Channels.ChannelReader`1">
      <summary vsli:raw="Provides a base class for reading from a channel.">Fornisce una classe di base per la lettura da un canale.</summary>
      <typeparam name="T" vsli:raw="Specifies the type of data that may be read from the channel.">Specifica il tipo di dati che possono essere letti dal canale.</typeparam>
    </member>
    <member name="M:System.Threading.Channels.ChannelReader`1.#ctor" />
    <member name="P:System.Threading.Channels.ChannelReader`1.Completion">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Threading.Tasks.Task&quot; /&gt; that completes when no more data will ever&#xA;            be available to be read from this channel.">Ottiene un <see cref="T:System.Threading.Tasks.Task" /> che viene completato quando nessun altro dato è disponibile per la lettura da questo canale.</summary>
    </member>
    <member name="M:System.Threading.Channels.ChannelReader`1.ReadAllAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Collections.Generic.IAsyncEnumerable`1&quot; /&gt; that enables reading all of the data from the channel.">Crea un elemento <see cref="T:System.Collections.Generic.IAsyncEnumerable`1" /> che consente la lettura di tutti i dati dal canale.</summary>
      <param name="cancellationToken" vsli:raw="The cancellation token to use to cancel the enumeration. If data is immediately ready for reading, then that data may be yielded even after cancellation has been requested.">Token di annullamento usato per annullare l'enumerazione.</param>
      <returns vsli:raw="The created async enumerable.">Elemento asincrono creato enumerabile.</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelReader`1.ReadAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously reads an item from the channel.">Legge in modo asincrono un elemento dal canale.</summary>
      <param name="cancellationToken" vsli:raw="A &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; used to cancel the read operation.">
        <see cref="T:System.Threading.CancellationToken" /> usato per annullare l'operazione di lettura.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask`1&quot; /&gt; that represents the asynchronous read operation.">
        <see cref="T:System.Threading.Tasks.ValueTask`1" /> che rappresenta l'operazione di lettura asincrona.</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelReader`1.TryRead(`0@)">
      <summary vsli:raw="Attempts to read an item from the channel.">Tenta di leggere un elemento dal canale.</summary>
      <param name="item" vsli:raw="The read item, or a default value if no item could be read.">Elemento letto o un valore predefinito se non è stato possibile leggere alcun elemento.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an item was read; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se è stato letto un elemento; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelReader`1.WaitToReadAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask`1&quot; /&gt; that will complete when data is available to read.">Restituisce un <see cref="T:System.Threading.Tasks.Task`1" /> che verrà completato quando sono disponibili i dati per la lettura.</summary>
      <param name="cancellationToken" vsli:raw="A &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; used to cancel the wait operation.">
        <see cref="T:System.Threading.CancellationToken" /> usato per annullare l'operazione di attesa.</param>
      <returns vsli:raw="&lt;para&gt;A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask`1&quot; /&gt; that will complete with a &lt;see langword=&quot;true&quot; /&gt; result when data is available to read&#xA;            or with a &lt;see langword=&quot;false&quot; /&gt; result when no further data will ever be available to be read due to the channel completing successfully.&lt;/para&gt;&lt;para&gt;If the channel completes with an exception, the task will also complete with an exception.&lt;/para&gt;">
        <see cref="T:System.Threading.Tasks.Task`1" /> che verrà completato con un risultato <see langword="true" /> quando sono disponibili i dati per la lettura o con un risultato <see langword="false" /> quando non sono disponibili altri dati per la lettura.</returns>
    </member>
    <member name="T:System.Threading.Channels.ChannelWriter`1">
      <summary vsli:raw="Provides a base class for writing to a channel.">Fornisce una classe di base per la scrittura in un canale.</summary>
      <typeparam name="T" vsli:raw="Specifies the type of data that may be written to the channel.">Specifica il tipo di dati che possono essere scritti nel canale.</typeparam>
    </member>
    <member name="M:System.Threading.Channels.ChannelWriter`1.#ctor" />
    <member name="M:System.Threading.Channels.ChannelWriter`1.Complete(System.Exception)">
      <summary vsli:raw="Mark the channel as being complete, meaning no more items will be written to it.">Contrassegnare il canale come completo, per indicare che non saranno scritti altri elementi.</summary>
      <param name="error" vsli:raw="Optional Exception indicating a failure that's causing the channel to complete.">Eccezione facoltativa che indica un errore che causa il completamento del canale.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The channel has already been marked as complete.">Il canale è già stato contrassegnato come completo.</exception>
    </member>
    <member name="M:System.Threading.Channels.ChannelWriter`1.TryComplete(System.Exception)">
      <summary vsli:raw="Attempts to mark the channel as being completed, meaning no more data will be written to it.">Tenta di contrassegnare il canale come completato, per indicare che non saranno scritti altri dati.</summary>
      <param name="error" vsli:raw="An &lt;see cref=&quot;T:System.Exception&quot; /&gt; indicating the failure causing no more data to be written, or null for success.">
        <see cref="T:System.Exception" /> che indica l'errore che causa l'impossibilità di scrivere altri dati oppure null in caso di esito positivo.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this operation successfully completes the channel; otherwise, &lt;see langword=&quot;false&quot; /&gt; if the channel could not be marked for completion,&#xA;            for example due to having already been marked as such, or due to not supporting completion.&#xA;          .">
        <see langword="true" /> se questa operazione comporta il corretto completamento del canale; in caso contrario, <see langword="false" /> se non è stato possibile contrassegnare il canale per il completamento, ad esempio perché è già stato contrassegnato come tale o perché non supporta il completamento.</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelWriter`1.TryWrite(`0)">
      <summary vsli:raw="Attempts to write the specified item to the channel.">Tenta di scrivere l'elemento specificato nel canale.</summary>
      <param name="item" vsli:raw="The item to write.">Elemento da scrivere.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the item was written; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'elemento è stato scritto; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelWriter`1.WaitToWriteAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask`1&quot; /&gt; that will complete when space is available to write an item.">Restituisce un <see cref="T:System.Threading.Tasks.Task`1" /> che verrà completato quando è disponibile lo spazio per scrivere un elemento.</summary>
      <param name="cancellationToken" vsli:raw="A &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; used to cancel the wait operation.">
        <see cref="T:System.Threading.CancellationToken" /> usato per annullare l'operazione di attesa.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask`1&quot; /&gt; that will complete with a &lt;see langword=&quot;true&quot; /&gt; result when space is available to write an item&#xA;            or with a &lt;see langword=&quot;false&quot; /&gt; result when no further writing will be permitted.">
        <see cref="T:System.Threading.Tasks.Task`1" /> che verrà completato con un risultato <see langword="true" /> quando è disponibile lo spazio per scrivere un elemento o con un risultato <see langword="false" /> quando non sono consentite altre operazioni di scrittura.</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelWriter`1.WriteAsync(`0,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously writes an item to the channel.">Scrive in modo asincrono un elemento nel canale.</summary>
      <param name="item" vsli:raw="The value to write to the channel.">Valore da scrivere nel canale.</param>
      <param name="cancellationToken" vsli:raw="A &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; used to cancel the write operation.">
        <see cref="T:System.Threading.CancellationToken" /> usato per annullare l'operazione di scrittura.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask&quot; /&gt; that represents the asynchronous write operation.">
        <see cref="T:System.Threading.Tasks.Task" /> che rappresenta l'operazione di scrittura asincrona.</returns>
    </member>
    <member name="T:System.Threading.Channels.UnboundedChannelOptions">
      <summary vsli:raw="Provides options that control the behavior of unbounded &lt;see cref=&quot;T:System.Threading.Channels.Channel`1&quot; /&gt; instances.">Opzioni che controllano il comportamento delle istanze <see cref="T:System.Threading.Channels.Channel`1" /> non associate.</summary>
    </member>
    <member name="M:System.Threading.Channels.UnboundedChannelOptions.#ctor" />
  </members>
</doc>