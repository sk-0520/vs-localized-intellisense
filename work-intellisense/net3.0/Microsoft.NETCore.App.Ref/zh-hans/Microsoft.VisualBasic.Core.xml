<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>Microsoft.VisualBasic.Core</name>
  </assembly>
  <members>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.ApplicationBase">
      <summary>提供与当前应用程序相关的属性、方法和事件。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.#ctor">
      <summary>初始化 <see cref="T:Microsoft.VisualBasic.ApplicationServices.ApplicationBase" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeCulture(System.String)">
      <summary>更改当前线程用于字符串操作和字符串格式设置的区域性。</summary>
      <param name="cultureName">
        <see langword="String" />。 字符串形式的区域性名称。 有关可能名称的列表，请参见 <see cref="T:System.Globalization.CultureInfo" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cultureName" /> 为 <see langword="Nothing" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="cultureName" /> 不是有效的区域性名称。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeUICulture(System.String)">
      <summary>更改当前线程用来检索特定于区域性的资源的区域性。</summary>
      <param name="cultureName">
        <see langword="String" />。 字符串形式的区域性名称。 有关可能名称的列表，请参见 <see cref="T:System.Globalization.CultureInfo" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cultureName" /> 为 <see langword="Nothing" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="cultureName" /> 不是有效的区域性名称。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Culture">
      <summary>获取当前线程用于字符串操作和字符串格式设置的区域性。</summary>
      <returns>一个 <see cref="T:System.Globalization.CultureInfo" /> 对象，它表示当前线程用于字符串操作和字符串格式设置的区域性。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.GetEnvironmentVariable(System.String)">
      <summary>返回指定环境变量的值。</summary>
      <param name="name">一个 <see langword="String" />，包含环境变量名。</param>
      <returns>一个 <see langword="String" />，包含名为 <paramref name="name" /> 的环境变量的值。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 为 <see langword="Nothing" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 指定的环境变量不存在。</exception>
      <exception cref="T:System.Security.SecurityException">调用代码没有访问权限为 <see langword="Read" /> 的 <see cref="T:System.Security.Permissions.EnvironmentPermission" />。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info">
      <summary>获取一个对象，该对象提供用来获取有关应用程序的程序集的信息（如版本号、说明等等）的属性。</summary>
      <returns>当前应用程序的 <see cref="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.UICulture">
      <summary>获取当前线程用来检索特定于区域性的资源的区域性。</summary>
      <returns>一个 <see cref="T:System.Globalization.CultureInfo" /> 对象，它表示当前线程用来检索特定于区域性的资源的区域性。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo">
      <summary>提供用来获取应用程序信息（如版本号、说明、加载的程序集等）的属性。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.#ctor(System.Reflection.Assembly)">
      <summary>使用指定的程序集信息初始化 <see cref="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo" /> 类的新实例。</summary>
      <param name="currentAssembly">
        <see cref="T:System.Reflection.Assembly" />。 要获取其信息的程序集。</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyName">
      <summary>获取应用程序的程序集文件的名称（不含扩展名）。</summary>
      <returns>一个包含文件名的 <see langword="String" />。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.CompanyName">
      <summary>获取与该应用程序关联的公司名称。</summary>
      <returns>一个 <see langword="String" /> 值，包含与应用程序关联的公司名称。</returns>
      <exception cref="T:System.InvalidOperationException">程序集没有 <see cref="T:System.Reflection.AssemblyCompanyAttribute" /> 特性。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Copyright">
      <summary>获取与应用程序关联的版权声明。</summary>
      <returns>一个 <see langword="String" /> 值，包含与应用程序关联的版权声明。</returns>
      <exception cref="T:System.InvalidOperationException">程序集没有 <see cref="T:System.Reflection.AssemblyCopyrightAttribute" /> 特性。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Description">
      <summary>获取与应用程序关联的说明。</summary>
      <returns>一个 <see langword="String" /> 值，包含与应用程序关联的说明。</returns>
      <exception cref="T:System.InvalidOperationException">程序集没有 <see cref="T:System.Reflection.AssemblyDescriptionAttribute" /> 特性。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.DirectoryPath">
      <summary>获取应用程序的存储目录。</summary>
      <returns>一个 <see langword="String" /> 值，包含应用程序的存储目录。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.LoadedAssemblies">
      <summary>获取由应用程序加载的所有程序集的集合。</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 的 <see cref="T:System.Reflection.Assembly" />，包含由应用程序加载的所有程序集。</returns>
      <exception cref="T:System.AppDomainUnloadedException">未加载应用程序域。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.ProductName">
      <summary>获取与应用程序关联的产品名称。</summary>
      <returns>一个 <see langword="String" /> 值，包含与应用程序关联的产品名称。</returns>
      <exception cref="T:System.InvalidOperationException">程序集没有 <see cref="T:System.Reflection.AssemblyProductAttribute" /> 特性。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.StackTrace">
      <summary>获取当前的堆栈跟踪信息。</summary>
      <returns>一个 <see langword="String" /> 值，包含当前的堆栈跟踪信息。 返回值可能为 <see cref="F:System.String.Empty" />。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">请求的堆栈跟踪信息超出范围。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Title">
      <summary>获取与应用程序关联的标题。</summary>
      <returns>一个 <see langword="String" /> 值，包含与应用程序关联的 <see cref="T:System.Reflection.AssemblyTitleAttribute" />。</returns>
      <exception cref="T:System.InvalidOperationException">程序集没有 <see cref="T:System.Reflection.AssemblyTitleAttribute" /> 特性。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Trademark">
      <summary>获取与应用程序关联的商标声明。</summary>
      <returns>一个 <see langword="String" /> 值，包含与应用程序关联的商标声明。</returns>
      <exception cref="T:System.InvalidOperationException">程序集没有 <see cref="T:System.Reflection.AssemblyTrademarkAttribute" /> 特性。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Version">
      <summary>获取应用程序的版本号。</summary>
      <returns>一个 <see cref="T:System.Version" /> 对象，包含应用程序的版本号。</returns>
      <exception cref="T:System.Security.SecurityException">应用程序没有足够的权限访问程序集版本。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.WorkingSet">
      <summary>获取映射到进程上下文的物理内存量。</summary>
      <returns>一个 <see langword="Long" /> 值，包含映射到进程上下文的物理内存的字节数。</returns>
      <exception cref="T:System.Security.SecurityException">存在部分信任的情况，用户缺少必要的权限。</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase">
      <summary>提供与当前应用程序相关的属性、方法和事件。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.#ctor">
      <summary>初始化 <see cref="T:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs">
      <summary>获取一个集合，该集合包含当前应用程序的字符串形式的命令行参数。</summary>
      <returns>
        <see langword="String" /> 类型的 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />，包含当前应用程序的命令行参数，参数形式为字符串。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.InternalCommandLine">
      <summary>设置要用作当前应用程序的命令行参数的值。</summary>
      <returns>一个 <see langword="String" /> 类型的 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />，包含要用作当前应用程序的命令行参数的字符串。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs">
      <summary>为 <see langword="My.Application.Startup" /> 事件提供数据。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.String})">
      <summary>初始化 <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs" /> 类的新实例。</summary>
      <param name="args">一个 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 对象，包含应用程序的命令行参数。</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.CommandLine">
      <summary>获取应用程序的命令行参数。</summary>
      <returns>一个 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 对象，包含应用程序的命令行参数。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs">
      <summary>为 <see langword="My.Application.StartupNextInstance" /> 事件提供数据。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.String},System.Boolean)">
      <summary>初始化 <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs" /> 类的新实例。</summary>
      <param name="args">一个 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 对象，包含后续应用程序实例的命令行参数。</param>
      <param name="bringToForegroundFlag">一个 <see cref="T:System.Boolean" />，指示第一个应用程序实例是否应在退出异常处理程序时进入前台。</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.BringToForeground">
      <summary>指示第一个应用程序实例是否应在退出异常处理程序时进入前台。</summary>
      <returns>一个 <see cref="T:System.Boolean" />，指示第一个应用程序实例是否应在退出异常处理程序时进入前台。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.CommandLine">
      <summary>获取后续应用程序实例的命令行参数。</summary>
      <returns>一个 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 对象，包含后续应用程序实例的命令行参数。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs">
      <summary>为 <see langword="My.Application.UnhandledException" /> 事件提供数据。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.#ctor(System.Boolean,System.Exception)">
      <summary>初始化 <see cref="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs" /> 类的新实例。</summary>
      <param name="exitApplication">一个 <see cref="T:System.Boolean" /> 值，指示应用程序是否应在退出异常处理程序时退出。</param>
      <param name="exception">已发生的 <see cref="T:System.Exception" />。</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication">
      <summary>指示应用程序是否应在退出异常处理程序时退出。</summary>
      <returns>一个 <see cref="T:System.Boolean" /> 值，指示应用程序是否应在退出异常处理程序时退出。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.User">
      <summary>提供对有关当前用户的信息的访问。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.User.#ctor">
      <summary>初始化 <see cref="T:Microsoft.VisualBasic.ApplicationServices.User" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal">
      <summary>获取或设置当前主体（对基于角色的安全性而言）。</summary>
      <returns>一个 <see cref="T:System.Security.Principal.IPrincipal" /> 值，表示安全上下文。</returns>
      <exception cref="T:System.Security.SecurityException">调用方没有设置该主体所需的权限。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal">
      <summary>获取或设置表示当前用户的主体对象。</summary>
      <returns>一个表示当前用户的 <see cref="T:System.Security.Principal.IPrincipal" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated">
      <summary>获取一个值，该值指示是否验证了用户。</summary>
      <returns>如果用户已经过验证，则为 <see langword="True" />；否则为 <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.User.IsInRole(System.String)">
      <summary>确定当前用户是否属于指定的角色。</summary>
      <param name="role">要检查其成员资格的角色的名称。</param>
      <returns>如果当前用户是指定角色的成员，则为 <see langword="True" />；否则为 <see langword="False" />。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.User.Name">
      <summary>获取当前用户的名称。</summary>
      <returns>
        <see langword="String" />。 当前用户的名称。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.AppWinStyle">
      <summary vsli:raw="Indicates the window style to use for the invoked program when calling the &lt;see langword=&quot;Shell&quot; /&gt; function.">指示在调用 <see langword="Shell" /> 函数时用于被调用程序的窗口样式。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.Hide">
      <summary vsli:raw="Window is hidden and focus is passed to the hidden window. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbHide&quot; /&gt;.">窗口被隐藏，且焦点传递至隐藏的窗口。 此成员等效于 Visual Basic 常量 <see langword="vbHide" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.MaximizedFocus">
      <summary vsli:raw="Window is maximized with focus. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMaximizedFocus&quot; /&gt;.">窗口最大化，且具有焦点。 此成员等效于 Visual Basic 常量 <see langword="vbMaximizedFocus" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.MinimizedFocus">
      <summary vsli:raw="Window is displayed as an icon with focus. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMinimizedFocus&quot; /&gt;.">窗口显示为一个具有焦点的图标。 此成员等效于 Visual Basic 常量 <see langword="vbMinimizedFocus" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.MinimizedNoFocus">
      <summary vsli:raw="Window is displayed as an icon. The currently active window remains active. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMinimizedNoFocus&quot; /&gt;.">窗口显示为一个图标。 当前活动的窗口仍保持活动状态。 此成员等效于 Visual Basic 常量 <see langword="vbMinimizedNoFocus" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.NormalFocus">
      <summary vsli:raw="Window has focus and is restored to its original size and position. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbNormalFocus&quot; /&gt;.">窗口具有焦点，且还原至其原始大小和位置。 此成员等效于 Visual Basic 常量 <see langword="vbNormalFocus" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.NormalNoFocus">
      <summary vsli:raw="Window is restored to its most recent size and position. The currently active window remains active. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbNormalNoFocus&quot; /&gt;.">窗口还原至其最近的大小和位置。 当前活动的窗口仍保持活动状态。 此成员等效于 Visual Basic 常量 <see langword="vbNormalNoFocus" />。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CallType">
      <summary vsli:raw="Indicates the type of procedure being invoked when calling the &lt;see langword=&quot;CallByName&quot; /&gt; function.">指示在调用 <see langword="CallByName" /> 函数时调用的过程类型。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Get">
      <summary vsli:raw="A property value is being retrieved.  This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbGet&quot; /&gt;.">正在检索属性值。  此成员等效于 Visual Basic 常量 <see langword="vbGet" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Let">
      <summary vsli:raw="An Object property value is being determined. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbLet&quot; /&gt;.">正在确定 Object 属性值。 此成员等效于 Visual Basic 常量 <see langword="vbLet" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Method">
      <summary vsli:raw="A method is being invoked.  This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMethod&quot; /&gt;.">正在调用方法。  此成员等效于 Visual Basic 常量 <see langword="vbMethod" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Set">
      <summary vsli:raw="A property value is being determined.  This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbSet&quot; /&gt;.">正在确定属性值。  此成员等效于 Visual Basic 常量 <see langword="vbSet" />。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Collection">
      <summary vsli:raw="A Visual Basic &lt;see langword=&quot;Collection&quot; /&gt; is an ordered set of items that can be referred to as a unit.">Visual Basic <see langword="Collection" /> 是可作为单元引用的一组有序项。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.#ctor">
      <summary vsli:raw="Creates and returns a new Visual Basic &lt;see cref=&quot;T:Microsoft.VisualBasic.Collection&quot; /&gt; object.">创建并返回一个新的 Visual Basic <see cref="T:Microsoft.VisualBasic.Collection" /> 对象。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Add(System.Object,System.String,System.Object,System.Object)">
      <summary vsli:raw="Adds an element to a &lt;see langword=&quot;Collection&quot; /&gt; object.">将一个元素添加到 <see langword="Collection" /> 对象。</summary>
      <param name="Item" vsli:raw="Required. An object of any type that specifies the element to add to the collection.">必需。 指定要添加到集合的元素的任意类型的对象。</param>
      <param name="Key" vsli:raw="Optional. A unique &lt;see langword=&quot;String&quot; /&gt; expression that specifies a key string that can be used instead of a positional index to access this new element in the collection.">可选。 指定键字符串的唯一 <see langword="String" /> 表达式，可以用此键字符串代替定位索引访问集合的这个新元素。</param>
      <param name="Before" vsli:raw="Optional. An expression that specifies a relative position in the collection. The element to be added is placed in the collection before the element identified by the &lt;paramref name=&quot;Before&quot; /&gt; argument. If &lt;paramref name=&quot;Before&quot; /&gt; is a numeric expression, it must be a number from 1 through the value of the collection's &lt;see cref=&quot;P:Microsoft.VisualBasic.Collection.Count&quot; /&gt; property. If &lt;paramref name=&quot;Before&quot; /&gt; is a &lt;see langword=&quot;String&quot; /&gt; expression, it must correspond to the key string specified when the element being referred to was added to the collection. You cannot specify both &lt;paramref name=&quot;Before&quot; /&gt; and &lt;paramref name=&quot;After&quot; /&gt;.">可选。 指定集合中的相对位置的表达式。 将要添加的元素放在集合中由 <paramref name="Before" /> 参数标识的元素前面。 如果 <paramref name="Before" /> 是数值表达式，则它必须是介于 1 和集合的 <see cref="P:Microsoft.VisualBasic.Collection.Count" /> 属性值之间的数值。 如果 <paramref name="Before" /> 是 <see langword="String" /> 表达式，则必须对应于将引用的元素添加到集合时指定的键字符串。 不能同时指定 <paramref name="Before" /> 和 <paramref name="After" />。</param>
      <param name="After" vsli:raw="Optional. An expression that specifies a relative position in the collection. The element to be added is placed in the collection after the element identified by the &lt;paramref name=&quot;After&quot; /&gt; argument. If &lt;paramref name=&quot;After&quot; /&gt; is a numeric expression, it must be a number from 1 through the value of the collection's &lt;see langword=&quot;Count&quot; /&gt; property. If &lt;paramref name=&quot;After&quot; /&gt; is a &lt;see langword=&quot;String&quot; /&gt; expression, it must correspond to the key string specified when the element referred to was added to the collection. You cannot specify both &lt;paramref name=&quot;Before&quot; /&gt; and &lt;paramref name=&quot;After&quot; /&gt;.">可选。 指定集合中的相对位置的表达式。 将要添加的元素放在集合中由 <paramref name="After" /> 参数标识的元素后面。 如果 <paramref name="After" /> 是数值表达式，则它必须是介于 1 和集合的 <see langword="Count" /> 属性值之间的数值。 如果 <paramref name="After" /> 是 <see langword="String" /> 表达式，则必须对应于将引用的元素添加到集合时指定的键字符串。 不能同时指定 <paramref name="Before" /> 和 <paramref name="After" />。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Clear">
      <summary vsli:raw="Deletes all elements of a Visual Basic &lt;see langword=&quot;Collection&quot; /&gt; object.">删除 Visual Basic <see langword="Collection" /> 对象的所有元素。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Contains(System.String)">
      <summary vsli:raw="Returns a value that indicates whether a Visual Basic &lt;see langword=&quot;Collection&quot; /&gt; object contains an element with a specific key.">返回一个值，该值指示 Visual Basic <see langword="Collection" /> 对象是否包含一个带有特定键的元素。</summary>
      <param name="Key" vsli:raw="Required. A &lt;see langword=&quot;String&quot; /&gt; expression that specifies the key for which to search the elements of the collection.">必需。 <see langword="String" /> 表达式，指定搜索集合的元素所用的键。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if Visual Basic &lt;see langword=&quot;Collection&quot; /&gt; object contains an element with a specific key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 Visual Basic <see langword="Collection" /> 对象包含一个带有特定键的元素，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Count">
      <summary vsli:raw="Gets the number of elements in a collection.">获取集合中的元素数。</summary>
      <returns vsli:raw="The number of elements in a collection.">集合中的元素数。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the collection.">返回一个循环访问集合的枚举器。</summary>
      <returns vsli:raw="An enumerator that can be used to iterate through the collection.">用于循环访问集合的枚举数。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Item(System.Int32)">
      <summary vsli:raw="Gets a specific element of a &lt;see langword=&quot;Collection&quot; /&gt; object either by position or by key.">按位置或键获取 <see langword="Collection" /> 对象的特定元素。</summary>
      <param name="Index" vsli:raw="A numeric expression that specifies the position of an element of the collection. &lt;paramref name=&quot;Index&quot; /&gt; must be a number from 1 through the value of the collection's &lt;see cref=&quot;P:Microsoft.VisualBasic.Collection.Count&quot; /&gt; property. Or (B) An &lt;see langword=&quot;Object&quot; /&gt; expression that specifies the position or key string of an element of the collection.">一个数值表达式，用于指定集合的元素位置。 <paramref name="Index" /> 必须为介于 1 到集合的 <see cref="P:Microsoft.VisualBasic.Collection.Count" /> 属性的值之间的数字。 或 (B) 指定集合中元素的位置或键字符串的 <see langword="Object" /> 表达式。</param>
      <returns vsli:raw="A specific element of a &lt;see langword=&quot;Collection&quot; /&gt; object either by position or by key.">
        <see langword="Collection" />对象的特定元素 (按位置或键)。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Item(System.Object)">
      <summary vsli:raw="Gets a specific element of a &lt;see langword=&quot;Collection&quot; /&gt; object either by position or by key.">按位置或键获取 <see langword="Collection" /> 对象的特定元素。</summary>
      <param name="Index" vsli:raw="A numeric expression that specifies the position of an element of the collection. &lt;paramref name=&quot;Index&quot; /&gt; must be a number from 1 through the value of the collection's &lt;see cref=&quot;P:Microsoft.VisualBasic.Collection.Count&quot; /&gt; property. Or (B) An &lt;see langword=&quot;Object&quot; /&gt; expression that specifies the position or key string of an element of the collection.">一个数值表达式，用于指定集合的元素位置。 <paramref name="Index" /> 必须为介于 1 到集合的 <see cref="P:Microsoft.VisualBasic.Collection.Count" /> 属性的值之间的数字。 或 (B) 指定集合中元素的位置或键字符串的 <see langword="Object" /> 表达式。</param>
      <returns vsli:raw="A specific element of a &lt;see langword=&quot;Collection&quot; /&gt; object either by position or by key.">
        <see langword="Collection" />对象的特定元素 (按位置或键)。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Item(System.String)">
      <summary vsli:raw="Gets a specific element of a &lt;see langword=&quot;Collection&quot; /&gt; object either by position or by key.">按位置或键获取 <see langword="Collection" /> 对象的特定元素。</summary>
      <param name="Key" vsli:raw="A unique &lt;see langword=&quot;String&quot; /&gt; expression that specifies a key string that can be used, instead of a positional index, to access an element of the collection. &lt;paramref name=&quot;Key&quot; /&gt; must correspond to the &lt;paramref name=&quot;Key&quot; /&gt; argument specified when the element was added to the collection.">指定键字符串的唯一 <see langword="String" /> 表达式，可以使用此键字符串代替位置索引访问集合中的元素。 <paramref name="Key" /> 必须对应于将元素添加到集合中时指定的 <paramref name="Key" /> 参数。</param>
      <returns vsli:raw="A specific element of a &lt;see langword=&quot;Collection&quot; /&gt; object either by position or by key.">
        <see langword="Collection" />对象的特定元素 (按位置或键)。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Remove(System.Int32)">
      <summary vsli:raw="Removes an element from a &lt;see langword=&quot;Collection&quot; /&gt; object.">从 <see langword="Collection" /> 对象移除元素。</summary>
      <param name="Index" vsli:raw="A numeric expression that specifies the position of an element of the collection. &lt;paramref name=&quot;Index&quot; /&gt; must be a number from 1 through the value of the collection's &lt;see cref=&quot;P:Microsoft.VisualBasic.Collection.Count&quot; /&gt; property.">一个数值表达式，用于指定集合的元素位置。 <paramref name="Index" /> 必须为介于 1 到集合的 <see cref="P:Microsoft.VisualBasic.Collection.Count" /> 属性的值之间的数字。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Remove(System.String)">
      <summary vsli:raw="Removes an element from a &lt;see langword=&quot;Collection&quot; /&gt; object.">从 <see langword="Collection" /> 对象移除元素。</summary>
      <param name="Key" vsli:raw="A unique &lt;see langword=&quot;String&quot; /&gt; expression that specifies a key string that can be used, instead of a positional index, to access an element of the collection. &lt;paramref name=&quot;Key&quot; /&gt; must correspond to the &lt;paramref name=&quot;Key&quot; /&gt; argument specified when the element was added to the collection.">指定键字符串的唯一 <see langword="String" /> 表达式，可以使用此键字符串代替位置索引访问集合中的元素。 <paramref name="Key" /> 必须对应于将元素添加到集合中时指定的 <paramref name="Key" /> 参数。</param>
    </member>
    <member name="T:Microsoft.VisualBasic.ComClassAttribute">
      <summary vsli:raw="The &lt;see langword=&quot;ComClassAttribute&quot; /&gt; attribute instructs the compiler to add metadata that allows a class to be exposed as a COM object.">
        <see langword="ComClassAttribute" /> 特性指示编译器添加使类可以作为 COM 对象公开的元数据。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;ComClassAttribute&quot; /&gt; class.">初始化 <see langword="ComClassAttribute" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;ComClassAttribute&quot; /&gt; class.">初始化 <see langword="ComClassAttribute" /> 类的新实例。</summary>
      <param name="_ClassID" vsli:raw="Initializes the value of the &lt;see langword=&quot;ClassID&quot; /&gt; property that is used to uniquely identify a class.">初始化用于唯一标识类的 <see langword="ClassID" /> 属性的值。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;ComClassAttribute&quot; /&gt; class.">初始化 <see langword="ComClassAttribute" /> 类的新实例。</summary>
      <param name="_ClassID" vsli:raw="Initializes the value of the &lt;see langword=&quot;ClassID&quot; /&gt; property that is used to uniquely identify a class.">初始化用于唯一标识类的 <see langword="ClassID" /> 属性的值。</param>
      <param name="_InterfaceID" vsli:raw="Initializes the value of the &lt;see langword=&quot;InterfaceID&quot; /&gt; property that is used to uniquely identify an interface.">初始化用于唯一标识接口的 <see langword="InterfaceID" /> 属性的值。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;ComClassAttribute&quot; /&gt; class.">初始化 <see langword="ComClassAttribute" /> 类的新实例。</summary>
      <param name="_ClassID" vsli:raw="Initializes the value of the &lt;see langword=&quot;ClassID&quot; /&gt; property that is used to uniquely identify a class.">初始化用于唯一标识类的 <see langword="ClassID" /> 属性的值。</param>
      <param name="_InterfaceID" vsli:raw="Initializes the value of the &lt;see langword=&quot;InterfaceID&quot; /&gt; property that is used to uniquely identify an interface.">初始化用于唯一标识接口的 <see langword="InterfaceID" /> 属性的值。</param>
      <param name="_EventId" vsli:raw="Initializes the value of the &lt;see langword=&quot;EventID&quot; /&gt; property that is used to uniquely identify an event.">初始化用来唯一标识事件的 <see langword="EventID" /> 属性的值。</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.ClassID">
      <summary vsli:raw="Gets a class ID used to uniquely identify a class.">获取一个用于唯一标识类的类 ID。</summary>
      <returns vsli:raw="Read-only. A string that can be used by the compiler to uniquely identify the class when a COM object is created.">只读。 一个字符串，它可由编译器使用以唯一标识在创建 COM 对象时的类。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.EventID">
      <summary vsli:raw="Gets an event ID used to uniquely identify an event.">获取一个用于唯一标识事件的事件 ID。</summary>
      <returns vsli:raw="Read only. A string that can be used by the compiler to uniquely identify an event for the class when a COM object is created.">只读。 一个字符串，它可由编译器使用以唯一标识在创建 COM 对象时的类的事件。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.InterfaceID">
      <summary vsli:raw="Gets an interface ID used to uniquely identify an interface.">获取一个用于唯一标识接口的接口 ID。</summary>
      <returns vsli:raw="Read-only. A string that can be used by the compiler to uniquely identify an interface for the class when a COM object is created.">只读。 一个字符串，它可由编译器使用以唯一标识在创建 COM 对象时的类的接口。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.InterfaceShadows">
      <summary vsli:raw="Indicates that the COM interface name shadows another member of the class or base class.">指示 COM 接口名称是否隐藏类或基类的另一个成员。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value that indicates that the COM interface name shadows another member of the class or base class.">一个 <see langword="Boolean" /> 值，它指示 COM 接口名称会隐藏类或基类的另一个成员。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompareMethod">
      <summary vsli:raw="Indicates how to compare strings when calling comparison functions.">指示当调用比较函数时如何比较字符串。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CompareMethod.Binary">
      <summary vsli:raw="Performs a binary comparison. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbBinaryCompare&quot; /&gt;.">执行二进制比较。 此成员等效于 Visual Basic 常量 <see langword="vbBinaryCompare" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CompareMethod.Text">
      <summary vsli:raw="Performs a textual comparison. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbTextCompare&quot; /&gt;.">执行文本比较。 此成员等效于 Visual Basic 常量 <see langword="vbTextCompare" />。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.BooleanType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">从 Visual Basic 2005 开始，此类已被否决。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.BooleanType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value that corresponds to the specified object.">返回一个对应于指定对象的 <see langword="Boolean" /> 值。</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;Boolean&quot; /&gt; value.">必需。 要转换为 <see langword="Boolean" /> 值的对象。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Boolean&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">与 <paramref name="Value" /> 对应的 <see langword="Boolean" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.BooleanType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value that corresponds to the specified string.">返回与指定的字符串相对应的 <see langword="Boolean" /> 值。</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Boolean&quot; /&gt; value.">必需。 要转换为 <see langword="Boolean" /> 值的字符串。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Boolean&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">与 <paramref name="Value" /> 对应的 <see langword="Boolean" /> 值。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ByteType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">从 Visual Basic 2005 开始，此类已被否决。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ByteType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Byte&quot; /&gt; value that corresponds to the specified object.">返回一个对应于指定对象的 <see langword="Byte" /> 值。</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;Byte&quot; /&gt; value.">必需。 要转换为 <see langword="Byte" /> 值的对象。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Byte&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">与 <paramref name="Value" /> 对应的 <see langword="Byte" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ByteType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Byte&quot; /&gt; value that corresponds to the specified string.">返回与指定的字符串相对应的 <see langword="Byte" /> 值。</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Byte&quot; /&gt; value.">必需。 要转换为 <see langword="Byte" /> 值的字符串。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Byte&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">与 <paramref name="Value" /> 对应的 <see langword="Byte" /> 值。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.CharArrayType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">从 Visual Basic 2005 开始，此类已被否决。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharArrayType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;CharArray&quot; /&gt; value that corresponds to the specified object.">返回一个对应于指定对象的 <see langword="CharArray" /> 值。</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;CharArray&quot; /&gt; value.">必需。 要转换为 <see langword="CharArray" /> 值的对象。</param>
      <returns vsli:raw="The &lt;see langword=&quot;CharArray&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">与 <paramref name="Value" /> 对应的 <see langword="CharArray" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharArrayType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;CharArray&quot; /&gt; value that corresponds to the specified string.">返回与指定的字符串相对应的 <see langword="CharArray" /> 值。</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;CharArray&quot; /&gt; value.">必需。 要转换为 <see langword="CharArray" /> 值的字符串。</param>
      <returns vsli:raw="The &lt;see langword=&quot;CharArray&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">与 <paramref name="Value" /> 对应的 <see langword="CharArray" /> 值。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.CharType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">从 Visual Basic 2005 开始，此类已被否决。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Char&quot; /&gt; value that corresponds to the specified object.">返回一个对应于指定对象的 <see langword="Char" /> 值。</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;Char&quot; /&gt; value.">必需。 要转换为 <see langword="Char" /> 值的对象。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Char&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">与 <paramref name="Value" /> 对应的 <see langword="Char" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Char&quot; /&gt; value that corresponds to the specified string.">返回与指定的字符串相对应的 <see langword="Char" /> 值。</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Char&quot; /&gt; value.">必需。 要转换为 <see langword="Char" /> 值的字符串。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Char&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">与 <paramref name="Value" /> 对应的 <see langword="Char" /> 值。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Conversions">
      <summary vsli:raw="Provides methods that perform various type conversions.">提供执行各种类型转换的方法。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ChangeType(System.Object,System.Type)">
      <summary vsli:raw="Converts an object to the specified type.">将对象转换为指定类型。</summary>
      <param name="Expression" vsli:raw="The object to convert.">要转换的对象。</param>
      <param name="TargetType" vsli:raw="The type to which to convert the object.">该对象要转换为的类型。</param>
      <returns vsli:raw="An object of the specified target type.">指定的目标类型的对象。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FallbackUserDefinedConversion(System.Object,System.Type)">
      <summary vsli:raw="Converts an object to the specified type.">将对象转换为指定类型。</summary>
      <param name="Expression" vsli:raw="The object to convert.">要转换的对象。</param>
      <param name="TargetType" vsli:raw="The type to which to convert the object.">该对象要转换为的类型。</param>
      <returns vsli:raw="An object of the specified target type.">指定的目标类型的对象。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FromCharAndCount(System.Char,System.Int32)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Char&quot; /&gt; value to a string, given a byte count.">给定字节数时，将 <see cref="T:System.Char" /> 值转换为字符串。</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Char&quot; /&gt; value to convert.">要转换的 <see langword="Char" /> 值。</param>
      <param name="Count" vsli:raw="The byte count of the &lt;see langword=&quot;Char&quot; /&gt; value.">该 <see langword="Char" /> 值的字节数。</param>
      <returns vsli:raw="The string representation of the specified value.">指定值的字符串表示形式。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FromCharArray(System.Char[])">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Char&quot; /&gt; array to a string.">将 <see cref="T:System.Char" /> 数组转换为字符串。</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Char&quot; /&gt; array to convert.">要转换的 <see langword="Char" /> 数组。</param>
      <returns vsli:raw="The string representation of the specified array.">指定数组的字符串表示形式。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FromCharArraySubset(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Converts a subset of a &lt;see cref=&quot;T:System.Char&quot; /&gt; array to a string.">将 <see cref="T:System.Char" /> 数组的一个子集转换为字符串。</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Char&quot; /&gt; array to convert.">要转换的 <see langword="Char" /> 数组。</param>
      <param name="StartIndex" vsli:raw="Zero-based index of the start position.">开始位置的索引（从零开始）。</param>
      <param name="Length" vsli:raw="Length of the subset in bytes.">子集的长度（以字节为单位）。</param>
      <returns vsli:raw="The string representation of the specified array from the start position to the specified length.">从开始位置到指定长度的指定数组的字符串表示形式。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToBoolean(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value.">将对象转换为 <see cref="T:System.Boolean" /> 值。</summary>
      <param name="Value" vsli:raw="The object to convert.">要转换的对象。</param>
      <returns vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value. Returns &lt;see langword=&quot;False&quot; /&gt; if the object is null; otherwise, &lt;see langword=&quot;True&quot; /&gt;.">一个 <see langword="Boolean" /> 值。 如果对象为 null，则返回 <see langword="False" />；否则返回 <see langword="True" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToBoolean(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value.">将字符串转换为 <see cref="T:System.Boolean" /> 值。</summary>
      <param name="Value" vsli:raw="The string to convert.">要转换的字符串。</param>
      <returns vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value. Returns &lt;see langword=&quot;False&quot; /&gt; if the string is null; otherwise, &lt;see langword=&quot;True&quot; /&gt;.">一个 <see langword="Boolean" /> 值。 如果字符串为 null，则返回 <see langword="False" />；否则返回 <see langword="True" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToByte(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see cref=&quot;T:System.Byte&quot; /&gt; value.">将对象转换为 <see cref="T:System.Byte" /> 值。</summary>
      <param name="Value" vsli:raw="The object to convert.">要转换的对象。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Byte&quot; /&gt; value of the object.">该对象的 <see langword="Byte" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToByte(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see cref=&quot;T:System.Byte&quot; /&gt; value.">将字符串转换为 <see cref="T:System.Byte" /> 值。</summary>
      <param name="Value" vsli:raw="The string to convert.">要转换的字符串。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Byte&quot; /&gt; value of the string.">该字符串的 <see langword="Byte" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToChar(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see cref=&quot;T:System.Char&quot; /&gt; value.">将对象转换为 <see cref="T:System.Char" /> 值。</summary>
      <param name="Value" vsli:raw="The object to convert.">要转换的对象。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Char&quot; /&gt; value of the object.">该对象的 <see langword="Char" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToChar(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see cref=&quot;T:System.Char&quot; /&gt; value.">将字符串转换为 <see cref="T:System.Char" /> 值。</summary>
      <param name="Value" vsli:raw="The string to convert.">要转换的字符串。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Char&quot; /&gt; value of the string.">该字符串的 <see langword="Char" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToCharArrayRankOne(System.Object)">
      <summary vsli:raw="Converts an object to a one-dimensional &lt;see cref=&quot;T:System.Char&quot; /&gt; array.">将对象转换为一维 <see cref="T:System.Char" /> 数组。</summary>
      <param name="Value" vsli:raw="The object to convert.">要转换的对象。</param>
      <returns vsli:raw="A one-dimensional &lt;see langword=&quot;Char&quot; /&gt; array.">一维 <see langword="Char" /> 数组。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToCharArrayRankOne(System.String)">
      <summary vsli:raw="Converts a string to a one-dimensional &lt;see cref=&quot;T:System.Char&quot; /&gt; array.">将字符串转换为一维 <see cref="T:System.Char" /> 数组。</summary>
      <param name="Value" vsli:raw="The string to convert.">要转换的字符串。</param>
      <returns vsli:raw="A one-dimensional &lt;see langword=&quot;Char&quot; /&gt; array.">一维 <see langword="Char" /> 数组。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDate(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value.">将对象转换为 <see cref="T:System.DateTime" /> 值。</summary>
      <param name="Value" vsli:raw="The object to convert.">要转换的对象。</param>
      <returns vsli:raw="The &lt;see langword=&quot;DateTime&quot; /&gt; value of the object.">该对象的 <see langword="DateTime" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDate(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value.">将字符串转换为 <see cref="T:System.DateTime" /> 值。</summary>
      <param name="Value" vsli:raw="The string to convert.">要转换的字符串。</param>
      <returns vsli:raw="The &lt;see langword=&quot;DateTime&quot; /&gt; value of the string.">该字符串的 <see langword="DateTime" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDecimal(System.Boolean)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">将 <see cref="T:System.Boolean" /> 值转换为 <see cref="T:System.Decimal" /> 值。</summary>
      <param name="Value" vsli:raw="A Boolean value to convert.">要转换的布尔值。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value of the Boolean value.">该布尔值的 <see langword="Decimal" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDecimal(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">将对象转换为 <see cref="T:System.Decimal" /> 值。</summary>
      <param name="Value" vsli:raw="The object to convert.">要转换的对象。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value of the object.">该对象的 <see langword="Decimal" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDecimal(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">将字符串转换为 <see cref="T:System.Decimal" /> 值。</summary>
      <param name="Value" vsli:raw="The string to convert.">要转换的字符串。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value of the string.">该字符串的 <see langword="Decimal" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDouble(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">将对象转换为 <see cref="T:System.Double" /> 值。</summary>
      <param name="Value" vsli:raw="The object to convert.">要转换的对象。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value of the object.">该对象的 <see langword="Double" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDouble(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">将字符串转换为 <see cref="T:System.Double" /> 值。</summary>
      <param name="Value" vsli:raw="The string to convert.">要转换的字符串。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value of the string.">该字符串的 <see langword="Double" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToGenericParameter``1(System.Object)">
      <summary vsli:raw="Converts an object to a generic type &lt;paramref name=&quot;T&quot; /&gt;.">将对象转换为泛型类型 <paramref name="T" />。</summary>
      <param name="Value" vsli:raw="The object to convert.">要转换的对象。</param>
      <typeparam name="T" vsli:raw="The type to convert &lt;paramref name=&quot;Value&quot; /&gt; to.">
        <paramref name="Value" /> 所要转换到的类型。</typeparam>
      <returns vsli:raw="A structure or object of generic type &lt;paramref name=&quot;T&quot; /&gt;.">泛型类型 <paramref name="T" /> 的结构或对象。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToInteger(System.Object)">
      <summary vsli:raw="Converts an object to an integer value.">将对象转换为整数值。</summary>
      <param name="Value" vsli:raw="The object to convert.">要转换的对象。</param>
      <returns vsli:raw="The &lt;see langword=&quot;int&quot; /&gt; value of the object.">该对象的 <see langword="int" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToInteger(System.String)">
      <summary vsli:raw="Converts a string to an integer value.">将字符串转换为整数值。</summary>
      <param name="Value" vsli:raw="The string to convert.">要转换的字符串。</param>
      <returns vsli:raw="The &lt;see langword=&quot;int&quot; /&gt; value of the string.">该字符串的 <see langword="int" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToLong(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see langword=&quot;Long&quot; /&gt; value.">将对象转换为 <see langword="Long" /> 值。</summary>
      <param name="Value" vsli:raw="The object to convert.">要转换的对象。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Long&quot; /&gt; value of the object.">该对象的 <see langword="Long" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToLong(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see langword=&quot;Long&quot; /&gt; value.">将字符串转换为 <see langword="Long" /> 值。</summary>
      <param name="Value" vsli:raw="The string to convert.">要转换的字符串。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Long&quot; /&gt; value of the string.">该字符串的 <see langword="Long" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSByte(System.Object)">
      <summary vsli:raw="Converts an object to an &lt;see cref=&quot;T:System.SByte&quot; /&gt; value.">将对象转换为 <see cref="T:System.SByte" /> 值。</summary>
      <param name="Value" vsli:raw="The object to convert.">要转换的对象。</param>
      <returns vsli:raw="The &lt;see langword=&quot;SByte&quot; /&gt; value of the object.">该对象的 <see langword="SByte" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSByte(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.SByte&quot; /&gt; value.">将字符串转换为 <see cref="T:System.SByte" /> 值。</summary>
      <param name="Value" vsli:raw="The string to convert.">要转换的字符串。</param>
      <returns vsli:raw="The &lt;see langword=&quot;SByte&quot; /&gt; value of the string.">该字符串的 <see langword="SByte" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToShort(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see langword=&quot;Short&quot; /&gt; value.">将对象转换为 <see langword="Short" /> 值。</summary>
      <param name="Value" vsli:raw="The object to convert.">要转换的对象。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Short&quot; /&gt; value of the object.">该对象的 <see langword="Short" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToShort(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see langword=&quot;Short&quot; /&gt; value.">将字符串转换为 <see langword="Short" /> 值。</summary>
      <param name="Value" vsli:raw="The string to convert.">要转换的字符串。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Short&quot; /&gt; value of the string.">该字符串的 <see langword="Short" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSingle(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">将对象转换为 <see cref="T:System.Single" /> 值。</summary>
      <param name="Value" vsli:raw="The object to convert.">要转换的对象。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Single&quot; /&gt; value of the object.">该对象的 <see langword="Single" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSingle(System.String)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">将 <see cref="T:System.String" /> 转换为 <see cref="T:System.Single" /> 值。</summary>
      <param name="Value" vsli:raw="The string to convert.">要转换的字符串。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Single&quot; /&gt; value of the string.">该字符串的 <see langword="Single" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Boolean)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">将 <see cref="T:System.Boolean" /> 值转换为 <see cref="T:System.String" />。</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Boolean&quot; /&gt; value to convert.">要转换的 <see langword="Boolean" /> 值。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Boolean&quot; /&gt; value.">该 <see langword="String" /> 值的 <see langword="Boolean" /> 表示形式。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Byte)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Byte&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">将 <see cref="T:System.Byte" /> 值转换为 <see cref="T:System.String" />。</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Byte&quot; /&gt; value to convert.">要转换的 <see langword="Byte" /> 值。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Byte&quot; /&gt; value.">该 <see langword="String" /> 值的 <see langword="Byte" /> 表示形式。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Char)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Char&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">将 <see cref="T:System.Char" /> 值转换为 <see cref="T:System.String" />。</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Char&quot; /&gt; value to convert.">要转换的 <see langword="Char" /> 值。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Char&quot; /&gt; value.">该 <see langword="String" /> 值的 <see langword="Char" /> 表示形式。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.DateTime)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">将 <see cref="T:System.DateTime" /> 值转换为 <see cref="T:System.String" /> 值。</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;DateTime&quot; /&gt; value to convert.">要转换的 <see langword="DateTime" /> 值。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;DateTime&quot; /&gt; value.">该 <see langword="String" /> 值的 <see langword="DateTime" /> 表示形式。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Decimal)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">将 <see cref="T:System.Decimal" /> 值转换为 <see cref="T:System.String" /> 值。</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value to convert.">要转换的 <see langword="Decimal" /> 值。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Decimal&quot; /&gt; value.">该 <see langword="String" /> 值的 <see langword="Decimal" /> 表示形式。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Decimal,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value, using the specified number format.">使用指定的数字格式将 <see cref="T:System.Decimal" /> 值转换为 <see cref="T:System.String" /> 值。</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;decimal&quot; /&gt; value to convert.">要转换的 <see langword="decimal" /> 值。</param>
      <param name="NumberFormat" vsli:raw="The number format to use, according to &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt;.">要使用的数字格式，根据 <see cref="T:System.Globalization.NumberFormatInfo" />。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Decimal&quot; /&gt; value.">该 <see langword="String" /> 值的 <see langword="Decimal" /> 表示形式。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Double)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Double&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">将 <see cref="T:System.Double" /> 值转换为 <see cref="T:System.String" /> 值。</summary>
      <param name="Value" vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value to convert.">要转换的 <see langword="Double" /> 值。</param>
      <returns vsli:raw="The string representation of the &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">该 <see langword="String" /> 值的 <see langword="Double" /> 表示形式。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Double,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Double&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value, using the specified number format.">使用指定的数字格式将 <see cref="T:System.Double" /> 值转换为 <see cref="T:System.String" /> 值。</summary>
      <param name="Value" vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value to convert.">要转换的 <see langword="Double" /> 值。</param>
      <param name="NumberFormat" vsli:raw="The number format to use, according to &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt;.">要使用的数字格式，根据 <see cref="T:System.Globalization.NumberFormatInfo" />。</param>
      <returns vsli:raw="The string representation of the &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">该 <see langword="String" /> 值的 <see langword="Double" /> 表示形式。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Int16)">
      <summary vsli:raw="Converts a &lt;see langword=&quot;Short&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">将 <see langword="Short" /> 值转换为 <see cref="T:System.String" /> 值。</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Short&quot; /&gt; value to convert.">要转换的 <see langword="Short" /> 值。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Short&quot; /&gt; value.">该 <see langword="String" /> 值的 <see langword="Short" /> 表示形式。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Int32)">
      <summary vsli:raw="Converts an integer value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">将整数值转换为 <see cref="T:System.String" /> 值。</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;int&quot; /&gt; value to convert.">要转换的 <see langword="int" /> 值。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;int&quot; /&gt; value.">该 <see langword="String" /> 值的 <see langword="int" /> 表示形式。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Int64)">
      <summary vsli:raw="Converts a &lt;see langword=&quot;Long&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">将 <see langword="Long" /> 值转换为 <see cref="T:System.String" /> 值。</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Long&quot; /&gt; value to convert.">要转换的 <see langword="Long" /> 值。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Long&quot; /&gt; value.">该 <see langword="String" /> 值的 <see langword="Long" /> 表示形式。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">将对象转换为 <see cref="T:System.String" /> 值。</summary>
      <param name="Value" vsli:raw="The object to convert.">要转换的对象。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the object.">该对象的 <see langword="String" /> 表示形式。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Single)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Single&quot; /&gt; value (a single-precision floating point number) to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">将 <see cref="T:System.Single" /> 值（单精度浮点数）转换为 <see cref="T:System.String" /> 值。</summary>
      <param name="Value" vsli:raw="The &lt;see cref=&quot;T:System.Single&quot; /&gt; value to convert.">要转换的 <see langword="Single" /> 值。</param>
      <returns vsli:raw="The string representation of the &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">该 <see langword="String" /> 值的 <see langword="Single" /> 表示形式。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Single,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Single&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value, using the specified number format.">使用指定的数字格式将 <see cref="T:System.Single" /> 值转换为 <see cref="T:System.String" /> 值。</summary>
      <param name="Value" vsli:raw="The &lt;see cref=&quot;T:System.Single&quot; /&gt; value to convert.">要转换的 <see langword="Single" /> 值。</param>
      <param name="NumberFormat" vsli:raw="The number format to use, according to &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt;.">要使用的数字格式，根据 <see cref="T:System.Globalization.NumberFormatInfo" />。</param>
      <returns vsli:raw="The string representation of the &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">该 <see langword="String" /> 值的 <see langword="Single" /> 表示形式。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.UInt32)">
      <summary vsli:raw="Converts a &lt;see langword=&quot;uint&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">将 <see langword="uint" /> 值转换为 <see cref="T:System.String" /> 值。</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Uint&quot; /&gt; value to convert.">要转换的 <see langword="Uint" /> 值。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Uint&quot; /&gt; value.">该 <see langword="String" /> 值的 <see langword="Uint" /> 表示形式。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.UInt64)">
      <summary vsli:raw="Converts a &lt;see langword=&quot;Ulong&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">将 <see langword="Ulong" /> 值转换为 <see cref="T:System.String" /> 值。</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Ulong&quot; /&gt; value to convert.">要转换的 <see langword="Ulong" /> 值。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Ulong&quot; /&gt; value.">该 <see langword="String" /> 值的 <see langword="Ulong" /> 表示形式。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUInteger(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see langword=&quot;Uint&quot; /&gt; value.">将对象转换为 <see langword="Uint" /> 值。</summary>
      <param name="Value" vsli:raw="The object to convert.">要转换的对象。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Uint&quot; /&gt; value of the object.">该对象的 <see langword="Uint" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUInteger(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see langword=&quot;Uint&quot; /&gt; value.">将字符串转换为 <see langword="Uint" /> 值。</summary>
      <param name="Value" vsli:raw="The string to convert.">要转换的字符串。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Uint&quot; /&gt; value of the string.">该字符串的 <see langword="Uint" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToULong(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see langword=&quot;Ulong&quot; /&gt; value.">将对象转换为 <see langword="Ulong" /> 值。</summary>
      <param name="Value" vsli:raw="The object to convert.">要转换的对象。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Ulong&quot; /&gt; value of the object.">该对象的 <see langword="Ulong" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToULong(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see langword=&quot;Ulong&quot; /&gt; value.">将字符串转换为 <see langword="Ulong" /> 值。</summary>
      <param name="Value" vsli:raw="The string to convert.">要转换的字符串。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Ulong&quot; /&gt; value of the string.">该字符串的 <see langword="Ulong" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUShort(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see langword=&quot;Ushort&quot; /&gt; value.">将对象转换为 <see langword="Ushort" /> 值。</summary>
      <param name="Value" vsli:raw="The object to convert.">要转换的对象。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Ushort&quot; /&gt; value of the object.">该对象的 <see langword="Ushort" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUShort(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see langword=&quot;Ushort&quot; /&gt; value.">将字符串转换为 <see langword="Ushort" /> 值。</summary>
      <param name="Value" vsli:raw="The string to convert.">要转换的字符串。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Ushort&quot; /&gt; value of the string.">该字符串的 <see langword="Ushort" /> 值。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DateType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">从 Visual Basic 2005 开始，此类已被否决。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DateType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Date&quot; /&gt; value that corresponds to the specified object.">返回一个对应于指定对象的 <see langword="Date" /> 值。</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;Date&quot; /&gt; value.">必需。 要转换为 <see langword="Date" /> 值的对象。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Date&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">与 <paramref name="Value" /> 对应的 <see langword="Date" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DateType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Date&quot; /&gt; value that corresponds to the specified string.">返回与指定的字符串相对应的 <see langword="Date" /> 值。</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Date&quot; /&gt; value.">必需。 要转换为 <see langword="Date" /> 值的字符串。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Date&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">与 <paramref name="Value" /> 对应的 <see langword="Date" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DateType.FromString(System.String,System.Globalization.CultureInfo)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Date&quot; /&gt; value that corresponds to the specified string and culture information.">返回与指定的字符串和区域性信息相对应的 <see langword="Date" /> 值。</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Date&quot; /&gt; value.">必需。 要转换为 <see langword="Date" /> 值的字符串。</param>
      <param name="culture" vsli:raw="Required. A &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; object that defines how date values are formatted and displayed, depending on the culture.">必需。 根据区域性定义如何设置日期值格式以及如何显示日期值的 <see cref="T:System.Globalization.CultureInfo" /> 对象。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Date&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">与 <paramref name="Value" /> 对应的 <see langword="Date" /> 值。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DecimalType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">从 Visual Basic 2005 开始，此类已被否决。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromBoolean(System.Boolean)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to the specified &lt;see langword=&quot;Boolean&quot; /&gt; value.">返回与指定的 <see langword="Decimal" /> 值相对应的 <see langword="Boolean" /> 值。</summary>
      <param name="Value" vsli:raw="Required. &lt;see langword=&quot;Boolean&quot; /&gt; value to convert to a &lt;see langword=&quot;Decimal&quot; /&gt; value.">必需。 将 <see langword="Boolean" /> 值转换为 <see langword="Decimal" /> 值。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">与 <paramref name="Value" /> 对应的 <see langword="Decimal" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to the specified object.">返回一个对应于指定对象的 <see langword="Decimal" /> 值。</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;Decimal&quot; /&gt; value.">必需。 要转换为 <see langword="Decimal" /> 值的对象。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">与 <paramref name="Value" /> 对应的 <see langword="Decimal" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromObject(System.Object,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to the specified object and number format information.">返回与指定的对象和数字格式信息相对应的 <see langword="Decimal" /> 值。</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;Decimal&quot; /&gt; value.">必需。 要转换为 <see langword="Decimal" /> 值的对象。</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">根据区域性定义如何设置数值格式以及如何显示数值的 <see cref="T:System.Globalization.NumberFormatInfo" /> 对象。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">与 <paramref name="Value" /> 对应的 <see langword="Decimal" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to the specified string.">返回与指定的字符串相对应的 <see langword="Decimal" /> 值。</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Decimal&quot; /&gt; value.">必需。 要转换为 <see langword="Decimal" /> 值的字符串。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">与 <paramref name="Value" /> 对应的 <see langword="Decimal" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromString(System.String,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to the specified string and number format information.">返回与指定的字符串和数字格式信息相对应的 <see langword="Decimal" /> 值。</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Decimal&quot; /&gt; value.">必需。 要转换为 <see langword="Decimal" /> 值的字符串。</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">根据区域性定义如何设置数值格式以及如何显示数值的 <see cref="T:System.Globalization.NumberFormatInfo" /> 对象。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">与 <paramref name="Value" /> 对应的 <see langword="Decimal" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.Parse(System.String,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to the specified string and number format information.">返回与指定的字符串和数字格式信息相对应的 <see langword="Decimal" /> 值。</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Decimal&quot; /&gt; value.">必需。 要转换为 <see langword="Decimal" /> 值的字符串。</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">根据区域性定义如何设置数值格式以及如何显示数值的 <see cref="T:System.Globalization.NumberFormatInfo" /> 对象。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">与 <paramref name="Value" /> 对应的 <see langword="Decimal" /> 值。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DesignerGeneratedAttribute">
      <summary vsli:raw="When applied to a class, the compiler implicitly calls a component-initializing method from the default synthetic constructor.">应用于某个类时，编译器将从默认的综合构造函数隐式调用组件初始化方法。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DesignerGeneratedAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.CompilerServices.DesignerGeneratedAttribute&quot; /&gt; attribute.">初始化 <see cref="T:Microsoft.VisualBasic.CompilerServices.DesignerGeneratedAttribute" /> 属性的新实例。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DoubleType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">从 Visual Basic 2005 开始，此类已被否决。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Double&quot; /&gt; value that corresponds to the specified object.">返回一个对应于指定对象的 <see langword="Double" /> 值。</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">必需。 要转换为 <see langword="Double" /> 值的对象。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">与 <paramref name="Value" /> 对应的 <see langword="Double" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromObject(System.Object,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Double&quot; /&gt; value that corresponds to the specified object.">返回一个对应于指定对象的 <see langword="Double" /> 值。</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">必需。 要转换为 <see langword="Double" /> 值的对象。</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">根据区域性定义如何设置数值格式以及如何显示数值的 <see cref="T:System.Globalization.NumberFormatInfo" /> 对象。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">与 <paramref name="Value" /> 对应的 <see langword="Double" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Double&quot; /&gt; value that corresponds to the specified string.">返回与指定的字符串相对应的 <see langword="Double" /> 值。</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">必需。 要转换为 <see langword="Double" /> 值的字符串。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">与 <paramref name="Value" /> 对应的 <see langword="Double" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromString(System.String,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Double&quot; /&gt; value that corresponds to the specified string and number format information.">返回与指定的字符串和数字格式信息相对应的 <see langword="Double" /> 值。</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">必需。 要转换为 <see langword="Double" /> 值的字符串。</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">根据区域性定义如何设置数值格式以及如何显示数值的 <see cref="T:System.Globalization.NumberFormatInfo" /> 对象。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">与 <paramref name="Value" /> 对应的 <see langword="Double" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.Parse(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Double&quot; /&gt; value that corresponds to the specified string.">返回与指定的字符串相对应的 <see langword="Double" /> 值。</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">必需。 要转换为 <see langword="Double" /> 值的字符串。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">与 <paramref name="Value" /> 对应的 <see langword="Double" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.Parse(System.String,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Double&quot; /&gt; value that corresponds to the specified string and number format information.">返回与指定的字符串和数字格式信息相对应的 <see langword="Double" /> 值。</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">必需。 要转换为 <see langword="Double" /> 值的字符串。</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">根据区域性定义如何设置数值格式以及如何显示数值的 <see cref="T:System.Globalization.NumberFormatInfo" /> 对象。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">与 <paramref name="Value" /> 对应的 <see langword="Double" /> 值。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization">
      <summary vsli:raw="The Visual Basic compiler uses this class during static local initialization; it is not meant to be called directly from your code. An exception of this type is thrown if a static local variable fails to initialize.">Visual Basic 编译器在静态局部初始化过程中使用此类；不应从代码中直接调用此类。 如果静态局部变量无法初始化，将引发此类型的异常。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization&quot; /&gt; class.">初始化 <see cref="T:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization" /> 类的新实例。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.IntegerType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">从 Visual Basic 2005 开始，此类已被否决。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IntegerType.FromObject(System.Object)">
      <summary vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value that corresponds to the specified object.">返回与指定的对象相对应的 <see langword="Integer" /> 值。</summary>
      <param name="Value" vsli:raw="Required. Object to convert to an &lt;see langword=&quot;Integer&quot; /&gt; value.">必需。 将转换为 <see langword="Integer" /> 值的对象。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Integer&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">与 <paramref name="Value" /> 对应的 <see langword="Integer" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IntegerType.FromString(System.String)">
      <summary vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value that corresponds to the specified string.">返回与指定的字符串相对应的 <see langword="Integer" /> 值。</summary>
      <param name="Value" vsli:raw="Required. String to convert to an &lt;see langword=&quot;Integer&quot; /&gt; value.">必需。 要转换为 <see langword="Integer" /> 值的字符串。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Integer&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">与 <paramref name="Value" /> 对应的 <see langword="Integer" /> 值。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.LateBinding">
      <summary vsli:raw="This class has been deprecated since Visual Basic 2005.">从 Visual Basic 2005 开始，此类已被否决。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateCall(System.Object,System.Type,System.String,System.Object[],System.String[],System.Boolean[])">
      <summary vsli:raw="Performs a late-bound call to an object method.">对对象方法执行后期绑定调用。</summary>
      <param name="o" vsli:raw="The object to call a method on.">要对其调用方法的对象。</param>
      <param name="objType" vsli:raw="The type of the object.">对象的类型。</param>
      <param name="name" vsli:raw="The method name of &lt;paramref name=&quot;o&quot; /&gt; to call.">要调用的 <paramref name="o" /> 的方法名称。</param>
      <param name="args" vsli:raw="An array of parameter values to pass to the method.">一个由要传递给该方法的参数值构成的数组。</param>
      <param name="paramnames" vsli:raw="An array that contains the names of the parameters to which the values in the &lt;paramref name=&quot;args&quot; /&gt; array are passed.">一个数组，其中包含要向其传递 <paramref name="args" /> 数组中的值的参数的名称。</param>
      <param name="CopyBack" vsli:raw="An array of &lt;see langword=&quot;Boolean&quot; /&gt; values, where &lt;see langword=&quot;True&quot; /&gt; indicates that the associated parameter is passed &lt;see langword=&quot;ByRef&quot; /&gt;.">一个由 <see langword="Boolean" /> 值构成的数组，其中 <see langword="True" /> 指示已向关联的参数传递 <see langword="ByRef" />。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateGet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Boolean[])">
      <summary vsli:raw="Returns a late-bound value from an object.">从对象返回一个后期绑定值。</summary>
      <param name="o" vsli:raw="The object to return the value from.">要从其返回值的对象。</param>
      <param name="objType" vsli:raw="The type of the object.">对象的类型。</param>
      <param name="name" vsli:raw="The member name of &lt;paramref name=&quot;o&quot; /&gt; to retrieve a value from.">要从中检索值的 <paramref name="o" /> 的成员名称。</param>
      <param name="args" vsli:raw="An array of one or more index values that specify the location in &lt;paramref name=&quot;o&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is a one-dimensional or multi-dimensional array, or argument values to pass to the object &lt;paramref name=&quot;o&quot; /&gt;.">一个数组，其中包含指定 <paramref name="o" /> 中的位置的一个或多个索引值（如果 <paramref name="o" /> 是一维或多维数组），或包含要传递给对象 <paramref name="o" /> 的参数值。</param>
      <param name="paramnames" vsli:raw="An array that contains the names of the parameters to which the values in the &lt;paramref name=&quot;args&quot; /&gt; array are passed.">一个数组，其中包含要向其传递 <paramref name="args" /> 数组中的值的参数的名称。</param>
      <param name="CopyBack" vsli:raw="An array of &lt;see langword=&quot;Boolean&quot; /&gt; values, where &lt;see langword=&quot;True&quot; /&gt; indicates that the associated parameter is passed &lt;see langword=&quot;ByRef&quot; /&gt;.">一个由 <see langword="Boolean" /> 值构成的数组，其中 <see langword="True" /> 指示已向关联的参数传递 <see langword="ByRef" />。</param>
      <returns vsli:raw="If &lt;paramref name=&quot;o&quot; /&gt; is an array, the value from &lt;paramref name=&quot;o&quot; /&gt; at the location specified by &lt;paramref name=&quot;args&quot; /&gt;. If &lt;paramref name=&quot;o&quot; /&gt; is an object, the return value of &lt;paramref name=&quot;o&quot; /&gt; invoked by using the named parameters in &lt;paramref name=&quot;paramnames&quot; /&gt; and their associated values in &lt;paramref name=&quot;args&quot; /&gt;.">如果 <paramref name="o" /> 是一个数组，则为 <paramref name="o" /> 中处于 <paramref name="args" /> 所指定的位置的值。 如果 <paramref name="o" /> 是一个对象，则为使用 <paramref name="o" /> 中的命名参数及其在 <paramref name="paramnames" /> 中的关联值调用 <paramref name="args" /> 时的返回值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateIndexGet(System.Object,System.Object[],System.String[])">
      <summary vsli:raw="Returns a late-bound value from an object, using the specified index or parameters.">使用指定的索引或参数从对象返回一个后期绑定值。</summary>
      <param name="o" vsli:raw="The object to return the value from.">要从其返回值的对象。</param>
      <param name="args" vsli:raw="An array of one or more index values that specify the location in &lt;paramref name=&quot;o&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is a one-dimensional or multi-dimensional array, or argument values to pass to the object &lt;paramref name=&quot;o&quot; /&gt;.">一个数组，其中包含指定 <paramref name="o" /> 中的位置的一个或多个索引值（如果 <paramref name="o" /> 是一维或多维数组），或包含要传递给对象 <paramref name="o" /> 的参数值。</param>
      <param name="paramnames" vsli:raw="An array that contains the names of the parameters to which the values in the &lt;paramref name=&quot;args&quot; /&gt; array are passed.">一个数组，其中包含要向其传递 <paramref name="args" /> 数组中的值的参数的名称。</param>
      <returns vsli:raw="If &lt;paramref name=&quot;o&quot; /&gt; is an array, the value from &lt;paramref name=&quot;o&quot; /&gt; at the location specified by &lt;paramref name=&quot;args&quot; /&gt;. If &lt;paramref name=&quot;o&quot; /&gt; is an object, the return value of &lt;paramref name=&quot;o&quot; /&gt; invoked by using the named parameters in &lt;paramref name=&quot;paramnames&quot; /&gt; and their associated values in &lt;paramref name=&quot;args&quot; /&gt;.">如果 <paramref name="o" /> 是一个数组，则为 <paramref name="o" /> 中处于 <paramref name="args" /> 所指定的位置的值。 如果 <paramref name="o" /> 是一个对象，则为使用 <paramref name="o" /> 中的命名参数及其在 <paramref name="paramnames" /> 中的关联值调用 <paramref name="args" /> 时的返回值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateIndexSet(System.Object,System.Object[],System.String[])">
      <summary vsli:raw="Sets a late-bound value of an object, using the specified parameters.">使用指定的参数为对象设置一个后期绑定值。</summary>
      <param name="o" vsli:raw="The object to set the value for.">要为其设置值的对象。</param>
      <param name="args" vsli:raw="An array of one or more index values that specify the location in &lt;paramref name=&quot;o&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is a one-dimensional or multi-dimensional array, or argument values to pass to the object &lt;paramref name=&quot;o&quot; /&gt;.">一个数组，其中包含指定 <paramref name="o" /> 中的位置的一个或多个索引值（如果 <paramref name="o" /> 是一维或多维数组），或包含要传递给对象 <paramref name="o" /> 的参数值。</param>
      <param name="paramnames" vsli:raw="An array that contains the names of the parameters to which the values in the &lt;paramref name=&quot;args&quot; /&gt; array are passed.">一个数组，其中包含要向其传递 <paramref name="args" /> 数组中的值的参数的名称。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateIndexSetComplex(System.Object,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Sets a late-bound value of an object, using the specified parameters.">使用指定的参数为对象设置一个后期绑定值。</summary>
      <param name="o" vsli:raw="The object to set the value for.">要为其设置值的对象。</param>
      <param name="args" vsli:raw="An array of one or more parameter values to pass to the object &lt;paramref name=&quot;o&quot; /&gt;.">一个数组，其中包含要传递给对象 <paramref name="o" /> 的一个或多个参数值。</param>
      <param name="paramnames" vsli:raw="An array that contains the names of the parameters to which the values in the &lt;paramref name=&quot;args&quot; /&gt; array are passed.">一个数组，其中包含要向其传递 <paramref name="args" /> 数组中的值的参数的名称。</param>
      <param name="OptimisticSet" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to suppress the exception thrown when the set member is not found.">如果禁止显示未找到集成员时引发的异常，则为 <see langword="True" />。</param>
      <param name="RValueBase" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to identify &lt;paramref name=&quot;o&quot; /&gt; as the result of a late-bound expression.">如果将 <paramref name="o" /> 标识为后期绑定表达式的结果，则为 <see langword="True" />。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[])">
      <summary vsli:raw="Sets a late-bound value of a member of an object, using the specified parameters.">使用指定的参数为对象的成员设置一个后期绑定值。</summary>
      <param name="o" vsli:raw="The object to set the member value for.">要为其设置成员值的对象。</param>
      <param name="objType" vsli:raw="The type of the object.">对象的类型。</param>
      <param name="name" vsli:raw="The member name to set.">要设置的成员名称。</param>
      <param name="args" vsli:raw="An array of one or parameter values to pass to the member of &lt;paramref name=&quot;o&quot; /&gt;.">一个数组，其中包含要传递给 <paramref name="o" /> 的成员的一个或多个参数值。</param>
      <param name="paramnames" vsli:raw="An array that contains the names of the parameters to which the values in the &lt;paramref name=&quot;args&quot; /&gt; array are passed.">一个数组，其中包含要向其传递 <paramref name="args" /> 数组中的值的参数的名称。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateSetComplex(System.Object,System.Type,System.String,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Sets a late-bound value of a member of an object, using the specified parameters.">使用指定的参数为对象的成员设置一个后期绑定值。</summary>
      <param name="o" vsli:raw="The object to set the member value for.">要为其设置成员值的对象。</param>
      <param name="objType" vsli:raw="The type of the object.">对象的类型。</param>
      <param name="name" vsli:raw="The member name to set.">要设置的成员名称。</param>
      <param name="args" vsli:raw="An array of one or more parameter values to pass to the member of &lt;paramref name=&quot;o&quot; /&gt;.">一个数组，其中包含要传递给 <paramref name="o" /> 的成员的一个或多个参数值。</param>
      <param name="paramnames" vsli:raw="An array that contains the names of the parameters to which the values in the &lt;paramref name=&quot;args&quot; /&gt; array are passed.">一个数组，其中包含要向其传递 <paramref name="args" /> 数组中的值的参数的名称。</param>
      <param name="OptimisticSet" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to suppress the exception thrown when the set member is not found.">如果禁止显示未找到集成员时引发的异常，则为 <see langword="True" />。</param>
      <param name="RValueBase" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to identify &lt;paramref name=&quot;o&quot; /&gt; as the result of a late-bound expression.">如果将 <paramref name="o" /> 标识为后期绑定表达式的结果，则为 <see langword="True" />。</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.LikeOperator">
      <summary vsli:raw="This class provides helpers that the Visual Basic compiler uses to do the work for the Like Operator. It is not meant to be called directly from your code.">此类提供 Visual Basic 编译器用于完成 Like Operator 对应工作的帮助器。 不应直接从代码中调用此类。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LikeOperator.LikeObject(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Performs binary or text string comparison given two objects. This helper method is not meant to be called directly from your code.">对给定的两个对象执行二进制字符串或文本字符串比较。 此帮助器方法不宜从您的代码直接调用。</summary>
      <param name="Source" vsli:raw="The string to compare.">要比较的字符串。</param>
      <param name="Pattern" vsli:raw="The string against which &lt;paramref name=&quot;Source&quot; /&gt; is being compared.">要与 <paramref name="Source" /> 进行比较的字符串。</param>
      <param name="CompareOption" vsli:raw="A &lt;see cref=&quot;T:Microsoft.VisualBasic.CompareMethod&quot; /&gt; enumeration specifying whether or not to use text comparison. If &lt;see cref=&quot;F:Microsoft.VisualBasic.CompareMethod.Text&quot; /&gt;, this method uses text comparison; if &lt;see cref=&quot;F:Microsoft.VisualBasic.CompareMethod.Binary&quot; /&gt;, this method uses binary comparison.">指定是否使用文本比较的 <see cref="T:Microsoft.VisualBasic.CompareMethod" /> 枚举。 如果为 <see cref="F:Microsoft.VisualBasic.CompareMethod.Text" />，则此方法使用文本比较；如果为 <see cref="F:Microsoft.VisualBasic.CompareMethod.Binary" />，则此方法使用二进制比较。</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if the strings match; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">如果字符串匹配，则为 <see langword="True" />；否则为 <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LikeOperator.LikeString(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Performs binary or text string comparison given two strings. This helper method is not meant to be called directly from your code.">对给定的两个字符串执行二进制字符串或文本字符串比较。 此帮助器方法不宜从您的代码直接调用。</summary>
      <param name="Source" vsli:raw="The string to compare.">要比较的字符串。</param>
      <param name="Pattern" vsli:raw="The string against which &lt;paramref name=&quot;Source&quot; /&gt; is being compared.">要与 <paramref name="Source" /> 进行比较的字符串。</param>
      <param name="CompareOption" vsli:raw="A &lt;see cref=&quot;T:Microsoft.VisualBasic.CompareMethod&quot; /&gt; enumeration specifying whether or not to use text comparison. If &lt;see cref=&quot;F:Microsoft.VisualBasic.CompareMethod.Text&quot; /&gt;, this method uses text comparison; if &lt;see cref=&quot;F:Microsoft.VisualBasic.CompareMethod.Binary&quot; /&gt;, this method uses binary comparison.">指定是否使用文本比较的 <see cref="T:Microsoft.VisualBasic.CompareMethod" /> 枚举。 如果为 <see cref="F:Microsoft.VisualBasic.CompareMethod.Text" />，则此方法使用文本比较；如果为 <see cref="F:Microsoft.VisualBasic.CompareMethod.Binary" />，则此方法使用二进制比较。</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if the strings match; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">如果字符串匹配，则为 <see langword="True" />；否则为 <see langword="False" />。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.LongType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">从 Visual Basic 2005 开始，此类已被否决。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LongType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Long&quot; /&gt; value that corresponds to the specified object.">返回一个对应于指定对象的 <see langword="Long" /> 值。</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;Long&quot; /&gt; value.">必需。 要转换为 <see langword="Long" /> 值的对象。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Long&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">与 <paramref name="Value" /> 对应的 <see langword="Long" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LongType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Long&quot; /&gt; value that corresponds to the specified string.">返回与指定的字符串相对应的 <see langword="Long" /> 值。</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Long&quot; /&gt; value.">必需。 要转换为 <see langword="Long" /> 值的字符串。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Long&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">与 <paramref name="Value" /> 对应的 <see langword="Long" /> 值。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.NewLateBinding">
      <summary vsli:raw="This class provides helpers that the Visual Basic compiler uses for late binding calls; it is not meant to be called directly from your code.">此类提供了一些供 Visual Basic 编译器用于后期绑定调用的帮助器；此类不宜从您的代码直接调用。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackCall(System.Object,System.String,System.Object[],System.String[],System.Boolean)">
      <summary vsli:raw="Executes a late-bound method or function call. This helper method is not meant to be called directly from your code.">执行后期绑定方法或函数调用。 此帮助器方法不宜从您的代码直接调用。</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">公开属性或方法的调用对象的实例。</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">调用对象上的属性或方法的名称。</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">一个数组，包含要传递给正在被调用的属性或方法的参数。</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">参数名称的数组。</param>
      <param name="IgnoreReturn" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether or not the return value can be ignored.">一个 <see langword="Boolean" /> 值，指示是否可以忽略返回值。</param>
      <returns vsli:raw="An instance of the call object.">调用对象的实例。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackGet(System.Object,System.String,System.Object[],System.String[])">
      <summary vsli:raw="Executes a late-bound property get or field access call. This helper method is not meant to be called directly from your code.">执行后期绑定属性获取或字段访问调用。 此帮助器方法不宜从您的代码直接调用。</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">公开属性或方法的调用对象的实例。</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">调用对象上的属性或方法的名称。</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">一个数组，包含要传递给正在被调用的属性或方法的参数。</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">参数名称的数组。</param>
      <returns vsli:raw="An instance of the call object.">调用对象的实例。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackIndexSet(System.Object,System.Object[],System.String[])">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">执行后期绑定属性设置或字段写入调用。 此帮助器方法不宜从您的代码直接调用。</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">公开属性或方法的调用对象的实例。</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">一个数组，包含要传递给正在被调用的属性或方法的参数。</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">参数名称的数组。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackIndexSetComplex(System.Object,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">执行后期绑定属性设置或字段写入调用。 此帮助器方法不宜从您的代码直接调用。</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">公开属性或方法的调用对象的实例。</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">一个数组，包含要传递给正在被调用的属性或方法的参数。</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">参数名称的数组。</param>
      <param name="OptimisticSet" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to determine whether the set operation will work. Set to &lt;see langword=&quot;True&quot; /&gt; when you believe that an intermediate value has been set in the property or field; otherwise &lt;see langword=&quot;False&quot; /&gt;.">一个 <see langword="Boolean" /> 值，用于确定设置操作是否起作用。 如果确定已经在属性或字段中设置了中间值，则设置为 <see langword="True" />，否则设置为 <see langword="False" />。</param>
      <param name="RValueBase" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value that specifies when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;. Set to &lt;see langword=&quot;True&quot; /&gt; when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;; this allows you to generate a run-time exception for late assignments to fields of &lt;see langword=&quot;RValues&quot; /&gt; of value types. Otherwise, set to &lt;see langword=&quot;False&quot; /&gt;.">一个 <see langword="Boolean" /> 值，该值指定后期引用的基引用何时为 <see langword="RValue" />。 当后期引用的基引用为 <see langword="True" /> 时，则设置为 <see langword="RValue" />；这允许您在后期赋值给值类型的 <see langword="RValues" /> 的字段时生成运行时异常。 否则设置为 <see langword="False" />。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackInvokeDefault1(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary vsli:raw="Executes a late-bound get of the default property or field, or call to the default method or function. This helper method is not meant to be called directly from your code.">执行默认属性或字段的后期绑定获取，或执行对默认方法或函数的调用。 此帮助器方法不宜从您的代码直接调用。</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method. If &lt;paramref name=&quot;Instance&quot; /&gt; is of type &lt;see cref=&quot;T:System.Dynamic.IDynamicMetaObjectProvider&quot; /&gt;, then bind using the Dynamic Language Runtime; otherwise perform standard late-binding.">公开属性或方法的调用对象的实例。 如果 <paramref name="Instance" /> 的类型为 <see cref="T:System.Dynamic.IDynamicMetaObjectProvider" />，则使用动态语言运行时进行绑定；否则执行标准后期绑定。</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">一个数组，包含要传递给正在被调用的属性或方法的参数。</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">参数名称的数组。</param>
      <param name="ReportErrors" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to specify whether to throw exceptions when an error is encountered. Set to &lt;see langword=&quot;True&quot; /&gt; to throw exceptions. Set to &lt;see langword=&quot;False&quot; /&gt; to return &lt;see langword=&quot;Nothing&quot; /&gt; when an error is encountered.">一个 <see langword="Boolean" /> 值，用于指定在遇到错误时是否引发异常。 设置为 <see langword="True" /> 可引发异常。 设置为 <see langword="False" /> 可在遇到错误时返回 <see langword="Nothing" />。</param>
      <returns vsli:raw="An instance of the call object.">调用对象的实例。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackInvokeDefault2(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary vsli:raw="Executes a late-bound get of the default property or field, or call to the default method or function. This helper method is not meant to be called directly from your code.">执行默认属性或字段的后期绑定获取，或执行对默认方法或函数的调用。 此帮助器方法不宜从您的代码直接调用。</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">公开属性或方法的调用对象的实例。</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">一个数组，包含要传递给正在被调用的属性或方法的参数。</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">参数名称的数组。</param>
      <param name="ReportErrors" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to specify whether to throw exceptions when an error is encountered. Set to &lt;see langword=&quot;True&quot; /&gt; to throw exceptions. Set to &lt;see langword=&quot;False&quot; /&gt; to return &lt;see langword=&quot;Nothing&quot; /&gt; when an error is encountered.">一个 <see langword="Boolean" /> 值，用于指定在遇到错误时是否引发异常。 设置为 <see langword="True" /> 可引发异常。 设置为 <see langword="False" /> 可在遇到错误时返回 <see langword="Nothing" />。</param>
      <returns vsli:raw="An instance of the call object.">调用对象的实例。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackSet(System.Object,System.String,System.Object[])">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">执行后期绑定属性设置或字段写入调用。 此帮助器方法不宜从您的代码直接调用。</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">公开属性或方法的调用对象的实例。</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">调用对象上的属性或方法的名称。</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">一个数组，包含要传递给正在被调用的属性或方法的参数。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackSetComplex(System.Object,System.String,System.Object[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">执行后期绑定属性设置或字段写入调用。 此帮助器方法不宜从您的代码直接调用。</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">公开属性或方法的调用对象的实例。</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">调用对象上的属性或方法的名称。</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">一个数组，包含要传递给正在被调用的属性或方法的参数。</param>
      <param name="OptimisticSet" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to determine whether the set operation will work. Set to &lt;see langword=&quot;True&quot; /&gt; when you believe that an intermediate value has been set in the property or field; otherwise &lt;see langword=&quot;False&quot; /&gt;.">一个 <see langword="Boolean" /> 值，用于确定设置操作是否起作用。 如果确定已经在属性或字段中设置了中间值，则设置为 <see langword="True" />，否则设置为 <see langword="False" />。</param>
      <param name="RValueBase" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value that specifies when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;. Set to &lt;see langword=&quot;True&quot; /&gt; when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;; this allows you to generate a run-time exception for late assignments to fields of &lt;see langword=&quot;RValues&quot; /&gt; of value types. Otherwise, set to &lt;see langword=&quot;False&quot; /&gt;.">一个 <see langword="Boolean" /> 值，该值指定后期引用的基引用何时为 <see langword="RValue" />。 当后期引用的基引用为 <see langword="True" /> 时，则设置为 <see langword="RValue" />；这允许您在后期赋值给值类型的 <see langword="RValues" /> 的字段时生成运行时异常。 否则设置为 <see langword="False" />。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateCall(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean[],System.Boolean)">
      <summary vsli:raw="Executes a late-bound method or function call. This helper method is not meant to be called directly from your code.">执行后期绑定方法或函数调用。 此帮助器方法不宜从您的代码直接调用。</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">公开属性或方法的调用对象的实例。</param>
      <param name="Type" vsli:raw="The type of the call object.">调用对象的类型。</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">调用对象上的属性或方法的名称。</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">一个数组，包含要传递给正在被调用的属性或方法的参数。</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">参数名称的数组。</param>
      <param name="TypeArguments" vsli:raw="An array of argument types; used only for generic calls to pass argument types.">参数类型的数组；只用于传递参数类型的泛型调用。</param>
      <param name="CopyBack" vsli:raw="An array of &lt;see langword=&quot;Boolean&quot; /&gt; values that the late binder uses to communicate back to the call site which arguments match &lt;see langword=&quot;ByRef&quot; /&gt; parameters. Each &lt;see langword=&quot;True&quot; /&gt; value indicates that the arguments matched and should be copied out after the call to &lt;see langword=&quot;LateCall&quot; /&gt; is complete.">
        <see langword="Boolean" /> 值的数组，后期联编程序使用此数组与调用站点进行回归通信，该调用站点的变量匹配 <see langword="ByRef" /> 参数。 每个 <see langword="True" /> 值均指示参数匹配，并指示应在完成对 <see langword="LateCall" /> 的调用后将其复制出来。</param>
      <param name="IgnoreReturn" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether or not the return value can be ignored.">一个 <see langword="Boolean" /> 值，指示是否可以忽略返回值。</param>
      <returns vsli:raw="An instance of the call object.">调用对象的实例。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateCallInvokeDefault(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary vsli:raw="Executes a late-bound call to the default method or function. This helper method is not meant to be called directly from your code.">执行对默认方法或函数的后期绑定调用。 此帮助器方法不宜从您的代码直接调用。</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">公开属性或方法的调用对象的实例。</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">一个数组，包含要传递给正在被调用的属性或方法的参数。</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">参数名称的数组。</param>
      <param name="ReportErrors" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to specify whether to throw exceptions when an error is encountered. Set to &lt;see langword=&quot;True&quot; /&gt; to throw exceptions. Set to &lt;see langword=&quot;False&quot; /&gt; to return &lt;see langword=&quot;Nothing&quot; /&gt; when an error is encountered.">一个 <see langword="Boolean" /> 值，用于指定在遇到错误时是否引发异常。 设置为 <see langword="True" /> 可引发异常。 设置为 <see langword="False" /> 可在遇到错误时返回 <see langword="Nothing" />。</param>
      <returns vsli:raw="An instance of the call object.">调用对象的实例。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateGet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean[])">
      <summary vsli:raw="Executes a late-bound property get or field access call. This helper method is not meant to be called directly from your code.">执行后期绑定属性获取或字段访问调用。 此帮助器方法不宜从您的代码直接调用。</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">公开属性或方法的调用对象的实例。</param>
      <param name="Type" vsli:raw="The type of the call object.">调用对象的类型。</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">调用对象上的属性或方法的名称。</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">一个数组，包含要传递给正在被调用的属性或方法的参数。</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">参数名称的数组。</param>
      <param name="TypeArguments" vsli:raw="An array of argument types; used only for generic calls to pass argument types.">参数类型的数组；只用于传递参数类型的泛型调用。</param>
      <param name="CopyBack" vsli:raw="An array of &lt;see langword=&quot;Boolean&quot; /&gt; values that the late binder uses to communicate back to the call site which arguments match &lt;see langword=&quot;ByRef&quot; /&gt; parameters. Each &lt;see langword=&quot;True&quot; /&gt; value indicates that the arguments matched and should be copied out after the call to &lt;see langword=&quot;LateCall&quot; /&gt; is complete.">
        <see langword="Boolean" /> 值的数组，后期联编程序使用此数组与调用站点进行回归通信，该调用站点的变量匹配 <see langword="ByRef" /> 参数。 每个 <see langword="True" /> 值均指示参数匹配，并指示应在完成对 <see langword="LateCall" /> 的调用后将其复制出来。</param>
      <returns vsli:raw="An instance of the call object.">调用对象的实例。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateGetInvokeDefault(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary vsli:raw="Executes a late-bound get of the default property or field. This helper method is not meant to be called directly from your code.">执行默认属性或字段的后期绑定获取。 此帮助器方法不宜从您的代码直接调用。</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">公开属性或方法的调用对象的实例。</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">一个数组，包含要传递给正在被调用的属性或方法的参数。</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">参数名称的数组。</param>
      <param name="ReportErrors" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to specify whether to throw exceptions when an error is encountered. Set to &lt;see langword=&quot;True&quot; /&gt; to throw exceptions. Set to &lt;see langword=&quot;False&quot; /&gt; to return &lt;see langword=&quot;Nothing&quot; /&gt; when an error is encountered.">一个 <see langword="Boolean" /> 值，用于指定在遇到错误时是否引发异常。 设置为 <see langword="True" /> 可引发异常。 设置为 <see langword="False" /> 可在遇到错误时返回 <see langword="Nothing" />。</param>
      <returns vsli:raw="An instance of the call object.">调用对象的实例。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexGet(System.Object,System.Object[],System.String[])">
      <summary vsli:raw="Executes a late-bound property get or field access call. This helper method is not meant to be called directly from your code.">执行后期绑定属性获取或字段访问调用。 此帮助器方法不宜从您的代码直接调用。</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">公开属性或方法的调用对象的实例。</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">一个数组，包含要传递给正在被调用的属性或方法的参数。</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">参数名称的数组。</param>
      <returns vsli:raw="An instance of the call object.">调用对象的实例。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexSet(System.Object,System.Object[],System.String[])">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">执行后期绑定属性设置或字段写入调用。 此帮助器方法不宜从您的代码直接调用。</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">公开属性或方法的调用对象的实例。</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">一个数组，包含要传递给正在被调用的属性或方法的参数。</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">参数名称的数组。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexSetComplex(System.Object,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">执行后期绑定属性设置或字段写入调用。 此帮助器方法不宜从您的代码直接调用。</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">公开属性或方法的调用对象的实例。</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">一个数组，包含要传递给正在被调用的属性或方法的参数。</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">参数名称的数组。</param>
      <param name="OptimisticSet" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to determine whether the set operation will work. Set to &lt;see langword=&quot;True&quot; /&gt; when you believe that an intermediate value has been set in the property or field; otherwise &lt;see langword=&quot;False&quot; /&gt;.">一个 <see langword="Boolean" /> 值，用于确定设置操作是否起作用。 如果确定已经在属性或字段中设置了中间值，则设置为 <see langword="True" />，否则设置为 <see langword="False" />。</param>
      <param name="RValueBase" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value that specifies when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;. Set to &lt;see langword=&quot;True&quot; /&gt; when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;; this allows you to generate a run-time exception for late assignments to fields of &lt;see langword=&quot;RValues&quot; /&gt; of value types. Otherwise, set to &lt;see langword=&quot;False&quot; /&gt;.">一个 <see langword="Boolean" /> 值，该值指定后期引用的基引用何时为 <see langword="RValue" />。 当后期引用的基引用为 <see langword="True" /> 时，则设置为 <see langword="RValue" />；这允许您在后期赋值给值类型的 <see langword="RValues" /> 的字段时生成运行时异常。 否则设置为 <see langword="False" />。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[])">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">执行后期绑定属性设置或字段写入调用。 此帮助器方法不宜从您的代码直接调用。</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">公开属性或方法的调用对象的实例。</param>
      <param name="Type" vsli:raw="The type of the call object.">调用对象的类型。</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">调用对象上的属性或方法的名称。</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">一个数组，包含要传递给正在被调用的属性或方法的参数。</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">参数名称的数组。</param>
      <param name="TypeArguments" vsli:raw="An array of argument types; used only for generic calls to pass argument types.">参数类型的数组；只用于传递参数类型的泛型调用。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean,System.Boolean,Microsoft.VisualBasic.CallType)">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">执行后期绑定属性设置或字段写入调用。 此帮助器方法不宜从您的代码直接调用。</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">公开属性或方法的调用对象的实例。</param>
      <param name="Type" vsli:raw="The type of the call object.">调用对象的类型。</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">调用对象上的属性或方法的名称。</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">一个数组，包含要传递给正在被调用的属性或方法的参数。</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">参数名称的数组。</param>
      <param name="TypeArguments" vsli:raw="An array of argument types; used only for generic calls to pass argument types.">参数类型的数组；只用于传递参数类型的泛型调用。</param>
      <param name="OptimisticSet" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to determine whether the set operation will work. Set to &lt;see langword=&quot;True&quot; /&gt; when you believe that an intermediate value has been set in the property or field; otherwise &lt;see langword=&quot;False&quot; /&gt;.">一个 <see langword="Boolean" /> 值，用于确定设置操作是否起作用。 如果确定已经在属性或字段中设置了中间值，则设置为 <see langword="True" />，否则设置为 <see langword="False" />。</param>
      <param name="RValueBase" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value that specifies when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;. Set to &lt;see langword=&quot;True&quot; /&gt; when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;; this allows you to generate a run-time exception for late assignments to fields of &lt;see langword=&quot;RValues&quot; /&gt; of value types. Otherwise, set to &lt;see langword=&quot;False&quot; /&gt;.">一个 <see langword="Boolean" /> 值，该值指定后期引用的基引用何时为 <see langword="RValue" />。 当后期引用的基引用为 <see langword="True" /> 时，则设置为 <see langword="RValue" />；这允许您在后期赋值给值类型的 <see langword="RValues" /> 的字段时生成运行时异常。 否则设置为 <see langword="False" />。</param>
      <param name="CallType" vsli:raw="An enumeration member of type &lt;see cref=&quot;T:Microsoft.VisualBasic.CallType&quot; /&gt; representing the type of procedure being called. The value of CallType can be &lt;see langword=&quot;Method&quot; /&gt;, &lt;see langword=&quot;Get&quot; /&gt;, or &lt;see langword=&quot;Set&quot; /&gt;. Only &lt;see langword=&quot;Set&quot; /&gt; is used.">类型 <see cref="T:Microsoft.VisualBasic.CallType" /> 的一个枚举成员，它表示正在被调用的过程的类型。 CallType 的值可以是 <see langword="Method" />、<see langword="Get" /> 或 <see langword="Set" />。 仅使用 <see langword="Set" />。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSetComplex(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">执行后期绑定属性设置或字段写入调用。 此帮助器方法不宜从您的代码直接调用。</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">公开属性或方法的调用对象的实例。</param>
      <param name="Type" vsli:raw="The type of the call object.">调用对象的类型。</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">调用对象上的属性或方法的名称。</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">一个数组，包含要传递给正在被调用的属性或方法的参数。</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">参数名称的数组。</param>
      <param name="TypeArguments" vsli:raw="An array of argument types; used only for generic calls to pass argument types.">参数类型的数组；只用于传递参数类型的泛型调用。</param>
      <param name="OptimisticSet" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to determine whether the set operation will work. Set to &lt;see langword=&quot;True&quot; /&gt; when you believe that an intermediate value has been set in the property or field; otherwise &lt;see langword=&quot;False&quot; /&gt;.">一个 <see langword="Boolean" /> 值，用于确定设置操作是否起作用。 如果确定已经在属性或字段中设置了中间值，则设置为 <see langword="True" />，否则设置为 <see langword="False" />。</param>
      <param name="RValueBase" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value that specifies when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;. Set to &lt;see langword=&quot;True&quot; /&gt; when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;; this allows you to generate a run-time exception for late assignments to fields of &lt;see langword=&quot;RValues&quot; /&gt; of value types. Otherwise, set to &lt;see langword=&quot;False&quot; /&gt;.">一个 <see langword="Boolean" /> 值，该值指定后期引用的基引用何时为 <see langword="RValue" />。 当后期引用的基引用为 <see langword="True" /> 时，则设置为 <see langword="RValue" />；这允许您在后期赋值给值类型的 <see langword="RValues" /> 的字段时生成运行时异常。 否则设置为 <see langword="False" />。</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl">
      <summary vsli:raw="The Visual Basic compiler uses this class for object flow control; it is not meant to be called directly from your code.">Visual Basic 编译器将此类用于对象流控制；这并不意味着要从您的代码中直接调用它。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.CheckForSyncLockOnValueType(System.Object)">
      <summary vsli:raw="Checks for a synchronization lock on the specified type.">检查指定类型上的同步锁。</summary>
      <param name="Expression" vsli:raw="The data type for which to check for synchronization lock.">检查同步锁的数据类型。</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl">
      <summary vsli:raw="Provides services to the Visual Basic compiler for compiling &lt;see langword=&quot;For...Next&quot; /&gt; loops.">向 Visual Basic 编译器提供用于编译 <see langword="For...Next" /> 循环的服务。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForLoopInitObj(System.Object,System.Object,System.Object,System.Object,System.Object@,System.Object@)">
      <summary vsli:raw="Initializes a &lt;see langword=&quot;For...Next&quot; /&gt; loop.">初始化一个 <see langword="For...Next" /> 循环。</summary>
      <param name="Counter" vsli:raw="The loop counter variable.">循环计数器变量。</param>
      <param name="Start" vsli:raw="The initial value of the loop counter.">循环计数器的初始值。</param>
      <param name="Limit" vsli:raw="The value of the &lt;see langword=&quot;To&quot; /&gt; option.">
        <see langword="To" /> 选项的值。</param>
      <param name="StepValue" vsli:raw="The value of the &lt;see langword=&quot;Step&quot; /&gt; option.">
        <see langword="Step" /> 选项的值。</param>
      <param name="LoopForResult" vsli:raw="An object that contains verified values for loop values.">一个对象，其中包含循环值的已验证值。</param>
      <param name="CounterResult" vsli:raw="The counter value for the next loop iteration.">下一个循环迭代的计数器值。</param>
      <returns vsli:raw="&lt;see langword=&quot;False&quot; /&gt; if the loop has terminated; otherwise, &lt;see langword=&quot;True&quot; /&gt;.">如果循环已终止，则为 <see langword="False" />；否则为 <see langword="True" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckDec(System.Decimal,System.Decimal,System.Decimal)">
      <summary vsli:raw="Checks for valid values for the loop counter, &lt;see langword=&quot;Step&quot; /&gt;, and &lt;see langword=&quot;To&quot; /&gt; values.">检查循环计数器的有效值以及 <see langword="Step" /> 和 <see langword="To" /> 值。</summary>
      <param name="count" vsli:raw="Required. A &lt;see langword=&quot;Decimal&quot; /&gt; value that represents the initial value passed for the loop counter variable.">必需。 一个 <see langword="Decimal" /> 值，表示为循环计数器变量传递的初始值。</param>
      <param name="limit" vsli:raw="Required. A &lt;see langword=&quot;Decimal&quot; /&gt; value that represents the value passed by using the &lt;see langword=&quot;To&quot; /&gt; keyword.">必需。 一个 <see langword="Decimal" /> 值，表示使用 <see langword="To" /> 关键字传递的值。</param>
      <param name="StepValue" vsli:raw="Required. A &lt;see langword=&quot;Decimal&quot; /&gt; value that represents the value passed by using the &lt;see langword=&quot;Step&quot; /&gt; keyword.">必需。 一个 <see langword="Decimal" /> 值，表示使用 <see langword="Step" /> 关键字传递的值。</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;StepValue&quot; /&gt; is greater than zero and &lt;paramref name=&quot;count&quot; /&gt; is less than or equal to &lt;paramref name=&quot;limit&quot; /&gt; or &lt;paramref name=&quot;StepValue&quot; /&gt; is less than or equal to zero and &lt;paramref name=&quot;count&quot; /&gt; is greater than or equal to &lt;paramref name=&quot;limit&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">如果 <paramref name="StepValue" /> 大于零且 <paramref name="count" /> 小于或等于 <paramref name="limit" />，或者 <paramref name="StepValue" /> 小于或等于零且 <paramref name="count" /> 大于或等于 <paramref name="limit" />，则为 <see langword="True" />；否则为 <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckObj(System.Object,System.Object,System.Object@)">
      <summary vsli:raw="Increments a &lt;see langword=&quot;For...Next&quot; /&gt; loop.">使 <see langword="For...Next" /> 循环次数递增。</summary>
      <param name="Counter" vsli:raw="The loop counter variable.">循环计数器变量。</param>
      <param name="LoopObj" vsli:raw="An object that contains verified values for loop values.">一个对象，其中包含循环值的已验证值。</param>
      <param name="CounterResult" vsli:raw="The counter value for the next loop iteration.">下一个循环迭代的计数器值。</param>
      <returns vsli:raw="&lt;see langword=&quot;False&quot; /&gt; if the loop has terminated; otherwise, &lt;see langword=&quot;True&quot; /&gt;.">如果循环已终止，则为 <see langword="False" />；否则为 <see langword="True" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckR4(System.Single,System.Single,System.Single)">
      <summary vsli:raw="Checks for valid values for the loop counter, &lt;see langword=&quot;Step&quot; /&gt;, and &lt;see langword=&quot;To&quot; /&gt; values.">检查循环计数器的有效值以及 <see langword="Step" /> 和 <see langword="To" /> 值。</summary>
      <param name="count" vsli:raw="Required. A &lt;see cref=&quot;T:System.Single&quot; /&gt; value that represents the initial value passed for the loop counter variable.">必需。 一个 <see langword="Single" /> 值，表示为循环计数器变量传递的初始值。</param>
      <param name="limit" vsli:raw="Required. A &lt;see cref=&quot;T:System.Single&quot; /&gt; value that represents the value passed by using the &lt;see langword=&quot;To&quot; /&gt; keyword.">必需。 一个 <see langword="Single" /> 值，表示使用 <see langword="To" /> 关键字传递的值。</param>
      <param name="StepValue" vsli:raw="Required. A &lt;see cref=&quot;T:System.Single&quot; /&gt; value that represents the value passed by using the &lt;see langword=&quot;Step&quot; /&gt; keyword.">必需。 一个 <see langword="Single" /> 值，表示使用 <see langword="Step" /> 关键字传递的值。</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;StepValue&quot; /&gt; is greater than zero and &lt;paramref name=&quot;count&quot; /&gt; is less than or equal to &lt;paramref name=&quot;limit&quot; /&gt;, or if &lt;paramref name=&quot;StepValue&quot; /&gt; is less than or equal to zero and &lt;paramref name=&quot;count&quot; /&gt; is greater than or equal to &lt;paramref name=&quot;limit&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">如果 <paramref name="StepValue" /> 大于零且 <paramref name="count" /> 小于或等于 <paramref name="limit" />，或者 <paramref name="StepValue" /> 小于或等于零且 <paramref name="count" /> 大于或等于 <paramref name="limit" />，则为 <see langword="True" />；否则为 <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckR8(System.Double,System.Double,System.Double)">
      <summary vsli:raw="Checks for valid values for the loop counter, &lt;see langword=&quot;Step&quot; /&gt;, and &lt;see langword=&quot;To&quot; /&gt; values.">检查循环计数器的有效值以及 <see langword="Step" /> 和 <see langword="To" /> 值。</summary>
      <param name="count" vsli:raw="Required. A &lt;see cref=&quot;T:System.Double&quot; /&gt; value that represents the initial value passed for the loop counter variable.">必需。 一个 <see langword="Double" /> 值，表示为循环计数器变量传递的初始值。</param>
      <param name="limit" vsli:raw="Required. A &lt;see cref=&quot;T:System.Double&quot; /&gt; value that represents the value passed by using the &lt;see langword=&quot;To&quot; /&gt; keyword.">必需。 一个 <see langword="Double" /> 值，表示使用 <see langword="To" /> 关键字传递的值。</param>
      <param name="StepValue" vsli:raw="Required. A &lt;see cref=&quot;T:System.Double&quot; /&gt; value that represents the value passed by using the &lt;see langword=&quot;Step&quot; /&gt; keyword.">必需。 一个 <see langword="Double" /> 值，表示使用 <see langword="Step" /> 关键字传递的值。</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;StepValue&quot; /&gt; is greater than zero and &lt;paramref name=&quot;count&quot; /&gt; is less than or equal to &lt;paramref name=&quot;limit&quot; /&gt;, or if &lt;paramref name=&quot;StepValue&quot; /&gt; is less than or equal to zero and &lt;paramref name=&quot;count&quot; /&gt; is greater than or equal to &lt;paramref name=&quot;limit&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">如果 <paramref name="StepValue" /> 大于零且 <paramref name="count" /> 小于或等于 <paramref name="limit" />，或者 <paramref name="StepValue" /> 小于或等于零且 <paramref name="count" /> 大于或等于 <paramref name="limit" />，则为 <see langword="True" />；否则为 <see langword="False" />。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ObjectType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">从 Visual Basic 2005 开始，此类已被否决。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.CompilerServices.ObjectType&quot; /&gt; class.">初始化 <see cref="T:Microsoft.VisualBasic.CompilerServices.ObjectType" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.AddObj(System.Object,System.Object)">
      <summary vsli:raw="Performs an addition (+) operation.">执行加法 (+) 运算。</summary>
      <param name="o1" vsli:raw="Required. Any numeric expression.">必需。 任何数值表达式。</param>
      <param name="o2" vsli:raw="Required. Any numeric expression.">必需。 任何数值表达式。</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;o1&quot; /&gt; and &lt;paramref name=&quot;o2&quot; /&gt;.">
        <paramref name="o1" /> 与 <paramref name="o2" /> 的和。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitAndObj(System.Object,System.Object)">
      <summary vsli:raw="Performs a bitwise &lt;see langword=&quot;And&quot; /&gt; operation.">执行按位 <see langword="And" /> 运算。</summary>
      <param name="obj1" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">必需。 任何 <see langword="Boolean" /> 或数值表达式。</param>
      <param name="obj2" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">必需。 任何 <see langword="Boolean" /> 或数值表达式。</param>
      <returns vsli:raw="1 if both &lt;paramref name=&quot;obj1&quot; /&gt; and &lt;paramref name=&quot;obj2&quot; /&gt; evaluate to 1; otherwise, 0.">如果 <paramref name="obj1" /> 和 <paramref name="obj2" /> 的计算结果都是 1，则为 1；否则为 0。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitOrObj(System.Object,System.Object)">
      <summary vsli:raw="Performs a bitwise &lt;see langword=&quot;Or&quot; /&gt; operation.">执行按位 <see langword="Or" /> 运算。</summary>
      <param name="obj1" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">必需。 任何 <see langword="Boolean" /> 或数值表达式。</param>
      <param name="obj2" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">必需。 任何 <see langword="Boolean" /> 或数值表达式。</param>
      <returns vsli:raw="0 if both &lt;paramref name=&quot;obj1&quot; /&gt; and &lt;paramref name=&quot;obj2&quot; /&gt; evaluate to 0; otherwise, 1.">如果 <paramref name="obj1" /> 和 <paramref name="obj2" /> 的计算结果都是 0，则为 0；否则为 1。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitXorObj(System.Object,System.Object)">
      <summary vsli:raw="Performs an &lt;see langword=&quot;Xor&quot; /&gt; operation.">执行 <see langword="Xor" /> 运算。</summary>
      <param name="obj1" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">必需。 任何 <see langword="Boolean" /> 或数值表达式。</param>
      <param name="obj2" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">必需。 任何 <see langword="Boolean" /> 或数值表达式。</param>
      <returns vsli:raw="A numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns. For more information, see Xor Operator.">一个数值，表示两个数值位模式的按位异运算（互斥按位析取）的结果。 有关详细信息，请参阅 Xor 运算符。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.DivObj(System.Object,System.Object)">
      <summary vsli:raw="Performs a division (/) operation.">执行除法 (/) 运算。</summary>
      <param name="o1" vsli:raw="Required. Any numeric expression.">必需。 任何数值表达式。</param>
      <param name="o2" vsli:raw="Required. Any numeric expression.">必需。 任何数值表达式。</param>
      <returns vsli:raw="The full quotient of &lt;paramref name=&quot;o1&quot; /&gt; divided by &lt;paramref name=&quot;o2&quot; /&gt;, including any remainder.">
        <paramref name="o1" /> 除以 <paramref name="o2" /> 的完整商，包括任何余数。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.GetObjectValuePrimitive(System.Object)">
      <summary vsli:raw="Returns a boxed primitive value. This method is used to prevent copying structures multiple times.">返回装箱的基元值。 此方法用于防止多次复制结构。</summary>
      <param name="o" vsli:raw="Required. Any expression.">必需。 任何表达式。</param>
      <returns vsli:raw="The primitive value of &lt;paramref name=&quot;o&quot; /&gt; typed as object.">类型化为对象的 <paramref name="o" /> 的基元值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.IDivObj(System.Object,System.Object)">
      <summary vsli:raw="Performs an integer division (\) operation.">执行整除 (\) 运算。</summary>
      <param name="o1" vsli:raw="Required. Any numeric expression.">必需。 任何数值表达式。</param>
      <param name="o2" vsli:raw="Required. Any numeric expression.">必需。 任何数值表达式。</param>
      <returns vsli:raw="The integer quotient of &lt;paramref name=&quot;o1&quot; /&gt; divided by &lt;paramref name=&quot;o2&quot; /&gt;, which discards any remainder and retains only the integer portion.">
        <paramref name="o1" /> 除以 <paramref name="o2" /> 的整数商，它丢弃了所有余数，而只保留整数部分。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.LikeObj(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Performs a &lt;see langword=&quot;Like&quot; /&gt; comparison.">执行 <see langword="Like" /> 比较。</summary>
      <param name="vLeft" vsli:raw="Required. Any expression.">必需。 任何表达式。</param>
      <param name="vRight" vsli:raw="Required. Any string expression conforming to the pattern-matching conventions described in Like Operator.">必需。 任何符合 Like 运算符中所述的模式匹配约定的字符串表达式。</param>
      <param name="CompareOption" vsli:raw="Required. A &lt;see cref=&quot;T:Microsoft.VisualBasic.CompareMethod&quot; /&gt; value that specifies that the operation use either text or binary comparison.">必需。 一个 <see cref="T:Microsoft.VisualBasic.CompareMethod" /> 值，指定运算使用文本比较或二进制比较。</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if the string representation of the value in &lt;paramref name=&quot;vLeft&quot; /&gt; satisfies the pattern that is contained in &lt;paramref name=&quot;vRight&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;. &lt;see langword=&quot;True&quot; /&gt; if both &lt;paramref name=&quot;vLeft&quot; /&gt; and &lt;paramref name=&quot;vRight&quot; /&gt; are &lt;see langword=&quot;Nothing&quot; /&gt;.">如果 <paramref name="vLeft" /> 中的值的字符串表示形式满足 <paramref name="vRight" /> 中包含的模式的要求，则为 <see langword="True" />；否则为 <see langword="False" />。 如果 <paramref name="vLeft" /> 和 <paramref name="vRight" /> 都是 <see langword="True" />，则为 <see langword="Nothing" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ModObj(System.Object,System.Object)">
      <summary vsli:raw="Performs a modulus (&lt;see langword=&quot;Mod&quot; /&gt;) operation.">执行取余 (<see langword="Mod" />) 运算。</summary>
      <param name="o1" vsli:raw="Required. Any numeric expression.">必需。 任何数值表达式。</param>
      <param name="o2" vsli:raw="Required. Any numeric expression.">必需。 任何数值表达式。</param>
      <returns vsli:raw="The remainder after &lt;paramref name=&quot;o1&quot; /&gt; is divided by &lt;paramref name=&quot;o2&quot; /&gt;.">
        <paramref name="o1" /> 除以 <paramref name="o2" /> 后所得的余数。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.MulObj(System.Object,System.Object)">
      <summary vsli:raw="Performs a multiplication (*) operation.">执行乘法 (*) 运算。</summary>
      <param name="o1" vsli:raw="Required. Any numeric expression.">必需。 任何数值表达式。</param>
      <param name="o2" vsli:raw="Required. Any numeric expression.">必需。 任何数值表达式。</param>
      <returns vsli:raw="The product of &lt;paramref name=&quot;o1&quot; /&gt; and &lt;paramref name=&quot;o2&quot; /&gt;.">
        <paramref name="o1" /> 与 <paramref name="o2" /> 的乘积。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.NegObj(System.Object)">
      <summary vsli:raw="Performs a unary minus (-) operation.">执行一元负 (-) 运算。</summary>
      <param name="obj" vsli:raw="Required. Any numeric expression.">必需。 任何数值表达式。</param>
      <returns vsli:raw="The negative value of &lt;paramref name=&quot;obj&quot; /&gt;.">
        <paramref name="obj" /> 的负值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.NotObj(System.Object)">
      <summary vsli:raw="Performs a &lt;see langword=&quot;Not&quot; /&gt; operation.">执行 <see langword="Not" /> 运算。</summary>
      <param name="obj" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">必需。 任何 <see langword="Boolean" /> 或数值表达式。</param>
      <returns vsli:raw="For &lt;see langword=&quot;Boolean&quot; /&gt; operations, &lt;see langword=&quot;False&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;True&quot; /&gt;; otherwise, &lt;see langword=&quot;True&quot; /&gt;. For bitwise operations, 1 if &lt;paramref name=&quot;obj&quot; /&gt; is 0; otherwise, 0.">对于 <see langword="Boolean" /> 运算，如果 <paramref name="obj" /> 为 <see langword="False" />，则为 <see langword="True" />；否则为 <see langword="True" />。 对于按位运算，如果 <paramref name="obj" /> 为 0，则为 1；否则为 0。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ObjTst(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Performs binary or text string comparison when given two objects.">对给定的两个对象执行二进制字符串或文本字符串比较。</summary>
      <param name="o1" vsli:raw="Required. Any expression.">必需。 任何表达式。</param>
      <param name="o2" vsli:raw="Required. Any expression.">必需。 任何表达式。</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">必需。 如果执行不区分大小写的字符串比较，则为 <see langword="True" />；否则为 <see langword="False" />。</param>
      <returns vsli:raw="&lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; -1&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;o1&quot; /&gt; is less than &lt;paramref name=&quot;o2&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 0&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;o1&quot; /&gt; is equal to &lt;paramref name=&quot;o2&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 1&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;o1&quot; /&gt; is greater than &lt;paramref name=&quot;o2&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">值 
  条件 
  -1 
 
                <paramref name="o1" /> 小于 <paramref name="o2" />。  

  0 
 
                <paramref name="o1" /> 等于 <paramref name="o2" />。  

  1 
 
                <paramref name="o1" /> 大于 <paramref name="o2" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.PlusObj(System.Object)">
      <summary vsli:raw="Performs a unary plus (+) operation.">执行一元正 (+) 运算。</summary>
      <param name="obj" vsli:raw="Required. Any numeric expression.">必需。 任何数值表达式。</param>
      <returns vsli:raw="The value of &lt;paramref name=&quot;obj&quot; /&gt;. (The sign of the &lt;paramref name=&quot;obj&quot; /&gt; is unchanged.)">
        <paramref name="obj" /> 的值。 （<paramref name="obj" /> 的符号不变。）</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.PowObj(System.Object,System.Object)">
      <summary vsli:raw="Performs an exponent (^) operation.">执行指数 (^) 运算。</summary>
      <param name="obj1" vsli:raw="Required. Any numeric expression.">必需。 任何数值表达式。</param>
      <param name="obj2" vsli:raw="Required. Any numeric expression.">必需。 任何数值表达式。</param>
      <returns vsli:raw="The result of &lt;paramref name=&quot;obj1&quot; /&gt; raised to the power of &lt;paramref name=&quot;obj2&quot; /&gt;.">
        <paramref name="obj1" /> 的 <paramref name="obj2" /> 次幂的计算结果。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftLeftObj(System.Object,System.Int32)">
      <summary vsli:raw="Performs an arithmetic left shift (&amp;lt;&amp;lt;) operation.">执行算数左移 (&lt;&lt;) 运算。</summary>
      <param name="o1" vsli:raw="Required. Integral numeric expression. The bit pattern to be shifted. The data type must be an integral type (&lt;see langword=&quot;SByte&quot; /&gt;, &lt;see langword=&quot;Byte&quot; /&gt;, &lt;see langword=&quot;Short&quot; /&gt;, &lt;see langword=&quot;UShort&quot; /&gt;, &lt;see langword=&quot;Integer&quot; /&gt;, &lt;see langword=&quot;UInteger&quot; /&gt;, &lt;see langword=&quot;Long&quot; /&gt;, or &lt;see langword=&quot;ULong&quot; /&gt;).">必需。 整型数值表达式。 要进行移位的位模式。 数据类型必须为整型（<see langword="SByte" />、<see langword="Byte" />、<see langword="Short" />、<see langword="UShort" />、<see langword="Integer" />、<see langword="UInteger" />、<see langword="Long" /> 或 <see langword="ULong" />）。</param>
      <param name="amount" vsli:raw="Required. Numeric expression. The number of bits to shift the bit pattern. The data type must be &lt;see langword=&quot;Integer&quot; /&gt; or widen to &lt;see langword=&quot;Integer&quot; /&gt;.">必需。 数值表达式。 要将该位模式移位的位数。 数据类型必须为 <see langword="Integer" /> 或扩展到 <see langword="Integer" />。</param>
      <returns vsli:raw="An integral numeric value. The result of shifting the bit pattern. The data type is the same as that of &lt;paramref name=&quot;o1&quot; /&gt;.">一个整型数值， 对该位模式进行移位的结果。 数据类型与 <paramref name="o1" /> 的数据类型相同。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftRightObj(System.Object,System.Int32)">
      <summary vsli:raw="Performs an arithmetic right shift (&amp;gt;&amp;gt;) operation.">执行算数右移 (&gt;&gt;) 运算。</summary>
      <param name="o1" vsli:raw="Required. Integral numeric expression. The bit pattern to be shifted. The data type must be an integral type (&lt;see langword=&quot;SByte&quot; /&gt;, &lt;see langword=&quot;Byte&quot; /&gt;, &lt;see langword=&quot;Short&quot; /&gt;, &lt;see langword=&quot;UShort&quot; /&gt;, &lt;see langword=&quot;Integer&quot; /&gt;, &lt;see langword=&quot;UInteger&quot; /&gt;, &lt;see langword=&quot;Long&quot; /&gt;, or &lt;see langword=&quot;ULong&quot; /&gt;).">必需。 整型数值表达式。 要进行移位的位模式。 数据类型必须为整型（<see langword="SByte" />、<see langword="Byte" />、<see langword="Short" />、<see langword="UShort" />、<see langword="Integer" />、<see langword="UInteger" />、<see langword="Long" /> 或 <see langword="ULong" />）。</param>
      <param name="amount" vsli:raw="Required. Numeric expression. The number of bits to shift the bit pattern. The data type must be &lt;see langword=&quot;Integer&quot; /&gt; or widen to &lt;see langword=&quot;Integer&quot; /&gt;.">必需。 数值表达式。 要将该位模式移位的位数。 数据类型必须为 <see langword="Integer" /> 或扩展到 <see langword="Integer" />。</param>
      <returns vsli:raw="An integral numeric value. The result of shifting the bit pattern. The data type is the same as that of &lt;paramref name=&quot;o1&quot; /&gt;.">一个整型数值， 对该位模式进行移位的结果。 数据类型与 <paramref name="o1" /> 的数据类型相同。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.StrCatObj(System.Object,System.Object)">
      <summary vsli:raw="Performs a string concatenation (&amp;amp;) operation.">执行字符串串联 (&amp;) 运算。</summary>
      <param name="vLeft" vsli:raw="Required. Any expression.">必需。 任何表达式。</param>
      <param name="vRight" vsli:raw="Required. Any expression.">必需。 任何表达式。</param>
      <returns vsli:raw="A string representing the concatenation of &lt;paramref name=&quot;vLeft&quot; /&gt; and &lt;paramref name=&quot;vRight&quot; /&gt;.">一个字符串，表示 <paramref name="vLeft" /> 和 <paramref name="vRight" /> 的串联。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.SubObj(System.Object,System.Object)">
      <summary vsli:raw="Performs a subtraction (-) operation.">执行减法 (-) 运算。</summary>
      <param name="o1" vsli:raw="Required. Any numeric expression.">必需。 任何数值表达式。</param>
      <param name="o2" vsli:raw="Required. Any numeric expression.">必需。 任何数值表达式。</param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;o1&quot; /&gt; and &lt;paramref name=&quot;o2&quot; /&gt;.">
        <paramref name="o1" /> 和 <paramref name="o2" /> 之间的差值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.XorObj(System.Object,System.Object)">
      <summary vsli:raw="Performs an &lt;see langword=&quot;Xor&quot; /&gt; comparison.">执行 <see langword="Xor" /> 比较。</summary>
      <param name="obj1" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">必需。 任何 <see langword="Boolean" /> 或数值表达式。</param>
      <param name="obj2" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">必需。 任何 <see langword="Boolean" /> 或数值表达式。</param>
      <returns vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; or numeric value. For a &lt;see langword=&quot;Boolean&quot; /&gt; comparison, the return value is the logical exclusion (exclusive logical disjunction) of two &lt;see langword=&quot;Boolean&quot; /&gt; values. For bitwise (numeric) operations, the return value is a numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns. For more information, see Xor Operator.">一个 <see langword="Boolean" /> 值或数值。 对于 <see langword="Boolean" /> 比较，返回值是两个 <see langword="Boolean" /> 值的逻辑异运算（互斥逻辑析取）的结果。 对于按位（数值）运算，返回值是表示两个数值位模式的按位异运算（互斥按位析取）结果的数值。 有关详细信息，请参阅 Xor 运算符。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Operators">
      <summary vsli:raw="Provides late-bound math operators, such as &lt;see cref=&quot;M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)&quot; /&gt; and &lt;see cref=&quot;M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)&quot; /&gt;, which the Visual Basic compiler uses internally.">提供后期绑定的数学运算符，例如 Visual Basic 编译器在内部使用的 <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" /> 和 <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic addition (+) operator.">表示 Visual Basic 加法 (+) 运算符。</summary>
      <param name="Left" vsli:raw="Required. Any numeric expression.">必需。 任何数值表达式。</param>
      <param name="Right" vsli:raw="Required. Any numeric expression.">必需。 任何数值表达式。</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt;.">
        <paramref name="Left" /> 与 <paramref name="Right" /> 的和。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.AndObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic &lt;see langword=&quot;And&quot; /&gt; operator.">表示 Visual Basic <see langword="And" /> 运算符。</summary>
      <param name="Left" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">必需。 任何 <see langword="Boolean" /> 或数值表达式。</param>
      <param name="Right" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">必需。 任何 <see langword="Boolean" /> 或数值表达式。</param>
      <returns vsli:raw="For &lt;see langword=&quot;Boolean&quot; /&gt; operations, &lt;see langword=&quot;True&quot; /&gt; if both &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt; evaluate to &lt;see langword=&quot;True&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;. For bitwise operations, 1 if both &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt; evaluate to 1; otherwise, 0.">对于 <see langword="Boolean" /> 运算，如果 <paramref name="Left" /> 和 <paramref name="Right" /> 的计算结果都是 <see langword="True" />，则为 <see langword="True" />；否则为 <see langword="False" />。 对于按位运算，如果 <paramref name="Left" /> 和 <paramref name="Right" /> 的计算结果都是 1，则为 1；否则为 0。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the Visual Basic equal (=) operator.">表示 Visual Basic 相等 (=) 运算符。</summary>
      <param name="Left" vsli:raw="Required. Any expression.">必需。 任何表达式。</param>
      <param name="Right" vsli:raw="Required. Any expression.">必需。 任何表达式。</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">必需。 如果执行不区分大小写的字符串比较，则为 <see langword="True" />；否则为 <see langword="False" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">如果 <paramref name="Left" /> 和 <paramref name="Right" /> 相等，则为 <see langword="True" />；否则为 <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the Visual Basic greater-than (&amp;gt;) operator.">表示 Visual Basic 大于 (&gt;) 运算符。</summary>
      <param name="Left" vsli:raw="Required. Any expression.">必需。 任何表达式。</param>
      <param name="Right" vsli:raw="Required. Any expression.">必需。 任何表达式。</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">必需。 如果执行不区分大小写的字符串比较，则为 <see langword="True" />；否则为 <see langword="False" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;Left&quot; /&gt; is greater than &lt;paramref name=&quot;Right&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">如果 <see langword="True" /> 大于 <paramref name="Left" />，则为 <paramref name="Right" />；否则为 <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the Visual Basic greater-than or equal-to (&amp;gt;=) operator.">表示 Visual Basic 大于或等于 (&gt;=) 运算符。</summary>
      <param name="Left" vsli:raw="Required. Any expression.">必需。 任何表达式。</param>
      <param name="Right" vsli:raw="Required. Any expression.">必需。 任何表达式。</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">必需。 如果执行不区分大小写的字符串比较，则为 <see langword="True" />；否则为 <see langword="False" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;Left&quot; /&gt; is greater than or equal to &lt;paramref name=&quot;Right&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">如果 <paramref name="Left" /> 大于等于 <paramref name="Right" />，则为 <see langword="True" />；否则为 <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the Visual Basic less-than (&amp;lt;) operator.">表示 Visual Basic 小于 (&lt;) 运算符。</summary>
      <param name="Left" vsli:raw="Required. Any expression.">必需。 任何表达式。</param>
      <param name="Right" vsli:raw="Required. Any expression.">必需。 任何表达式。</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">必需。 如果执行不区分大小写的字符串比较，则为 <see langword="True" />；否则为 <see langword="False" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;Left&quot; /&gt; is less than &lt;paramref name=&quot;Right&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">如果 <paramref name="Left" /> 小于 <paramref name="Right" />，则为 <see langword="True" />；否则为 <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the Visual Basic less-than or equal-to (&amp;lt;=) operator.">表示 Visual Basic 小于或等于 (&lt;=) 运算符。</summary>
      <param name="Left" vsli:raw="Required. Any expression.">必需。 任何表达式。</param>
      <param name="Right" vsli:raw="Required. Any expression.">必需。 任何表达式。</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">必需。 如果执行不区分大小写的字符串比较，则为 <see langword="True" />；否则为 <see langword="False" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;Left&quot; /&gt; is less than or equal to &lt;paramref name=&quot;Right&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">如果 <paramref name="Left" /> 小于等于 <paramref name="Right" />，则为 <see langword="True" />；否则为 <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the Visual Basic not-equal (&amp;lt;&amp;gt;) operator.">表示 Visual Basic 不等于 (&lt;&gt;) 运算符。</summary>
      <param name="Left" vsli:raw="Required. Any expression.">必需。 任何表达式。</param>
      <param name="Right" vsli:raw="Required. Any expression.">必需。 任何表达式。</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">必需。 如果执行不区分大小写的字符串比较，则为 <see langword="True" />；否则为 <see langword="False" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;Left&quot; /&gt; is not equal to &lt;paramref name=&quot;Right&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">如果 <see langword="True" /> 不等于 <paramref name="Left" />，则为 <paramref name="Right" />；否则为 <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Performs binary or text string comparison when given two strings.">对给定的两个字符串执行二进制字符串或文本字符串比较。</summary>
      <param name="Left" vsli:raw="Required. Any &lt;see langword=&quot;String&quot; /&gt; expression.">必需。 任何 <see langword="String" /> 表达式。</param>
      <param name="Right" vsli:raw="Required. Any &lt;see langword=&quot;String&quot; /&gt; expression.">必需。 任何 <see langword="String" /> 表达式。</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">必需。 如果执行不区分大小写的字符串比较，则为 <see langword="True" />；否则为 <see langword="False" />。</param>
      <returns vsli:raw="&lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; -1&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;Left&quot; /&gt; is less than &lt;paramref name=&quot;Right&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 0&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;Left&quot; /&gt; is equal to &lt;paramref name=&quot;Right&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 1&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;Left&quot; /&gt; is greater than &lt;paramref name=&quot;Right&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">值 
  条件 
  -1 
 
                <paramref name="Left" /> 小于 <paramref name="Right" />。  

  0 
 
                <paramref name="Left" /> 等于 <paramref name="Right" />。  

  1 
 
                <paramref name="Left" /> 大于 <paramref name="Right" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic concatenation (&amp;amp;) operator.">表示 Visual Basic 串联 (&amp;) 运算符。</summary>
      <param name="Left" vsli:raw="Required. Any expression.">必需。 任何表达式。</param>
      <param name="Right" vsli:raw="Required. Any expression.">必需。 任何表达式。</param>
      <returns vsli:raw="A string representing the concatenation of &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt;.">一个字符串，表示 <paramref name="Left" /> 和 <paramref name="Right" /> 的串联。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the overloaded Visual Basic equals (=) operator.">表示重载的 Visual Basic 相等 (=) 运算符。</summary>
      <param name="Left" vsli:raw="Required. Any expression.">必需。 任何表达式。</param>
      <param name="Right" vsli:raw="Required. Any expression.">必需。 任何表达式。</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">必需。 如果执行不区分大小写的字符串比较，则为 <see langword="True" />；否则为 <see langword="False" />。</param>
      <returns vsli:raw="The result of the overloaded equals operator. &lt;see langword=&quot;False&quot; /&gt; if operator overloading is not supported.">重载的“等于”运算符的结果。 如果不支持运算符重载，则为 <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the overloaded Visual Basic greater-than (&amp;gt;) operator.">表示重载的 Visual Basic 大于 (&gt;) 运算符。</summary>
      <param name="Left" vsli:raw="Required. Any expression.">必需。 任何表达式。</param>
      <param name="Right" vsli:raw="Required. Any expression.">必需。 任何表达式。</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">必需。 如果执行不区分大小写的字符串比较，则为 <see langword="True" />；否则为 <see langword="False" />。</param>
      <returns vsli:raw="The result of the overloaded greater-than operator. &lt;see langword=&quot;False&quot; /&gt; if operator overloading is not supported.">重载的“大于”运算符的结果。 如果不支持运算符重载，则为 <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the overloaded Visual Basic greater-than or equal-to (&amp;gt;=) operator.">表示重载的 Visual Basic 大于或等于 (&gt;=) 运算符。</summary>
      <param name="Left" vsli:raw="Required. Any expression.">必需。 任何表达式。</param>
      <param name="Right" vsli:raw="Required. Any expression.">必需。 任何表达式。</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">必需。 如果执行不区分大小写的字符串比较，则为 <see langword="True" />；否则为 <see langword="False" />。</param>
      <returns vsli:raw="The result of the overloaded greater-than or equal-to operator. &lt;see langword=&quot;False&quot; /&gt; if operator overloading is not supported.">重载的“大于或等于”运算符的结果。 如果不支持运算符重载，则为 <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the overloaded Visual Basic less-than (&amp;lt;) operator.">表示重载的 Visual Basic 小于 (&lt;) 运算符。</summary>
      <param name="Left" vsli:raw="Required. Any expression.">必需。 任何表达式。</param>
      <param name="Right" vsli:raw="Required. Any expression.">必需。 任何表达式。</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">必需。 如果执行不区分大小写的字符串比较，则为 <see langword="True" />；否则为 <see langword="False" />。</param>
      <returns vsli:raw="The result of the overloaded less-than operator. &lt;see langword=&quot;False&quot; /&gt; if operator overloading is not supported.">重载的“小于”运算符的结果。 如果不支持运算符重载，则为 <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the overloaded Visual Basic less-than or equal-to (&amp;lt;=) operator.">表示重载的 Visual Basic 小于或等于 (&lt;=) 运算符。</summary>
      <param name="Left" vsli:raw="Required. Any expression.">必需。 任何表达式。</param>
      <param name="Right" vsli:raw="Required. Any expression.">必需。 任何表达式。</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">必需。 如果执行不区分大小写的字符串比较，则为 <see langword="True" />；否则为 <see langword="False" />。</param>
      <returns vsli:raw="The result of the overloaded less-than or equal-to operator. &lt;see langword=&quot;False&quot; /&gt; if operator overloading is not supported.">重载的“小于或等于”运算符的结果。 如果不支持运算符重载，则为 <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the overloaded Visual Basic not-equal (&amp;lt;&amp;gt;) operator.">表示重载的 Visual Basic 不等于 (&lt;&gt;) 运算符。</summary>
      <param name="Left" vsli:raw="Required. Any expression.">必需。 任何表达式。</param>
      <param name="Right" vsli:raw="Required. Any expression.">必需。 任何表达式。</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">必需。 如果执行不区分大小写的字符串比较，则为 <see langword="True" />；否则为 <see langword="False" />。</param>
      <returns vsli:raw="The result of the overloaded not-equal operator. &lt;see langword=&quot;False&quot; /&gt; if operator overloading is not supported.">重载的“不等于”运算符的结果。 如果不支持运算符重载，则为 <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.DivideObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic division (/) operator.">表示 Visual Basic 除法 (/) 运算符。</summary>
      <param name="Left" vsli:raw="Required. Any numeric expression.">必需。 任何数值表达式。</param>
      <param name="Right" vsli:raw="Required. Any numeric expression.">必需。 任何数值表达式。</param>
      <returns vsli:raw="The full quotient of &lt;paramref name=&quot;Left&quot; /&gt; divided by &lt;paramref name=&quot;Right&quot; /&gt;, including any remainder.">
        <paramref name="Left" /> 除以 <paramref name="Right" /> 的完整商，包括任何余数。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic exponent (^) operator.">表示 Visual Basic 指数 (^) 运算符。</summary>
      <param name="Left" vsli:raw="Required. Any numeric expression.">必需。 任何数值表达式。</param>
      <param name="Right" vsli:raw="Required. Any numeric expression.">必需。 任何数值表达式。</param>
      <returns vsli:raw="The result of &lt;paramref name=&quot;Left&quot; /&gt; raised to the power of &lt;paramref name=&quot;Right&quot; /&gt;.">
        <paramref name="Left" /> 的 <paramref name="Right" /> 次幂的计算结果。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator(System.Object,System.Object[])">
      <summary vsli:raw="Executes a late-bound evaluation of a user-defined operator. This helper method is not meant to be called directly from your code.">执行用户定义的运算符的后期绑定计算。 此帮助器方法不宜从您的代码直接调用。</summary>
      <param name="vbOp" vsli:raw="The user-defined operator.">用户定义的运算符。</param>
      <param name="Arguments">要传递给用户定义的运算符的参数值。</param>
      <returns vsli:raw="The result returned from the user-defined operator.">从用户定义的运算符返回的结果。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic integer division (\) operator.">表示 Visual Basic 整除 (\) 运算符。</summary>
      <param name="Left" vsli:raw="Required. Any numeric expression.">必需。 任何数值表达式。</param>
      <param name="Right" vsli:raw="Required. Any numeric expression.">必需。 任何数值表达式。</param>
      <returns vsli:raw="The integer quotient of &lt;paramref name=&quot;Left&quot; /&gt; divided by &lt;paramref name=&quot;Right&quot; /&gt;, which discards any remainder and retains only the integer portion.">
        <paramref name="Left" /> 除以 <paramref name="Right" /> 的整数商，它丢弃了所有余数，而只保留整数部分。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic arithmetic left shift (&amp;lt;&amp;lt;) operator.">表示 Visual Basic 算术左移位 (&lt;&lt;) 运算符。</summary>
      <param name="Operand" vsli:raw="Required. Integral numeric expression. The bit pattern to be shifted. The data type must be an integral type (&lt;see langword=&quot;SByte&quot; /&gt;, &lt;see langword=&quot;Byte&quot; /&gt;, &lt;see langword=&quot;Short&quot; /&gt;, &lt;see langword=&quot;UShort&quot; /&gt;, &lt;see langword=&quot;Integer&quot; /&gt;, &lt;see langword=&quot;UInteger&quot; /&gt;, &lt;see langword=&quot;Long&quot; /&gt;, or &lt;see langword=&quot;ULong&quot; /&gt;).">必需。 整型数值表达式。 要进行移位的位模式。 数据类型必须为整型（<see langword="SByte" />、<see langword="Byte" />、<see langword="Short" />、<see langword="UShort" />、<see langword="Integer" />、<see langword="UInteger" />、<see langword="Long" /> 或 <see langword="ULong" />）。</param>
      <param name="Amount" vsli:raw="Required. Numeric expression. The number of bits to shift the bit pattern. The data type must be &lt;see langword=&quot;Integer&quot; /&gt; or widen to &lt;see langword=&quot;Integer&quot; /&gt;.">必需。 数值表达式。 要将该位模式移位的位数。 数据类型必须为 <see langword="Integer" /> 或扩展到 <see langword="Integer" />。</param>
      <returns vsli:raw="An integral numeric value. The result of shifting the bit pattern. The data type is the same as that of &lt;paramref name=&quot;Operand&quot; /&gt;.">一个整型数值， 对该位模式进行移位的结果。 数据类型与 <paramref name="Operand" /> 的数据类型相同。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ModObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic &lt;see langword=&quot;Mod&quot; /&gt; operator.">表示 Visual Basic <see langword="Mod" /> 运算符。</summary>
      <param name="Left" vsli:raw="Required. Any numeric expression.">必需。 任何数值表达式。</param>
      <param name="Right" vsli:raw="Required. Any numeric expression.">必需。 任何数值表达式。</param>
      <returns vsli:raw="The remainder after &lt;paramref name=&quot;Left&quot; /&gt; is divided by &lt;paramref name=&quot;Right&quot; /&gt;.">
        <paramref name="Left" /> 除以 <paramref name="Right" /> 后所得的余数。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic multiply (*) operator.">表示 Visual Basic 乘法 (*) 运算符。</summary>
      <param name="Left" vsli:raw="Required. Any numeric expression.">必需。 任何数值表达式。</param>
      <param name="Right" vsli:raw="Required. Any numeric expression.">必需。 任何数值表达式。</param>
      <returns vsli:raw="The product of &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt;.">
        <paramref name="Left" /> 与 <paramref name="Right" /> 的乘积。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.NegateObject(System.Object)">
      <summary vsli:raw="Represents the Visual Basic unary minus (-) operator.">表示 Visual Basic 一元负 (-) 运算符。</summary>
      <param name="Operand" vsli:raw="Required. Any numeric expression.">必需。 任何数值表达式。</param>
      <returns vsli:raw="The negative value of &lt;paramref name=&quot;Operand&quot; /&gt;.">
        <paramref name="Operand" /> 的负值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.NotObject(System.Object)">
      <summary vsli:raw="Represents the Visual Basic &lt;see langword=&quot;Not&quot; /&gt; operator.">表示 Visual Basic <see langword="Not" /> 运算符。</summary>
      <param name="Operand" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">必需。 任何 <see langword="Boolean" /> 或数值表达式。</param>
      <returns vsli:raw="For &lt;see langword=&quot;Boolean&quot; /&gt; operations, &lt;see langword=&quot;False&quot; /&gt; if &lt;paramref name=&quot;Operand&quot; /&gt; is &lt;see langword=&quot;True&quot; /&gt;; otherwise, &lt;see langword=&quot;True&quot; /&gt;. For bitwise operations, 1 if &lt;paramref name=&quot;Operand&quot; /&gt; is 0; otherwise, 0.">对于 <see langword="Boolean" /> 运算，如果 <paramref name="Operand" /> 为 <see langword="False" />，则为 <see langword="True" />；否则为 <see langword="True" />。 对于按位运算，如果 <paramref name="Operand" /> 为 0，则为 1；否则为 0。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.OrObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic &lt;see langword=&quot;Or&quot; /&gt; operator.">表示 Visual Basic <see langword="Or" /> 运算符。</summary>
      <param name="Left" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">必需。 任何 <see langword="Boolean" /> 或数值表达式。</param>
      <param name="Right" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">必需。 任何 <see langword="Boolean" /> 或数值表达式。</param>
      <returns vsli:raw="For &lt;see langword=&quot;Boolean&quot; /&gt; operations, &lt;see langword=&quot;False&quot; /&gt; if both &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt; evaluate to &lt;see langword=&quot;False&quot; /&gt;; otherwise, &lt;see langword=&quot;True&quot; /&gt;. For bitwise operations, 0 if both &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt; evaluate to 0; otherwise, 1.">对于 <see langword="Boolean" /> 运算，如果 <paramref name="Left" /> 和 <paramref name="Right" /> 的计算结果都是 <see langword="False" />，则为 <see langword="False" />；否则为 <see langword="True" />。 对于按位运算，如果 <paramref name="Left" /> 和 <paramref name="Right" /> 的计算结果都是 0，则为 0；否则为 1。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.PlusObject(System.Object)">
      <summary vsli:raw="Represents the Visual Basic unary plus (+) operator.">表示 Visual Basic 一元正 (+) 运算符。</summary>
      <param name="Operand" vsli:raw="Required. Any numeric expression.">必需。 任何数值表达式。</param>
      <returns vsli:raw="The value of &lt;paramref name=&quot;Operand&quot; /&gt;. (The sign of the &lt;paramref name=&quot;Operand&quot; /&gt; is unchanged.)">
        <paramref name="Operand" /> 的值。 （<paramref name="Operand" /> 的符号不变。）</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic arithmetic right shift (&amp;gt;&amp;gt;) operator.">表示 Visual Basic 算术右移位 (&gt;&gt;) 运算符。</summary>
      <param name="Operand" vsli:raw="Required. Integral numeric expression. The bit pattern to be shifted. The data type must be an integral type (&lt;see langword=&quot;SByte&quot; /&gt;, &lt;see langword=&quot;Byte&quot; /&gt;, &lt;see langword=&quot;Short&quot; /&gt;, &lt;see langword=&quot;UShort&quot; /&gt;, &lt;see langword=&quot;Integer&quot; /&gt;, &lt;see langword=&quot;UInteger&quot; /&gt;, &lt;see langword=&quot;Long&quot; /&gt;, or &lt;see langword=&quot;ULong&quot; /&gt;).">必需。 整型数值表达式。 要进行移位的位模式。 数据类型必须为整型（<see langword="SByte" />、<see langword="Byte" />、<see langword="Short" />、<see langword="UShort" />、<see langword="Integer" />、<see langword="UInteger" />、<see langword="Long" /> 或 <see langword="ULong" />）。</param>
      <param name="Amount" vsli:raw="Required. Numeric expression. The number of bits to shift the bit pattern. The data type must be &lt;see langword=&quot;Integer&quot; /&gt; or widen to &lt;see langword=&quot;Integer&quot; /&gt;.">必需。 数值表达式。 要将该位模式移位的位数。 数据类型必须为 <see langword="Integer" /> 或扩展到 <see langword="Integer" />。</param>
      <returns vsli:raw="An integral numeric value. The result of shifting the bit pattern. The data type is the same as that of &lt;paramref name=&quot;Operand&quot; /&gt;.">一个整型数值， 对该位模式进行移位的结果。 数据类型与 <paramref name="Operand" /> 的数据类型相同。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic subtraction (-) operator.">表示 Visual Basic 减法 (-) 运算符。</summary>
      <param name="Left" vsli:raw="Required. Any numeric expression.">必需。 任何数值表达式。</param>
      <param name="Right" vsli:raw="Required. Any numeric expression.">必需。 任何数值表达式。</param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt;.">
        <paramref name="Left" /> 和 <paramref name="Right" /> 之间的差值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.XorObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic &lt;see langword=&quot;Xor&quot; /&gt; operator.">表示 Visual Basic <see langword="Xor" /> 运算符。</summary>
      <param name="Left" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">必需。 任何 <see langword="Boolean" /> 或数值表达式。</param>
      <param name="Right" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">必需。 任何 <see langword="Boolean" /> 或数值表达式。</param>
      <returns vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; or numeric value. For a &lt;see langword=&quot;Boolean&quot; /&gt; comparison, the return value is the logical exclusion (exclusive logical disjunction) of two &lt;see langword=&quot;Boolean&quot; /&gt; values. For bitwise (numeric) operations, the return value is a numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns. For more information, see Xor Operator.">一个 <see langword="Boolean" /> 值或数值。 对于 <see langword="Boolean" /> 比较，返回值是两个 <see langword="Boolean" /> 值的逻辑异运算（互斥逻辑析取）的结果。 对于按位（数值）运算，返回值是表示两个数值位模式的按位异运算（互斥按位析取）结果的数值。 有关详细信息，请参阅 Xor 运算符。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.OptionCompareAttribute">
      <summary vsli:raw="Specifies that the current &lt;see langword=&quot;Option Compare&quot; /&gt; setting should be passed as the default value for an argument.">指定应该将当前的 <see langword="Option Compare" /> 设置作为参数的默认值传递。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.OptionCompareAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.CompilerServices.OptionCompareAttribute&quot; /&gt; class.">初始化 <see cref="T:Microsoft.VisualBasic.CompilerServices.OptionCompareAttribute" /> 类的新实例。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.OptionTextAttribute">
      <summary vsli:raw="The Visual Basic compiler emits this helper class to indicate (for Visual Basic debugging) which comparison option, binary or text, is being used.">Visual Basic 编译器发出此帮助器类来指示（用于 Visual Basic 调试）要使用二进制比较选项还是文本比较选项。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.OptionTextAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.CompilerServices.OptionTextAttribute&quot; /&gt; class. This is a helper method.">初始化 <see cref="T:Microsoft.VisualBasic.CompilerServices.OptionTextAttribute" /> 类的新实例。 这是一个帮助器方法。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ProjectData">
      <summary vsli:raw="Provides helpers for the Visual Basic &lt;see langword=&quot;Err&quot; /&gt; object.">为 Visual Basic <see langword="Err" /> 对象提供帮助器。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.ClearProjectError">
      <summary vsli:raw="Performs the work for the &lt;see langword=&quot;Clear&quot; /&gt; method of the &lt;see langword=&quot;Err&quot; /&gt; object. A helper method.">执行 <see langword="Clear" /> 对象的 <see langword="Err" /> 方法的操作。 即帮助器方法。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.CreateProjectError(System.Int32)">
      <summary vsli:raw="Performs the work for the &lt;see langword=&quot;Raise&quot; /&gt; method of the &lt;see langword=&quot;Err&quot; /&gt; object. A helper method.">执行 <see langword="Raise" /> 对象的 <see langword="Err" /> 方法的操作。 即帮助器方法。</summary>
      <param name="hr" vsli:raw="An integer value that identifies the nature of the error. Visual Basic errors are in the range 0-65535; the range 0-512 is reserved for system errors; the range 513-65535 is available for user-defined errors.">标识错误本质的整数值。 Visual Basic 错误处于 0 到 65535 的范围内：范围 0 到 512 保留用于系统错误，范围 513 到 65535 则用于用户定义的错误。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Exception&quot; /&gt; object.">
        <see cref="T:System.Exception" /> 对象。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.EndApp">
      <summary vsli:raw="Closes all files for the calling assembly and stops the process.">关闭用于调用程序集的所有文件并停止该进程。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.SetProjectError(System.Exception)">
      <summary vsli:raw="The Visual Basic compiler uses this helper method to capture exceptions in the &lt;see langword=&quot;Err&quot; /&gt; object.">Visual Basic 编译器使用此帮助器方法在 <see langword="Err" /> 对象中捕获异常。</summary>
      <param name="ex" vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; object to be caught.">要捕获的 <see cref="T:System.Exception" /> 对象。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.SetProjectError(System.Exception,System.Int32)">
      <summary vsli:raw="The Visual Basic compiler uses this helper method to capture exceptions in the &lt;see langword=&quot;Err&quot; /&gt; object.">Visual Basic 编译器使用此帮助器方法在 <see langword="Err" /> 对象中捕获异常。</summary>
      <param name="ex" vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; object to be caught.">要捕获的 <see cref="T:System.Exception" /> 对象。</param>
      <param name="lErl" vsli:raw="The line number of the exception.">异常的行号。</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ShortType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">从 Visual Basic 2005 开始，此类已被否决。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ShortType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Short&quot; /&gt; value that corresponds to the specified object.">返回一个对应于指定对象的 <see langword="Short" /> 值。</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;Short&quot; /&gt; value.">必需。 要转换为 <see langword="Short" /> 值的对象。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Short&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">与 <paramref name="Value" /> 对应的 <see langword="Short" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ShortType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Short&quot; /&gt; value that corresponds to the specified string.">返回与指定的字符串相对应的 <see langword="Short" /> 值。</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Short&quot; /&gt; value.">必需。 要转换为 <see langword="Short" /> 值的字符串。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Short&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">与 <paramref name="Value" /> 对应的 <see langword="Short" /> 值。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.SingleType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">从 Visual Basic 2005 开始，此类已被否决。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Single&quot; /&gt; value that corresponds to the specified object.">返回一个对应于指定对象的 <see langword="Single" /> 值。</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">必需。 要转换为 <see langword="Single" /> 值的对象。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Single&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">与 <paramref name="Value" /> 对应的 <see langword="Single" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromObject(System.Object,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Single&quot; /&gt; value that corresponds to the specified object.">返回一个对应于指定对象的 <see langword="Single" /> 值。</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">必需。 要转换为 <see langword="Single" /> 值的对象。</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">根据区域性定义如何设置数值格式以及如何显示数值的 <see cref="T:System.Globalization.NumberFormatInfo" /> 对象。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Single&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">与 <paramref name="Value" /> 对应的 <see langword="Single" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Single&quot; /&gt; value that corresponds to the specified string.">返回与指定的字符串相对应的 <see langword="Single" /> 值。</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">必需。 要转换为 <see langword="Single" /> 值的字符串。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Single&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">与 <paramref name="Value" /> 对应的 <see langword="Single" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromString(System.String,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Single&quot; /&gt; value that corresponds to the specified string and number format information.">返回与指定的字符串和数字格式信息相对应的 <see langword="Single" /> 值。</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">必需。 要转换为 <see langword="Single" /> 值的字符串。</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">根据区域性定义如何设置数值格式以及如何显示数值的 <see cref="T:System.Globalization.NumberFormatInfo" /> 对象。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Single&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">与 <paramref name="Value" /> 对应的 <see langword="Single" /> 值。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute">
      <summary vsli:raw="This class provides attributes that are applied to the standard module construct when it is emitted to Intermediate Language (IL). It is not intended to be called directly from your code.">此类提供了发送到中间语言 (IL) 时应用于标准模块构造的属性。 它不应直接在您的代码中调用。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute&quot; /&gt; class.">初始化 <see cref="T:Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute" /> 类的新实例。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag">
      <summary vsli:raw="The Visual Basic compiler uses this class internally when initializing static local members; it is not meant to be called directly from your code.">Visual Basic 编译器在初始化静态本地成员时内部使用此类；这并不意味着要从您的代码中直接调用它。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag&quot; /&gt; class.">初始化 <see cref="T:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag" /> 类的新实例。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag.State">
      <summary vsli:raw="Returns the state of the static local member's initialization flag (initialized or not).">返回静态本地成员的初始化标记（是否已初始化）的状态。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.StringType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">从 Visual Basic 2005 开始，此类已被否决。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromBoolean(System.Boolean)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to the specified &lt;see langword=&quot;Boolean&quot; /&gt;.">返回与指定的 <see langword="String" /> 相对应的 <see langword="Boolean" /> 值。</summary>
      <param name="Value" vsli:raw="Required. &lt;see langword=&quot;Boolean&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">必需。 要转换为 <see langword="Boolean" /> 值的 <see langword="String" />。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">与 <paramref name="Value" /> 对应的 <see langword="String" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromByte(System.Byte)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to the specified &lt;see langword=&quot;Byte&quot; /&gt;.">返回与指定的 <see langword="String" /> 相对应的 <see langword="Byte" /> 值。</summary>
      <param name="Value" vsli:raw="Required. &lt;see langword=&quot;Byte&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">必需。 要转换为 <see langword="Byte" /> 值的 <see langword="String" />。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">与 <paramref name="Value" /> 对应的 <see langword="String" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromChar(System.Char)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to the specified &lt;see langword=&quot;Char&quot; /&gt;.">返回与指定的 <see langword="String" /> 相对应的 <see langword="Char" /> 值。</summary>
      <param name="Value" vsli:raw="Required. &lt;see langword=&quot;Char&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">必需。 要转换为 <see langword="Char" /> 值的 <see langword="String" />。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">与 <paramref name="Value" /> 对应的 <see langword="String" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDate(System.DateTime)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to the specified date.">返回与指定的日期相对应的 <see langword="String" /> 值。</summary>
      <param name="Value" vsli:raw="Required. Date to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">必需。 要转换为 <see langword="String" /> 值的日期。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">与 <paramref name="Value" /> 对应的 <see langword="String" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to the specified &lt;see langword=&quot;Decimal&quot; /&gt;.">返回与指定的 <see langword="String" /> 相对应的 <see langword="Decimal" /> 值。</summary>
      <param name="Value" vsli:raw="Required. &lt;see langword=&quot;Decimal&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">必需。 要转换为 <see langword="Decimal" /> 值的 <see langword="String" />。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">与 <paramref name="Value" /> 对应的 <see langword="String" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to a specified &lt;see langword=&quot;Decimal&quot; /&gt; and number format information.">返回与指定的 <see langword="String" /> 和数字格式信息相对应的 <see langword="Decimal" /> 值。</summary>
      <param name="Value" vsli:raw="Required. &lt;see langword=&quot;Decimal&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">必需。 要转换为 <see langword="Decimal" /> 值的 <see langword="String" />。</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">根据区域性定义如何设置数值格式以及如何显示数值的 <see cref="T:System.Globalization.NumberFormatInfo" /> 对象。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">与 <paramref name="Value" /> 对应的 <see langword="String" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double)">
      <summary vsli:raw="Returns a string value that corresponds to a specified &lt;see cref=&quot;T:System.Double&quot; /&gt;.">返回与指定的 <see langword="String" /> 相对应的 <see langword="Double" /> 值。</summary>
      <param name="Value" vsli:raw="Required. &lt;see cref=&quot;T:System.Double&quot; /&gt; to convert to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">必需。 要转换为 <see langword="Double" /> 值的 <see langword="String" />。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">与 <paramref name="Value" /> 对应的 <see langword="String" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a string that corresponds to a specified &lt;see cref=&quot;T:System.Double&quot; /&gt; and number format information.">返回与指定的 <see langword="String" /> 和数字格式信息相对应的 <see langword="Double" /> 值。</summary>
      <param name="Value" vsli:raw="Required. &lt;see cref=&quot;T:System.Double&quot; /&gt; to convert to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">必需。 要转换为 <see langword="Double" /> 值的 <see langword="String" />。</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">根据区域性定义如何设置数值格式以及如何显示数值的 <see cref="T:System.Globalization.NumberFormatInfo" /> 对象。</param>
      <returns vsli:raw="The string representation of &lt;paramref name=&quot;Value&quot; /&gt;.">与 <paramref name="Value" /> 对应的 <see langword="String" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromInteger(System.Int32)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to a specified &lt;see langword=&quot;Integer&quot; /&gt;.">返回与指定的 <see langword="String" /> 相对应的 <see langword="Integer" /> 值。</summary>
      <param name="Value" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">必需。 要转换为 <see langword="Integer" /> 值的 <see langword="String" />。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">与 <paramref name="Value" /> 对应的 <see langword="String" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromLong(System.Int64)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to a specified &lt;see cref=&quot;T:System.Int64&quot; /&gt; (64-bit integer).">返回与指定的 <see langword="String" />（64 位整数）相对应的 <see langword="Int64" /> 值。</summary>
      <param name="Value" vsli:raw="Required. &lt;see cref=&quot;T:System.Int64&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">必需。 要转换为 <see langword="Int64" /> 值的 <see langword="String" />。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">与 <paramref name="Value" /> 对应的 <see langword="String" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to the specified object.">返回一个对应于指定对象的 <see langword="String" /> 值。</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">必需。 要转换为 <see langword="String" /> 值的对象。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">与 <paramref name="Value" /> 对应的 <see langword="String" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromShort(System.Int16)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to a specified &lt;see cref=&quot;T:System.Int16&quot; /&gt; (16-bit integer).">返回与指定的 <see langword="Int16" />（16 位整数）相对应的 <see langword="String" /> 值。</summary>
      <param name="Value" vsli:raw="Required. &lt;see langword=&quot;Int616&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">必需。 要转换为 <see langword="Int616" /> 值的 <see langword="String" />。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">与 <paramref name="Value" /> 对应的 <see langword="String" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single)">
      <summary vsli:raw="Returns a string value that corresponds to a specified &lt;see cref=&quot;T:System.Single&quot; /&gt;.">返回与指定的 <see langword="String" /> 相对应的 <see langword="Single" /> 值。</summary>
      <param name="Value" vsli:raw="Required. &lt;see cref=&quot;T:System.Single&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">必需。 要转换为 <see langword="Single" /> 值的 <see langword="String" />。</param>
      <returns vsli:raw="The string value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">与 <paramref name="Value" /> 对应的 <see langword="String" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a string value that corresponds to a specified &lt;see cref=&quot;T:System.Single&quot; /&gt; and number format information.">返回与指定的 <see langword="String" /> 和数字格式信息相对应的 <see langword="Single" /> 值。</summary>
      <param name="Value" vsli:raw="Required. &lt;see cref=&quot;T:System.Single&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">必需。 要转换为 <see langword="Single" /> 值的 <see langword="String" />。</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">根据区域性定义如何设置数值格式以及如何显示数值的 <see cref="T:System.Globalization.NumberFormatInfo" /> 对象。</param>
      <returns vsli:raw="The string value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">与 <paramref name="Value" /> 对应的 <see langword="String" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.MidStmtStr(System.String@,System.Int32,System.Int32,System.String)">
      <summary vsli:raw="Overwrites the &lt;paramref name=&quot;sDest&quot; /&gt; parameter with the contents of the &lt;paramref name=&quot;sInsert&quot; /&gt; parameter.">使用 <paramref name="sDest" /> 参数的内容覆盖 <paramref name="sInsert" /> 参数。</summary>
      <param name="sDest" vsli:raw="Required. String variable to modify.">必需。 要修改的字符串变量。</param>
      <param name="StartPosition" vsli:raw="Required. Location in the &lt;paramref name=&quot;sDest&quot; /&gt; parameter to begin overwriting from. The index is 1-based.">必需。 要在 <paramref name="sDest" /> 参数中进行覆盖的起始位置。 索引从 1 开始。</param>
      <param name="MaxInsertLength" vsli:raw="Required. Maximum number of characters from the &lt;paramref name=&quot;sInsert&quot; /&gt; parameter to use, starting from the first character.">必需。 要从 <paramref name="sInsert" /> 参数中使用的最大字符数（从第一个字符开始算起）。</param>
      <param name="sInsert" vsli:raw="Required. String value to overwrite the &lt;paramref name=&quot;sDest&quot; /&gt; parameter with.">必需。 用于覆盖 <paramref name="sDest" /> 参数的字符串值。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrCmp(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Compares two strings.">比较两个字符串。</summary>
      <param name="sLeft" vsli:raw="Required. String to compare with &lt;paramref name=&quot;sRight&quot; /&gt;.">必需。 要与 <paramref name="sRight" /> 进行比较的字符串。</param>
      <param name="sRight" vsli:raw="Required. String to compare with &lt;paramref name=&quot;sLeft&quot; /&gt;.">必需。 要与 <paramref name="sLeft" /> 进行比较的字符串。</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive comparison; otherwise &lt;see langword=&quot;False&quot; /&gt;.">必需。 如果要执行不区分大小写的比较，则为 <see langword="True" />；否则为 <see langword="False" />。</param>
      <returns vsli:raw="&lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; zero&lt;/term&gt;&lt;description&gt; The two strings are equal.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; less than zero&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;sLeft&quot; /&gt; is less than &lt;paramref name=&quot;sRight&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; greater than zero&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;sLeft&quot; /&gt; is greater than &lt;paramref name=&quot;sRight&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">值 
  条件 
  零 
  这两个字符串相等。  

  小于零 
 
                <paramref name="sLeft" /> 小于 <paramref name="sRight" />。  

  大于零 
 
                <paramref name="sLeft" /> 大于 <paramref name="sRight" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLike(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Compares the parameters &lt;paramref name=&quot;Source&quot; /&gt; and &lt;paramref name=&quot;Pattern&quot; /&gt; and returns the same results as the &lt;see langword=&quot;Like&quot; /&gt; operator.">对参数 <paramref name="Source" /> 和 <paramref name="Pattern" /> 进行比较，并返回与 <see langword="Like" /> 运算符相同的结果。</summary>
      <param name="Source" vsli:raw="Required. Any &lt;see langword=&quot;String&quot; /&gt; expression.">必需。 任何 <see langword="String" /> 表达式。</param>
      <param name="Pattern" vsli:raw="Any &lt;see langword=&quot;String&quot; /&gt; expression conforming to the pattern-matching conventions described in Like Operator.">任何符合 Like 运算符中所述的模式匹配约定的 <see langword="String" /> 表达式。</param>
      <param name="CompareOption" vsli:raw="Specifies how to compare strings to patterns, according to the &lt;see cref=&quot;T:Microsoft.VisualBasic.CompareMethod&quot; /&gt;. Can be &lt;see langword=&quot;vbBinaryCompare&quot; /&gt; for binary comparison or &lt;see langword=&quot;vbTextCompare&quot; /&gt; for comparison based on a case-insensitive text sort order determined by your system's &lt;see langword=&quot;LocaleID&quot; /&gt; value.">根据 <see cref="T:Microsoft.VisualBasic.CompareMethod" /> 指定如何将字符串与模式进行比较。 对于二进制比较，可以是 <see langword="vbBinaryCompare" />；对于基于不区分大小写的文本排列顺序（由系统的 <see langword="vbTextCompare" /> 值确定）的比较，可以是 <see langword="LocaleID" />。</param>
      <returns vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether or not the string satisfies the pattern. If the value in string satisfies the pattern contained in pattern, result is &lt;see langword=&quot;True&quot; /&gt;. If the string does not satisfy the pattern, result is &lt;see langword=&quot;False&quot; /&gt;. If both string and pattern are empty strings, the result is &lt;see langword=&quot;True&quot; /&gt;.">一个 <see langword="Boolean" /> 值，指示字符串是否满足模式的要求。 如果字符串中的值满足模式中包含的模式的要求，则结果为 <see langword="True" />。 如果字符串不满足模式的要求，则结果为 <see langword="False" />。 如果字符串和模式都是空字符串，则结果为 <see langword="True" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeBinary(System.String,System.String)">
      <summary vsli:raw="Compares the parameters &lt;paramref name=&quot;Source&quot; /&gt; and &lt;paramref name=&quot;Pattern&quot; /&gt; and returns the same results as the &lt;see langword=&quot;Like&quot; /&gt; operator, using binary comparison.">使用二进制比较对参数 <paramref name="Source" /> 和 <paramref name="Pattern" /> 进行比较，并返回与 <see langword="Like" /> 运算符相同的结果。</summary>
      <param name="Source" vsli:raw="Required. Any &lt;see langword=&quot;String&quot; /&gt; expression.">必需。 任何 <see langword="String" /> 表达式。</param>
      <param name="Pattern" vsli:raw="Required. Any &lt;see langword=&quot;String&quot; /&gt; expression conforming to the pattern-matching conventions described in Like Operator.">必需。 任何符合 Like 运算符中所述的模式匹配约定的 <see langword="String" /> 表达式。</param>
      <returns vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether or not the string satisfies the pattern. If the value in string satisfies the pattern contained in pattern, result is &lt;see langword=&quot;True&quot; /&gt;. If the string does not satisfy the pattern, result is &lt;see langword=&quot;False&quot; /&gt;. If both string and pattern are empty strings, the result is &lt;see langword=&quot;True&quot; /&gt;.">一个 <see langword="Boolean" /> 值，指示字符串是否满足模式的要求。 如果字符串中的值满足模式中包含的模式的要求，则结果为 <see langword="True" />。 如果字符串不满足模式的要求，则结果为 <see langword="False" />。 如果字符串和模式都是空字符串，则结果为 <see langword="True" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeText(System.String,System.String)">
      <summary vsli:raw="Compares the parameters &lt;paramref name=&quot;Source&quot; /&gt; and &lt;paramref name=&quot;Pattern&quot; /&gt; and returns the same results as the &lt;see langword=&quot;Like&quot; /&gt; operator, using text comparison.">使用文本比较对参数 <paramref name="Source" /> 和 <paramref name="Pattern" /> 进行比较，并返回与 <see langword="Like" /> 运算符相同的结果。</summary>
      <param name="Source" vsli:raw="Required. Any &lt;see langword=&quot;String&quot; /&gt; expression.">必需。 任何 <see langword="String" /> 表达式。</param>
      <param name="Pattern" vsli:raw="Required. Any &lt;see langword=&quot;String&quot; /&gt; expression conforming to the pattern-matching conventions described in Like Operator.">必需。 任何符合 Like 运算符中所述的模式匹配约定的 <see langword="String" /> 表达式。</param>
      <returns vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether or not the string satisfies the pattern. If the value in string satisfies the pattern contained in pattern, result is &lt;see langword=&quot;True&quot; /&gt;. If the string does not satisfy the pattern, result is &lt;see langword=&quot;False&quot; /&gt;. If both string and pattern are empty strings, the result is &lt;see langword=&quot;True&quot; /&gt;.">一个 <see langword="Boolean" /> 值，指示字符串是否满足模式的要求。 如果字符串中的值满足模式中包含的模式的要求，则结果为 <see langword="True" />。 如果字符串不满足模式的要求，则结果为 <see langword="False" />。 如果字符串和模式都是空字符串，则结果为 <see langword="True" />。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Utils">
      <summary vsli:raw="Contains utilities that the Visual Basic compiler uses.">包含 Visual Basic 编译器使用的实用工具。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Utils.CopyArray(System.Array,System.Array)">
      <summary vsli:raw="Used by the Visual Basic compiler as a helper for &lt;see langword=&quot;Redim&quot; /&gt;.">由 Visual Basic 编译器用作 <see langword="Redim" /> 的帮助器。</summary>
      <param name="arySrc" vsli:raw="The array to be copied.">要复制的数组。</param>
      <param name="aryDest" vsli:raw="The destination array.">目标数组。</param>
      <returns vsli:raw="The copied array.">复制的数组。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Versioned">
      <summary vsli:raw="The &lt;see cref=&quot;T:Microsoft.VisualBasic.CompilerServices.Versioned&quot; /&gt; module contains procedures used to interact with objects, applications, and systems.">
        <see cref="T:Microsoft.VisualBasic.CompilerServices.Versioned" /> 模块包含用于与对象、应用程序和系统交互的过程。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
      <summary vsli:raw="Executes a method on an object, or sets or returns a property on an object.">执行对象的方法，或者设置或返回对象的属性。</summary>
      <param name="Instance" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt;. A pointer to the object exposing the property or method.">必需。 <see langword="Object" />。 一个指向公开属性或方法的对象的指针。</param>
      <param name="MethodName" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt;. A string expression containing the name of the property or method on the object.">必需。 <see langword="String" />。 一个字符串表达式，包含对象的属性或方法的名称。</param>
      <param name="UseCallType" vsli:raw="Required. An enumeration member of type &lt;see cref=&quot;T:Microsoft.VisualBasic.CallType&quot; /&gt; representing the type of procedure being called. The value of &lt;see langword=&quot;CallType&quot; /&gt; can be &lt;see langword=&quot;Method&quot; /&gt;, &lt;see langword=&quot;Get&quot; /&gt;, or &lt;see langword=&quot;Set&quot; /&gt;.">必需。 类型 <see cref="T:Microsoft.VisualBasic.CallType" /> 的一个枚举成员，它表示正在被调用的过程的类型。 <see langword="CallType" /> 的值可以是 <see langword="Method" />、<see langword="Get" /> 或 <see langword="Set" />。</param>
      <param name="Arguments" vsli:raw="Optional. &lt;see langword=&quot;ParamArray&quot; /&gt;. A parameter array containing the arguments to be passed to the property or method being called.">可选。 <see langword="ParamArray" />。 一个形参数组，包含要传递给正在调用的属性或方法的实参。</param>
      <returns vsli:raw="Executes a method on an object, or sets or returns a property on an object.">执行对象的方法，或者设置或返回对象的属性。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.IsNumeric(System.Object)">
      <summary vsli:raw="Returns a Boolean value indicating whether an expression can be evaluated as a number.">返回一个布尔值，指示是否可将表达式计算为数字。</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; expression.">必需。 <see langword="Object" /> 表达式。</param>
      <returns vsli:raw="Returns a Boolean value indicating whether an expression can be evaluated as a number.">返回一个布尔值，指示是否可将表达式计算为数字。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.SystemTypeName(System.String)">
      <summary vsli:raw="Returns a string value containing the system data type name of a variable.">返回一个字符串值，它包含变量的系统数据类型名称。</summary>
      <param name="VbName" vsli:raw="Required. A string variable containing a Visual Basic type name.">必需。 一个包含 Visual Basic 类型名称的字符串变量。</param>
      <returns vsli:raw="Returns a string value containing the system data type name of a variable.">返回一个字符串值，它包含变量的系统数据类型名称。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.TypeName(System.Object)">
      <summary vsli:raw="Returns a string value containing data type information about a variable.">返回一个字符串值，它包含有关变量的数据类型信息。</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; variable. If &lt;see langword=&quot;Option Strict&quot; /&gt; is &lt;see langword=&quot;Off&quot; /&gt;, you can pass a variable of any data type except a structure.">必需。 <see langword="Object" /> 变量。 如果 <see langword="Option Strict" /> 为 <see langword="Off" />，则可以传递除结构之外的任何数据类型的变量。</param>
      <returns vsli:raw="Returns a string value containing data type information about a variable.">返回一个字符串值，它包含有关变量的数据类型信息。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.VbTypeName(System.String)">
      <summary vsli:raw="Returns a string value containing the Visual Basic data type name of a variable.">返回一个字符串值，它包含变量的 Visual Basic 数据类型名称。</summary>
      <param name="SystemName" vsli:raw="Required. String variable containing a type name used by the common language runtime.">必需。 包含公共语言运行时使用的类型名称的字符串变量。</param>
      <returns vsli:raw="Returns a string value containing the Visual Basic data type name of a variable.">返回一个字符串值，它包含变量的 Visual Basic 数据类型名称。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Constants">
      <summary vsli:raw="The &lt;see langword=&quot;Constants&quot; /&gt; module contains miscellaneous constants. These constants can be used anywhere in your code.">
        <see langword="Constants" /> 模块包含杂项常数。 这些常量可以在代码中的任何地方使用。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbAbort">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Abort&quot; /&gt; button was clicked in a message box. Returned by the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">指示在某个消息框中单击了 <see langword="Abort" /> 按钮。 由 <see langword="MsgBox" /> 函数返回。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbAbortRetryIgnore">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Abort&quot; /&gt;, &lt;see langword=&quot;Retry&quot; /&gt;, and &lt;see langword=&quot;Ignore&quot; /&gt; buttons will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">指示在调用 <see langword="Abort" /> 函数时，将显示 <see langword="Retry" />、<see langword="Ignore" /> 和 <see langword="MsgBox" /> 按钮。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbApplicationModal">
      <summary vsli:raw="Indicates that the message box will be displayed as a modal dialog box when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">指示在调用 <see langword="MsgBox" /> 函数时，将消息框显示为模式对话框。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbArchive">
      <summary vsli:raw="Indicates that the file has changed since the last backup operation for file-access functions.">指示自最后一次针对文件访问函数执行备份操作以来该文件已发生更改。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbArray">
      <summary vsli:raw="Indicates that the type of a variant object is an array. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">指示变量对象的类型为数组。 由 <see langword="VarType" /> 函数返回。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbBack">
      <summary vsli:raw="Represents a backspace character for print and display functions.">表示用于打印和显示功能的退格符。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbBinaryCompare">
      <summary vsli:raw="Specifies that a binary comparison should be performed when comparison functions are called.">指定在调用比较函数时应执行二进制比较。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbBoolean">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Boolean&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">指示变量对象的类型为 <see langword="Boolean" />。 由 <see langword="VarType" /> 函数返回。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbByte">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Byte&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">指示变量对象的类型为 <see langword="Byte" />。 由 <see langword="VarType" /> 函数返回。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCancel">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Cancel&quot; /&gt; button was clicked in a message box. Returned by the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">指示在某个消息框中单击了 <see langword="Cancel" /> 按钮。 由 <see langword="MsgBox" /> 函数返回。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCr">
      <summary vsli:raw="Represents a carriage-return character for print and display functions.">表示用于打印和显示功能的回车符。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCritical">
      <summary vsli:raw="Indicates that the critical message icon will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">指示在调用 <see langword="MsgBox" /> 函数时，将显示关键消息图标。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCrLf">
      <summary vsli:raw="Represents a carriage-return character combined with a linefeed character for print and display functions.">表示用于打印和显示功能的回车符和换行符的组合。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCurrency">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Currency&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">指示变量对象的类型为 <see langword="Currency" />。 由 <see langword="VarType" /> 函数返回。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDate">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Date&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">指示变量对象的类型为 <see langword="Date" />。 由 <see langword="VarType" /> 函数返回。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDecimal">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Decimal&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">指示变量对象的类型为 <see langword="Decimal" />。 由 <see langword="VarType" /> 函数返回。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDefaultButton1">
      <summary vsli:raw="Indicates that the leftmost button is selected as the default button when the message box appears.">指示在显示消息框时将最左侧的按钮作为默认按钮选中。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDefaultButton2">
      <summary vsli:raw="Indicates that the second button from the left is selected as the default button when the message box appears.">指示在显示消息框时将左侧起的第二个按钮作为默认按钮选中。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDefaultButton3">
      <summary vsli:raw="Indicates that the third button from the left is selected as the default button when the message box appears.">指示在显示消息框时将左侧起的第三个按钮作为默认按钮选中。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDirectory">
      <summary vsli:raw="Indicates that the file is a directory or folder for file-access functions.">指示该文件是包含文件访问函数的目录或文件夹。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDouble">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Double&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">指示变量对象的类型为 <see langword="Double" />。 由 <see langword="VarType" /> 函数返回。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbEmpty">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Empty&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">指示变量对象的类型为 <see langword="Empty" />。 由 <see langword="VarType" /> 函数返回。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbExclamation">
      <summary vsli:raw="Indicates that the exclamation icon will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">指示在调用 <see langword="MsgBox" /> 函数时，将显示惊叹号图标。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFalse">
      <summary vsli:raw="Indicates that a &lt;see langword=&quot;Boolean&quot; /&gt; value of &lt;see langword=&quot;False&quot; /&gt; should be used when number-formatting functions are called.">指示在调用数字格式设置函数时应使用 <see langword="Boolean" /> 值 <see langword="False" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFirstFourDays">
      <summary vsli:raw="Indicates that the first week of the year that has at least four days should be used when date-related functions are called.">指示在调用与日期相关的函数时，应使用一年中第一个至少包含四天的周。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFirstFullWeek">
      <summary vsli:raw="Indicates that the first full week of the year should be used when date-related functions are called.">指示在调用与日期相关的函数时，应使用一年中第一个完整的周。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFirstJan1">
      <summary vsli:raw="Indicates that the week of the year in which January 1 occurs should be used when date-related functions are called.">指示在调用与日期相关的函数时，应使用一年中 1 月 1 日所在的周。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFormFeed">
      <summary vsli:raw="Represents a form-feed character for print functions.">表示用于打印功能的换页符。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFriday">
      <summary vsli:raw="Specifies that Friday should be used as the first day of the week when date-related functions are called.">指示在调用与日期相关的函数时，应将星期五用作一周的第一天。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbGeneralDate">
      <summary vsli:raw="Indicates that the general date format for the current culture should be used when the &lt;see langword=&quot;FormatDateTime&quot; /&gt; function is called.">指示在调用 <see langword="FormatDateTime" /> 函数时，应使用当前区域性的常规日期格式。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbGet">
      <summary vsli:raw="Specifies that a property value should be retrieved when the &lt;see langword=&quot;CallByName&quot; /&gt; function is called.">指定在调用 <see langword="CallByName" /> 函数时，应检索一个属性值。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbHidden">
      <summary vsli:raw="Indicates that the file is a hidden file for file-access functions.">指示该文件是包含文件访问函数的隐藏文件。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbHide">
      <summary vsli:raw="Indicates that the window style is hidden for the invoked program when the &lt;see langword=&quot;Shell&quot; /&gt; function is called.">指示在调用 <see langword="Shell" /> 函数时，将对所调用程序隐藏窗口样式。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbHiragana">
      <summary vsli:raw="Indicates Hiragana characters should be converted to Katakana characters when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">指示在调用 <see langword="StrConv" /> 函数时，应将平假名字符转换为片假名字符。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbIgnore">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Ignore&quot; /&gt; button was clicked in a message box. Returned by the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">指示在某个消息框中单击了 <see langword="Ignore" /> 按钮。 由 <see langword="MsgBox" /> 函数返回。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbInformation">
      <summary vsli:raw="Indicates that the information icon will display when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">指示在调用 <see langword="MsgBox" /> 函数时，将显示信息图标。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbInteger">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Integer&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">指示变量对象的类型为 <see langword="Integer" />。 由 <see langword="VarType" /> 函数返回。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbKatakana">
      <summary vsli:raw="Indicates that Katakana characters should be converted to Hiragana characters when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">指示在调用 <see langword="StrConv" /> 函数时，应将片假名字符转换为平假名字符。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLet">
      <summary vsli:raw="Indicates that a property value should be set to an object instance when the &lt;see langword=&quot;CallByName&quot; /&gt; function is called.">指示在调用 <see langword="CallByName" /> 函数时，应将属性值设置为对象实例。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLf">
      <summary vsli:raw="Represents a linefeed character for print and display functions.">表示用于打印和显示功能的换行字符。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLinguisticCasing">
      <summary vsli:raw="Indicates that characters should be converted to use linguistic rules for casing instead of file system rules for casing to when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">指示在调用 <see langword="StrConv" /> 函数时，应将字符转换为使用语言规则进行大小写，而不使用文件系统规则进行大小写。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLong">
      <summary vsli:raw="Indicates the type of a variant object is &lt;see langword=&quot;Long&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">指示变量对象的类型为 <see langword="Long" />。 由 <see langword="VarType" /> 函数返回。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLongDate">
      <summary vsli:raw="Indicates that the long date format for the current culture should be used when the &lt;see langword=&quot;FormatDateTime&quot; /&gt; function is called.">指示在调用 <see langword="FormatDateTime" /> 函数时，应使用当前区域性的长日期格式。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLongTime">
      <summary vsli:raw="Indicates that the long time format for the current culture should be used when the &lt;see langword=&quot;FormatDateTime&quot; /&gt; function is called.">指示在调用 <see langword="FormatDateTime" /> 函数时，应使用当前区域性的长时间格式。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLowerCase">
      <summary vsli:raw="Indicates that characters should be converted to lowercase when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">指示在调用 <see langword="StrConv" /> 函数时，应将字符转换为小写字符。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMaximizedFocus">
      <summary vsli:raw="Indicates that the window style is maximized with focus for the invoked program when the &lt;see langword=&quot;Shell&quot; /&gt; function is called.">指示在调用 <see langword="Shell" /> 函数时，将使窗口样式最大化并将焦点提供给所调用的程序。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMethod">
      <summary vsli:raw="Specifies that a method should be called when the &lt;see langword=&quot;CallByName&quot; /&gt; function is called.">指定在调用 <see langword="CallByName" /> 函数时，应调用一个方法。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMinimizedFocus">
      <summary vsli:raw="Indicates that the window style is minimized with focus for the invoked program when the &lt;see langword=&quot;Shell&quot; /&gt; function is called.">指示在调用 <see langword="Shell" /> 函数时，将使窗口样式最小化并将焦点提供给所调用的程序。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMinimizedNoFocus">
      <summary vsli:raw="Indicates that the window style is minimized without focus for the invoked program when the &lt;see langword=&quot;Shell&quot; /&gt; function is called.">指示在调用 <see langword="Shell" /> 函数时，将使窗口样式最小化，但不将焦点提供给所调用的程序。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMonday">
      <summary vsli:raw="Specifies that Monday should be used as the first day of the week when date-related functions are called.">指示在调用与日期相关的函数时，应将星期一用作一周的第一天。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxHelp">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Help&quot; /&gt; button will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">指示在调用 <see langword="Help" /> 函数时，将显示 <see langword="MsgBox" /> 按钮。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxRight">
      <summary vsli:raw="Indicates that text will be right-aligned when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">指示在调用 <see langword="MsgBox" /> 函数时，将使文本右对齐。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxRtlReading">
      <summary vsli:raw="Indicates that right-to-left reading text (Hebrew and Arabic systems) will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">指示在调用 <see langword="MsgBox" /> 函数时，将显示从右向左阅读的文本（希伯来语和阿拉伯语系统）。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxSetForeground">
      <summary vsli:raw="Indicates that the message box will display in the foreground when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">指示在调用 <see langword="MsgBox" /> 函数时，将在前台显示消息框。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNarrow">
      <summary vsli:raw="Indicates that wide (double-byte) characters should be converted to narrow (single-byte) characters when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">指示在调用 <see langword="StrConv" /> 函数时，应将宽（双字节）字符转换为窄（单字节）字符。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNewLine">
      <summary vsli:raw="Represents a newline character for print and display functions.">表示用于打印和显示功能的换行字符。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNo">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;No&quot; /&gt; button was clicked in a message box. Returned by the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">指示在某个消息框中单击了 <see langword="No" /> 按钮。 由 <see langword="MsgBox" /> 函数返回。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNormal">
      <summary vsli:raw="Indicates that the file is a normal file for file-access functions.">指示该文件是包含文件访问函数的常规文件。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNormalFocus">
      <summary vsli:raw="Indicates that the window style is normal with focus for the invoked program when the &lt;see langword=&quot;Shell&quot; /&gt; function is called.">指示在调用 <see langword="Shell" /> 函数时，将正常显示窗口样式并将焦点提供给所调用的程序。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNormalNoFocus">
      <summary vsli:raw="Indicates that the window style is normal without focus for the invoked program when the &lt;see langword=&quot;Shell&quot; /&gt; function is called.">指示在调用 <see langword="Shell" /> 函数时，将正常显示窗口样式，但不将焦点提供给所调用的程序。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNull">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Nothing&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">指示变量对象的类型为 <see langword="Nothing" />。 由 <see langword="VarType" /> 函数返回。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNullChar">
      <summary vsli:raw="Represents a null character for print and display functions.">表示用于打印和显示功能的 null 字符。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNullString">
      <summary vsli:raw="Represents a zero-length string for print and display functions, and for calling external procedures.">表示用于打印和显示功能以及用于调用外部过程的零长度字符串。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbObject">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Object&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">指示变量对象的类型为 <see langword="Object" />。 由 <see langword="VarType" /> 函数返回。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbObjectError">
      <summary vsli:raw="Represents the object error number. User-defined error numbers should be greater than this value.">表示对象错误号。 用户定义的错误号应当大于此值。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbOK">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;OK&quot; /&gt; button was clicked in a message box. Returned by the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">指示在某个消息框中单击了 <see langword="OK" /> 按钮。 由 <see langword="MsgBox" /> 函数返回。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbOKCancel">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;OK&quot; /&gt; and &lt;see langword=&quot;Cancel&quot; /&gt; buttons will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">指示在调用 <see langword="OK" /> 函数时，将显示 <see langword="Cancel" /> 和 <see langword="MsgBox" /> 按钮。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbOKOnly">
      <summary vsli:raw="Indicates that only the &lt;see langword=&quot;OK&quot; /&gt; button will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">指示在调用 <see langword="OK" /> 函数时，将只显示 <see langword="MsgBox" /> 按钮。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbProperCase">
      <summary vsli:raw="Indicates that the first letter of every word in a string should be converted to uppercase and the remaining characters to lowercase when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">指示在调用 <see langword="StrConv" /> 函数时，应将字符串中每个单词的第一个字母转换为大写，并将其余字符转换为小写。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbQuestion">
      <summary vsli:raw="Indicates that the question icon will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">指示在调用 <see langword="MsgBox" /> 函数时，将显示问号图标。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbReadOnly">
      <summary vsli:raw="Indicates that the file is a read-only file for file-access functions.">指示该文件是包含文件访问函数的只读文件。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbRetry">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Retry&quot; /&gt; button was clicked in a message box. Returned by the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">指示在某个消息框中单击了 <see langword="Retry" /> 按钮。 由 <see langword="MsgBox" /> 函数返回。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbRetryCancel">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Retry&quot; /&gt; and &lt;see langword=&quot;Cancel&quot; /&gt; buttons will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">指示在调用 <see langword="Retry" /> 函数时，将显示 <see langword="Cancel" /> 和 <see langword="MsgBox" /> 按钮。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSaturday">
      <summary vsli:raw="Specifies that Saturday should be used as the first day of the week when date-related functions are called.">指示在调用与日期相关的函数时，应将星期六用作一周的第一天。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSet">
      <summary vsli:raw="Indicates that a property value should be set when the &lt;see langword=&quot;CallByName&quot; /&gt; function is called.">指示在调用 <see langword="CallByName" /> 函数时，应设置一个属性值。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbShortDate">
      <summary vsli:raw="Indicates that the short-date format for the current culture should be used when the &lt;see langword=&quot;FormatDateTime&quot; /&gt; function is called.">指示在调用 <see langword="FormatDateTime" /> 函数时，应使用当前区域性的短日期格式。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbShortTime">
      <summary vsli:raw="Indicates that the short-time format for the current culture should be used when the &lt;see langword=&quot;FormatDateTime&quot; /&gt; function is called.">指示在调用 <see langword="FormatDateTime" /> 函数时，应使用当前区域性的短时间格式。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSimplifiedChinese">
      <summary vsli:raw="Indicates that characters should be converted to Simplified Chinese when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">指示在调用 <see langword="StrConv" /> 函数时，应将字符转换为简体中文字符。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSingle">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see cref=&quot;T:System.Single&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">指示变量对象的类型为 <see langword="Single" />。 由 <see langword="VarType" /> 函数返回。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbString">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;String&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">指示变量对象的类型为 <see langword="String" />。 由 <see langword="VarType" /> 函数返回。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSunday">
      <summary vsli:raw="Specifies that Sunday should be used as the first day of the week when date-related functions are called.">指示在调用与日期相关的函数时，应将星期日用作一周的第一天。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSystem">
      <summary vsli:raw="Indicates that the file is a system file for file-access functions.">指示该文件是包含文件访问函数的系统文件。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSystemModal">
      <summary vsli:raw="Indicates that the message box will be displayed as a modal dialog box when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">指示在调用 <see langword="MsgBox" /> 函数时，将消息框显示为模式对话框。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTab">
      <summary vsli:raw="Represents a tab character for print and display functions.">表示用于打印和显示功能的制表符。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTextCompare">
      <summary vsli:raw="Indicates that a text comparison should be performed when comparison functions are called.">指示在调用比较函数时，应执行文本比较。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbThursday">
      <summary vsli:raw="Specifies that Thursday should be used as the first day of the week when date-related functions are called.">指示在调用与日期相关的函数时，应将星期四用作一周的第一天。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTraditionalChinese">
      <summary vsli:raw="Indicates that characters should be converted to Traditional Chinese when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">指示在调用 <see langword="StrConv" /> 函数时，应将字符转换为繁体中文字符。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTrue">
      <summary vsli:raw="Indicates that a &lt;see langword=&quot;Boolean&quot; /&gt; value of &lt;see langword=&quot;True&quot; /&gt; should be used when number-formatting functions are called.">指示在调用数字格式设置函数时应使用 <see langword="Boolean" /> 值 <see langword="True" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTuesday">
      <summary vsli:raw="Specifies that Tuesday should be used as the first day of the week when date-related functions are called.">指示在调用与日期相关的函数时，应将星期二用作一周的第一天。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUpperCase">
      <summary vsli:raw="Indicates that characters should be converted to uppercase when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">指示在调用 <see langword="StrConv" /> 函数时，应将字符转换为大写字符。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUseDefault">
      <summary vsli:raw="Indicates that the default &lt;see langword=&quot;Boolean&quot; /&gt; value should be used when number-formatting functions are called.">指示在调用数字格式设置函数时，应使用默认 <see langword="Boolean" /> 值。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUserDefinedType">
      <summary vsli:raw="Indicates that the type of a variant object is a user-defined type. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">指示变量对象的类型为用户定义的类型。 由 <see langword="VarType" /> 函数返回。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUseSystem">
      <summary vsli:raw="Indicates that the week specified by your system as the first week of the year should be used when date-related functions are called.">指示在调用与日期相关的函数时，应使用系统指定的那一周作为一年中的第一周。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUseSystemDayOfWeek">
      <summary vsli:raw="Indicates that the day specified by your system as the first day of the week should be used when date-related functions are called.">指示在调用与日期相关的函数时，应使用系统指定的那一天为一周中的第一天。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbVariant">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Variant&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">指示变量对象的类型为 <see langword="Variant" />。 由 <see langword="VarType" /> 函数返回。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbVerticalTab">
      <summary vsli:raw="Represents a carriage-return character for print functions.">表示用于打印功能的回车字符。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbVolume">
      <summary vsli:raw="Indicates the volume label file attribute for file-access functions.">指示文件访问函数的卷标文件特性。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbWednesday">
      <summary vsli:raw="Specifies that Wednesday should be used as the first day of the week when date-related functions are called.">指示在调用与日期相关的函数时，应将星期三用作一周的第一天。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbWide">
      <summary vsli:raw="Indicates that narrow (single-byte) characters should be converted to wide (double-byte) characters when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">指示在调用 <see langword="StrConv" /> 函数时，应将窄（单字节）字符转换为宽（双字节）字符。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbYes">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Yes&quot; /&gt; button was clicked in a message box. Returned by the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">指示在某个消息框中单击了 <see langword="Yes" /> 按钮。 由 <see langword="MsgBox" /> 函数返回。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbYesNo">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Yes&quot; /&gt; and &lt;see langword=&quot;No&quot; /&gt; buttons will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">指示在调用 <see langword="Yes" /> 函数时，将显示 <see langword="No" /> 和 <see langword="MsgBox" /> 按钮。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbYesNoCancel">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Yes&quot; /&gt;, &lt;see langword=&quot;No&quot; /&gt;, and &lt;see langword=&quot;Cancel&quot; /&gt; buttons will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">指示在调用 <see langword="Yes" /> 函数时，将显示 <see langword="No" />、<see langword="Cancel" /> 和 <see langword="MsgBox" /> 按钮。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ControlChars">
      <summary vsli:raw="The &lt;see langword=&quot;ControlChars&quot; /&gt; module contains constants used as control characters. These constants can be used anywhere in your code.">
        <see langword="ControlChars" /> 模块包含用作控制字符的常数。 这些常量可以在代码中的任何地方使用。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ControlChars.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.ControlChars&quot; /&gt; class.">初始化 <see cref="T:Microsoft.VisualBasic.ControlChars" /> 类的新实例。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Back">
      <summary vsli:raw="Represents a backspace character (&lt;see langword=&quot;vbBack&quot; /&gt;).">表示退格符 (<see langword="vbBack" />)。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Cr">
      <summary vsli:raw="Represents a carriage return character (&lt;see langword=&quot;vbCr&quot; /&gt;).">表示回车符 (<see langword="vbCr" />)。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.CrLf">
      <summary vsli:raw="Represents a carriage return/linefeed character combination (&lt;see langword=&quot;vbCrLf&quot; /&gt;).">表示回车/换行组合符 (<see langword="vbCrLf" />)。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.FormFeed">
      <summary vsli:raw="Represents a form feed character for print functions (&lt;see langword=&quot;vbFormFeed&quot; /&gt;).">表示用于打印功能的换页符 (<see langword="vbFormFeed" />)。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Lf">
      <summary vsli:raw="Represents a line feed character (&lt;see langword=&quot;vbLf&quot; /&gt;).">表示换行符 (<see langword="vbLf" />)。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.NewLine">
      <summary vsli:raw="Represents a new line character (&lt;see langword=&quot;vbNewLine&quot; /&gt;).">表示新行字符 (<see langword="vbNewLine" />)。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.NullChar">
      <summary vsli:raw="Represents a null character (&lt;see langword=&quot;vbNullChar&quot; /&gt;).">表示 null 字符 (<see langword="vbNullChar" />)。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Quote">
      <summary vsli:raw="Represents a double-quote character.">表示双引号字符。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Tab">
      <summary vsli:raw="Represents a tab character (&lt;see langword=&quot;vbTab&quot; /&gt;).">表示制表符 (<see langword="vbTab" />)。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.VerticalTab">
      <summary vsli:raw="Represents a vertical tab character (&lt;see langword=&quot;vbVerticalTab&quot; /&gt;).">表示垂直制表符 (<see langword="vbVerticalTab" />)。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Conversion">
      <summary vsli:raw="The &lt;see langword=&quot;Conversion&quot; /&gt; module contains the procedures used to perform various conversion operations.">
        <see langword="Conversion" /> 模块包含用于执行各种转换操作的过程。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.CTypeDynamic(System.Object,System.Type)">
      <summary vsli:raw="Converts an object to the specified type.">将对象转换为指定类型。</summary>
      <param name="Expression" vsli:raw="The object to convert.">要转换的对象。</param>
      <param name="TargetType" vsli:raw="The type to which to convert the object.">该对象要转换为的类型。</param>
      <returns vsli:raw="An object whose type at run time is the requested target type.">一个对象，其类型在运行时为请求的目标类型。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.CTypeDynamic``1(System.Object)">
      <summary vsli:raw="Converts an object to the specified generic type.">将对象转换为指定的泛型类型。</summary>
      <param name="Expression" vsli:raw="The object to convert.">要转换的对象。</param>
      <typeparam name="TargetType" vsli:raw="The type to which to convert the object.">该对象要转换为的类型。</typeparam>
      <returns vsli:raw="An object statically typed as the requested generic type.">静态类型化为请求的泛型类型的对象。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.ErrorToString">
      <summary vsli:raw="Returns the error message that corresponds to a given error number.">返回与给定的错误号对应的错误信息。</summary>
      <returns vsli:raw="The error message that corresponds to the most recent run-time error.">对应于最新运行时错误的错误消息。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;ErrorNumber&quot; /&gt; is out of range.">
        <paramref name="ErrorNumber" /> 超出范围。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.ErrorToString(System.Int32)">
      <summary vsli:raw="Returns the error message that corresponds to a given error number.">返回与给定的错误号对应的错误信息。</summary>
      <param name="ErrorNumber" vsli:raw="Optional. Any valid error number.">可选。 任何有效的错误号。</param>
      <returns vsli:raw="The error message that corresponds to a given error number.">与给定错误号对应的错误消息。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;ErrorNumber&quot; /&gt; is out of range.">
        <paramref name="ErrorNumber" /> 超出范围。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Decimal)">
      <summary vsli:raw="Returns the integer portion of a number.">返回一个数的整数部分。</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Decimal&quot; /&gt; or any valid numeric expression.">必需。 <see langword="Decimal" /> 类型的数字或任何有效的数值表达式。</param>
      <returns vsli:raw="The integer portion of a number.">数字的整数部分。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number 未指定。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number 不是 Numeric 类型。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Double)">
      <summary vsli:raw="Returns the integer portion of a number.">返回一个数的整数部分。</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see cref=&quot;T:System.Double&quot; /&gt; or any valid numeric expression.">必需。 <see langword="Double" /> 类型的数字或任何有效的数值表达式。</param>
      <returns vsli:raw="The integer portion of a number.">数字的整数部分。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number 未指定。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number 不是 Numeric 类型。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Int16)">
      <summary vsli:raw="Returns the integer portion of a number.">返回一个数的整数部分。</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Short&quot; /&gt; or any valid numeric expression.">必需。 <see langword="Short" /> 类型的数字或任何有效的数值表达式。</param>
      <returns vsli:raw="The integer portion of a number.">数字的整数部分。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number 未指定。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number 不是 Numeric 类型。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Int32)">
      <summary vsli:raw="Returns the integer portion of a number.">返回一个数的整数部分。</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Integer&quot; /&gt; or any valid numeric expression.">必需。 <see langword="Integer" /> 类型的数字或任何有效的数值表达式。</param>
      <returns vsli:raw="The integer portion of a number.">数字的整数部分。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number 未指定。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number 不是 Numeric 类型。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Int64)">
      <summary vsli:raw="Returns the integer portion of a number.">返回一个数的整数部分。</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Long&quot; /&gt; or any valid numeric expression.">必需。 <see langword="Long" /> 类型的数字或任何有效的数值表达式。</param>
      <returns vsli:raw="The integer portion of a number.">数字的整数部分。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number 未指定。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number 不是 Numeric 类型。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Object)">
      <summary vsli:raw="Returns the integer portion of a number.">返回一个数的整数部分。</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Object&quot; /&gt; or any valid numeric expression. If &lt;paramref name=&quot;Number&quot; /&gt; contains &lt;see langword=&quot;Nothing&quot; /&gt;, &lt;see langword=&quot;Nothing&quot; /&gt; is returned.">必需。 <see langword="Object" /> 类型的数字或任何有效的数值表达式。 如果 <paramref name="Number" /> 包含 <see langword="Nothing" />，则返回 <see langword="Nothing" />。</param>
      <returns vsli:raw="The integer portion of a number.">数字的整数部分。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number 未指定。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number 不是 Numeric 类型。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Single)">
      <summary vsli:raw="Returns the integer portion of a number.">返回一个数的整数部分。</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see cref=&quot;T:System.Single&quot; /&gt; or any valid numeric expression.">必需。 <see langword="Single" /> 类型的数字或任何有效的数值表达式。</param>
      <returns vsli:raw="The integer portion of a number.">数字的整数部分。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number 未指定。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number 不是 Numeric 类型。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Byte)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">返回表示数字的十六进制值的字符串。</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">必需。 任何有效的数值表达式或 <see langword="String" /> 表达式。</param>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">表示某数十六进制值的字符串。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">未指定 <paramref name="Number" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> 不是 Numeric 类型。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Int16)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">返回表示数字的十六进制值的字符串。</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">必需。 任何有效的数值表达式或 <see langword="String" /> 表达式。</param>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">表示某数十六进制值的字符串。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">未指定 <paramref name="Number" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> 不是 Numeric 类型。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Int32)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">返回表示数字的十六进制值的字符串。</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">必需。 任何有效的数值表达式或 <see langword="String" /> 表达式。</param>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">表示某数十六进制值的字符串。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">未指定 <paramref name="Number" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> 不是 Numeric 类型。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Int64)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">返回表示数字的十六进制值的字符串。</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">必需。 任何有效的数值表达式或 <see langword="String" /> 表达式。</param>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">表示某数十六进制值的字符串。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">未指定 <paramref name="Number" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> 不是 Numeric 类型。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Object)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">返回表示数字的十六进制值的字符串。</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">必需。 任何有效的数值表达式或 <see langword="String" /> 表达式。</param>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">表示某数十六进制值的字符串。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">未指定 <paramref name="Number" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> 不是 Numeric 类型。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.SByte)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">返回表示数字的十六进制值的字符串。</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">必需。 任何有效的数值表达式或 <see langword="String" /> 表达式。</param>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">表示某数十六进制值的字符串。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">未指定 <paramref name="Number" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> 不是 Numeric 类型。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.UInt16)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">返回表示数字的十六进制值的字符串。</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">必需。 任何有效的数值表达式或 <see langword="String" /> 表达式。</param>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">表示某数十六进制值的字符串。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">未指定 <paramref name="Number" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> 不是 Numeric 类型。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.UInt32)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">返回表示数字的十六进制值的字符串。</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">必需。 任何有效的数值表达式或 <see langword="String" /> 表达式。</param>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">表示某数十六进制值的字符串。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">未指定 <paramref name="Number" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> 不是 Numeric 类型。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.UInt64)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">返回表示数字的十六进制值的字符串。</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">必需。 任何有效的数值表达式或 <see langword="String" /> 表达式。</param>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">表示某数十六进制值的字符串。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">未指定 <paramref name="Number" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> 不是 Numeric 类型。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Decimal)">
      <summary vsli:raw="Returns the integer portion of a number.">返回一个数的整数部分。</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Decimal&quot; /&gt; or any valid numeric expression.">必需。 <see langword="Decimal" /> 类型的数字或任何有效的数值表达式。</param>
      <returns vsli:raw="The integer portion of a number.">数字的整数部分。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number 未指定。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number 不是 Numeric 类型。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Double)">
      <summary vsli:raw="Returns the integer portion of a number.">返回一个数的整数部分。</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see cref=&quot;T:System.Double&quot; /&gt; or any valid numeric expression.">必需。 <see langword="Double" /> 类型的数字或任何有效的数值表达式。</param>
      <returns vsli:raw="The integer portion of a number.">数字的整数部分。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number 未指定。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number 不是 Numeric 类型。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Int16)">
      <summary vsli:raw="Returns the integer portion of a number.">返回一个数的整数部分。</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Short&quot; /&gt; or any valid numeric expression.">必需。 <see langword="Short" /> 类型的数字或任何有效的数值表达式。</param>
      <returns vsli:raw="The integer portion of a number.">数字的整数部分。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number 未指定。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number 不是 Numeric 类型。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Int32)">
      <summary vsli:raw="Returns the integer portion of a number.">返回一个数的整数部分。</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Integer&quot; /&gt; or any valid numeric expression.">必需。 <see langword="Integer" /> 类型的数字或任何有效的数值表达式。</param>
      <returns vsli:raw="The integer portion of a number.">数字的整数部分。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number 未指定。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number 不是 Numeric 类型。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Int64)">
      <summary vsli:raw="Returns the integer portion of a number.">返回一个数的整数部分。</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Long&quot; /&gt; or any valid numeric expression.">必需。 <see langword="Long" /> 类型的数字或任何有效的数值表达式。</param>
      <returns vsli:raw="The integer portion of a number.">数字的整数部分。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number 未指定。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number 不是 Numeric 类型。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Object)">
      <summary vsli:raw="Returns the integer portion of a number.">返回一个数的整数部分。</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Object&quot; /&gt; or any valid numeric expression. If &lt;paramref name=&quot;Number&quot; /&gt; contains &lt;see langword=&quot;Nothing&quot; /&gt;, &lt;see langword=&quot;Nothing&quot; /&gt; is returned.">必需。 <see langword="Object" /> 类型的数字或任何有效的数值表达式。 如果 <paramref name="Number" /> 包含 <see langword="Nothing" />，则返回 <see langword="Nothing" />。</param>
      <returns vsli:raw="The integer portion of a number.">数字的整数部分。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number 未指定。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number 不是 Numeric 类型。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Single)">
      <summary vsli:raw="Returns the integer portion of a number.">返回一个数的整数部分。</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see cref=&quot;T:System.Single&quot; /&gt; or any valid numeric expression.">必需。 <see langword="Single" /> 类型的数字或任何有效的数值表达式。</param>
      <returns vsli:raw="The integer portion of a number.">数字的整数部分。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number 未指定。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number 不是 Numeric 类型。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Byte)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">返回表示某数八进制值的字符串。</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">必需。 任何有效的数值表达式或 <see langword="String" /> 表达式。</param>
      <returns vsli:raw="A string representing the octal value of a number.">表示某数八进制值的字符串。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">未指定 <paramref name="Number" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> 不是 Numeric 类型。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Int16)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">返回表示某数八进制值的字符串。</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">必需。 任何有效的数值表达式或 <see langword="String" /> 表达式。</param>
      <returns vsli:raw="A string representing the octal value of a number.">表示某数八进制值的字符串。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">未指定 <paramref name="Number" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> 不是 Numeric 类型。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Int32)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">返回表示某数八进制值的字符串。</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">必需。 任何有效的数值表达式或 <see langword="String" /> 表达式。</param>
      <returns vsli:raw="A string representing the octal value of a number.">表示某数八进制值的字符串。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">未指定 <paramref name="Number" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> 不是 Numeric 类型。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Int64)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">返回表示某数八进制值的字符串。</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">必需。 任何有效的数值表达式或 <see langword="String" /> 表达式。</param>
      <returns vsli:raw="A string representing the octal value of a number.">表示某数八进制值的字符串。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">未指定 <paramref name="Number" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> 不是 Numeric 类型。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Object)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">返回表示某数八进制值的字符串。</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">必需。 任何有效的数值表达式或 <see langword="String" /> 表达式。</param>
      <returns vsli:raw="A string representing the octal value of a number.">表示某数八进制值的字符串。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">未指定 <paramref name="Number" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> 不是 Numeric 类型。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.SByte)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">返回表示某数八进制值的字符串。</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">必需。 任何有效的数值表达式或 <see langword="String" /> 表达式。</param>
      <returns vsli:raw="A string representing the octal value of a number.">表示某数八进制值的字符串。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">未指定 <paramref name="Number" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> 不是 Numeric 类型。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.UInt16)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">返回表示某数八进制值的字符串。</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">必需。 任何有效的数值表达式或 <see langword="String" /> 表达式。</param>
      <returns vsli:raw="A string representing the octal value of a number.">表示某数八进制值的字符串。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">未指定 <paramref name="Number" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> 不是 Numeric 类型。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.UInt32)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">返回表示某数八进制值的字符串。</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">必需。 任何有效的数值表达式或 <see langword="String" /> 表达式。</param>
      <returns vsli:raw="A string representing the octal value of a number.">表示某数八进制值的字符串。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">未指定 <paramref name="Number" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> 不是 Numeric 类型。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.UInt64)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">返回表示某数八进制值的字符串。</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">必需。 任何有效的数值表达式或 <see langword="String" /> 表达式。</param>
      <returns vsli:raw="A string representing the octal value of a number.">表示某数八进制值的字符串。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">未指定 <paramref name="Number" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> 不是 Numeric 类型。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Str(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; representation of a number.">返回数字的 <see langword="String" /> 表示形式。</summary>
      <param name="Number" vsli:raw="Required. An &lt;see langword=&quot;Object&quot; /&gt; containing any valid numeric expression.">必需。 包含任何有效的数值表达式的 <see langword="Object" />。</param>
      <returns vsli:raw="A &lt;see langword=&quot;String&quot; /&gt; representation of a number.">数字的 <see langword="String" /> 表示形式。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">未指定 <paramref name="Number" />。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> 不是 Numeric 类型。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Val(System.Char)">
      <summary vsli:raw="Returns the numbers contained in a string as a numeric value of appropriate type.">将字符串中包含的数字作为适当类型的数值返回。</summary>
      <param name="Expression" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression, &lt;see langword=&quot;Object&quot; /&gt; variable, or &lt;see langword=&quot;Char&quot; /&gt; value. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, its value must be convertible to &lt;see langword=&quot;String&quot; /&gt; or an &lt;see cref=&quot;T:System.ArgumentException&quot; /&gt; error occurs.">必需。 任何有效的 <see langword="String" /> 表达式、<see langword="Object" /> 变量或 <see langword="Char" /> 值。 如果 <paramref name="Expression" /> 属于类型 <see langword="Object" />，其值必须可转换为 <see langword="String" />，否则将发生 <see cref="T:System.ArgumentException" /> 错误。</param>
      <returns vsli:raw="The numbers contained in a string as a numeric value of appropriate type.">字符串中包含的作为适当类型数值的数字。</returns>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;InputStr&quot; /&gt; is too large.">
        <paramref name="InputStr" /> 太大。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Expression&quot; /&gt; is an &lt;see langword=&quot;Object&quot; /&gt; type expression that is not convertible to &lt;see langword=&quot;String&quot; /&gt;.">
        <paramref name="Expression" /> 是不可转换为 <see langword="String" /> 的 <see langword="Object" /> 类型表达式。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Val(System.Object)">
      <summary vsli:raw="Returns the numbers contained in a string as a numeric value of appropriate type.">将字符串中包含的数字作为适当类型的数值返回。</summary>
      <param name="Expression" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression, &lt;see langword=&quot;Object&quot; /&gt; variable, or &lt;see langword=&quot;Char&quot; /&gt; value. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, its value must be convertible to &lt;see langword=&quot;String&quot; /&gt; or an &lt;see cref=&quot;T:System.ArgumentException&quot; /&gt; error occurs.">必需。 任何有效的 <see langword="String" /> 表达式、<see langword="Object" /> 变量或 <see langword="Char" /> 值。 如果 <paramref name="Expression" /> 属于类型 <see langword="Object" />，其值必须可转换为 <see langword="String" />，否则将发生 <see cref="T:System.ArgumentException" /> 错误。</param>
      <returns vsli:raw="The numbers contained in a string as a numeric value of appropriate type.">字符串中包含的作为适当类型数值的数字。</returns>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;InputStr&quot; /&gt; is too large.">
        <paramref name="InputStr" /> 太大。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Expression&quot; /&gt; is an &lt;see langword=&quot;Object&quot; /&gt; type expression that is not convertible to &lt;see langword=&quot;String&quot; /&gt;.">
        <paramref name="Expression" /> 是不可转换为 <see langword="String" /> 的 <see langword="Object" /> 类型表达式。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Val(System.String)">
      <summary vsli:raw="Returns the numbers contained in a string as a numeric value of appropriate type.">将字符串中包含的数字作为适当类型的数值返回。</summary>
      <param name="InputStr" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression, &lt;see langword=&quot;Object&quot; /&gt; variable, or &lt;see langword=&quot;Char&quot; /&gt; value. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, its value must be convertible to &lt;see langword=&quot;String&quot; /&gt; or an &lt;see cref=&quot;T:System.ArgumentException&quot; /&gt; error occurs.">必需。 任何有效的 <see langword="String" /> 表达式、<see langword="Object" /> 变量或 <see langword="Char" /> 值。 如果 <paramref name="Expression" /> 属于类型 <see langword="Object" />，其值必须可转换为 <see langword="String" />，否则将发生 <see cref="T:System.ArgumentException" /> 错误。</param>
      <returns vsli:raw="The numbers contained in a string as a numeric value of appropriate type.">字符串中包含的作为适当类型数值的数字。</returns>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;InputStr&quot; /&gt; is too large.">
        <paramref name="InputStr" /> 太大。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Expression&quot; /&gt; is an &lt;see langword=&quot;Object&quot; /&gt; type expression that is not convertible to &lt;see langword=&quot;String&quot; /&gt;.">
        <paramref name="Expression" /> 是不可转换为 <see langword="String" /> 的 <see langword="Object" /> 类型表达式。</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.DateAndTime">
      <summary vsli:raw="The &lt;see langword=&quot;DateAndTime&quot; /&gt; module contains the procedures and properties used in date and time operations.">
        <see langword="DateAndTime" /> 模块包含在日期和时间操作中使用的过程和属性。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateAdd(Microsoft.VisualBasic.DateInterval,System.Double,System.DateTime)">
      <summary vsli:raw="Returns a value containing a date and time value to which a specified time interval has been added.">返回一个值，其中包含已添加指定时间间隔的日期和时间值。</summary>
      <param name="Interval" vsli:raw="Required. A &lt;see cref=&quot;T:Microsoft.VisualBasic.DateInterval&quot; /&gt; enumeration value or a string expression representing the time interval you want to add.">必需。 表示要加上的时间间隔的 <see cref="T:Microsoft.VisualBasic.DateInterval" /> 枚举值或字符串表达式。</param>
      <param name="Number" vsli:raw="Required. Floating-point expression representing the number of intervals you want to add. It can be positive (to get date/time values in the future) or negative (to get date/time values in the past). It can contain a fractional part when &lt;paramref name=&quot;Interval&quot; /&gt; specifies hours, minutes, or seconds. For other values of &lt;paramref name=&quot;Interval&quot; /&gt;, any fractional part of &lt;paramref name=&quot;Number&quot; /&gt; is ignored.">必需。 表示希望添加的时间间隔数的浮点表达式。 可以为正数（此时将获取今后的日期/时间值），也可以为负数（此时将获取过去的日期/时间值）。 在 <paramref name="Interval" /> 指定小时、分钟或秒时，该参数可以包含小数部分。 对于其他类型的 <paramref name="Interval" /> 值，将忽略 <paramref name="Number" /> 的所有小数部分。</param>
      <param name="DateValue" vsli:raw="Required. An expression representing the date and time to which the interval is to be added. &lt;paramref name=&quot;DateValue&quot; /&gt; itself is not changed in the calling program.">必需。 表示要在其基础上加上此时间间隔的日期和时间的表达式。 <paramref name="DateValue" /> 本身在调用程序中并未改变。</param>
      <returns vsli:raw="A value containing a date and time value to which a specified time interval has been added.">包含已添加指定时间间隔的日期和时间值的值。</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;DateValue&quot; /&gt; is not coercible to &lt;see langword=&quot;Date&quot; /&gt;.">
        <paramref name="DateValue" /> 并不强制为 <see langword="Date" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Interval&quot; /&gt; is not valid.">
        <paramref name="Interval" /> 无效。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="Calculated date is before 00:00:00 on January 1 of the year 1, or later than 23:59:59 on December 31, 9999.">计算所得日期早于元年 1 月 1 日 00:00:00，或晚于 9999 年 12 月 31 日 23:59:59。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateAdd(System.String,System.Double,System.Object)">
      <summary vsli:raw="Returns a value containing a date and time value to which a specified time interval has been added.">返回一个值，其中包含已添加指定时间间隔的日期和时间值。</summary>
      <param name="Interval" vsli:raw="Required. A &lt;see cref=&quot;T:Microsoft.VisualBasic.DateInterval&quot; /&gt; enumeration value or a string expression representing the time interval you want to add.">必需。 表示要加上的时间间隔的 <see cref="T:Microsoft.VisualBasic.DateInterval" /> 枚举值或字符串表达式。</param>
      <param name="Number" vsli:raw="Required. Floating-point expression representing the number of intervals you want to add. &lt;paramref name=&quot;Number&quot; /&gt; can be positive (to get date/time values in the future) or negative (to get date/time values in the past). It can contain a fractional part when &lt;paramref name=&quot;Interval&quot; /&gt; specifies hours, minutes, or seconds. For other values of &lt;paramref name=&quot;Interval&quot; /&gt;, any fractional part of &lt;paramref name=&quot;Number&quot; /&gt; is ignored.">必需。 表示希望添加的时间间隔数的浮点表达式。 <paramref name="Number" /> 可以为正数（此时将获取今后的日期/时间值），也可以为负数（此时将获取过去的日期/时间值）。 在 <paramref name="Interval" /> 指定小时、分钟或秒时，该参数可以包含小数部分。 对于其他类型的 <paramref name="Interval" /> 值，将忽略 <paramref name="Number" /> 的所有小数部分。</param>
      <param name="DateValue" vsli:raw="Required. An expression representing the date and time to which the interval is to be added. &lt;paramref name=&quot;DateValue&quot; /&gt; itself is not changed in the calling program.">必需。 表示要在其基础上加上此时间间隔的日期和时间的表达式。 <paramref name="DateValue" /> 本身在调用程序中并未改变。</param>
      <returns vsli:raw="A value containing a date and time value to which a specified time interval has been added.">包含已添加指定时间间隔的日期和时间值的值。</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;DateValue&quot; /&gt; is not coercible to &lt;see langword=&quot;Date&quot; /&gt;.">
        <paramref name="DateValue" /> 并不强制为 <see langword="Date" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Interval&quot; /&gt; is not valid.">
        <paramref name="Interval" /> 无效。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="Calculated date is before 00:00:00 on January 1 of the year 1, or later than 23:59:59 on December 31, 9999.">计算所得日期早于元年 1 月 1 日 00:00:00，或晚于 9999 年 12 月 31 日 23:59:59。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateDiff(Microsoft.VisualBasic.DateInterval,System.DateTime,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary vsli:raw="Subtracts &lt;paramref name=&quot;Date1&quot; /&gt; from &lt;paramref name=&quot;Date2&quot; /&gt; to give a long value specifying the number of time intervals between the two &lt;see langword=&quot;Date&quot; /&gt; values.">返回一个长值，该长值指定两个 <see langword="Date" /> 值之间的时间间隔数。</summary>
      <param name="Interval" vsli:raw="Required. A &lt;see cref=&quot;T:Microsoft.VisualBasic.DateInterval&quot; /&gt; enumeration value or a string expression representing the time interval you want to use as the unit of difference between &lt;paramref name=&quot;Date1&quot; /&gt; and &lt;paramref name=&quot;Date2&quot; /&gt;.">必需。 <see cref="T:Microsoft.VisualBasic.DateInterval" /> 枚举值或字符串表达式，表示要用作 <paramref name="Date1" /> 和 <paramref name="Date2" /> 之差的单位的时间间隔。</param>
      <param name="Date1" vsli:raw="Required. The first date/time value you want to use in the calculation.">必需。 要在计算中使用的第一个日期/时间值。</param>
      <param name="Date2" vsli:raw="Required. The second date/time value you want to use in the calculation.">必需。 要在计算中使用的第二个日期/时间值。</param>
      <param name="DayOfWeek" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstDayOfWeek&quot; /&gt; enumeration that specifies the first day of the week. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday&quot; /&gt; is used.">可选。 从 <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 枚举中选择的值，用于指定一周的第一天。 如果未指定，则使用 <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" />。</param>
      <param name="WeekOfYear" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstWeekOfYear&quot; /&gt; enumeration that specifies the first week of the year. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1&quot; /&gt; is used.">可选。 从 <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> 枚举中选择的值，用于指定一年的第一周。 如果未指定，则使用 <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" />。</param>
      <returns vsli:raw="A long value specifying the number of time intervals between two &lt;see langword=&quot;Date&quot; /&gt; values.">指定两个 <see langword="Date" /> 值之间的时间间隔数的长值。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Date1&quot; /&gt;, &lt;paramref name=&quot;Date2&quot; /&gt;, or &lt;paramref name=&quot;DayofWeek&quot; /&gt; is out of range.">
        <paramref name="Date1" />、<paramref name="Date2" /> 或 <paramref name="DayofWeek" /> 超出范围。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;Date1&quot; /&gt; or &lt;paramref name=&quot;Date2&quot; /&gt; is of an invalid type.">
        <paramref name="Date1" /> 或 <paramref name="Date2" /> 是无效类型。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary vsli:raw="Subtracts &lt;paramref name=&quot;Date1&quot; /&gt; from &lt;paramref name=&quot;Date2&quot; /&gt; to give a long value specifying the number of time intervals between the two &lt;see langword=&quot;Date&quot; /&gt; values.">返回一个长值，该长值指定两个 <see langword="Date" /> 值之间的时间间隔数。</summary>
      <param name="Interval" vsli:raw="Required. A &lt;see cref=&quot;T:Microsoft.VisualBasic.DateInterval&quot; /&gt; enumeration value or a string expression representing the time interval you want to use as the unit of difference between &lt;paramref name=&quot;Date1&quot; /&gt; and &lt;paramref name=&quot;Date2&quot; /&gt;.">必需。 <see cref="T:Microsoft.VisualBasic.DateInterval" /> 枚举值或字符串表达式，表示要用作 <paramref name="Date1" /> 和 <paramref name="Date2" /> 之差的单位的时间间隔。</param>
      <param name="Date1" vsli:raw="Required. The first date/time value you want to use in the calculation.">必需。 要在计算中使用的第一个日期/时间值。</param>
      <param name="Date2" vsli:raw="Required. The second date/time value you want to use in the calculation.">必需。 要在计算中使用的第二个日期/时间值。</param>
      <param name="DayOfWeek" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstDayOfWeek&quot; /&gt; enumeration that specifies the first day of the week. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday&quot; /&gt; is used.">可选。 从 <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 枚举中选择的值，用于指定一周的第一天。 如果未指定，则使用 <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" />。</param>
      <param name="WeekOfYear" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstWeekOfYear&quot; /&gt; enumeration that specifies the first week of the year. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1&quot; /&gt; is used.">可选。 从 <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> 枚举中选择的值，用于指定一年的第一周。 如果未指定，则使用 <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" />。</param>
      <returns vsli:raw="A long value specifying the number of time intervals between two &lt;see langword=&quot;Date&quot; /&gt; values.">指定两个 <see langword="Date" /> 值之间的时间间隔数的长值。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Date1&quot; /&gt;, &lt;paramref name=&quot;Date2&quot; /&gt;, or &lt;paramref name=&quot;DayofWeek&quot; /&gt; is out of range.">
        <paramref name="Date1" />、<paramref name="Date2" /> 或 <paramref name="DayofWeek" /> 超出范围。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;Date1&quot; /&gt; or &lt;paramref name=&quot;Date2&quot; /&gt; is of an invalid type.">
        <paramref name="Date1" /> 或 <paramref name="Date2" /> 是无效类型。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DatePart(Microsoft.VisualBasic.DateInterval,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary vsli:raw="Returns an integer value containing the specified component of a given &lt;see langword=&quot;Date&quot; /&gt; value.">返回包含给定 <see langword="Date" /> 值的指定组件的整数值。</summary>
      <param name="Interval" vsli:raw="Required. A &lt;see cref=&quot;T:Microsoft.VisualBasic.DateInterval&quot; /&gt; enumeration value or a string expression representing the part of the date/time value you want to return.">必需。 <see cref="T:Microsoft.VisualBasic.DateInterval" /> 枚举值或字符串表达式，它表示要返回的日期/时间值部分。</param>
      <param name="DateValue" vsli:raw="Required. The &lt;see langword=&quot;Date&quot; /&gt; value that you want to evaluate.">必需。 要计算的 <see langword="Date" /> 值。</param>
      <param name="FirstDayOfWeekValue" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstDayOfWeek&quot; /&gt; enumeration that specifies the first day of the week. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday&quot; /&gt; is used.">可选。 从 <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 枚举中选择的值，用于指定一周的第一天。 如果未指定，则使用 <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" />。</param>
      <param name="FirstWeekOfYearValue" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstWeekOfYear&quot; /&gt; enumeration that specifies the first week of the year. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1&quot; /&gt; is used.">可选。 从 <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> 枚举中选择的值，用于指定一年的第一周。 如果未指定，则使用 <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" />。</param>
      <returns vsli:raw="An integer value containing the specified component of a given &lt;see langword=&quot;Date&quot; /&gt; value.">包含给定 <see langword="Date" /> 值的指定组件的整数值。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Interval&quot; /&gt; is not valid.">
        <paramref name="Interval" /> 无效。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;DateValue&quot; /&gt; is not coercible to &lt;see langword=&quot;Date&quot; /&gt;.">
        <paramref name="DateValue" /> 并不强制为 <see langword="Date" />。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary vsli:raw="Returns an value containing the specified component of a given &lt;see langword=&quot;Date&quot; /&gt; value.">返回一个值，其中包含给定 <see langword="Date" /> 值的指定组件。</summary>
      <param name="Interval" vsli:raw="Required. A &lt;see cref=&quot;T:Microsoft.VisualBasic.DateInterval&quot; /&gt; enumeration value or a string expression representing the part of the date/time value you want to return.">必需。 <see cref="T:Microsoft.VisualBasic.DateInterval" /> 枚举值或字符串表达式，它表示要返回的日期/时间值部分。</param>
      <param name="DateValue" vsli:raw="Required. A &lt;see langword=&quot;Date&quot; /&gt; value that you want to evaluate.">必需。 要计算的 <see langword="Date" /> 值。</param>
      <param name="DayOfWeek" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstDayOfWeek&quot; /&gt; enumeration that specifies the first day of the week. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday&quot; /&gt; is used.">可选。 从 <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 枚举中选择的值，用于指定一周的第一天。 如果未指定，则使用 <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" />。</param>
      <param name="WeekOfYear" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstWeekOfYear&quot; /&gt; enumeration that specifies the first week of the year. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1&quot; /&gt; is used.">可选。 从 <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> 枚举中选择的值，用于指定一年的第一周。 如果未指定，则使用 <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" />。</param>
      <returns vsli:raw="An integer value containing the specified component of a given &lt;see langword=&quot;Date&quot; /&gt; value.">包含给定 <see langword="Date" /> 值的指定组件的整数值。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Interval&quot; /&gt; is invalid.">
        <paramref name="Interval" /> 无效。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;DateValue&quot; /&gt; is not coercible to &lt;see langword=&quot;Date&quot; /&gt;.">
        <paramref name="DateValue" /> 并不强制为 <see langword="Date" />。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Date&quot; /&gt; value representing the specified year, month, and day, with the time information set to midnight (00:00:00).">返回表示已指定年月日的 <see langword="Date" /> 值，其时间信息被设置为午夜 (00:00:00)。</summary>
      <param name="Year" vsli:raw="Required. Integer expression from 1 through 9999. However, values below this range are also accepted. If &lt;paramref name=&quot;Year&quot; /&gt; is 0 through 99, it is interpreted as being between 1930 and 2029, as explained in the &quot;Remarks&quot; section. If &lt;paramref name=&quot;Year&quot; /&gt; is less than 1, it is subtracted from the current year.">必需。 范围为 1 到 9999 的整数表达式。 但是，也接受小于此范围的值。 如果 <paramref name="Year" /> 为 0 到 99，它被解释为介于 1930 年和 2029 年之间，下面的"备注"部分对此做了解释。 如果 <paramref name="Year" /> 小于 1，则从当前年份减去它。</param>
      <param name="Month" vsli:raw="Required. Integer expression from 1 through 12. However, values outside this range are also accepted. The value of &lt;paramref name=&quot;Month&quot; /&gt; is offset by 1 and applied to January of the calculated year. In other words, (&lt;paramref name=&quot;Month&quot; /&gt; - 1) is added to January. The year is recalculated if necessary. The following results illustrate this effect:  &#xA;  &#xA; If &lt;paramref name=&quot;Month&quot; /&gt; is 1, the result is January of the calculated year.  &#xA;  &#xA; If &lt;paramref name=&quot;Month&quot; /&gt; is 0, the result is December of the previous year.  &#xA;  &#xA; If &lt;paramref name=&quot;Month&quot; /&gt; is -1, the result is November of the previous year.  &#xA;  &#xA; If &lt;paramref name=&quot;Month&quot; /&gt; is 13, the result is January of the following year.">必需。 范围为 1 到 12 的整数表达式。 但是，也接受此范围之外的值。 <paramref name="Month" /> 值的偏移量为 1，且该值应用于所计算年份的 1 月。 换言之，就是 1 月加上 (<paramref name="Month" /> - 1)。 若有必要则对年份进行重新计算。 以下的结果阐释了这种效果： 
如果 <paramref name="Month" /> 为 1，则结果为所计算年份的 1 月。  
如果 <paramref name="Month" /> 为 0，则结果为上一年的 12 月。  
如果 <paramref name="Month" /> 为 -1，则结果为上一年的 11 月。  
如果 <paramref name="Month" /> 为 13，则结果为下一年的 1 月。</param>
      <param name="Day" vsli:raw="Required. Integer expression from 1 through 31. However, values outside this range are also accepted. The value of &lt;paramref name=&quot;Day&quot; /&gt; is offset by 1 and applied to the first day of the calculated month. In other words, (&lt;paramref name=&quot;Day&quot; /&gt; - 1) is added to the first of the month. The month and year are recalculated if necessary. The following results illustrate this effect:  &#xA;  &#xA; If &lt;paramref name=&quot;Day&quot; /&gt; is 1, the result is the first day of the calculated month.  &#xA;  &#xA; If &lt;paramref name=&quot;Day&quot; /&gt; is 0, the result is the last day of the previous month.  &#xA;  &#xA; If &lt;paramref name=&quot;Day&quot; /&gt; is -1, the result is the penultimate day of the previous month.  &#xA;  &#xA; If &lt;paramref name=&quot;Day&quot; /&gt; is past the end of the current month, the result is the appropriate day of the following month. For example, if &lt;paramref name=&quot;Month&quot; /&gt; is 4 and &lt;paramref name=&quot;Day&quot; /&gt; is 31, the result is May 1.">必需。 范围为 1 到 31 的 Integer 表达式。 但是，也接受此范围之外的值。 <paramref name="Day" /> 值偏移量为 1，该值应用于所计算月份的第一天。 换言之，就是该月份的第一天加上 (<paramref name="Day" /> - 1)。 若有必要，则对月份和年份进行重新计算。 以下的结果阐释了这种效果： 
如果 <paramref name="Day" /> 为 1，则结果为所计算月份的第一天。  
如果 <paramref name="Day" /> 为 0，则结果为上一月份的最后一天。  
如果 <paramref name="Day" /> 为 -1，则结果为上一月份的倒数第二天。  
如果 <paramref name="Day" /> 超过当前月份的月末，则结果为下一月份中相应的一天。 例如，如果 <paramref name="Month" /> 为 4 且 <paramref name="Day" /> 为 31，则结果为 5 月 1 日。</param>
      <returns vsli:raw="A value that represents the specified year, month, and day, with the time information set to midnight (00:00:00).">表示已指定年月日的 <see langword="Date" /> 值，其时间信息被设置为午夜 (00:00:00)。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.DateString">
      <summary vsli:raw="Returns or sets a string value representing the current date according to your system.">返回或设置一个字符串值，该值表示与系统对应的当前日期。</summary>
      <returns vsli:raw="Returns or sets a string value representing the current date according to your system.">返回或设置一个字符串值，该值表示与系统对应的当前日期。</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="Invalid format used to set the value of &lt;see cref=&quot;P:Microsoft.VisualBasic.DateAndTime.DateString&quot; /&gt;.">用于设置 <see cref="P:Microsoft.VisualBasic.DateAndTime.DateString" /> 值的格式无效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateValue(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Date&quot; /&gt; value containing the date information represented by a string, with the time information set to midnight (00:00:00).">返回一个 <see langword="Date" /> 值，该值包含用字符串表示的日期信息，其时间信息设置为午夜 (00:00:00)。</summary>
      <param name="StringDate" vsli:raw="Required. string expression representing a date/time value from 00:00:00 on January 1 of the year 1 through 23:59:59 on December 31, 9999.">必需。 字符串表达式，表示 1 年 1 月 1 日 00:00:00 到 9999 年 12 月 31 日 23:59:59 之间的一个日期/时间值。</param>
      <returns vsli:raw="A &lt;see langword=&quot;Date&quot; /&gt; value containing the date information represented by a string, with the time information set to midnight (00:00:00).">
        <see langword="Date" /> 值，它包含由字符串表示的日期信息，其中的时间信息设置为午夜 (00:00:00)。</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;StringDate&quot; /&gt; includes invalid time information.">
        <paramref name="StringDate" /> 包含无效的时间信息。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)">
      <summary vsli:raw="Returns an integer value from 1 through 31 representing the day of the month.">返回表示月中第几天的整数值，该值介于 1 和 31 之间。</summary>
      <param name="DateValue" vsli:raw="Required. A &lt;see langword=&quot;Date&quot; /&gt; value from which you want to extract the day.">必需。 要从中提取天的 <see langword="Date" /> 值。</param>
      <returns vsli:raw="An integer value from 1 through 31 representing the day of the month.">介于 1 和 31 之间表示月中第几天的整数值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)">
      <summary vsli:raw="Returns an integer value from 0 through 23 representing the hour of the day.">返回表示天中第几个小时的整数值，该值介于 0 和 23 之间。</summary>
      <param name="TimeValue" vsli:raw="Required. A &lt;see langword=&quot;Date&quot; /&gt; value from which you want to extract the hour.">必需。 要从中提取小时的 <see langword="Date" /> 值。</param>
      <returns vsli:raw="An integer value from 0 through 23 representing the hour of the day.">介于 0 和 23 之间表示一天中第几个小时的整数值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)">
      <summary vsli:raw="Returns an integer value from 0 through 59 representing the minute of the hour.">返回表示一小时内第几分钟的整数值，该值介于 0 和 59 之间。</summary>
      <param name="TimeValue" vsli:raw="Required. A &lt;see langword=&quot;Date&quot; /&gt; value from which you want to extract the minute.">必需。 要从中提取分钟的 <see langword="Date" /> 值。</param>
      <returns vsli:raw="An integer value from 0 through 59 representing the minute of the hour.">介于 0 和 59 之间表示一小时内第几分钟的整数值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)">
      <summary vsli:raw="Returns an integer value from 1 through 12 representing the month of the year.">返回表示一年中第几个月的整数值，该值介于 1 和 12 之间。</summary>
      <param name="DateValue" vsli:raw="Required. A &lt;see langword=&quot;Date&quot; /&gt; value from which you want to extract the month.">必需。 要从中提取月的 <see langword="Date" /> 值。</param>
      <returns vsli:raw="An integer value from 1 through 12 representing the month of the year.">介于 1 和 12 之间表示一年中第几个月的整数值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.MonthName(System.Int32,System.Boolean)">
      <summary vsli:raw="Returns a string value containing the name of the specified month.">返回包含指定月份名称的字符串值。</summary>
      <param name="Month" vsli:raw="Required. The numeric designation of the month, from 1 through 13; 1 indicates January and 12 indicates December. You can use the value 13 with a 13-month calendar. If your system is using a 12-month calendar and &lt;paramref name=&quot;Month&quot; /&gt; is 13, &lt;c&gt;MonthName&lt;/c&gt; returns an empty string.">必需。 以数字表示的月份，介于 1 到 13 之间；1 表示 1 月，12 表示 12 月。 值 13 可用于 13 月制日历。 若系统正在使用 12 月制日历，而 <paramref name="Month" /> 为 13，则 MonthName 返回一个空字符串<c></c>。</param>
      <param name="Abbreviate" vsli:raw="Optional. &lt;see langword=&quot;True&quot; /&gt; to abbreviate the month name; otherwise, &lt;see langword=&quot;False&quot; /&gt;. The default is &lt;see langword=&quot;False&quot; /&gt;.">可选。 为 <see langword="True" /> 则缩写月份名称；否则为 <see langword="False" />。 默认值为 <see langword="False" />。</param>
      <returns vsli:raw="A string value containing the name of the specified month.">包含指定月份名称的字符串值。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Month&quot; /&gt; is less than 1 or greater than 13.">
        <paramref name="Month" /> 小于 1 或大于 13。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.Now">
      <summary vsli:raw="Returns a value containing the current date and time according to your system.">返回一个值，该值包含与系统对应的当前日期和时间。</summary>
      <returns vsli:raw="The current date and time according to your system.">根据系统的当前日期和时间。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)">
      <summary vsli:raw="Returns an integer value from 0 through 59 representing the second of the minute.">返回表示一分钟内第几秒的整数值，该值介于 0 和 59 之间。</summary>
      <param name="TimeValue" vsli:raw="Required. A &lt;see langword=&quot;Date&quot; /&gt; value from which you want to extract the second.">必需。 要从中提取秒的 <see langword="Date" /> 值。</param>
      <returns vsli:raw="An integer value from 0 through 59 representing the second of the minute.">介于 0 和 59 之间表示一分钟内第几秒的整数值。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay">
      <summary vsli:raw="Returns or sets a &lt;see langword=&quot;Date&quot; /&gt; value containing the current time of day according to your system.">返回或设置 <see langword="Date" /> 值，该值包含与系统对应的当前时间。</summary>
      <returns vsli:raw="Returns or sets a &lt;see langword=&quot;Date&quot; /&gt; value containing the current time of day according to your system.">返回或设置 <see langword="Date" /> 值，该值包含与系统对应的当前时间。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.Timer">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Double&quot; /&gt; value representing the number of seconds elapsed since midnight.">返回一个 <see cref="T:System.Double" /> 值，该值表示午夜之后的秒数。</summary>
      <returns vsli:raw="A value representing the number of seconds elapsed since midnight.">一个值, 该值表示从午夜开始所经过的秒数。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Date&quot; /&gt; value representing a specified hour, minute, and second, with the date information set relative to January 1 of the year 1.">返回一个 <see langword="Date" /> 值，该值表示指定的小时、分钟和秒，其日期信息设置基点为元年 1 月 1 日。</summary>
      <param name="Hour" vsli:raw="Required. Integer expression from 0 through 23. However, values outside this range are also accepted.">必需。 范围为 0 到 23 的整数表达式。 但是，也接受此范围之外的值。</param>
      <param name="Minute" vsli:raw="Required. Integer expression from 0 through 59. However, values outside this range are also accepted. The value of &lt;paramref name=&quot;Minute&quot; /&gt; is added to the calculated hour, so a negative value specifies minutes before that hour.">必需。 范围为 0 到 59 的整数表达式。 但是，也接受此范围之外的值。 <paramref name="Minute" /> 的值加入所计算的小时，因此负值指定该小时前的某几分钟。</param>
      <param name="Second" vsli:raw="Required. Integer expression from 0 through 59. However, values outside this range are also accepted. The value of &lt;paramref name=&quot;Second&quot; /&gt; is added to the calculated minute, so a negative value specifies seconds before that minute.">必需。 范围为 0 到 59 的整数表达式。 但是，也接受此范围之外的值。 <paramref name="Second" /> 的值加入所计算的分钟，因此负值指定该分钟前的某几秒。</param>
      <returns vsli:raw="A &lt;see langword=&quot;Date&quot; /&gt; value representing a specified hour, minute, and second, with the date information set relative to January 1 of the year 1.">一个 <see langword="Date" /> 值，该值表示指定的小时、分钟和秒，其日期信息设置基点为元年 1 月 1 日。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="An argument is outside the range -2,147,483,648 through 2,147,483,647">-2,147,483,648 到 2,147,483,647 范围以外的参数。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="Calculated time is less than negative 24 hours.">计算所得的时间小于负 24 小时。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.TimeString">
      <summary vsli:raw="Returns or sets a string value representing the current time of day according to your system.">根据系统返回或设置表示当前时间的字符串值。</summary>
      <returns vsli:raw="Returns or sets a string value representing the current time of day according to your system.">根据系统返回或设置表示当前时间的字符串值。</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="Invalid format used to set the value of &lt;see langword=&quot;TimeString&quot; /&gt;.">用于设置 <see langword="TimeString" /> 值的格式无效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Date&quot; /&gt; value containing the time information represented by a string, with the date information set to January 1 of the year 1.">返回一个 <see langword="Date" /> 值，该值包含以字符串表示的时间信息，其日期信息设置为元年 1 月 1 日。</summary>
      <param name="StringTime" vsli:raw="Required. A string expression representing a date/time value from 00:00:00 on January 1 of the year 1 through 23:59:59 on December 31, 9999.">必需。 字符串表达式，表示 1 年 1 月 1 日 00:00:00 到 9999 年 12 月 31 日 23:59:59 之间的一个日期/时间值。</param>
      <returns vsli:raw="A &lt;see langword=&quot;Date&quot; /&gt; value containing the time information represented by a string, with the date information set to January 1 of the year 1.">一个 <see langword="Date" /> 值，该值包含以字符串表示的时间信息，其日期信息设置为元年 1 月 1 日。</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;StringTime&quot; /&gt; includes invalid date information.">
        <paramref name="StringTime" /> 包含无效的日期信息。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.Today">
      <summary vsli:raw="Returns or sets a &lt;see langword=&quot;Date&quot; /&gt; value containing the current date according to your system.">返回或设置一个 <see langword="Date" /> 值，该值包含对应于系统的当前日期。</summary>
      <returns vsli:raw="Returns or sets a &lt;see langword=&quot;Date&quot; /&gt; value containing the current date according to your system.">返回或设置一个 <see langword="Date" /> 值，该值包含对应于系统的当前日期。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)">
      <summary vsli:raw="Returns an integer value containing a number representing the day of the week.">返回包含表示星期几的数字的整数值。</summary>
      <param name="DateValue" vsli:raw="Required. A &lt;see langword=&quot;Date&quot; /&gt; value for which you want to determine the day of the week.">必需。 要确定属于一周中的哪一天的 <see langword="Date" /> 值。</param>
      <param name="DayOfWeek" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstDayOfWeek&quot; /&gt; enumeration that specifies the first day of the week. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday&quot; /&gt; is used.">可选。 从 <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 枚举中选择的值，用于指定一周的第一天。 如果未指定，则使用 <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" />。</param>
      <returns vsli:raw="An integer value containing a number representing the day of the week.">包含表示星期几的数字的整数值。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;DayOfWeek&quot; /&gt; is less than 0 or more than 7.">
        <paramref name="DayOfWeek" /> 小于 0 或大于 7。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)">
      <summary vsli:raw="Returns a string value containing the name of the specified weekday.">返回包含指定工作日的名称的整数值。</summary>
      <param name="Weekday" vsli:raw="Required. Integer. The numeric designation for the weekday, from 1 through 7; 1 indicates the first day of the week and 7 indicates the last day of the week. The identities of the first and last days depend on the setting of &lt;paramref name=&quot;FirstDayOfWeekValue&quot; /&gt;.">必需。 Integer。 以数字表示的周几，介于 1 到 7 之间；1 表示一周的第一天，7 表示一周的最后一天。 第一天和最后一天指的是哪一天取决于 <paramref name="FirstDayOfWeekValue" /> 的设置。</param>
      <param name="Abbreviate" vsli:raw="Optional. &lt;see langword=&quot;Boolean&quot; /&gt; value that indicates if the weekday name is to be abbreviated. If omitted, the default is &lt;see langword=&quot;False&quot; /&gt;, which means the weekday name is not abbreviated.">可选。 指示是否缩写周几的名称的 <see langword="Boolean" /> 值。 如果省略，则默认为 <see langword="False" />，表示星期几的名称不缩写。</param>
      <param name="FirstDayOfWeekValue" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstDayOfWeek&quot; /&gt; enumeration that specifies the first day of the week. If not specified, &lt;see langword=&quot;FirstDayOfWeek.System&quot; /&gt; is used.">可选。 从 <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 枚举中选择的值，用于指定一周的第一天。 如果未指定，则使用 <see langword="FirstDayOfWeek.System" />。</param>
      <returns vsli:raw="A string value containing the name of the specified weekday.">包含指定工作日的名称的整数值。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Weekday&quot; /&gt; is less than 1 or greater than 7, or &lt;paramref name=&quot;FirstDayOfWeekValue&quot; /&gt; is less than 0 or greater than 7.">
        <paramref name="Weekday" /> 小于 1 或大于 7，或 <paramref name="FirstDayOfWeekValue" /> 小于 0 或大于 7。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)">
      <summary vsli:raw="Returns an integer value from 1 through 9999 representing the year.">返回表示年的 1 到 9999 之间的整数值。</summary>
      <param name="DateValue" vsli:raw="Required. A &lt;see langword=&quot;Date&quot; /&gt; value from which you want to extract the year.">必需。 要从中提取年的 <see langword="Date" /> 值。</param>
      <returns vsli:raw="An integer value from 1 through 9999 representing the year.">表示年的 1 到 9999 之间的整数值。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.DateFormat">
      <summary vsli:raw="Indicates how to display dates when calling the &lt;see langword=&quot;FormatDateTime&quot; /&gt; function.">指示在调用 <see langword="FormatDateTime" /> 函数时如何显示日期。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.GeneralDate">
      <summary vsli:raw="For real numbers, displays a date and time. If the number has no fractional part, displays only a date. If the number has no integer part, displays time only. Date and time display is determined by your computer's regional settings. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbGeneralDate&quot; /&gt;.">对于实数，显示日期和时间。 如果该数字没有小数部分，则只显示日期。 如果该数字没有整数部分，则只显示时间。 日期和时间显示取决于计算机的区域设置。 此成员等效于 Visual Basic 常量 <see langword="vbGeneralDate" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.LongDate">
      <summary vsli:raw="Displays a date using the long-date format specified in your computer's regional settings. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbLongDate&quot; /&gt;.">使用计算机的区域设置中指定的长日期格式显示日期。 此成员等效于 Visual Basic 常量 <see langword="vbLongDate" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.LongTime">
      <summary vsli:raw="Displays a time using the long-time format specified in your computer's regional settings. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbLongTime&quot; /&gt;.">按计算机中区域设置指定的长时间格式显示时间。 此成员等效于 Visual Basic 常量 <see langword="vbLongTime" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.ShortDate">
      <summary vsli:raw="Displays a date using the short-date format specified in your computer's regional settings. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbShortDate&quot; /&gt;.">使用计算机的区域设置中指定的短日期格式显示日期。 此成员等效于 Visual Basic 常量 <see langword="vbShortDate" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.ShortTime">
      <summary vsli:raw="Displays a time using the short-time format specified in your computer's regional settings. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbShortTime&quot; /&gt;.">按计算机中区域设置指定的短时间格式显示时间。 此成员等效于 Visual Basic 常量 <see langword="vbShortTime" />。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.DateInterval">
      <summary vsli:raw="Indicates how to determine and format date intervals when calling date-related functions.">指示当调用与日期相关的函数时如何确定日期间隔并设置其格式。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Day">
      <summary vsli:raw="Day of month (1 through 31)">一月的某一日（1 到 31）</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.DayOfYear">
      <summary vsli:raw="Day of year (1 through 366)">年中的哪一天（从 1 到 366）</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Hour">
      <summary vsli:raw="Hour (0 through 23)">几点钟（从 0 到 23）</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Minute">
      <summary vsli:raw="Minute (0 through 59)">第几分钟（从 0 到 59）</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Month">
      <summary vsli:raw="Month (1 through 12)">哪个月（从 1 到 12）</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Quarter">
      <summary vsli:raw="Quarter of year (1 through 4)">哪个季度（从 1 到 4）</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Second">
      <summary vsli:raw="Second (0 through 59)">第几秒（从 0 到 59）</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Weekday">
      <summary vsli:raw="Day of week (1 through 7)">星期几（从 1 到 7）</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.WeekOfYear">
      <summary vsli:raw="Week of year (1 through 53)">年中的哪一周（从 1 到 53）</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Year">
      <summary vsli:raw="Year.">年份</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Audio">
      <summary>提供了用于播放音频的方法。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Audio.#ctor">
      <summary>初始化 <see cref="T:Microsoft.VisualBasic.Devices.Audio" /> 类的新实例。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Clock">
      <summary>提供了用于从系统时钟访问当前本地时间和协调世界时（相当于格林威治标准时间）的属性。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Clock.#ctor">
      <summary>初始化 <see cref="T:Microsoft.VisualBasic.Devices.Clock" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Clock.GmtTime">
      <summary>获取一个 <see langword="Date" /> 对象，该对象包含以 UTC (GMT) 时间表示的计算机的当前本地日期和时间。</summary>
      <returns>一个 <see langword="Date" /> 对象，包含以 UTC (GMT) 时间表示的当前日期和时间。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Clock.LocalTime">
      <summary>获取一个 <see langword="Date" /> 对象，该对象包含此计算机上的当前本地日期和时间。</summary>
      <returns>一个 <see langword="Date" /> 对象，包含当前本地日期和时间。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Clock.TickCount">
      <summary>获取来自计算机的系统计时器的毫秒计数。</summary>
      <returns>一个 <see langword="Integer" />，包含计算机系统计时器中以毫秒为单位的计数。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Computer">
      <summary>提供了用于操控计算机组件（如音频、时钟、键盘、文件系统等）的属性。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Computer.#ctor">
      <summary>初始化 <see cref="T:Microsoft.VisualBasic.Devices.Computer" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Audio">
      <summary>获取一个对象，该对象为用于播放声音的方法提供属性。</summary>
      <returns>计算机的 <see langword="My.Computer.Audio" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Clipboard">
      <summary>获取一个对象，该对象提供用于操作剪贴板的方法。</summary>
      <returns>计算机的 <see langword="My.Computer.Clipboard" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Keyboard">
      <summary>获取一个对象，该对象提供了用于访问键盘当前状态（例如，当前按下了什么键）的属性，并提供了向活动窗口发送键击的方法。</summary>
      <returns>计算机的 <see langword="My.Computer.Keyboard" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Mouse">
      <summary>获取一个对象，该对象提供用于获取有关本地计算机中安装的鼠标的格式和配置信息的属性。</summary>
      <returns>计算机的 <see langword="My.Computer.Mouse" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Ports">
      <summary>获取一个对象，该对象提供用于访问计算机的串行端口的属性和方法。</summary>
      <returns>
        <see langword="My.Computer.Ports" /> 对象。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.ComputerInfo">
      <summary>提供了用于获取计算机内存、已加载程序集、名称和操作系统相关信息的属性。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.ComputerInfo.#ctor">
      <summary>初始化 <see cref="T:Microsoft.VisualBasic.Devices.ComputerInfo" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.AvailablePhysicalMemory">
      <summary>获取计算机的可用物理内存总量。</summary>
      <returns>一个 <see langword="ULong" /> 值，包含计算机的可用物理内存的字节数。</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">应用程序无法获取内存状态。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.AvailableVirtualMemory">
      <summary>获取计算机的可用虚拟地址空间的总量。</summary>
      <returns>一个 <see langword="ULong" /> 值，包含计算机的可用虚拟地址空间的字节数。</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">应用程序无法获取内存状态。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.InstalledUICulture">
      <summary>获取随操作系统安装的当前用户界面区域性。</summary>
      <returns>表示在计算机上安装的 UI 区域性的 <see cref="T:System.Globalization.CultureInfo" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.OSPlatform">
      <summary>获取计算机的操作系统的平台标识符。</summary>
      <returns>一个包含计算机操作系统的平台标识符的 <see langword="String" />，此字符串是从 <see cref="T:System.PlatformID" /> 枚举的成员名称中选择的。</returns>
      <exception cref="T:System.ExecutionEngineException">应用程序无法获取操作系统平台信息。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.OSVersion">
      <summary>获取计算机操作系统的版本。</summary>
      <returns>一个 <see langword="String" /> 值，包含操作系统的当前版本号。</returns>
      <exception cref="T:System.ExecutionEngineException">应用程序无法获取操作系统版本信息。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.TotalPhysicalMemory">
      <summary>获取计算机的物理内存总量。</summary>
      <returns>一个 <see langword="ULong" /> 值，包含计算机的物理内存的字节数。</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">应用程序无法获取内存状态。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.TotalVirtualMemory">
      <summary>获取计算机的可用虚拟地址空间的总量。</summary>
      <returns>一个 <see langword="ULong" /> 值，包含计算机的可用虚拟地址空间的字节数。</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">应用程序无法获取内存状态。</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Keyboard">
      <summary>提供了用于访问键盘当前状态（如当前按下了哪些键）的属性，并提供了用于将击键发送到活动窗口的方法。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Keyboard.#ctor">
      <summary>初始化 <see cref="T:Microsoft.VisualBasic.Devices.Keyboard" /> 类的新实例。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Mouse">
      <summary>提供用于获取本地计算机中所安装鼠标的型号和配置信息的属性。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Mouse.#ctor">
      <summary>初始化 <see cref="T:Microsoft.VisualBasic.Devices.Mouse" /> 类的新实例。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Network">
      <summary>提供用于与计算机所连接的网络进行交互的属性、事件和方法。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.#ctor">
      <summary>初始化 <see cref="T:Microsoft.VisualBasic.Devices.Network" /> 类的新实例。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs">
      <summary>提供有关 <see langword="My.Application.NetworkAvailabilityChanged" /> 和 <see langword="My.Computer.Network.NetworkAvailabilityChanged" /> 事件的数据。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.#ctor(System.Boolean)">
      <summary>初始化 <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs" /> 类的新实例。</summary>
      <param name="networkAvailable">一个 <see cref="T:System.Boolean" />，指示网络是否可供该应用程序使用。</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.IsNetworkAvailable">
      <summary>获取一个值，该值指示网络是否可供该应用程序使用。</summary>
      <returns>一个 <see cref="T:System.Boolean" />，指示网络是否可供该应用程序使用。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Ports">
      <summary>提供了用于访问计算机的串行端口的属性和方法。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Ports.#ctor">
      <summary>初始化 <see cref="T:Microsoft.VisualBasic.Devices.Ports" /> 类的新实例。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.ServerComputer">
      <summary>提供了用于操控计算机组件（如音频、时钟、键盘、文件系统等）的属性。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.ServerComputer.#ctor">
      <summary>初始化 <see cref="T:Microsoft.VisualBasic.Devices.ServerComputer" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Clock">
      <summary>获取一个对象，该对象可提供用于从系统时钟访问当前的本地时间和协调通用时间（与格林尼治标准时间相同）的属性。</summary>
      <returns>计算机的 <see langword="My.Computer.Clock" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.FileSystem">
      <summary>获取一个对象，该对象提供用于处理驱动器、文件和目录的属性和方法。</summary>
      <returns>计算机的 <see langword="My.Computer.FileSystem" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Info">
      <summary>获取一个对象，该对象提供用于获取有关计算机内存、已加载的程序集、名称和操作系统的信息的属性。</summary>
      <returns>计算机的 <see langword="My.Computer.Info" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Name">
      <summary>获取计算机名称。</summary>
      <returns>一个包含此计算机的名称的 <see langword="String" />。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Network">
      <summary>获取一个对象，该对象提供用于与计算机所连接的网络进行交互的属性和方法。</summary>
      <returns>计算机的 <see langword="My.Computer.Network" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry">
      <summary>获取一个对象，该对象提供用于操作注册表的属性和方法。</summary>
      <returns>计算机的 <see langword="My.Computer.Registry" /> 对象。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.DueDate">
      <summary vsli:raw="Indicates when payments are due when calling financial methods.">指示在调用财务方法时付款何时到期。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DueDate.BegOfPeriod">
      <summary vsli:raw="Falls at the beginning of the date interval.">在日期间隔开始时</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DueDate.EndOfPeriod">
      <summary vsli:raw="Falls at the end of the date interval.">在日期间隔结束时</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ErrObject">
      <summary vsli:raw="The &lt;see langword=&quot;ErrObject&quot; /&gt; module contains properties and procedures used to identify and handle run-time errors using the &lt;see langword=&quot;Err&quot; /&gt; object.">
        <see langword="ErrObject" /> 模块包含用于使用 <see langword="Err" /> 对象标识和处理运行时错误的属性和过程。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ErrObject.Clear">
      <summary vsli:raw="Clears all property settings of the &lt;see langword=&quot;Err&quot; /&gt; object.">清除 <see langword="Err" /> 对象的所有属性设置。</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.Description">
      <summary vsli:raw="Returns or sets a &lt;see langword=&quot;String&quot; /&gt; expression containing a descriptive string associated with an error. Read/write.">返回或设置 <see langword="String" /> 表达式，该表达式包含与某个错误关联的描述性字符串。 读/写。</summary>
      <returns vsli:raw="Returns or sets a &lt;see langword=&quot;String&quot; /&gt; expression containing a descriptive string associated with an error. Read/write.">返回或设置 <see langword="String" /> 表达式，该表达式包含与某个错误关联的描述性字符串。 读/写。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.Erl">
      <summary vsli:raw="Gets an integer indicating the line number of the last executed statement.">获取指示上一条执行语句的行号的整数。</summary>
      <returns vsli:raw="The line number of the last executed statement.">最后执行的语句的行号。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ErrObject.GetException">
      <summary vsli:raw="Returns the exception representing the error that occurred.">返回表示所发生错误的异常。</summary>
      <returns vsli:raw="The exception representing the error that occurred.">表示所发生错误的异常。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.LastDllError">
      <summary vsli:raw="Gets a system error code produced by a call to a dynamic-link library (DLL).">获取调用动态链接库 (DLL) 所产生的系统错误代码。</summary>
      <returns vsli:raw="A system error code produced by a call to a dynamic-link library (DLL).">调用动态链接库 (DLL) 所产生的系统错误代码。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.Number">
      <summary vsli:raw="Returns or sets a numeric value specifying an error. Read/write.">返回或设置指定错误的数值。 读/写。</summary>
      <returns vsli:raw="Returns or sets a numeric value specifying an error. Read/write.">返回或设置指定错误的数值。 读/写。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is greater than 65535.">
        <paramref name="Number" /> 大于 65535。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
      <summary vsli:raw="Generates a run-time error; can be used instead of the &lt;see langword=&quot;Error&quot; /&gt; statement.">生成一个运行时错误；可以替代 <see langword="Error" /> 语句使用。</summary>
      <param name="Number" vsli:raw="Required. &lt;see langword=&quot;Long&quot; /&gt; integer that identifies the nature of the error. Visual Basic errors are in the range 0-65535; the range 0-512 is reserved for system errors; the range 513-65535 is available for user-defined errors. When setting the &lt;see langword=&quot;Number&quot; /&gt; property to your own error code in a class module, you add your error code number to the &lt;see langword=&quot;vbObjectError&quot; /&gt; constant. For example, to generate the error number 513, assign &lt;c&gt;vbObjectError + 513&lt;/c&gt; to the &lt;see langword=&quot;Number&quot; /&gt; property.">必需。 标识错误本质的 <see langword="Long" /> 整数。 Visual Basic 错误处于 0 到 65535 的范围内：范围 0 到 512 保留用于系统错误，范围 513 到 65535 则用于用户定义的错误。 当在类模块中将 <see langword="Number" /> 属性设置为您自己的错误代码时，将错误代码号添加到 <see langword="vbObjectError" /> 常数。 例如，将 <c>vbObjectError + 513</c> 分配给 <see langword="Number" /> 属性，生成错误号 513。</param>
      <param name="Source" vsli:raw="Optional. &lt;see langword=&quot;String&quot; /&gt; expression naming the object or application that generated the error. When setting this property for an object, use the form &lt;c&gt;project&lt;/c&gt;.&lt;c&gt;class&lt;/c&gt;. If &lt;paramref name=&quot;Source&quot; /&gt; is not specified, the process ID of the current Visual Basic project is used.">可选。 <see langword="String" /> 表达式，用于命名生成错误的对象或应用程序。 设置对象的这一属性时，应使用如下形式：<c>project</c>.<c>class</c>。 如果未指定 <paramref name="Source" />，则使用当前 Visual Basic 项目的进程 ID。</param>
      <param name="Description" vsli:raw="Optional. &lt;see langword=&quot;String&quot; /&gt; expression describing the error. If unspecified, the value in the &lt;see langword=&quot;Number&quot; /&gt; property is examined. If it can be mapped to a Visual Basic run-time error code, the string that would be returned by the &lt;see langword=&quot;Error&quot; /&gt; function is used as the &lt;see langword=&quot;Description&quot; /&gt; property. If there is no Visual Basic error corresponding to the &lt;see langword=&quot;Number&quot; /&gt; property, the &quot;Application-defined or object-defined error&quot; message is used.">可选。 描述错误的 <see langword="String" /> 表达式。 如果未指定，则检查 <see langword="Number" /> 属性值。 如果它可以映射到 Visual Basic 运行时错误代码，则将 <see langword="Error" /> 函数要返回的字符串用作 <see langword="Description" /> 属性。 如果没有对应于 <see langword="Number" /> 属性的 Visual Basic 错误，则使用"应用程序定义的错误或对象定义的错误"消息。</param>
      <param name="HelpFile" vsli:raw="Optional. The fully qualified path to the Help file in which help on this error can be found. If unspecified, Visual Basic uses the fully qualified drive, path, and file name of the Visual Basic Help file.">可选。 帮助文件的完全限定路径，在该文件中可找到有关此错误的帮助信息。 如果未指定该参数，则 Visual Basic 使用 Visual Basic 帮助文件的完全限定的驱动器、路径和文件名。</param>
      <param name="HelpContext" vsli:raw="Optional. The context ID identifying a topic within &lt;paramref name=&quot;HelpFile&quot; /&gt; that provides help for the error. If omitted, the Visual Basic Help-file context ID for the error corresponding to the &lt;see langword=&quot;Number&quot; /&gt; property is used, if it exists.">可选。 上下文 ID，用于标识 <paramref name="HelpFile" /> 中提供有关错误的帮助主题。 如果省略该参数，则使用与 <see langword="Number" /> 属性对应的错误的 Visual Basic 帮助文件上下文 ID（如果存在）。</param>
    </member>
    <member name="T:Microsoft.VisualBasic.FileAttribute">
      <summary vsli:raw="Indicates the file attributes to use when calling file-access functions.">指示当调用文件访问函数时要使用的文件特性。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Archive">
      <summary vsli:raw="File has changed since last backup. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbArchive&quot; /&gt;.">文件自上次备份后已更改。 此成员等效于 Visual Basic 常量 <see langword="vbArchive" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Directory">
      <summary vsli:raw="Directory or folder. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbDirectory&quot; /&gt;.">目录或文件夹。 此成员等效于 Visual Basic 常量 <see langword="vbDirectory" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Hidden">
      <summary vsli:raw="Hidden. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbHidden&quot; /&gt;.">隐藏。 此成员等效于 Visual Basic 常量 <see langword="vbHidden" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Normal">
      <summary vsli:raw="Normal (default for &lt;see langword=&quot;Dir&quot; /&gt; and &lt;see langword=&quot;SetAttr&quot; /&gt;). No special characteristics apply to this file. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbNormal&quot; /&gt;.">正常（<see langword="Dir" /> 和 <see langword="SetAttr" /> 的默认值）。 对此文件未应用特殊特征。 此成员等效于 Visual Basic 常量 <see langword="vbNormal" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.ReadOnly">
      <summary vsli:raw="Read only. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbReadOnly&quot; /&gt;.">只读。 此成员等效于 Visual Basic 常量 <see langword="vbReadOnly" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.System">
      <summary vsli:raw="System file. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbSystem&quot; /&gt;.">系统文件。 此成员等效于 Visual Basic 常量 <see langword="vbSystem" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Volume">
      <summary vsli:raw="Volume label. This attribute is not valid when used with &lt;see langword=&quot;SetAttr&quot; /&gt;. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbVolume&quot; /&gt;.">卷标。 与 <see langword="SetAttr" /> 一起使用时此特性无效。 此成员等效于 Visual Basic 常量 <see langword="vbVolume" />。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption">
      <summary vsli:raw="Specifies what should be done when a directory that is to be deleted contains files or directories.">指定当要删除的目录中含有文件或目录时应采取的操作。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.DeleteAllContents">
      <summary vsli:raw="Delete the contents of the directory along with the directory. Default.">将目录内容随目录一起删除。 默认。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.ThrowIfDirectoryNonEmpty">
      <summary vsli:raw="Throw an &lt;see cref=&quot;T:System.IO.IOException&quot; /&gt; if the directory is not empty. The &lt;see langword=&quot;Data&quot; /&gt; property of the exception lists the file(s) that could not be deleted.">如果目录不为空，则引发 <see cref="T:System.IO.IOException" />。 异常的 <see langword="Data" /> 属性会列出未能删除的文件。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.FieldType">
      <summary vsli:raw="Indicates whether text fields are delimited or fixed width.">指示文本字段是分隔的还是固定宽度的。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.FieldType.Delimited">
      <summary vsli:raw="Indicates that the fields are delimited.">指示字段是分隔的。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.FieldType.FixedWidth">
      <summary vsli:raw="Indicates that the fields are fixed width.">指示字段是固定宽度的。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.FileSystem">
      <summary vsli:raw="Provides properties and methods for working with drives, files, and directories.">提供了用于处理驱动器、文件和目录的属性和方法。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; class.">初始化 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CombinePath(System.String,System.String)">
      <summary vsli:raw="Combines two paths and returns a properly formatted path.">组合两个路径并返回一个格式正确的路径。</summary>
      <param name="baseDirectory" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. First path to be combined.">
        <see langword="String" />。 要组合的第一个路径。</param>
      <param name="relativePath" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. Second path to be combined.">
        <see langword="String" />。 要组合的第二个路径。</param>
      <returns vsli:raw="The combination of the specified paths.">指定路径的组合。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;baseDirectory&quot; /&gt; or &lt;paramref name=&quot;relativePath&quot; /&gt; are malformed paths.">
        <paramref name="baseDirectory" /> 或 <paramref name="relativePath" /> 是格式不正确的路径。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String)">
      <summary vsli:raw="Copies the contents of a directory to another directory.">将目录内容复制到其他目录。</summary>
      <param name="sourceDirectoryName" vsli:raw="The directory to be copied.">要复制的目录。</param>
      <param name="destinationDirectoryName" vsli:raw="The location to which the directory contents should be copied.">应将目录内容复制到的位置。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationDirectoryName&quot; /&gt; or &lt;paramref name=&quot;sourceDirectoryName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationDirectoryName" /> 或 <paramref name="sourceDirectoryName" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The source directory does not exist.">源目录不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The source path and target path are the same.">源路径和目标路径相同。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The operation is cyclic.">操作为循环。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A folder name in the path contains a colon (:) or is in an invalid format.">路径中的文件夹名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">该用户缺少查看该路径所必需的权限。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="A destination file exists but cannot be accessed.">目标文件存在但无法访问。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary vsli:raw="Copies the contents of a directory to another directory.">将目录内容复制到其他目录。</summary>
      <param name="sourceDirectoryName" vsli:raw="The directory to be copied.">要复制的目录。</param>
      <param name="destinationDirectoryName" vsli:raw="The location to which the directory contents should be copied.">应将目录内容复制到的位置。</param>
      <param name="showUI" vsli:raw="Whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">是否对操作进度进行可视跟踪。 默认值为 <see langword="UIOption.OnlyErrorDialogs" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationDirectoryName&quot; /&gt; or &lt;paramref name=&quot;sourceDirectoryName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationDirectoryName" /> 或 <paramref name="sourceDirectoryName" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The source directory does not exist.">源目录不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The source path and target path are the same.">源路径和目标路径相同。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The operation is cyclic.">操作为循环。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A folder name in the path contains a colon (:) or is in an invalid format.">路径中的文件夹名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">该用户缺少查看该路径所必需的权限。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="A destination file exists but cannot be accessed.">目标文件存在但无法访问。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="&lt;paramref name=&quot;ShowUI&quot; /&gt; is set to &lt;see langword=&quot;UIOption.AllDialogs&quot; /&gt; and the user cancels the operation, or one or more files in the directory cannot be copied.">
        <paramref name="ShowUI" /> 设置为 <see langword="UIOption.AllDialogs" /> 且用户取消了该操作，或者无法复制目录中的一个或多个文件。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary vsli:raw="Copies the contents of a directory to another directory.">将目录内容复制到其他目录。</summary>
      <param name="sourceDirectoryName" vsli:raw="The directory to be copied.">要复制的目录。</param>
      <param name="destinationDirectoryName" vsli:raw="The location to which the directory contents should be copied.">应将目录内容复制到的位置。</param>
      <param name="showUI" vsli:raw="Whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">是否对操作进度进行可视跟踪。 默认值为 <see langword="UIOption.OnlyErrorDialogs" />。</param>
      <param name="onUserCancel" vsli:raw="Specifies what should be done if the user clicks Cancel during the operation. Default is &lt;see cref=&quot;F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException&quot; /&gt;.">指定当用户在操作过程中单击“取消”时应执行的操作。 默认值为 <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationDirectoryName&quot; /&gt; or &lt;paramref name=&quot;sourceDirectoryName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationDirectoryName" /> 或 <paramref name="sourceDirectoryName" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The source directory does not exist.">源目录不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The source path and target path are the same.">源路径和目标路径相同。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The operation is cyclic.">操作为循环。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A folder name in the path contains a colon (:) or is in an invalid format.">路径中的文件夹名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">该用户缺少查看该路径所必需的权限。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="A destination file exists but cannot be accessed.">目标文件存在但无法访问。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="&lt;paramref name=&quot;ShowUI&quot; /&gt; is set to &lt;see langword=&quot;UIOption.AllDialogs&quot; /&gt; and the user cancels the operation, or one or more files in the directory cannot be copied.">
        <paramref name="ShowUI" /> 设置为 <see langword="UIOption.AllDialogs" /> 且用户取消了该操作，或者无法复制目录中的一个或多个文件。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Copies the contents of a directory to another directory.">将目录内容复制到其他目录。</summary>
      <param name="sourceDirectoryName" vsli:raw="The directory to be copied.">要复制的目录。</param>
      <param name="destinationDirectoryName" vsli:raw="The location to which the directory contents should be copied.">应将目录内容复制到的位置。</param>
      <param name="overwrite" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to overwrite existing files; otherwise &lt;see langword=&quot;False&quot; /&gt;. Default is &lt;see langword=&quot;False&quot; /&gt;.">要覆盖现有文件，则为 <see langword="True" />；否则为 <see langword="False" />。 默认值为 <see langword="False" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationDirectoryName&quot; /&gt; or &lt;paramref name=&quot;sourceDirectoryName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationDirectoryName" /> 或 <paramref name="sourceDirectoryName" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The source directory does not exist.">源目录不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The source path and target path are the same.">源路径和目标路径相同。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The operation is cyclic.">操作为循环。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A folder name in the path contains a colon (:) or is in an invalid format.">路径中的文件夹名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">该用户缺少查看该路径所必需的权限。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="A destination file exists but cannot be accessed.">目标文件存在但无法访问。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)">
      <summary vsli:raw="Copies a file to a new location.">将文件复制到新的位置。</summary>
      <param name="sourceFileName" vsli:raw="The file to be copied.">要复制的文件。</param>
      <param name="destinationFileName" vsli:raw="The location to which the file should be copied.">文件应复制到的位置。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; contains path information.">
        <paramref name="destinationFileName" /> 包含路径信息。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; or &lt;paramref name=&quot;sourceFileName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationFileName" /> 或 <paramref name="sourceFileName" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The source file is not valid or does not exist.">源文件无效或不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="A file in the target directory with the same name is in use.">目标目录中的同名文件正被使用。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">该用户没有必需的权限。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">该用户缺少查看该路径所必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary vsli:raw="Copies a file to a new location.">将文件复制到新的位置。</summary>
      <param name="sourceFileName" vsli:raw="The file to be copied.">要复制的文件。</param>
      <param name="destinationFileName" vsli:raw="The location to which the file should be copied.">文件应复制到的位置。</param>
      <param name="showUI" vsli:raw="Whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">是否对操作进度进行可视跟踪。 默认值为 <see langword="UIOption.OnlyErrorDialogs" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; contains path information.">
        <paramref name="destinationFileName" /> 包含路径信息。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; or &lt;paramref name=&quot;sourceFileName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationFileName" /> 或 <paramref name="sourceFileName" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The source file is not valid or does not exist.">源文件无效或不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The destination file exists and &lt;paramref name=&quot;overwrite&quot; /&gt; is set to &lt;see langword=&quot;False&quot; /&gt;.">目标文件存在，并且 <paramref name="overwrite" /> 设置为 <see langword="False" />。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">该用户没有必需的权限。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">该用户缺少查看该路径所必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary vsli:raw="Copies a file to a new location.">将文件复制到新的位置。</summary>
      <param name="sourceFileName" vsli:raw="The file to be copied.">要复制的文件。</param>
      <param name="destinationFileName" vsli:raw="The location to which the file should be copied.">文件应复制到的位置。</param>
      <param name="showUI" vsli:raw="Whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">是否对操作进度进行可视跟踪。 默认值为 <see langword="UIOption.OnlyErrorDialogs" />。</param>
      <param name="onUserCancel" vsli:raw="Specifies what should be done if the user clicks Cancel during the operation. Default is &lt;see cref=&quot;F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException&quot; /&gt;.">指定当用户在操作过程中单击“取消”时应执行的操作。 默认值为 <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; contains path information.">
        <paramref name="destinationFileName" /> 包含路径信息。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; or &lt;paramref name=&quot;sourceFileName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationFileName" /> 或 <paramref name="sourceFileName" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The source file is not valid or does not exist.">源文件无效或不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The destination file exists and &lt;paramref name=&quot;overwrite&quot; /&gt; is set to &lt;see langword=&quot;False&quot; /&gt;.">目标文件存在，并且 <paramref name="overwrite" /> 设置为 <see langword="False" />。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">该用户没有必需的权限。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">该用户缺少查看该路径所必需的权限。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="&lt;paramref name=&quot;UICancelOption&quot; /&gt; is set to &lt;see langword=&quot;ThrowException&quot; /&gt;, and the user has canceled the operation or an unspecified I/O error occurs.">
        <paramref name="UICancelOption" /> 设置为 <see langword="ThrowException" />，并且用户已经取消了该操作或者发生了未指定的 I/O 错误。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Copies a file to a new location.">将文件复制到新的位置。</summary>
      <param name="sourceFileName" vsli:raw="The file to be copied.">要复制的文件。</param>
      <param name="destinationFileName" vsli:raw="The location to which the file should be copied.">文件应复制到的位置。</param>
      <param name="overwrite" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if existing files should be overwritten; otherwise &lt;see langword=&quot;False&quot; /&gt;. Default is &lt;see langword=&quot;False&quot; /&gt;.">如果应覆盖现有文件，则为 <see langword="True" />；否则为 <see langword="False" />。 默认值为 <see langword="False" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; contains path information.">
        <paramref name="destinationFileName" /> 包含路径信息。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; or &lt;paramref name=&quot;sourceFileName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationFileName" /> 或 <paramref name="sourceFileName" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The source file is not valid or does not exist.">源文件无效或不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The destination file exists and &lt;paramref name=&quot;overwrite&quot; /&gt; is set to &lt;see langword=&quot;False&quot; /&gt;.">目标文件存在，并且 <paramref name="overwrite" /> 设置为 <see langword="False" />。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">该用户没有必需的权限。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">该用户缺少查看该路径所必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)">
      <summary vsli:raw="Creates a directory.">创建目录。</summary>
      <param name="directory" vsli:raw="Name and location of the directory.">目录的名称和位置。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The directory name is malformed. For example, it contains illegal characters or is only white space.">目录名称格式不正确。 例如，它包含非法字符或仅包含空白。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="directory" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The directory name is too long.">目录名太长。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The directory name is only a colon (:).">目录名只是一个冒号 (:)。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The parent directory of the directory to be created is read-only.">要创建的目录的父目录是只读的。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have permission to create the directory.">用户没有创建目录的权限。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory">
      <summary vsli:raw="Gets or sets the current directory.">获取或设置当前目录。</summary>
      <returns vsli:raw="The current directory for file I/O operations.">文件 I/O 操作的当前目录。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is not valid.">该路径无效。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user lacks necessary permissions.">该用户缺少必要的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)">
      <summary vsli:raw="Deletes a directory.">删除目录。</summary>
      <param name="directory" vsli:raw="Directory to be deleted.">要删除的目录。</param>
      <param name="onDirectoryNotEmpty" vsli:raw="Specifies what should be done when a directory that is to be deleted contains files or directories. Default is &lt;see langword=&quot;DeleteDirectoryOption.DeleteAllContents&quot; /&gt;.">指定当要删除的目录中含有文件或目录时应采取的操作。 默认值为 <see langword="DeleteDirectoryOption.DeleteAllContents" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is a zero-length string, is malformed, contains only white space, or contains invalid characters (including wildcard characters). The path is a device path (starts with \\.\).">路径是零长度字符串、格式不正确、仅包含空白，或者包含无效字符（包括通配符）。 路径是设备路径（以 \\.\ 开头）。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="directory" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory does not exist or is a file.">目录不存在，或者目录是一个文件。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="A file in the directory or subdirectory is in use.">目录或子目录中的某个文件正被使用。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The directory name contains a colon (:).">目录名中包含冒号 (:)。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user does not have required permissions.">该用户没有必需的权限。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The user cancels the operation or the directory cannot be deleted.">用户取消了操作，或无法删除该目录。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary vsli:raw="Deletes a directory.">删除目录。</summary>
      <param name="directory" vsli:raw="Directory to be deleted.">要删除的目录。</param>
      <param name="showUI" vsli:raw="Specifies whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">指定是否对操作进度进行可视跟踪。 默认值为 <see langword="UIOption.OnlyErrorDialogs" />。</param>
      <param name="recycle" vsli:raw="Specifies whether or not the deleted file should be sent to the Recycle Bin. Default is &lt;see langword=&quot;RecycleOption.DeletePermanently&quot; /&gt;.">指定是否应将删除的文件发送到“回收站”。 默认值为 <see langword="RecycleOption.DeletePermanently" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is a zero-length string, is malformed, contains only white space, or contains invalid characters (including wildcard characters). The path is a device path (starts with \\.\).">路径是零长度字符串、格式不正确、仅包含空白，或者包含无效字符（包括通配符）。 路径是设备路径（以 \\.\ 开头）。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="directory" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory does not exist or is a file.">目录不存在，或者目录是一个文件。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="A file in the directory or subdirectory is in use.">目录或子目录中的某个文件正被使用。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The directory name contains a colon (:).">目录名中包含冒号 (:)。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user does not have required permissions.">该用户没有必需的权限。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The user cancels the operation or the directory cannot be deleted.">用户取消了操作，或无法删除该目录。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary vsli:raw="Deletes a directory.">删除目录。</summary>
      <param name="directory" vsli:raw="Directory to be deleted.">要删除的目录。</param>
      <param name="showUI" vsli:raw="Specifies whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">指定是否对操作进度进行可视跟踪。 默认值为 <see langword="UIOption.OnlyErrorDialogs" />。</param>
      <param name="recycle" vsli:raw="Specifies whether or not the deleted file should be sent to the Recycle Bin. Default is &lt;see langword=&quot;RecycleOption.DeletePermanently&quot; /&gt;.">指定是否应将删除的文件发送到“回收站”。 默认值为 <see langword="RecycleOption.DeletePermanently" />。</param>
      <param name="onUserCancel" vsli:raw="Specifies whether to throw an exception if the user clicks Cancel.">指定在用户单击“取消”时是否引发异常。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is a zero-length string, is malformed, contains only white space, or contains invalid characters (including wildcard characters). The path is a device path (starts with \\.\).">路径是零长度字符串、格式不正确、仅包含空白，或者包含无效字符（包括通配符）。 路径是设备路径（以 \\.\ 开头）。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="directory" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory does not exist or is a file.">目录不存在，或者目录是一个文件。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="A file in the directory or subdirectory is in use.">目录或子目录中的某个文件正被使用。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The directory name contains a colon (:).">目录名中包含冒号 (:)。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user does not have required permissions.">该用户没有必需的权限。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The user cancels the operation or the directory cannot be deleted.">用户取消了操作，或无法删除该目录。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String)">
      <summary vsli:raw="Deletes a file.">删除文件。</summary>
      <param name="file" vsli:raw="Name and path of the file to be deleted.">要删除的文件的名称和路径。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; it has a trailing slash where a file must be specified; or it is a device path (starts with \\.\).">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；带有必须指定文件的尾部反斜杠；是设备路径（以 \\.\ 开头）。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="file" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use.">该文件正在使用。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">该用户缺少查看该路径所必需的权限。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">文件不存在。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have permission to delete the file or the file is read-only.">该用户没有删除该文件的权限，或者该文件为只读。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary vsli:raw="Deletes a file.">删除文件。</summary>
      <param name="file" vsli:raw="Name and path of the file to be deleted.">要删除的文件的名称和路径。</param>
      <param name="showUI" vsli:raw="Whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">是否对操作进度进行可视跟踪。 默认值为 <see langword="UIOption.OnlyErrorDialogs" />。</param>
      <param name="recycle" vsli:raw="Whether or not the deleted file should be sent to the Recycle Bin. Default is &lt;see langword=&quot;RecycleOption.DeletePermanently&quot; /&gt;.">删除的文件是否应发送到“回收站”。 默认值为 <see langword="RecycleOption.DeletePermanently" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; it has a trailing slash where a file must be specified; or it is a device path (starts with \\.\).">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；带有必须指定文件的尾部反斜杠；是设备路径（以 \\.\ 开头）。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="file" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use.">该文件正在使用。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">该用户缺少查看该路径所必需的权限。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">文件不存在。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have permission to delete the file or the file is read-only.">该用户没有删除该文件的权限，或者该文件为只读。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary vsli:raw="Deletes a file.">删除文件。</summary>
      <param name="file" vsli:raw="Name and path of the file to be deleted.">要删除的文件的名称和路径。</param>
      <param name="showUI" vsli:raw="Whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">是否对操作进度进行可视跟踪。 默认值为 <see langword="UIOption.OnlyErrorDialogs" />。</param>
      <param name="recycle" vsli:raw="Whether or not the deleted file should be sent to the Recycle Bin. Default is &lt;see langword=&quot;RecycleOption.DeletePermanently&quot; /&gt;.">删除的文件是否应发送到“回收站”。 默认值为 <see langword="RecycleOption.DeletePermanently" />。</param>
      <param name="onUserCancel" vsli:raw="Specifies whether or not an exception is thrown when the user cancels the operation. Default is &lt;see langword=&quot;UICancelOption.ThrowException&quot; /&gt;.">指定用户取消操作时是否引发异常。 默认值为 <see langword="UICancelOption.ThrowException" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; it has a trailing slash where a file must be specified; or it is a device path (starts with \\.\).">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；带有必须指定文件的尾部反斜杠；是设备路径（以 \\.\ 开头）。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="file" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use.">该文件正在使用。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">该用户缺少查看该路径所必需的权限。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">文件不存在。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have permission to delete the file or the file is read-only.">该用户没有删除该文件的权限，或者该文件为只读。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The user cancelled the operation and &lt;paramref name=&quot;onUserCancel&quot; /&gt; is set to &lt;see cref=&quot;F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException&quot; /&gt;.">用户已取消该操作并且 <paramref name="onUserCancel" /> 已设置为 <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DirectoryExists(System.String)">
      <summary vsli:raw="Returns &lt;see langword=&quot;True&quot; /&gt; if the specified directory exists.">如果指定目录存在，则返回 <see langword="True" />。</summary>
      <param name="directory" vsli:raw="Path of the directory.">目录的路径。</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if the directory exists; otherwise &lt;see langword=&quot;False&quot; /&gt;. This method also returns &lt;see langword=&quot;False&quot; /&gt; if the parameter represents the name and path of a file rather than a directory.">如果目录存在，则为 <see langword="True" />；否则为 <see langword="False" />。 如果该参数表示文件（而不是目录）的名称和路径，则此方法还会返回 <see langword="False" />。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.FileSystem.Drives">
      <summary vsli:raw="Returns a read-only collection of all available drive names.">返回所有可用驱动器名称的只读集合。</summary>
      <returns vsli:raw="A read-only collection of all available drives as &lt;see cref=&quot;T:System.IO.DriveInfo&quot; /&gt; objects.">作为 <see cref="T:System.IO.DriveInfo" /> 对象的所有可用驱动器的只读集合。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.FileExists(System.String)">
      <summary vsli:raw="Returns &lt;see langword=&quot;True&quot; /&gt; if the specified file exists.">如果指定文件存在，则返回 <see langword="True" />。</summary>
      <param name="file" vsli:raw="Name and path of the file.">文件的名称和路径。</param>
      <returns vsli:raw="Returns &lt;see langword=&quot;True&quot; /&gt; if the file exists; otherwise this method returns &lt;see langword=&quot;False&quot; /&gt;. This method also returns &lt;see langword=&quot;False&quot; /&gt; if the parameter represents the path of a directory rather than a file.">如果文件存在，则返回 <see langword="True" />；否则此方法返回 <see langword="False" />。 如果该参数表示目录（而不是文件）的路径，则此方法还会返回 <see langword="False" />。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The name of the file ends with a backslash (\).">文件名称以反斜杠 (\) 结尾。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)">
      <summary vsli:raw="Returns a read-only collection of strings representing the names of files containing the specified text.">返回字符串的只读集合，这些字符串表示包含指定文本的文件的名称。</summary>
      <param name="directory" vsli:raw="The directory to be searched.">要搜索的目录。</param>
      <param name="containsText" vsli:raw="The search text.">搜索文本。</param>
      <param name="ignoreCase" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if the search should be case-sensitive; otherwise &lt;see langword=&quot;False&quot; /&gt;. Default is &lt;see langword=&quot;True&quot; /&gt;.">如果搜索应区分大小写，则为 <see langword="True" />；否则为 <see langword="False" />。 默认值为 <see langword="True" />。</param>
      <param name="searchType" vsli:raw="Whether to include subfolders. Default is &lt;see langword=&quot;SearchOption.SearchTopLevelOnly&quot; /&gt;.">是否包含子文件夹。 默认值为 <see langword="SearchOption.SearchTopLevelOnly" />。</param>
      <returns vsli:raw="Read-only collection of the names of files containing the specified text.">包含指定文本的文件名的只读集合。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with &lt;c&gt;\\.\&lt;/c&gt;).">路径由于以下原因之一而无效：是零长度字符串；仅包含空白；包含无效字符；是一个设备路径（开头字符为 <c>\.&lt;/code&gt;）。</c></exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="directory" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The specified directory does not exist.">指定的目录不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The specified directory points to an existing file.">指定的目录指向某个现有文件。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The specified directory path contains a colon (:) or is in an invalid format.">指定的目录路径中包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">该用户缺少查看该路径所必需的权限。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user lacks necessary permissions.">该用户缺少必要的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary vsli:raw="Returns a read-only collection of strings representing the names of files containing the specified text.">返回字符串的只读集合，这些字符串表示包含指定文本的文件的名称。</summary>
      <param name="directory" vsli:raw="The directory to be searched.">要搜索的目录。</param>
      <param name="containsText" vsli:raw="The search text.">搜索文本。</param>
      <param name="ignoreCase" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if the search should be case-sensitive; otherwise &lt;see langword=&quot;False&quot; /&gt;. Default is &lt;see langword=&quot;True&quot; /&gt;.">如果搜索应区分大小写，则为 <see langword="True" />；否则为 <see langword="False" />。 默认值为 <see langword="True" />。</param>
      <param name="searchType" vsli:raw="Whether to include subfolders. Default is &lt;see langword=&quot;SearchOption.SearchTopLevelOnly&quot; /&gt;.">是否包含子文件夹。 默认值为 <see langword="SearchOption.SearchTopLevelOnly" />。</param>
      <param name="fileWildcards" vsli:raw="Pattern to be matched.">要匹配的模式。</param>
      <returns vsli:raw="Read-only collection of the names of files containing the specified text.">包含指定文本的文件名的只读集合。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with &lt;c&gt;\\.\&lt;/c&gt;).">路径由于以下原因之一而无效：是零长度字符串；仅包含空白；包含无效字符；是一个设备路径（开头字符为 <c>\.&lt;/code&gt;）。</c></exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="directory" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The specified directory does not exist.">指定的目录不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The specified directory points to an existing file.">指定的目录指向某个现有文件。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The specified directory path contains a colon (:) or is in an invalid format.">指定的目录路径中包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">该用户缺少查看该路径所必需的权限。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user lacks necessary permissions.">该用户缺少必要的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String)">
      <summary vsli:raw="Returns a collection of strings representing the path names of subdirectories within a directory.">返回一个字符串集合，这些字符串表示目录内子目录的路径名。</summary>
      <param name="directory" vsli:raw="Name and path of directory.">目录的名称和路径。</param>
      <returns vsli:raw="Read-only collection of the path names of subdirectories within the specified directory.">所指定目录中，子目录路径名称的只读集合。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="directory" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The specified directory does not exist.">指定的目录不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The specified directory points to an existing file.">指定的目录指向某个现有文件。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">该用户缺少查看该路径所必需的权限。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user lacks necessary permissions.">该用户缺少必要的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary vsli:raw="Returns a collection of strings representing the path names of subdirectories within a directory.">返回一个字符串集合，这些字符串表示目录内子目录的路径名。</summary>
      <param name="directory" vsli:raw="Name and path of directory.">目录的名称和路径。</param>
      <param name="searchType" vsli:raw="Whether to include subfolders. Default is &lt;see langword=&quot;SearchOption.SearchTopLevelOnly&quot; /&gt;.">是否包含子文件夹。 默认值为 <see langword="SearchOption.SearchTopLevelOnly" />。</param>
      <param name="wildcards" vsli:raw="Pattern to match names.">用于匹配名称的模式。</param>
      <returns vsli:raw="Read-only collection of the path names of subdirectories within the specified directory.">所指定目录中，子目录路径名称的只读集合。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or more of the specified wildcard characters is &lt;see langword=&quot;Nothing&quot; /&gt;, an empty string, or contains only spaces.">一个或多个指定的通配符为 <see langword="Nothing" />、空字符串，或者仅包含空格。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The specified directory does not exist.">指定的目录不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The specified directory points to an existing file.">指定的目录指向某个现有文件。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">该用户缺少查看该路径所必需的权限。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user lacks necessary permissions.">该用户缺少必要的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.IO.DirectoryInfo&quot; /&gt; object for the specified path.">返回指定路径的 <see cref="T:System.IO.DirectoryInfo" /> 对象。</summary>
      <param name="directory" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. Path of directory.">
        <see langword="String" />。 目录的路径。</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.IO.DirectoryInfo&quot; /&gt; object for the specified path.">指定路径的 <see cref="T:System.IO.DirectoryInfo" /> 对象。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="directory" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The directory path contains a colon (:) or is in an invalid format.">目录路径中包含冒号 (:)，或者格式无效。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">该用户缺少查看该路径所必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDriveInfo(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.IO.DriveInfo&quot; /&gt; object for the specified drive.">返回指定驱动器的 <see cref="T:System.IO.DriveInfo" /> 对象。</summary>
      <param name="drive" vsli:raw="Drive to be examined.">要检查的驱动器。</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.IO.DriveInfo&quot; /&gt; object for the specified drive.">指定驱动器的 <see cref="T:System.IO.DriveInfo" /> 对象。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;drive&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="drive" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">该用户缺少查看该路径所必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.IO.FileInfo&quot; /&gt; object for the specified file.">返回指定文件的 <see cref="T:System.IO.FileInfo" /> 对象。</summary>
      <param name="file" vsli:raw="Name and path of the file.">文件的名称和路径。</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.IO.FileInfo&quot; /&gt; object for the specified file.">指定文件的 <see cref="T:System.IO.FileInfo" /> 对象</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path name is malformed. For example, it contains invalid characters or is only white space. The file name has a trailing slash mark.">路径名称格式不正确。 例如，包含无效字符或仅为空白。 文件名具有尾随斜杠标记。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="file" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The path contains a colon in the middle of the string.">路径的字符串中间包含一个冒号。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path is too long.">路径太长。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions.">该用户缺少必要的权限。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user lacks ACL (access control list) access to the file.">该用户缺少对文件的 ACL（访问控制列表）的访问权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String)">
      <summary vsli:raw="Returns a read-only collection of strings representing the names of files within a directory.">返回字符串的只读集合，这些字符串表示目录内文件的名称。</summary>
      <param name="directory" vsli:raw="Directory to be searched.">要搜索的目录。</param>
      <returns vsli:raw="Read-only collection of file names from the specified directory.">指定目录中的文件名的只读集合。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="directory" /> 为 <see langword="Nothing" />。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory to search does not exist.">要搜索的目录不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; points to an existing file.">
        <paramref name="directory" /> 指向某个现有文件。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">该用户缺少查看该路径所必需的权限。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user lacks necessary permissions.">该用户缺少必要的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary vsli:raw="Returns a read-only collection of strings representing the names of files within a directory.">返回字符串的只读集合，这些字符串表示目录内文件的名称。</summary>
      <param name="directory" vsli:raw="Directory to be searched.">要搜索的目录。</param>
      <param name="searchType" vsli:raw="Whether to include subfolders. Default is &lt;see langword=&quot;SearchOption.SearchTopLevelOnly&quot; /&gt;.">是否包含子文件夹。 默认值为 <see langword="SearchOption.SearchTopLevelOnly" />。</param>
      <param name="wildcards" vsli:raw="Pattern to be matched.">要匹配的模式。</param>
      <returns vsli:raw="Read-only collection of file names from the specified directory.">指定目录中的文件名的只读集合。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="directory" /> 为 <see langword="Nothing" />。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory to search does not exist.">要搜索的目录不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; points to an existing file.">
        <paramref name="directory" /> 指向某个现有文件。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">该用户缺少查看该路径所必需的权限。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user lacks necessary permissions.">该用户缺少必要的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetName(System.String)">
      <summary vsli:raw="Parses the file name out of the path provided.">从提供的路径分析文件名。</summary>
      <param name="path" vsli:raw="Required. Path to be parsed. &lt;see langword=&quot;String&quot; /&gt;.">必需。 要分析的路径。 <see langword="String" />。</param>
      <returns vsli:raw="The file name from the specified path.">来自指定路径的文件名。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath(System.String)">
      <summary vsli:raw="Returns the parent path of the provided path.">返回所提供的路径的父路径。</summary>
      <param name="path" vsli:raw="Path to be examined.">要检查的路径。</param>
      <returns vsli:raw="The parent path of the provided path.">所提供的路径的父路径。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Path does not have a parent path because it is a root path.">路径是根路径，因此没有父路径。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="path" /> 为 <see langword="Nothing" />。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetTempFileName">
      <summary vsli:raw="Creates a uniquely named zero-byte temporary file on disk and returns the full path of that file.">在磁盘上创建一个唯一命名的零字节临时文件并返回该文件的完整路径。</summary>
      <returns vsli:raw="&lt;see langword=&quot;String&quot; /&gt; containing the full path of the temporary file.">包含该临时文件的完整路径的 <see langword="String" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String)">
      <summary vsli:raw="Moves a directory from one location to another.">将目录从一个位置移动到另一个位置。</summary>
      <param name="sourceDirectoryName" vsli:raw="Path of the directory to be moved.">要移动的目录的路径。</param>
      <param name="destinationDirectoryName" vsli:raw="Path of the directory to which the source directory is being moved.">源目录将移到的目录的路径。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;sourceDirectoryName&quot; /&gt; or &lt;paramref name=&quot;destinationDirectoryName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="sourceDirectoryName" /> 或 <paramref name="destinationDirectoryName" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory does not exist.">该目录不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The source is a root directory or The source path and the target path are the same.">源是根目录，或者，源路径与目标路径相同。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The operation is cyclic.">操作为循环。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">该用户缺少查看该路径所必需的权限。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">该用户没有必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary vsli:raw="Moves a directory from one location to another.">将目录从一个位置移动到另一个位置。</summary>
      <param name="sourceDirectoryName" vsli:raw="Path of the directory to be moved.">要移动的目录的路径。</param>
      <param name="destinationDirectoryName" vsli:raw="Path of the directory to which the source directory is being moved.">源目录将移到的目录的路径。</param>
      <param name="showUI" vsli:raw="Specifies whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">指定是否对操作进度进行可视跟踪。 默认值为 <see langword="UIOption.OnlyErrorDialogs" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;sourceDirectoryName&quot; /&gt; or &lt;paramref name=&quot;destinationDirectoryName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="sourceDirectoryName" /> 或 <paramref name="destinationDirectoryName" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory does not exist.">该目录不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The target directory already exists and &lt;paramref name=&quot;overwrite&quot; /&gt; is set to &lt;see langword=&quot;False&quot; /&gt;.">目标目录已存在，并且 <paramref name="overwrite" /> 设置为 <see langword="False" />。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The operation is cyclic.">操作为循环。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">该用户缺少查看该路径所必需的权限。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">该用户没有必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary vsli:raw="Moves a directory from one location to another.">将目录从一个位置移动到另一个位置。</summary>
      <param name="sourceDirectoryName" vsli:raw="Path of the directory to be moved.">要移动的目录的路径。</param>
      <param name="destinationDirectoryName" vsli:raw="Path of the directory to which the source directory is being moved.">源目录将移到的目录的路径。</param>
      <param name="showUI" vsli:raw="Specifies whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">指定是否对操作进度进行可视跟踪。 默认值为 <see langword="UIOption.OnlyErrorDialogs" />。</param>
      <param name="onUserCancel" vsli:raw="Specifies whether or not an exception is thrown when the user cancels the operation. Default is &lt;see langword=&quot;UICancelOption.ThrowException&quot; /&gt;.">指定用户取消操作时是否引发异常。 默认值为 <see langword="UICancelOption.ThrowException" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;sourceDirectoryName&quot; /&gt; or &lt;paramref name=&quot;destinationDirectoryName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="sourceDirectoryName" /> 或 <paramref name="destinationDirectoryName" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory does not exist.">该目录不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;onUserCancel&quot; /&gt; is set to &lt;see langword=&quot;ThrowException&quot; /&gt; and a subdirectory of the file cannot be copied.">
        <paramref name="onUserCancel" /> 设置为 <see langword="ThrowException" /> 并且无法复制子目录中的文件。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="&lt;paramref name=&quot;onUserCancel&quot; /&gt; is set to &lt;see langword=&quot;ThrowException&quot; /&gt;, and the user cancels the operation, or the operation cannot be completed.">
        <paramref name="onUserCancel" /> 设置为 <see langword="ThrowException" />，并且用户取消了该操作，或者无法完成该操作。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">该用户缺少查看该路径所必需的权限。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The operation is cyclic.">操作为循环。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">该用户没有必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Moves a directory from one location to another.">将目录从一个位置移动到另一个位置。</summary>
      <param name="sourceDirectoryName" vsli:raw="Path of the directory to be moved.">要移动的目录的路径。</param>
      <param name="destinationDirectoryName" vsli:raw="Path of the directory to which the source directory is being moved.">源目录将移到的目录的路径。</param>
      <param name="overwrite" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if existing directories should be overwritten; otherwise &lt;see langword=&quot;False&quot; /&gt;. Default is &lt;see langword=&quot;False&quot; /&gt;.">如果应覆盖现有目录，则为 <see langword="True" />；否则为 <see langword="False" />。 默认值为 <see langword="False" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;sourceDirectoryName&quot; /&gt; or &lt;paramref name=&quot;destinationDirectoryName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="sourceDirectoryName" /> 或 <paramref name="destinationDirectoryName" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory does not exist.">该目录不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The target directory already exists and &lt;paramref name=&quot;overwrite&quot; /&gt; is set to &lt;see langword=&quot;False&quot; /&gt;.">目标目录已存在，并且 <paramref name="overwrite" /> 设置为 <see langword="False" />。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The operation is cyclic.">操作为循环。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">该用户缺少查看该路径所必需的权限。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">该用户没有必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String)">
      <summary vsli:raw="Moves a file to a new location.">将文件移动到一个新位置。</summary>
      <param name="sourceFileName" vsli:raw="Path of the file to be moved.">要移动的文件的路径。</param>
      <param name="destinationFileName" vsli:raw="Path of the directory into which the file should be moved.">文件应移到的目录的路径。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）；以尾部反斜杠结尾。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationFileName" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The source file is not valid or does not exist.">源文件无效或不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">文件正由另一个进程使用，或者出现 I/O 错误。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">该用户缺少查看该路径所必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary vsli:raw="Moves a file to a new location.">将文件移动到一个新位置。</summary>
      <param name="sourceFileName" vsli:raw="Path of the file to be moved.">要移动的文件的路径。</param>
      <param name="destinationFileName" vsli:raw="Path of the directory into which the file should be moved.">文件应移到的目录的路径。</param>
      <param name="showUI" vsli:raw="Specifies whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">指定是否对操作进度进行可视跟踪。 默认值为 <see langword="UIOption.OnlyErrorDialogs" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）；以尾部反斜杠结尾。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationFileName" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The source file is not valid or does not exist.">源文件无效或不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">文件正由另一个进程使用，或者出现 I/O 错误。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">该用户缺少查看该路径所必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary vsli:raw="Moves a file to a new location.">将文件移动到一个新位置。</summary>
      <param name="sourceFileName" vsli:raw="Path of the file to be moved.">要移动的文件的路径。</param>
      <param name="destinationFileName" vsli:raw="Path of the directory into which the file should be moved.">文件应移到的目录的路径。</param>
      <param name="showUI" vsli:raw="Specifies whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">指定是否对操作进度进行可视跟踪。 默认值为 <see langword="UIOption.OnlyErrorDialogs" />。</param>
      <param name="onUserCancel" vsli:raw="Specifies whether or not an exception is thrown when the user cancels the operation. Default is &lt;see langword=&quot;UICancelOption.ThrowException&quot; /&gt;.">指定用户取消操作时是否引发异常。 默认值为 <see langword="UICancelOption.ThrowException" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）；以尾部反斜杠结尾。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationFileName" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The source file is not valid or does not exist.">源文件无效或不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">文件正由另一个进程使用，或者出现 I/O 错误。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="&lt;paramref name=&quot;onUserCancel&quot; /&gt; is set to &lt;see langword=&quot;ThrowException&quot; /&gt;, and either the user has cancelled the operation or an unspecified I/O error occurs.">
        <paramref name="onUserCancel" /> 设置为 <see langword="ThrowException" />，并且用户已经取消了该操作或者发生了未指定的 I/O 错误。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">该用户缺少查看该路径所必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Moves a file to a new location.">将文件移动到一个新位置。</summary>
      <param name="sourceFileName" vsli:raw="Path of the file to be moved.">要移动的文件的路径。</param>
      <param name="destinationFileName" vsli:raw="Path of the directory into which the file should be moved.">文件应移到的目录的路径。</param>
      <param name="overwrite" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to overwrite existing files; otherwise &lt;see langword=&quot;False&quot; /&gt;. Default is &lt;see langword=&quot;False&quot; /&gt;.">要覆盖现有文件，则为 <see langword="True" />；否则为 <see langword="False" />。 默认值为 <see langword="False" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）；以尾部反斜杠结尾。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationFileName" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The source file is not valid or does not exist.">源文件无效或不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">文件正由另一个进程使用，或者出现 I/O 错误。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">该用户缺少查看该路径所必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)">
      <summary vsli:raw="The &lt;see langword=&quot;OpenTextFieldParser&quot; /&gt; method allows you to create a &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; object,  which provides a way to easily and efficiently parse structured text files, such as logs. The &lt;see langword=&quot;TextFieldParser&quot; /&gt; object can be used to read both delimited and fixed-width files.">使用 <see langword="OpenTextFieldParser" /> 方法可以创建 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 对象，该对象为分析结构化文本文件（例如日志）提供了一种简单而有效的方法。 <see langword="TextFieldParser" /> 对象可用于读取分隔文件和固定宽度文件。</summary>
      <param name="file" vsli:raw="The file to be opened with the &lt;see langword=&quot;TextFieldParser&quot; /&gt;.">要使用 <see langword="TextFieldParser" /> 打开的文件。</param>
      <returns vsli:raw="&lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; to read the specified file.">用于读取指定文件的 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）；以尾部反斜杠结尾。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" /> 为 <see langword="Nothing" />。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">文件不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">文件正由另一个进程使用，或者出现 I/O 错误。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" vsli:raw="A row cannot be parsed using the specified format. The exception message specifies the line causing the exception, while the &lt;see cref=&quot;P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine&quot; /&gt; property is assigned the text contained in the line.">无法使用指定的格式分析某行 ()。 此异常消息指定导致发生异常的行，同时将 <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> 属性分配给该行中包含的文本。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">该用户缺少查看该路径所必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.Int32[])">
      <summary vsli:raw="The &lt;see langword=&quot;OpenTextFieldParser&quot; /&gt; method allows you to create a &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; object, which provides a way to easily and efficiently parse structured text files, such as logs. The &lt;see langword=&quot;TextFieldParser&quot; /&gt; object can be used to read both delimited and fixed-width files.">使用 <see langword="OpenTextFieldParser" /> 方法可以创建 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 对象，该对象为分析结构化文本文件（例如日志）提供了一种简单而有效的方法。 <see langword="TextFieldParser" /> 对象可用于读取分隔文件和固定宽度文件。</summary>
      <param name="file" vsli:raw="The file to be opened with the &lt;see langword=&quot;TextFieldParser&quot; /&gt;.">要使用 <see langword="TextFieldParser" /> 打开的文件。</param>
      <param name="fieldWidths" vsli:raw="Widths of the fields.">字段的宽度。</param>
      <returns vsli:raw="&lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; to read the specified file.">用于读取指定文件的 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）；以尾部反斜杠结尾。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" /> 为 <see langword="Nothing" />。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">文件不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">文件正由另一个进程使用，或者出现 I/O 错误。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" vsli:raw="A row cannot be parsed using the specified format. The exception message specifies the line causing the exception, while the &lt;see cref=&quot;P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine&quot; /&gt; property is assigned the text contained in the line.">无法使用指定的格式分析某行 ()。 此异常消息指定导致发生异常的行，同时将 <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> 属性分配给该行中包含的文本。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">该用户缺少查看该路径所必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.String[])">
      <summary vsli:raw="The &lt;see langword=&quot;OpenTextFieldParser&quot; /&gt; method allows you to create a &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; object, which provides a way to easily and efficiently parse structured text files, such as logs. The &lt;see langword=&quot;TextFieldParser&quot; /&gt; object can be used to read both delimited and fixed-width files.">使用 <see langword="OpenTextFieldParser" /> 方法可以创建 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 对象，该对象为分析结构化文本文件（例如日志）提供了一种简单而有效的方法。 <see langword="TextFieldParser" /> 对象可用于读取分隔文件和固定宽度文件。</summary>
      <param name="file" vsli:raw="The file to be opened with the &lt;see langword=&quot;TextFieldParser&quot; /&gt;.">要使用 <see langword="TextFieldParser" /> 打开的文件。</param>
      <param name="delimiters" vsli:raw="Delimiters for the fields.">字段分隔符。</param>
      <returns vsli:raw="&lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; to read the specified file.">用于读取指定文件的 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）；以尾部反斜杠结尾。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" /> 为 <see langword="Nothing" />。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">文件不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">文件正由另一个进程使用，或者出现 I/O 错误。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" vsli:raw="A row cannot be parsed using the specified format. The exception message specifies the line causing the exception, while the &lt;see cref=&quot;P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine&quot; /&gt; property is assigned the text contained in the line.">无法使用指定的格式分析某行 ()。 此异常消息指定导致发生异常的行，同时将 <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> 属性分配给该行中包含的文本。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">该用户缺少查看该路径所必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String)">
      <summary vsli:raw="Opens a &lt;see cref=&quot;T:System.IO.StreamReader&quot; /&gt; object to read from a file.">打开要从文件中读取的 <see cref="T:System.IO.StreamReader" /> 对象。</summary>
      <param name="file" vsli:raw="File to be read.">要读取的文件。</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.IO.StreamReader&quot; /&gt; object to read from the file.">要从文件中读取的 <see cref="T:System.IO.StreamReader" /> 对象</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The file name ends with a backslash (\).">文件名以反斜杠 (\) 结尾。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The specified file cannot be found.">无法找到指定的文件。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to read from the file.">该用户缺少从文件读取所必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String,System.Text.Encoding)">
      <summary vsli:raw="Opens a &lt;see cref=&quot;T:System.IO.StreamReader&quot; /&gt; object to read from a file.">打开要从文件中读取的 <see cref="T:System.IO.StreamReader" /> 对象。</summary>
      <param name="file" vsli:raw="File to be read.">要读取的文件。</param>
      <param name="encoding" vsli:raw="The encoding to use for the file contents. Default is ASCII.">要用于文件内容的编码。 默认值为 ASCII。</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.IO.StreamReader&quot; /&gt; object to read from the file.">要从文件中读取的 <see cref="T:System.IO.StreamReader" /> 对象</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The file name ends with a backslash (\).">文件名以反斜杠 (\) 结尾。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The specified file cannot be found.">无法找到指定的文件。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to read from the file.">该用户缺少从文件读取所必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean)">
      <summary vsli:raw="Opens a &lt;see cref=&quot;T:System.IO.StreamWriter&quot; /&gt; object to write to the specified file.">打开要写入指定文件的 <see cref="T:System.IO.StreamWriter" /> 对象。</summary>
      <param name="file" vsli:raw="File to be written to.">要写入的文件。</param>
      <param name="append" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to append to the contents of the file; &lt;see langword=&quot;False&quot; /&gt; to overwrite the contents of the file. Default is &lt;see langword=&quot;False&quot; /&gt;.">要追加到文件的内容中，则为 <see langword="True" />；要覆盖文件的内容，则为 <see langword="False" />。 默认值为 <see langword="False" />。</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.IO.StreamWriter&quot; /&gt; object to write to the specified file.">要写入指定文件的 <see cref="T:System.IO.StreamWriter" /> 对象。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="file" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The file name ends with a trailing slash.">文件名以尾部反斜杠结尾。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)">
      <summary vsli:raw="Opens a &lt;see cref=&quot;T:System.IO.StreamWriter&quot; /&gt; to write to the specified file.">打开要写入指定文件的 <see cref="T:System.IO.StreamWriter" />。</summary>
      <param name="file" vsli:raw="File to be written to.">要写入的文件。</param>
      <param name="append" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to append to the contents in the file; &lt;see langword=&quot;False&quot; /&gt; to overwrite the contents of the file. Default is &lt;see langword=&quot;False&quot; /&gt;.">若要追加到文件的内容中，则为 <see langword="True" />；若要覆盖文件的内容，则为 <see langword="False" />。 默认值为 <see langword="False" />。</param>
      <param name="encoding" vsli:raw="Encoding to be used in writing to the file. Default is ASCII.">写入文件时要使用的编码。 默认值为 ASCII。</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.IO.StreamWriter&quot; /&gt; object to write to the specified file.">要写入指定文件的 <see cref="T:System.IO.StreamWriter" /> 对象。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="file" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The file name ends with a trailing slash.">文件名以尾部反斜杠结尾。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllBytes(System.String)">
      <summary vsli:raw="Returns the contents of a file as a byte array.">以字节数组的形式返回文件的内容。</summary>
      <param name="file" vsli:raw="File to be read.">要读取的文件。</param>
      <returns vsli:raw="&lt;see langword=&quot;Byte&quot; /&gt; array containing the contents of the file.">包含文件内容的 <see langword="Byte" /> 数组。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）；以尾部反斜杠结尾。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" /> 为 <see langword="Nothing" />。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">文件不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">文件正由另一个进程使用，或者出现 I/O 错误。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory to write the string to buffer.">内存不足，无法将字符串写入缓冲区。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">该用户缺少查看该路径所必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String)">
      <summary vsli:raw="Returns the contents of a text file as a &lt;see langword=&quot;String&quot; /&gt;.">将文本文件的内容作为 <see langword="String" /> 返回。</summary>
      <param name="file" vsli:raw="Name and path of the file to read.">要读取的文件的名称和路径。</param>
      <returns vsli:raw="&lt;see langword=&quot;String&quot; /&gt; containing the contents of the file.">包含文件内容的 <see langword="String" />。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）；以尾部反斜杠结尾。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" /> 为 <see langword="Nothing" />。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">文件不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">文件正由另一个进程使用，或者出现 I/O 错误。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory to write the string to buffer.">内存不足，无法将字符串写入缓冲区。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">该用户缺少查看该路径所必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String,System.Text.Encoding)">
      <summary vsli:raw="Returns the contents of a text file as a &lt;see langword=&quot;String&quot; /&gt;.">将文本文件的内容作为 <see langword="String" /> 返回。</summary>
      <param name="file" vsli:raw="Name and path of the file to read.">要读取的文件的名称和路径。</param>
      <param name="encoding" vsli:raw="Character encoding to use in reading the file. Default is UTF-8.">读取文件时要使用的字符编码。 默认值为 UTF-8。</param>
      <returns vsli:raw="&lt;see langword=&quot;String&quot; /&gt; containing the contents of the file.">包含文件内容的 <see langword="String" />。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）；以尾部反斜杠结尾。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" /> 为 <see langword="Nothing" />。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">文件不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">文件正由另一个进程使用，或者出现 I/O 错误。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory to write the string to buffer.">内存不足，无法将字符串写入缓冲区。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">该用户缺少查看该路径所必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.RenameDirectory(System.String,System.String)">
      <summary vsli:raw="Renames a directory.">重命名目录。</summary>
      <param name="directory" vsli:raw="Path and name of directory to be renamed.">要重命名的目录的路径和名称。</param>
      <param name="newName" vsli:raw="New name for directory.">目录的新名称。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;newName&quot; /&gt; contains path information.">
        <paramref name="newName" /> 包含路径信息。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;newName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="directory" /> 为 <see langword="Nothing" />。  

或 - 
<paramref name="newName" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory does not exist.">该目录不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="There is an existing file or directory with the name specified in &lt;paramref name=&quot;newName&quot; /&gt;.">存在一个具有 <paramref name="newName" /> 中指定的名称的文件或目录。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">该用户缺少查看该路径所必需的权限。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">该用户没有必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.RenameFile(System.String,System.String)">
      <summary vsli:raw="Renames a file.">重命名文件。</summary>
      <param name="file" vsli:raw="File to be renamed.">要重命名的文件。</param>
      <param name="newName" vsli:raw="New name of file.">文件的新名称。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;newName&quot; /&gt; contains path information or ends with a backslash (\).">
        <paramref name="newName" /> 包含路径信息或以反斜杠 (\) 结尾。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;newName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="file" /> 为 <see langword="Nothing" />。  

或 - 
<paramref name="newName" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The directory does not exist.">该目录不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="There is an existing file or directory with the name specified in &lt;paramref name=&quot;newName&quot; /&gt;.">存在一个具有 <paramref name="newName" /> 中指定的名称的文件或目录。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">该用户缺少查看该路径所必需的权限。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">该用户没有必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllBytes(System.String,System.Byte[],System.Boolean)">
      <summary vsli:raw="Writes data to a binary file.">将数据写入二进制文件。</summary>
      <param name="file" vsli:raw="Path and name of the file to be written to.">要写入的文件的路径和名称。</param>
      <param name="data" vsli:raw="Data to be written to the file.">要写入文件的数据。</param>
      <param name="append" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to append to the file contents; &lt;see langword=&quot;False&quot; /&gt; to overwrite the file contents. Default is &lt;see langword=&quot;False&quot; /&gt;.">若要追加到文件内容中，则为 <see langword="True" />；若要覆盖文件内容，则为 <see langword="False" />。 默认值为 <see langword="False" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）；以尾部反斜杠结尾。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" /> 为 <see langword="Nothing" />。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">文件不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">文件正由另一个进程使用，或者出现 I/O 错误。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory to write the string to buffer.">内存不足，无法将字符串写入缓冲区。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">该用户缺少查看该路径所必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Writes text to a file.">向文件写入文本。</summary>
      <param name="file" vsli:raw="File to be written to.">要写入的文件。</param>
      <param name="text" vsli:raw="Text to be written to file.">要写入文件的文本。</param>
      <param name="append" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to append to the contents of the file; &lt;see langword=&quot;False&quot; /&gt; to overwrite the contents of the file.">要追加到文件的内容中，则为 <see langword="True" />；要覆盖文件的内容，则为 <see langword="False" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）；以尾部反斜杠结尾。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" /> 为 <see langword="Nothing" />。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">文件不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">文件正由另一个进程使用，或者出现 I/O 错误。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory to write the string to buffer.">内存不足，无法将字符串写入缓冲区。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">该用户缺少查看该路径所必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)">
      <summary vsli:raw="Writes text to a file.">向文件写入文本。</summary>
      <param name="file" vsli:raw="File to be written to.">要写入的文件。</param>
      <param name="text" vsli:raw="Text to be written to file.">要写入文件的文本。</param>
      <param name="append" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to append to the contents of the file; &lt;see langword=&quot;False&quot; /&gt; to overwrite the contents of the file.">要追加到文件的内容中，则为 <see langword="True" />；要覆盖文件的内容，则为 <see langword="False" />。</param>
      <param name="encoding" vsli:raw="What encoding to use when writing to file.">写入文件时要使用的编码。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）；以尾部反斜杠结尾。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" /> 为 <see langword="Nothing" />。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">文件不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">文件正由另一个进程使用，或者出现 I/O 错误。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory to write the string to buffer.">内存不足，无法将字符串写入缓冲区。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">该用户缺少查看该路径所必需的权限。</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.MalformedLineException">
      <summary vsli:raw="The exception that is thrown when the &lt;see cref=&quot;M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields&quot; /&gt; method cannot parse a row using the specified format.">当 <see cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields" /> 方法不能使用指定格式分析行时引发的异常。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; class.">初始化 <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; class with serialized data.">用序列化数据初始化 <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> 类的新实例。</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that holds the serialized object data about the exception being thrown.">存放有关所引发异常的序列化对象数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; structure that contains contextual information about the source or destination.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> 结构，它包含有关源或目标的上下文信息。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; class with a specified error message.">用指定的错误消息初始化 <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="A message that describes the error.">描述错误的消息。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">使用指定的错误消息和对作为此异常原因的内部异常的引用来初始化 <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; describing the error.">描述该错误的 <see cref="T:System.String" />。</param>
      <param name="innerException" vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; object that is the cause of the current exception. If the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; parameter is not a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic), the current exception is raised in a catch block that handles the inner exception.">表示当前异常的产生原因的 <see cref="T:System.Exception" /> 对象。 如果 <see cref="P:System.Exception.InnerException" /> 参数不是空引用（在 Visual Basic 中为 <see langword="Nothing" />），则在处理内部异常的 catch 块中引发当前异常。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; class with a specified error message and a line number.">使用指定的错误消息和行号初始化 <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="The message for the exception.">异常消息。</param>
      <param name="lineNumber" vsli:raw="The line number of the malformed line.">格式错误的行的行号。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Int64,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; class with a specified error message, a line number, and a reference to the inner exception that is the cause of this exception.">使用指定的错误消息、行号和对作为此异常原因的内部异常的引用来初始化 <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="The message for the exception.">异常消息。</param>
      <param name="lineNumber" vsli:raw="The line number of the malformed line.">格式错误的行的行号。</param>
      <param name="innerException" vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; that is the cause of the current exception. If the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; parameter is not a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic), the current exception is raised in a catch block that handles the inner exception.">导致当前异常的 <see cref="T:System.Exception" />。 如果 <see cref="P:System.Exception.InnerException" /> 参数不是空引用（在 Visual Basic 中为 <see langword="Nothing" />），则在处理内部异常的 catch 块中引发当前异常。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object with information about the exception.">使用有关异常的信息设置 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that holds the serialized object data about the exception being thrown.">存放有关所引发异常的序列化对象数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; structure that contains contextual information about the source or destination.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> 结构，它包含有关源或目标的上下文信息。</param>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.MalformedLineException.LineNumber">
      <summary vsli:raw="Gets the line number of the malformed line.">获取格式错误的行的行号。</summary>
      <returns vsli:raw="The line number of the malformed line.">格式错误的行的行号。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.ToString">
      <summary vsli:raw="Creates and returns a string representation of the current exception.">创建并返回当前异常的字符串表示形式。</summary>
      <returns vsli:raw="A string representation of the current exception.">当前异常的字符串表示形式。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.RecycleOption">
      <summary vsli:raw="Specifies whether a file should be deleted permanently or placed in the Recycle Bin.">指定文件是应永久删除还是放入“回收站”中。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.RecycleOption.DeletePermanently">
      <summary vsli:raw="Delete the file or directory permanently. Default.">永久删除文件或目录。 默认。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.RecycleOption.SendToRecycleBin">
      <summary vsli:raw="Send the file or directory to the Recycle Bin.">将文件或目录发送至“回收站”。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.SearchOption">
      <summary vsli:raw="Specifies whether to search all or only top-level directories.">指定是搜索所有目录还是仅搜索顶级目录。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.SearchOption.SearchAllSubDirectories">
      <summary vsli:raw="Search the specified directory and all subdirectories within it. Default.">搜索指定目录及其中的所有子目录。 默认。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.SearchOption.SearchTopLevelOnly">
      <summary vsli:raw="Search only the specified directory and exclude subdirectories.">只搜索指定目录，不搜索子目录。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.SpecialDirectories">
      <summary vsli:raw="Provides properties for accessing commonly referenced directories.">提供了用于访问经常引用的目录的属性。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.SpecialDirectories.#ctor">
      <summary vsli:raw="Returns an instance of the &lt;see cref=&quot;P:Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories&quot; /&gt; class.">返回 <see cref="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories" /> 类的实例。</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.AllUsersApplicationData">
      <summary vsli:raw="Gets a path name pointing to the Application Data directory for the all users.">获取指向所有用户的 Application Data 目录的路径名称。</summary>
      <returns vsli:raw="The path to the Application Data directory for the all users.">指向所有用户的 Application Data 目录的路径。</returns>
      <exception cref="T:System.Security.Permissions.EnvironmentPermission" vsli:raw="Controls access to system and user environment variables. Associated enumeration: &lt;see cref=&quot;F:System.Security.Permissions.PermissionState.Unrestricted&quot; /&gt;.">控制对系统和用户环境变量的访问。 关联枚举：<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">路径为空，通常是因为操作系统不支持该目录。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.CurrentUserApplicationData">
      <summary vsli:raw="Gets a path name pointing to the Application Data directory for the current user.">获取指向当前用户的 Application Data 目录的路径名称。</summary>
      <returns vsli:raw="The path to the Application Data directory for the current user.">指向当前用户的 Application Data 目录的路径。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">路径为空，通常是因为操作系统不支持该目录。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Desktop">
      <summary vsli:raw="Gets a path name pointing to the Desktop directory.">获取指向 Desktop 目录的路径名称。</summary>
      <returns vsli:raw="The path to the Desktop directory.">Desktop 目录的路径。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">路径为空，通常是因为操作系统不支持该目录。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyDocuments">
      <summary vsli:raw="Gets a path name pointing to the My Documents directory.">获取指向 My Documents 目录的路径名称。</summary>
      <returns vsli:raw="The path to the My Documents directory.">指向 My Documents 目录的路径。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">路径为空，通常是因为操作系统不支持该目录。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyMusic">
      <summary vsli:raw="Gets a path name pointing to the My Music directory.">获取指向 My Music 目录的路径名称。</summary>
      <returns vsli:raw="The path to the My Music directory.">指向 My Music 目录的路径。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">路径为空，通常是因为操作系统不支持该目录。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyPictures">
      <summary vsli:raw="Gets a path name pointing to the My Pictures directory.">获取指向 My Pictures 目录的路径名称。</summary>
      <returns vsli:raw="The path to the My Pictures directory.">指向 My Pictures 目录的路径。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">路径为空，通常是因为操作系统不支持该目录。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.ProgramFiles">
      <summary vsli:raw="Gets a path pointing to the Program Files directory.">获取指向 Program Files 目录的路径。</summary>
      <returns vsli:raw="The path to the Program Files directory.">Program Files目录的路径。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">路径为空，通常是因为操作系统不支持该目录。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Programs">
      <summary vsli:raw="Gets a path name pointing to the Programs directory.">获取指向 Programs 目录的路径名称。</summary>
      <returns vsli:raw="The path to the Programs directory.">指向 Programs 目录的路径。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">路径为空，通常是因为操作系统不支持该目录。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Temp">
      <summary vsli:raw="Gets a path name pointing to the Temp directory.">获取指向 Temp 目录的路径名称。</summary>
      <returns vsli:raw="The path to the Temp directory.">指向 Temp 目录的路径。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">路径为空，通常是因为操作系统不支持该目录。</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.TextFieldParser">
      <summary vsli:raw="Provides methods and properties for parsing structured text files.">提供分析结构化文本文件的方法和属性。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TextFieldParser&quot; /&gt; class.">初始化 <see langword="TextFieldParser" /> 类的新实例。</summary>
      <param name="stream" vsli:raw="&lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;. The stream to be parsed.">
        <see cref="T:System.IO.Stream" />。 要分析的流。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="stream" /> 为 <see langword="Nothing" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; cannot be read from.">无法读取 <paramref name="stream" />。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TextFieldParser&quot; /&gt; class.">初始化 <see langword="TextFieldParser" /> 类的新实例。</summary>
      <param name="stream" vsli:raw="&lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;. The stream to be parsed.">
        <see cref="T:System.IO.Stream" />。 要分析的流。</param>
      <param name="defaultEncoding" vsli:raw="&lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt;. The character encoding to use if encoding is not determined from file. Default is &lt;see cref=&quot;P:System.Text.Encoding.UTF8&quot; /&gt;.">
        <see cref="T:System.Text.Encoding" />。 在无法从文件确定编码时要使用的字符编码。 默认值为 <see cref="P:System.Text.Encoding.UTF8" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; or &lt;paramref name=&quot;defaultEncoding&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="stream" /> 或 <paramref name="defaultEncoding" /> 为 <see langword="Nothing" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; cannot be read from.">无法读取 <paramref name="stream" />。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TextFieldParser&quot; /&gt; class.">初始化 <see langword="TextFieldParser" /> 类的新实例。</summary>
      <param name="stream" vsli:raw="&lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;. The stream to be parsed.">
        <see cref="T:System.IO.Stream" />。 要分析的流。</param>
      <param name="defaultEncoding" vsli:raw="&lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt;. The character encoding to use if encoding is not determined from file. Default is &lt;see cref=&quot;P:System.Text.Encoding.UTF8&quot; /&gt;.">
        <see cref="T:System.Text.Encoding" />。 在无法从文件确定编码时要使用的字符编码。 默认值为 <see cref="P:System.Text.Encoding.UTF8" />。</param>
      <param name="detectEncoding" vsli:raw="&lt;see langword=&quot;Boolean&quot; /&gt;. Indicates whether to look for byte order marks at the beginning of the file. Default is &lt;see langword=&quot;True&quot; /&gt;.">
        <see langword="Boolean" />。 指示是否在文件头查找字节顺序标记。 默认值为 <see langword="True" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; or &lt;paramref name=&quot;defaultEncoding&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="stream" /> 或 <paramref name="defaultEncoding" /> 为 <see langword="Nothing" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; cannot be read from.">无法读取 <paramref name="stream" />。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TextFieldParser&quot; /&gt; class.">初始化 <see langword="TextFieldParser" /> 类的新实例。</summary>
      <param name="stream" vsli:raw="&lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;. The stream to be parsed.">
        <see cref="T:System.IO.Stream" />。 要分析的流。</param>
      <param name="defaultEncoding" vsli:raw="&lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt;. The character encoding to use if encoding is not determined from file. Default is &lt;see cref=&quot;P:System.Text.Encoding.UTF8&quot; /&gt;.">
        <see cref="T:System.Text.Encoding" />。 在无法从文件确定编码时要使用的字符编码。 默认值为 <see cref="P:System.Text.Encoding.UTF8" />。</param>
      <param name="detectEncoding" vsli:raw="&lt;see langword=&quot;Boolean&quot; /&gt;. Indicates whether to look for byte order marks at the beginning of the file. Default is &lt;see langword=&quot;True&quot; /&gt;.">
        <see langword="Boolean" />。 指示是否在文件头查找字节顺序标记。 默认值为 <see langword="True" />。</param>
      <param name="leaveOpen" vsli:raw="&lt;see langword=&quot;Boolean&quot; /&gt;. Indicates whether to leave &lt;paramref name=&quot;stream&quot; /&gt; open when the &lt;see langword=&quot;TextFieldParser&quot; /&gt; object is closed. Default is &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="Boolean" />。 指示在 <see langword="TextFieldParser" /> 对象关闭时，是否将 <paramref name="stream" /> 保留为打开状态。 默认值为 <see langword="False" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; or &lt;paramref name=&quot;defaultEncoding&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="stream" /> 或 <paramref name="defaultEncoding" /> 为 <see langword="Nothing" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; cannot be read from.">无法读取 <paramref name="stream" />。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.TextReader)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TextFieldParser&quot; /&gt; class.">初始化 <see langword="TextFieldParser" /> 类的新实例。</summary>
      <param name="reader" vsli:raw="&lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;. The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; stream to be parsed.">
        <see cref="T:System.IO.TextReader" />。 要分析的 <see cref="T:System.IO.TextReader" /> 流。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;reader&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="reader" /> 为 <see langword="Nothing" />。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TextFieldParser&quot; /&gt; class.">初始化 <see langword="TextFieldParser" /> 类的新实例。</summary>
      <param name="path" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. The complete path of the file to be parsed.">
        <see langword="String" />。 要分析的文件的完整路径。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is an empty string.">
        <paramref name="path" /> 是一个空字符串。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TextFieldParser&quot; /&gt; class.">初始化 <see langword="TextFieldParser" /> 类的新实例。</summary>
      <param name="path" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. The complete path of the file to be parsed.">
        <see langword="String" />。 要分析的文件的完整路径。</param>
      <param name="defaultEncoding" vsli:raw="&lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt;. The character encoding to use if encoding is not determined from file. Default is &lt;see cref=&quot;P:System.Text.Encoding.UTF8&quot; /&gt;.">
        <see cref="T:System.Text.Encoding" />。 在无法从文件确定编码时要使用的字符编码。 默认值为 <see cref="P:System.Text.Encoding.UTF8" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is an empty string or &lt;paramref name=&quot;defaultEncoding&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="path" /> 是一个空字符串，或 <paramref name="defaultEncoding" /> 为<see langword="Nothing" />。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TextFieldParser&quot; /&gt; class.">初始化 <see langword="TextFieldParser" /> 类的新实例。</summary>
      <param name="path" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. The complete path of the file to be parsed.">
        <see langword="String" />。 要分析的文件的完整路径。</param>
      <param name="defaultEncoding" vsli:raw="&lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt;. The character encoding to use if encoding is not determined from file. Default is &lt;see cref=&quot;P:System.Text.Encoding.UTF8&quot; /&gt;.">
        <see cref="T:System.Text.Encoding" />。 在无法从文件确定编码时要使用的字符编码。 默认值为 <see cref="P:System.Text.Encoding.UTF8" />。</param>
      <param name="detectEncoding" vsli:raw="&lt;see langword=&quot;Boolean&quot; /&gt;. Indicates whether to look for byte order marks at the beginning of the file. Default is &lt;see langword=&quot;True&quot; /&gt;.">
        <see langword="Boolean" />。 指示是否在文件头查找字节顺序标记。 默认值为 <see langword="True" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is an empty string or &lt;paramref name=&quot;defaultEncoding&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="path" /> 是一个空字符串，或 <paramref name="defaultEncoding" /> 为<see langword="Nothing" />。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Close">
      <summary vsli:raw="Closes the current &lt;see langword=&quot;TextFieldParser&quot; /&gt; object.">关闭当前的 <see langword="TextFieldParser" /> 对象。</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens">
      <summary vsli:raw="Defines comment tokens. A comment token is a string that, when placed at the beginning of a line, indicates that the line is a comment and should be ignored by the parser.">定义注释标记。 注释标记是一个字符串，当位于行首时，指示该行是一个注释并且分析器应该忽略该行。</summary>
      <returns vsli:raw="A string array that contains all of the comment tokens for the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; object.">一个字符串数组，它包含 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 对象的所有注释标记。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A comment token includes white space.">注释标记包含空白。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters">
      <summary vsli:raw="Defines the delimiters for a text file.">定义文本文件的分隔符。</summary>
      <returns vsli:raw="A string array that contains all of the field delimiters for the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; object.">一个字符串数组，它包含 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 对象的所有字段分隔符。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A delimiter value is set to a newline character, an empty string, or &lt;see langword=&quot;Nothing&quot; /&gt;.">分隔符值设置为换行符、空字符串或 <see langword="Nothing" />。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose(System.Boolean)">
      <summary vsli:raw="Releases resources used by the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; object.">释放由 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 对象使用的资源。</summary>
      <param name="disposing" vsli:raw="Boolean. &lt;see langword=&quot;True&quot; /&gt; releases both managed and unmanaged resources; &lt;see langword=&quot;False&quot; /&gt; releases only unmanaged resources.">布尔值。 若为 <see langword="True" />，释放托管资源和非托管资源；若为 <see langword="False" />，则只释放非托管资源。</param>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData">
      <summary vsli:raw="Returns &lt;see langword=&quot;True&quot; /&gt; if there are no non-blank, non-comment lines between the current cursor position and the end of the file.">如果在当前光标位置到文件末尾之间没有非空、非注释行，则返回 <see langword="True" />。</summary>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if there is no more data to read; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">如果没有更多可供读取的数据，则为 <see langword="True" />；否则为 <see langword="False" />。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine">
      <summary vsli:raw="Returns the line that caused the most recent &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; exception.">返回导致最近发生的 <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> 异常的行。</summary>
      <returns vsli:raw="The line that caused the most recent &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; exception.">导致最近发生的 <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> 异常的行。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber">
      <summary vsli:raw="Returns the number of the line that caused the most recent &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; exception.">返回导致最近发生的 <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> 异常的行的行号。</summary>
      <returns vsli:raw="The number of the line that caused the most recent &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; exception.">导致最近发生的 <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> 异常的行的行号。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths">
      <summary vsli:raw="Denotes the width of each column in the text file being parsed.">表示正在分析的文本文件中每一列的宽度。</summary>
      <returns vsli:raw="An integer array that contains the width of each column in the text file that is being parsed.">一个整数数组，它包含正在分析的文本文件中每一列的宽度。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A width value in any location other than the last entry of the array is less than or equal to zero.">除数组最后一个条目外的任意位置中的宽度值小于或等于零。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Finalize">
      <summary vsli:raw="Allows the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; object to attempt to free resources and perform other cleanup operations before it is reclaimed by garbage collection.">允许 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 对象在由垃圾回收功能回收之前尝试释放资源并执行其他清理操作。</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes">
      <summary vsli:raw="Denotes whether fields are enclosed in quotation marks when a delimited file is being parsed.">指示在分析分隔的文件时是否用引号将字段括起来。</summary>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if fields are enclosed in quotation marks; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">如果将字段用引号括起来，则为 <see langword="True" />；否则为 <see langword="False" />。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.LineNumber">
      <summary vsli:raw="Returns the current line number, or returns -1 if no more characters are available in the stream.">返回当前行号，如果流中没有更多字符，则返回 -1。</summary>
      <returns vsli:raw="The current line number.">当前行号。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)">
      <summary vsli:raw="Reads the specified number of characters without advancing the cursor.">读取指定数目的字符但不前移光标。</summary>
      <param name="numberOfChars" vsli:raw="The number of characters to read. Required.">
        <see langword="Int32" />。 要读取的字符数。 必需。</param>
      <returns vsli:raw="A string that contains the specified number of characters read.">包含读取的指定数量的字符的字符串。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;numberOfChars&quot; /&gt; is less than 0.">
        <paramref name="numberOfChars" /> 小于 0。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields">
      <summary vsli:raw="Reads all fields on the current line, returns them as an array of strings, and advances the cursor to the next line containing data.">读取当前行的所有字段，以字符串数组的形式返回这些字段，并将光标前进到包含数据的下一行。</summary>
      <returns vsli:raw="An array of strings that contains field values for the current line.">包含当前行的字段值的字符串数组。</returns>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" vsli:raw="A field cannot be parsed by using the specified format.">不能使用指定格式分析字段。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine">
      <summary vsli:raw="Returns the current line as a string and advances the cursor to the next line.">将当前行作为字符串返回，并将光标前进到下一行。</summary>
      <returns vsli:raw="The current line from the file or stream.">文件或流中的当前行。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd">
      <summary vsli:raw="Reads the remainder of the text file and returns it as a string.">读取文本文件的其余部分并作为一个字符串返回。</summary>
      <returns vsli:raw="The remaining text from the file or stream.">文件或流中的其余文本。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])">
      <summary vsli:raw="Sets the delimiters for the reader to the specified values, and sets the field type to &lt;see langword=&quot;Delimited&quot; /&gt;.">将读取器的分隔符设为指定的值，并将字段类型设为 <see langword="Delimited" />。</summary>
      <param name="delimiters" vsli:raw="Array of type &lt;see langword=&quot;String&quot; /&gt;.">
        <see langword="String" /> 类型的数组。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A delimiter is zero-length.">分隔符为零长度 ()。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])">
      <summary vsli:raw="Sets the delimiters for the reader to the specified values.">将读取器的分隔符设置为指定值。</summary>
      <param name="fieldWidths" vsli:raw="Array of &lt;see langword=&quot;Integer&quot; /&gt;.">
        <see langword="Integer" /> 数组。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.System#IDisposable#Dispose">
      <summary>释放由 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 对象使用的资源。</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType">
      <summary vsli:raw="Indicates whether the file to be parsed is delimited or fixed-width.">指定要分析的文件是分隔的还是固定宽度的。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType&quot; /&gt; value that indicates whether the file to be parsed is delimited or fixed-width.">一个 <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType" /> 值，它指示要分析的文件是分隔的还是固定宽度的。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TrimWhiteSpace">
      <summary vsli:raw="Indicates whether leading and trailing white space should be trimmed from field values.">指示是否应移除字段值中的前导和尾随空白。</summary>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if leading and trailing white space should be trimmed from field values; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">如果应移除字段值中的前导和尾随空白，则为 <see langword="True" />；否则为 <see langword="False" />。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.UICancelOption">
      <summary vsli:raw="Specifies whether an exception is thrown if the user clicks Cancel during an operation.">指定当用户在操作中单击“取消”时是否引发异常。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UICancelOption.DoNothing">
      <summary vsli:raw="Do nothing when the user clicks Cancel.">当用户单击“取消”时不执行任何操作。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException">
      <summary vsli:raw="Throw an exception when the user clicks Cancel.">当用户单击“取消”时引发异常。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.UIOption">
      <summary vsli:raw="Specifies which dialog boxes to show when copying, deleting, or moving files or directories.">指定当复制、删除或移动文件或目录时要显示的对话框。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UIOption.AllDialogs">
      <summary vsli:raw="Show progress dialog box and any error dialog boxes.">显示进度对话框和任何错误对话框。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UIOption.OnlyErrorDialogs">
      <summary vsli:raw="Only show error dialog boxes and hide progress dialog boxes. Default.">只显示错误对话框，隐藏进度对话框。 默认。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileSystem">
      <summary vsli:raw="The &lt;see langword=&quot;FileSystem&quot; /&gt; module contains the procedures that are used to perform file, directory or folder, and system operations. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than using the &lt;see langword=&quot;FileSystem&quot; /&gt; module. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">
        <see langword="FileSystem" /> 模块包含用于执行文件、目录或文件夹以及系统操作的过程。 与使用 <see langword="My" /> 模块相比，<see langword="FileSystem" /> 功能在文件 I/O 操作方面可为您提供更高的效率和更好的性能。 有关详细信息，请参阅 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)">
      <summary vsli:raw="Changes the current directory or folder. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than the &lt;see langword=&quot;ChDir&quot; /&gt; function. For more information, see &lt;see cref=&quot;P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory&quot; /&gt; .">更改当前目录或文件夹。 与 <see langword="My" /> 函数相比，<see langword="ChDir" /> 功能在文件 I/O 操作方面可提供更高的效率和更好的性能。 有关更多信息，请参见<see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />。</summary>
      <param name="Path" vsli:raw="Required. A string expression that identifies which directory or folder becomes the new default directory or folder. &lt;paramref name=&quot;Path&quot; /&gt; may include the drive. If no drive is specified, &lt;see langword=&quot;ChDir&quot; /&gt; changes the default directory or folder on the current drive.">必需。 一个字符串表达式，用于标识哪个目录或文件夹将成为新的默认目录或文件夹。 <paramref name="Path" /> 可以包含驱动器。 如果未指定驱动器，则 <see langword="ChDir" /> 更改当前驱动器上的默认目录或文件夹。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Path&quot; /&gt; is empty.">
        <paramref name="Path" /> 为空。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="Invalid drive is specified, or drive is unavailable.">指定的驱动器无效，或驱动器不可用。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.ChDrive(System.Char)">
      <summary vsli:raw="Changes the current drive.">更改当前驱动器。</summary>
      <param name="Drive" vsli:raw="Required. String expression that specifies an existing drive. If you supply a zero-length string (&quot;&quot;), the current drive does not change. If the &lt;paramref name=&quot;Drive&quot; /&gt; argument is a multiple-character string, &lt;see langword=&quot;ChDrive&quot; /&gt; uses only the first letter.">必需。 指定现有驱动器的字符串表达式。 如果提供一个零长度字符串 ("")，则当前驱动器不会更改。 如果 <paramref name="Drive" /> 参数为多字符字符串，<see langword="ChDrive" /> 将仅使用第一个字母。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="Invalid drive is specified, or drive is unavailable.">指定的驱动器无效，或驱动器不可用。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.ChDrive(System.String)">
      <summary vsli:raw="Changes the current drive.">更改当前驱动器。</summary>
      <param name="Drive" vsli:raw="Required. String expression that specifies an existing drive. If you supply a zero-length string (&quot;&quot;), the current drive does not change. If the &lt;paramref name=&quot;Drive&quot; /&gt; argument is a multiple-character string, &lt;see langword=&quot;ChDrive&quot; /&gt; uses only the first letter.">必需。 指定现有驱动器的字符串表达式。 如果提供一个零长度字符串 ("")，则当前驱动器不会更改。 如果 <paramref name="Drive" /> 参数为多字符字符串，<see langword="ChDrive" /> 将仅使用第一个字母。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="Invalid drive is specified, or drive is unavailable.">指定的驱动器无效，或驱动器不可用。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.CurDir">
      <summary vsli:raw="Returns a string representing the current path. The &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;CurDir&quot; /&gt;. For more information, see &lt;see cref=&quot;P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory&quot; /&gt;.">返回表示当前路径的字符串。 与 <see langword="CurDir" /> 相比，<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> 在文件 I/O 操作方面可为您提供更高的效率和更好的性能。 有关详细信息，请参阅 <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />。</summary>
      <returns vsli:raw="A string representing the current path.">表示当前路径的字符串。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.CurDir(System.Char)">
      <summary vsli:raw="Returns a string representing the current path. The &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;CurDir&quot; /&gt;. For more information, see &lt;see cref=&quot;P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory&quot; /&gt;.">返回表示当前路径的字符串。 与 <see langword="CurDir" /> 相比，<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> 在文件 I/O 操作方面可为您提供更高的效率和更好的性能。 有关详细信息，请参阅 <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />。</summary>
      <param name="Drive" vsli:raw="Optional. &lt;see langword=&quot;Char&quot; /&gt; expression that specifies an existing drive. If no drive is specified, or if &lt;paramref name=&quot;Drive&quot; /&gt; is a zero-length string (&quot;&quot;), &lt;see langword=&quot;CurDir&quot; /&gt; returns the path for the current drive.">可选。 指定现有驱动器的 <see langword="Char" /> 表达式。 如果未指定驱动器或 <paramref name="Drive" /> 是长度为零的字符串 ("")，则 <see langword="CurDir" /> 返回当前驱动器的路径。</param>
      <returns vsli:raw="A string representing the current path.">表示当前路径的字符串。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Dir">
      <summary vsli:raw="Returns a string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive. The &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; gives you better productivity and performance in file I/O operations than the &lt;see langword=&quot;Dir&quot; /&gt; function. See &lt;see cref=&quot;M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)&quot; /&gt; for more information.">返回表示文件、目录或文件夹名称的字符串，该文件、目录或文件夹具有指定的模式或文件特性，或者具有指定的驱动器卷标。 与 <see langword="Dir" /> 函数相比，<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> 在文件 I/O 操作方面可为您提供更高的效率和更好的性能。 有关更多信息，请参见<see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" />。</summary>
      <returns vsli:raw="A string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.">一个字符串，表示与指定模式或文件特性匹配的文件、目录或文件夹的名称，或者表示驱动器卷标。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Dir(System.String,Microsoft.VisualBasic.FileAttribute)">
      <summary vsli:raw="Returns a string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive. The &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; gives you better productivity and performance in file I/O operations than the &lt;see langword=&quot;Dir&quot; /&gt; function. See &lt;see cref=&quot;M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)&quot; /&gt; for more information.">返回表示文件、目录或文件夹名称的字符串，该文件、目录或文件夹具有指定的模式或文件特性，或者具有指定的驱动器卷标。 与 <see langword="Dir" /> 函数相比，<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> 在文件 I/O 操作方面可为您提供更高的效率和更好的性能。 有关更多信息，请参见<see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" />。</summary>
      <param name="PathName" vsli:raw="Optional. A string expression that specifies a file name, directory or folder name, or drive volume label. A zero-length string (&lt;see langword=&quot;&amp;quot;&amp;quot;&quot; /&gt;) is returned if &lt;paramref name=&quot;PathName&quot; /&gt; is not found.">可选。 一个字符串表达式，用于指定文件名、目录或文件夹名或者驱动器卷标。 如果未找到 <paramref name="PathName" />，则返回一个零长度字符串 (<see langword="&quot;&quot;" />)。</param>
      <param name="Attributes" vsli:raw="Optional. Enumeration or numeric expression whose value specifies file attributes. If omitted, &lt;see langword=&quot;Dir&quot; /&gt; returns files that match &lt;paramref name=&quot;Pathname&quot; /&gt; but have no attributes.">可选。 其值指定文件特性的枚举或数值表达式。 如果省略，则 <see langword="Dir" /> 将返回与 <paramref name="Pathname" /> 匹配但不具有任何特性的文件。</param>
      <returns vsli:raw="A string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.">一个字符串，表示与指定模式或文件特性匹配的文件、目录或文件夹的名称，或者表示驱动器卷标。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.EOF(System.Int32)">
      <summary vsli:raw="Returns a Boolean value &lt;see langword=&quot;True&quot; /&gt; when the end of a file opened for &lt;see langword=&quot;Random&quot; /&gt; or sequential &lt;see langword=&quot;Input&quot; /&gt; has been reached.">当达到为进行 <see langword="True" /> 或顺序 <see langword="Random" /> 而打开的文件的结尾时，此方法返回布尔值 <see langword="Input" />。</summary>
      <param name="FileNumber" vsli:raw="Required. An &lt;see langword=&quot;Integer&quot; /&gt; that contains any valid file number.">必需。 一个包含任何有效文件号的 <see langword="Integer" />。</param>
      <returns vsli:raw="A Boolean value &lt;see langword=&quot;True&quot; /&gt; when the end of a file opened for &lt;see langword=&quot;Random&quot; /&gt; or sequential &lt;see langword=&quot;Input&quot; /&gt; has been reached.">当达到为进行 <see langword="Random" /> 或顺序 <see langword="Input" /> 而打开的文件的结尾时，为布尔值 <see langword="True" />。</returns>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">文件模式无效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileAttr(System.Int32)">
      <summary vsli:raw="Returns an enumeration representing the file mode for files opened using the &lt;see langword=&quot;FileOpen&quot; /&gt; function. The &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; gives you better productivity and performance in file I/O operations than the &lt;see langword=&quot;FileAttr&quot; /&gt; function. See &lt;see cref=&quot;M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)&quot; /&gt; for more information.">返回一个枚举，该枚举表示使用 <see langword="FileOpen" /> 函数打开的文件的文件模式。 与 <see langword="FileAttr" /> 函数相比，<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> 在文件 I/O 操作方面可为您提供更高的效率和更好的性能。 有关更多信息，请参见<see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />。</summary>
      <param name="FileNumber" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt;. Any valid file number.">必需。 <see langword="Integer" />。 任何有效文件数。</param>
      <returns vsli:raw="One of the following values:  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt;Value&lt;/term&gt;&lt;description&gt;File access mode&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;1&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;OpenMode.Input&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;2&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;OpenMode.Output&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;4&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;OpenMode.Random&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;8&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;OpenMode.Append&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;32&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;OpenMode.Binary&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">下列枚举值指示文件访问模式： 
  值 
  模式 
  1 
 <see langword="OpenMode.Input" /> 2 
 <see langword="OpenMode.Output" /> 4 
 <see langword="OpenMode.Random" /> 8 
 <see langword="OpenMode.Append" /> 32 
 <see langword="OpenMode.Binary" /></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileClose(System.Int32[])">
      <summary vsli:raw="Concludes input/output (I/O) to a file opened using the &lt;see langword=&quot;FileOpen&quot; /&gt; function. &lt;see langword=&quot;My&quot; /&gt; gives you better productivity and performance in file I/O operations. See &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; for more information.">关闭对用 <see langword="FileOpen" /> 函数打开的文件的输入/输出 (I/O)。 <see langword="My" /> 在文件 I/O 操作方面可为您提供更高的效率和更好的性能。 有关更多信息，请参见<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumbers" vsli:raw="Optional. Parameter array of 0 or more channels to be closed.">可选。 要关闭的 0 个或多个信道的参数数组。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;FileNumber&quot; /&gt; does not exist.">
        <paramref name="FileNumber" /> 不存在。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileCopy(System.String,System.String)">
      <summary vsli:raw="Copies a file. The &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileCopy&quot; /&gt;. See &lt;see cref=&quot;M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)&quot; /&gt; for more information.">复制文件。 与 <see langword="FileCopy" /> 相比，<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> 在文件 I/O 操作方面可为您提供更高的效率和更好的性能。 有关更多信息，请参见<see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)" />。</summary>
      <param name="Source" vsli:raw="Required. A string expression that specifies the name of the file to be copied. &lt;paramref name=&quot;Source&quot; /&gt; may include the directory or folder, and drive, of the source file.">必需。 指定要复制的文件的名称的字符串表达式。 <paramref name="Source" /> 可以包含源文件的驱动器和目录或文件夹。</param>
      <param name="Destination" vsli:raw="Required. A string expression that specifies the destination file name. &lt;paramref name=&quot;Destination&quot; /&gt; may include the directory or folder, and drive, of the destination file.">必需。 指定目标文件名的字符串表达式。 <paramref name="Destination" /> 可包含目标文件的驱动器和目录或文件夹。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Source&quot; /&gt; or &lt;paramref name=&quot;Destination&quot; /&gt; is invalid or not specified.">
        <paramref name="Source" /> 或 <paramref name="Destination" /> 无效或未指定。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File is already open.">文件已打开。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="File does not exist.">文件不存在。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileDateTime(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Date&quot; /&gt; value that indicates the date and time a file was written to. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileDateTime&quot; /&gt;. For more information, see &lt;see cref=&quot;M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)&quot; /&gt;.">返回一个 <see langword="Date" /> 值，该值指示写入文件的日期和时间。 相比 <see langword="FileDateTime" />，<see langword="My" /> 功能可使文件 I/O 操作的效率更高、性能更好。 有关详细信息，请参阅<see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />。</summary>
      <param name="PathName" vsli:raw="Required. A string expression that specifies a file name. &lt;paramref name=&quot;PathName&quot; /&gt; may include the directory or folder, and the drive.">必需。 指定一个文件名的字符串表达式。 <paramref name="PathName" /> 可能包括目录或文件夹以及驱动器。</param>
      <returns vsli:raw="&lt;see langword=&quot;Date&quot; /&gt; value that indicates the date and time a file was created or last modified.">
        <see langword="Date" /> 值，该值指示文件的创建日期和时间或上次修改日期和时间。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;PathName&quot; /&gt; is invalid or contains wildcards.">
        <paramref name="PathName" /> 无效或包含通配符。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="Target file does not exist.">目标文件不存在。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Array@,System.Int64,System.Boolean,System.Boolean)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">将数据从打开的磁盘文件读入到一个变量中。 相比 <see langword="FileGet" />，<see langword="My" /> 功能可使文件 I/O 操作的效率更高、性能更好。 有关详细信息，请参阅 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必需。 任何有效文件数。</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">必需。 数据读入到其中的有效变量名称。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">可选。 读取的开始位置处的记录号（<see langword="Random" /> 模式文件）或字节数（<see langword="Binary" /> 模式文件）。</param>
      <param name="ArrayIsDynamic" vsli:raw="Optional. Applies only when writing an array. Specifies whether the array is to be treated as dynamic and whether an array descriptor describing the size and bounds of the array is necessary.">可选。 仅当写入数组时使用。 指定是否将数组视为动态数组，以及是否需要描述数组大小和边界的数组说明符。</param>
      <param name="StringIsFixedLength" vsli:raw="Optional. Applies only when writing a string. Specifies whether to write a two-byte descriptor for the string that describes the length. The default is &lt;see langword=&quot;False&quot; /&gt;.">可选。 仅在写入字符串时适用。 指定是否为描述长度的字符串写入一个双字节说明符。 默认值为 <see langword="False" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 且不等于 -1。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">文件模式无效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Boolean@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">将数据从打开的磁盘文件读入到一个变量中。 相比 <see langword="FileGet" />，<see langword="My" /> 功能可使文件 I/O 操作的效率更高、性能更好。 有关详细信息，请参阅<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必需。 任何有效文件数。</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">必需。 数据读入到其中的有效变量名称。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">可选。 读取的开始位置处的记录号（<see langword="Random" /> 模式文件）或字节数（<see langword="Binary" /> 模式文件）。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 且不等于 -1。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">文件模式无效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Byte@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">将数据从打开的磁盘文件读入到一个变量中。 相比 <see langword="FileGet" />，<see langword="My" /> 功能可使文件 I/O 操作的效率更高、性能更好。 有关详细信息，请参阅 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必需。 任何有效文件数。</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">必需。 数据读入到其中的有效变量名称。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">可选。 读取的开始位置处的记录号（<see langword="Random" /> 模式文件）或字节数（<see langword="Binary" /> 模式文件）。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 且不等于 -1。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">文件模式无效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Char@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">将数据从打开的磁盘文件读入到一个变量中。 相比 <see langword="FileGet" />，<see langword="My" /> 功能可使文件 I/O 操作的效率更高、性能更好。 有关详细信息，请参阅 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必需。 任何有效文件数。</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">必需。 数据读入到其中的有效变量名称。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">可选。 读取的开始位置处的记录号（<see langword="Random" /> 模式文件）或字节数（<see langword="Binary" /> 模式文件）。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 且不等于 -1。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">文件模式无效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.DateTime@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">将数据从打开的磁盘文件读入到一个变量中。 相比 <see langword="FileGet" />，<see langword="My" /> 功能可使文件 I/O 操作的效率更高、性能更好。 有关详细信息，请参阅 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必需。 任何有效文件数。</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">必需。 数据读入到其中的有效变量名称。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">可选。 读取的开始位置处的记录号（<see langword="Random" /> 模式文件）或字节数（<see langword="Binary" /> 模式文件）。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 且不等于 -1。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">文件模式无效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Decimal@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">将数据从打开的磁盘文件读入到一个变量中。 相比 <see langword="FileGet" />，<see langword="My" /> 功能可使文件 I/O 操作的效率更高、性能更好。 有关详细信息，请参阅 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必需。 任何有效文件数。</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">必需。 数据读入到其中的有效变量名称。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">可选。 读取的开始位置处的记录号（<see langword="Random" /> 模式文件）或字节数（<see langword="Binary" /> 模式文件）。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 且不等于 -1。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">文件模式无效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Double@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">将数据从打开的磁盘文件读入到一个变量中。 相比 <see langword="FileGet" />，<see langword="My" /> 功能可使文件 I/O 操作的效率更高、性能更好。 有关详细信息，请参阅 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必需。 任何有效文件数。</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">必需。 数据读入到其中的有效变量名称。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">可选。 读取的开始位置处的记录号（<see langword="Random" /> 模式文件）或字节数（<see langword="Binary" /> 模式文件）。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 且不等于 -1。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">文件模式无效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int16@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">将数据从打开的磁盘文件读入到一个变量中。 相比 <see langword="FileGet" />，<see langword="My" /> 功能可使文件 I/O 操作的效率更高、性能更好。 有关详细信息，请参阅 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必需。 任何有效文件数。</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">必需。 数据读入到其中的有效变量名称。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">可选。 读取的开始位置处的记录号（<see langword="Random" /> 模式文件）或字节数（<see langword="Binary" /> 模式文件）。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 且不等于 -1。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">文件模式无效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int32@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">将数据从打开的磁盘文件读入到一个变量中。 相比 <see langword="FileGet" />，<see langword="My" /> 功能可使文件 I/O 操作的效率更高、性能更好。 有关详细信息，请参阅 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必需。 任何有效文件数。</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">必需。 数据读入到其中的有效变量名称。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">可选。 读取的开始位置处的记录号（<see langword="Random" /> 模式文件）或字节数（<see langword="Binary" /> 模式文件）。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 且不等于 -1。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">文件模式无效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int64@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">将数据从打开的磁盘文件读入到一个变量中。 相比 <see langword="FileGet" />，<see langword="My" /> 功能可使文件 I/O 操作的效率更高、性能更好。 有关详细信息，请参阅 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必需。 任何有效文件数。</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">必需。 数据读入到其中的有效变量名称。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">可选。 读取的开始位置处的记录号（<see langword="Random" /> 模式文件）或字节数（<see langword="Binary" /> 模式文件）。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 且不等于 -1。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">文件模式无效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Single@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">将数据从打开的磁盘文件读入到一个变量中。 相比 <see langword="FileGet" />，<see langword="My" /> 功能可使文件 I/O 操作的效率更高、性能更好。 有关详细信息，请参阅 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必需。 任何有效文件数。</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">必需。 数据读入到其中的有效变量名称。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">可选。 读取的开始位置处的记录号（<see langword="Random" /> 模式文件）或字节数（<see langword="Binary" /> 模式文件）。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 且不等于 -1。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">文件模式无效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.String@,System.Int64,System.Boolean)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">将数据从打开的磁盘文件读入到一个变量中。 相比 <see langword="FileGet" />，<see langword="My" /> 功能可使文件 I/O 操作的效率更高、性能更好。 有关详细信息，请参阅 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必需。 任何有效文件数。</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">必需。 数据读入到其中的有效变量名称。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">可选。 读取的开始位置处的记录号（<see langword="Random" /> 模式文件）或字节数（<see langword="Binary" /> 模式文件）。</param>
      <param name="StringIsFixedLength" vsli:raw="Optional. Applies only when writing a string. Specifies whether to write a two-byte descriptor for the string that describes the length. The default is &lt;see langword=&quot;False&quot; /&gt;.">可选。 仅在写入字符串时适用。 指定是否为描述长度的字符串写入一个双字节说明符。 默认值为 <see langword="False" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 且不等于 -1。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">文件模式无效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.ValueType@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">将数据从打开的磁盘文件读入到一个变量中。 相比 <see langword="FileGet" />，<see langword="My" /> 功能可使文件 I/O 操作的效率更高、性能更好。 有关详细信息，请参阅 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必需。 任何有效文件数。</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">必需。 数据读入到其中的有效变量名称。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">可选。 读取的开始位置处的记录号（<see langword="Random" /> 模式文件）或字节数（<see langword="Binary" /> 模式文件）。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 且不等于 -1。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">文件模式无效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable.  The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGetObject&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">将数据从打开的磁盘文件读入到一个变量中。  相比 <see langword="FileGetObject" />，<see langword="My" /> 功能可使文件 I/O 操作的效率更高、性能更好。 有关详细信息，请参阅 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必需。 任何有效文件数。</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">必需。 数据读入到其中的有效变量名称。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">可选。 读取的开始位置处的记录号（<see langword="Random" /> 模式文件）或字节数（<see langword="Binary" /> 模式文件）。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileLen(System.String)">
      <summary vsli:raw="Returns a value that specifies the length of a file in bytes. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileLen&quot; /&gt;. For more information, see &lt;see cref=&quot;M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)&quot; /&gt;.">返回一个值，该值以字节为单位指定文件长度。 相比 <see langword="FileLen" />，<see langword="My" /> 功能可使文件 I/O 操作的效率更高、性能更好。 有关详细信息，请参阅 <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />。</summary>
      <param name="PathName" vsli:raw="Required. A string expression that specifies a file. &lt;paramref name=&quot;PathName&quot; /&gt; may include the directory or folder, and the drive.">必需。 指定一个文件的字符串表达式。 <paramref name="PathName" /> 可能包括目录或文件夹以及驱动器。</param>
      <returns vsli:raw="The length of a file in bytes.">文件的长度（以字节为单位）。</returns>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="File does not exist.">文件不存在。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)">
      <summary vsli:raw="Opens a file for input or output. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileOpen&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">打开一个文件以进行输入或输出。 相比 <see langword="FileOpen" />，<see langword="My" /> 功能可使文件 I/O 操作的效率更高、性能更好。 有关详细信息，请参阅 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number. Use the &lt;see langword=&quot;FreeFile&quot; /&gt; function to obtain the next available file number.">必需。 任何有效文件数。 可使用 <see langword="FreeFile" /> 函数获取下一个可用的文件号。</param>
      <param name="FileName" vsli:raw="Required. A string expression that specifies a file name - may include directory or folder, and drive.">必需。 一个指定文件名的字符串表达式，其中可包含目录或文件夹以及驱动器。</param>
      <param name="Mode" vsli:raw="Required. Enumeration specifying the file mode: &lt;see langword=&quot;Append&quot; /&gt;, &lt;see langword=&quot;Binary&quot; /&gt;, &lt;see langword=&quot;Input&quot; /&gt;, &lt;see langword=&quot;Output&quot; /&gt;, or &lt;see langword=&quot;Random&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.OpenMode&quot; /&gt; .">必需。 指定文件模式的枚举：<see langword="Append" />、<see langword="Binary" />、<see langword="Input" />、<see langword="Output" /> 或 <see langword="Random" />。 有关更多信息，请参见<see cref="T:Microsoft.VisualBasic.OpenMode" />。</param>
      <param name="Access" vsli:raw="Optional. Enumeration specifying the operations permitted on the open file: &lt;see langword=&quot;Read&quot; /&gt;, &lt;see langword=&quot;Write&quot; /&gt;, or &lt;see langword=&quot;ReadWrite&quot; /&gt;. Defaults to &lt;see langword=&quot;ReadWrite&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.OpenAccess&quot; /&gt; .">可选。 一个枚举，它指定对打开的文件所允许进行的操作：<see langword="Read" />、<see langword="Write" /> 或 <see langword="ReadWrite" />。 默认为 <see langword="ReadWrite" />。 有关更多信息，请参见<see cref="T:Microsoft.VisualBasic.OpenAccess" />。</param>
      <param name="Share" vsli:raw="Optional. Enumeration specifying the operations not permitted on the open file by other processes: &lt;see langword=&quot;Shared&quot; /&gt;, &lt;see langword=&quot;Lock Read&quot; /&gt;, &lt;see langword=&quot;Lock Write&quot; /&gt;, and &lt;see langword=&quot;Lock Read Write&quot; /&gt;. Defaults to &lt;see langword=&quot;Lock Read Write&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.OpenShare&quot; /&gt; .">可选。 一个枚举，它指定不允许其他进程对打开的文件所进行的操作：<see langword="Shared" />、<see langword="Lock Read" />、<see langword="Lock Write" /> 和 <see langword="Lock Read Write" />。 默认为 <see langword="Lock Read Write" />。 有关更多信息，请参见<see cref="T:Microsoft.VisualBasic.OpenShare" />。</param>
      <param name="RecordLength" vsli:raw="Optional. Number less than or equal to 32,767 (bytes). For files opened for random access, this value is the record length. For sequential files, this value is the number of characters buffered.">可选。 小于或等于 32,767（字节）的数字。 对于为进行随机访问而打开的文件，此值是记录的长度。 对于顺序文件，此值是缓冲的字符数。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="Record length is negative (and not equal to -1).">记录长度是负数（并且不等于 -1）。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;FileName&quot; /&gt; is already open, or &lt;paramref name=&quot;FileName&quot; /&gt; is invalid.">
        <paramref name="FileName" /> 已经打开，或 <paramref name="FileName" /> 无效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Array,System.Int64,System.Boolean,System.Boolean)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">将变量中得数据写入磁盘文件中。 相比 <see langword="FilePut" />，<see langword="My" /> 功能可使文件 I/O 操作的效率更高、性能更好。 有关详细信息，请参阅 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必需。 任何有效文件数。</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">必需。 有效变量名，它包含写入磁盘的数据。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">可选。 开始写入处的记录号（<see langword="Random" /> 模式文件）或字节号（<see langword="Binary" /> 模式文件）。</param>
      <param name="ArrayIsDynamic" vsli:raw="Optional. Applies only when writing an array. Specifies whether the array is to be treated as dynamic, and whether to write an array descriptor for the string that describes the length.">可选。 仅当写入数组时使用。 指定是否将数组视为动态数组，以及是否写入用于描述字符串长度的数组说明符。</param>
      <param name="StringIsFixedLength" vsli:raw="Optional. Applies only when writing a string. Specifies whether to write a two-byte string length descriptor for the string to the file. The default is &lt;see langword=&quot;False&quot; /&gt;.">可选。 仅在写入字符串时适用。 指定是否将字符串的双字节字符串长度说明符写入文件中。 默认值为 <see langword="False" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 且不等于 -1。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">文件模式无效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Boolean,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">将变量中得数据写入磁盘文件中。 相比 <see langword="FilePut" />，<see langword="My" /> 功能可使文件 I/O 操作的效率更高、性能更好。 有关详细信息，请参阅 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必需。 任何有效文件数。</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">必需。 有效变量名，它包含写入磁盘的数据。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">可选。 开始写入处的记录号（<see langword="Random" /> 模式文件）或字节号（<see langword="Binary" /> 模式文件）。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 且不等于 -1。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">文件模式无效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Byte,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">将变量中得数据写入磁盘文件中。 相比 <see langword="FilePut" />，<see langword="My" /> 功能可使文件 I/O 操作的效率更高、性能更好。 有关详细信息，请参阅 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必需。 任何有效文件数。</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">必需。 有效变量名，它包含写入磁盘的数据。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">可选。 开始写入处的记录号（<see langword="Random" /> 模式文件）或字节号（<see langword="Binary" /> 模式文件）。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 且不等于 -1。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">文件模式无效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Char,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">将变量中得数据写入磁盘文件中。 相比 <see langword="FilePut" />，<see langword="My" /> 功能可使文件 I/O 操作的效率更高、性能更好。 有关详细信息，请参阅 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必需。 任何有效文件数。</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">必需。 有效变量名，它包含写入磁盘的数据。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">可选。 开始写入处的记录号（<see langword="Random" /> 模式文件）或字节号（<see langword="Binary" /> 模式文件）。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 且不等于 -1。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">文件模式无效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.DateTime,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">将变量中得数据写入磁盘文件中。 相比 <see langword="FilePut" />，<see langword="My" /> 功能可使文件 I/O 操作的效率更高、性能更好。 有关详细信息，请参阅 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必需。 任何有效文件数。</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">必需。 有效变量名，它包含写入磁盘的数据。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">可选。 开始写入处的记录号（<see langword="Random" /> 模式文件）或字节号（<see langword="Binary" /> 模式文件）。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 且不等于 -1。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">文件模式无效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Decimal,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">将变量中得数据写入磁盘文件中。 相比 <see langword="FilePut" />，<see langword="My" /> 功能可使文件 I/O 操作的效率更高、性能更好。 有关详细信息，请参阅 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必需。 任何有效文件数。</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">必需。 有效变量名，它包含写入磁盘的数据。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">可选。 开始写入处的记录号（<see langword="Random" /> 模式文件）或字节号（<see langword="Binary" /> 模式文件）。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 且不等于 -1。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">文件模式无效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Double,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">将变量中得数据写入磁盘文件中。 相比 <see langword="FilePut" />，<see langword="My" /> 功能可使文件 I/O 操作的效率更高、性能更好。 有关详细信息，请参阅 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必需。 任何有效文件数。</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">必需。 有效变量名，它包含写入磁盘的数据。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">可选。 开始写入处的记录号（<see langword="Random" /> 模式文件）或字节号（<see langword="Binary" /> 模式文件）。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 且不等于 -1。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">文件模式无效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int16,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">将变量中得数据写入磁盘文件中。 相比 <see langword="FilePut" />，<see langword="My" /> 功能可使文件 I/O 操作的效率更高、性能更好。 有关详细信息，请参阅 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必需。 任何有效文件数。</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">必需。 有效变量名，它包含写入磁盘的数据。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">可选。 开始写入处的记录号（<see langword="Random" /> 模式文件）或字节号（<see langword="Binary" /> 模式文件）。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 且不等于 -1。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">文件模式无效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int32,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">将变量中得数据写入磁盘文件中。 相比 <see langword="FilePut" />，<see langword="My" /> 功能可使文件 I/O 操作的效率更高、性能更好。 有关详细信息，请参阅 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必需。 任何有效文件数。</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">必需。 有效变量名，它包含写入磁盘的数据。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">可选。 开始写入处的记录号（<see langword="Random" /> 模式文件）或字节号（<see langword="Binary" /> 模式文件）。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 且不等于 -1。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">文件模式无效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int64,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">将变量中得数据写入磁盘文件中。 相比 <see langword="FilePut" />，<see langword="My" /> 功能可使文件 I/O 操作的效率更高、性能更好。 有关详细信息，请参阅 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必需。 任何有效文件数。</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">必需。 有效变量名，它包含写入磁盘的数据。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">可选。 开始写入处的记录号（<see langword="Random" /> 模式文件）或字节号（<see langword="Binary" /> 模式文件）。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 且不等于 -1。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">文件模式无效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Single,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">将变量中得数据写入磁盘文件中。 相比 <see langword="FilePut" />，<see langword="My" /> 功能可使文件 I/O 操作的效率更高、性能更好。 有关详细信息，请参阅 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必需。 任何有效文件数。</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">必需。 有效变量名，它包含写入磁盘的数据。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">可选。 开始写入处的记录号（<see langword="Random" /> 模式文件）或字节号（<see langword="Binary" /> 模式文件）。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 且不等于 -1。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">文件模式无效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.String,System.Int64,System.Boolean)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">将变量中得数据写入磁盘文件中。 相比 <see langword="FilePut" />，<see langword="My" /> 功能可使文件 I/O 操作的效率更高、性能更好。 有关详细信息，请参阅 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必需。 任何有效文件数。</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">必需。 有效变量名，它包含写入磁盘的数据。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">可选。 开始写入处的记录号（<see langword="Random" /> 模式文件）或字节号（<see langword="Binary" /> 模式文件）。</param>
      <param name="StringIsFixedLength" vsli:raw="Optional. Applies only when writing a string. Specifies whether to write a two-byte string length descriptor for the string to the file. The default is &lt;see langword=&quot;False&quot; /&gt;.">可选。 仅在写入字符串时适用。 指定是否将字符串的双字节字符串长度说明符写入文件中。 默认值为 <see langword="False" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 且不等于 -1。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">文件模式无效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.ValueType,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">将变量中得数据写入磁盘文件中。 相比 <see langword="FilePut" />，<see langword="My" /> 功能可使文件 I/O 操作的效率更高、性能更好。 有关详细信息，请参阅 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必需。 任何有效文件数。</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">必需。 有效变量名，它包含写入磁盘的数据。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">可选。 开始写入处的记录号（<see langword="Random" /> 模式文件）或字节号（<see langword="Binary" /> 模式文件）。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 且不等于 -1。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">文件模式无效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Object,System.Object,System.Object)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">将变量中得数据写入磁盘文件中。 相比 <see langword="FilePut" />，<see langword="My" /> 功能可使文件 I/O 操作的效率更高、性能更好。 有关详细信息，请参阅 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必需。 任何有效文件数。</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">必需。 有效变量名，它包含写入磁盘的数据。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">可选。 开始写入处的记录号（<see langword="Random" /> 模式文件）或字节号（<see langword="Binary" /> 模式文件）。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 且不等于 -1。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">文件模式无效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePutObject(System.Int32,System.Object,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file.  The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePutObject&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">将变量中得数据写入磁盘文件中。  相比 <see langword="FilePutObject" />，<see langword="My" /> 功能可使文件 I/O 操作的效率更高、性能更好。 有关详细信息，请参阅 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必需。 任何有效文件数。</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">必需。 有效变量名，它包含写入磁盘的数据。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">可选。 开始写入处的记录号（<see langword="Random" /> 模式文件）或字节号（<see langword="Binary" /> 模式文件）。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileWidth(System.Int32,System.Int32)">
      <summary vsli:raw="Assigns an output line width to a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function.">为用 <see langword="FileOpen" /> 函数打开的文件分配输出行宽。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必需。 任何有效文件数。</param>
      <param name="RecordWidth" vsli:raw="Required. Numeric expression in the range 0-255, inclusive, which indicates how many characters appear on a line before a new line is started. If &lt;paramref name=&quot;RecordWidth&quot; /&gt; equals 0, there is no limit to the length of a line. The default value for &lt;paramref name=&quot;RecordWidth&quot; /&gt; is 0.">必需。 0 到 255（包括 0 和 255）范围内的数值表达式，它表示在开始新一行前每一行中所显示的字符数。 如果 <paramref name="RecordWidth" /> 等于 0，则行的长度没有限制。 <paramref name="RecordWidth" /> 的默认值为 0。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">文件模式无效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FreeFile">
      <summary vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value that represents the next file number available for use by the &lt;see langword=&quot;FileOpen&quot; /&gt; function.">返回一个 <see langword="Integer" /> 值，该值表示 <see langword="FileOpen" /> 函数可用的下一个文件号。</summary>
      <returns vsli:raw="An integer value that represents the next file number available for use by the &lt;see langword=&quot;FileOpen&quot; /&gt; function.">一个整数值，该值表示 <see langword="FileOpen" /> 函数可用的下一个文件号。</returns>
      <exception cref="T:System.IO.IOException" vsli:raw="More than 255 files are in use.">正在使用的文件数超过 255。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;FileAttribute&quot; /&gt; value that represents the attributes of a file, directory, or folder. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileAttribute&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">返回一个表示文件、目录或文件夹的特性的 <see langword="FileAttribute" /> 值。 相比 <see langword="FileAttribute" />，<see langword="My" /> 功能可使文件 I/O 操作的效率更高、性能更好。 有关详细信息，请参阅 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="PathName" vsli:raw="Required. A string expression that specifies a file, directory, or folder name. &lt;paramref name=&quot;PathName&quot; /&gt; can include the directory or folder, and the drive.">必需。 指定一个文件名、目录名或文件夹名的字符串表达式。 <paramref name="PathName" /> 可以包含驱动器和目录或文件夹。</param>
      <returns vsli:raw="A bitwise combination of the enumeration values.">枚举值的按位组合。</returns>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;Pathname&quot; /&gt; is invalid or contains wildcards.">
        <paramref name="Pathname" /> 无效或包含通配符。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="Target file does not exist.">目标文件不存在。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Boolean@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">读取打开的顺序文件中的数据，并将这些数据赋值给变量。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必需。 任何有效文件数。</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">必需。 被赋以从文件中读取的值的变量不能是数组或对象变量。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">文件模式无效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Byte@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">读取打开的顺序文件中的数据，并将这些数据赋值给变量。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必需。 任何有效文件数。</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">必需。 被赋以从文件中读取的值的变量不能是数组或对象变量。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">文件模式无效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Char@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">读取打开的顺序文件中的数据，并将这些数据赋值给变量。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必需。 任何有效文件数。</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">必需。 被赋以从文件中读取的值的变量不能是数组或对象变量。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">文件模式无效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.DateTime@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">读取打开的顺序文件中的数据，并将这些数据赋值给变量。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必需。 任何有效文件数。</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">必需。 被赋以从文件中读取的值的变量不能是数组或对象变量。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">文件模式无效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Decimal@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">读取打开的顺序文件中的数据，并将这些数据赋值给变量。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必需。 任何有效文件数。</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">必需。 被赋以从文件中读取的值的变量不能是数组或对象变量。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">文件模式无效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Double@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">读取打开的顺序文件中的数据，并将这些数据赋值给变量。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必需。 任何有效文件数。</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">必需。 被赋以从文件中读取的值的变量不能是数组或对象变量。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">文件模式无效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int16@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">读取打开的顺序文件中的数据，并将这些数据赋值给变量。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必需。 任何有效文件数。</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">必需。 被赋以从文件中读取的值的变量不能是数组或对象变量。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">文件模式无效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int32@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">读取打开的顺序文件中的数据，并将这些数据赋值给变量。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必需。 任何有效文件数。</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">必需。 被赋以从文件中读取的值的变量不能是数组或对象变量。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">文件模式无效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int64@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">读取打开的顺序文件中的数据，并将这些数据赋值给变量。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必需。 任何有效文件数。</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">必需。 被赋以从文件中读取的值的变量不能是数组或对象变量。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">文件模式无效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Object@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">读取打开的顺序文件中的数据，并将这些数据赋值给变量。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必需。 任何有效文件数。</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">必需。 被赋以从文件中读取的值的变量不能是数组或对象变量。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">文件模式无效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Single@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">读取打开的顺序文件中的数据，并将这些数据赋值给变量。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必需。 任何有效文件数。</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">必需。 被赋以从文件中读取的值的变量不能是数组或对象变量。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">文件模式无效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.String@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">读取打开的顺序文件中的数据，并将这些数据赋值给变量。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必需。 任何有效文件数。</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">必需。 被赋以从文件中读取的值的变量不能是数组或对象变量。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">文件模式无效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)">
      <summary vsli:raw="Returns &lt;see langword=&quot;String&quot; /&gt; value that contains characters from a file opened in &lt;see langword=&quot;Input&quot; /&gt; or &lt;see langword=&quot;Binary&quot; /&gt; mode. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;InputString&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">返回 <see langword="String" /> 值，该值包含以 <see langword="Input" /> 或 <see langword="Binary" /> 模式打开的文件中的字符。 相比 <see langword="InputString" />，<see langword="My" /> 功能可使文件 I/O 操作的效率更高、性能更好。 有关详细信息，请参阅 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必需。 任何有效文件数。</param>
      <param name="CharCount" vsli:raw="Required. Any valid numeric expression specifying the number of characters to read.">必需。 用于指定要读取的字符数的任何有效数值表达式。</param>
      <returns vsli:raw="A string that contains characters from a file opened in &lt;see langword=&quot;Input&quot; /&gt; or &lt;see langword=&quot;Binary&quot; /&gt; mode. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;InputString&quot; /&gt;.">一个字符串，该字符串包含以 <see langword="Input" /> 或 <see langword="Binary" /> 模式打开的文件中的字符。 相比 <see langword="InputString" />，<see langword="My" /> 功能可使文件 I/O 操作的效率更高、性能更好。</returns>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;FileNumber&quot; /&gt; does not exist.">
        <paramref name="FileNumber" /> 不存在。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;CharCount&quot; /&gt; &amp;lt; 0 or &amp;gt; 214.">
        <paramref name="CharCount" />&lt; 0 或 &gt; 214。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Kill(System.String)">
      <summary vsli:raw="Deletes files from a disk. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Kill&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; .">从磁盘中删除文件。 相比 <see langword="Kill" />，<see langword="My" /> 功能可使文件 I/O 操作的效率更高、性能更好。 有关更多信息，请参见<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="PathName" vsli:raw="Required. A string expression that specifies one or more file names to be deleted. &lt;paramref name=&quot;PathName&quot; /&gt; can include the directory or folder, and the drive.">必需。 指定要删除的一个或多个文件名的字符串表达式。 <paramref name="PathName" /> 可以包含驱动器和目录或文件夹。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="Target file(s) open.">目标文件打开。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="Target file(s) not found.">目标文件未找到。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="Permission denied.">权限被拒绝。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.LineInput(System.Int32)">
      <summary vsli:raw="Reads a single line from an open sequential file and assigns it to a &lt;see langword=&quot;String&quot; /&gt; variable.">从打开的顺序文件中读取一行并将其赋值给一个 <see langword="String" /> 变量。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必需。 任何有效文件数。</param>
      <returns vsli:raw="Reads a single line from an open sequential file and assigns it to a &lt;see langword=&quot;String&quot; /&gt; variable.">从打开的顺序文件中读取一行并将其赋值给一个 <see langword="String" /> 变量。</returns>
      <exception cref="T:System.IO.EndOfStreamException" vsli:raw="End of file reached.">到达文件末尾。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;FileNumber&quot; /&gt; does not exist.">
        <paramref name="FileNumber" /> 不存在。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Loc(System.Int32)">
      <summary vsli:raw="Returns a value that specifies the current read/write position in an open file.">返回指定打开文件中当前读/写位置的值。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid &lt;see langword=&quot;Integer&quot; /&gt; file number.">必需。 任何有效的 <see langword="Integer" /> 文件号。</param>
      <returns vsli:raw="The current read/write position in an open file.">打开文件中当前读/写位置。</returns>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">文件模式无效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32)">
      <summary vsli:raw="Controls access by other processes to all or part of a file opened by using the &lt;see langword=&quot;Open&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Lock&quot; /&gt; and &lt;see langword=&quot;Unlock&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">控制其他进程对使用 <see langword="Open" /> 函数打开的文件的全部或部分的访问。 与 <see langword="My" /> 和 <see langword="Lock" /> 相比，<see langword="Unlock" /> 功能在文件 I/O 操作方面可为您提供更高的效率和更好的性能。 有关详细信息，请参阅 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必需。 任何有效文件数。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">文件模式无效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32,System.Int64)">
      <summary vsli:raw="Controls access by other processes to all or part of a file opened by using the &lt;see langword=&quot;Open&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Lock&quot; /&gt; and &lt;see langword=&quot;Unlock&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">控制其他进程对使用 <see langword="Open" /> 函数打开的文件的全部或部分的访问。 与 <see langword="My" /> 和 <see langword="Lock" /> 相比，<see langword="Unlock" /> 功能在文件 I/O 操作方面可为您提供更高的效率和更好的性能。 有关详细信息，请参阅 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必需。 任何有效文件数。</param>
      <param name="Record" vsli:raw="Optional. Number of the only record or byte to lock or unlock.">可选。 唯一要锁定或取消锁定的记录号或字节数。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">文件模式无效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32,System.Int64,System.Int64)">
      <summary vsli:raw="Controls access by other processes to all or part of a file opened by using the &lt;see langword=&quot;Open&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Lock&quot; /&gt; and &lt;see langword=&quot;Unlock&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">控制其他进程对使用 <see langword="Open" /> 函数打开的文件的全部或部分的访问。 与 <see langword="My" /> 和 <see langword="Lock" /> 相比，<see langword="Unlock" /> 功能在文件 I/O 操作方面可为您提供更高的效率和更好的性能。 有关详细信息，请参阅 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必需。 任何有效文件数。</param>
      <param name="FromRecord" vsli:raw="Optional. Number of the first record or byte to lock or unlock.">可选。 第一个要锁定或取消锁定的记录号或字节数。</param>
      <param name="ToRecord" vsli:raw="Optional. Number of the last record or byte to lock or unlock.">可选。 最后一个要锁定或取消锁定的记录号或字节数。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">文件模式无效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.LOF(System.Int32)">
      <summary vsli:raw="Returns the size, in bytes, of a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;LOF&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">返回使用 <see langword="FileOpen" /> 函数打开的文件的大小（以字节为单位）。 相比 <see langword="LOF" />，<see langword="My" /> 功能可使文件 I/O 操作的效率更高、性能更好。 有关详细信息，请参阅 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. An integer that contains a valid file number.">必需。 一个包含有效文件号的整数。</param>
      <returns vsli:raw="The size, in bytes, of a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;LOF&quot; /&gt;.">使用 <see langword="FileOpen" /> 函数打开的文件的大小（以字节为单位）。 相比 <see langword="LOF" />，<see langword="My" /> 功能可使文件 I/O 操作的效率更高、性能更好。</returns>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">文件模式无效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)">
      <summary vsli:raw="Creates a new directory. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;MkDir&quot; /&gt;. For more information, see &lt;see cref=&quot;M:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)&quot; /&gt;.">新建目录。 相比 <see langword="MkDir" />，<see langword="My" /> 功能可使文件 I/O 操作的效率更高、性能更好。 有关详细信息，请参阅 <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)" />。</summary>
      <param name="Path" vsli:raw="Required. A string expression that identifies the directory to be created. The &lt;paramref name=&quot;Path&quot; /&gt; may include the drive. If no drive is specified, &lt;see langword=&quot;MkDir&quot; /&gt; creates the new directory on the current drive.">必需。 标识要创建的目录的字符串表达式。 <paramref name="Path" /> 可以包含驱动器。 如果未指定驱动器，则 <see langword="MkDir" /> 在当前驱动器上创建新目录。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Path&quot; /&gt; is not specified or is empty.">
        <paramref name="Path" /> 未指定或为空。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="Permission denied.">权限被拒绝。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="Directory already exists.">目录已存在。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])">
      <summary vsli:raw="Writes display-formatted data to a sequential file.">将已设置显示格式的数据写入顺序文件。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必需。 任何有效文件数。</param>
      <param name="Output" vsli:raw="Optional. Zero or more comma-delimited expressions to write to a file.  &#xA;  &#xA; The &lt;paramref name=&quot;Output&quot; /&gt; argument settings are:  &#xA;  &#xA; &lt;see langword=&quot;T:System.IO.IOException&quot; /&gt;: File mode is invalid.  &#xA;  &#xA; &lt;see langword=&quot;T:System.IO.IOException&quot; /&gt;: &lt;paramref name=&quot;FileNumber&quot; /&gt; does not exist.">可选。 要写入文件的零个或多个由逗号分隔的表达式。  
<paramref name="Output" /> 参数的设置是： 
 <see langword="T:System.IO.IOException" />：文件模式无效。  
 <see langword="T:System.IO.IOException" />：<paramref name="FileNumber" /> 不存在。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])">
      <summary vsli:raw="Writes display-formatted data to a sequential file.">将已设置显示格式的数据写入顺序文件。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必需。 任何有效文件数。</param>
      <param name="Output" vsli:raw="Optional. Zero or more comma-delimited expressions to write to a file.  &#xA;  &#xA; The &lt;paramref name=&quot;Output&quot; /&gt; argument settings are:  &#xA;  &#xA; &lt;see langword=&quot;T:System.IO.IOException&quot; /&gt;: File mode is invalid.  &#xA;  &#xA; &lt;see langword=&quot;T:System.IO.IOException&quot; /&gt;: &lt;paramref name=&quot;FileNumber&quot; /&gt; does not exist.">可选。 要写入文件的零个或多个由逗号分隔的表达式。  
<paramref name="Output" /> 参数的设置是： 
 <see langword="T:System.IO.IOException" />：文件模式无效。  
 <see langword="T:System.IO.IOException" />：<paramref name="FileNumber" /> 不存在。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Rename(System.String,System.String)">
      <summary vsli:raw="Renames a disk file or directory. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Rename&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">重命名磁盘文件或目录。 相比 <see langword="Rename" />，<see langword="My" /> 功能可使文件 I/O 操作的效率更高、性能更好。 有关详细信息，请参阅 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="OldPath" vsli:raw="Required. A string expression that specifies the existing file name and location. &lt;paramref name=&quot;OldPath&quot; /&gt; may include the directory, and drive, of the file.">必需。 指定现有文件名和位置的字符串表达式。 <paramref name="OldPath" /> 可包含文件的目录和驱动器。</param>
      <param name="NewPath" vsli:raw="Required. A string expression that specifies the new file name and location. &lt;paramref name=&quot;NewPath&quot; /&gt; may include directory and drive of the destination location. The file name specified by &lt;paramref name=&quot;NewPath&quot; /&gt; cannot already exist.">必需。 指定新文件名和位置的字符串表达式。 <paramref name="NewPath" /> 可包含目标位置的目录和驱动器。 <paramref name="NewPath" /> 指定的文件名不能是已存在的文件名。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="Path is invalid.">路径无效。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="&lt;paramref name=&quot;OldPath&quot; /&gt; file does not exist.">
        <paramref name="OldPath" /> 文件不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="Cannot rename to different device.">无法重命名为不同的设备。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Reset">
      <summary vsli:raw="Closes all disk files opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Reset&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">关闭所有使用 <see langword="FileOpen" /> 函数打开的磁盘文件。 相比 <see langword="Reset" />，<see langword="My" /> 功能可使文件 I/O 操作的效率更高、性能更好。 有关详细信息，请参阅 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)">
      <summary vsli:raw="Removes an existing directory. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;RmDir&quot; /&gt;. For more information, see &lt;see cref=&quot;Overload:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory&quot; /&gt;.">移除现有目录。 相比 <see langword="RmDir" />，<see langword="My" /> 功能可使文件 I/O 操作的效率更高、性能更好。 有关详细信息，请参阅 <see cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory" />。</summary>
      <param name="Path" vsli:raw="Required. A string expression that identifies the directory or folder to be removed. &lt;paramref name=&quot;Path&quot; /&gt; can include the drive. If no drive is specified, &lt;see langword=&quot;RmDir&quot; /&gt; removes the directory on the current drive.">必需。 标识要移除的目录或文件夹的字符串表达式。 <paramref name="Path" /> 可以包含驱动器。 如果未指定驱动器，则 <see langword="RmDir" /> 移除当前驱动器上的目录。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Path&quot; /&gt; is not specified or is empty.">
        <paramref name="Path" /> 未指定或为空。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="Target directory contains files.">目标目录包含文件。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="Directory does not exist.">目录不存在。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Seek(System.Int32)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Long&quot; /&gt; specifying the current read/write position in a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function, or sets the position for the next read/write operation in a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Seek&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">返回 <see langword="Long" />，它指定使用 <see langword="FileOpen" /> 函数打开的文件中的当前读/写位置；或设置使用 <see langword="FileOpen" /> 函数打开的文件中的下一个读/写操作的位置。 相比 <see langword="Seek" />，<see langword="My" /> 功能可使文件 I/O 操作的效率更高、性能更好。 有关详细信息，请参阅 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. An &lt;see langword=&quot;Integer&quot; /&gt; that contains a valid file number.">必需。 一个包含有效文件号的 <see langword="Integer" />。</param>
      <returns vsli:raw="A &lt;see langword=&quot;Long&quot; /&gt; specifying the current read/write position in a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function, or sets the position for the next read/write operation in a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function.">一个 <see langword="Long" />，它指定使用 <see langword="FileOpen" /> 函数打开的文件中的当前读/写位置；或设置使用 <see langword="FileOpen" /> 函数打开的文件中的下一个读/写操作的位置。</returns>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">文件模式无效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Seek(System.Int32,System.Int64)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Long&quot; /&gt; specifying the current read/write position in a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function, or sets the position for the next read/write operation in a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Seek&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">返回 <see langword="Long" />，它指定使用 <see langword="FileOpen" /> 函数打开的文件中的当前读/写位置；或设置使用 <see langword="FileOpen" /> 函数打开的文件中的下一个读/写操作的位置。 相比 <see langword="Seek" />，<see langword="My" /> 功能可使文件 I/O 操作的效率更高、性能更好。 有关详细信息，请参阅 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. An &lt;see langword=&quot;Integer&quot; /&gt; that contains a valid file number.">必需。 一个包含有效文件号的 <see langword="Integer" />。</param>
      <param name="Position" vsli:raw="Required. Number in the range 1-2,147,483,647, inclusive, that indicates where the next read/write operation should occur.">必需。 一个 1 到 2,147,483,647 范围内（包括 1 和 2,147,483,647）的数字，用于指示下一个读取/写入操作应该发生的位置。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">文件模式无效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)">
      <summary vsli:raw="Sets attribute information for a file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;SetAttr&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">设置文件的特性信息。 相比 <see langword="SetAttr" />，<see langword="My" /> 功能可使文件 I/O 操作的效率更高、性能更好。 有关详细信息，请参阅 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="PathName" vsli:raw="Required. A string expression that specifies a file name. &lt;paramref name=&quot;PathName&quot; /&gt; can include directory or folder, and drive.">必需。 指定一个文件名的字符串表达式。 <paramref name="PathName" /> 可以包含驱动器和目录或文件夹。</param>
      <param name="Attributes" vsli:raw="Required. Constant or numeric expression, whose sum specifies file attributes.">必需。 常量或数值表达式，所有这些值一起指定文件特性。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Attribute&quot; /&gt; type is invalid.">
        <paramref name="Attribute" /> 类型无效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)">
      <summary vsli:raw="Used with the &lt;see langword=&quot;Print&quot; /&gt; or &lt;see langword=&quot;PrintLine&quot; /&gt; function to position output.">与 <see langword="Print" /> 或 <see langword="PrintLine" /> 函数一起使用以定位输出。</summary>
      <param name="Count" vsli:raw="Required. The number of spaces to insert before displaying or printing the next expression in a list.">必需。 在显示或输出列表中下一个表达式之前要插入的空格数。</param>
      <returns vsli:raw="Used with the &lt;see langword=&quot;Print&quot; /&gt; or &lt;see langword=&quot;PrintLine&quot; /&gt; function to position output.">与 <see langword="Print" /> 或 <see langword="PrintLine" /> 函数一起使用以定位输出。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.TAB">
      <summary vsli:raw="Used with the &lt;see langword=&quot;Print&quot; /&gt; or &lt;see langword=&quot;PrintLine&quot; /&gt; functions to position output.">与 <see langword="Print" /> 或 <see langword="PrintLine" /> 函数一起使用以定位输出。</summary>
      <returns vsli:raw="Used with the &lt;see langword=&quot;Print&quot; /&gt; or &lt;see langword=&quot;PrintLine&quot; /&gt; functions to position output.">与 <see langword="Print" /> 或 <see langword="PrintLine" /> 函数一起使用以定位输出。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.TAB(System.Int16)">
      <summary vsli:raw="Used with the &lt;see langword=&quot;Print&quot; /&gt; or &lt;see langword=&quot;PrintLine&quot; /&gt; functions to position output.">与 <see langword="Print" /> 或 <see langword="PrintLine" /> 函数一起使用以定位输出。</summary>
      <param name="Column" vsli:raw="Optional. The column number moved to before displaying or printing the next expression in a list. If omitted, &lt;see langword=&quot;TAB&quot; /&gt; moves the insertion point to the start of the next print zone.">可选。 在显示或输出列表中下一个表达式之前要移动到的列号。 如果省略它，则 <see langword="TAB" /> 将插入点移动到下一个打印区域的开始位置。</param>
      <returns vsli:raw="Used with the &lt;see langword=&quot;Print&quot; /&gt; or &lt;see langword=&quot;PrintLine&quot; /&gt; functions to position output.">与 <see langword="Print" /> 或 <see langword="PrintLine" /> 函数一起使用以定位输出。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32)">
      <summary vsli:raw="Controls access by other processes to all or part of a file opened by using the &lt;see langword=&quot;Open&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Lock&quot; /&gt; and &lt;see langword=&quot;Unlock&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">控制其他进程对使用 <see langword="Open" /> 函数打开的文件的全部或部分的访问。 与 <see langword="My" /> 和 <see langword="Lock" /> 相比，<see langword="Unlock" /> 功能在文件 I/O 操作方面可为您提供更高的效率和更好的性能。 有关详细信息，请参阅 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必需。 任何有效文件数。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">文件模式无效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32,System.Int64)">
      <summary vsli:raw="Controls access by other processes to all or part of a file opened by using the &lt;see langword=&quot;Open&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Lock&quot; /&gt; and &lt;see langword=&quot;Unlock&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">控制其他进程对使用 <see langword="Open" /> 函数打开的文件的全部或部分的访问。 与 <see langword="My" /> 和 <see langword="Lock" /> 相比，<see langword="Unlock" /> 功能在文件 I/O 操作方面可为您提供更高的效率和更好的性能。 有关详细信息，请参阅 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必需。 任何有效文件数。</param>
      <param name="Record" vsli:raw="Optional. Number of the only record or byte to lock or unlock.">可选。 唯一要锁定或取消锁定的记录号或字节数</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">文件模式无效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32,System.Int64,System.Int64)">
      <summary vsli:raw="Controls access by other processes to all or part of a file opened by using the &lt;see langword=&quot;Open&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Lock&quot; /&gt; and &lt;see langword=&quot;Unlock&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">控制其他进程对使用 <see langword="Open" /> 函数打开的文件的全部或部分的访问。 与 <see langword="My" /> 和 <see langword="Lock" /> 相比，<see langword="Unlock" /> 功能在文件 I/O 操作方面可为您提供更高的效率和更好的性能。 有关详细信息，请参阅 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必需。 任何有效文件数。</param>
      <param name="FromRecord" vsli:raw="Optional. Number of the first record or byte to lock or unlock.">可选。 第一个要锁定或取消锁定的记录号或字节数。</param>
      <param name="ToRecord" vsli:raw="Optional. Number of the last record or byte to lock or unlock.">可选。 最后一个要锁定或取消锁定的记录号或字节数。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">文件模式无效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])">
      <summary vsli:raw="Writes data to a sequential file. Data written with &lt;see langword=&quot;Write&quot; /&gt; is usually read from a file by using &lt;see langword=&quot;Input&quot; /&gt;.">将数据写入一个顺序文件。 通常使用 <see langword="Input" /> 从文件中读取使用 <see langword="Write" /> 编写的数据。</summary>
      <param name="FileNumber" vsli:raw="Required. An &lt;see langword=&quot;Integer&quot; /&gt; expression that contains any valid file number.">必需。 包含任何有效文件数的 <see langword="Integer" /> 表达式。</param>
      <param name="Output" vsli:raw="Optional. One or more comma-delimited expressions to write to a file.">可选。 要写入文件的一个或多个由逗号分隔的表达式。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">文件模式无效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])">
      <summary vsli:raw="Writes data to a sequential file. Data written with &lt;see langword=&quot;Write&quot; /&gt; is usually read from a file by using &lt;see langword=&quot;Input&quot; /&gt;.">将数据写入一个顺序文件。 通常使用 <see langword="Input" /> 从文件中读取使用 <see langword="Write" /> 编写的数据。</summary>
      <param name="FileNumber" vsli:raw="Required. An &lt;see langword=&quot;Integer&quot; /&gt; expression that contains any valid file number.">必需。 包含任何有效文件数的 <see langword="Integer" /> 表达式。</param>
      <param name="Output" vsli:raw="Optional. One or more comma-delimited expressions to write to a file.">可选。 要写入文件的一个或多个由逗号分隔的表达式。</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Financial">
      <summary vsli:raw="The &lt;see langword=&quot;Financial&quot; /&gt; module contains procedures used to perform financial operations.">
        <see langword="Financial" /> 模块包含用于执行财务运算的过程。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.DDB(System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary vsli:raw="Returns a value specifying the depreciation of an asset for a specific time period using the double-declining balance method or some other method you specify.">返回一个值，它使用双倍余额递减法或指定的其他方法来指定特定时间周期内的资产折旧。</summary>
      <param name="Cost" vsli:raw="Required. The initial cost of the asset.">必需。 资产的原始成本。</param>
      <param name="Salvage" vsli:raw="Required. The value of the asset at the end of its useful life.">必需。 资产在使用年限结束时的价值。</param>
      <param name="Life" vsli:raw="Required. The length of useful life of the asset.">必需。 资产的使用年限。</param>
      <param name="Period" vsli:raw="Required. The period for which asset depreciation is calculated.">必需。 计算资产折旧所用的周期。</param>
      <param name="Factor" vsli:raw="Optional. The rate at which the balance declines. If omitted, 2 (double-declining method) is assumed.">可选。 余额递减的速率。 如果省略，则假定为 2（双倍余额递减法）。</param>
      <returns vsli:raw="The depreciation of an asset for a specific time period using the double-declining balance method or some other method you specify.">使用双倍余额递减法或指定的其他方法的特定时间周期内的资产折旧。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Factor&quot; /&gt; &amp;lt;= 0, &lt;paramref name=&quot;Salvage&quot; /&gt; &amp;lt; 0, &lt;paramref name=&quot;Period&quot; /&gt; &amp;lt;= 0, or &lt;paramref name=&quot;Period&quot; /&gt; &amp;gt; &lt;paramref name=&quot;Life&quot; /&gt;.">
        <paramref name="Factor" /> &lt;= 0，<paramref name="Salvage" /> &lt; 0，<paramref name="Period" /> &lt;= 0，或 <paramref name="Period" /> &gt; <paramref name="Life." /></exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.FV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary vsli:raw="Returns a value specifying the future value of an annuity based on periodic, fixed payments and a fixed interest rate.">返回一值，该值基于等额分期付款和固定利率指定年金的终值。</summary>
      <param name="Rate" vsli:raw="Required. The interest rate per period. For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.">必需。 每期的利率。 例如，如果您的汽车贷款的年利率 (APR) 为 10%，按月还款，则每期利率为 0.1/12（即 0.0083）。</param>
      <param name="NPer" vsli:raw="Required. The total number of payment periods in the annuity. For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 x 12 (or 48) payment periods.">必需。 年金付款总期数。 例如，如果您的汽车贷款的期限为四年，按月还款，则这笔贷款共有 4 * 12（即 48）个支付周期。</param>
      <param name="Pmt" vsli:raw="Required. The payment to be made each period. Payments usually contain principal and interest that doesn't change over the life of the annuity.">必需。 每期应付金额。 付款金额通常包含本金和利息，该值在年金的有效期限内都不会改变。</param>
      <param name="PV" vsli:raw="Optional. The present value (or lump sum) of a series of future payments. For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make. If omitted, 0 is assumed.">可选。 未来一系列付款金额（或一次付清款项）的现值。 例如，如果您贷款买车，贷款额就是您将以按月还款的方式付给贷方的现值。 如果省略，则假定为 0。</param>
      <param name="Due" vsli:raw="Optional. Object of type &lt;see cref=&quot;T:Microsoft.VisualBasic.DueDate&quot; /&gt; that specifies when payments are due. This argument must be either &lt;see langword=&quot;DueDate.EndOfPeriod&quot; /&gt; if payments are due at the end of the payment period, or &lt;see langword=&quot;DueDate.BegOfPeriod&quot; /&gt; if payments are due at the beginning of the period. If omitted, &lt;see langword=&quot;DueDate.EndOfPeriod&quot; /&gt; is assumed.">可选。 <see cref="T:Microsoft.VisualBasic.DueDate" /> 类型的对象指定付款何时到期。 如果在付款期末付款，则此参数必须为 <see langword="DueDate.EndOfPeriod" />；如果在付款期初付款，则此参数必须为 <see langword="DueDate.BegOfPeriod" />。 如果省略，则假定为 <see langword="DueDate.EndOfPeriod" />。</param>
      <returns vsli:raw="The future value of an annuity based on periodic, fixed payments and a fixed interest rate.">基于等额分期付款和固定利率的年金的终值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.IPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary vsli:raw="Returns a value specifying the interest payment for a given period of an annuity based on periodic, fixed payments and a fixed interest rate.">返回一个值，该值基于等额分期付款和固定利率指定年金在给定期间的支付利息。</summary>
      <param name="Rate" vsli:raw="Required. The interest rate per period. For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.">必需。 每期的利率。 例如，如果您的汽车贷款的年利率 (APR) 为 10%，按月还款，则每期利率为 0.1/12（即 0.0083）。</param>
      <param name="Per" vsli:raw="Required. The payment period in the range 1 through &lt;paramref name=&quot;NPer&quot; /&gt;.">必需。 1 到 <paramref name="NPer" />.范围内的支付周期。</param>
      <param name="NPer" vsli:raw="Required. The total number of payment periods in the annuity. For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 x 12 (or 48) payment periods.">必需。 年金付款总期数。 例如，如果您的汽车贷款的期限为四年，按月还款，则这笔贷款共有 4 * 12（即 48）个支付周期。</param>
      <param name="PV" vsli:raw="Required. The present value, or value today, of a series of future payments or receipts. For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.">必需。 未来一系列支出或收入的现值。 例如，如果您贷款买车，贷款额就是您将以按月还款的方式付给贷方的现值。</param>
      <param name="FV" vsli:raw="Optional. The future value or cash balance you want after you've made the final payment. For example, the future value of a loan is $0 because that's its value after the final payment. However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value. If omitted, 0 is assumed.">可选。 完成最后一次付款后所希望的终值或现金余额。 例如，贷款的终值为 0，这是因为终值是末期还款之后的价值。 但是，如果您想用 18 年的时间存储 $50,000 作为孩子的教育经费，则 $50,000 是终值。 如果省略，则假定为 0。</param>
      <param name="Due" vsli:raw="Optional. Object of type &lt;see cref=&quot;T:Microsoft.VisualBasic.DueDate&quot; /&gt; that specifies when payments are due. This argument must be either &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; if payments are due at the end of the payment period, or &lt;c&gt;DueDate.BegOfPeriod&lt;/c&gt; if payments are due at the beginning of the period. If omitted, &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; is assumed.">可选。 <see cref="T:Microsoft.VisualBasic.DueDate" /> 类型的对象指定付款何时到期。 如果在付款期末付款，则此参数必须为 <c>DueDate.EndOfPeriod</c>；如果在付款期初付款，则此参数必须为 <c>DueDate.BegOfPeriod</c>。 如果省略，则假定 <c>DueDate.EndOfPeriod</c>。</param>
      <returns vsli:raw="The interest payment for a given period of an annuity based on periodic, fixed payments and a fixed interest rate.">基于等额分期付款和固定利率的给定周期的支付利息。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Per&quot; /&gt; &amp;lt;= 0 or &lt;paramref name=&quot;Per&quot; /&gt; &amp;gt; &lt;paramref name=&quot;NPer&quot; /&gt;">
        <paramref name="Per" /> &lt;= 0 或 <paramref name="Per" /> &gt; <paramref name="NPer" /></exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.IRR(System.Double[]@,System.Double)">
      <summary vsli:raw="Returns a value specifying the internal rate of return for a series of periodic cash flows (payments and receipts).">返回一个值，该值指定一系列定期现金流（支出和收入）的内部收益率。</summary>
      <param name="ValueArray" vsli:raw="Required. Array of &lt;see cref=&quot;T:System.Double&quot; /&gt; specifying cash flow values. The array must contain at least one negative value (a payment) and one positive value (a receipt).">必需。 指定现金流值的 <see langword="Double" /> 数组。 该数组必须至少包含一个负值（支出）和一个正值（收入）。</param>
      <param name="Guess" vsli:raw="Optional. Object specifying value you estimate will be returned by &lt;see langword=&quot;IRR&quot; /&gt;. If omitted, &lt;paramref name=&quot;Guess&quot; /&gt; is 0.1 (10 percent).">可选。 指定 <see langword="IRR" /> 将返回的估算值的对象。 如果省略，<paramref name="Guess" /> 便为 0.1 (10%)。</param>
      <returns vsli:raw="The internal rate of return for a series of periodic cash flows (payments and receipts).">一系列定期现金流（支出和收入）的内部收益率。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Array argument values are invalid or &lt;paramref name=&quot;Guess&quot; /&gt; &amp;lt;= -1.">Array 参数值无效或 <paramref name="Guess" /> &lt;= -1。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.MIRR(System.Double[]@,System.Double,System.Double)">
      <summary vsli:raw="Returns a value specifying the modified internal rate of return for a series of periodic cash flows (payments and receipts).">返回一个值，该值指定一系列定期现金流（支出和收入）修改后的内部收益率。</summary>
      <param name="ValueArray" vsli:raw="Required. Array of &lt;see cref=&quot;T:System.Double&quot; /&gt; specifying cash-flow values. The array must contain at least one negative value (a payment) and one positive value (a receipt).">必需。 指定现金流值的 <see langword="Double" /> 数组。 该数组必须至少包含一个负值（支出）和一个正值（收入）。</param>
      <param name="FinanceRate" vsli:raw="Required. The interest rate paid as the cost of financing.">必需。 作为财务费用支付的利率。</param>
      <param name="ReinvestRate" vsli:raw="Required. The interest rate received on gains from cash reinvestment.">必需。 现金再投资收益中的所得利率。</param>
      <returns vsli:raw="The modified internal rate of return for a series of periodic cash flows (payments and receipts).">一系列定期现金流（支出和收入）修改后的内部收益率。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Rank of &lt;paramref name=&quot;ValueArray&quot; /&gt; does not equal 1, &lt;paramref name=&quot;FinanceRate&quot; /&gt; = -1, or &lt;paramref name=&quot;ReinvestRate&quot; /&gt; = -1">
        <paramref name="ValueArray" /> 的秩不等于 1，<paramref name="FinanceRate" /> = -1，或 <paramref name="ReinvestRate" /> = -1</exception>
      <exception cref="T:System.DivideByZeroException" vsli:raw="Division by zero has occurred.">出现被零除。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.NPer(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary vsli:raw="Returns a value specifying the number of periods for an annuity based on periodic fixed payments and a fixed interest rate.">返回一个值，该值基于等额分期付款和固定利率指定年金的期数。</summary>
      <param name="Rate" vsli:raw="Required. The interest rate per period. For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.">必需。 每期的利率。 例如，如果您的汽车贷款的年利率 (APR) 为 10%，按月还款，则每期利率为 0.1/12（即 0.0083）。</param>
      <param name="Pmt" vsli:raw="Required. The payment to be made each period. Payments usually contain principal and interest that does not change over the life of the annuity.">必需。 每期应付金额。 付款金额通常包含本金和利息，该值在年金的有效期限内都不会改变。</param>
      <param name="PV" vsli:raw="Required. The present value, or value today, of a series of future payments or receipts. For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.">必需。 未来一系列支出或收入的现值。 例如，如果您贷款买车，贷款额就是您将以按月还款的方式付给贷方的现值。</param>
      <param name="FV" vsli:raw="Optional. The future value or cash balance you want after you have made the final payment. For example, the future value of a loan is $0 because that is its value after the final payment. However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value. If omitted, 0 is assumed.">可选。 完成最后一次付款后所希望的终值或现金余额。 例如，贷款的终值为 $0，这是因为终值是末期还款之后的价值。 但是，如果您想用 18 年的时间存储 $50,000 作为孩子的教育经费，则 $50,000 是终值。 如果省略，则假定为 0。</param>
      <param name="Due" vsli:raw="Optional. Object of type &lt;see cref=&quot;T:Microsoft.VisualBasic.DueDate&quot; /&gt; that specifies when payments are due. This argument must be either &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; if payments are due at the end of the payment period, or &lt;c&gt;DueDate.BegOfPeriod&lt;/c&gt; if payments are due at the beginning of the period. If omitted, &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; is assumed.">可选。 <see cref="T:Microsoft.VisualBasic.DueDate" /> 类型的对象指定付款何时到期。 如果在付款期末付款，则此参数必须为 <c>DueDate.EndOfPeriod</c>；如果在付款期初付款，则此参数必须为 <c>DueDate.BegOfPeriod</c>。 如果省略，则假定 <c>DueDate.EndOfPeriod</c>。</param>
      <returns vsli:raw="The number of periods for an annuity based on periodic fixed payments and a fixed interest rate.">基于等额分期付款和固定利率的年金的期数。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Rate&quot; /&gt; = 0 and &lt;paramref name=&quot;Pmt&quot; /&gt; = 0">
        <paramref name="Rate" /> = 0 和 <paramref name="Pmt" /> = 0</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.NPV(System.Double,System.Double[]@)">
      <summary vsli:raw="Returns a value specifying the net present value of an investment based on a series of periodic cash flows (payments and receipts) and a discount rate.">返回一个值，该值基于一系列定期现金流（支出和收入）和贴现率来指定投资的净现值。</summary>
      <param name="Rate" vsli:raw="Required. The discount rate over the length of the period, expressed as a decimal.">必需。 每期的贴现率，以小数表示。</param>
      <param name="ValueArray" vsli:raw="Required. Array of &lt;see cref=&quot;T:System.Double&quot; /&gt; specifying cash flow values. The array must contain at least one negative value (a payment) and one positive value (a receipt).">必需。 指定现金流值的 <see langword="Double" /> 数组。 该数组必须至少包含一个负值（支出）和一个正值（收入）。</param>
      <returns vsli:raw="The net present value of an investment based on a series of periodic cash flows (payments and receipts) and a discount rate.">基于一系列定期现金流（支出和收入）和贴现率的投资的净现值。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;ValueArray&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;, rank of &lt;paramref name=&quot;ValueArray&quot; /&gt; &amp;lt;&amp;gt; 1, or &lt;paramref name=&quot;Rate&quot; /&gt; = -1">
        <paramref name="ValueArray" /> 为 <see langword="Nothing" />，<paramref name="ValueArray" /> 的轶 &lt;&gt; 1，或 <paramref name="Rate" /> = -1</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.Pmt(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary vsli:raw="Returns a value specifying the payment for an annuity based on periodic, fixed payments and a fixed interest rate.">返回一个值，它基于等额分期付款和固定利率指定年金的付款金额。</summary>
      <param name="Rate" vsli:raw="Required. The interest rate per period. For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.">必需。 每期的利率。 例如，如果您的汽车贷款的年利率 (APR) 为 10%，按月还款，则每期利率为 0.1/12（即 0.0083）。</param>
      <param name="NPer" vsli:raw="Required. The total number of payment periods in the annuity. For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 × 12 (or 48) payment periods.">必需。 年金付款总期数。 例如，如果您的汽车贷款的期限为四年，按月还款，则这笔贷款共有 4 * 12（即 48）个支付周期。</param>
      <param name="PV" vsli:raw="Required. The present value (or lump sum) that a series of payments to be paid in the future is worth now. For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.">必需。 未来一系列要支付的付款现值（或一次付清款项）。 例如，如果您贷款买车，贷款额就是您将以按月还款的方式付给贷方的现值。</param>
      <param name="FV" vsli:raw="Optional. The future value or cash balance you want after you have made the final payment. For example, the future value of a loan is $0 because that is its value after the final payment. However, if you want to save $50,000 during 18 years for your child's education, then $50,000 is the future value. If omitted, 0 is assumed.">可选。 完成最后一次付款后所希望的终值或现金余额。 例如，贷款的终值为 $0，这是因为终值是末期还款之后的价值。 但是，如果您想用 18 年的时间储蓄 $50,000 作为孩子的教育经费，则 $50,000 是终值。 如果省略，则假定为 0。</param>
      <param name="Due" vsli:raw="Optional. Object of type &lt;see cref=&quot;T:Microsoft.VisualBasic.DueDate&quot; /&gt; that specifies when payments are due. This argument must be either &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; if payments are due at the end of the payment period, or &lt;c&gt;DueDate.BegOfPeriod&lt;/c&gt; if payments are due at the beginning of the period. If omitted, &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; is assumed.">可选。 <see cref="T:Microsoft.VisualBasic.DueDate" /> 类型的对象指定付款何时到期。 如果在付款期末付款，则此参数必须为 <c>DueDate.EndOfPeriod</c>；如果在付款期初付款，则此参数必须为 <c>DueDate.BegOfPeriod</c>。 如果省略，则假定 <c>DueDate.EndOfPeriod</c>。</param>
      <returns vsli:raw="The payment for an annuity based on periodic, fixed payments and a fixed interest rate.">基于等额分期付款和固定利率的年金的付款金额。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;NPer&quot; /&gt; = 0.">
        <paramref name="NPer" /> = 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.PPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary vsli:raw="Returns a value specifying the principal payment for a given period of an annuity based on periodic fixed payments and a fixed interest rate.">返回一个值，该值基于等额分期付款和固定利率指定年金在给定期间的本金付款额。</summary>
      <param name="Rate" vsli:raw="Required. The interest rate per period. For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.">必需。 每期的利率。 例如，如果您的汽车贷款的年利率 (APR) 为 10%，按月还款，则每期利率为 0.1/12（即 0.0083）。</param>
      <param name="Per" vsli:raw="Required. The payment period in the range 1 through &lt;paramref name=&quot;NPer&quot; /&gt;.">必需。 1 到 <paramref name="NPer" />.范围内的支付周期。</param>
      <param name="NPer" vsli:raw="Required. The total number of payment periods in the annuity. For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 x 12 (or 48) payment periods.">必需。 年金付款总期数。 例如，如果您的汽车贷款的期限为四年，按月还款，则这笔贷款共有 4 * 12（即 48）个支付周期。</param>
      <param name="PV" vsli:raw="Required. The current value of a series of future payments or receipts. For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.">必需。 指定未来一系列支出或收入的现值。 例如，如果您贷款买车，贷款额就是您将以按月还款的方式付给贷方的现值。</param>
      <param name="FV" vsli:raw="Optional. The future value or cash balance you want after you have made the final payment. For example, the future value of a loan is $0 because that is its value after the final payment. However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value. If omitted, 0 is assumed.">可选。 完成最后一次付款后所希望的终值或现金余额。 例如，贷款的终值为 $0，这是因为终值是末期还款之后的价值。 但是，如果您想用 18 年的时间存储 $50,000 作为孩子的教育经费，则 $50,000 是终值。 如果省略，则假定为 0。</param>
      <param name="Due" vsli:raw="Optional. Object of type &lt;see cref=&quot;T:Microsoft.VisualBasic.DueDate&quot; /&gt; that specifies when payments are due. This argument must be either &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; if payments are due at the end of the payment period, or &lt;c&gt;DueDate.BegOfPeriod&lt;/c&gt; if payments are due at the beginning of the period. If omitted, &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; is assumed.">可选。 <see cref="T:Microsoft.VisualBasic.DueDate" /> 类型的对象指定付款何时到期。 如果在付款期末付款，则此参数必须为 <c>DueDate.EndOfPeriod</c>；如果在付款期初付款，则此参数必须为 <c>DueDate.BegOfPeriod</c>。 如果省略，则假定 <c>DueDate.EndOfPeriod</c>。</param>
      <returns vsli:raw="The principal payment for a given period of an annuity based on periodic fixed payments and a fixed interest rate.">基于等额分期付款和固定利率的年金在给定期间的本金付款额。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Per&quot; /&gt; &amp;lt;=0 or &lt;paramref name=&quot;Per&quot; /&gt; &amp;gt; &lt;paramref name=&quot;NPer&quot; /&gt;.">
        <paramref name="Per" /> &lt;=0 或 <paramref name="Per" /> &gt; <paramref name="NPer" />。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.PV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary vsli:raw="Returns a value specifying the present value of an annuity based on periodic, fixed payments to be paid in the future and a fixed interest rate.">返回一个值，它基于未来等额分期付款和固定利率指定年金的现值。</summary>
      <param name="Rate" vsli:raw="Required. The interest rate per period. For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.">必需。 每期的利率。 例如，如果您的汽车贷款的年利率 (APR) 为 10%，按月还款，则每期利率为 0.1/12（即 0.0083）。</param>
      <param name="NPer" vsli:raw="Required. The total number of payment periods in the annuity. For example, if you make monthly payments on a four-year car loan, your loan has 4 x 12 (or 48) payment periods.">必需。 年金付款总期数。 例如，如果您的汽车贷款的期限为四年，按月还款，则这笔贷款共有 4 * 12（即 48）个支付周期。</param>
      <param name="Pmt" vsli:raw="Required. The payment to be made each period. Payments usually contain principal and interest that does not change during the life of the annuity.">必需。 每期应付金额。 付款金额通常包含本金和利息，该值在年金的有效期限内都不会改变。</param>
      <param name="FV" vsli:raw="Optional. The future value or cash balance you want after you make the final payment. For example, the future value of a loan is $0 because that is its value after the final payment. However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value. If omitted, 0 is assumed.">可选。 完成最后一次付款后所希望的终值或现金余额。 例如，贷款的终值为 $0，这是因为终值是末期还款之后的价值。 但是，如果您想用 18 年的时间存储 $50,000 作为孩子的教育经费，则 $50,000 是终值。 如果省略，则假定为 0。</param>
      <param name="Due" vsli:raw="Optional. Object of type &lt;see cref=&quot;T:Microsoft.VisualBasic.DueDate&quot; /&gt; that specifies when payments are due. This argument must be either &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; if payments are due at the end of the payment period, or &lt;c&gt;DueDate.BegOfPeriod&lt;/c&gt; if payments are due at the beginning of the period. If omitted, &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; is assumed.">可选。 <see cref="T:Microsoft.VisualBasic.DueDate" /> 类型的对象指定付款何时到期。 如果在付款期末付款，则此参数必须为 <c>DueDate.EndOfPeriod</c>；如果在付款期初付款，则此参数必须为 <c>DueDate.BegOfPeriod</c>。 如果省略，则假定 <c>DueDate.EndOfPeriod</c>。</param>
      <returns vsli:raw="The present value of an annuity based on periodic, fixed payments to be paid in the future and a fixed interest rate.">基于未来等额分期付款和固定利率的年金的现值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.Rate(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate,System.Double)">
      <summary vsli:raw="Returns a value specifying the interest rate per period for an annuity.">返回一个指定每期年金利率的值。</summary>
      <param name="NPer" vsli:raw="Required. The total number of payment periods in the annuity. For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 * 12 (or 48) payment periods.">必需。 年金付款总期数。 例如，如果您的汽车贷款的期限为四年，按月还款，则这笔贷款共有 4 * 12（即 48）个支付周期。</param>
      <param name="Pmt" vsli:raw="Required. The payment to be made each period. Payments usually contain principal and interest that doesn't change over the life of the annuity.">必需。 每期应付金额。 付款金额通常包含本金和利息，该值在年金的有效期限内都不会改变。</param>
      <param name="PV" vsli:raw="Required. The present value, or value today, of a series of future payments or receipts. For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.">必需。 未来一系列支出或收入的现值。 例如，如果您贷款买车，贷款额就是您将以按月还款的方式付给贷方的现值。</param>
      <param name="FV" vsli:raw="Optional. The future value or cash balance you want after you make the final payment. For example, the future value of a loan is $0 because that is its value after the final payment. However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value. If omitted, 0 is assumed.">可选。 完成最后一次付款后所希望的终值或现金余额。 例如，贷款的终值为 $0，这是因为终值是末期还款之后的价值。 但是，如果您想用 18 年的时间存储 $50,000 作为孩子的教育经费，则 $50,000 是终值。 如果省略，则假定为 0。</param>
      <param name="Due" vsli:raw="Optional. Object of type &lt;see cref=&quot;T:Microsoft.VisualBasic.DueDate&quot; /&gt; that specifies when payments are due. This argument must be either &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; if payments are due at the end of the payment period, or &lt;c&gt;DueDate.BegOfPeriod&lt;/c&gt; if payments are due at the beginning of the period. If omitted, &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; is assumed.">可选。 <see cref="T:Microsoft.VisualBasic.DueDate" /> 类型的对象指定付款何时到期。 如果在付款期末付款，则此参数必须为 <c>DueDate.EndOfPeriod</c>；如果在付款期初付款，则此参数必须为 <c>DueDate.BegOfPeriod</c>。 如果省略，则假定 <c>DueDate.EndOfPeriod</c>。</param>
      <param name="Guess" vsli:raw="Optional. The value you estimate is returned by &lt;see langword=&quot;Rate&quot; /&gt;. If omitted, &lt;paramref name=&quot;Guess&quot; /&gt; is 0.1 (10 percent).">可选。 <see langword="Rate" /> 将返回估计值。 如果省略，<paramref name="Guess" /> 便为 0.1 (10%)。</param>
      <returns vsli:raw="The interest rate per period for an annuity.">每期的年金利率。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;NPer&quot; /&gt; &amp;lt;= 0.">
        <paramref name="NPer" /> &lt;= 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.SLN(System.Double,System.Double,System.Double)">
      <summary vsli:raw="Returns a value specifying the straight-line depreciation of an asset for a single period.">返回一个值，该值指定资产在一个周期内的直线折旧。</summary>
      <param name="Cost" vsli:raw="Required. The initial cost of the asset.">必需。 资产的原始成本。</param>
      <param name="Salvage" vsli:raw="Required. The value of the asset at the end of its useful life.">必需。 资产在使用年限结束时的价值。</param>
      <param name="Life" vsli:raw="Required. The length of the useful life of the asset.">必需。 资产的使用年限。</param>
      <returns vsli:raw="The straight-line depreciation of an asset for a single period.">资产在一个周期内的直线折旧。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Life&quot; /&gt; = 0.">
        <paramref name="Life" /> = 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.SYD(System.Double,System.Double,System.Double,System.Double)">
      <summary vsli:raw="Returns a value specifying the sum-of-years digits depreciation of an asset for a specified period.">返回一个值，该值指定在指定周期内资产的年限总额折旧。</summary>
      <param name="Cost" vsli:raw="Required. The initial cost of the asset.">必需。 资产的原始成本。</param>
      <param name="Salvage" vsli:raw="Required. The value of the asset at the end of its useful life.">必需。 资产在使用年限结束时的价值。</param>
      <param name="Life" vsli:raw="Required. The length of the useful life of the asset.">必需。 资产的使用年限。</param>
      <param name="Period" vsli:raw="Required. The period for which asset depreciation is calculated.">必需。 计算资产折旧所用的周期。</param>
      <returns vsli:raw="The sum-of-years digits depreciation of an asset for a specified period.">指定周期内资产的年限总额折旧。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Salvage&quot; /&gt; &amp;lt; 0, &lt;paramref name=&quot;Period&quot; /&gt; &amp;gt; &lt;paramref name=&quot;Life&quot; /&gt;, or &lt;paramref name=&quot;Period&quot; /&gt; &amp;lt;=0.">
        <paramref name="Salvage" /> &lt; 0，<paramref name="Period" /> &gt; <paramref name="Life" />，或 <paramref name="Period" /> &lt;=0。</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.FirstDayOfWeek">
      <summary vsli:raw="Indicates the first day of the week to use when calling date-related functions.">指示在调用与日期相关的函数时使用的每周的第一天。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Friday">
      <summary vsli:raw="Friday This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbFriday&quot; /&gt;.">Friday，该成员等效于 Visual Basic 常数 <see langword="vbFriday" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Monday">
      <summary vsli:raw="Monday This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMonday&quot; /&gt;.">Monday，该成员等效于 Visual Basic 常数 <see langword="vbMonday" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Saturday">
      <summary vsli:raw="Saturday This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbSaturday&quot; /&gt;.">Saturday，该成员等效于 Visual Basic 常数 <see langword="vbSaturday" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday">
      <summary vsli:raw="Sunday (default) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbSunday&quot; /&gt;.">Sunday（默认值），该成员等效于 Visual Basic 常数 <see langword="vbSunday" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.System">
      <summary vsli:raw="The first day of the week as specified in your system settings This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbUseSystemDayOfWeek&quot; /&gt;.">系统设置中指定的一周的第一天，该成员等效于 Visual Basic 常数 <see langword="vbUseSystemDayOfWeek" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Thursday">
      <summary vsli:raw="Thursday This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbThursday&quot; /&gt;.">Thursday，该成员等效于 Visual Basic 常数 <see langword="vbThursday" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Tuesday">
      <summary vsli:raw="Tuesday This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbTuesday&quot; /&gt;.">Tuesday，该成员等效于 Visual Basic 常数 <see langword="vbTuesday" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Wednesday">
      <summary vsli:raw="Wednesday This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbWednesday&quot; /&gt;.">Wednesday，该成员等效于 Visual Basic 常数 <see langword="vbWednesday" />。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FirstWeekOfYear">
      <summary vsli:raw="Indicates the first week of the year to use when calling date-related functions.">指示在调用与日期相关的函数时使用的每年的第一周。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.FirstFourDays">
      <summary vsli:raw="The first week that has at least four days in the new year. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbFirstFourDays&quot; /&gt;.">第一个至少包含新年中的四天的周。 此成员等效于 Visual Basic 常量 <see langword="vbFirstFourDays" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.FirstFullWeek">
      <summary vsli:raw="The first full week of the year. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbFirstFullWeek&quot; /&gt;.">一年中第一个完整的周。 此成员等效于 Visual Basic 常量 <see langword="vbFirstFullWeek" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1">
      <summary vsli:raw="The week in which January 1 occurs (default). This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbFirstJan1&quot; /&gt;.">1 月 1 日所在的周（默认）。 此成员等效于 Visual Basic 常量 <see langword="vbFirstJan1" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.System">
      <summary vsli:raw="The week specified in your system settings as the first week of the year. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbUseSystem&quot; /&gt;.">在系统设置中指定为一年的第一周的周。 此成员等效于 Visual Basic 常量 <see langword="vbUseSystem" />。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.HideModuleNameAttribute">
      <summary vsli:raw="The &lt;see langword=&quot;HideModuleNameAttribute&quot; /&gt; attribute, when applied to a module, allows the module members to be accessed using only the qualification needed for the module.">当应用于模块时，<see langword="HideModuleNameAttribute" /> 属性允许仅使用模块所需的限定访问模块成员。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.HideModuleNameAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.HideModuleNameAttribute&quot; /&gt; attribute.">初始化 <see cref="T:Microsoft.VisualBasic.HideModuleNameAttribute" /> 属性的新实例。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Information">
      <summary vsli:raw="The &lt;see langword=&quot;Information&quot; /&gt; module contains the procedures used to return, test for, or verify information.">
        <see langword="Information" /> 模块包含用于返回、测试或验证信息的过程。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.Err">
      <summary vsli:raw="Contains information about run-time errors.">包含运行时错误的相关信息。</summary>
      <returns vsli:raw="Contains information about run-time errors.">包含运行时错误的相关信息。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsArray(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether a variable points to an array.">返回一个 <see langword="Boolean" /> 值，指示变量是否指向数组。</summary>
      <param name="VarName" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; variable.">必需。 <see langword="Object" /> 变量。</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether a variable points to an array.">返回一个 <see langword="Boolean" /> 值，指示变量是否指向数组。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsDate(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression represents a valid &lt;see langword=&quot;Date&quot; /&gt; value.">返回一个 <see langword="Boolean" /> 值，该值指示表达式是否表示一个有效的 <see langword="Date" /> 值。</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; expression.">必需。 <see langword="Object" /> 表达式。</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression represents a valid &lt;see langword=&quot;Date&quot; /&gt; value.">返回一个 <see langword="Boolean" /> 值，该值指示表达式是否表示一个有效的 <see langword="Date" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression evaluates to the &lt;see cref=&quot;T:System.DBNull&quot; /&gt; class.">返回一个 <see langword="Boolean" /> 值，指示表达式的计算结果是否为 <see cref="T:System.DBNull" /> 类。</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; expression.">必需。 <see langword="Object" /> 表达式。</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression evaluates to the &lt;see cref=&quot;T:System.DBNull&quot; /&gt; class.">返回一个 <see langword="Boolean" /> 值，指示表达式的计算结果是否为 <see cref="T:System.DBNull" /> 类。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsError(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression is an exception type.">返回一个 <see langword="Boolean" /> 值，指示表达式是否是异常类型。</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; expression.">必需。 <see langword="Object" /> 表达式。</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression is an exception type.">返回一个 <see langword="Boolean" /> 值，指示表达式是否是异常类型。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression has no object assigned to it.">返回一个 <see langword="Boolean" /> 值，指示表达式是否未被指派对象。</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; expression.">必需。 <see langword="Object" /> 表达式。</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression has no object assigned to it.">返回一个 <see langword="Boolean" /> 值，指示表达式是否未被指派对象。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression can be evaluated as a number.">返回一个 <see langword="Boolean" /> 值，指示表达式的计算结果是否为数字。</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; expression.">必需。 <see langword="Object" /> 表达式。</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression can be evaluated as a number.">返回一个 <see langword="Boolean" /> 值，指示表达式的计算结果是否为数字。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsReference(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression evaluates to a reference type.">返回一个 <see langword="Boolean" /> 值，指示表达式是否为引用类型。</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; expression.">必需。 <see langword="Object" /> 表达式。</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression evaluates to a reference type.">返回一个 <see langword="Boolean" /> 值，指示表达式是否为引用类型。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
      <summary vsli:raw="Returns the lowest available subscript for the indicated dimension of an array.">返回数组的指示维度的最小可用下标。</summary>
      <param name="Array" vsli:raw="Required. Array of any data type. The array in which you want to find the lowest possible subscript of a dimension.">必需。 任何数据类型的数组。 希望在其中找到维度的最小可能下标的数组。</param>
      <param name="Rank" vsli:raw="Optional. &lt;see langword=&quot;Integer&quot; /&gt;. The dimension for which the lowest possible subscript is to be returned. Use 1 for the first dimension, 2 for the second, and so on. If &lt;paramref name=&quot;Rank&quot; /&gt; is omitted, 1 is assumed.">可选。 <see langword="Integer" />。 将返回其最小可用下标的维度。 对第一维使用 1，对第二维使用 2，依此类推。 如果省略 <paramref name="Rank" />，则假定为 1。</param>
      <returns vsli:raw="&lt;see langword=&quot;Integer&quot; /&gt;. The lowest value the subscript for the specified dimension can contain. &lt;see langword=&quot;LBound&quot; /&gt; always returns 0 as long as &lt;paramref name=&quot;Array&quot; /&gt; has been initialized, even if it has no elements, for example if it is a zero-length string. If &lt;paramref name=&quot;Array&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;, &lt;see langword=&quot;LBound&quot; /&gt; throws an &lt;see cref=&quot;T:System.ArgumentNullException&quot; /&gt;.">
        <see langword="Integer" />。 指定维度的下标可以包含的最小值。 只要 <paramref name="Array" /> 已初始化，即使其中没有元素（例如，它是一个零长度字符串），<see langword="LBound" /> 也始终返回 0。 如果 <paramref name="Array" /> 为 <see langword="Nothing" />，则 <see langword="LBound" /> 将引发 <see cref="T:System.ArgumentNullException" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Array&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="Array" /> 为 <see langword="Nothing" />。</exception>
      <exception cref="T:System.RankException" vsli:raw="&lt;paramref name=&quot;Rank&quot; /&gt; less than 1, or &lt;paramref name=&quot;Rank&quot; /&gt; is greater than the rank of &lt;paramref name=&quot;Array&quot; /&gt;.">
        <paramref name="Rank" /> 小于 1，或 <paramref name="Rank" /> 大于 <paramref name="Array" /> 的级别。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
      <summary vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value representing the RGB color code corresponding to the specified color number.">返回一个 <see langword="Integer" /> 值，表示与指定的颜色编号对应的 RGB 颜色代码。</summary>
      <param name="Color" vsli:raw="Required. A whole number in the range 0-15.">必需。 0–15 范围内的整数。</param>
      <returns vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value representing the RGB color code corresponding to the specified color number.">返回一个 <see langword="Integer" /> 值，表示与指定的颜色编号对应的 RGB 颜色代码。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Color&quot; /&gt; is outside of range 0 to 15, inclusive.">
        <paramref name="Color" /> 不在 0 到 15（均含）范围之内。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value representing an RGB color value from a set of red, green and blue color components.">返回一个 <see langword="Integer" /> 值，表示由一组红色、绿色和蓝色分量形成的 RGB 颜色值。</summary>
      <param name="Red" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; in the range 0-255, inclusive, that represents the intensity of the red component of the color.">必需。 0–255 范围内（均含）的 <see langword="Integer" /> 值，表示颜色中红色分量的强度。</param>
      <param name="Green" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; in the range 0-255, inclusive, that represents the intensity of the green component of the color.">必需。 0–255 范围内（均含）的 <see langword="Integer" /> 值，表示颜色中绿色分量的强度。</param>
      <param name="Blue" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; in the range 0-255, inclusive, that represents the intensity of the blue component of the color.">必需。 0–255 范围内（均含）的 <see langword="Integer" /> 值，表示颜色中蓝色分量的强度。</param>
      <returns vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value representing an RGB color value from a set of red, green and blue color components.">返回一个 <see langword="Integer" /> 值，表示由一组红色、绿色和蓝色分量形成的 RGB 颜色值。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Green&quot; /&gt;, &lt;paramref name=&quot;Blue&quot; /&gt;, or &lt;paramref name=&quot;Red&quot; /&gt; is outside of range 0 to 255, inclusive.">
        <paramref name="Green" />、<paramref name="Blue" />，或 <paramref name="Red" /> 不在 0 到 255（含 0 和 255）范围之内。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.SystemTypeName(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value containing the system data type name of a variable.">返回一个 <see langword="String" /> 值，它包含变量的系统数据类型名称。</summary>
      <param name="VbName" vsli:raw="Required. A &lt;see langword=&quot;String&quot; /&gt; variable containing a Visual Basic type name.">必需。 一个包含 Visual Basic 类型名称的 <see langword="String" /> 变量。</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value containing the system data type name of a variable.">返回一个 <see langword="String" /> 值，它包含变量的系统数据类型名称。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value containing data-type information about a variable.">返回一个 <see langword="String" /> 值，它包含变量的数据类型信息。</summary>
      <param name="VarName" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; variable. If &lt;see langword=&quot;Option Strict&quot; /&gt; is &lt;see langword=&quot;Off&quot; /&gt;, you can pass a variable of any data type except a structure.">必需。 <see langword="Object" /> 变量。 如果 <see langword="Option Strict" /> 为 <see langword="Off" />，则可以传递除结构之外的任何数据类型的变量。</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value containing data-type information about a variable.">返回一个 <see langword="String" /> 值，它包含变量的数据类型信息。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
      <summary vsli:raw="Returns the highest available subscript for the indicated dimension of an array.">返回数组的指示维度的最大可用下标。</summary>
      <param name="Array" vsli:raw="Required. Array of any data type. The array in which you want to find the highest possible subscript of a dimension.">必需。 任何数据类型的数组。 要在其中查找维度的最大可能下标的数组。</param>
      <param name="Rank" vsli:raw="Optional. &lt;see langword=&quot;Integer&quot; /&gt;. The dimension for which the highest possible subscript is to be returned. Use 1 for the first dimension, 2 for the second, and so on. If &lt;paramref name=&quot;Rank&quot; /&gt; is omitted, 1 is assumed.">可选。 <see langword="Integer" />。 将返回其最大可用下标的维度。 对第一维使用 1，对第二维使用 2，依此类推。 如果省略 <paramref name="Rank" />，则假定为 1。</param>
      <returns vsli:raw="&lt;see langword=&quot;Integer&quot; /&gt;. The highest value the subscript for the specified dimension can contain. If &lt;paramref name=&quot;Array&quot; /&gt; has only one element, &lt;see langword=&quot;UBound&quot; /&gt; returns 0. If &lt;paramref name=&quot;Array&quot; /&gt; has no elements, for example if it is a zero-length string, &lt;see langword=&quot;UBound&quot; /&gt; returns -1.">
        <see langword="Integer" />。 指定维度的下标可以包含的最大值。 如果 <paramref name="Array" /> 只有一个元素，则 <see langword="UBound" /> 返回 0。 如果 <paramref name="Array" /> 没有元素，例如它是一个零长度字符串，则 <see langword="UBound" /> 返回 -1。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Array&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="Array" /> 为 <see langword="Nothing" />。</exception>
      <exception cref="T:System.RankException" vsli:raw="&lt;paramref name=&quot;Rank&quot; /&gt; is less than 1, or &lt;paramref name=&quot;Rank&quot; /&gt; is greater than the rank of &lt;paramref name=&quot;Array&quot; /&gt;.">
        <paramref name="Rank" /> 小于 1，或 <paramref name="Rank" /> 大于 <paramref name="Array" /> 的级别。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.VarType(System.Object)">
      <summary vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value containing the data type classification of a variable.">返回一个 <see langword="Integer" /> 值，它包含变量的数据类型分类。</summary>
      <param name="VarName" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; variable. If &lt;see langword=&quot;Option Strict&quot; /&gt; is &lt;see langword=&quot;Off&quot; /&gt;, you can pass a variable of any data type except a structure.">必需。 <see langword="Object" /> 变量。 如果 <see langword="Option Strict" /> 为 <see langword="Off" />，则可以传递除结构之外的任何数据类型的变量。</param>
      <returns vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value containing the data type classification of a variable.">返回一个 <see langword="Integer" /> 值，它包含变量的数据类型分类。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.VbTypeName(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value containing the Visual Basic data type name of a variable.">返回一个 <see langword="String" /> 值，它包含变量的 Visual Basic 数据类型名称。</summary>
      <param name="UrtName" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; variable containing a type name used by the common language runtime.">必需。 <see langword="String" /> 变量，其中包含公共语言运行时所使用的类型名称。</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value containing the Visual Basic data type name of a variable.">返回一个 <see langword="String" /> 值，它包含变量的 Visual Basic 数据类型名称。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Interaction">
      <summary vsli:raw="The &lt;see langword=&quot;Interaction&quot; /&gt; module contains procedures used to interact with objects, applications, and systems.">
        <see langword="Interaction" /> 模块包含用于与对象、应用程序和系统交互的过程。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Beep">
      <summary vsli:raw="Sounds a tone through the computer's speaker.">通过计算机扬声器提示音。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
      <summary vsli:raw="Executes a method on an object, or sets or returns a property on an object.">执行对象的方法，或者设置或返回对象的属性。</summary>
      <param name="ObjectRef" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt;. A pointer to the object exposing the property or method.">必需。 <see langword="Object" />。 一个指向公开属性或方法的对象的指针。</param>
      <param name="ProcName" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt;. A string expression containing the name of the property or method on the object.">必需。 <see langword="String" />。 一个字符串表达式，包含对象的属性或方法的名称。</param>
      <param name="UseCallType" vsli:raw="Required. An enumeration member of type &lt;see cref=&quot;T:Microsoft.VisualBasic.CallType&quot; /&gt; representing the type of procedure being called. The value of &lt;see langword=&quot;CallType&quot; /&gt; can be &lt;see langword=&quot;Method&quot; /&gt;, &lt;see langword=&quot;Get&quot; /&gt;, or &lt;see langword=&quot;Set&quot; /&gt;.">必需。 类型 <see cref="T:Microsoft.VisualBasic.CallType" /> 的一个枚举成员，它表示正在被调用的过程的类型。 <see langword="CallType" /> 的值可以是 <see langword="Method" />、<see langword="Get" /> 或 <see langword="Set" />。</param>
      <param name="Args" vsli:raw="Optional. &lt;see langword=&quot;ParamArray&quot; /&gt;. A parameter array containing the arguments to be passed to the property or method being called.">可选。 <see langword="ParamArray" />。 一个形参数组，包含要传递给正在调用的属性或方法的实参。</param>
      <returns vsli:raw="Executes a method on an object, or sets or returns a property on an object.">执行对象的方法，或者设置或返回对象的属性。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Invalid &lt;paramref name=&quot;UseCallType&quot; /&gt; value; must be &lt;see langword=&quot;Method&quot; /&gt;, &lt;see langword=&quot;Get&quot; /&gt;, or &lt;see langword=&quot;Set&quot; /&gt;.">无效 <paramref name="UseCallType" /> 值；必须为 <see langword="Method" />、<see langword="Get" /> 或 <see langword="Set" />。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
      <summary vsli:raw="Creates and returns a reference to a COM object. &lt;see langword=&quot;CreateObject&quot; /&gt; cannot be used to create instances of classes in Visual Basic unless those classes are explicitly exposed as COM components.">创建并返回对 COM 对象的引用。 不能在 Visual Basic 中使用 <see langword="CreateObject" /> 创建这些类的实例，除非将类显式公开为 COM 组件。</summary>
      <param name="ProgId" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt;. The program ID of the object to create.">必需。 <see langword="String" />。 要创建的对象的程序 ID。</param>
      <param name="ServerName" vsli:raw="Optional. &lt;see langword=&quot;String&quot; /&gt;. The name of the network server where the object will be created. If &lt;paramref name=&quot;ServerName&quot; /&gt; is an empty string (&quot;&quot;), the local computer is used.">可选。 <see langword="String" />。 要在其上创建对象的网络服务器的名称。 如果 <paramref name="ServerName" /> 是空字符串 ("")，则使用本地计算机。</param>
      <returns vsli:raw="Creates and returns a reference to a COM object. &lt;see langword=&quot;CreateObject&quot; /&gt; cannot be used to create instances of classes in Visual Basic unless those classes are explicitly exposed as COM components.">创建并返回对 COM 对象的引用。 不能在 Visual Basic 中使用 <see langword="CreateObject" /> 创建这些类的实例，除非将类显式公开为 COM 组件。</returns>
      <exception cref="T:System.Exception" vsli:raw="Server is unavailable">服务器不可用。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="No object of the specified type exists.">不存在指定类型的对象。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.IIf(System.Boolean,System.Object,System.Object)">
      <summary vsli:raw="Returns one of two objects, depending on the evaluation of an expression.">根据表达式的计算，返回两个对象中的一个。</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Boolean&quot; /&gt;. The expression you want to evaluate.">必需。 <see langword="Boolean" />。 要计算的表达式。</param>
      <param name="TruePart" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt;. Returned if &lt;paramref name=&quot;Expression&quot; /&gt; evaluates to &lt;see langword=&quot;True&quot; /&gt;.">必需。 <see langword="Object" />。 当 <paramref name="Expression" /> 计算结果为 <see langword="True" /> 时返回。</param>
      <param name="FalsePart" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt;. Returned if &lt;paramref name=&quot;Expression&quot; /&gt; evaluates to &lt;see langword=&quot;False&quot; /&gt;.">必需。 <see langword="Object" />。 当 <paramref name="Expression" /> 计算结果为 <see langword="False" /> 时返回。</param>
      <returns vsli:raw="Returns one of two objects, depending on the evaluation of an expression.">根据表达式的计算，返回两个对象中的一个。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.MsgBoxResult">
      <summary vsli:raw="Indicates which button was pressed on a message box, returned by the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">指示在消息框上按下了哪个按钮，由 <see langword="MsgBox" /> 函数返回。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Abort">
      <summary vsli:raw="Abort button was pressed. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbAbort&quot; /&gt;.">按下了“中止”按钮。 此成员等效于 Visual Basic 常量 <see langword="vbAbort" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Cancel">
      <summary vsli:raw="Cancel button was pressed. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbCancel&quot; /&gt;.">按下了“取消”按钮。 此成员等效于 Visual Basic 常量 <see langword="vbCancel" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Ignore">
      <summary vsli:raw="Ignore button was pressed. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbIgnore&quot; /&gt;.">按下了“忽略”按钮。 此成员等效于 Visual Basic 常量 <see langword="vbIgnore" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.No">
      <summary vsli:raw="No button was pressed. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbNo&quot; /&gt;.">按下了“否”按钮。 此成员等效于 Visual Basic 常量 <see langword="vbNo" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Ok">
      <summary vsli:raw="OK button was pressed. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbOK&quot; /&gt;.">按下了“确定”按钮。 此成员等效于 Visual Basic 常量 <see langword="vbOK" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Retry">
      <summary vsli:raw="Retry button was pressed. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbRetry&quot; /&gt;.">按下了“重试”按钮。 此成员等效于 Visual Basic 常量 <see langword="vbRetry" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Yes">
      <summary vsli:raw="Yes button was pressed. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbYes&quot; /&gt;.">按下了“是”按钮。 此成员等效于 Visual Basic 常量 <see langword="vbYes" />。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.MsgBoxStyle">
      <summary vsli:raw="Indicates which buttons to display when calling the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">指示调用 <see langword="MsgBox" /> 函数时显示的按钮。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.AbortRetryIgnore">
      <summary vsli:raw="Abort, Retry, and Ignore buttons. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbAbortRetryIgnore&quot; /&gt;.">“中止”、“重试”和“忽略”按钮。 此成员等效于 Visual Basic 常量 <see langword="vbAbortRetryIgnore" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.ApplicationModal">
      <summary vsli:raw="Application modal message box. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbApplicationModal&quot; /&gt;.">应用程序模式消息框。 此成员等效于 Visual Basic 常量 <see langword="vbApplicationModal" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Critical">
      <summary vsli:raw="Critical message. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbCritical&quot; /&gt;.">关键消息。 此成员等效于 Visual Basic 常量 <see langword="vbCritical" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.DefaultButton1">
      <summary vsli:raw="First button is default. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbDefaultButton1&quot; /&gt;.">第一个按钮是默认值。 此成员等效于 Visual Basic 常量 <see langword="vbDefaultButton1" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.DefaultButton2">
      <summary vsli:raw="Second button is default. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbDefaultButton2&quot; /&gt;.">第二个按钮是默认值。 此成员等效于 Visual Basic 常量 <see langword="vbDefaultButton2" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.DefaultButton3">
      <summary vsli:raw="Third button is default. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbDefaultButton3&quot; /&gt;.">第三个按钮是默认值。 此成员等效于 Visual Basic 常量 <see langword="vbDefaultButton3" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Exclamation">
      <summary vsli:raw="Warning message. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbExclamation&quot; /&gt;.">警告消息。 此成员等效于 Visual Basic 常量 <see langword="vbExclamation" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Information">
      <summary vsli:raw="Information message. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbInformation&quot; /&gt;.">信息消息。 此成员等效于 Visual Basic 常量 <see langword="vbInformation" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxHelp">
      <summary vsli:raw="Help text. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMsgBoxHelp&quot; /&gt;.">帮助文本。 此成员等效于 Visual Basic 常量 <see langword="vbMsgBoxHelp" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxRight">
      <summary vsli:raw="Right-aligned text. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMsgBoxRight&quot; /&gt;.">右对齐文本。 此成员等效于 Visual Basic 常量 <see langword="vbMsgBoxRight" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxRtlReading">
      <summary vsli:raw="Right-to-left reading text (Hebrew and Arabic systems). This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMsgBoxRtlReading&quot; /&gt;.">从右到左阅读的文本（希伯来语和阿拉伯语系统）。 此成员等效于 Visual Basic 常量 <see langword="vbMsgBoxRtlReading" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxSetForeground">
      <summary vsli:raw="Foreground message box window. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMsgBoxSetForeground&quot; /&gt;.">前景消息框窗口。 此成员等效于 Visual Basic 常量 <see langword="vbMsgBoxSetForeground" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.OkCancel">
      <summary vsli:raw="OK and Cancel buttons. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbOKCancel&quot; /&gt;.">“确定”和“取消”按钮。 此成员等效于 Visual Basic 常量 <see langword="vbOKCancel" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.OkOnly">
      <summary vsli:raw="OK button only (default). This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbOKOnly&quot; /&gt;.">仅“确定”按钮（默认）。 此成员等效于 Visual Basic 常量 <see langword="vbOKOnly" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Question">
      <summary vsli:raw="Warning query. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbQuestion&quot; /&gt;.">警告查询。 此成员等效于 Visual Basic 常量 <see langword="vbQuestion" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.RetryCancel">
      <summary vsli:raw="Retry and Cancel buttons. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbRetryCancel&quot; /&gt;.">“重试”和“取消”按钮。 此成员等效于 Visual Basic 常量 <see langword="vbRetryCancel" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.SystemModal">
      <summary vsli:raw="System modal message box. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbSystemModal&quot; /&gt;.">系统模式消息框。 此成员等效于 Visual Basic 常量 <see langword="vbSystemModal" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.YesNo">
      <summary vsli:raw="Yes and No buttons. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbYesNo&quot; /&gt;.">“是”和“否”按钮。 此成员等效于 Visual Basic 常量 <see langword="vbYesNo" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.YesNoCancel">
      <summary vsli:raw="Yes, No, and Cancel buttons. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbYesNoCancel&quot; /&gt;.">“是”、“否”和“取消”按钮。 此成员等效于 Visual Basic 常量 <see langword="vbYesNoCancel" />。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.MyGroupCollectionAttribute">
      <summary vsli:raw="This attribute supports &lt;see langword=&quot;My.Forms&quot; /&gt; and &lt;see langword=&quot;My.WebServices&quot; /&gt; in Visual Basic.">在 Visual Basic 中，此特性支持 <see langword="My.Forms" /> 和 <see langword="My.WebServices" />。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.MyGroupCollectionAttribute.#ctor(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="This attribute supports &lt;see langword=&quot;My.Forms&quot; /&gt; and &lt;see langword=&quot;My.WebServices&quot; /&gt; in Visual Basic.">在 Visual Basic 中，此特性支持 <see langword="My.Forms" /> 和 <see langword="My.WebServices" />。</summary>
      <param name="typeToCollect" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. Initializes the &lt;see cref=&quot;P:Microsoft.VisualBasic.MyGroupCollectionAttribute.MyGroupName&quot; /&gt; property. The compiler generates accessor properties for classes that derive from this type.">
        <see langword="String" />。 初始化 <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.MyGroupName" /> 属性。 编译器会为派生自此类型的类生成访问器属性。</param>
      <param name="createInstanceMethodName" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. Initializes the &lt;see cref=&quot;P:Microsoft.VisualBasic.MyGroupCollectionAttribute.CreateMethod&quot; /&gt; property. Specifies the method in the class that creates the type's instances.">
        <see langword="String" />。 初始化 <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.CreateMethod" /> 属性。 指定类中创建类型实例的方法。</param>
      <param name="disposeInstanceMethodName" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. Initializes the &lt;see cref=&quot;P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DisposeMethod&quot; /&gt; property. Specifies the method in the class that disposes of the type's instances.">
        <see langword="String" />。 初始化 <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DisposeMethod" /> 属性。 指定类中释放类型实例的方法。</param>
      <param name="defaultInstanceAlias" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. Initializes the &lt;see cref=&quot;P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DefaultInstanceAlias&quot; /&gt; property. Specifies the name of the property that returns the default instance of the class.">
        <see langword="String" />。 初始化 <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DefaultInstanceAlias" /> 属性。 指定返回类的默认实例的属性名。</param>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.CreateMethod">
      <summary vsli:raw="This property supports &lt;see langword=&quot;My&quot; /&gt; in Visual Basic.">在 Visual Basic 中，此属性支持 <see langword="My" />。</summary>
      <returns vsli:raw="Specifies the method in the class that creates the type's instances.">指定类中创建类型实例的方法。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DefaultInstanceAlias">
      <summary vsli:raw="This property supports &lt;see langword=&quot;My&quot; /&gt; in Visual Basic.">在 Visual Basic 中，此属性支持 <see langword="My" />。</summary>
      <returns vsli:raw="Specifies the name of the property that returns the default instance of the class.">指定返回类的默认实例的属性名。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DisposeMethod">
      <summary vsli:raw="This property supports &lt;see langword=&quot;My&quot; /&gt; in Visual Basic.">在 Visual Basic 中，此属性支持 <see langword="My" />。</summary>
      <returns vsli:raw="Specifies the method in the class that disposes of the type's instances.">指定类中释放类型实例的方法。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.MyGroupName">
      <summary vsli:raw="This property supports &lt;see langword=&quot;My&quot; /&gt; in Visual Basic.">在 Visual Basic 中，此属性支持 <see langword="My" />。</summary>
      <returns vsli:raw="Specifies the name of the type for which the compiler generates accessor properties.">指定编译器为其生成访问器属性的类型的名称。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.ClipboardProxy">
      <summary>提供了用于操控剪贴板的方法。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.FileSystemProxy">
      <summary>提供了用于处理驱动器、文件和目录的属性和方法。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CombinePath(System.String,System.String)">
      <summary>组合两个路径并返回一个格式正确的路径。</summary>
      <param name="baseDirectory">
        <see langword="String" />。 要组合的第一个路径。</param>
      <param name="relativePath">
        <see langword="String" />。 要组合的第二个路径。</param>
      <returns>指定路径的组合。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="baseDirectory" /> 或 <paramref name="relativePath" /> 是格式不正确的路径。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String)">
      <summary>将一个目录复制到另一个目录中。</summary>
      <param name="sourceDirectoryName">要复制的目录。</param>
      <param name="destinationDirectoryName">应将目录复制到的位置。</param>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> 或 <paramref name="sourceDirectoryName" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">源目录不存在。</exception>
      <exception cref="T:System.IO.IOException">源路径和目标路径相同。</exception>
      <exception cref="T:System.InvalidOperationException">操作为循环。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件夹名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
      <exception cref="T:System.UnauthorizedAccessException">目标文件存在但无法访问。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>将一个目录复制到另一个目录中。</summary>
      <param name="sourceDirectoryName">要复制的目录。</param>
      <param name="destinationDirectoryName">应将目录复制到的位置。</param>
      <param name="showUI">是否对操作进度进行可视跟踪。 默认值为 <see langword="UIOption.OnlyErrorDialogs" />。</param>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> 或 <paramref name="sourceDirectoryName" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">源目录不存在。</exception>
      <exception cref="T:System.IO.IOException">源路径和目标路径相同。</exception>
      <exception cref="T:System.InvalidOperationException">操作为循环。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件夹名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
      <exception cref="T:System.UnauthorizedAccessException">目标文件存在但无法访问。</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="ShowUI" /> 设置为 <see langword="UIOption.AllDialogs" /> 且用户取消了该操作，或者无法复制目录中的一个或多个文件。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>将一个目录复制到另一个目录中。</summary>
      <param name="sourceDirectoryName">要复制的目录。</param>
      <param name="destinationDirectoryName">应将目录复制到的位置。</param>
      <param name="showUI">是否对操作进度进行可视跟踪。 默认值为 <see langword="UIOption.OnlyErrorDialogs" />。</param>
      <param name="onUserCancel">指定当用户在操作过程中单击“取消”时应执行的操作。 默认值为 <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />。</param>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> 或 <paramref name="sourceDirectoryName" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">源目录不存在。</exception>
      <exception cref="T:System.IO.IOException">源路径和目标路径相同。</exception>
      <exception cref="T:System.InvalidOperationException">操作为循环。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件夹名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
      <exception cref="T:System.UnauthorizedAccessException">目标文件存在但无法访问。</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="ShowUI" /> 设置为 <see langword="UIOption.AllDialogs" /> 且用户取消了该操作，或者无法复制目录中的一个或多个文件。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,System.Boolean)">
      <summary>将一个目录复制到另一个目录中。</summary>
      <param name="sourceDirectoryName">要复制的目录。</param>
      <param name="destinationDirectoryName">应将目录复制到的位置。</param>
      <param name="overwrite">要覆盖现有文件，则为 <see langword="True" />；否则为 <see langword="False" />。 默认值为 <see langword="False" />。</param>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> 或 <paramref name="sourceDirectoryName" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">源目录不存在。</exception>
      <exception cref="T:System.IO.IOException">源路径和目标路径相同。</exception>
      <exception cref="T:System.InvalidOperationException">操作为循环。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件夹名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
      <exception cref="T:System.UnauthorizedAccessException">目标文件存在但无法访问。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String)">
      <summary>将文件复制到新的位置。</summary>
      <param name="sourceFileName">要复制的文件。</param>
      <param name="destinationFileName">文件应复制到的位置。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> 包含路径信息。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> 或 <paramref name="sourceFileName" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.FileNotFoundException">源文件无效或不存在。</exception>
      <exception cref="T:System.IO.IOException">目标目录中的同名文件正被使用。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.UnauthorizedAccessException">该用户没有必需的权限。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>将文件复制到新的位置。</summary>
      <param name="sourceFileName">要复制的文件。</param>
      <param name="destinationFileName">文件应复制到的位置。</param>
      <param name="showUI">是否对操作进度进行可视跟踪。 默认值为 <see langword="UIOption.OnlyErrorDialogs" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> 包含路径信息。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> 或 <paramref name="sourceFileName" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.FileNotFoundException">源文件无效或不存在。</exception>
      <exception cref="T:System.IO.IOException">目标文件存在，并且 <paramref name="overwrite" /> 设置为 <see langword="False" />。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.UnauthorizedAccessException">该用户没有必需的权限。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>将文件复制到新的位置。</summary>
      <param name="sourceFileName">要复制的文件。</param>
      <param name="destinationFileName">文件应复制到的位置。</param>
      <param name="showUI">是否对操作进度进行可视跟踪。 默认值为 <see langword="UIOption.OnlyErrorDialogs" />。</param>
      <param name="onUserCancel">指定当用户在操作过程中单击“取消”时应执行的操作。 默认值为 <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> 包含路径信息。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> 或 <paramref name="sourceFileName" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.FileNotFoundException">源文件无效或不存在。</exception>
      <exception cref="T:System.IO.IOException">目标文件存在，并且 <paramref name="overwrite" /> 设置为 <see langword="False" />。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.UnauthorizedAccessException">该用户没有必需的权限。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="UICancelOption" /> 设置为 <see langword="ThrowException" />，并且用户已经取消了该操作或者发生了未指定的 I/O 错误。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,System.Boolean)">
      <summary>将文件复制到新的位置。</summary>
      <param name="sourceFileName">要复制的文件。</param>
      <param name="destinationFileName">文件应复制到的位置。</param>
      <param name="overwrite">如果应覆盖现有文件，则为 <see langword="True" />；否则为 <see langword="False" />。 默认值为 <see langword="False" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> 包含路径信息。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> 或 <paramref name="sourceFileName" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.FileNotFoundException">源文件无效或不存在。</exception>
      <exception cref="T:System.IO.IOException">目标文件存在，并且 <paramref name="overwrite" /> 设置为 <see langword="False" />。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.UnauthorizedAccessException">该用户没有必需的权限。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CreateDirectory(System.String)">
      <summary>创建目录。</summary>
      <param name="directory">目录的名称和位置。</param>
      <exception cref="T:System.ArgumentException">目录名称格式不正确。 例如，它包含非法字符或仅包含空白。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.PathTooLongException">目录名太长。</exception>
      <exception cref="T:System.NotSupportedException">目录名只是一个冒号 (:)。</exception>
      <exception cref="T:System.IO.IOException">要创建的目录的父目录是只读的。</exception>
      <exception cref="T:System.UnauthorizedAccessException">用户没有创建目录的权限。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.CurrentDirectory">
      <summary>获取或设置当前目录。</summary>
      <returns>文件 I/O 操作的当前目录。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">该路径无效。</exception>
      <exception cref="T:System.UnauthorizedAccessException">该用户缺少必要的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)">
      <summary>删除目录。</summary>
      <param name="directory">要删除的目录。</param>
      <param name="onDirectoryNotEmpty">指定当要删除的目录中含有文件或目录时应采取的操作。 默认值为 <see langword="DeleteDirectoryOption.DeleteAllContents" />。</param>
      <exception cref="T:System.ArgumentException">路径是零长度字符串、格式不正确、仅包含空白，或者包含无效字符（包括通配符）。 路径是设备路径（以 \\.\ 开头）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">目录不存在，或者目录是一个文件。</exception>
      <exception cref="T:System.IO.IOException">目录或子目录中的某个文件正被使用。</exception>
      <exception cref="T:System.NotSupportedException">目录名中包含冒号 (:)。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.Security.SecurityException">该用户没有必需的权限。</exception>
      <exception cref="T:System.OperationCanceledException">用户取消了操作，或无法删除该目录。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary>删除目录。</summary>
      <param name="directory">要删除的目录。</param>
      <param name="showUI">指定是否对操作进度进行可视跟踪。 默认值为 <see langword="UIOption.OnlyErrorDialogs" />。</param>
      <param name="recycle">指定是否应将删除的文件发送到“回收站”。 默认值为 <see langword="RecycleOption.DeletePermanently" />。</param>
      <exception cref="T:System.ArgumentException">路径是零长度字符串、格式不正确、仅包含空白，或者包含无效字符（包括通配符）。 路径是设备路径（以 \\.\ 开头）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">目录不存在，或者目录是一个文件。</exception>
      <exception cref="T:System.IO.IOException">目录或子目录中的某个文件正被使用。</exception>
      <exception cref="T:System.NotSupportedException">目录名中包含冒号 (:)。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.Security.SecurityException">该用户没有必需的权限。</exception>
      <exception cref="T:System.OperationCanceledException">用户取消了操作，或无法删除该目录。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>删除目录。</summary>
      <param name="directory">要删除的目录。</param>
      <param name="showUI">指定是否对操作进度进行可视跟踪。 默认值为 <see langword="UIOption.OnlyErrorDialogs" />。</param>
      <param name="recycle">指定是否应将删除的文件发送到“回收站”。 默认值为 <see langword="RecycleOption.DeletePermanently" />。</param>
      <param name="onUserCancel">指定在用户单击“取消”时是否引发异常。</param>
      <exception cref="T:System.ArgumentException">路径是零长度字符串、格式不正确、仅包含空白，或者包含无效字符（包括通配符）。 路径是设备路径（以 \\.\ 开头）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">目录不存在，或者目录是一个文件。</exception>
      <exception cref="T:System.IO.IOException">目录或子目录中的某个文件正被使用。</exception>
      <exception cref="T:System.NotSupportedException">目录名中包含冒号 (:)。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.Security.SecurityException">该用户没有必需的权限。</exception>
      <exception cref="T:System.OperationCanceledException">用户取消了操作，或无法删除该目录。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String)">
      <summary>删除文件。</summary>
      <param name="file">要删除的文件的名称和路径。</param>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；带有必须指定文件的尾部反斜杠；是设备路径（以 \\.\ 开头）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.IO.IOException">该文件正在使用。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
      <exception cref="T:System.IO.FileNotFoundException">文件不存在。</exception>
      <exception cref="T:System.UnauthorizedAccessException">该用户没有删除该文件的权限，或者该文件为只读。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary>删除文件。</summary>
      <param name="file">要删除的文件的名称和路径。</param>
      <param name="showUI">是否对操作进度进行可视跟踪。 默认值为 <see langword="UIOption.OnlyErrorDialogs" />。</param>
      <param name="recycle">删除的文件是否应发送到“回收站”。 默认值为 <see langword="RecycleOption.DeletePermanently" />。</param>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；带有必须指定文件的尾部反斜杠；是设备路径（以 \\.\ 开头）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.IO.IOException">该文件正在使用。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
      <exception cref="T:System.IO.FileNotFoundException">文件不存在。</exception>
      <exception cref="T:System.UnauthorizedAccessException">该用户没有删除该文件的权限，或者该文件为只读。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>删除文件。</summary>
      <param name="file">要删除的文件的名称和路径。</param>
      <param name="showUI">是否对操作进度进行可视跟踪。 默认值为 <see langword="UIOption.OnlyErrorDialogs" />。</param>
      <param name="recycle">删除的文件是否应发送到“回收站”。 默认值为 <see langword="RecycleOption.DeletePermanently" />。</param>
      <param name="onUserCancel">指定用户取消操作时是否引发异常。 默认值为 <see langword="UICancelOption.ThrowException" />。</param>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；带有必须指定文件的尾部反斜杠；是设备路径（以 \\.\ 开头）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.IO.IOException">该文件正在使用。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
      <exception cref="T:System.IO.FileNotFoundException">文件不存在。</exception>
      <exception cref="T:System.UnauthorizedAccessException">该用户没有删除该文件的权限，或者该文件为只读。</exception>
      <exception cref="T:System.OperationCanceledException">用户已取消该操作并且 <paramref name="onUserCancel" /> 已设置为 <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DirectoryExists(System.String)">
      <summary>如果指定目录存在，则返回 <see langword="True" />。</summary>
      <param name="directory">目录的路径。</param>
      <returns>如果目录存在，则为 <see langword="True" />；否则为 <see langword="False" />。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.Drives">
      <summary>返回所有可用驱动器名称的只读集合。</summary>
      <returns>作为 <see cref="T:System.IO.DriveInfo" /> 对象的所有可用驱动器的只读集合。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.FileExists(System.String)">
      <summary>如果指定文件存在，则返回 <see langword="True" />。</summary>
      <param name="file">文件的名称和路径。</param>
      <returns>如果文件存在，则返回 <see langword="True" />；否则此方法返回 <see langword="False" />。</returns>
      <exception cref="T:System.ArgumentException">文件名称以反斜杠 (\) 结尾。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)">
      <summary>返回字符串的只读集合，这些字符串表示包含指定文本的文件的名称。</summary>
      <param name="directory">要搜索的目录。</param>
      <param name="containsText">搜索文本。</param>
      <param name="ignoreCase">如果搜索应区分大小写，则为 <see langword="True" />；否则为 <see langword="False" />。 默认值为 <see langword="True" />。</param>
      <param name="searchType">是否包含子文件夹。 默认值为 <see langword="SearchOption.SearchTopLevelOnly" />。</param>
      <returns>包含指定文本的文件名的只读集合。</returns>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一而无效：是零长度字符串；仅包含空白；包含无效字符；是一个设备路径（开头字符为 <c>\.&lt;/code&gt;）。</c></exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定的目录不存在。</exception>
      <exception cref="T:System.IO.IOException">指定的目录指向某个现有文件。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException">指定的目录路径中包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
      <exception cref="T:System.UnauthorizedAccessException">该用户缺少必要的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>返回字符串的只读集合，这些字符串表示包含指定文本的文件的名称。</summary>
      <param name="directory">要搜索的目录。</param>
      <param name="containsText">搜索文本。</param>
      <param name="ignoreCase">如果搜索应区分大小写，则为 <see langword="True" />；否则为 <see langword="False" />。 默认值为 <see langword="True" />。</param>
      <param name="searchType">是否包含子文件夹。 默认值为 <see langword="SearchOption.SearchTopLevelOnly" />。</param>
      <param name="fileWildcards">要匹配的模式。</param>
      <returns>包含指定文本的文件名的只读集合。</returns>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一而无效：是零长度字符串；仅包含空白；包含无效字符；是一个设备路径（开头字符为 <c>\.&lt;/code&gt;）。</c></exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定的目录不存在。</exception>
      <exception cref="T:System.IO.IOException">指定的目录指向某个现有文件。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException">指定的目录路径中包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
      <exception cref="T:System.UnauthorizedAccessException">该用户缺少必要的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories(System.String)">
      <summary>返回一个字符串集合，这些字符串表示目录内子目录的路径名。</summary>
      <param name="directory">目录的名称和路径。</param>
      <returns>所指定目录中，子目录路径名称的只读集合。</returns>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定的目录不存在。</exception>
      <exception cref="T:System.IO.IOException">指定的目录指向某个现有文件。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
      <exception cref="T:System.UnauthorizedAccessException">该用户缺少必要的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>返回一个字符串集合，这些字符串表示目录内子目录的路径名。</summary>
      <param name="directory">目录的名称和路径。</param>
      <param name="searchType">是否包含子文件夹。 默认值为 <see langword="SearchOption.SearchTopLevelOnly" />。</param>
      <param name="wildcards">用于匹配名称的模式。</param>
      <returns>所指定目录中，子目录路径名称的只读集合。</returns>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）。</exception>
      <exception cref="T:System.ArgumentNullException">一个或多个指定的通配符为 <see langword="Nothing" />、空字符串，或者仅包含空格。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定的目录不存在。</exception>
      <exception cref="T:System.IO.IOException">指定的目录指向某个现有文件。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
      <exception cref="T:System.UnauthorizedAccessException">该用户缺少必要的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectoryInfo(System.String)">
      <summary>返回指定路径的 <see cref="T:System.IO.DirectoryInfo" /> 对象。</summary>
      <param name="directory">
        <see langword="String" />。 目录的路径。</param>
      <returns>指定路径的 <see cref="T:System.IO.DirectoryInfo" /> 对象。</returns>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException">目录路径中包含冒号 (:)，或者格式无效。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDriveInfo(System.String)">
      <summary>返回指定驱动器的 <see cref="T:System.IO.DriveInfo" /> 对象。</summary>
      <param name="drive">要检查的驱动器。</param>
      <returns>指定驱动器的 <see cref="T:System.IO.DriveInfo" /> 对象。</returns>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="drive" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFileInfo(System.String)">
      <summary>返回指定文件的 <see cref="T:System.IO.FileInfo" /> 对象。</summary>
      <param name="file">文件的名称和路径。</param>
      <returns>指定文件的 <see cref="T:System.IO.FileInfo" /> 对象</returns>
      <exception cref="T:System.ArgumentException">路径名称格式不正确。 例如，包含无效字符或仅为空白。 文件名具有尾随斜杠标记。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.NotSupportedException">路径的字符串中间包含一个冒号。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径太长。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少必要的权限。</exception>
      <exception cref="T:System.UnauthorizedAccessException">该用户缺少对文件的 ACL（访问控制列表）的访问权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles(System.String)">
      <summary>返回字符串的只读集合，这些字符串表示目录内文件的名称。</summary>
      <param name="directory">要搜索的目录。</param>
      <returns>指定目录中的文件名的只读集合。</returns>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> 为 <see langword="Nothing" />。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">要搜索的目录不存在。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="directory" /> 指向某个现有文件。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
      <exception cref="T:System.UnauthorizedAccessException">该用户缺少必要的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>返回字符串的只读集合，这些字符串表示目录内文件的名称。</summary>
      <param name="directory">要搜索的目录。</param>
      <param name="searchType">是否包含子文件夹。 默认值为 <see langword="SearchOption.SearchTopLevelOnly" />。</param>
      <param name="wildcards">要匹配的模式。</param>
      <returns>指定目录中的文件名的只读集合。</returns>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> 为 <see langword="Nothing" />。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">要搜索的目录不存在。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="directory" /> 指向某个现有文件。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
      <exception cref="T:System.UnauthorizedAccessException">该用户缺少必要的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetName(System.String)">
      <summary>从提供的路径分析文件名。</summary>
      <param name="path">必需。 要分析的路径。 <see langword="String" />。</param>
      <returns>来自指定路径的文件名。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetParentPath(System.String)">
      <summary>返回所提供的路径的父路径。</summary>
      <param name="path">要检查的路径。</param>
      <returns>所提供的路径的父路径。</returns>
      <exception cref="T:System.ArgumentException">路径是根路径，因此没有父路径。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> 为 <see langword="Nothing" />。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetTempFileName">
      <summary>在磁盘上创建一个唯一命名的零字节临时文件并返回该文件的完整路径。</summary>
      <returns>包含该临时文件的完整路径的 <see langword="String" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String)">
      <summary>将目录从一个位置移动到另一个位置。</summary>
      <param name="sourceDirectoryName">要移动的目录的路径。</param>
      <param name="destinationDirectoryName">源目录将移到的目录的路径。</param>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> 或 <paramref name="destinationDirectoryName" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">该目录不存在。</exception>
      <exception cref="T:System.IO.IOException">源是根目录，或者，源路径与目标路径相同。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.InvalidOperationException">操作为循环。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
      <exception cref="T:System.UnauthorizedAccessException">该用户没有必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>将目录从一个位置移动到另一个位置。</summary>
      <param name="sourceDirectoryName">要移动的目录的路径。</param>
      <param name="destinationDirectoryName">源目录将移到的目录的路径。</param>
      <param name="showUI">指定是否对操作进度进行可视跟踪。 默认值为 <see langword="UIOption.OnlyErrorDialogs" />。</param>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> 或 <paramref name="destinationDirectoryName" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">该目录不存在。</exception>
      <exception cref="T:System.IO.IOException">目标目录已存在，并且 <paramref name="overwrite" /> 设置为 <see langword="False" />。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.InvalidOperationException">操作为循环。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
      <exception cref="T:System.UnauthorizedAccessException">该用户没有必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>将目录从一个位置移动到另一个位置。</summary>
      <param name="sourceDirectoryName">要移动的目录的路径。</param>
      <param name="destinationDirectoryName">源目录将移到的目录的路径。</param>
      <param name="showUI">指定是否对操作进度进行可视跟踪。 默认值为 <see langword="UIOption.OnlyErrorDialogs" />。</param>
      <param name="onUserCancel">指定用户取消操作时是否引发异常。 默认值为 <see langword="UICancelOption.ThrowException" />。</param>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> 或 <paramref name="destinationDirectoryName" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">该目录不存在。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="onUserCancel" /> 设置为 <see langword="ThrowException" /> 并且无法复制子目录中的文件。</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="onUserCancel" /> 设置为 <see langword="ThrowException" />，并且用户取消了该操作，或者无法完成该操作。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.InvalidOperationException">操作为循环。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.UnauthorizedAccessException">该用户没有必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,System.Boolean)">
      <summary>将目录从一个位置移动到另一个位置。</summary>
      <param name="sourceDirectoryName">要移动的目录的路径。</param>
      <param name="destinationDirectoryName">源目录将移到的目录的路径。</param>
      <param name="overwrite">如果应覆盖现有目录，则为 <see langword="True" />；否则为 <see langword="False" />。 默认值为 <see langword="False" />。</param>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> 或 <paramref name="destinationDirectoryName" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">该目录不存在。</exception>
      <exception cref="T:System.IO.IOException">目标目录已存在，并且 <paramref name="overwrite" /> 设置为 <see langword="False" />。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.InvalidOperationException">操作为循环。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
      <exception cref="T:System.UnauthorizedAccessException">该用户没有必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String)">
      <summary>将文件移动到一个新位置。</summary>
      <param name="sourceFileName">要移动的文件的路径。</param>
      <param name="destinationFileName">文件应移到的目录的路径。</param>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）；以尾部反斜杠结尾。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.FileNotFoundException">源文件无效或不存在。</exception>
      <exception cref="T:System.IO.IOException">文件正由另一个进程使用，或者出现 I/O 错误。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>将文件移动到一个新位置。</summary>
      <param name="sourceFileName">要移动的文件的路径。</param>
      <param name="destinationFileName">文件应移到的目录的路径。</param>
      <param name="showUI">指定是否对操作进度进行可视跟踪。 默认值为 <see langword="UIOption.OnlyErrorDialogs" />。</param>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）；以尾部反斜杠结尾。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.FileNotFoundException">源文件无效或不存在。</exception>
      <exception cref="T:System.IO.IOException">文件正由另一个进程使用，或者出现 I/O 错误。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>将文件移动到一个新位置。</summary>
      <param name="sourceFileName">要移动的文件的路径。</param>
      <param name="destinationFileName">文件应移到的目录的路径。</param>
      <param name="showUI">指定是否对操作进度进行可视跟踪。 默认值为 <see langword="UIOption.OnlyErrorDialogs" />。</param>
      <param name="onUserCancel">指定用户取消操作时是否引发异常。 默认值为 <see langword="UICancelOption.ThrowException" />。</param>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）；以尾部反斜杠结尾。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.FileNotFoundException">源文件无效或不存在。</exception>
      <exception cref="T:System.IO.IOException">文件正由另一个进程使用，或者出现 I/O 错误。</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="onUserCancel" /> 设置为 <see langword="ThrowException" />，并且用户已经取消了该操作或者发生了未指定的 I/O 错误。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,System.Boolean)">
      <summary>将文件移动到一个新位置。</summary>
      <param name="sourceFileName">要移动的文件的路径。</param>
      <param name="destinationFileName">文件应移到的目录的路径。</param>
      <param name="overwrite">要覆盖现有文件，则为 <see langword="True" />；否则为 <see langword="False" />。 默认值为 <see langword="False" />。</param>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）；以尾部反斜杠结尾。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.FileNotFoundException">源文件无效或不存在。</exception>
      <exception cref="T:System.IO.IOException">文件正由另一个进程使用，或者出现 I/O 错误。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String)">
      <summary>使用 <see langword="OpenTextFieldParser" /> 方法可以创建 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 对象，该对象为分析结构化文本文件（例如日志）提供了一种简单而有效的方法。 <see langword="TextFieldParser" /> 对象可用于读取分隔文件和固定宽度文件。</summary>
      <param name="file">要使用 <see langword="TextFieldParser" /> 打开的文件。</param>
      <returns>用于读取指定文件的 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />。</returns>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）；以尾部反斜杠结尾。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> 为 <see langword="Nothing" />。</exception>
      <exception cref="T:System.IO.FileNotFoundException">文件不存在。</exception>
      <exception cref="T:System.IO.IOException">文件正由另一个进程使用，或者出现 I/O 错误。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">无法使用指定的格式分析某行 ()。 此异常消息指定导致发生异常的行，同时将 <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> 属性分配给该行中包含的文本。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String,System.Int32[])">
      <summary>使用 <see langword="OpenTextFieldParser" /> 方法可以创建 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 对象，该对象为分析结构化文本文件（例如日志）提供了一种简单而有效的方法。 <see langword="TextFieldParser" /> 对象可用于读取分隔文件和固定宽度文件。</summary>
      <param name="file">要使用 <see langword="TextFieldParser" /> 打开的文件。</param>
      <param name="fieldWidths">字段的宽度。</param>
      <returns>用于读取指定文件的 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />。</returns>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）；以尾部反斜杠结尾。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> 为 <see langword="Nothing" />。</exception>
      <exception cref="T:System.IO.FileNotFoundException">文件不存在。</exception>
      <exception cref="T:System.IO.IOException">文件正由另一个进程使用，或者出现 I/O 错误。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">无法使用指定的格式分析某行 ()。 此异常消息指定导致发生异常的行，同时将 <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> 属性分配给该行中包含的文本。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String,System.String[])">
      <summary>使用 <see langword="OpenTextFieldParser" /> 方法可以创建 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 对象，该对象为分析结构化文本文件（例如日志）提供了一种简单而有效的方法。 <see langword="TextFieldParser" /> 对象可用于读取分隔文件和固定宽度文件。</summary>
      <param name="file">要使用 <see langword="TextFieldParser" /> 打开的文件。</param>
      <param name="delimiters">字段分隔符。</param>
      <returns>用于读取指定文件的 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />。</returns>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）；以尾部反斜杠结尾。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> 为 <see langword="Nothing" />。</exception>
      <exception cref="T:System.IO.FileNotFoundException">文件不存在。</exception>
      <exception cref="T:System.IO.IOException">文件正由另一个进程使用，或者出现 I/O 错误。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">无法使用指定的格式分析某行 ()。 此异常消息指定导致发生异常的行，同时将 <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> 属性分配给该行中包含的文本。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader(System.String)">
      <summary>打开要从文件中读取的 <see cref="T:System.IO.StreamReader" /> 对象。</summary>
      <param name="file">要读取的文件。</param>
      <returns>要从文件中读取的 <see cref="T:System.IO.StreamReader" /> 对象</returns>
      <exception cref="T:System.ArgumentException">文件名以反斜杠 (\) 结尾。</exception>
      <exception cref="T:System.IO.FileNotFoundException">无法找到指定的文件。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少从文件读取所必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader(System.String,System.Text.Encoding)">
      <summary>打开要从文件中读取的 <see cref="T:System.IO.StreamReader" /> 对象。</summary>
      <param name="file">要读取的文件。</param>
      <param name="encoding">要用于文件内容的编码。 默认值为 ASCII。</param>
      <returns>要从文件中读取的 <see cref="T:System.IO.StreamReader" /> 对象</returns>
      <exception cref="T:System.ArgumentException">文件名以反斜杠 (\) 结尾。</exception>
      <exception cref="T:System.IO.FileNotFoundException">无法找到指定的文件。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少从文件读取所必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter(System.String,System.Boolean)">
      <summary>打开要写入指定文件的 <see cref="T:System.IO.StreamWriter" /> 对象。</summary>
      <param name="file">要写入的文件。</param>
      <param name="append">要追加到文件的内容中，则为 <see langword="True" />；要覆盖文件的内容，则为 <see langword="False" />。 默认值为 <see langword="False" />。</param>
      <returns>要写入指定文件的 <see cref="T:System.IO.StreamWriter" /> 对象。</returns>
      <exception cref="T:System.ArgumentException">文件名以尾部反斜杠结尾。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)">
      <summary>打开要写入指定文件的 <see cref="T:System.IO.StreamWriter" />。</summary>
      <param name="file">要写入的文件。</param>
      <param name="append">若要追加到文件的内容中，则为 <see langword="True" />；若要覆盖文件的内容，则为 <see langword="False" />。 默认值为 <see langword="False" />。</param>
      <param name="encoding">写入文件时要使用的编码。 默认值为 ASCII。</param>
      <returns>要写入指定文件的 <see cref="T:System.IO.StreamWriter" /> 对象。</returns>
      <exception cref="T:System.ArgumentException">文件名以尾部反斜杠结尾。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllBytes(System.String)">
      <summary>以字节数组的形式返回文件的内容。</summary>
      <param name="file">要读取的文件。</param>
      <returns>包含文件内容的 <see langword="Byte" /> 数组。</returns>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）；以尾部反斜杠结尾。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> 为 <see langword="Nothing" />。</exception>
      <exception cref="T:System.IO.FileNotFoundException">文件不存在。</exception>
      <exception cref="T:System.IO.IOException">文件正由另一个进程使用，或者出现 I/O 错误。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.OutOfMemoryException">内存不足，无法将字符串写入缓冲区。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText(System.String)">
      <summary>将文本文件的内容作为 <see langword="String" /> 返回。</summary>
      <param name="file">要读取的文件的名称和路径。</param>
      <returns>包含文件内容的 <see langword="String" />。</returns>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）；以尾部反斜杠结尾。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> 为 <see langword="Nothing" />。</exception>
      <exception cref="T:System.IO.FileNotFoundException">文件不存在。</exception>
      <exception cref="T:System.IO.IOException">文件正由另一个进程使用，或者出现 I/O 错误。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.OutOfMemoryException">内存不足，无法将字符串写入缓冲区。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText(System.String,System.Text.Encoding)">
      <summary>将文本文件的内容作为 <see langword="String" /> 返回。</summary>
      <param name="file">要读取的文件的名称和路径。</param>
      <param name="encoding">读取文件时要使用的字符编码。 默认值为 UTF-8。</param>
      <returns>包含文件内容的 <see langword="String" />。</returns>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）；以尾部反斜杠结尾。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> 为 <see langword="Nothing" />。</exception>
      <exception cref="T:System.IO.FileNotFoundException">文件不存在。</exception>
      <exception cref="T:System.IO.IOException">文件正由另一个进程使用，或者出现 I/O 错误。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.OutOfMemoryException">内存不足，无法将字符串写入缓冲区。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameDirectory(System.String,System.String)">
      <summary>重命名目录。</summary>
      <param name="directory">要重命名的目录的路径和名称。</param>
      <param name="newName">目录的新名称。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="newName" /> 包含路径信息。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> 为 <see langword="Nothing" />。  
或 
 <paramref name="newName" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">该目录不存在。</exception>
      <exception cref="T:System.IO.IOException">存在一个具有 <paramref name="newName" /> 中指定的名称的文件或目录。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
      <exception cref="T:System.UnauthorizedAccessException">该用户没有必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameFile(System.String,System.String)">
      <summary>重命名文件。</summary>
      <param name="file">要重命名的文件。</param>
      <param name="newName">文件的新名称。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="newName" /> 包含路径信息或以反斜杠 (\) 结尾。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> 为 <see langword="Nothing" />。  
或 
 <paramref name="newName" /> 为 <see langword="Nothing" /> 或空字符串。</exception>
      <exception cref="T:System.IO.FileNotFoundException">文件不存在。</exception>
      <exception cref="T:System.IO.IOException">存在一个具有 <paramref name="newName" /> 中指定的名称的文件或目录。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
      <exception cref="T:System.UnauthorizedAccessException">该用户没有必需的权限。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories">
      <summary>获取一个对象，该对象提供用于访问经常引用的目录的属性。</summary>
      <returns>此属性返回计算机的 <see cref="T:Microsoft.VisualBasic.FileIO.SpecialDirectories" /> 对象。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllBytes(System.String,System.Byte[],System.Boolean)">
      <summary>将数据写入二进制文件。</summary>
      <param name="file">要写入的文件的路径和名称。</param>
      <param name="data">要写入文件的数据。</param>
      <param name="append">若要追加到文件内容中，则为 <see langword="True" />；若要覆盖文件内容，则为 <see langword="False" />。 默认值为 <see langword="False" />。</param>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）；以尾部反斜杠结尾。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> 为 <see langword="Nothing" />。</exception>
      <exception cref="T:System.IO.FileNotFoundException">文件不存在。</exception>
      <exception cref="T:System.IO.IOException">文件正由另一个进程使用，或者出现 I/O 错误。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.OutOfMemoryException">内存不足，无法将字符串写入缓冲区。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(System.String,System.String,System.Boolean)">
      <summary>向文件写入文本。</summary>
      <param name="file">要写入的文件。</param>
      <param name="text">要写入文件的文本。</param>
      <param name="append">要追加到文件的内容中，则为 <see langword="True" />；要覆盖文件的内容，则为 <see langword="False" />。 默认值为 <see langword="False" />。</param>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）；以尾部反斜杠结尾。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> 为 <see langword="Nothing" />。</exception>
      <exception cref="T:System.IO.FileNotFoundException">文件不存在。</exception>
      <exception cref="T:System.IO.IOException">文件正由另一个进程使用，或者出现 I/O 错误。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.OutOfMemoryException">内存不足，无法将字符串写入缓冲区。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)">
      <summary>向文件写入文本。</summary>
      <param name="file">要写入的文件。</param>
      <param name="text">要写入文件的文本。</param>
      <param name="append">要追加到文件的内容中，则为 <see langword="True" />；要覆盖文件的内容，则为 <see langword="False" />。 默认值为 <see langword="False" />。</param>
      <param name="encoding">写入文件时要使用的编码。 默认值为 UTF-8。</param>
      <exception cref="T:System.ArgumentException">路径由于以下原因之一无效：是零长度字符串；仅为空白；包含无效字符；是一个设备路径（以 \\.\ 开头）；以尾部反斜杠结尾。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> 为 <see langword="Nothing" />。</exception>
      <exception cref="T:System.IO.FileNotFoundException">文件不存在。</exception>
      <exception cref="T:System.IO.IOException">文件正由另一个进程使用，或者出现 I/O 错误。</exception>
      <exception cref="T:System.IO.PathTooLongException">路径超过了系统定义的最大长度。</exception>
      <exception cref="T:System.NotSupportedException">路径中的文件名或目录名包含冒号 (:)，或格式无效。</exception>
      <exception cref="T:System.OutOfMemoryException">内存不足，无法将字符串写入缓冲区。</exception>
      <exception cref="T:System.Security.SecurityException">该用户缺少查看该路径所必需的权限。</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.RegistryProxy">
      <summary>提供了用于操控注册表的属性和方法。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy">
      <summary>提供了用于访问经常引用的目录的属性。</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.AllUsersApplicationData">
      <summary>获取指向所有用户的 Application Data 目录的路径名称。</summary>
      <returns>指向所有用户的 Application Data 目录的路径。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">路径为空，通常是因为操作系统不支持该目录。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.CurrentUserApplicationData">
      <summary>获取指向当前用户的 Application Data 目录的路径名称。</summary>
      <returns>指向当前用户的 Application Data 目录的路径。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">路径为空，通常是因为操作系统不支持该目录。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.Desktop">
      <summary>获取指向 Desktop 目录的路径名称。</summary>
      <returns>Desktop 目录的路径。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">路径为空，通常是因为操作系统不支持该目录。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.MyDocuments">
      <summary>获取指向 My Documents 目录的路径名称。</summary>
      <returns>指向 My Documents 目录的路径。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">路径为空，通常是因为操作系统不支持该目录。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.MyMusic">
      <summary>获取指向 My Music 目录的路径名称。</summary>
      <returns>指向 My Music 目录的路径。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">路径为空，通常是因为操作系统不支持该目录。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.MyPictures">
      <summary>获取指向 My Pictures 目录的路径名称。</summary>
      <returns>指向 My Pictures 目录的路径。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">路径为空，通常是因为操作系统不支持该目录。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.ProgramFiles">
      <summary>获取指向 Program Files 目录的路径。</summary>
      <returns>Program Files目录的路径。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">路径为空，通常是因为操作系统不支持该目录。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.Programs">
      <summary>获取指向 Programs 目录的路径名称。</summary>
      <returns>指向 Programs 目录的路径。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">路径为空，通常是因为操作系统不支持该目录。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.Temp">
      <summary>获取指向 Temp 目录的路径名称。</summary>
      <returns>指向 Temp 目录的路径。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">路径为空，通常是因为操作系统不支持该目录。</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.OpenAccess">
      <summary vsli:raw="Indicates how to open a file when calling file-access functions.">指示调用文件访问函数时如何打开文件。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.Default">
      <summary vsli:raw="Read and write access permitted. This is the default.">允许读写访问。 这是默认设置。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.Read">
      <summary vsli:raw="Read access permitted.">允许读访问。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.ReadWrite">
      <summary vsli:raw="Read and write access permitted.">允许读写访问。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.Write">
      <summary vsli:raw="Write access permitted.">允许写访问。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.OpenMode">
      <summary vsli:raw="Indicates how to open a file when calling file-access functions.">指示调用文件访问函数时如何打开文件。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Append">
      <summary vsli:raw="File opened to append to it. Default.">为向其追加内容而打开的文件。 默认。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Binary">
      <summary vsli:raw="File opened for binary access.">为进行二进制访问而打开的文件。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Input">
      <summary vsli:raw="File opened for read access.">为进行读访问而打开的文件。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Output">
      <summary vsli:raw="File opened for write access.">为进行写访问而打开的文件。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Random">
      <summary vsli:raw="File opened for random access.">为进行随机访问而打开的文件。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.OpenShare">
      <summary vsli:raw="Indicates how to open a file when calling file-access functions.">指示调用文件访问函数时如何打开文件。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.Default">
      <summary vsli:raw="&lt;see langword=&quot;LockReadWrite&quot; /&gt;. This is the default.">
        <see langword="LockReadWrite" />。 这是默认设置。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.LockRead">
      <summary vsli:raw="Other processes cannot read the file.">其他进程无法读取文件。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.LockReadWrite">
      <summary vsli:raw="Other processes cannot read or write to the file.">其他进程无法读取或写入文件。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.LockWrite">
      <summary vsli:raw="Other processes cannot write to the file.">其他进程无法写入文件。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.Shared">
      <summary vsli:raw="Any process can read or write to the file.">任何进程都可以读取或写入文件。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.SpcInfo">
      <summary vsli:raw="This class supports the Visual Basic &lt;see langword=&quot;Print&quot; /&gt; and &lt;see langword=&quot;PrintLine&quot; /&gt; functions.">此类支持 Visual Basic <see langword="Print" /> 和 <see langword="PrintLine" /> 函数。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.SpcInfo.Count">
      <summary vsli:raw="This field supports the Visual Basic &lt;see langword=&quot;Print&quot; /&gt; and &lt;see langword=&quot;PrintLine&quot; /&gt; functions.">此字段支持 Visual Basic <see langword="Print" /> 和 <see langword="PrintLine" /> 函数。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Strings">
      <summary vsli:raw="The &lt;see langword=&quot;Strings&quot; /&gt; module contains procedures used to perform string operations.">
        <see langword="Strings" /> 模块包含用于执行字符串操作的过程。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Asc(System.Char)">
      <summary vsli:raw="Returns an integer value representing the character code corresponding to a character.">返回表示与某个字符相对应的字符代码的整数值。</summary>
      <param name="String" vsli:raw="Required. Any valid &lt;see langword=&quot;Char&quot; /&gt; or &lt;see langword=&quot;String&quot; /&gt; expression. If &lt;paramref name=&quot;String&quot; /&gt; is a &lt;see langword=&quot;String&quot; /&gt; expression, only the first character of the string is used for input. If &lt;paramref name=&quot;String&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or contains no characters, an &lt;see cref=&quot;T:System.ArgumentException&quot; /&gt; error occurs.">必需。 任何有效的 <see langword="Char" /> 或 <see langword="String" /> 表达式。 如果 <paramref name="String" /> 是一个 <see langword="String" /> 表达式，则只将字符串的第一个字符用于输入。 如果 <paramref name="String" /> 是 <see langword="Nothing" /> 或不包含任何字符，将会出现 <see cref="T:System.ArgumentException" /> 错误。</param>
      <returns vsli:raw="The character code corresponding to a character.">与某个字符相对应的字符代码。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Asc(System.String)">
      <summary vsli:raw="Returns an integer value representing the character code corresponding to a character.">返回表示与某个字符相对应的字符代码的整数值。</summary>
      <param name="String" vsli:raw="Required. Any valid &lt;see langword=&quot;Char&quot; /&gt; or &lt;see langword=&quot;String&quot; /&gt; expression. If &lt;paramref name=&quot;String&quot; /&gt; is a &lt;see langword=&quot;String&quot; /&gt; expression, only the first character of the string is used for input. If &lt;paramref name=&quot;String&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or contains no characters, an &lt;see cref=&quot;T:System.ArgumentException&quot; /&gt; error occurs.">必需。 任何有效的 <see langword="Char" /> 或 <see langword="String" /> 表达式。 如果 <paramref name="String" /> 是一个 <see langword="String" /> 表达式，则只将字符串的第一个字符用于输入。 如果 <paramref name="String" /> 是 <see langword="Nothing" /> 或不包含任何字符，将会出现 <see cref="T:System.ArgumentException" /> 错误。</param>
      <returns vsli:raw="The character code corresponding to a character.">与某个字符相对应的字符代码。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.AscW(System.Char)">
      <summary vsli:raw="Returns an integer value representing the character code corresponding to a character.">返回表示与某个字符相对应的字符代码的整数值。</summary>
      <param name="String" vsli:raw="Required. Any valid &lt;see langword=&quot;Char&quot; /&gt; or &lt;see langword=&quot;String&quot; /&gt; expression. If &lt;paramref name=&quot;String&quot; /&gt; is a &lt;see langword=&quot;String&quot; /&gt; expression, only the first character of the string is used for input. If &lt;paramref name=&quot;String&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or contains no characters, an &lt;see cref=&quot;T:System.ArgumentException&quot; /&gt; error occurs.">必需。 任何有效的 <see langword="Char" /> 或 <see langword="String" /> 表达式。 如果 <paramref name="String" /> 是一个 <see langword="String" /> 表达式，则只将字符串的第一个字符用于输入。 如果 <paramref name="String" /> 是 <see langword="Nothing" /> 或不包含任何字符，将会出现 <see cref="T:System.ArgumentException" /> 错误。</param>
      <returns vsli:raw="The character code corresponding to a character.">与某个字符相对应的字符代码。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.AscW(System.String)">
      <summary vsli:raw="Returns an integer value representing the character code corresponding to a character.">返回表示与某个字符相对应的字符代码的整数值。</summary>
      <param name="String" vsli:raw="Required. Any valid &lt;see langword=&quot;Char&quot; /&gt; or &lt;see langword=&quot;String&quot; /&gt; expression. If &lt;paramref name=&quot;String&quot; /&gt; is a &lt;see langword=&quot;String&quot; /&gt; expression, only the first character of the string is used for input. If &lt;paramref name=&quot;String&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or contains no characters, an &lt;see cref=&quot;T:System.ArgumentException&quot; /&gt; error occurs.">必需。 任何有效的 <see langword="Char" /> 或 <see langword="String" /> 表达式。 如果 <paramref name="String" /> 是一个 <see langword="String" /> 表达式，则只将字符串的第一个字符用于输入。 如果 <paramref name="String" /> 是 <see langword="Nothing" /> 或不包含任何字符，将会出现 <see cref="T:System.ArgumentException" /> 错误。</param>
      <returns vsli:raw="The character code corresponding to a character.">与某个字符相对应的字符代码。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
      <summary vsli:raw="Returns the character associated with the specified character code.">返回与指定字符代码相关联的字符。</summary>
      <param name="CharCode" vsli:raw="Required. An &lt;see langword=&quot;Integer&quot; /&gt; expression representing the &lt;c&gt;code point&lt;/c&gt;, or character code, for the character.">必需。 <see langword="Integer" /> 表达式，表示字符的 <c>code point</c> 或字符代码。</param>
      <returns vsli:raw="The character associated with the specified character code.">与指定字符代码相关联的字符。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;CharCode&quot; /&gt; &amp;lt; 0 or &amp;gt; 255 for &lt;see langword=&quot;Chr&quot; /&gt;.">
        <see langword="Chr" /> 的 <paramref name="CharCode" /> &lt; 0 或 &gt; 255。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
      <summary vsli:raw="Returns the character associated with the specified character code.">返回与指定字符代码相关联的字符。</summary>
      <param name="CharCode" vsli:raw="Required. An &lt;see langword=&quot;Integer&quot; /&gt; expression representing the &lt;c&gt;code point&lt;/c&gt;, or character code, for the character.">必需。 <see langword="Integer" /> 表达式，表示字符的 <c>code point</c> 或字符代码。</param>
      <returns vsli:raw="The character associated with the specified character code.">与指定字符代码相关联的字符。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;CharCode&quot; /&gt; &amp;lt; -32768 or &amp;gt; 65535 for &lt;see langword=&quot;ChrW&quot; /&gt;.">
        <see langword="ChrW" /> 的 <paramref name="CharCode" /> &lt; -32768 或 &gt; 65535。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Returns a zero-based array containing a subset of a &lt;see langword=&quot;String&quot; /&gt; array based on specified filter criteria.">返回一个从零开始的数组，该数组包含基于指定筛选条件的 <see langword="String" /> 数组的子集。</summary>
      <param name="Source" vsli:raw="Required. One-dimensional array of strings to be searched.">必需。 要搜索的一维字符串数组。</param>
      <param name="Match" vsli:raw="Required. String to search for.">必需。 要搜索的字符串。</param>
      <param name="Include" vsli:raw="Optional. &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether to return substrings that include or exclude &lt;paramref name=&quot;Match&quot; /&gt;. If &lt;paramref name=&quot;Include&quot; /&gt; is &lt;see langword=&quot;True&quot; /&gt;, the &lt;see langword=&quot;Filter&quot; /&gt; function returns the subset of the array that contains &lt;paramref name=&quot;Match&quot; /&gt; as a substring. If &lt;paramref name=&quot;Include&quot; /&gt; is &lt;see langword=&quot;False&quot; /&gt;, the &lt;see langword=&quot;Filter&quot; /&gt; function returns the subset of the array that does not contain &lt;paramref name=&quot;Match&quot; /&gt; as a substring.">可选。 <see langword="Boolean" /> 值，指示是返回包含还是排除 <paramref name="Match" /> 的子字符串。 如果 <paramref name="Include" /> 为 <see langword="True" />，则 <see langword="Filter" /> 函数返回将 <paramref name="Match" /> 作为子字符串包含在其中的数组的子集。 如果 <paramref name="Include" /> 为 <see langword="False" />，则 <see langword="Filter" /> 函数返回不将 <paramref name="Match" /> 作为子字符串包含在其中的数组的子集。</param>
      <param name="Compare" vsli:raw="Optional. Numeric value indicating the kind of string comparison to use. See &quot;Settings&quot; for values.">可选。 表示要使用的字符串比较类型的数值。 请参阅“设置”，以获取值。</param>
      <returns vsli:raw="A zero-based array containing a subset of a &lt;see langword=&quot;String&quot; /&gt; array based on specified filter criteria.">一个从零开始的数组，该数组包含基于指定筛选条件的 <see langword="String" /> 数组的子集。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Source&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or is not a one-dimensional array.">
        <paramref name="Source" /> 为 <see langword="Nothing" /> 或不是一维数组。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Returns a zero-based array containing a subset of a &lt;see langword=&quot;String&quot; /&gt; array based on specified filter criteria.">返回一个从零开始的数组，该数组包含基于指定筛选条件的 <see langword="String" /> 数组的子集。</summary>
      <param name="Source" vsli:raw="Required. One-dimensional array of strings to be searched.">必需。 要搜索的一维字符串数组。</param>
      <param name="Match" vsli:raw="Required. String to search for.">必需。 要搜索的字符串。</param>
      <param name="Include" vsli:raw="Optional. &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether to return substrings that include or exclude &lt;paramref name=&quot;Match&quot; /&gt;. If &lt;paramref name=&quot;Include&quot; /&gt; is &lt;see langword=&quot;True&quot; /&gt;, the &lt;see langword=&quot;Filter&quot; /&gt; function returns the subset of the array that contains &lt;paramref name=&quot;Match&quot; /&gt; as a substring. If &lt;paramref name=&quot;Include&quot; /&gt; is &lt;see langword=&quot;False&quot; /&gt;, the &lt;see langword=&quot;Filter&quot; /&gt; function returns the subset of the array that does not contain &lt;paramref name=&quot;Match&quot; /&gt; as a substring.">可选。 <see langword="Boolean" /> 值，指示是返回包含还是排除 <paramref name="Match" /> 的子字符串。 如果 <paramref name="Include" /> 为 <see langword="True" />，则 <see langword="Filter" /> 函数返回将 <paramref name="Match" /> 作为子字符串包含在其中的数组的子集。 如果 <paramref name="Include" /> 为 <see langword="False" />，则 <see langword="Filter" /> 函数返回不将 <paramref name="Match" /> 作为子字符串包含在其中的数组的子集。</param>
      <param name="Compare" vsli:raw="Optional. Numeric value indicating the kind of string comparison to use. See &quot;Settings&quot; for values.">可选。 表示要使用的字符串比较类型的数值。 请参阅“设置”，以获取值。</param>
      <returns vsli:raw="A zero-based array containing a subset of a &lt;see langword=&quot;String&quot; /&gt; array based on specified filter criteria.">一个从零开始的数组，该数组包含基于指定筛选条件的 <see langword="String" /> 数组的子集。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Source&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or is not a one-dimensional array.">
        <paramref name="Source" /> 为 <see langword="Nothing" /> 或不是一维数组。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
      <summary vsli:raw="Returns a string formatted according to instructions contained in a format &lt;see langword=&quot;String&quot; /&gt; expression.">返回根据格式 <see langword="String" /> 表达式中包含的指令设置格式的字符串。</summary>
      <param name="Expression" vsli:raw="Required. Any valid expression.">必需。 任何有效表达式。</param>
      <param name="Style" vsli:raw="Optional. A valid named or user-defined format &lt;see langword=&quot;String&quot; /&gt; expression.">可选。 一个有效的命名或用户定义的格式 <see langword="String" /> 表达式。</param>
      <returns vsli:raw="A string formatted according to instructions contained in a format &lt;see langword=&quot;String&quot; /&gt; expression.">根据格式 <see langword="String" /> 表达式中包含的指令设置格式的字符串。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
      <summary vsli:raw="Returns an expression formatted as a currency value using the currency symbol defined in the system control panel.">返回一个格式为货币值的表达式，该货币值使用系统控制面板中定义的货币符号。</summary>
      <param name="Expression" vsli:raw="Required. Expression to be formatted.">必需。 要格式化的表达式。</param>
      <param name="NumDigitsAfterDecimal" vsli:raw="Optional. Numeric value indicating how many places are displayed to the right of the decimal. Default value is -1, which indicates that the computer's regional settings are used.">可选。 数值，指示在小数点右侧显示的位数。 默认值为 -1，指示使用了计算机的区域设置。</param>
      <param name="IncludeLeadingDigit" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; enumeration that indicates whether or not a leading zero is displayed for fractional values. See &quot;Remarks&quot; for values.">可选。 <see cref="T:Microsoft.VisualBasic.TriState" /> 枚举，指示对于小数值是否显示前导零。 请参见值的“备注”。</param>
      <param name="UseParensForNegativeNumbers" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; enumeration that indicates whether or not to place negative values within parentheses. See &quot;Remarks&quot; for values.">可选。 <see cref="T:Microsoft.VisualBasic.TriState" /> 枚举，指示是否用括号将负值括起来。 请参见值的“备注”。</param>
      <param name="GroupDigits" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; enumeration that indicates whether or not numbers are grouped using the group delimiter specified in the computer's regional settings. See &quot;Remarks&quot; for values.">可选。 <see cref="T:Microsoft.VisualBasic.TriState" /> 枚举，指示是否用计算机区域设置中指定的组分隔符对数字进行分组。 请参见值的“备注”。</param>
      <returns vsli:raw="An expression formatted as a currency value using the currency symbol defined in the system control panel.">一个格式为货币值的表达式，该货币值使用系统控制面板中定义的货币符号。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Number of digits after decimal point is greater than 99.">小数点后的数字位数大于 99。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="Type is not numeric.">不是数字类型。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
      <summary vsli:raw="Returns a string expression representing a date/time value.">返回一个表示日期/时间值的字符串表达式。</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Date&quot; /&gt; expression to be formatted.">必需。 要格式化的 <see langword="Date" /> 表达式。</param>
      <param name="NamedFormat" vsli:raw="Optional. Numeric value that indicates the date/time format used. If omitted, &lt;see langword=&quot;DateFormat.GeneralDate&quot; /&gt; is used.">可选。 指示所使用的日期/时间格式的数值。 如果省略，则使用 <see langword="DateFormat.GeneralDate" />。</param>
      <returns vsli:raw="A string expression representing a date/time value.">一个表示日期/时间值的字符串表达式。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;NamedFormat&quot; /&gt; setting is not valid.">
        <paramref name="NamedFormat" /> 设置无效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
      <summary vsli:raw="Returns an expression formatted as a number.">返回格式化为数字的表达式。</summary>
      <param name="Expression" vsli:raw="Required. Expression to be formatted.">必需。 要格式化的表达式。</param>
      <param name="NumDigitsAfterDecimal" vsli:raw="Optional. Numeric value indicating how many places are displayed to the right of the decimal. The default value is -1, which indicates that the computer's regional settings are used.">可选。 数值，指示在小数点右侧显示的位数。 默认值为 -1，指示使用了计算机的区域设置。</param>
      <param name="IncludeLeadingDigit" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; constant that indicates whether a leading 0 is displayed for fractional values. See &quot;Settings&quot; for values.">可选。 <see cref="T:Microsoft.VisualBasic.TriState" /> 常量，指示对于小数值是否显示前导零。 请参阅“设置”，以获取值。</param>
      <param name="UseParensForNegativeNumbers" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; constant that indicates whether to place negative values within parentheses. See &quot;Settings&quot; for values.">可选。 <see cref="T:Microsoft.VisualBasic.TriState" /> 常量，指示是否用括号将负值括起来。 请参阅“设置”，以获取值。</param>
      <param name="GroupDigits" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; constant that indicates whether or not numbers are grouped using the group delimiter specified in the locale settings. See &quot;Settings&quot; for values.">可选。 <see cref="T:Microsoft.VisualBasic.TriState" /> 常量，指示是否使用区域设置中指定的组分隔符对数字进行分组。 请参阅“设置”，以获取值。</param>
      <returns vsli:raw="An expression formatted as a number.">格式化为数字的表达式。</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="Type is not numeric.">不是数字类型。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
      <summary vsli:raw="Returns an expression formatted as a percentage (that is, multiplied by 100) with a trailing % character.">返回以 % 字符结尾的百分比格式的表达式（即乘以 100）。</summary>
      <param name="Expression" vsli:raw="Required. Expression to be formatted.">必需。 要格式化的表达式。</param>
      <param name="NumDigitsAfterDecimal" vsli:raw="Optional. Numeric value indicating how many places to the right of the decimal are displayed. Default value is -1, which indicates that the locale settings are used.">可选。 数字值，该值指示要显示小数点右侧的多少位。 默认值为 -1，指示使用了区域设置。</param>
      <param name="IncludeLeadingDigit" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; constant that indicates whether or not a leading zero displays for fractional values. See &quot;Settings&quot; for values.">可选。 <see cref="T:Microsoft.VisualBasic.TriState" /> 常量，指示是否显示小数值前的零。 请参阅“设置”，以获取值。</param>
      <param name="UseParensForNegativeNumbers" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; constant that indicates whether or not to place negative values within parentheses. See &quot;Settings&quot; for values.">可选。 <see cref="T:Microsoft.VisualBasic.TriState" /> 常量，指示是否在括号内放入负值。 请参阅“设置”，以获取值。</param>
      <param name="GroupDigits" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; constant that indicates whether or not numbers are grouped using the group delimiter specified in the locale settings. See &quot;Settings&quot; for values.">可选。 <see cref="T:Microsoft.VisualBasic.TriState" /> 常量，指示是否使用区域设置中指定的组分隔符对数字进行分组。 请参阅“设置”，以获取值。</param>
      <returns vsli:raw="An expression formatted as a percentage (that is, multiplied by 100) with a trailing % character.">以 % 字符结尾的百分比格式（即乘以 100）的表达式。</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="Type is not numeric.">不是数字类型。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.GetChar(System.String,System.Int32)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Char&quot; /&gt; value representing the character from the specified index in the supplied string.">返回 <see langword="Char" /> 值，该值表示提供的字符串中位于指定的索引位置处的字符。</summary>
      <param name="str" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression.">必需。 任何有效的 <see langword="String" /> 表达式。</param>
      <param name="Index" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. The (1-based) index of the character in &lt;paramref name=&quot;str&quot; /&gt; to be returned.">必需。 <see langword="Integer" /> 表达式。 要返回的 <paramref name="str" /> 中的字符索引（从 1 开始）。</param>
      <returns vsli:raw="&lt;see langword=&quot;Char&quot; /&gt; value representing the character from the specified index in the supplied string.">
        <see langword="Char" /> 值，该值表示提供的字符串中指定索引处的字符。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;str&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;, &lt;paramref name=&quot;Index&quot; /&gt; &amp;lt; 1, or &lt;paramref name=&quot;Index&quot; /&gt; is greater than index of last character of &lt;paramref name=&quot;str&quot; /&gt;.">
        <paramref name="str" /> 为 <see langword="Nothing" />，<paramref name="Index" /> &lt; 1，或 <paramref name="Index" /> 大于 <paramref name="str" /> 最后一个字符的索引。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Returns an integer specifying the start position of the first occurrence of one string within another.">返回一个整数，该整数指定一个字符串在另一个字符串中的第一个匹配项的起始位置。</summary>
      <param name="Start" vsli:raw="Optional. Numeric expression that sets the starting position for each search. If omitted, search begins at the first character position. The start index is 1-based.">可选。 数值表达式，设置每个搜索的起始位置。 如果省略该参数，则从第一个字符位置开始搜索。 起始索引从一开始。</param>
      <param name="String1" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression being searched.">必需。 正在搜索的 <see langword="String" /> 表达式。</param>
      <param name="String2" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression sought.">必需。 查找到的 <see langword="String" /> 表达式。</param>
      <param name="Compare" vsli:raw="Optional. Specifies the type of string comparison. If &lt;paramref name=&quot;Compare&quot; /&gt; is omitted, the &lt;see langword=&quot;Option Compare&quot; /&gt; setting determines the type of comparison.">可选。 指定字符串比较的类型。 如果省略 <paramref name="Compare" />，则由 <see langword="Option Compare" /> 设置确定比较类型。</param>
      <returns vsli:raw="&lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt;If&lt;/term&gt;&lt;description&gt;InStr returns&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String1&quot; /&gt; is zero length or &lt;see langword=&quot;Nothing&quot; /&gt;&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String2&quot; /&gt; is zero length or &lt;see langword=&quot;Nothing&quot; /&gt;&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;start&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String2&quot; /&gt; is not found&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String2&quot; /&gt; is found within &lt;paramref name=&quot;String1&quot; /&gt;&lt;/term&gt;&lt;description&gt; Position where match begins&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;Start&quot; /&gt; &amp;gt; length of &lt;paramref name=&quot;String1&quot; /&gt;&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">如果 
  InStr 返回 
 
                <paramref name="String1" /> 的长度为零或 <see langword="Nothing" /> 0 
 
                <paramref name="String2" /> 的长度为零或 <see langword="Nothing" /><paramref name="start" />
              未找到 
                <paramref name="String2" />。 
  0 
 在 
                <paramref name="String2" /> 中找到 <paramref name="String1" /> 匹配开始的位置 
 
                <paramref name="Start" /> 长度大于 <paramref name="String1" /> 0</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Start&quot; /&gt; &amp;lt; 1.">
        <paramref name="Start" /> &lt; 1。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Returns an integer specifying the start position of the first occurrence of one string within another.">返回一个整数，该整数指定一个字符串在另一个字符串中的第一个匹配项的起始位置。</summary>
      <param name="String1" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression being searched.">必需。 正在搜索的 <see langword="String" /> 表达式。</param>
      <param name="String2" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression sought.">必需。 查找到的 <see langword="String" /> 表达式。</param>
      <param name="Compare" vsli:raw="Optional. Specifies the type of string comparison. If &lt;paramref name=&quot;Compare&quot; /&gt; is omitted, the &lt;see langword=&quot;Option Compare&quot; /&gt; setting determines the type of comparison.">可选。 指定字符串比较的类型。 如果省略 <paramref name="Compare" />，则由 <see langword="Option Compare" /> 设置确定比较类型。</param>
      <returns vsli:raw="&lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt;If&lt;/term&gt;&lt;description&gt;InStr returns&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String1&quot; /&gt; is zero length or &lt;see langword=&quot;Nothing&quot; /&gt;&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String2&quot; /&gt; is zero length or &lt;see langword=&quot;Nothing&quot; /&gt;&lt;/term&gt;&lt;description&gt;The starting position for the search, which defaults to the first character position.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String2&quot; /&gt; is not found&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String2&quot; /&gt; is found within &lt;paramref name=&quot;String1&quot; /&gt;&lt;/term&gt;&lt;description&gt;Position where match begins.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">如果 
  InStr 返回 
 
                <paramref name="String1" /> 的长度为零或 <see langword="Nothing" /> 0 
 
                <paramref name="String2" /> 的长度为零或 <see langword="Nothing" /> 搜索的开始位置，该位置默认为第一个字符位置。  

 未找到 
                <paramref name="String2" />。 
  0 
 在 
                <paramref name="String2" /> 中找到 <paramref name="String1" /> 匹配开始的位置</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Returns the position of the first occurrence of one string within another, starting from the right side of the string.">返回某一字符串从另一字符串的右侧开始算起第一次出现的位置。</summary>
      <param name="StringCheck" vsli:raw="Required. String expression being searched.">必需。 搜索的 String 表达式。</param>
      <param name="StringMatch" vsli:raw="Required. String expression being searched for.">必需。 搜索的字符串表达式。</param>
      <param name="Start" vsli:raw="Optional. Numeric expression setting the one-based starting position for each search, starting from the left side of the string. If &lt;paramref name=&quot;Start&quot; /&gt; is omitted then -1 is used, meaning the search begins at the last character position. Search then proceeds from right to left.">可选。 数值表达式，设置从字符串左侧开始进行的每个搜索的起始位置（从一开始计数）。 如果省略 <paramref name="Start" />，则使用 -1，它表示搜索从最后一个字符位置开始。 然后搜索从右到左继续进行。</param>
      <param name="Compare" vsli:raw="Optional. Numeric value indicating the kind of comparison to use when evaluating substrings. If omitted, a binary comparison is performed. See Settings for values.">可选。 数值，指示对子字符串求值时使用的比较类型。 如果省略，就会执行二进制比较。 具体的值请参见"设置"。</param>
      <returns vsli:raw="&lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt;If&lt;/term&gt;&lt;description&gt;InStrRev returns&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;StringCheck&quot; /&gt; is zero-length&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;StringMatch&quot; /&gt; is zero-length&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;Start&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;StringMatch&quot; /&gt; is not found&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;StringMatch&quot; /&gt; is found within &lt;paramref name=&quot;StringCheck&quot; /&gt;&lt;/term&gt;&lt;description&gt;Position at which the first match is found, starting with the right side of the string.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;Start&quot; /&gt; is greater than length of &lt;paramref name=&quot;StringMatch&quot; /&gt;&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">如果 
  InStrRev 返回 
 
                <paramref name="StringCheck" /> 的长度为零 
  0 
 
                <paramref name="StringMatch" /> 的长度为零 
 
                <paramref name="Start" />
              未找到 
                <paramref name="StringMatch" />。 
  0 
 在 
                <paramref name="StringMatch" /> 中找到 <paramref name="StringCheck" /> 从字符串的右侧开始找到的第一个匹配项的位置。  

 
                <paramref name="Start" /> 大于 <paramref name="StringMatch" /> 的长度 0</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Start&quot; /&gt; = 0 or &lt;paramref name=&quot;Start&quot; /&gt; &amp;lt; -1.">
        <paramref name="Start" /> = 0 或 <paramref name="Start" /> &lt; -1。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Join(System.Object[],System.String)">
      <summary vsli:raw="Returns a string created by joining a number of substrings contained in an array.">返回通过连接一个数组中包含的若干子字符串创建的字符串。</summary>
      <param name="SourceArray" vsli:raw="Required. One-dimensional array containing substrings to be joined.">必需。 一维数组，包含要连接的子字符串。</param>
      <param name="Delimiter" vsli:raw="Optional. Any string, used to separate the substrings in the returned string. If omitted, the space character (&quot; &quot;) is used. If &lt;paramref name=&quot;Delimiter&quot; /&gt; is a zero-length string (&quot;&quot;) or &lt;see langword=&quot;Nothing&quot; /&gt;, all items in the list are concatenated with no delimiters.">可选。 任何字符串，用于在返回的字符串中分隔子字符串。 如果省略该参数，则使用空白字符 (" ")。 如果 <paramref name="Delimiter" /> 是零长度字符串 ("") 或 <see langword="Nothing" />，则列表中的所有项目都串联在一起，中间没有分隔符。</param>
      <returns vsli:raw="A string created by joining a number of substrings contained in an array.">通过连接一个数组中包含的若干子字符串创建的字符串。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;SourceArray&quot; /&gt; is not one dimensional.">
        <paramref name="SourceArray" /> 不是一维数组。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Join(System.String[],System.String)">
      <summary vsli:raw="Returns a string created by joining a number of substrings contained in an array.">返回通过连接一个数组中包含的若干子字符串创建的字符串。</summary>
      <param name="SourceArray" vsli:raw="Required. One-dimensional array containing substrings to be joined.">必需。 一维数组，包含要连接的子字符串。</param>
      <param name="Delimiter" vsli:raw="Optional. Any string, used to separate the substrings in the returned string. If omitted, the space character (&quot; &quot;) is used. If &lt;paramref name=&quot;Delimiter&quot; /&gt; is a zero-length string (&quot;&quot;) or &lt;see langword=&quot;Nothing&quot; /&gt;, all items in the list are concatenated with no delimiters.">可选。 任何字符串，用于在返回的字符串中分隔子字符串。 如果省略该参数，则使用空白字符 (" ")。 如果 <paramref name="Delimiter" /> 是零长度字符串 ("") 或 <see langword="Nothing" />，则列表中的所有项目都串联在一起，中间没有分隔符。</param>
      <returns vsli:raw="A string created by joining a number of substrings contained in an array.">通过连接一个数组中包含的若干子字符串创建的字符串。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;SourceArray&quot; /&gt; is not one dimensional.">
        <paramref name="SourceArray" /> 不是一维数组。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LCase(System.Char)">
      <summary vsli:raw="Returns a string or character converted to lowercase.">返回将转换为小写的字符串或字符。</summary>
      <param name="Value" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; or &lt;see langword=&quot;Char&quot; /&gt; expression.">必需。 任何有效的 <see langword="String" /> 或 <see langword="Char" /> 表达式。</param>
      <returns vsli:raw="A string or character converted to lowercase.">将转换为小写的字符串或字符。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LCase(System.String)">
      <summary vsli:raw="Returns a string or character converted to lowercase.">返回将转换为小写的字符串或字符。</summary>
      <param name="Value" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; or &lt;see langword=&quot;Char&quot; /&gt; expression.">必需。 任何有效的 <see langword="String" /> 或 <see langword="Char" /> 表达式。</param>
      <returns vsli:raw="A string or character converted to lowercase.">将转换为小写的字符串或字符。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)">
      <summary vsli:raw="Returns a string containing a specified number of characters from the left side of a string.">返回一个字符串，该字符串包含从某字符串左侧算起的指定数量的字符。</summary>
      <param name="str" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression from which the leftmost characters are returned.">必需。 一个 <see langword="String" /> 表达式，从中返回最左侧的那些字符。</param>
      <param name="Length" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. Numeric expression indicating how many characters to return. If 0, a zero-length string (&quot;&quot;) is returned. If greater than or equal to the number of characters in &lt;paramref name=&quot;str&quot; /&gt;, the entire string is returned.">必需。 <see langword="Integer" /> 表达式。 指示要返回的字符数的数值表达式。 如果为 0，则返回零长度字符串 ("")。 如果大于或等于 <paramref name="str" /> 的字符数，则返回整个字符串。</param>
      <returns vsli:raw="A string containing a specified number of characters from the left side of a string.">一个字符串，该字符串包含从某字符串左侧算起的指定数量的字符。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Length&quot; /&gt; &amp;lt; 0.">
        <paramref name="Length" /> &lt; 0。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">返回一个包含字符串中的字符数或存储某个变量所需的名义字节数的整数。</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">任何有效的 <see langword="String" /> 表达式或变量名。 如果 <paramref name="Expression" /> 为 <see langword="Object" /> 类型，<see langword="Len" /> 函数将返回其在由 <see langword="FilePut" /> 函数写入文件中时的大小。</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">一个包含字符串中的字符数或存储某个变量所需的名义字节数的整数。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Byte)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">返回一个包含字符串中的字符数或存储某个变量所需的名义字节数的整数。</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">任何有效的 <see langword="String" /> 表达式或变量名。 如果 <paramref name="Expression" /> 为 <see langword="Object" /> 类型，<see langword="Len" /> 函数将返回其在由 <see langword="FilePut" /> 函数写入文件中时的大小。</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">一个包含字符串中的字符数或存储某个变量所需的名义字节数的整数。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Char)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">返回一个包含字符串中的字符数或存储某个变量所需的名义字节数的整数。</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">任何有效的 <see langword="String" /> 表达式或变量名。 如果 <paramref name="Expression" /> 为 <see langword="Object" /> 类型，<see langword="Len" /> 函数将返回其在由 <see langword="FilePut" /> 函数写入文件中时的大小。</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">一个包含字符串中的字符数或存储某个变量所需的名义字节数的整数。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">返回一个包含字符串中的字符数或存储某个变量所需的名义字节数的整数。</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">任何有效的 <see langword="String" /> 表达式或变量名。 如果 <paramref name="Expression" /> 为 <see langword="Object" /> 类型，<see langword="Len" /> 函数将返回其在由 <see langword="FilePut" /> 函数写入文件中时的大小。</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">一个包含字符串中的字符数或存储某个变量所需的名义字节数的整数。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">返回一个包含字符串中的字符数或存储某个变量所需的名义字节数的整数。</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">任何有效的 <see langword="String" /> 表达式或变量名。 如果 <paramref name="Expression" /> 为 <see langword="Object" /> 类型，<see langword="Len" /> 函数将返回其在由 <see langword="FilePut" /> 函数写入文件中时的大小。</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">一个包含字符串中的字符数或存储某个变量所需的名义字节数的整数。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Double)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">返回一个包含字符串中的字符数或存储某个变量所需的名义字节数的整数。</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">任何有效的 <see langword="String" /> 表达式或变量名。 如果 <paramref name="Expression" /> 为 <see langword="Object" /> 类型，<see langword="Len" /> 函数将返回其在由 <see langword="FilePut" /> 函数写入文件中时的大小。</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">一个包含字符串中的字符数或存储某个变量所需的名义字节数的整数。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Int16)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">返回一个包含字符串中的字符数或存储某个变量所需的名义字节数的整数。</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">任何有效的 <see langword="String" /> 表达式或变量名。 如果 <paramref name="Expression" /> 为 <see langword="Object" /> 类型，<see langword="Len" /> 函数将返回其在由 <see langword="FilePut" /> 函数写入文件中时的大小。</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">一个包含字符串中的字符数或存储某个变量所需的名义字节数的整数。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Int32)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">返回一个包含字符串中的字符数或存储某个变量所需的名义字节数的整数。</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">任何有效的 <see langword="String" /> 表达式或变量名。 如果 <paramref name="Expression" /> 为 <see langword="Object" /> 类型，<see langword="Len" /> 函数将返回其在由 <see langword="FilePut" /> 函数写入文件中时的大小。</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">一个包含字符串中的字符数或存储某个变量所需的名义字节数的整数。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Int64)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">返回一个包含字符串中的字符数或存储某个变量所需的名义字节数的整数。</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">任何有效的 <see langword="String" /> 表达式或变量名。 如果 <paramref name="Expression" /> 为 <see langword="Object" /> 类型，<see langword="Len" /> 函数将返回其在由 <see langword="FilePut" /> 函数写入文件中时的大小。</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">一个包含字符串中的字符数或存储某个变量所需的名义字节数的整数。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Object)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">返回一个包含字符串中的字符数或存储某个变量所需的名义字节数的整数。</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">任何有效的 <see langword="String" /> 表达式或变量名。 如果 <paramref name="Expression" /> 为 <see langword="Object" /> 类型，<see langword="Len" /> 函数将返回其在由 <see langword="FilePut" /> 函数写入文件中时的大小。</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">一个包含字符串中的字符数或存储某个变量所需的名义字节数的整数。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.SByte)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">返回一个包含字符串中的字符数或存储某个变量所需的名义字节数的整数。</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">任何有效的 <see langword="String" /> 表达式或变量名。 如果 <paramref name="Expression" /> 为 <see langword="Object" /> 类型，<see langword="Len" /> 函数将返回其在由 <see langword="FilePut" /> 函数写入文件中时的大小。</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">一个包含字符串中的字符数或存储某个变量所需的名义字节数的整数。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Single)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">返回一个包含字符串中的字符数或存储某个变量所需的名义字节数的整数。</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">任何有效的 <see langword="String" /> 表达式或变量名。 如果 <paramref name="Expression" /> 为 <see langword="Object" /> 类型，<see langword="Len" /> 函数将返回其在由 <see langword="FilePut" /> 函数写入文件中时的大小。</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">一个包含字符串中的字符数或存储某个变量所需的名义字节数的整数。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.String)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">返回一个包含字符串中的字符数或存储某个变量所需的名义字节数的整数。</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">任何有效的 <see langword="String" /> 表达式或变量名。 如果 <paramref name="Expression" /> 为 <see langword="Object" /> 类型，<see langword="Len" /> 函数将返回其在由 <see langword="FilePut" /> 函数写入文件中时的大小。</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">一个包含字符串中的字符数或存储某个变量所需的名义字节数的整数。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">返回一个包含字符串中的字符数或存储某个变量所需的名义字节数的整数。</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">任何有效的 <see langword="String" /> 表达式或变量名。 如果 <paramref name="Expression" /> 为 <see langword="Object" /> 类型，<see langword="Len" /> 函数将返回其在由 <see langword="FilePut" /> 函数写入文件中时的大小。</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">一个包含字符串中的字符数或存储某个变量所需的名义字节数的整数。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">返回一个包含字符串中的字符数或存储某个变量所需的名义字节数的整数。</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">任何有效的 <see langword="String" /> 表达式或变量名。 如果 <paramref name="Expression" /> 为 <see langword="Object" /> 类型，<see langword="Len" /> 函数将返回其在由 <see langword="FilePut" /> 函数写入文件中时的大小。</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">一个包含字符串中的字符数或存储某个变量所需的名义字节数的整数。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">返回一个包含字符串中的字符数或存储某个变量所需的名义字节数的整数。</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">任何有效的 <see langword="String" /> 表达式或变量名。 如果 <paramref name="Expression" /> 为 <see langword="Object" /> 类型，<see langword="Len" /> 函数将返回其在由 <see langword="FilePut" /> 函数写入文件中时的大小。</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">一个包含字符串中的字符数或存储某个变量所需的名义字节数的整数。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LSet(System.String,System.Int32)">
      <summary vsli:raw="Returns a left-aligned string containing the specified string adjusted to the specified length.">返回一个左对齐字符串，该字符串包含调整为指定长度的指定的字符串。</summary>
      <param name="Source" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression. Name of string variable.">必需。 <see langword="String" /> 表达式。 字符串变量的名称。</param>
      <param name="Length" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. Length of returned string.">必需。 <see langword="Integer" /> 表达式。 返回的字符串的长度。</param>
      <returns vsli:raw="A left-aligned string containing the specified string adjusted to the specified length.">一个左对齐字符串，该字符串包含调整为指定长度的指定的字符串。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LTrim(System.String)">
      <summary vsli:raw="Returns a string containing a copy of a specified string with no leading spaces (&lt;see langword=&quot;LTrim&quot; /&gt;), no trailing spaces (&lt;see langword=&quot;RTrim&quot; /&gt;), or no leading or trailing spaces (&lt;see langword=&quot;Trim&quot; /&gt;).">返回一个字符串，它包含一个没有前导空格 (<see langword="LTrim" />)、没有尾随空格 (<see langword="RTrim" />) 或既没有前导空格也没有尾随空格 (<see langword="Trim" />) 的指定字符串的副本。</summary>
      <param name="str" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression.">必需。 任何有效的 <see langword="String" /> 表达式。</param>
      <returns vsli:raw="A string containing a copy of a specified string with no leading spaces (&lt;see langword=&quot;LTrim&quot; /&gt;), no trailing spaces (&lt;see langword=&quot;RTrim&quot; /&gt;), or no leading or trailing spaces (&lt;see langword=&quot;Trim&quot; /&gt;).">一个字符串，它包含一个没有前导空格 (<see langword="LTrim" />)、没有尾随空格 (<see langword="RTrim" />) 或既没有前导空格也没有尾随空格 (<see langword="Trim" />) 的指定字符串的副本。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)">
      <summary vsli:raw="Returns a string that contains all the characters starting from a specified position in a string.">返回字符串，该字符串包含从字符串中的指定位置开始的所有字符。</summary>
      <param name="str" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression from which characters are returned.">必需。 <see langword="String" /> 表达式，从该表达式返回字符。</param>
      <param name="Start" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. Starting position of the characters to return. If &lt;paramref name=&quot;Start&quot; /&gt; is greater than the number of characters in &lt;paramref name=&quot;str&quot; /&gt;, the &lt;see langword=&quot;Mid&quot; /&gt; function returns a zero-length string (&quot;&quot;). &lt;paramref name=&quot;Start&quot; /&gt; is one-based.">必需。 <see langword="Integer" /> 表达式。 要返回字符的开始位置。 如果 <paramref name="Start" /> 大于 <paramref name="str" /> 中的字符个数，则 <see langword="Mid" /> 函数返回零长度字符串 ("")。 <paramref name="Start" /> 从一开始。</param>
      <returns vsli:raw="A string that consists of all the characters starting from the specified position in the string.">由从字符串中指定位置开始的所有字符组成的字符串。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Start&quot; /&gt; &amp;lt;= 0 or &lt;paramref name=&quot;Length&quot; /&gt; &amp;lt; 0.">
        <paramref name="Start" /> &lt;= 0 或 <paramref name="Length" /> &lt; 0。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
      <summary vsli:raw="Returns a string that contains a specified number of characters starting from a specified position in a string.">返回字符串，该字符串包含从字符串中的指定位置开始的指定数量的字符。</summary>
      <param name="str" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression from which characters are returned.">必需。 <see langword="String" /> 表达式，从该表达式返回字符。</param>
      <param name="Start" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. Starting position of the characters to return. If &lt;paramref name=&quot;Start&quot; /&gt; is greater than the number of characters in &lt;paramref name=&quot;str&quot; /&gt;, the &lt;see langword=&quot;Mid&quot; /&gt; function returns a zero-length string (&quot;&quot;). &lt;paramref name=&quot;Start&quot; /&gt; is one based.">必需。 <see langword="Integer" /> 表达式。 要返回字符的开始位置。 如果 <paramref name="Start" /> 大于 <paramref name="str" /> 中的字符个数，则 <see langword="Mid" /> 函数返回零长度字符串 ("")。 <paramref name="Start" /> 从 1 开始。</param>
      <param name="Length" vsli:raw="Optional. &lt;see langword=&quot;Integer&quot; /&gt; expression. Number of characters to return. If omitted or if there are fewer than &lt;paramref name=&quot;Length&quot; /&gt; characters in the text (including the character at position &lt;paramref name=&quot;Start&quot; /&gt;), all characters from the start position to the end of the string are returned.">可选。 <see langword="Integer" /> 表达式。 要返回的字符数。 如果 <paramref name="Length" /> 省略或超过文本的字符（包括 <paramref name="Start" /> 处的字符）数，则返回从字符串开始位置到结尾的所有字符。</param>
      <returns vsli:raw="A string that consists of the specified number of characters starting from the specified position in the string.">由从字符串中指定位置开始的指定数量的字符组成的字符串。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Start&quot; /&gt; &amp;lt;= 0 or &lt;paramref name=&quot;Length&quot; /&gt; &amp;lt; 0.">
        <paramref name="Start" /> &lt;= 0 或 <paramref name="Length" /> &lt; 0。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Returns a string in which a specified substring has been replaced with another substring a specified number of times.">返回一个字符串，其中的指定子字符串已由另一个子字符串替换了指定的次数。</summary>
      <param name="Expression" vsli:raw="Required. String expression containing substring to replace.">必需。 字符串表达式，包含要替换的子字符串。</param>
      <param name="Find" vsli:raw="Required. Substring being searched for.">必需。 搜索的子字符串。</param>
      <param name="Replacement" vsli:raw="Required. Replacement substring.">必需。 替换用的子字符串。</param>
      <param name="Start" vsli:raw="Optional. Position within &lt;paramref name=&quot;Expression&quot; /&gt; that starts a substring used for replacement. The return value of &lt;see langword=&quot;Replace&quot; /&gt; is a string that begins at &lt;paramref name=&quot;Start&quot; /&gt;, with appropriate substitutions. If omitted, 1 is assumed.">可选。 <paramref name="Expression" /> 内部要替换的子字符串的开始的位置。 <see langword="Replace" /> 的返回值是字符串，在 <paramref name="Start" /> 开始，具有相应的子情况。 如果省略，则假定为 1。</param>
      <param name="Count" vsli:raw="Optional. Number of substring substitutions to perform. If omitted, the default value is -1, which means &quot;make all possible substitutions.&quot;">可选。 执行子字符串替换的数目。 如果省略，则默认值是 -1，表示“进行所有可能的替换”。</param>
      <param name="Compare" vsli:raw="Optional. Numeric value indicating the kind of comparison to use when evaluating substrings. See Settings for values.">可选。 数值，指示对子字符串求值时使用的比较类型。 具体的值请参见"设置"。</param>
      <returns vsli:raw="One of the following values.&#xA;          &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt;If&lt;/term&gt;&lt;description&gt;Replace returns&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;Find&quot; /&gt; is zero-length or &lt;see langword=&quot;Nothing&quot; /&gt;&lt;/term&gt;&lt;description&gt; Copy of &lt;paramref name=&quot;Expression&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;Replace&quot; /&gt; is zero-length&lt;/term&gt;&lt;description&gt; Copy of &lt;paramref name=&quot;Expression&quot; /&gt; with no occurrences of &lt;paramref name=&quot;Find&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;Expression&quot; /&gt; is zero-length or &lt;see langword=&quot;Nothing&quot; /&gt;, or &lt;paramref name=&quot;Start&quot; /&gt; is greater than length of &lt;paramref name=&quot;Expression&quot; /&gt;&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;Nothing&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;Count&quot; /&gt; is 0&lt;/term&gt;&lt;description&gt; Copy of &lt;paramref name=&quot;Expression&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">
        <see langword="Replace" /> 返回下列值。  
  如果 
  Replace 返回 
 <paramref name="Find" /> 的长度为零或 <see langword="Nothing" /><paramref name="Expression" /> 的副本<paramref name="Replace" /> 的长度为零 
  <paramref name="Expression" /> 的副本，不带 <paramref name="Find" /> 匹配项<paramref name="Expression" /> 的长度为零或 <see langword="Nothing" />，或者 <paramref name="Start" /> 大于 <paramref name="Expression" /> 的长度<see langword="Nothing" /><paramref name="Count" /> 是 0 
  <paramref name="Expression" /> 的副本</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Count&quot; /&gt; &amp;lt; -1 or &lt;paramref name=&quot;Start&quot; /&gt; &amp;lt;= 0.">
        <paramref name="Count" /> &lt; -1 或 <paramref name="Start" /> &lt;= 0。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)">
      <summary vsli:raw="Returns a string containing a specified number of characters from the right side of a string.">返回一个字符串，其中包含从某个字符串右端开始的指定数量的字符。</summary>
      <param name="str" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression from which the rightmost characters are returned.">必需。 一个 <see langword="String" /> 表达式，从中返回最右侧的那些字符。</param>
      <param name="Length" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt;. Numeric expression indicating how many characters to return. If 0, a zero-length string (&quot;&quot;) is returned. If greater than or equal to the number of characters in &lt;paramref name=&quot;str&quot; /&gt;, the entire string is returned.">必需。 <see langword="Integer" />。 指示要返回的字符数的数值表达式。 如果为 0，则返回零长度字符串 ("")。 如果大于或等于 <paramref name="str" /> 的字符数，则返回整个字符串。</param>
      <returns vsli:raw="A string containing a specified number of characters from the right side of a string.">一个字符串，其中包含从某个字符串右端开始的指定数量的字符。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Length&quot; /&gt; &amp;lt; 0.">
        <paramref name="Length" /> &lt; 0。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)">
      <summary vsli:raw="Returns a right-aligned string containing the specified string adjusted to the specified length.">返回包含调整为指定长度的指定字符串的右对齐字符串。</summary>
      <param name="Source" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression. Name of string variable.">必需。 <see langword="String" /> 表达式。 字符串变量的名称。</param>
      <param name="Length" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. Length of returned string.">必需。 <see langword="Integer" /> 表达式。 返回的字符串的长度。</param>
      <returns vsli:raw="A right-aligned string containing the specified string adjusted to the specified length.">包含调整为指定长度的指定字符串的右对齐字符串。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.RTrim(System.String)">
      <summary vsli:raw="Returns a string containing a copy of a specified string with no leading spaces (&lt;see langword=&quot;LTrim&quot; /&gt;), no trailing spaces (&lt;see langword=&quot;RTrim&quot; /&gt;), or no leading or trailing spaces (&lt;see langword=&quot;Trim&quot; /&gt;).">返回一个字符串，它包含一个没有前导空格 (<see langword="LTrim" />)、没有尾随空格 (<see langword="RTrim" />) 或既没有前导空格也没有尾随空格 (<see langword="Trim" />) 的指定字符串的副本。</summary>
      <param name="str" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression.">必需。 任何有效的 <see langword="String" /> 表达式。</param>
      <returns vsli:raw="A string containing a copy of a specified string with no leading spaces (&lt;see langword=&quot;LTrim&quot; /&gt;), no trailing spaces (&lt;see langword=&quot;RTrim&quot; /&gt;), or no leading or trailing spaces (&lt;see langword=&quot;Trim&quot; /&gt;).">一个字符串，它包含一个没有前导空格 (<see langword="LTrim" />)、没有尾随空格 (<see langword="RTrim" />) 或既没有前导空格也没有尾随空格 (<see langword="Trim" />) 的指定字符串的副本。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Space(System.Int32)">
      <summary vsli:raw="Returns a string consisting of the specified number of spaces.">返回由指定数量空格组成的字符串。</summary>
      <param name="Number" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. The number of spaces you want in the string.">必需。 <see langword="Integer" /> 表达式。 希望字符串包含的空格数。</param>
      <returns vsli:raw="A string consisting of the specified number of spaces.">由指定数量空格组成的字符串。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; &amp;lt; 0.">
        <paramref name="Number" /> &lt; 0。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Returns a zero-based, one-dimensional array containing a specified number of substrings.">返回一个从零开始的一维数组，其中包含指定数量的子字符串。</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression containing substrings and delimiters.">必需。 包含子字符串和分隔符的 <see langword="String" /> 表达式。</param>
      <param name="Delimiter" vsli:raw="Optional. Any single character used to identify substring limits. If &lt;paramref name=&quot;Delimiter&quot; /&gt; is omitted, the space character (&quot; &quot;) is assumed to be the delimiter.">可选。 用于标识子字符串的界限的任何单个字符。 如果省略了 <paramref name="Delimiter" />，则假定空白字符 (" ") 为分隔符。</param>
      <param name="Limit" vsli:raw="Optional. Maximum number of substrings into which the input string should be split. The default, -1, indicates that the input string should be split at every occurrence of the &lt;paramref name=&quot;Delimiter&quot; /&gt; string.">可选。 输入字符串应拆分到的子字符串的最大数量。 默认值为 -1，指示在 <paramref name="Delimiter" /> 字符串的每个匹配项处都拆分输入字符串。</param>
      <param name="Compare" vsli:raw="Optional. Numeric value indicating the comparison to use when evaluating substrings. See &quot;Settings&quot; for values.">可选。 数值，指示计算子字符串时使用的比较模式。 请参阅“设置”，以获取值。</param>
      <returns vsli:raw="&lt;see langword=&quot;String&quot; /&gt; array. If &lt;paramref name=&quot;Expression&quot; /&gt; is a zero-length string (&quot;&quot;), &lt;see langword=&quot;Split&quot; /&gt; returns a single-element array containing a zero-length string. If &lt;paramref name=&quot;Delimiter&quot; /&gt; is a zero-length string, or if it does not appear anywhere in &lt;paramref name=&quot;Expression&quot; /&gt;, &lt;see langword=&quot;Split&quot; /&gt; returns a single-element array containing the entire &lt;paramref name=&quot;Expression&quot; /&gt; string.">
        <see langword="String" /> 数组。 如果 <paramref name="Expression" /> 为零长度字符串 ("")，则 <see langword="Split" /> 返回包含零长度字符串的单个元素数组。 如果 <paramref name="Delimiter" /> 为零长度字符串，或如果它不在 <paramref name="Expression" /> 中的任何位置出现，则 <see langword="Split" /> 将返回包含整个 <paramref name="Expression" /> 字符串的单个元素数组。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Returns -1, 0, or 1, based on the result of a string comparison.">根据字符串的比较结果返回 -1、0 或 1。</summary>
      <param name="String1" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression.">必需。 任何有效的 <see langword="String" /> 表达式。</param>
      <param name="String2" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression.">必需。 任何有效的 <see langword="String" /> 表达式。</param>
      <param name="Compare" vsli:raw="Optional. Specifies the type of string comparison. If &lt;paramref name=&quot;Compare&quot; /&gt; is omitted, the &lt;see langword=&quot;Option Compare&quot; /&gt; setting determines the type of comparison.">可选。 指定字符串比较的类型。 如果省略 <paramref name="Compare" />，则由 <see langword="Option Compare" /> 设置确定比较类型。</param>
      <returns vsli:raw="One of the following values:&#xA;          &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt;If&lt;/term&gt;&lt;description&gt;StrComp returns&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String1&quot; /&gt; sorts ahead of &lt;paramref name=&quot;String2&quot; /&gt;&lt;/term&gt;&lt;description&gt;-1&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String1&quot; /&gt; is equal to &lt;paramref name=&quot;String2&quot; /&gt;&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String1&quot; /&gt; sorts after &lt;paramref name=&quot;String2&quot; /&gt;&lt;/term&gt;&lt;description&gt;1&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">
        <see langword="StrComp" /> 函数具有下列返回值：  
  如果 
  StrComp 返回 
 <paramref name="String1" /> 排在 <paramref name="String2" /> 的前面 -1 
 <paramref name="String1" /> 等于 <paramref name="String2" /> 0 
 <paramref name="String1" /> 排在 <paramref name="String2" /> 的后面 1</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Compare&quot; /&gt; value is not valid.">
        <paramref name="Compare" /> 值无效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
      <summary vsli:raw="Returns a string converted as specified.">返回按照指定方式转换的字符串。</summary>
      <param name="str" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression to be converted.">必需。 要转换的 <see langword="String" /> 表达式。</param>
      <param name="Conversion" vsli:raw="Required. &lt;see cref=&quot;T:Microsoft.VisualBasic.VbStrConv&quot; /&gt; member. The enumeration value specifying the type of conversion to perform.">必需。 <see cref="T:Microsoft.VisualBasic.VbStrConv" /> 成员。 指定要执行的转换类型的枚举值。</param>
      <param name="LocaleID" vsli:raw="Optional. The &lt;see langword=&quot;LocaleID&quot; /&gt; value, if different from the system &lt;see langword=&quot;LocaleID&quot; /&gt; value. (The system &lt;see langword=&quot;LocaleID&quot; /&gt; value is the default.)">可选。 <see langword="LocaleID" /> 值（如果与系统 <see langword="LocaleID" /> 值不同）。 （系统 <see langword="LocaleID" /> 值为默认值。）</param>
      <returns vsli:raw="A string converted as specified.">按照指定方式转换的字符串。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Unsupported &lt;paramref name=&quot;LocaleID&quot; /&gt;, &lt;paramref name=&quot;Conversion&quot; /&gt; &amp;lt; 0 or &amp;gt; 2048, or unsupported conversion for specified locale.">不支持 <paramref name="LocaleID" />、<paramref name="Conversion" /> &lt; 0 或 &gt; 2048，或不支持指定区域设置的转换。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Char)">
      <summary vsli:raw="Returns a string or object consisting of the specified character repeated the specified number of times.">返回由指定字符重复指定次数后形成的字符串或对象。</summary>
      <param name="Number" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. The length to the string to be returned.">必需。 <see langword="Integer" /> 表达式。 要返回的字符串的长度。</param>
      <param name="Character" vsli:raw="Required. Any valid &lt;see langword=&quot;Char&quot; /&gt;, &lt;see langword=&quot;String&quot; /&gt;, or &lt;see langword=&quot;Object&quot; /&gt; expression. Only the first character of the expression will be used. If Character is of type &lt;see langword=&quot;Object&quot; /&gt;, it must contain either a &lt;see langword=&quot;Char&quot; /&gt; or a &lt;see langword=&quot;String&quot; /&gt; value.">必需。 任何有效的 <see langword="Char" />、<see langword="String" /> 或 <see langword="Object" /> 表达式。 将只使用表达式的第一个字符。 如果字符类型是 <see langword="Object" />，则它必须包含一个 <see langword="Char" /> 或 <see langword="String" /> 值。</param>
      <returns vsli:raw="A string or object consisting of the specified character repeated the specified number of times.">由指定字符重复指定次数后形成的字符串或对象。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is less than 0 or &lt;paramref name=&quot;Character&quot; /&gt; type is not valid.">
        <paramref name="Number" /> 小于 0 或 <paramref name="Character" /> 类型无效。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Character&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="Character" /> 为 <see langword="Nothing" />。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Object)">
      <summary vsli:raw="Returns a string or object consisting of the specified character repeated the specified number of times.">返回由指定字符重复指定次数后形成的字符串或对象。</summary>
      <param name="Number" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. The length to the string to be returned.">必需。 <see langword="Integer" /> 表达式。 要返回的字符串的长度。</param>
      <param name="Character" vsli:raw="Required. Any valid &lt;see langword=&quot;Char&quot; /&gt;, &lt;see langword=&quot;String&quot; /&gt;, or &lt;see langword=&quot;Object&quot; /&gt; expression. Only the first character of the expression will be used. If Character is of type &lt;see langword=&quot;Object&quot; /&gt;, it must contain either a &lt;see langword=&quot;Char&quot; /&gt; or a &lt;see langword=&quot;String&quot; /&gt; value.">必需。 任何有效的 <see langword="Char" />、<see langword="String" /> 或 <see langword="Object" /> 表达式。 将只使用表达式的第一个字符。 如果字符类型是 <see langword="Object" />，则它必须包含一个 <see langword="Char" /> 或 <see langword="String" /> 值。</param>
      <returns vsli:raw="A string or object consisting of the specified character repeated the specified number of times.">由指定字符重复指定次数后形成的字符串或对象。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is less than 0 or &lt;paramref name=&quot;Character&quot; /&gt; type is not valid.">
        <paramref name="Number" /> 小于 0 或 <paramref name="Character" /> 类型无效。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Character&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="Character" /> 为 <see langword="Nothing" />。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.String)">
      <summary vsli:raw="Returns a string or object consisting of the specified character repeated the specified number of times.">返回由指定字符重复指定次数后形成的字符串或对象。</summary>
      <param name="Number" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. The length to the string to be returned.">必需。 <see langword="Integer" /> 表达式。 要返回的字符串的长度。</param>
      <param name="Character" vsli:raw="Required. Any valid &lt;see langword=&quot;Char&quot; /&gt;, &lt;see langword=&quot;String&quot; /&gt;, or &lt;see langword=&quot;Object&quot; /&gt; expression. Only the first character of the expression will be used. If Character is of type &lt;see langword=&quot;Object&quot; /&gt;, it must contain either a &lt;see langword=&quot;Char&quot; /&gt; or a &lt;see langword=&quot;String&quot; /&gt; value.">必需。 任何有效的 <see langword="Char" />、<see langword="String" /> 或 <see langword="Object" /> 表达式。 将只使用表达式的第一个字符。 如果字符类型是 <see langword="Object" />，则它必须包含一个 <see langword="Char" /> 或 <see langword="String" /> 值。</param>
      <returns vsli:raw="A string or object consisting of the specified character repeated the specified number of times.">由指定字符重复指定次数后形成的字符串或对象。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is less than 0 or &lt;paramref name=&quot;Character&quot; /&gt; type is not valid.">
        <paramref name="Number" /> 小于 0 或 <paramref name="Character" /> 类型无效。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Character&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="Character" /> 为 <see langword="Nothing" />。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrReverse(System.String)">
      <summary vsli:raw="Returns a string in which the order of the text elements in the specified string is reversed.">返回指定字符串的字符顺序是相反的字符串。</summary>
      <param name="Expression" vsli:raw="Required. String expression whose text elements are to be reversed. If &lt;paramref name=&quot;Expression&quot; /&gt; is a zero-length string (&quot;&quot;), a zero-length string is returned.">必需。 字符反转的字符串表达式。 如果 <paramref name="Expression" /> 是一个零长度字符串 ("")，则返回一个零长度字符串。</param>
      <returns vsli:raw="A string in which the order of the text elements in the specified string is reversed.">指定字符串的字符顺序是相反的字符串。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Trim(System.String)">
      <summary vsli:raw="Returns a string containing a copy of a specified string with no leading spaces (&lt;see langword=&quot;LTrim&quot; /&gt;), no trailing spaces (&lt;see langword=&quot;RTrim&quot; /&gt;), or no leading or trailing spaces (&lt;see langword=&quot;Trim&quot; /&gt;).">返回一个字符串，它包含一个没有前导空格 (<see langword="LTrim" />)、没有尾随空格 (<see langword="RTrim" />) 或既没有前导空格也没有尾随空格 (<see langword="Trim" />) 的指定字符串的副本。</summary>
      <param name="str" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression.">必需。 任何有效的 <see langword="String" /> 表达式。</param>
      <returns vsli:raw="A string containing a copy of a specified string with no leading spaces (&lt;see langword=&quot;LTrim&quot; /&gt;), no trailing spaces (&lt;see langword=&quot;RTrim&quot; /&gt;), or no leading or trailing spaces (&lt;see langword=&quot;Trim&quot; /&gt;).">一个字符串，它包含一个没有前导空格 (<see langword="LTrim" />)、没有尾随空格 (<see langword="RTrim" />) 或既没有前导空格也没有尾随空格 (<see langword="Trim" />) 的指定字符串的副本。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.UCase(System.Char)">
      <summary vsli:raw="Returns a string or character containing the specified string converted to uppercase.">返回一个字符串或字符，其中包含转换为大写的指定字符串。</summary>
      <param name="Value" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; or &lt;see langword=&quot;Char&quot; /&gt; expression.">必需。 任何有效的 <see langword="String" /> 或 <see langword="Char" /> 表达式。</param>
      <returns vsli:raw="A string or character containing the specified string converted to uppercase.">一个字符串或字符，其中包含转换为大写的指定字符串。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.UCase(System.String)">
      <summary vsli:raw="Returns a string or character containing the specified string converted to uppercase.">返回一个字符串或字符，其中包含转换为大写的指定字符串。</summary>
      <param name="Value" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; or &lt;see langword=&quot;Char&quot; /&gt; expression.">必需。 任何有效的 <see langword="String" /> 或 <see langword="Char" /> 表达式。</param>
      <returns vsli:raw="A string or character containing the specified string converted to uppercase.">一个字符串或字符，其中包含转换为大写的指定字符串。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.TabInfo">
      <summary vsli:raw="This class supports the Visual Basic &lt;see langword=&quot;Print&quot; /&gt; and &lt;see langword=&quot;PrintLine&quot; /&gt; functions.">此类支持 Visual Basic <see langword="Print" /> 和 <see langword="PrintLine" /> 函数。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TabInfo.Column">
      <summary vsli:raw="This field supports the Visual Basic &lt;see langword=&quot;Print&quot; /&gt; and &lt;see langword=&quot;PrintLine&quot; /&gt; functions.">此字段支持 Visual Basic <see langword="Print" /> 和 <see langword="PrintLine" /> 函数。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.TriState">
      <summary vsli:raw="Indicates a Boolean value or whether the default should be used when calling number-formatting functions.">指示调用数字格式的函数时应使用布尔值还是使用默认值。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TriState.False">
      <summary vsli:raw="False. The numeric value of this member is 0.">False。 此成员的数值为 0。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TriState.True">
      <summary vsli:raw="True. The numeric value of this member is -1.">True。 此成员的数值为 1。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TriState.UseDefault">
      <summary vsli:raw="Default setting. The numeric value of this member is -2.">默认设置。 此成员的数值为 -2。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.VariantType">
      <summary vsli:raw="Indicates the type of a variant object, returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">指示由 <see langword="VarType" /> 函数返回的变量对象的类型。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Array">
      <summary vsli:raw="Array. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbArray&quot; /&gt;.">数组。 此成员等效于 Visual Basic 常量 <see langword="vbArray" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Boolean">
      <summary vsli:raw="&lt;see langword=&quot;Boolean&quot; /&gt;. (&lt;see langword=&quot;True&quot; /&gt; or &lt;see langword=&quot;False&quot; /&gt;.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbBoolean&quot; /&gt;.">
        <see langword="Boolean" />。 （<see langword="True" /> 或 <see langword="False" />。）此成员等效于 Visual Basic 常量 <see langword="vbBoolean" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Byte">
      <summary vsli:raw="&lt;see langword=&quot;Byte&quot; /&gt;. (0 through 255.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbByte&quot; /&gt;.">
        <see langword="Byte" />。 （0 到 255。）此成员等效于 Visual Basic 常量 <see langword="vbByte" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Char">
      <summary vsli:raw="&lt;see langword=&quot;Char&quot; /&gt;. (0 through 65535.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbChar&quot; /&gt;.">
        <see langword="Char" />。 （0 到 65535。）此成员等效于 Visual Basic 常量 <see langword="vbChar" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Currency">
      <summary vsli:raw="Currency. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbCurrency&quot; /&gt;.">Currency。 此成员等效于 Visual Basic 常量 <see langword="vbCurrency" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.DataObject">
      <summary vsli:raw="DataObject.">DataObject。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Date">
      <summary vsli:raw="&lt;see langword=&quot;Date&quot; /&gt;. (0:00:00 on January 1, 0001 through 11:59:59 PM on December 31, 9999.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbDate&quot; /&gt;.">
        <see langword="Date" />。 （0001 年 1 月 1 日午夜 0:00:00 到 9999 年 12 月 31 日晚上 11:59:59。）此成员等效于 Visual Basic 常量 <see langword="vbDate" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Decimal">
      <summary vsli:raw="&lt;see langword=&quot;Decimal&quot; /&gt;. (0 through +/-79,228,162,514,264,337,593,543,950,335 with no decimal point; 0 through +/-7.9228162514264337593543950335 with 28 places to the right of the decimal; smallest non-zero number is +/-0.0000000000000000000000000001.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbDecimal&quot; /&gt;.">
        <see langword="Decimal" />。 （0 到 +/-79,228,162,514,264,337,593,543,950,335，不带小数点；0 到 +/-7.9228162514264337593543950335，小数点右侧 28 位小数；最小的非零数字为 +/-0.0000000000000000000000000001。）此成员等效于 Visual Basic 常量 <see langword="vbDecimal" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Double">
      <summary vsli:raw="&lt;see langword=&quot;Double&quot; /&gt;. (-1.79769313486231E+308 through -4.94065645841247E-324 for negative values; 4.94065645841247E-324 through 1.79769313486231E+308 for positive values.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbDouble&quot; /&gt;.">
        <see langword="Double" />。 （对于负值，从 -1.79769313486231E+308 到 -4.94065645841247E-324；对于正值，从 4.94065645841247E-324 到 1.79769313486231E+308。）此成员等效于 Visual Basic 常量 <see langword="vbDouble" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Empty">
      <summary vsli:raw="Null reference. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbEmpty&quot; /&gt;.">null 引用。 此成员等效于 Visual Basic 常量 <see langword="vbEmpty" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Error">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Exception&quot; /&gt;">
        <see cref="T:System.Exception" />
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Integer">
      <summary vsli:raw="&lt;see langword=&quot;Integer&quot; /&gt;. (-2,147,483,648 through 2,147,483,647.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbInteger&quot; /&gt;.">
        <see langword="Integer" />。 （–2,147,483,648 到 2,147,483,647。）此成员等效于 Visual Basic 常量 <see langword="vbInteger" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Long">
      <summary vsli:raw="&lt;see langword=&quot;Long&quot; /&gt;. (-9,223,372,036,854,775,808 through 9,223,372,036,854,775,807.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbLong&quot; /&gt;.">
        <see langword="Long" />。 （-9,223,372,036,854,775,808 到 9,223,372,036,854,775,807。）此成员等效于 Visual Basic 常量 <see langword="vbLong" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Null">
      <summary vsli:raw="Null object. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbNull&quot; /&gt;.">null 对象。 此成员等效于 Visual Basic 常量 <see langword="vbNull" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Object">
      <summary vsli:raw="Any type can be stored in a variable of type &lt;see langword=&quot;Object&quot; /&gt;. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbObject&quot; /&gt;.">在 <see langword="Object" /> 类型的变量中可存储任何类型。 此成员等效于 Visual Basic 常量 <see langword="vbObject" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Short">
      <summary vsli:raw="&lt;see langword=&quot;Short&quot; /&gt;. (-32,768 through 32,767.)">
        <see langword="Short" />。 （–32,768 到 32,767。）</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Single">
      <summary vsli:raw="&lt;see langword=&quot;Single&quot; /&gt;. (-3.402823E+38 through -1.401298E-45 for negative values; 1.401298E-45 through 3.402823E+38 for positive values.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbSingle&quot; /&gt;.">
        <see langword="Single" />。 （对于负值，从 -3.402823E+38 到 -1.401298E-45；对于正值，从 1.401298E-45 到 3.402823E+38。）此成员等效于 Visual Basic 常量 <see langword="vbSingle" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.String">
      <summary vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. (0 to approximately 2 billion Unicode characters.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbString&quot; /&gt;.">
        <see langword="String" />。 （0 到大约 20 亿个 Unicode 字符。）此成员等效于 Visual Basic 常量 <see langword="vbString" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.UserDefinedType">
      <summary vsli:raw="User-defined type. Each member of the structure has a range determined by its data type and independent of the ranges of the other members. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbUserDefinedType&quot; /&gt;.">用户定义的类型。 结构中的每个成员都有一个由其数据类型确定的范围，且该范围不依赖其他成员的范围。 此成员等效于 Visual Basic 常量 <see langword="vbUserDefinedType" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Variant">
      <summary vsli:raw="&lt;see langword=&quot;Variant&quot; /&gt;. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbVariant&quot; /&gt;.">
        <see langword="Variant" />。 此成员等效于 Visual Basic 常量 <see langword="vbVariant" />。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.VBFixedArrayAttribute">
      <summary vsli:raw="Indicates that an array in a structure or non-local variable should be treated as a fixed-length array.">指示应该将结构中的数组或者非局部变量当作固定长度的数组来进行处理。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.VBFixedArrayAttribute.#ctor(System.Int32)">
      <summary vsli:raw="Initializes the value of the &lt;see langword=&quot;Bounds&quot; /&gt; property.">初始化 <see langword="Bounds" /> 属性的值。</summary>
      <param name="UpperBound1" vsli:raw="Initializes the value of upper field, which represents the size of the first dimension of the array.">初始化上限字段的值，它表示数组第一个维数的大小。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.VBFixedArrayAttribute.#ctor(System.Int32,System.Int32)">
      <summary vsli:raw="Initializes the value of the &lt;see langword=&quot;Bounds&quot; /&gt; property.">初始化 <see langword="Bounds" /> 属性的值。</summary>
      <param name="UpperBound1" vsli:raw="Initializes the value of upper field, which represents the size of the first dimension of the array.">初始化上限字段的值，它表示数组第一个维数的大小。</param>
      <param name="UpperBound2" vsli:raw="Initializes the value of upper field, which represents the size of the second dimension of the array.">初始化上限字段的值，该值表示数组的第二个维度的大小。</param>
    </member>
    <member name="P:Microsoft.VisualBasic.VBFixedArrayAttribute.Bounds">
      <summary vsli:raw="Returns the bounds of the array.">返回数组界限。</summary>
      <returns vsli:raw="Contains an integer array that represents the bounds of the array.">包含表示数组界限的整数数组。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.VBFixedArrayAttribute.Length">
      <summary vsli:raw="Returns the size of the array.">返回数组的大小。</summary>
      <returns vsli:raw="Contains an integer that represents the number of elements in the array.">包含表示数组中元素数的整数。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.VBFixedStringAttribute">
      <summary vsli:raw="Indicates that a string should be treated as if it were fixed length.">指示应该将字符串当作固定长度的字符串来处理。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.VBFixedStringAttribute.#ctor(System.Int32)">
      <summary vsli:raw="Initializes the value of the &lt;see langword=&quot;SizeConst&quot; /&gt; field.">初始化 <see langword="SizeConst" /> 字段的值。</summary>
      <param name="Length" vsli:raw="The length of the fixed string.">固定字符串的长度。</param>
    </member>
    <member name="P:Microsoft.VisualBasic.VBFixedStringAttribute.Length">
      <summary vsli:raw="Gets the length of the string.">获取字符串的长度。</summary>
      <returns vsli:raw="The length of the string.">字符串的长度。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.VBMath">
      <summary vsli:raw="The &lt;see langword=&quot;VbMath&quot; /&gt; module contains procedures used to perform mathematical operations.">
        <see langword="VbMath" /> 模块包含用于执行算术操作的过程。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Randomize">
      <summary vsli:raw="Initializes the random-number generator.">初始化随机数生成器。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Randomize(System.Double)">
      <summary vsli:raw="Initializes the random-number generator.">初始化随机数生成器。</summary>
      <param name="Number" vsli:raw="Optional. An &lt;see langword=&quot;Object&quot; /&gt; or any valid numeric expression.">可选。 一个 <see langword="Object" /> 或任何有效的数值表达式。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Rnd">
      <summary vsli:raw="Returns a random number of type &lt;see cref=&quot;T:System.Single&quot; /&gt;.">返回一个 <see langword="Single" /> 类型的随机数。</summary>
      <returns vsli:raw="The next random number in the sequence.">序列中的下一个随机数。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Rnd(System.Single)">
      <summary vsli:raw="Returns a random number of type &lt;see cref=&quot;T:System.Single&quot; /&gt;.">返回一个 <see langword="Single" /> 类型的随机数。</summary>
      <param name="Number" vsli:raw="Optional. A &lt;see cref=&quot;T:System.Single&quot; /&gt; value or any valid &lt;see cref=&quot;T:System.Single&quot; /&gt; expression.">可选。 一个 <see langword="Single" /> 值或任何有效的 <see langword="Single" /> 表达式。</param>
      <returns vsli:raw="If number is less than zero, Rnd generates the same number every time, using &lt;paramref name=&quot;Number&quot; /&gt; as the seed. If number is greater than zero, Rnd generates the next random number in the sequence. If number is equal to zero, Rnd generates the most recently generated number. If number is not supplied, Rnd generates the next random number in the sequence.">如果 Number 小于零，则 Rnd 每次都使用 <paramref name="Number" /> 作为种子生成相同的数字。 如果 Number 大于零，则 Rnd 生成序列中的下一个随机数。 如果 Number 等于零，则 Rnd 生成最近生成的数字。 如果未提供 Number，则 Rnd 生成序列中的下一个随机数。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.VbStrConv">
      <summary vsli:raw="Indicates which type of conversion to perform when calling the &lt;see langword=&quot;StrConv&quot; /&gt; function.">指示调用 <see langword="StrConv" /> 函数时要执行的转换类型。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Hiragana">
      <summary vsli:raw="Converts Katakana characters in the string to Hiragana characters. Applies to Japanese locale only. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbHiragana&quot; /&gt;.">将字符串中片假名字符的转换为平假名字符。 仅适用于日语区域设置。 此成员等效于 Visual Basic 常量 <see langword="vbHiragana" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Katakana">
      <summary vsli:raw="Converts Hiragana characters in the string to Katakana characters. Applies to Japanese locale only. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbKatakana&quot; /&gt;.">将字符串中的平假名字符转换为片假名字符。 仅适用于日语区域设置。 此成员等效于 Visual Basic 常量 <see langword="vbKatakana" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.LinguisticCasing">
      <summary vsli:raw="Converts the string from file system rules for casing to linguistic rules. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbLinguisticCasing&quot; /&gt;.">将字符串从用于大小写的文件系统规则转换为语言规则。 此成员等效于 Visual Basic 常量 <see langword="vbLinguisticCasing" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Lowercase">
      <summary vsli:raw="Converts the string to lowercase characters. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbLowerCase&quot; /&gt;.">将字符串转换为小写字符。 此成员等效于 Visual Basic 常量 <see langword="vbLowerCase" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Narrow">
      <summary vsli:raw="Converts wide (double-byte) characters in the string to narrow (single-byte) characters. Applies to Asian locales. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbNarrow&quot; /&gt;.">将字符串中的宽（双字节）字符转换为窄（单字节）字符。 适用于亚洲区域设置。 此成员等效于 Visual Basic 常量 <see langword="vbNarrow" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.None">
      <summary vsli:raw="Performs no conversion.">不执行任何转换。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.ProperCase">
      <summary vsli:raw="Converts the first letter of every word in the string to uppercase. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbProperCase&quot; /&gt;.">将字符串中每个单词的第一个字母转换为大写。 此成员等效于 Visual Basic 常量 <see langword="vbProperCase" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.SimplifiedChinese">
      <summary vsli:raw="Converts the string to Simplified Chinese characters. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbSimplifiedChinese&quot; /&gt;.">将字符串转换为简体中文字符。 此成员等效于 Visual Basic 常量 <see langword="vbSimplifiedChinese" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.TraditionalChinese">
      <summary vsli:raw="Converts the string to Traditional Chinese characters. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbTraditionalChinese&quot; /&gt;.">将字符串转换为繁体中文字符。 此成员等效于 Visual Basic 常量 <see langword="vbTraditionalChinese" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Uppercase">
      <summary vsli:raw="Converts the string to uppercase characters. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbUpperCase&quot; /&gt;.">将字符串转换为大写字符。 此成员等效于 Visual Basic 常量 <see langword="vbUpperCase" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Wide">
      <summary vsli:raw="Converts narrow (single-byte) characters in the string to wide (double-byte) characters. Applies to Asian locales. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbWide&quot; /&gt;. The conversion may use Normalization Form C even if an input character is already full-width. For example, the string &quot;は゛&quot; (which is already full-width) is normalized to &quot;ば&quot;. See Unicode normalization forms.">将字符串中的窄（单字节）字符转换为宽（双字节）字符。 适用于亚洲区域设置。 此成员等效于 Visual Basic 常量 <see langword="vbWide" />。 即使输入字符已经是全角，转换仍可能会使用范式 C。 例如，将字符串“は゛”（已是全角）规范化为“ば”。 请参阅 Unicode 范式。</summary>
    </member>
  </members>
</doc>