<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Linq.Parallel</name>
  </assembly>
  <members>
    <member name="T:System.Linq.OrderedParallelQuery`1">
      <summary vsli:raw="Represents a sorted, parallel sequence.">表示已排序的并行序列。</summary>
      <typeparam name="TSource" vsli:raw="The type of elements in the source collection.">源集合中的元素的类型。</typeparam>
    </member>
    <member name="M:System.Linq.OrderedParallelQuery`1.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the sequence.">返回循环访问序列的枚举器。</summary>
      <returns vsli:raw="An enumerator that iterates through the sequence.">循环访问序列的枚举器。</returns>
    </member>
    <member name="T:System.Linq.ParallelEnumerable">
      <summary vsli:raw="Provides a set of methods for querying objects that implement ParallelQuery{TSource}. This is the parallel equivalent of &lt;see cref=&quot;T:System.Linq.Enumerable&quot; /&gt;.">提供一组用于查询实现 ParallelQuery{TSource} 的对象的方法。 这是 <see cref="T:System.Linq.Enumerable" /> 的并行等效项。</summary>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Aggregate``1(System.Linq.ParallelQuery{``0},System.Func{``0,``0,``0})">
      <summary vsli:raw="Applies in parallel an accumulator function over a sequence.">对一个序列并行应用累加器函数。</summary>
      <param name="source" vsli:raw="A sequence to aggregate over.">要对其进行聚合的序列。</param>
      <param name="func" vsli:raw="An accumulator function to be invoked on each element.">要对每个元素调用的累加器函数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="The final accumulator value.">累加器的最终值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;func&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="func" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 中不包含任何元素。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Aggregate``2(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1})">
      <summary vsli:raw="Applies in parallel an accumulator function over a sequence. The specified seed value is used as the initial accumulator value.">对一个序列并行应用累加器函数。 将指定的种子值用作累加器初始值。</summary>
      <param name="source" vsli:raw="A sequence to aggregate over.">要对其进行聚合的序列。</param>
      <param name="seed" vsli:raw="The initial accumulator value.">累加器的初始值。</param>
      <param name="func" vsli:raw="An accumulator function to be invoked on each element.">要对每个元素调用的累加器函数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <typeparam name="TAccumulate" vsli:raw="The type of the accumulator value.">累加器值的类型。</typeparam>
      <returns vsli:raw="The final accumulator value.">累加器的最终值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;func&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="func" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 中不包含任何元素。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
      <summary vsli:raw="Applies in parallel an accumulator function over a sequence. This overload is not available in the sequential implementation.">对一个序列并行应用累加器函数。 此重载在顺序实现中不可用。</summary>
      <param name="source" vsli:raw="A sequence to aggregate over.">要对其进行聚合的序列。</param>
      <param name="seed" vsli:raw="The initial accumulator value.">累加器的初始值。</param>
      <param name="updateAccumulatorFunc" vsli:raw="An accumulator function to be invoked on each element in a partition.">要对分区中的每个元素调用的累加器函数。</param>
      <param name="combineAccumulatorsFunc" vsli:raw="An accumulator function to be invoked on the yielded accumulator result from each partition.">要对每个分区中已生成的累加器结果调用的累加器函数。</param>
      <param name="resultSelector" vsli:raw="A function to transform the final accumulator value into the result value.">将累加器的最终值转换为结果值的函数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <typeparam name="TAccumulate" vsli:raw="The type of the accumulator value.">累加器值的类型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the resulting value.">结果值的类型。</typeparam>
      <returns vsli:raw="The transformed final accumulator value.">已转换的累加器最终值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;updateAccumulatorFunc&quot; /&gt; or &lt;paramref name=&quot;combineAccumulatorsFunc&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="updateAccumulatorFunc" /> 或 <paramref name="combineAccumulatorsFunc" /> 或 <paramref name="resultSelector" /> 是 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 中不包含任何元素。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
      <summary vsli:raw="Applies in parallel an accumulator function over a sequence. The specified seed value is used as the initial accumulator value, and the specified function is used to select the result value.">对一个序列并行应用累加器函数。 将指定的种子值用作累加器的初始值，并使用指定的函数选择结果值。</summary>
      <param name="source" vsli:raw="A sequence to aggregate over.">要对其进行聚合的序列。</param>
      <param name="seed" vsli:raw="The initial accumulator value.">累加器的初始值。</param>
      <param name="func" vsli:raw="An accumulator function to be invoked on each element.">要对每个元素调用的累加器函数。</param>
      <param name="resultSelector" vsli:raw="A function to transform the final accumulator value into the result value.">将累加器的最终值转换为结果值的函数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <typeparam name="TAccumulate" vsli:raw="The type of the accumulator value.">累加器值的类型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the resulting value.">结果值的类型。</typeparam>
      <returns vsli:raw="The transformed final accumulator value.">已转换的累加器最终值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;func&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="func" /> 或 <paramref name="resultSelector" /> 是 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 中不包含任何元素。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},System.Func{``1},System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
      <summary vsli:raw="Applies in parallel an accumulator function over a sequence. This overload is not available in the sequential implementation.">对一个序列并行应用累加器函数。 此重载在顺序实现中不可用。</summary>
      <param name="source" vsli:raw="A sequence to aggregate over.">要对其进行聚合的序列。</param>
      <param name="seedFactory" vsli:raw="A function that returns the initial accumulator value.">一个返回初始累加器值的函数。</param>
      <param name="updateAccumulatorFunc" vsli:raw="An accumulator function to be invoked on each element in a partition.">要对分区中的每个元素调用的累加器函数。</param>
      <param name="combineAccumulatorsFunc" vsli:raw="An accumulator function to be invoked on the yielded accumulator result from each partition.">要对每个分区中已生成的累加器结果调用的累加器函数。</param>
      <param name="resultSelector" vsli:raw="A function to transform the final accumulator value into the result value.">将累加器的最终值转换为结果值的函数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <typeparam name="TAccumulate" vsli:raw="The type of the accumulator value.">累加器值的类型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the resulting value.">结果值的类型。</typeparam>
      <returns vsli:raw="The transformed final accumulator value.">已转换的累加器最终值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;seedFactory&quot; /&gt; or &lt;paramref name=&quot;updateAccumulatorFunc&quot; /&gt; or &lt;paramref name=&quot;combineAccumulatorsFunc&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="seedFactory" /> 或 <paramref name="updateAccumulatorFunc" /> 或 <paramref name="combineAccumulatorsFunc" /> 或 <paramref name="resultSelector" /> 是 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 中不包含任何元素。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.All``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Determines in parallel whether all elements of a sequence satisfy a condition.">并行确定序列中的所有元素是否都满足条件。</summary>
      <param name="source" vsli:raw="A sequence whose elements to apply the predicate to.">要对其应用谓词的元素所在的序列。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">用于测试每个元素是否满足条件的函数。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if every element of the source sequence passes the test in the specified predicate, or if the sequence is empty; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果源序列中的每个元素都通过指定谓词中的测试，或者序列为空，则为 true；否则为 false。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="predicate" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Determines whether a parallel sequence contains any elements.">确定并行序列是否包含任何元素。</summary>
      <param name="source" vsli:raw="The sequence to check for emptiness.">要检查是否为空的序列。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the source sequence contains any elements; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果源序列包含任何元素，则为 true；否则为 false。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Determines in parallel whether any element of a sequence satisfies a condition.">并行确定序列中的任何元素是否都满足条件。</summary>
      <param name="source" vsli:raw="A sequence to whose elements the predicate will be applied.">将对其元素应用谓词的序列。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">用于测试每个元素是否满足条件的函数。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any elements in the source sequence pass the test in the specified predicate; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果源序列中的任何元素都通过指定谓词中的测试，则为 true；否则为 false。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="predicate" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsEnumerable``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; into an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to force sequential evaluation of the query.">将 <see cref="T:System.Linq.ParallelQuery`1" /> 转换为 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 以强制对查询进行顺序计算。</summary>
      <param name="source" vsli:raw="The sequence to cast as &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt;.">要强制转换为 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的序列。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="The input sequence typed as &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt;.">已作为 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 键入的输入序列。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsOrdered(System.Linq.ParallelQuery)">
      <summary vsli:raw="Enables treatment of a data source as if it were ordered, overriding the default of unordered. AsOrdered may only be invoked on non-generic sequences returned by AsParallel, ParallelEnumerable.Range, and ParallelEnumerable.Repeat.">启用将数据源视为“已经排序”的处理方法，重写默认的将数据源视为“未经排序”的处理方法。 只可以对由 AsParallel、ParallelEnumerable.Range 和 ParallelEnumerable.Repeat 返回的非泛型序列调用 AsOrdered。</summary>
      <param name="source" vsli:raw="The input sequence.">输入序列。</param>
      <returns vsli:raw="The source sequence which will maintain the original ordering in the subsequent query operators.">将要维护后续查询运算符中的原始排序的源序列。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="thrown if &lt;paramref name=&quot;source&quot; /&gt; contains no elements&#xA;&#xA; -or-&#xA;&#xA; if &lt;see langword=&quot;AsOrdered&quot; /&gt; is called midway through a query. It is allowed to be called immediately after &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)&quot; /&gt;, &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.Range(System.Int32,System.Int32)&quot; /&gt;, or &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.Repeat``1(``0,System.Int32)&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;source&quot; /&gt; is not one of &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)&quot; /&gt;, &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.Range(System.Int32,System.Int32)&quot; /&gt;, or &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.Repeat``1(``0,System.Int32)&quot; /&gt;.">如果 <paramref name="source" /> 中不包含任何元素则会引发 
或 
在 AsOrdered 通过查询调用舍入时引发。 他被允许在 <see cref="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" />，<see cref="M:System.Linq.ParallelEnumerable.Range(System.Int32,System.Int32)" /> 或 <see cref="M:System.Linq.ParallelEnumerable.Repeat``1(``0,System.Int32)" /> 之后立即调用。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsOrdered``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Enables treatment of a data source as if it were ordered, overriding the default of unordered. AsOrdered may only be invoked on generic sequences returned by AsParallel, ParallelEnumerable.Range, and ParallelEnumerable.Repeat.">启用将数据源视为“已经排序”的处理方法，重写默认的将数据源视为“未经排序”的处理方法。 只可以对由 AsParallel、ParallelEnumerable.Range 和 ParallelEnumerable.Repeat 返回的泛型序列调用 AsOrdered。</summary>
      <param name="source" vsli:raw="The input sequence.">输入序列。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="The source sequence which will maintain the original ordering in the subsequent query operators.">将要维护后续查询运算符中的原始排序的源序列。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;source&quot; /&gt; is not one of AsParallel, ParallelEnumerable.Range, or ParallelEnumerable.Repeat.">如果 <paramref name="source" /> 中不包含任何元素则会引发 
或 
<paramref name="source" /> 不是 AsParallel、ParallelEnumerable.Range 或 ParallelEnumerable.Repeat 之一时引发。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)">
      <summary vsli:raw="Enables parallelization of a query.">启用查询的并行化。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to convert to a &lt;see cref=&quot;T:System.Linq.ParallelQuery&quot; /&gt;.">要转换为 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Linq.ParallelQuery" />。</param>
      <returns vsli:raw="The source as a ParallelQuery to bind to ParallelEnumerable extension methods.">作为要绑定到 ParallelEnumerable 扩展方法的 ParallelQuery 的源。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Concurrent.Partitioner{``0})">
      <summary vsli:raw="Enables parallelization of a query, as sourced by a custom partitioner that is responsible for splitting the input sequence into partitions.">启用查询的并行化，并由负责将输入序列拆分成各个分区的自定义分区程序指明其出处。</summary>
      <param name="source" vsli:raw="A partitioner over the input sequence.">基于输入序列的分区程序。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; as a ParallelQuery to bind to ParallelEnumerable extension methods.">作为要绑定到 ParallelEnumerable 扩展方法的 ParallelQuery 的 <paramref name="source" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Enables parallelization of a query.">启用查询的并行化。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to convert to a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt;.">要转换为 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Linq.ParallelQuery`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="The source as a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; to bind to ParallelEnumerable extension methods.">作为要绑定到 ParallelEnumerable 扩展方法的 <see cref="T:System.Linq.ParallelQuery`1" /> 的源。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsSequential``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; into an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to force sequential evaluation of the query.">将 <see cref="T:System.Linq.ParallelQuery`1" /> 转换为 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 以强制对查询进行顺序计算。</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; to convert to an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt;.">要转换为 <see cref="T:System.Linq.ParallelQuery`1" /> 的 <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="The source as an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to bind to sequential extension methods.">作为要绑定到顺序扩展方法的 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的源。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsUnordered``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Allows an intermediate query to be treated as if no ordering is implied among the elements.">允许将中间查询视为元素之间未应用任何排序。</summary>
      <param name="source" vsli:raw="The input sequence.">输入序列。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="The source sequence with arbitrary order.">具有任意顺序的源序列。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Decimal})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values.">并行计算一个值序列的平均值。</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">用于计算平均值的值序列。</param>
      <returns vsli:raw="The average of the sequence of values.">值序列的平均值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 中不包含任何元素。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Double})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values.">并行计算一个值序列的平均值。</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">用于计算平均值的值序列。</param>
      <returns vsli:raw="The average of the sequence of values.">值序列的平均值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 中不包含任何元素。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Int32})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values.">并行计算一个值序列的平均值。</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">用于计算平均值的值序列。</param>
      <returns vsli:raw="The average of the sequence of values.">值序列的平均值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum or count of the elements in the sequence is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">序列中元素之和或数量大于 <see cref="F:System.Int32.MaxValue" />。 或评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 中不包含任何元素。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Int64})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values.">并行计算一个值序列的平均值。</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">用于计算平均值的值序列。</param>
      <returns vsli:raw="The average of the sequence of values.">值序列的平均值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum or count of the elements in the sequence is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">序列中元素之和或数量大于 <see cref="F:System.Int32.MaxValue" />。 或评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 中不包含任何元素。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values.">并行计算一个值序列的平均值。</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">用于计算平均值的值序列。</param>
      <returns vsli:raw="The average of the sequence of values.">值序列的平均值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 中不包含任何元素。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values.">并行计算一个值序列的平均值。</summary>
      <param name="source" vsli:raw="The source sequence.">源序列。</param>
      <returns vsli:raw="The average of the sequence of values.">值序列的平均值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">用于计算平均值的值序列。值序列的平均值。<paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 中不包含任何元素。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values.">并行计算一个值序列的平均值。</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">用于计算平均值的值序列。</param>
      <returns vsli:raw="The average of the sequence of values.">值序列的平均值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum or count of the elements in the sequence is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">序列中元素之和或数量大于 <see cref="F:System.Int32.MaxValue" />。 或评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 中不包含任何元素。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values.">并行计算一个值序列的平均值。</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">用于计算平均值的值序列。</param>
      <returns vsli:raw="The average of the sequence of values.">值序列的平均值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum or count of the elements in the sequence is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">序列中元素之和或数量大于 <see cref="F:System.Int32.MaxValue" />。 或评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 中不包含任何元素。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values.">并行计算一个值序列的平均值。</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">用于计算平均值的值序列。</param>
      <returns vsli:raw="The average of the sequence of values.">值序列的平均值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 中不包含任何元素。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Single})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values.">并行计算一个值序列的平均值。</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">用于计算平均值的值序列。</param>
      <returns vsli:raw="The average of the sequence of values.">值序列的平均值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 中不包含任何元素。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.">并行计算一个值序列的平均值，这些值可通过对输入序列的每个元素调用转换函数获得。</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">用于计算平均值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">应用于每个元素的转换函数。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="The average of the sequence of values.">值序列的平均值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 中不包含任何元素。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="(Thrown as inner exception in an &lt;see cref=&quot;T:System.AggregateException&quot; /&gt;). The &lt;paramref name=&quot;selector&quot; /&gt; function returns a value greater than MaxValue for the element type.">（在 <see cref="T:System.AggregateException" /> 中作为内部异常引发）。 <paramref name="selector" /> 函数返回一个大于元素类型的 MaxValue 的值。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.">并行计算一个值序列的平均值，这些值可通过对输入序列的每个元素调用转换函数获得。</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">用于计算平均值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">应用于每个元素的转换函数。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="The average of the sequence of values.">值序列的平均值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 中不包含任何元素。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="(Thrown as inner exception in an &lt;see cref=&quot;T:System.AggregateException&quot; /&gt;). The &lt;paramref name=&quot;selector&quot; /&gt; function returns a value greater than MaxValue for the element type.">（在 <see cref="T:System.AggregateException" /> 中作为内部异常引发）。 <paramref name="selector" /> 函数返回一个大于元素类型的 MaxValue 的值。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.">并行计算一个值序列的平均值，这些值可通过对输入序列的每个元素调用转换函数获得。</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">用于计算平均值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">应用于每个元素的转换函数。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="The average of the sequence of values.">值序列的平均值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum or count of the elements in the sequence is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">序列中元素之和或数量大于 <see cref="F:System.Int32.MaxValue" />。 或评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 中不包含任何元素。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="(Thrown as inner exception in an &lt;see cref=&quot;T:System.AggregateException&quot; /&gt;). The &lt;paramref name=&quot;selector&quot; /&gt; function returns a value greater than MaxValue for the element type.">（在 <see cref="T:System.AggregateException" /> 中作为内部异常引发）。 <paramref name="selector" /> 函数返回一个大于元素类型的 MaxValue 的值。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.">并行计算一个值序列的平均值，这些值可通过对输入序列的每个元素调用转换函数获得。</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">用于计算平均值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">应用于每个元素的转换函数。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="The average of the sequence of values.">值序列的平均值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum or count of the elements in the sequence is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">序列中元素之和或数量大于 <see cref="F:System.Int32.MaxValue" />。 或评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 中不包含任何元素。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="(Thrown as inner exception in an &lt;see cref=&quot;T:System.AggregateException&quot; /&gt;). The &lt;paramref name=&quot;selector&quot; /&gt; function returns a value greater than MaxValue for the element type.">（在 <see cref="T:System.AggregateException" /> 中作为内部异常引发）。 <paramref name="selector" /> 函数返回一个大于元素类型的 MaxValue 的值。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.">并行计算一个值序列的平均值，这些值可通过对输入序列的每个元素调用转换函数获得。</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">用于计算平均值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">应用于每个元素的转换函数。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="The average of the sequence of values.">值序列的平均值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 中不包含任何元素。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="(Thrown as inner exception in an &lt;see cref=&quot;T:System.AggregateException&quot; /&gt;). The &lt;paramref name=&quot;selector&quot; /&gt; function returns a value greater than MaxValue for the element type.">（在 <see cref="T:System.AggregateException" /> 中作为内部异常引发）。 <paramref name="selector" /> 函数返回一个大于元素类型的 MaxValue 的值。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.">并行计算一个值序列的平均值，这些值可通过对输入序列的每个元素调用转换函数获得。</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">用于计算平均值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">应用于每个元素的转换函数。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="The average of the sequence of values.">值序列的平均值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 中不包含任何元素。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="(Thrown as inner exception in an &lt;see cref=&quot;T:System.AggregateException&quot; /&gt;). The &lt;paramref name=&quot;selector&quot; /&gt; function returns a value greater than MaxValue for the element type.">（在 <see cref="T:System.AggregateException" /> 中作为内部异常引发）。 <paramref name="selector" /> 函数返回一个大于元素类型的 MaxValue 的值。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.">并行计算一个值序列的平均值，这些值可通过对输入序列的每个元素调用转换函数获得。</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">用于计算平均值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">应用于每个元素的转换函数。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="The average of the sequence of values.">值序列的平均值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum or count of the elements in the sequence is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">序列中元素之和或数量大于 <see cref="F:System.Int32.MaxValue" />。 或评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 中不包含任何元素。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="(Thrown as inner exception in an &lt;see cref=&quot;T:System.AggregateException&quot; /&gt;). The &lt;paramref name=&quot;selector&quot; /&gt; function returns a value greater than MaxValue for the element type.">（在 <see cref="T:System.AggregateException" /> 中作为内部异常引发）。 <paramref name="selector" /> 函数返回一个大于元素类型的 MaxValue 的值。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.">并行计算一个值序列的平均值，这些值可通过对输入序列的每个元素调用转换函数获得。</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">用于计算平均值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">应用于每个元素的转换函数。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="The average of the sequence of values.">值序列的平均值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum or count of the elements in the sequence is larger than &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">序列中元素之和或数量大于 <see cref="F:System.Int64.MaxValue" />。 或评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 中不包含任何元素。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="(Thrown as inner exception in an &lt;see cref=&quot;T:System.AggregateException&quot; /&gt;). The &lt;paramref name=&quot;selector&quot; /&gt; function returns a value greater than MaxValue for the element type.">（在 <see cref="T:System.AggregateException" /> 中作为内部异常引发）。 <paramref name="selector" /> 函数返回一个大于元素类型的 MaxValue 的值。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.">并行计算一个值序列的平均值，这些值可通过对输入序列的每个元素调用转换函数获得。</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">用于计算平均值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">应用于每个元素的转换函数。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="The average of the sequence of values.">值序列的平均值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 中不包含任何元素。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="(Thrown as inner exception in an &lt;see cref=&quot;T:System.AggregateException&quot; /&gt;). The &lt;paramref name=&quot;selector&quot; /&gt; function returns a value greater than MaxValue for the element type.">（在 <see cref="T:System.AggregateException" /> 中作为内部异常引发）。 <paramref name="selector" /> 函数返回一个大于元素类型的 MaxValue 的值。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.">并行计算一个值序列的平均值，这些值可通过对输入序列的每个元素调用转换函数获得。</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">用于计算平均值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">应用于每个元素的转换函数。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="The average of the sequence of values.">值序列的平均值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 中不包含任何元素。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="(Thrown as inner exception in an &lt;see cref=&quot;T:System.AggregateException&quot; /&gt;). The &lt;paramref name=&quot;selector&quot; /&gt; function returns a value greater than MaxValue for the element type.">（在 <see cref="T:System.AggregateException" /> 中作为内部异常引发）。 <paramref name="selector" /> 函数返回一个大于元素类型的 MaxValue 的值。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Cast``1(System.Linq.ParallelQuery)">
      <summary vsli:raw="Converts the elements of a ParallelQuery to the specified type.">将 ParallelQuery 的元素转换为指定的类型。</summary>
      <param name="source" vsli:raw="The sequence that contains the elements to be converted.">包含要转换的元素的序列。</param>
      <typeparam name="TResult" vsli:raw="The type to convert the elements of &lt;paramref name=&quot;source&quot; /&gt; to.">
        <paramref name="source" /> 中的元素要转换成的类型。</typeparam>
      <returns vsli:raw="A sequence that contains each element of the source sequence converted to the specified type.">一个序列，其中包含已转换为指定类型的源序列的每个元素。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The type of the source sequence could not be converted to &lt;paramref name=&quot;TResult&quot; /&gt;.">源序列的类型不能转换为 <paramref name="TResult" />。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="This Concat overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">切勿调用此 Concat 重载。 此方法已标记为过时，调用此方法时总是会引发 <see cref="T:System.NotSupportedException" />。</summary>
      <param name="first" vsli:raw="This parameter is not used.">未使用此参数。</param>
      <param name="second" vsli:raw="This parameter is not used.">未使用此参数。</param>
      <typeparam name="TSource" vsli:raw="This type parameter is not used.">未使用此类型参数。</typeparam>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">此重载总是会引发 <see cref="T:System.NotSupportedException" />。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">调用此方法时发生的异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Concatenates two parallel sequences.">连接两个并行序列。</summary>
      <param name="first" vsli:raw="The first sequence to concatenate.">要连接的第一个序列。</param>
      <param name="second" vsli:raw="The sequence to concatenate to the first sequence.">要与第一个序列连接的序列。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">输入序列中的元素的类型。</typeparam>
      <returns vsli:raw="A sequence that contains the concatenated elements of the two input sequences.">一个序列，其中包含两个输入序列的已连接元素。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;first&quot; /&gt; or &lt;paramref name=&quot;second&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="first" /> 或 <paramref name="second" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0)">
      <summary vsli:raw="Determines in parallel whether a sequence contains a specified element by using the default equality comparer.">通过使用默认的相等比较器，并行确定某个序列是否包含指定的元素。</summary>
      <param name="source" vsli:raw="A sequence in which to locate a value.">要在其中定位某个值的序列。</param>
      <param name="value" vsli:raw="The value to locate in the sequence.">要在序列中定位的值。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the source sequence contains an element that has the specified value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果源序列包含具有指定值的元素，则为 true；否则为 false。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="Determines in parallel whether a sequence contains a specified element by using a specified &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt;.">通过使用指定的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> 来并行确定序列是否包含指定的元素。</summary>
      <param name="source" vsli:raw="A sequence in which to locate a value.">要在其中定位某个值的序列。</param>
      <param name="value" vsli:raw="The value to locate in the sequence.">要在序列中定位的值。</param>
      <param name="comparer" vsli:raw="An equality comparer to compare values.">一个对值进行比较的相等比较器。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the source sequence contains an element that has the specified value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果源序列包含具有指定值的元素，则为 true；否则为 false。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns the number of elements in a parallel sequence.">返回并行序列中的元素数量。</summary>
      <param name="source" vsli:raw="A sequence that contains elements to be counted.">包含要计数的元素的序列。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="The number of elements in the input sequence.">输入序列中的元素数量。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The number of elements in source is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. (In this case the InnerException is &lt;see cref=&quot;T:System.OverflowException&quot; /&gt;) -or- One or more exceptions occurred during the evaluation of the query.">源中的元素数大于 <see cref="F:System.Int32.MaxValue" />。 （在这种情况下 InnerException 为 <see cref="T:System.OverflowException" />）- 或 - 在查询的评估过程中出现了一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns a number that represents how many elements in the specified parallel sequence satisfy a condition.">返回一个数字，表示在指定的并行序列中满足条件的元素数量。</summary>
      <param name="source" vsli:raw="A sequence that contains elements to be counted.">包含要计数的元素的序列。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">用于测试每个元素是否满足条件的函数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="A number that represents how many elements in the sequence satisfy the condition in the predicate function.">一个数字，表示序列中满足谓词函数条件的元素数量。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="predicate" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The number of elements in source is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. (In this case the InnerException is &lt;see cref=&quot;T:System.OverflowException&quot; /&gt;) -or- One or more exceptions occurred during the evaluation of the query.">源中的元素数大于 <see cref="F:System.Int32.MaxValue" />。 （在这种情况下 InnerException 为 <see cref="T:System.OverflowException" />）- 或 - 在查询的评估过程中出现了一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns the elements of the specified parallel sequence or the type parameter's default value in a singleton collection if the sequence is empty.">返回指定的并行序列的元素；如果序列为空，则返回单一实例集合中的类型参数的默认值。</summary>
      <param name="source" vsli:raw="The sequence to return a default value for if it is empty.">序列为空时返回默认值的序列。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="A sequence that contains default(TSource) if &lt;paramref name=&quot;source&quot; /&gt; is empty; otherwise, &lt;paramref name=&quot;source&quot; /&gt;.">如果 <paramref name="source" /> 为空，则为包含 default(TSource) 的序列；否则为 <paramref name="source" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0},``0)">
      <summary vsli:raw="Returns the elements of the specified parallel sequence or the specified value in a singleton collection if the sequence is empty.">返回指定的并行序列中的元素；如果序列为空，则返回单一实例集合中的指定值。</summary>
      <param name="source" vsli:raw="The sequence to return the specified value for if it is empty.">序列为空时返回指定值的序列。</param>
      <param name="defaultValue" vsli:raw="The value to return if the sequence is empty.">序列为空时要返回的值。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="A sequence that contains defaultValue if &lt;paramref name=&quot;source&quot; /&gt; is empty; otherwise, &lt;paramref name=&quot;source&quot; /&gt;.">如果 <paramref name="source" /> 为空，则为包含 defaultValue 的序列；否则为 <paramref name="source" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns distinct elements from a parallel sequence by using the default equality comparer to compare values.">通过使用默认的相等比较器对值进行比较，返回并行序列中的非重复元素。</summary>
      <param name="source" vsli:raw="The sequence to remove duplicate elements from.">要从中移除重复元素的序列。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="A sequence that contains distinct elements from the source sequence.">一个序列，其中包含源序列中的非重复元素。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="Returns distinct elements from a parallel sequence by using a specified &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare values.">通过使用指定的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> 对值进行比较，返回并行序列中的非重复元素。</summary>
      <param name="source" vsli:raw="The sequence to remove duplicate elements from.">要从中移除重复元素的序列。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare values.">用于比较值的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="A sequence that contains distinct elements from the source sequence.">一个序列，其中包含源序列中的非重复元素。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ElementAt``1(System.Linq.ParallelQuery{``0},System.Int32)">
      <summary vsli:raw="Returns the element at a specified index in a parallel sequence.">返回并行序列中指定索引处的元素。</summary>
      <param name="source" vsli:raw="A sequence to return an element from.">要从中返回元素的序列。</param>
      <param name="index" vsli:raw="The zero-based index of the element to retrieve.">要检索的从零开始的元素索引。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="The element at the specified position in the source sequence.">源序列中指定位置处的元素。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than 0 or greater than or equal to the number of elements in &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="index" /> 小于零或大于等于 <paramref name="source" /> 中的元素数量。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ElementAtOrDefault``1(System.Linq.ParallelQuery{``0},System.Int32)">
      <summary vsli:raw="Returns the element at a specified index in a parallel sequence or a default value if the index is out of range.">返回并行序列中指定索引处的元素；如果索引超出范围，则返回默认值。</summary>
      <param name="source" vsli:raw="A sequence to return an element from.">要从中返回元素的序列。</param>
      <param name="index" vsli:raw="The zero-based index of the element to retrieve.">要检索的从零开始的元素索引。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="default(TSource) if the index is outside the bounds of the source sequence; otherwise, the element at the specified position in the source sequence.">如果索引超出源序列的范围，则为 default(TSource)；否则为源序列中指定位置处的元素。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Empty``1">
      <summary vsli:raw="Returns an empty ParallelQuery{TResult} that has the specified type argument.">返回一个具有指定的类型参数的空 ParallelQuery{TResult}。</summary>
      <typeparam name="TResult" vsli:raw="The type to assign to the type parameter of the returned generic sequence.">要分配给返回的泛型序列的类型参数的类型。</typeparam>
      <returns vsli:raw="An empty sequence whose type argument is &lt;paramref name=&quot;TResult&quot; /&gt;.">一个空序列，其类型参数为 <paramref name="TResult" />。</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="This Except overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">切勿调用此 Except 重载。 此方法已标记为过时，调用此方法时总是会引发 <see cref="T:System.NotSupportedException" />。</summary>
      <param name="first" vsli:raw="This parameter is not used.">未使用此参数。</param>
      <param name="second" vsli:raw="This parameter is not used.">未使用此参数。</param>
      <typeparam name="TSource" vsli:raw="This type parameter is not used.">未使用此类型参数。</typeparam>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">此重载总是会引发 <see cref="T:System.NotSupportedException" />。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">调用此方法时发生的异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="This Except overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">切勿调用此 Except 重载。 此方法已标记为过时，调用此方法时总是会引发 <see cref="T:System.NotSupportedException" />。</summary>
      <param name="first" vsli:raw="This parameter is not used.">未使用此参数。</param>
      <param name="second" vsli:raw="This parameter is not used.">未使用此参数。</param>
      <param name="comparer" vsli:raw="This parameter is not used.">未使用此参数。</param>
      <typeparam name="TSource" vsli:raw="This type parameter is not used.">未使用此类型参数。</typeparam>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">此重载总是会引发 <see cref="T:System.NotSupportedException" />。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">调用此方法时发生的异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Produces the set difference of two parallel sequences by using the default equality comparer to compare values.">通过使用默认的相等比较器对值进行比较，生成两个并行序列的差集。</summary>
      <param name="first" vsli:raw="A sequence whose elements that are not also in &lt;paramref name=&quot;second&quot; /&gt; will be returned.">一个序列，其中的未同时出现在 <paramref name="second" /> 中的元素将会返回。</param>
      <param name="second" vsli:raw="A sequence whose elements that also occur in the first sequence will cause those elements to be removed from the returned sequence.">一个序列，其中的元素如果同时出现在第一个序列中，则将导致从返回的序列中移除这些元素。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">输入序列中的元素的类型。</typeparam>
      <returns vsli:raw="A sequence that contains the set difference of the elements of two sequences.">包含这两个序列的元素的差集的序列。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;first&quot; /&gt; or &lt;paramref name=&quot;second&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="first" /> 或 <paramref name="second" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="Produces the set difference of two parallel sequences by using the specified &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare values.">通过使用指定的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> 对值进行比较产生两个并行序列的差集。</summary>
      <param name="first" vsli:raw="A sequence whose elements that are not also in &lt;paramref name=&quot;second&quot; /&gt; will be returned.">一个序列，其中的未同时出现在 <paramref name="second" /> 中的元素将会返回。</param>
      <param name="second" vsli:raw="A sequence whose elements that also occur in the first sequence will cause those elements to be removed from the returned sequence.">一个序列，其中的元素如果同时出现在第一个序列中，则将导致从返回的序列中移除这些元素。</param>
      <param name="comparer" vsli:raw="&lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare values.">用于比较值的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">输入序列中的元素的类型。</typeparam>
      <returns vsli:raw="A sequence that contains the set difference of the elements of two sequences.">包含这两个序列的元素的差集的序列。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;first&quot; /&gt; or &lt;paramref name=&quot;second&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="first" /> 或 <paramref name="second" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns the first element of a parallel sequence.">返回并行序列中的第一个元素。</summary>
      <param name="source" vsli:raw="The sequence to return the first element of.">要返回其第一个元素的序列。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="The first element in the specified sequence.">返回指定序列中的第一个元素。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 中不包含任何元素。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns the first element in a parallel sequence that satisfies a specified condition.">返回并行序列中满足指定条件的第一个元素。</summary>
      <param name="source" vsli:raw="The sequence to return an element from.">要从中返回元素的序列。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">用于测试每个元素是否满足条件的函数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="The first element in the sequence that passes the test in the specified predicate function.">序列中通过指定谓词函数中的测试的第一个元素。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="predicate" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="No element in &lt;paramref name=&quot;source&quot; /&gt; satisfies the condition in &lt;paramref name=&quot;predicate&quot; /&gt;.">
        <paramref name="source" /> 中没有元素满足 <paramref name="predicate" /> 中的条件。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns the first element of a parallel sequence, or a default value if the sequence contains no elements.">返回并行序列中的第一个元素；如果该序列中不包含任何元素，则返回默认值。</summary>
      <param name="source" vsli:raw="The sequence to return the first element of.">要返回其第一个元素的序列。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="default(TSource) if &lt;paramref name=&quot;source&quot; /&gt; is empty; otherwise, the first element in &lt;paramref name=&quot;source&quot; /&gt;.">如果 <paramref name="source" /> 为空，则返回 default(TSource)；否则返回 <paramref name="source" /> 中的第一个元素。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns the first element of the parallel sequence that satisfies a condition or a default value if no such element is found.">返回并行序列中满足条件的第一个元素；如果未找到这样的元素，则返回默认值。</summary>
      <param name="source" vsli:raw="The sequence to return an element from.">要从中返回元素的序列。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">用于测试每个元素是否满足条件的函数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="default(TSource) if &lt;paramref name=&quot;source&quot; /&gt; is empty or if no element passes the test specified by predicate; otherwise, the first element in &lt;paramref name=&quot;source&quot; /&gt; that passes the test specified by predicate.">如果 <paramref name="source" /> 为空或没有元素通过 predicate 指定的测试，则返回 default(TSource)，否则返回 <paramref name="source" /> 中通过 predicate 指定的测试的第一个元素。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="predicate" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ForAll``1(System.Linq.ParallelQuery{``0},System.Action{``0})">
      <summary vsli:raw="Invokes in parallel the specified action for each element in the &lt;paramref name=&quot;source&quot; /&gt;.">对 <paramref name="source" /> 中的每个元素并行调用指定的操作。</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; whose elements will be processed by &lt;paramref name=&quot;action&quot; /&gt;.">其元素将由 <paramref name="action" /> 处理的 <see cref="T:System.Linq.ParallelQuery`1" />。</param>
      <param name="action" vsli:raw="An Action to invoke on each element.">要对每个元素调用的操作。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="action" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary vsli:raw="Groups in parallel the elements of a sequence according to a specified key selector function.">根据指定的键选择器函数对序列中的元素进行并行分组。</summary>
      <param name="source" vsli:raw="An OrderedParallelQuery{TSource}that contains elements to sort.">一个 OrderedParallelQuery{TSource}，包含要排序的元素。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">用于从元素中提取键的函数。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 返回的键的类型。</typeparam>
      <returns vsli:raw="A sequence of groups that are sorted descending according to &lt;paramref name=&quot;TKey&quot; /&gt;.">依照 <paramref name="TKey" /> 按降序排列的组序列。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="action" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Groups in parallel the elements of a sequence according to a specified key selector function and compares the keys by using a specified &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt;.">根据指定的键选择器函数对序列中的元素进行并行分组，并使用指定的 <see cref="T:System.Collections.Generic.IComparer`1" /> 对键进行比较。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.OrderedParallelQuery`1&quot; /&gt; that contains elements to sort.">一个包含要排序的元素的 <see cref="T:System.Linq.OrderedParallelQuery`1" />。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">用于从元素中提取键的函数。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">用于比较键的 <see cref="T:System.Collections.Generic.IComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" />返回&gt;的键的类型。</typeparam>
      <returns vsli:raw="A sequence of groups that are sorted descending according to &lt;paramref name=&quot;TKey&quot; /&gt;.">依照 <paramref name="TKey" /> 按降序排列的组序列。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="action" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
      <summary vsli:raw="Groups in parallel the elements of a sequence according to a specified key selector function and projects the elements for each group by using a specified function.">根据指定的键选择器函数对序列中的元素进行并行分组，并且通过使用指定的函数对每个组中的元素进行投影。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.OrderedParallelQuery`1&quot; /&gt; that contains elements to sort.">一个包含要排序的元素的 <see cref="T:System.Linq.OrderedParallelQuery`1" />。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">用于从元素中提取键的函数。</param>
      <param name="elementSelector" vsli:raw="A function to map each source element to an element in an &lt;see cref=&quot;T:System.Linq.IGrouping`2&quot; /&gt;.">用于将每个源元素映射到 <see cref="T:System.Linq.IGrouping`2" /> 中的元素的函数。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 返回的键的类型。</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the elements in the &lt;see cref=&quot;T:System.Linq.IGrouping`2&quot; /&gt;.">
        <see cref="T:System.Linq.IGrouping`2" /> 中元素的类型。</typeparam>
      <returns vsli:raw="A sequence of groups that are sorted descending according to &lt;paramref name=&quot;TKey&quot; /&gt;.">依照 <paramref name="TKey" /> 按降序排列的组序列。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="action" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Groups in parallel the elements of a sequence according to a key selector function. The keys are compared by using a comparer and each group's elements are projected by using a specified function.">根据键选择器函数对序列中的元素进行并行分组。 通过使用比较器对键进行比较，并且通过使用指定的函数对每个组的元素进行投影。</summary>
      <param name="source" vsli:raw="An OrderedParallelQuery{TSource}that contains elements to sort.">一个 OrderedParallelQuery{TSource}，包含要排序的元素。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">用于从元素中提取键的函数。</param>
      <param name="elementSelector" vsli:raw="A function to map each source element to an element in an IGrouping.">用于将每个源元素映射到 IGrouping 中的元素的函数。</param>
      <param name="comparer" vsli:raw="An IComparer{TSource} to compare keys.">一个用于比较键的 IComparer{TSource}。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 返回的键的类型。</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the elements in the IGrouping.">IGrouping 中的元素的类型</typeparam>
      <returns vsli:raw="A sequence of groups that are sorted descending according to &lt;paramref name=&quot;TKey&quot; /&gt;.">依照 <paramref name="TKey" /> 按降序排列的组序列。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="action" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})">
      <summary vsli:raw="Groups in parallel the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.">根据指定的键选择器函数对序列中的元素进行并行分组，并且从每个组及其键中创建结果值。</summary>
      <param name="source" vsli:raw="A sequence whose elements to group.">要对其元素进行分组的序列。</param>
      <param name="keySelector" vsli:raw="A function to extract the key for each element.">用于提取每个元素的键的函数。</param>
      <param name="resultSelector" vsli:raw="A function to create a result value from each group.">用于从每个组中创建结果值的函数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 返回的键的类型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result value returned by &lt;paramref name=&quot;resultSelector&quot; /&gt;.">
        <paramref name="resultSelector" /> 返回的结果值的类型。</typeparam>
      <returns vsli:raw="A sequence of elements of type &lt;paramref name=&quot;TResult&quot; /&gt; where each element represents a projection over a group and its key.">
        <paramref name="TResult" /> 类型的元素的序列，其中每个元素都表示对一个组及其键的投影。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="action" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Groups in parallel the elements of a sequence according to a specified key selector function and creates a result value from each group and its key. The keys are compared by using a specified comparer.">根据指定的键选择器函数对序列中的元素进行并行分组，并且从每个组及其键中创建结果值。 通过使用指定的比较器对键进行比较。</summary>
      <param name="source" vsli:raw="A sequence whose elements to group.">要对其元素进行分组的序列。</param>
      <param name="keySelector" vsli:raw="A function to extract the key for each element.">用于提取每个元素的键的函数。</param>
      <param name="resultSelector" vsli:raw="A function to create a result value from each group.">用于从每个组中创建结果值的函数。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare keys.">用于比较键的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 返回的键的类型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result value returned by &lt;paramref name=&quot;resultSelector&quot; /&gt;.">
        <paramref name="resultSelector" /> 返回的结果值的类型。</typeparam>
      <returns vsli:raw="A sequence of groups.">一个组序列。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="action" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
      <summary vsli:raw="Groups in parallel the elements of a sequence according to a specified key selector function and creates a result value from each group and its key. The elements of each group are projected by using a specified function.">根据指定的键选择器函数对序列中的元素进行并行分组，并且从每个组及其键中创建结果值。 通过使用指定的函数对每个组的元素进行投影。</summary>
      <param name="source" vsli:raw="A sequence whose elements to group.">要对其元素进行分组的序列。</param>
      <param name="keySelector" vsli:raw="A function to extract the key for each element.">用于提取每个元素的键的函数。</param>
      <param name="elementSelector" vsli:raw="A function to map each source element to an element in an IGrouping&amp;lt;TKey, TElement&amp;gt;.">用于将每个源元素映射到 IGrouping&lt;TKey, TElement&gt; 中的元素的函数。</param>
      <param name="resultSelector" vsli:raw="A function to create a result value from each group.">用于从每个组中创建结果值的函数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 返回的键的类型。</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the elements in each IGrouping{TKey, TElement}.">每个 IGrouping{TKey, TElement} 中的元素的类型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result value returned by &lt;paramref name=&quot;resultSelector&quot; /&gt;.">
        <paramref name="resultSelector" /> 返回的结果值的类型。</typeparam>
      <returns vsli:raw="A sequence of elements of type &lt;paramref name=&quot;TResult&quot; /&gt; where each element represents a projection over a group and its key.">
        <paramref name="TResult" /> 类型的元素的序列，其中每个元素都表示对一个组及其键的投影。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;elementSelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="action" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key. Key values are compared by using a specified comparer, and the elements of each group are projected by using a specified function.">根据指定的键选择器函数对序列中的元素进行分组，并且从每个组及其键中创建结果值。 通过使用指定的比较器对键值进行比较，并且通过使用指定的函数对每个组的元素进行投影。</summary>
      <param name="source" vsli:raw="A sequence whose elements to group.">要对其元素进行分组的序列。</param>
      <param name="keySelector" vsli:raw="A function to extract the key for each element.">用于提取每个元素的键的函数。</param>
      <param name="elementSelector" vsli:raw="A function to map each source element to an element in an IGrouping{Key, TElement}.">用于将每个源元素映射到 IGrouping{Key, TElement} 中的元素的函数。</param>
      <param name="resultSelector" vsli:raw="A function to create a result value from each group.">用于从每个组中创建结果值的函数。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare keys.">用于比较键的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 返回的键的类型。</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the elements in each IGrouping{TKey, TElement}.">每个 IGrouping{TKey, TElement} 中的元素的类型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result value returned by &lt;paramref name=&quot;resultSelector&quot; /&gt;.">
        <paramref name="resultSelector" /> 返回的结果值的类型。</typeparam>
      <returns vsli:raw="A sequence of elements of type &lt;paramref name=&quot;TResult&quot; /&gt; where each element represents a projection over a group and its key.">
        <paramref name="TResult" /> 类型的元素的序列，其中每个元素都表示对一个组及其键的投影。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;elementSelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="action" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
      <summary vsli:raw="This GroupJoin overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">切勿调用此 GroupJoin 重载。 此方法已标记为过时，调用此方法时总是会引发 <see cref="T:System.NotSupportedException" />。</summary>
      <param name="outer" vsli:raw="This parameter is not used.">未使用此参数。</param>
      <param name="inner" vsli:raw="This parameter is not used.">未使用此参数。</param>
      <param name="outerKeySelector" vsli:raw="This parameter is not used.">未使用此参数。</param>
      <param name="innerKeySelector" vsli:raw="This parameter is not used.">未使用此参数。</param>
      <param name="resultSelector" vsli:raw="This parameter is not used.">未使用此参数。</param>
      <typeparam name="TOuter" vsli:raw="This type parameter is not used.">未使用此类型参数。</typeparam>
      <typeparam name="TInner" vsli:raw="This type parameter is not used.">未使用此类型参数。</typeparam>
      <typeparam name="TKey" vsli:raw="This type parameter is not used.">未使用此类型参数。</typeparam>
      <typeparam name="TResult" vsli:raw="This type parameter is not used.">未使用此类型参数。</typeparam>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">此重载总是会引发 <see cref="T:System.NotSupportedException" />。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">调用此方法时发生的异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
      <summary vsli:raw="This GroupJoin overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">切勿调用此 GroupJoin 重载。 此方法已标记为过时，调用此方法时总是会引发 <see cref="T:System.NotSupportedException" />。</summary>
      <param name="outer" vsli:raw="This parameter is not used.">未使用此参数。</param>
      <param name="inner" vsli:raw="This parameter is not used.">未使用此参数。</param>
      <param name="outerKeySelector" vsli:raw="This parameter is not used.">未使用此参数。</param>
      <param name="innerKeySelector" vsli:raw="This parameter is not used.">未使用此参数。</param>
      <param name="resultSelector" vsli:raw="This parameter is not used.">未使用此参数。</param>
      <param name="comparer" vsli:raw="This parameter is not used.">未使用此参数。</param>
      <typeparam name="TOuter" vsli:raw="This type parameter is not used.">未使用此类型参数。</typeparam>
      <typeparam name="TInner" vsli:raw="This type parameter is not used.">未使用此类型参数。</typeparam>
      <typeparam name="TKey" vsli:raw="This type parameter is not used.">未使用此类型参数。</typeparam>
      <typeparam name="TResult" vsli:raw="This type parameter is not used.">未使用此类型参数。</typeparam>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">此重载总是会引发 <see cref="T:System.NotSupportedException" />。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">调用此方法时发生的异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
      <summary vsli:raw="Correlates in parallel the elements of two sequences based on equality of keys and groups the results. The default equality comparer is used to compare keys.">基于键相等对两个序列的元素进行并行关联并对结果进行分组。 使用默认的相等比较器对键进行比较。</summary>
      <param name="outer" vsli:raw="The first sequence to join.">要联接的第一个序列。</param>
      <param name="inner" vsli:raw="The sequence to join to the first sequence.">要与第一个序列联接的序列。</param>
      <param name="outerKeySelector" vsli:raw="A function to extract the join key from each element of the first sequence.">用于从第一个序列的每个元素提取联接键的函数。</param>
      <param name="innerKeySelector" vsli:raw="A function to extract the join key from each element of the second sequence.">用于从第二个序列的每个元素提取联接键的函数。</param>
      <param name="resultSelector" vsli:raw="A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.">用于从第一个序列的元素和第二个序列的匹配元素集合中创建结果元素的函数。</param>
      <typeparam name="TOuter" vsli:raw="The type of the elements of the first sequence.">第一个序列中的元素的类型。</typeparam>
      <typeparam name="TInner" vsli:raw="The type of the elements of the second sequence.">第二个序列中的元素的类型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the keys returned by the key selector functions.">键选择器函数返回的键的类型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result elements.">结果元素的类型。</typeparam>
      <returns vsli:raw="A sequence that has elements of type &lt;paramref name=&quot;TResult&quot; /&gt; that are obtained by performing a grouped join on two sequences.">一个序列，其中包含通过对两个序列执行分组联接获得的 <paramref name="TResult" /> 类型的元素。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; or &lt;paramref name=&quot;outer&quot; /&gt; or &lt;paramref name=&quot;inner&quot; /&gt; or &lt;paramref name=&quot;outerKeySelector&quot; /&gt; or &lt;paramref name=&quot;innerKeySelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="action" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
      <summary vsli:raw="Correlates in parallel the elements of two sequences based on key equality and groups the results. A specified &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; is used to compare keys.">基于键相等对两个序列的元素进行并行关联并对结果进行分组。 使用指定的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> 对键进行比较。</summary>
      <param name="outer" vsli:raw="The first sequence to join.">要联接的第一个序列。</param>
      <param name="inner" vsli:raw="The sequence to join to the first sequence.">要与第一个序列联接的序列。</param>
      <param name="outerKeySelector" vsli:raw="A function to extract the join key from each element of the first sequence.">用于从第一个序列的每个元素提取联接键的函数。</param>
      <param name="innerKeySelector" vsli:raw="A function to extract the join key from each element of the second sequence.">用于从第二个序列的每个元素提取联接键的函数。</param>
      <param name="resultSelector" vsli:raw="A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.">用于从第一个序列的元素和第二个序列的匹配元素集合中创建结果元素的函数。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to hash and compare keys.">用于对键进行哈希处理和比较的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TOuter" vsli:raw="The type of the elements of the first sequence.">第一个序列中的元素的类型。</typeparam>
      <typeparam name="TInner" vsli:raw="The type of the elements of the second sequence.">第二个序列中的元素的类型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the keys returned by the key selector functions.">键选择器函数返回的键的类型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result elements.">结果元素的类型。</typeparam>
      <returns vsli:raw="A sequence that has elements of type &lt;paramref name=&quot;TResult&quot; /&gt; that are obtained by performing a grouped join on two sequences.">一个序列，其中包含通过对两个序列执行分组联接获得的 <paramref name="TResult" /> 类型的元素。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; or &lt;paramref name=&quot;outer&quot; /&gt; or &lt;paramref name=&quot;inner&quot; /&gt; or &lt;paramref name=&quot;outerKeySelector&quot; /&gt; or &lt;paramref name=&quot;innerKeySelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="action" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="This Intersect overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">切勿调用此 Intersect 重载。 此方法已标记为过时，调用此方法时总是会引发 <see cref="T:System.NotSupportedException" />。</summary>
      <param name="first" vsli:raw="This parameter is not used.">未使用此参数。</param>
      <param name="second" vsli:raw="This parameter is not used.">未使用此参数。</param>
      <typeparam name="TSource" vsli:raw="This type parameter is not used.">未使用此类型参数。</typeparam>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">此重载总是会引发 <see cref="T:System.NotSupportedException" />。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">调用此方法时发生的异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="This Intersect overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">切勿调用此 Intersect 重载。 此方法已标记为过时，调用此方法时总是会引发 <see cref="T:System.NotSupportedException" />。</summary>
      <param name="first" vsli:raw="This parameter is not used.">未使用此参数。</param>
      <param name="second" vsli:raw="This parameter is not used.">未使用此参数。</param>
      <param name="comparer" vsli:raw="This parameter is not used.">未使用此参数。</param>
      <typeparam name="TSource" vsli:raw="This type parameter is not used.">未使用此类型参数。</typeparam>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">此重载总是会引发 <see cref="T:System.NotSupportedException" />。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">调用此方法时发生的异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Produces the set intersection of two parallel sequences by using the default equality comparer to compare values.">通过使用默认的相等比较器对值进行比较，生成两个并行序列的交集。</summary>
      <param name="first" vsli:raw="A sequence whose distinct elements that also appear in &lt;paramref name=&quot;second&quot; /&gt; will be returned.">一个序列，其中的同时出现在 <paramref name="second" /> 中的非重复元素将会返回。</param>
      <param name="second" vsli:raw="A sequence whose distinct elements that also appear in the first sequence will be returned.">一个序列，其中的同时出现在第一个序列中的非重复元素将被返回。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">输入序列中的元素的类型。</typeparam>
      <returns vsli:raw="A sequence that contains the elements that form the set intersection of two sequences.">包含组成两个序列交集的元素的序列。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="action" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="Produces the set intersection of two parallel sequences by using the specified IEqualityComparer{T} to compare values.">通过使用指定的 IEqualityComparer{T} 对值进行比较，生成两个并行序列的交集。</summary>
      <param name="first" vsli:raw="A sequence whose distinct elements that also appear in &lt;paramref name=&quot;second&quot; /&gt; will be returned.">一个序列，其中的同时出现在 <paramref name="second" /> 中的非重复元素将会返回。</param>
      <param name="second" vsli:raw="A sequence whose distinct elements that also appear in the first sequence will be returned.">一个序列，其中的同时出现在第一个序列中的非重复元素将被返回。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare values.">用于比较值的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">输入序列中的元素的类型。</typeparam>
      <returns vsli:raw="A sequence that contains the elements that form the set intersection of two sequences.">包含组成两个序列交集的元素的序列。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="action" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
      <summary vsli:raw="This Join overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when invoked.">切勿调用此 Join 重载。 此方法已标记为过时，调用此方法时总是会引发 <see cref="T:System.NotSupportedException" />。</summary>
      <param name="outer" vsli:raw="This parameter is not used.">未使用此参数。</param>
      <param name="inner" vsli:raw="This parameter is not used.">未使用此参数。</param>
      <param name="outerKeySelector" vsli:raw="This parameter is not used.">未使用此参数。</param>
      <param name="innerKeySelector" vsli:raw="This parameter is not used.">未使用此参数。</param>
      <param name="resultSelector" vsli:raw="This parameter is not used.">未使用此参数。</param>
      <typeparam name="TOuter" vsli:raw="This type parameter is not used.">未使用此类型参数。</typeparam>
      <typeparam name="TInner" vsli:raw="This type parameter is not used.">未使用此类型参数。</typeparam>
      <typeparam name="TKey" vsli:raw="This type parameter is not used.">未使用此类型参数。</typeparam>
      <typeparam name="TResult" vsli:raw="This type parameter is not used.">未使用此类型参数。</typeparam>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">此重载总是会引发 <see cref="T:System.NotSupportedException" />。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">调用此方法时发生的异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
      <summary vsli:raw="This Join overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when invoked.">切勿调用此 Join 重载。 此方法已标记为过时，调用此方法时总是会引发 <see cref="T:System.NotSupportedException" />。</summary>
      <param name="outer" vsli:raw="This parameter is not used.">未使用此参数。</param>
      <param name="inner" vsli:raw="This parameter is not used.">未使用此参数。</param>
      <param name="outerKeySelector" vsli:raw="This parameter is not used.">未使用此参数。</param>
      <param name="innerKeySelector" vsli:raw="This parameter is not used.">未使用此参数。</param>
      <param name="resultSelector" vsli:raw="This parameter is not used.">未使用此参数。</param>
      <param name="comparer" vsli:raw="This parameter is not used.">未使用此参数。</param>
      <typeparam name="TOuter" vsli:raw="This type parameter is not used.">未使用此类型参数。</typeparam>
      <typeparam name="TInner" vsli:raw="This type parameter is not used.">未使用此类型参数。</typeparam>
      <typeparam name="TKey" vsli:raw="This type parameter is not used.">未使用此类型参数。</typeparam>
      <typeparam name="TResult" vsli:raw="This type parameter is not used.">未使用此类型参数。</typeparam>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">此重载总是会引发 <see cref="T:System.NotSupportedException" />。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">调用此方法时发生的异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
      <summary vsli:raw="Correlates in parallel the elements of two sequences based on matching keys. The default equality comparer is used to compare keys.">基于匹配键对两个序列的元素进行并行关联。 使用默认的相等比较器对键进行比较。</summary>
      <param name="outer" vsli:raw="The first sequence to join.">要联接的第一个序列。</param>
      <param name="inner" vsli:raw="The sequence to join to the first sequence.">要与第一个序列联接的序列。</param>
      <param name="outerKeySelector" vsli:raw="A function to extract the join key from each element of the first sequence.">用于从第一个序列的每个元素提取联接键的函数。</param>
      <param name="innerKeySelector" vsli:raw="A function to extract the join key from each element of the second sequence.">用于从第二个序列的每个元素提取联接键的函数。</param>
      <param name="resultSelector" vsli:raw="A function to create a result element from two matching elements.">用于从两个匹配元素创建结果元素的函数。</param>
      <typeparam name="TOuter" vsli:raw="The type of the elements of the first sequence.">第一个序列中的元素的类型。</typeparam>
      <typeparam name="TInner" vsli:raw="The type of the elements of the second sequence.">第二个序列中的元素的类型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the keys returned by the key selector functions.">键选择器函数返回的键的类型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result elements.">结果元素的类型。</typeparam>
      <returns vsli:raw="A sequence that has elements of type &lt;paramref name=&quot;TResult&quot; /&gt; that are obtained by performing an inner join on two sequences.">一个序列，其中包含通过对两个序列执行内部联接获得的 <paramref name="TResult" /> 类型的元素。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; or &lt;paramref name=&quot;outer&quot; /&gt; or &lt;paramref name=&quot;inner&quot; /&gt; or &lt;paramref name=&quot;outerKeySelector&quot; /&gt; or &lt;paramref name=&quot;innerKeySelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="action" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
      <summary vsli:raw="Correlates in parallel the elements of two sequences based on matching keys. A specified &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; is used to compare keys.">基于匹配键对两个序列的元素进行并行关联。 使用指定的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> 对键进行比较。</summary>
      <param name="outer" vsli:raw="The first sequence to join.">要联接的第一个序列。</param>
      <param name="inner" vsli:raw="The sequence to join to the first sequence.">要与第一个序列联接的序列。</param>
      <param name="outerKeySelector" vsli:raw="A function to extract the join key from each element of the first sequence.">用于从第一个序列的每个元素提取联接键的函数。</param>
      <param name="innerKeySelector" vsli:raw="A function to extract the join key from each element of the second sequence.">用于从第二个序列的每个元素提取联接键的函数。</param>
      <param name="resultSelector" vsli:raw="A function to create a result element from two matching elements.">用于从两个匹配元素创建结果元素的函数。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to hash and compare keys.">用于对键进行哈希处理和比较的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TOuter" vsli:raw="The type of the elements of the first sequence.">第一个序列中的元素的类型。</typeparam>
      <typeparam name="TInner" vsli:raw="The type of the elements of the second sequence.">第二个序列中的元素的类型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the keys returned by the key selector functions.">键选择器函数返回的键的类型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result elements.">结果元素的类型。</typeparam>
      <returns vsli:raw="A sequence that has elements of type &lt;paramref name=&quot;TResult&quot; /&gt; that are obtained by performing an inner join on two sequences.">一个序列，其中包含通过对两个序列执行内部联接获得的 <paramref name="TResult" /> 类型的元素。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; or &lt;paramref name=&quot;outer&quot; /&gt; or &lt;paramref name=&quot;inner&quot; /&gt; or &lt;paramref name=&quot;outerKeySelector&quot; /&gt; or &lt;paramref name=&quot;innerKeySelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="action" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns the last element of a parallel sequence.">返回并行序列中的最后一个元素。</summary>
      <param name="source" vsli:raw="The sequence to return the last element from.">要从中返回最后一个元素的序列。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="The value at the last position in the source sequence.">源序列中最后位置处的值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 中不包含任何元素。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns the last element of a parallel sequence that satisfies a specified condition.">返回并行序列中满足指定条件的最后一个元素。</summary>
      <param name="source" vsli:raw="The sequence to return an element from.">要从中返回元素的序列。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">用于测试每个元素是否满足条件的函数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="The last element in the sequence that passes the test in the specified predicate function.">序列中通过指定谓词函数中的测试的最后一个元素。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="predicate" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="No element in &lt;paramref name=&quot;source&quot; /&gt; satisfies the condition in &lt;paramref name=&quot;predicate&quot; /&gt;.">
        <paramref name="source" /> 中没有元素满足 <paramref name="predicate" /> 中的条件。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns the last element of a parallel sequence, or a default value if the sequence contains no elements.">返回并行序列中的最后一个元素；如果该序列中不包含任何元素，则返回默认值。</summary>
      <param name="source" vsli:raw="The sequence to return an element from.">要从中返回元素的序列。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="default() if the source sequence is empty; otherwise, the last element in the sequence.">如果源序列为空，则返回 default()；否则返回该序列中的最后一个元素。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns the last element of a parallel sequence that satisfies a condition, or a default value if no such element is found.">返回并行序列中满足条件的最后一个元素；如果未找到这样的元素，则返回默认值。</summary>
      <param name="source" vsli:raw="The sequence to return an element from.">要从中返回元素的序列。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">用于测试每个元素是否满足条件的函数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="default() if the sequence is empty or if no elements pass the test in the predicate function; otherwise, the last element that passes the test in the predicate function.">如果序列为空或没有元素通过谓词函数中的测试，则返回 default()；否则，返回通过谓词函数中的测试的最后一个元素。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="predicate" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns an Int64 that represents the total number of elements in a parallel sequence.">返回一个 Int64，表示并行序列中的元素的总数。</summary>
      <param name="source" vsli:raw="A sequence that contains elements to be counted.">包含要计数的元素的序列。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="The number of elements in the input sequence.">输入序列中的元素数量。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The number of elements in source is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">源中的元素数大于 <see cref="F:System.Int64.MaxValue" />。 或评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The computed result is greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">计算结果大于 <see cref="F:System.Int64.MaxValue" />。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns an Int64 that represents how many elements in a parallel sequence satisfy a condition.">返回一个 Int64，表示并行序列中满足条件的元素的数量。</summary>
      <param name="source" vsli:raw="A sequence that contains elements to be counted.">包含要计数的元素的序列。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">用于测试每个元素是否满足条件的函数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="A number that represents how many elements in the sequence satisfy the condition in the predicate function.">一个数字，表示序列中满足谓词函数条件的元素数量。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="predicate" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The number of elements in source is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">源中的元素数大于 <see cref="F:System.Int64.MaxValue" />。 或评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The computed result is greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">计算结果大于 <see cref="F:System.Int64.MaxValue" />。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Decimal})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">返回值的并行序列中的最大值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">要确定其最大值的值序列。</param>
      <returns vsli:raw="The maximum value in the sequence.">序列中的最大值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 中不包含任何元素。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Double})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">返回值的并行序列中的最大值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">要确定其最大值的值序列。</param>
      <returns vsli:raw="The maximum value in the sequence.">序列中的最大值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 中不包含任何元素。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Int32})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">返回值的并行序列中的最大值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">要确定其最大值的值序列。</param>
      <returns vsli:raw="The maximum value in the sequence.">序列中的最大值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 中不包含任何元素。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Int64})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">返回值的并行序列中的最大值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">要确定其最大值的值序列。</param>
      <returns vsli:raw="The maximum value in the sequence.">序列中的最大值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 中不包含任何元素。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">返回值的并行序列中的最大值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">要确定其最大值的值序列。</param>
      <returns vsli:raw="The maximum value in the sequence.">序列中的最大值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 中不包含任何元素。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">返回值的并行序列中的最大值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">要确定其最大值的值序列。</param>
      <returns vsli:raw="The maximum value in the sequence.">序列中的最大值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 中不包含任何元素。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">返回值的并行序列中的最大值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">要确定其最大值的值序列。</param>
      <returns vsli:raw="The maximum value in the sequence.">序列中的最大值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 中不包含任何元素。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">返回值的并行序列中的最大值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">要确定其最大值的值序列。</param>
      <returns vsli:raw="The maximum value in the sequence.">序列中的最大值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 中不包含任何元素。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">返回值的并行序列中的最大值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">要确定其最大值的值序列。</param>
      <returns vsli:raw="The maximum value in the sequence.">序列中的最大值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 中不包含任何元素。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Single})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">返回值的并行序列中的最大值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">要确定其最大值的值序列。</param>
      <returns vsli:raw="The maximum value in the sequence.">序列中的最大值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 中不包含任何元素。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">返回值的并行序列中的最大值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">要确定其最大值的值序列。</param>
      <typeparam name="TSource" vsli:raw="The type of elements in the source sequence.">源序列中的元素的类型。</typeparam>
      <returns vsli:raw="The maximum value in the sequence.">序列中的最大值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> 不包含任何元素，且 <paramref name="TSource" /> 是不可为 null 的值类型。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">对一个序列中的每个元素并行调用转换函数，并返回最大值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">要确定其最大值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">应用于每个元素的转换函数。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="The maximum value in the sequence.">序列中的最大值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> 不包含任何元素，且 <paramref name="TSource" /> 是不可为 null 的值类型。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">对一个序列中的每个元素并行调用转换函数，并返回最大值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">要确定其最大值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">应用于每个元素的转换函数。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="The maximum value in the sequence.">序列中的最大值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> 不包含任何元素，且 <paramref name="TSource" /> 是不可为 null 的值类型。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">对一个序列中的每个元素并行调用转换函数，并返回最大值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">要确定其最大值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">应用于每个元素的转换函数。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="The maximum value in the sequence.">序列中的最大值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> 不包含任何元素，且 <paramref name="TSource" /> 是不可为 null 的值类型。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">对一个序列中的每个元素并行调用转换函数，并返回最大值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">要确定其最大值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">应用于每个元素的转换函数。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="The maximum value in the sequence.">序列中的最大值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> 不包含任何元素，且 <paramref name="TSource" /> 是不可为 null 的值类型。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">对一个序列中的每个元素并行调用转换函数，并返回最大值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">要确定其最大值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">应用于每个元素的转换函数。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="The maximum value in the sequence.">序列中的最大值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 中不包含任何元素。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">对一个序列中的每个元素并行调用转换函数，并返回最大值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">要确定其最大值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">应用于每个元素的转换函数。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="The maximum value in the sequence.">序列中的最大值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 中不包含任何元素。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">对一个序列中的每个元素并行调用转换函数，并返回最大值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">要确定其最大值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">应用于每个元素的转换函数。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="The maximum value in the sequence.">序列中的最大值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 中不包含任何元素。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">对一个序列中的每个元素并行调用转换函数，并返回最大值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">要确定其最大值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">应用于每个元素的转换函数。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="The maximum value in the sequence.">序列中的最大值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 中不包含任何元素。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">对一个序列中的每个元素并行调用转换函数，并返回最大值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">要确定其最大值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">应用于每个元素的转换函数。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="The maximum value in the sequence.">序列中的最大值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 中不包含任何元素。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">对一个序列中的每个元素并行调用转换函数，并返回最大值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">要确定其最大值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">应用于每个元素的转换函数。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="The maximum value in the sequence.">序列中的最大值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> 不包含任何元素，且 <paramref name="TSource" /> 是不可为 null 的值类型。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">对一个序列中的每个元素并行调用转换函数，并返回最大值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">要确定其最大值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">应用于每个元素的转换函数。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the value returned by &lt;paramref name=&quot;selector&quot; /&gt;.">
        <paramref name="selector" /> 返回的值的类型。</typeparam>
      <returns vsli:raw="The maximum value in the sequence.">序列中的最大值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> 不包含任何元素，且 <paramref name="TSource" /> 是不可为 null 的值类型。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Decimal})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">返回值的并行序列中的最小值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">要确定其最小值的值序列。</param>
      <returns vsli:raw="The minimum value in the sequence.">序列中的最小值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> 不包含任何元素，且 <paramref name="TSource" /> 是不可为 null 的值类型。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Double})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">返回值的并行序列中的最小值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">要确定其最小值的值序列。</param>
      <returns vsli:raw="The minimum value in the sequence.">序列中的最小值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> 不包含任何元素，且 <paramref name="TSource" /> 是不可为 null 的值类型。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Int32})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">返回值的并行序列中的最小值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">要确定其最小值的值序列。</param>
      <returns vsli:raw="The minimum value in the sequence.">序列中的最小值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> 不包含任何元素，且 <paramref name="TSource" /> 是不可为 null 的值类型。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Int64})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">返回值的并行序列中的最小值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">要确定其最小值的值序列。</param>
      <returns vsli:raw="The minimum value in the sequence.">序列中的最小值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> 不包含任何元素，且 <paramref name="TSource" /> 是不可为 null 的值类型。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">返回值的并行序列中的最小值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">要确定其最小值的值序列。</param>
      <returns vsli:raw="The minimum value in the sequence.">序列中的最小值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 中不包含任何元素。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">返回值的并行序列中的最小值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">要确定其最小值的值序列。</param>
      <returns vsli:raw="The minimum value in the sequence.">序列中的最小值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 中不包含任何元素。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">返回值的并行序列中的最小值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">要确定其最小值的值序列。</param>
      <returns vsli:raw="The minimum value in the sequence.">序列中的最小值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 中不包含任何元素。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">返回值的并行序列中的最小值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">要确定其最小值的值序列。</param>
      <returns vsli:raw="The minimum value in the sequence.">序列中的最小值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 中不包含任何元素。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">返回值的并行序列中的最小值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">要确定其最小值的值序列。</param>
      <returns vsli:raw="The minimum value in the sequence.">序列中的最小值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 中不包含任何元素。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Single})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">返回值的并行序列中的最小值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">要确定其最小值的值序列。</param>
      <returns vsli:raw="The minimum value in the sequence.">序列中的最小值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> 不包含任何元素，且 <paramref name="TSource" /> 是不可为 null 的值类型。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">返回值的并行序列中的最小值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">要确定其最小值的值序列。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="The minimum value in the sequence.">序列中的最小值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> 不包含任何元素，且 <paramref name="TSource" /> 是不可为 null 的值类型。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">对一个序列中的每个元素并行调用转换函数，并返回最小值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">要确定其最小值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">应用于每个元素的转换函数。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="The minimum value in the sequence.">序列中的最小值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> 不包含任何元素，且 <paramref name="TSource" /> 是不可为 null 的值类型。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">对一个序列中的每个元素并行调用转换函数，并返回最小值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">要确定其最小值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">应用于每个元素的转换函数。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="The minimum value in the sequence.">序列中的最小值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> 不包含任何元素，且 <paramref name="TSource" /> 是不可为 null 的值类型。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">对一个序列中的每个元素并行调用转换函数，并返回最小值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">要确定其最小值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">应用于每个元素的转换函数。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="The minimum value in the sequence.">序列中的最小值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> 不包含任何元素，且 <paramref name="TSource" /> 是不可为 null 的值类型。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">对一个序列中的每个元素并行调用转换函数，并返回最小值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">要确定其最小值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">应用于每个元素的转换函数。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="The minimum value in the sequence.">序列中的最小值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> 不包含任何元素，且 <paramref name="TSource" /> 是不可为 null 的值类型。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">对一个序列中的每个元素并行调用转换函数，并返回最小值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">要确定其最小值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">应用于每个元素的转换函数。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="The minimum value in the sequence.">序列中的最小值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 中不包含任何元素。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">对一个序列中的每个元素并行调用转换函数，并返回最小值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">要确定其最小值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">应用于每个元素的转换函数。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="The minimum value in the sequence.">序列中的最小值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 中不包含任何元素。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">对一个序列中的每个元素并行调用转换函数，并返回最小值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">要确定其最小值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">应用于每个元素的转换函数。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="The minimum value in the sequence.">序列中的最小值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 中不包含任何元素。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">对一个序列中的每个元素并行调用转换函数，并返回最小值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">要确定其最小值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">应用于每个元素的转换函数。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="The minimum value in the sequence.">序列中的最小值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 中不包含任何元素。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">对一个序列中的每个元素并行调用转换函数，并返回最小值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">要确定其最小值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">应用于每个元素的转换函数。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="The minimum value in the sequence.">序列中的最小值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 中不包含任何元素。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">对一个序列中的每个元素并行调用转换函数，并返回最小值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">要确定其最小值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">应用于每个元素的转换函数。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="The minimum value in the sequence.">序列中的最小值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> 不包含任何元素，且 <paramref name="TSource" /> 是不可为 null 的值类型。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">对一个序列中的每个元素并行调用转换函数，并返回最小值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">要确定其最小值的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">应用于每个元素的转换函数。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the value returned by &lt;paramref name=&quot;selector&quot; /&gt;.">
        <paramref name="selector" /> 返回的值的类型。</typeparam>
      <returns vsli:raw="The minimum value in the sequence.">序列中的最小值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> 不包含任何元素，且 <paramref name="TSource" /> 是不可为 null 的值类型。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.OfType``1(System.Linq.ParallelQuery)">
      <summary vsli:raw="Filters the elements of a ParallelQuery based on a specified type.">根据指定类型筛选 ParallelQuery 的元素。</summary>
      <param name="source" vsli:raw="The sequence with elements to filter.">具有要筛选元素的序列。</param>
      <typeparam name="TResult" vsli:raw="The type to filter the elements of the sequence on.">筛选序列元素所根据的类型。</typeparam>
      <returns vsli:raw="A sequence that contains elements from the input sequence filtered by type.">一个序列，其中包含按类型筛选的输入序列中的元素。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary vsli:raw="Sorts in parallel the elements of a sequence in ascending order according to a key.">根据键按升序对序列中的元素进行并行排序。</summary>
      <param name="source" vsli:raw="A sequence of values to order.">一个要排序的值序列。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">用于从元素中提取键的函数。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 返回的键的类型。</typeparam>
      <returns vsli:raw="An OrderedParallelQuery{TSource} whose elements are sorted according to a key.">其中的元素将根据某个键进行排序的 OrderedParallelQuery{TSource}。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="keySelector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Sorts in parallel the elements of a sequence in ascending order by using a specified comparer.">使用指定的比较器按升序对序列中的元素进行并行排序。</summary>
      <param name="source" vsli:raw="A sequence of values to order.">一个要排序的值序列。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">用于从元素中提取键的函数。</param>
      <param name="comparer" vsli:raw="An IComparer{TKey} to compare keys.">一个用于比较键的 IComparer{TKey}。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 返回的键的类型。</typeparam>
      <returns vsli:raw="An OrderedParallelQuery{TSource} whose elements are sorted according to a key.">其中的元素将根据某个键进行排序的 OrderedParallelQuery{TSource}。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="keySelector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary vsli:raw="Sorts in parallel the elements of a sequence in descending order according to a key.">根据键按降序对序列中的元素进行并行排序。</summary>
      <param name="source" vsli:raw="A sequence of values to order.">一个要排序的值序列。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">用于从元素中提取键的函数。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 返回的键的类型。</typeparam>
      <returns vsli:raw="An OrderedParallelQuery{TSource} whose elements are sorted descending according to a key.">一个 OrderedParallelQuery{TSource}，其元素将根据某个键按降序进行排序。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="keySelector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Sorts the elements of a sequence in descending order by using a specified comparer.">使用指定的比较器按降序对序列的元素排序。</summary>
      <param name="source" vsli:raw="A sequence of values to order.">一个要排序的值序列。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">用于从元素中提取键的函数。</param>
      <param name="comparer" vsli:raw="An IComparer{TKey} to compare keys.">一个用于比较键的 IComparer{TKey}。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 返回的键的类型。</typeparam>
      <returns vsli:raw="An OrderedParallelQuery{TSource} whose elements are sorted descending according to a key.">一个 OrderedParallelQuery{TSource}，其元素将根据某个键按降序进行排序。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;KeySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="KeySelector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Range(System.Int32,System.Int32)">
      <summary vsli:raw="Generates a parallel sequence of integral numbers within a specified range.">生成指定范围内的整数的并行序列。</summary>
      <param name="start" vsli:raw="The value of the first integer in the sequence.">序列中第一个整数的值。</param>
      <param name="count" vsli:raw="The number of sequential integers to generate.">要生成的顺序整数的数目。</param>
      <returns vsli:raw="An IEnumerable&amp;lt;Int32&amp;gt; in C# or IEnumerable(Of Int32) in Visual Basic that contains a range of sequential integral numbers.">C# 中的 IEnumerable&lt;Int32&gt; 或 Visual Basic 中的 IEnumerable(Of Int32)，其中包含某个范围的顺序整数。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than 0 -or- &lt;paramref name=&quot;start&quot; /&gt; + &lt;paramref name=&quot;count&quot; /&gt; - 1 is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">
        <paramref name="count" /> 小于 0 - 或 - <paramref name="start" /> + <paramref name="count" /> - 1 大于 <see cref="F:System.Int32.MaxValue" />。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Repeat``1(``0,System.Int32)">
      <summary vsli:raw="Generates a parallel sequence that contains one repeated value.">生成包含一个重复值的并行序列。</summary>
      <param name="element" vsli:raw="The value to be repeated.">要重复的值。</param>
      <param name="count" vsli:raw="The number of times to repeat the value in the generated sequence.">在生成序列中重复该值的次数。</param>
      <typeparam name="TResult" vsli:raw="The type of the value to be repeated in the result sequence.">要在结果序列中重复的值的类型。</typeparam>
      <returns vsli:raw="A sequence that contains a repeated value.">一个包含重复值的序列。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than 0.">
        <paramref name="count" /> 小于 0。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Reverse``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Inverts the order of the elements in a parallel sequence.">反转并行序列中元素的顺序。</summary>
      <param name="source" vsli:raw="A sequence of values to reverse.">要反转的值序列。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="A sequence whose elements correspond to those of the input sequence in reverse order.">一个序列，其元素以相反顺序对应于输入序列的元素。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary vsli:raw="Projects in parallel each element of a sequence into a new form.">将序列中的每个元素并行投影到新窗体中。</summary>
      <param name="source" vsli:raw="A sequence of values to invoke a transform function on.">一个值序列，要对该序列调用转换函数。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">应用于每个元素的转换函数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of elements returned by selector.">选择器返回的元素的类型。</typeparam>
      <returns vsli:raw="A sequence whose elements are the result of invoking the transform function on each element of &lt;paramref name=&quot;source&quot; /&gt;.">一个序列，其元素是对 <paramref name="source" /> 的每个元素调用转换函数的结果。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,``1})">
      <summary vsli:raw="Projects in parallel each element of a sequence into a new form by incorporating the element's index.">通过合并元素的索引，将序列的每个元素并行投影到新窗体中。</summary>
      <param name="source" vsli:raw="A sequence of values to invoke a transform function on.">一个值序列，要对该序列调用转换函数。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">应用于每个元素的转换函数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of elements returned by selector.">选择器返回的元素的类型。</typeparam>
      <returns vsli:raw="A sequence whose elements are the result of invoking the transform function on each element of &lt;paramref name=&quot;source&quot; /&gt;, based on the index supplied to &lt;paramref name=&quot;selector&quot; /&gt;.">一个序列，其元素是基于为 <paramref name="selector" /> 所提供索引对 <paramref name="source" /> 中每个元素调用转换函数的结果。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="More than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; elements are enumerated by the query. This condition might occur in streaming scenarios.">该查询枚举的元素超过了 <see cref="F:System.Int32.MaxValue" /> 个。 在流式处理方案中可能出现此情况。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})">
      <summary vsli:raw="Projects in parallel each element of a sequence to an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; and flattens the resulting sequences into one sequence.">将序列的每个元素以并行方式投影到 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 并将结果序列合并为一个序列。</summary>
      <param name="source" vsli:raw="A sequence of values to project.">一个要投影的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">应用于每个元素的转换函数。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the elements of the sequence returned by selector.">选择器返回的序列元素的类型。</typeparam>
      <returns vsli:raw="A sequence whose elements are the result of invoking the one-to-many transform function on each element of the input sequence.">一个序列，其元素是对输入序列的每个元素调用一对多转换函数的结果。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})">
      <summary vsli:raw="Projects in parallel each element of a sequence to an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt;, and flattens the resulting sequences into one sequence. The index of each source element is used in the projected form of that element.">将序列的每个元素以并行方式投影到 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 并将结果序列合并为一个序列。 每个源元素的索引用于该元素的投影表。</summary>
      <param name="source" vsli:raw="A sequence of values to project.">一个要投影的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">应用于每个元素的转换函数。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the elements of the sequence returned by selector.">选择器返回的序列元素的类型。</typeparam>
      <returns vsli:raw="A sequence whose elements are the result of invoking the one-to-many transform function on each element of the input sequence.">一个序列，其元素是对输入序列的每个元素调用一对多转换函数的结果。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="More than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; elements are enumerated by the query.">该查询枚举的元素超过了 <see cref="F:System.Int32.MaxValue" /> 个。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
      <summary vsli:raw="Projects each element of a sequence to an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt;, flattens the resulting sequences into one sequence, and invokes a result selector function on each element therein.">将序列的每个元素投影到 <see cref="T:System.Collections.Generic.IEnumerable`1" />，并将结果序列合并为一个序列，并对其中每个元素调用结果选择器函数。</summary>
      <param name="source" vsli:raw="A sequence of values to project.">一个要投影的值序列。</param>
      <param name="collectionSelector" vsli:raw="A transform function to apply to each source element; the second parameter of the function represents the index of the source element.">一个应用于每个源元素的转换函数；函数的第二个参数表示源元素的索引。</param>
      <param name="resultSelector" vsli:raw="A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.">用于从第一个序列的元素和第二个序列的匹配元素集合中创建结果元素的函数。</param>
      <typeparam name="TSource" vsli:raw="The type of the intermediate elements collected by &lt;paramref name=&quot;collectionSelector&quot; /&gt;.">
        <paramref name="collectionSelector" /> 收集的中间元素的类型。</typeparam>
      <typeparam name="TCollection" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of elements in the result sequence.">结果序列中的元素的类型。</typeparam>
      <returns vsli:raw="A sequence whose elements are the result of invoking the one-to-many transform function &lt;paramref name=&quot;collectionSelector&quot; /&gt; on each element of &lt;paramref name=&quot;source&quot; /&gt; based on the index supplied to &lt;paramref name=&quot;collectionSelector&quot; /&gt;, and then mapping each of those sequence elements and their corresponding source element to a result element.">一个序列，其元素是通过以下方法得到的：对基于提供给 <paramref name="collectionSelector" /> 的 <paramref name="source" /> 的每个元素调用一对多转换函数 <paramref name="collectionSelector" />，然后将这些序列元素中的每一个元素及其相应的源元素映射到一个结果元素。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="More than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; elements are enumerated by the query.">该查询枚举的元素超过了 <see cref="F:System.Int32.MaxValue" /> 个。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
      <summary vsli:raw="Projects each element of a sequence to an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt;, flattens the resulting sequences into one sequence, and invokes a result selector function on each element therein. The index of each source element is used in the intermediate projected form of that element.">将序列的每个元素投影到 <see cref="T:System.Collections.Generic.IEnumerable`1" />，并将结果序列合并为一个序列，并对其中每个元素调用结果选择器函数。 每个源元素的索引用于该元素的中间投影表。</summary>
      <param name="source" vsli:raw="A sequence of values to project.">一个要投影的值序列。</param>
      <param name="collectionSelector" vsli:raw="A transform function to apply to each source element; the second parameter of the function represents the index of the source element.">一个应用于每个源元素的转换函数；函数的第二个参数表示源元素的索引。</param>
      <param name="resultSelector" vsli:raw="A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.">用于从第一个序列的元素和第二个序列的匹配元素集合中创建结果元素的函数。</param>
      <typeparam name="TSource" vsli:raw="The type of the intermediate elements collected by &lt;paramref name=&quot;collectionSelector&quot; /&gt;.">
        <paramref name="collectionSelector" /> 收集的中间元素的类型。</typeparam>
      <typeparam name="TCollection" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of elements to return.">要返回的元素的类型。</typeparam>
      <returns vsli:raw="A sequence whose elements are the result of invoking the one-to-many transform function &lt;paramref name=&quot;collectionSelector&quot; /&gt; on each element of &lt;paramref name=&quot;source&quot; /&gt; based on the index supplied to &lt;paramref name=&quot;collectionSelector&quot; /&gt;, and then mapping each of those sequence elements and their corresponding source element to a result element.">一个序列，其元素是通过以下方法得到的：对基于提供给 <paramref name="collectionSelector" /> 的 <paramref name="source" /> 的每个元素调用一对多转换函数 <paramref name="collectionSelector" />，然后将这些序列元素中的每一个元素及其相应的源元素映射到一个结果元素。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="More than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; elements are enumerated by the query.">该查询枚举的元素超过了 <see cref="F:System.Int32.MaxValue" /> 个。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="This SequenceEqual overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">切勿调用此 SequenceEqual 重载。 此方法已标记为过时，调用此方法时总是会引发 <see cref="T:System.NotSupportedException" />。</summary>
      <param name="first" vsli:raw="This parameter is not used.">未使用此参数。</param>
      <param name="second" vsli:raw="This parameter is not used.">未使用此参数。</param>
      <typeparam name="TSource" vsli:raw="This type parameter is not used.">未使用此类型参数。</typeparam>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">此重载总是会引发 <see cref="T:System.NotSupportedException" />。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Thrown every time this method is called.">每次调用此方法时引发。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="This SequenceEqual overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">切勿调用此 SequenceEqual 重载。 此方法已标记为过时，调用此方法时总是会引发 <see cref="T:System.NotSupportedException" />。</summary>
      <param name="first" vsli:raw="This parameter is not used.">未使用此参数。</param>
      <param name="second" vsli:raw="This parameter is not used.">未使用此参数。</param>
      <param name="comparer" vsli:raw="This parameter is not used.">未使用此参数。</param>
      <typeparam name="TSource" vsli:raw="This type parameter is not used.">未使用此类型参数。</typeparam>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">此重载总是会引发 <see cref="T:System.NotSupportedException" />。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Thrown every time this method is called.">每次调用此方法时引发。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Determines whether two parallel sequences are equal by comparing the elements by using the default equality comparer for their type.">通过使用相应类型的默认相等比较器对序列的元素进行比较，以确定两个并行序列是否相等。</summary>
      <param name="first" vsli:raw="A sequence to compare to second.">要与第二个序列进行比较的序列。</param>
      <param name="second" vsli:raw="A sequence to compare to the first input sequence.">要与第一个输入序列进行比较的序列。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">输入序列中的元素的类型。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two source sequences are of equal length and their corresponding elements are equal according to the default equality comparer for their type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果根据相应类型的默认相等比较器，两个源序列的长度相等，且其相应元素相等，则为 true；否则为 false。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;first&quot; /&gt; or &lt;paramref name=&quot;second&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="first" /> 或 <paramref name="second" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="Determines whether two parallel sequences are equal by comparing their elements by using a specified IEqualityComparer{T}.">使用指定的 IEqualityComparer{T} 对两个并行序列的元素进行比较，以确定这两个序列是否相等。</summary>
      <param name="first" vsli:raw="A sequence to compare to &lt;paramref name=&quot;second&quot; /&gt;.">要与 <paramref name="second" /> 进行比较的序列。</param>
      <param name="second" vsli:raw="A sequence to compare to the first input sequence.">要与第一个输入序列进行比较的序列。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to use to compare elements.">用于比较元素的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">输入序列中的元素的类型。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two source sequences are of equal length and their corresponding elements are equal according to the default equality comparer for their type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果根据相应类型的默认相等比较器，两个源序列的长度相等，且其相应元素相等，则为 true；否则为 false。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;first&quot; /&gt; or &lt;paramref name=&quot;second&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="first" /> 或 <paramref name="second" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns the only element of a parallel sequence, and throws an exception if there is not exactly one element in the sequence.">返回并行序列的唯一元素；如果该序列并非恰好包含一个元素，则会引发异常。</summary>
      <param name="source" vsli:raw="The sequence to return the single element of.">要返回其单个元素的序列。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="The single element of the input sequence.">输入序列的单个元素。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The input sequence contains more than one element. -or- The input sequence is empty.">输入序列包含多个元素。 - 或 - 输入序列为空。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns the only element of a parallel sequence that satisfies a specified condition, and throws an exception if more than one such element exists.">返回并行序列中满足指定条件的唯一元素；如果有多个这样的元素存在，则会引发异常。</summary>
      <param name="source" vsli:raw="The sequence to return the single element of.">要返回其单个元素的序列。</param>
      <param name="predicate" vsli:raw="A function to test an element for a condition.">用于测试元素是否满足条件的函数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="The single element of the input sequence that satisfies a condition.">输入序列中满足条件的单个元素。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="predicate" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="No element satisfies the condition in &lt;paramref name=&quot;predicate&quot; /&gt;. -or- More than one element satisfies the condition in &lt;paramref name=&quot;predicate&quot; /&gt;.">元素均不满足 <paramref name="predicate" /> 中的条件。 -或- 多个元素满足 <paramref name="predicate" /> 中的条件。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns the only element of a parallel sequence, or a default value if the sequence is empty; this method throws an exception if there is more than one element in the sequence.">返回并行序列中的唯一元素；如果该序列为空，则返回默认值；如果该序列包含多个元素，此方法将引发异常。</summary>
      <param name="source" vsli:raw="The sequence to return the single element of.">要返回其单个元素的序列。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="The single element of the input sequence, or default() if the sequence contains no elements.">返回输入序列的单个元素；如果序列不包含任何元素，则返回 default()。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; has more than one element.">
        <paramref name="source" /> 具有多个元素。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns the only element of a parallel sequence that satisfies a specified condition or a default value if no such element exists; this method throws an exception if more than one element satisfies the condition.">返回并行序列中满足指定条件的唯一元素；如果这类元素不存在，则返回默认值；如果有多个元素满足该条件，此方法将引发异常。</summary>
      <param name="source" vsli:raw="The sequence to return the single element of.">要返回其单个元素的序列。</param>
      <param name="predicate" vsli:raw="A function to test an element for a condition.">用于测试元素是否满足条件的函数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="The single element of the input sequence that satisfies the condition, or default() if no such element is found.">输入序列中满足条件的单个元素，如果未找到这样的元素，则为 default()。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="predicate" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is empty or multiple elements are returned.">
        <paramref name="source" /> 是空的，或者返回了多个元素。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Skip``1(System.Linq.ParallelQuery{``0},System.Int32)">
      <summary vsli:raw="Bypasses a specified number of elements in a parallel sequence and then returns the remaining elements.">跳过并行序列中指定数量的元素，然后返回剩余的元素。</summary>
      <param name="source" vsli:raw="The sequence to return elements from.">要从其返回元素的序列。</param>
      <param name="count" vsli:raw="The number of elements to skip before returning the remaining elements.">返回剩余元素前要跳过的元素数量。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="A sequence that contains the elements that occur after the specified index in the input sequence.">一个序列，其中包含输入序列中的指定索引后出现的元素。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="Count is greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;">计数比 <see cref="F:System.Int32.MaxValue" /> 大</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Bypasses elements in a parallel sequence as long as a specified condition is true and then returns the remaining elements.">跳过并行序列中满足指定条件的任何元素，然后返回剩余元素。</summary>
      <param name="source" vsli:raw="The sequence to return elements from.">要从其返回元素的序列。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">用于测试每个元素是否满足条件的函数。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="A sequence that contains the elements from the input sequence starting at the first element in the linear series that does not pass the test specified by predicate.">一个序列，它包含输入序列中从没有通过谓词指定的测试的线性系列中第一个元素开始的元素。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="predicate" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
      <summary vsli:raw="Bypasses elements in a parallel sequence as long as a specified condition is true and then returns the remaining elements. The element's index is used in the logic of the predicate function.">跳过并行序列中满足指定条件的任何元素，然后返回剩余元素。 将在谓词函数的逻辑中使用元素的索引。</summary>
      <param name="source" vsli:raw="The sequence to return elements from.">要从其返回元素的序列。</param>
      <param name="predicate" vsli:raw="A function to test each source element for a condition; the second parameter of the function represents the index of the source element.">用于测试每个源元素是否满足条件的函数；该函数的第二个参数表示源元素的索引。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="A sequence that contains the elements from the input sequence starting at the first element in the linear series that does not pass the test specified by predicate.">一个序列，它包含输入序列中从没有通过谓词指定的测试的线性系列中第一个元素开始的元素。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="predicate" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="More than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; elements are enumerated by the query.">该查询枚举的元素超过了 <see cref="F:System.Int32.MaxValue" /> 个。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Decimal})">
      <summary vsli:raw="Computes in parallel the sum of a sequence of values.">并行计算一个值序列的和。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">一个要对其求和的值序列。</param>
      <returns vsli:raw="The sum of the projected values in the sequence.">序列中投影值的总和。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Decimal.MaxValue&quot;&gt;Decimal.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">和大于 <see cref="F:System.Decimal.MaxValue" />。 或评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Double})">
      <summary vsli:raw="Computes in parallel the sum of a sequence of values.">并行计算一个值序列的和。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">一个要对其求和的值序列。</param>
      <returns vsli:raw="The sum of the projected values in the sequence.">序列中投影值的总和。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Double.MaxValue&quot;&gt;Double.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">和大于 <see cref="F:System.Double.MaxValue" />。 或评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Int32})">
      <summary vsli:raw="Computes in parallel the sum of a sequence of values.">并行计算一个值序列的和。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">一个要对其求和的值序列。</param>
      <returns vsli:raw="The sum of the projected values in the sequence.">序列中投影值的总和。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">和大于 <see cref="F:System.Int32.MaxValue" />。 或评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Int64})">
      <summary vsli:raw="Computes in parallel the sum of a sequence of values.">并行计算一个值序列的和。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">一个要对其求和的值序列。</param>
      <returns vsli:raw="The sum of the projected values in the sequence.">序列中投影值的总和。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">和大于 <see cref="F:System.Int64.MaxValue" />。 或评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
      <summary vsli:raw="Computes in parallel the sum of a sequence of values.">并行计算一个值序列的和。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">一个要对其求和的值序列。</param>
      <returns vsli:raw="The sum of the projected values in the sequence.">序列中投影值的总和。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Decimal.MaxValue&quot;&gt;Decimal.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">和大于 <see cref="F:System.Decimal.MaxValue" />。 或评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
      <summary vsli:raw="Computes in parallel the sum of a sequence of values.">并行计算一个值序列的和。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">一个要对其求和的值序列。</param>
      <returns vsli:raw="The sum of the projected values in the sequence.">序列中投影值的总和。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Double.MaxValue&quot;&gt;Double.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">和大于 <see cref="F:System.Double.MaxValue" />。 或评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
      <summary vsli:raw="Computes in parallel the sum of a sequence of values.">并行计算一个值序列的和。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">一个要对其求和的值序列。</param>
      <returns vsli:raw="The sum of the projected values in the sequence.">序列中投影值的总和。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">和大于 <see cref="F:System.Int32.MaxValue" />。 或评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
      <summary vsli:raw="Computes in parallel the sum of a sequence of values.">并行计算一个值序列的和。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">一个要对其求和的值序列。</param>
      <returns vsli:raw="The sum of the projected values in the sequence.">序列中投影值的总和。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">和大于 <see cref="F:System.Int64.MaxValue" />。 或评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
      <summary vsli:raw="Computes in parallel the sum of a sequence of values.">并行计算一个值序列的和。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">一个要对其求和的值序列。</param>
      <returns vsli:raw="The sum of the projected values in the sequence.">序列中投影值的总和。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Single.MaxValue&quot;&gt;Single.MaxValue&lt;/see&gt;. -or-  One or more exceptions occurred during the evaluation of the query.">和大于 <see cref="F:System.Single.MaxValue" />。 - 或 - 在查询的评估过程中出现了一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Single})">
      <summary vsli:raw="Computes in parallel the sum of a sequence of values.">并行计算一个值序列的和。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">一个要对其求和的值序列。</param>
      <returns vsli:raw="The sum of the projected values in the sequence.">序列中投影值的总和。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Single.MaxValue&quot;&gt;Single.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">和大于 <see cref="F:System.Single.MaxValue" />。 或评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
      <summary vsli:raw="Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.">并行计算一个值序列的和，这些值可通过对输入序列的每个元素调用转换函数获得。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">一个要对其求和的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">应用于每个元素的转换函数。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="The sum of the projected values in the sequence.">序列中投影值的总和。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Decimal.MaxValue&quot;&gt;Decimal.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">和大于 <see cref="F:System.Decimal.MaxValue" />。 或评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
      <summary vsli:raw="Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.">并行计算一个值序列的和，这些值可通过对输入序列的每个元素调用转换函数获得。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">一个要对其求和的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">应用于每个元素的转换函数。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="The sum of the projected values in the sequence.">序列中投影值的总和。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Double.MaxValue&quot;&gt;Double.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">和大于 <see cref="F:System.Double.MaxValue" />。 或评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
      <summary vsli:raw="Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.">并行计算一个值序列的和，这些值可通过对输入序列的每个元素调用转换函数获得。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">一个要对其求和的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">应用于每个元素的转换函数。</param>
      <typeparam name="TSource" vsli:raw="The type of elements in the source sequence.">源序列中的元素的类型。</typeparam>
      <returns vsli:raw="The sum of the projected values in the sequence.">序列中投影值的总和。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">和大于 <see cref="F:System.Int32.MaxValue" />。 或评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
      <summary vsli:raw="Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.">并行计算一个值序列的和，这些值可通过对输入序列的每个元素调用转换函数获得。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">一个要对其求和的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">应用于每个元素的转换函数。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="The sum of the projected values in the sequence.">序列中投影值的总和。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">和大于 <see cref="F:System.Int64.MaxValue" />。 或评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
      <summary vsli:raw="Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.">并行计算一个值序列的和，这些值可通过对输入序列的每个元素调用转换函数获得。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">一个要对其求和的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">应用于每个元素的转换函数。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="The sum of the projected values in the sequence.">序列中投影值的总和。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Decimal.MaxValue&quot;&gt;Decimal.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">和大于 <see cref="F:System.Decimal.MaxValue" />。 或评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
      <summary vsli:raw="Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.">并行计算一个值序列的和，这些值可通过对输入序列的每个元素调用转换函数获得。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">一个要对其求和的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">应用于每个元素的转换函数。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="The sum of the projected values in the sequence.">序列中投影值的总和。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Double.MaxValue&quot;&gt;Double.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">和大于 <see cref="F:System.Double.MaxValue" />。 或评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
      <summary vsli:raw="Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.">并行计算一个值序列的和，这些值可通过对输入序列的每个元素调用转换函数获得。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">一个要对其求和的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">应用于每个元素的转换函数。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="The sum of the projected values in the sequence.">序列中投影值的总和。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">和大于 <see cref="F:System.Int32.MaxValue" />。 或评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
      <summary vsli:raw="Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.">并行计算一个值序列的和，这些值可通过对输入序列的每个元素调用转换函数获得。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">一个要对其求和的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">应用于每个元素的转换函数。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="The sum of the projected values in the sequence.">序列中投影值的总和。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">和大于 <see cref="F:System.Int64.MaxValue" />。 或评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
      <summary vsli:raw="Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.">并行计算一个值序列的和，这些值可通过对输入序列的每个元素调用转换函数获得。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">一个要对其求和的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">应用于每个元素的转换函数。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="The sum of the projected values in the sequence.">序列中投影值的总和。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Single.MaxValue&quot;&gt;Single.MaxValue&lt;/see&gt;. -or-  One or more exceptions occurred during the evaluation of the query.">和大于 <see cref="F:System.Single.MaxValue" />。 - 或 - 在查询的评估过程中出现了一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
      <summary vsli:raw="Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.">并行计算一个值序列的和，这些值可通过对输入序列的每个元素调用转换函数获得。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">一个要对其求和的值序列。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">应用于每个元素的转换函数。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="The sum of the projected values in the sequence.">序列中投影值的总和。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Single.MaxValue&quot;&gt;Single.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">和大于 <see cref="F:System.Single.MaxValue" />。 或评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Take``1(System.Linq.ParallelQuery{``0},System.Int32)">
      <summary vsli:raw="Returns a specified number of contiguous elements from the start of a parallel sequence.">从并行序列的开头返回指定数量的连续元素。</summary>
      <param name="source" vsli:raw="The sequence to return elements from.">要从其返回元素的序列。</param>
      <param name="count" vsli:raw="The number of elements to return.">要返回的元素数量。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="A sequence that contains the specified number of elements from the start of the input sequence.">一个序列，其中包含从输入序列开始处起的指定数量的元素。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns elements from a parallel sequence as long as a specified condition is true.">只要指定的条件为 true，就会返回并行序列的元素。</summary>
      <param name="source" vsli:raw="The sequence to return elements from.">要从其返回元素的序列。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">用于测试每个元素是否满足条件的函数。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="A sequence that contains the elements from the input sequence that occur before the element at which the test no longer passes.">一个序列，它包含输入序列中出现在无法再通过测试的元素之前的元素。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="predicate" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
      <summary vsli:raw="Returns elements from a parallel sequence as long as a specified condition is true. The element's index is used in the logic of the predicate function.">只要指定的条件为 true，就会返回并行序列的元素。 将在谓词函数的逻辑中使用元素的索引。</summary>
      <param name="source" vsli:raw="The sequence to return elements from.">要从其返回元素的序列。</param>
      <param name="predicate" vsli:raw="A function to test each source element for a condition; the second parameter of the function represents the index of the source element.">用于测试每个源元素是否满足条件的函数；该函数的第二个参数表示源元素的索引。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="A sequence that contains elements from the input sequence that occur before the element at which the test no longer passes.">一个序列，它包含输入序列中出现在无法再通过测试的元素之前的元素。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="predicate" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="More than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; elements are enumerated by this query.">超过 <see cref="F:System.Int32.MaxValue" /> 个元素都是用这个查询枚举的。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
      <summary vsli:raw="Performs in parallel a subsequent ordering of the elements in a sequence in ascending order according to a key.">根据某个键按升序对序列中的元素并行执行后续排序。</summary>
      <param name="source" vsli:raw="An OrderedParallelQuery{TSource} that contains elements to sort.">一个 OrderedParallelQuery{TSource}，包含要排序的元素。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">用于从元素中提取键的函数。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 返回的键的类型。</typeparam>
      <returns vsli:raw="An OrderedParallelQuery{TSource} whose elements are sorted according to a key.">其中的元素将根据某个键进行排序的 OrderedParallelQuery{TSource}。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="keySelector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Performs in parallel a subsequent ordering of the elements in a sequence in ascending order by using a specified comparer.">使用指定的比较器按升序对序列中的元素并行执行后续排序。</summary>
      <param name="source" vsli:raw="An OrderedParallelQuery{TSource} that contains elements to sort.">一个 OrderedParallelQuery{TSource}，包含要排序的元素。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">用于从元素中提取键的函数。</param>
      <param name="comparer" vsli:raw="An IComparer{TKey} to compare keys.">一个用于比较键的 IComparer{TKey}。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 返回的键的类型。</typeparam>
      <returns vsli:raw="An OrderedParallelQuery{TSource} whose elements are sorted according to a key.">其中的元素将根据某个键进行排序的 OrderedParallelQuery{TSource}。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="keySelector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
      <summary vsli:raw="Performs in parallel a subsequent ordering of the elements in a sequence in descending order, according to a key.">根据某个键按降序对序列中的元素并行执行后续排序。</summary>
      <param name="source" vsli:raw="An OrderedParallelQuery{TSource} that contains elements to sort.">一个 OrderedParallelQuery{TSource}，包含要排序的元素。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">用于从元素中提取键的函数。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 返回的键的类型。</typeparam>
      <returns vsli:raw="A sequence whose elements are sorted descending according to a key.">一个序列，将根据键按降序对其元素进行排序。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="keySelector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Performs in parallel a subsequent ordering of the elements in a sequence in descending order by using a specified comparer.">使用指定的比较器按降序对序列中的元素并行执行后续排序。</summary>
      <param name="source" vsli:raw="An OrderedParallelQuery{TSource} that contains elements to sort.">一个 OrderedParallelQuery{TSource}，包含要排序的元素。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">用于从元素中提取键的函数。</param>
      <param name="comparer" vsli:raw="An IComparer{TKey} to compare keys.">一个用于比较键的 IComparer{TKey}。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 返回的键的类型。</typeparam>
      <returns vsli:raw="A sequence whose elements are sorted descending according to a key.">一个序列，将根据键按降序对其元素进行排序。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="keySelector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToArray``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Creates an array from a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt;.">从 <see cref="T:System.Linq.ParallelQuery`1" /> 中创建数组。</summary>
      <param name="source" vsli:raw="A sequence to create an array from.">要从其中创建数组的序列。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="An array that contains the elements from the input sequence.">一个包含输入序列中的元素的数组。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; from a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; according to a specified key selector function.">根据指定的键选择器函数，从 <see cref="T:System.Collections.Generic.Dictionary`2" /> 创建一个 <see cref="T:System.Linq.ParallelQuery`1" />。</summary>
      <param name="source" vsli:raw="A sequence to create a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; from.">据其创建 <see cref="T:System.Collections.Generic.Dictionary`2" /> 的序列。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">用于从每个元素中提取键的函数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 返回的键的类型。</typeparam>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; that contains keys and values.">一个包含键和值的 <see cref="T:System.Collections.Generic.Dictionary`2" />。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="keySelector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="&lt;paramref name=&quot;keySelector&quot; /&gt; produces a key that is a null reference (Nothing in Visual Basic). -or- &lt;paramref name=&quot;keySelector&quot; /&gt; produces duplicate keys for two elements. -or- One or more exceptions occurred during the evaluation of the query.">
        <paramref name="keySelector" /> 生成一个为 null 引用的键（在 Visual Basic 中为 Nothing）。 - 或 - <paramref name="keySelector" /> 为两个元素产生了重复键。 或评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; from a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; according to a specified key selector function and key comparer.">根据指定的键选择器函数和键比较器，从 <see cref="T:System.Linq.ParallelQuery`1" /> 创建一个 <see cref="T:System.Collections.Generic.Dictionary`2" />。</summary>
      <param name="source" vsli:raw="A sequence to create a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; from.">据其创建 <see cref="T:System.Collections.Generic.Dictionary`2" /> 的序列。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">用于从每个元素中提取键的函数。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare keys.">用于比较键的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 返回的键的类型。</typeparam>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; that contains keys and values.">一个包含键和值的 <see cref="T:System.Collections.Generic.Dictionary`2" />。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="keySelector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="&lt;paramref name=&quot;keySelector&quot; /&gt; produces a key that is a null reference (Nothing in Visual Basic). -or- &lt;paramref name=&quot;keySelector&quot; /&gt; produces duplicate keys for two elements. -or- One or more exceptions occurred during the evaluation of the query.">
        <paramref name="keySelector" /> 生成一个为 null 引用的键（在 Visual Basic 中为 Nothing）。 - 或 - <paramref name="keySelector" /> 为两个元素产生了重复键。 或评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; from a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; according to specified key selector and element selector functions.">根据指定的键选择器和元素选择器函数，从 <see cref="T:System.Collections.Generic.Dictionary`2" /> 创建一个 <see cref="T:System.Linq.ParallelQuery`1" />。</summary>
      <param name="source" vsli:raw="A sequence to create a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; from.">据其创建 <see cref="T:System.Collections.Generic.Dictionary`2" /> 的序列。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">用于从每个元素中提取键的函数。</param>
      <param name="elementSelector" vsli:raw="A transform function to produce a result element value from each element.">用于从每个元素产生结果元素值的转换函数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 返回的键的类型。</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the value returned by &lt;paramref name=&quot;elementSelector&quot; /&gt;.">
        <paramref name="elementSelector" /> 返回的值的类型。</typeparam>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; that contains values of type &lt;paramref name=&quot;TElement&quot; /&gt; selected from the input sequence.">一个 <see cref="T:System.Collections.Generic.Dictionary`2" />，包含从输入序列中选择的类型为 <paramref name="TElement" /> 的值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;elementSelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="keySelector" /> 或 <paramref name="elementSelector" /> 是 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="&lt;paramref name=&quot;keySelector&quot; /&gt; produces a key that is a null reference (Nothing in Visual Basic). -or- &lt;paramref name=&quot;keySelector&quot; /&gt; produces duplicate keys for two elements. -or- One or more exceptions occurred during the evaluation of the query.">
        <paramref name="keySelector" /> 生成一个为 null 引用的键（在 Visual Basic 中为 Nothing）。 - 或 - <paramref name="keySelector" /> 为两个元素产生了重复键。 或评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; from a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; according to a specified key selector function, a comparer, and an element selector function.">根据指定的键选择器函数、比较器和元素选择器函数，从 <see cref="T:System.Collections.Generic.Dictionary`2" /> 创建一个 <see cref="T:System.Linq.ParallelQuery`1" />。</summary>
      <param name="source" vsli:raw="A sequence to create a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; from.">据其创建 <see cref="T:System.Collections.Generic.Dictionary`2" /> 的序列。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">用于从每个元素中提取键的函数。</param>
      <param name="elementSelector" vsli:raw="A transform function to produce a result element value from each element.">用于从每个元素产生结果元素值的转换函数。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare keys.">用于比较键的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 返回的键的类型。</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the value returned by &lt;paramref name=&quot;elementSelector&quot; /&gt;.">
        <paramref name="elementSelector" /> 返回的值的类型。</typeparam>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; that contains values of type &lt;paramref name=&quot;TElement&quot; /&gt; selected from the input sequence.">一个 <see cref="T:System.Collections.Generic.Dictionary`2" />，包含从输入序列中选择的类型为 <paramref name="TElement" /> 的值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;elementSelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="keySelector" /> 或 <paramref name="elementSelector" /> 是 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="&lt;paramref name=&quot;keySelector&quot; /&gt; produces a key that is a null reference (Nothing in Visual Basic). -or- &lt;paramref name=&quot;keySelector&quot; /&gt; produces duplicate keys for two elements. -or- One or more exceptions occurred during the evaluation of the query.">
        <paramref name="keySelector" /> 生成一个为 null 引用的键（在 Visual Basic 中为 Nothing）。 - 或 - <paramref name="keySelector" /> 为两个元素产生了重复键。 或评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToList``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; from an &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt;.">从 <see cref="T:System.Linq.ParallelQuery`1" /> 创建一个 <see cref="T:System.Collections.Generic.List`1" />。</summary>
      <param name="source" vsli:raw="A sequence to create a &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; from.">据其创建 <see cref="T:System.Collections.Generic.List`1" /> 的序列。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; that contains elements from the input sequence.">一个包含输入序列中的元素的 <see cref="T:System.Collections.Generic.List`1" />。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; from a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; according to a specified key selector function.">根据指定的键选择器函数，从 <see cref="T:System.Linq.ILookup`2" /> 创建一个 <see cref="T:System.Linq.ParallelQuery`1" />。</summary>
      <param name="source" vsli:raw="The sequence to create a &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; from.">据其创建 <see cref="T:System.Linq.ILookup`2" /> 的序列。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">用于从每个元素中提取键的函数。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 返回的键的类型。</typeparam>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; that contains keys and values.">一个包含键和值的 <see cref="T:System.Linq.ILookup`2" />。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="keySelector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; from a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; according to a specified key selector function and key comparer.">根据指定的键选择器函数和键比较器，从 <see cref="T:System.Linq.ILookup`2" /> 创建一个 <see cref="T:System.Linq.ParallelQuery`1" />。</summary>
      <param name="source" vsli:raw="The sequence to create a &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; from.">据其创建 <see cref="T:System.Linq.ILookup`2" /> 的序列。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">用于从每个元素中提取键的函数。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare keys.">用于比较键的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 返回的键的类型。</typeparam>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; that contains keys and values.">一个包含键和值的 <see cref="T:System.Linq.ILookup`2" />。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="keySelector" /> 是 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; from a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; according to specified key selector and element selector functions.">根据指定的键选择器和元素选择器函数，从 <see cref="T:System.Linq.ILookup`2" /> 创建一个 <see cref="T:System.Linq.ParallelQuery`1" />。</summary>
      <param name="source" vsli:raw="The sequence to create a &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; from.">据其创建 <see cref="T:System.Linq.ILookup`2" /> 的序列。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">用于从每个元素中提取键的函数。</param>
      <param name="elementSelector" vsli:raw="A transform function to produce a result element value from each element.">用于从每个元素产生结果元素值的转换函数。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 返回的键的类型。</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the value returned by &lt;paramref name=&quot;elementSelector&quot; /&gt;.">
        <paramref name="elementSelector" /> 返回的值的类型。</typeparam>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; that contains values of type &lt;paramref name=&quot;TElement&quot; /&gt; selected from the input sequence.">一个包含从输入序列中选择的类型为 <paramref name="TElement" /> 的值的 <see cref="T:System.Linq.ILookup`2" />。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;elementSelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="keySelector" /> 或 <paramref name="elementSelector" /> 是 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; from a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; according to a specified key selector function, a comparer and an element selector function.">根据指定的键选择器函数、比较器和元素选择器函数从 <see cref="T:System.Linq.ILookup`2" /> 创建一个 <see cref="T:System.Linq.ParallelQuery`1" />。</summary>
      <param name="source" vsli:raw="The sequence to create a &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; from.">据其创建 <see cref="T:System.Linq.ILookup`2" /> 的序列。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">用于从每个元素中提取键的函数。</param>
      <param name="elementSelector" vsli:raw="A transform function to produce a result element value from each element.">用于从每个元素产生结果元素值的转换函数。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare keys.">用于比较键的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 返回的键的类型。</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the value returned by &lt;paramref name=&quot;elementSelector&quot; /&gt;.">
        <paramref name="elementSelector" /> 返回的值的类型。</typeparam>
      <returns vsli:raw="A Lookup&amp;lt;(Of &amp;lt;(TKey, TElement&amp;gt;)&amp;gt;) that contains values of type TElement selected from the input sequence.">一个 Lookup&lt;(Of &lt;(TKey, TElement&gt;)&gt;)，其中包含从输入序列中选择的 TElement 类型的值。</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;elementSelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="keySelector" /> 或 <paramref name="elementSelector" /> 是 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="This Union overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">切勿调用此 Union 重载。 此方法已标记为过时，调用此方法时总是会引发 <see cref="T:System.NotSupportedException" />。</summary>
      <param name="first" vsli:raw="This parameter is not used.">未使用此参数。</param>
      <param name="second" vsli:raw="This parameter is not used.">未使用此参数。</param>
      <typeparam name="TSource" vsli:raw="This type parameter is not used.">未使用此类型参数。</typeparam>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">此重载总是会引发 <see cref="T:System.NotSupportedException" />。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">调用此方法时发生的异常。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="This Union overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">切勿调用此 Union 重载。 此方法已标记为过时，调用此方法时总是会引发 <see cref="T:System.NotSupportedException" />。</summary>
      <param name="first" vsli:raw="This parameter is not used.">未使用此参数。</param>
      <param name="second" vsli:raw="This parameter is not used.">未使用此参数。</param>
      <param name="comparer" vsli:raw="This parameter is not used.">未使用此参数。</param>
      <typeparam name="TSource" vsli:raw="This type parameter is not used.">未使用此类型参数。</typeparam>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">此重载总是会引发 <see cref="T:System.NotSupportedException" />。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">调用此方法时发生的异常。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Produces the set union of two parallel sequences by using the default equality comparer.">通过使用默认的相等比较器，生成两个并行序列的并集。</summary>
      <param name="first" vsli:raw="A sequence whose distinct elements form the first set for the union.">一个序列，其中的非重复元素构成并集的第一部分。</param>
      <param name="second" vsli:raw="A sequence whose distinct elements form the second set for the union.">一个序列，其中的非重复元素构成并集的第二部分。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">输入序列中的元素的类型。</typeparam>
      <returns vsli:raw="A sequence that contains the elements from both input sequences, excluding duplicates.">一个序列，其中包含两个输入序列中的非重复元素。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;first&quot; /&gt; or &lt;paramref name=&quot;second&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="first" /> 或 <paramref name="second" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="Produces the set union of two parallel sequences by using a specified IEqualityComparer{T}.">通过使用指定的 IEqualityComparer{T} 生成两个并行序列的并集。</summary>
      <param name="first" vsli:raw="A sequence whose distinct elements form the first set for the union.">一个序列，其中的非重复元素构成并集的第一部分。</param>
      <param name="second" vsli:raw="A sequence whose distinct elements form the second set for the union.">一个序列，其中的非重复元素构成并集的第二部分。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare values.">用于比较值的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">输入序列中的元素的类型。</typeparam>
      <returns vsli:raw="A sequence that contains the elements from both input sequences, excluding duplicates.">一个序列，其中包含两个输入序列中的非重复元素。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;first&quot; /&gt; or &lt;paramref name=&quot;second&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="first" /> 或 <paramref name="second" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Filters in parallel a sequence of values based on a predicate.">基于谓词并行筛选值序列。</summary>
      <param name="source" vsli:raw="A sequence to filter.">要筛选的序列。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">用于测试每个元素是否满足条件的函数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of source.">源的元素的类型。</typeparam>
      <returns vsli:raw="A sequence that contains elements from the input sequence that satisfy the condition.">一个序列，其中包含输入序列中满足条件的元素。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="predicate" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
      <summary vsli:raw="Filters in parallel a sequence of values based on a predicate. Each element's index is used in the logic of the predicate function.">基于谓词并行筛选值序列。 将在谓词函数的逻辑中使用每个元素的索引。</summary>
      <param name="source" vsli:raw="A sequence to filter.">要筛选的序列。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">用于测试每个元素是否满足条件的函数。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of source.">源的元素的类型。</typeparam>
      <returns vsli:raw="A sequence that contains elements from the input sequence that satisfy the condition.">一个序列，其中包含输入序列中满足条件的元素。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 或 <paramref name="predicate" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="More than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; elements are enumerated by the query.">该查询枚举的元素超过了 <see cref="F:System.Int32.MaxValue" /> 个。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; to associate with the query.">设置要与查询关联的 <see cref="T:System.Threading.CancellationToken" />。</summary>
      <param name="source" vsli:raw="A ParallelQuery on which to set the option.">要对其设置选项的 ParallelQuery。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token.">取消标记。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="A ParallelQuery representing the same query as &lt;paramref name=&quot;source&quot; /&gt;, but with the registered cancellation token.">表示与源相同的查询的 ParallelQuery，但带有已注册的取消标记。</returns>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;paramref name=&quot;cancellationToken&quot; /&gt; has been disposed.">与 <paramref name="cancellationToken" /> 关联的 <see cref="T:System.Threading.CancellationTokenSource" /> 已被释放。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt; is used multiple times in the query.">在该查询中，多次使用 <paramref name="WithCancellation" />。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.WithDegreeOfParallelism``1(System.Linq.ParallelQuery{``0},System.Int32)">
      <summary vsli:raw="Sets the degree of parallelism to use in a query. Degree of parallelism is the maximum number of concurrently executing tasks that will be used to process the query.">设置要在查询中使用的并行度。 并行度是将用于处理查询的同时执行的任务的最大数目。</summary>
      <param name="source" vsli:raw="A ParallelQuery on which to set the limit on the degrees of parallelism.">要对其设置并行度限制的 ParallelQuery。</param>
      <param name="degreeOfParallelism" vsli:raw="The degree of parallelism for the query.">查询的并行度。 默认值是 Math.Min(<see cref="P:System.Environment.ProcessorCount" />, <see langword="MAX_SUPPORTED_DOP" />)，其中 <see langword="MAX_SUPPORTED_DOP" /> 为 512。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="ParallelQuery representing the same query as source, with the limit on the degrees of parallelism set.">表示与源相同的查询的 ParallelQuery，其中设置了对并行度的限制。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;degreeOfParallelism&quot; /&gt; is less than 1 or greater than 512.">
        <paramref name="degreeOfParallelism" /> 小于 1 或大于 511。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="WithDegreeOfParallelism is used multiple times in the query.">WithDegreeOfParallelism 在查询中多次使用。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.WithExecutionMode``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelExecutionMode)">
      <summary vsli:raw="Sets the execution mode of the query.">设置查询的执行模式。</summary>
      <param name="source" vsli:raw="A ParallelQuery on which to set the option.">要对其设置选项的 ParallelQuery。</param>
      <param name="executionMode" vsli:raw="The mode in which to execute the query.">执行查询使用的模式。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="ParallelQuery representing the same query as source, but with the registered execution mode.">表示与源相同的查询的 ParallelQuery，但带有已注册的执行模式。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;executionMode&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Linq.ParallelExecutionMode&quot; /&gt; value.">
        <paramref name="executionMode" /> 不是有效的 <see cref="T:System.Linq.ParallelExecutionMode" /> 值。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="WithExecutionMode is used multiple times in the query.">WithExecutionMode 在查询中多次使用。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.WithMergeOptions``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelMergeOptions)">
      <summary vsli:raw="Sets the merge options for this query, which specify how the query will buffer output.">设置此查询的合并选项，它指定查询对输出进行缓冲处理的方式。</summary>
      <param name="source" vsli:raw="A ParallelQuery on which to set the option.">要对其设置选项的 ParallelQuery。</param>
      <param name="mergeOptions" vsli:raw="The merge options to set for this query.">要为此查询设置的合并选项。</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 的元素类型。</typeparam>
      <returns vsli:raw="ParallelQuery representing the same query as source, but with the registered merge options.">表示与源相同的查询的 ParallelQuery，但带有已注册的合并选项。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;mergeOptions&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Linq.ParallelMergeOptions&quot; /&gt; value.">
        <paramref name="mergeOptions" /> 不是有效的 <see cref="T:System.Linq.ParallelMergeOptions" /> 值。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;WithMergeOptions&quot; /&gt; is used multiple times in the query.">在该查询中，多次使用 <paramref name="WithMergeOptions" />。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
      <summary vsli:raw="This Zip overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when invoked.">切勿调用此 Zip 重载。 此方法已标记为过时，调用此方法时总是会引发 <see cref="T:System.NotSupportedException" />。</summary>
      <param name="first" vsli:raw="This parameter is not used.">未使用此参数。</param>
      <param name="second" vsli:raw="This parameter is not used.">未使用此参数。</param>
      <param name="resultSelector" vsli:raw="This parameter is not used.">未使用此参数。</param>
      <typeparam name="TFirst" vsli:raw="This type parameter is not used.">未使用此类型参数。</typeparam>
      <typeparam name="TSecond" vsli:raw="This type parameter is not used.">未使用此类型参数。</typeparam>
      <typeparam name="TResult" vsli:raw="This type parameter is not used.">未使用此类型参数。</typeparam>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">此重载总是会引发 <see cref="T:System.NotSupportedException" />。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">调用此方法时发生的异常。</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``1,``2})">
      <summary vsli:raw="Merges in parallel two sequences by using the specified predicate function.">通过使用指定的谓词函数并行合并两个序列。</summary>
      <param name="first" vsli:raw="The first sequence to zip.">要压缩的第一个序列。</param>
      <param name="second" vsli:raw="The second sequence to zip.">要压缩的第二个序列。</param>
      <param name="resultSelector" vsli:raw="A function to create a result element from two matching elements.">用于从两个匹配元素创建结果元素的函数。</param>
      <typeparam name="TFirst" vsli:raw="The type of the elements of the first sequence.">第一个序列中的元素的类型。</typeparam>
      <typeparam name="TSecond" vsli:raw="The type of the elements of the second sequence.">第二个序列中的元素的类型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the return elements.">返回元素的类型。</typeparam>
      <returns vsli:raw="A sequence that has elements of type &lt;paramref name=&quot;TResult&quot; /&gt; that are obtained by performing &lt;paramref name=&quot;resultSelector&quot; /&gt; pairwise on two sequences. If the sequence lengths are unequal, this truncates to the length of the shorter sequence.">一个序列，其中包含通过对两个序列执行 <paramref name="TResult" /> 配对获得的 <paramref name="resultSelector" /> 类型的元素。 如果序列长度不相等，这将截断为较短序列的长度。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;first&quot; /&gt; or &lt;paramref name=&quot;second&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="first" /> 或 <paramref name="second" /> 或 <paramref name="resultSelector" /> 是 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">评估查询期间发生一个或多个异常。</exception>
    </member>
    <member name="T:System.Linq.ParallelExecutionMode">
      <summary vsli:raw="The query execution mode is a hint that specifies how the system should handle performance trade-offs when parallelizing queries.">查询执行模式是一种提示，它指定系统在并行化查询时应如何使性能达到平衡。</summary>
    </member>
    <member name="F:System.Linq.ParallelExecutionMode.Default">
      <summary vsli:raw="This is the default setting. PLINQ will examine the query's structure and will only parallelize the query if will likely result in speedup. If the query structure indicates that speedup is not likely to be obtained, then PLINQ will execute the query as an ordinary LINQ to Objects query.">此为默认设置。 PLINQ 将检查查询的结构，仅在可能带来加速时才对查询进行并行化。 如果查询结构指示不可能获得加速，则 PLINQ 会将查询当作普通的 LINQ to Objects 查询来执行。</summary>
    </member>
    <member name="F:System.Linq.ParallelExecutionMode.ForceParallelism">
      <summary vsli:raw="Parallelize the entire query, even if that means using high-overhead algorithms. Use this flag in cases where you know that parallel execution of the query will result in speedup, but PLINQ in the Default mode would execute it as sequential.">并行化整个查询，即使要使用系统开销大的算法。 如果认为并行执行查询将带来加速，则使用此标志，但处于默认模式的 PLINQ 将按顺序执行它。</summary>
    </member>
    <member name="T:System.Linq.ParallelMergeOptions">
      <summary vsli:raw="Specifies the preferred type of output merge to use in a query. In other words, it indicates how PLINQ should merge the results from the various partitions back into a single result sequence. This is a hint only, and may not be respected by the system when parallelizing all queries.">指定要在查询中使用的首选输出合并类型。 换言之，它指示 PLINQ 如何将多个分区的结果合并回单个结果序列。 这仅是一个提示，系统在并行处理所有查询时可能不会考虑这一点。</summary>
    </member>
    <member name="F:System.Linq.ParallelMergeOptions.AutoBuffered">
      <summary vsli:raw="Use a merge with output buffers of a size chosen by the system. Results will accumulate into an output buffer before they are available to the consumer of the query.">利用系统选定大小的输出缓冲区进行合并。 在向查询使用者提供结果之前，会先将结果累计到输出缓冲区中。</summary>
    </member>
    <member name="F:System.Linq.ParallelMergeOptions.Default">
      <summary vsli:raw="Use the default merge type, which is AutoBuffered.">使用默认合并类型，即 AutoBuffered。</summary>
    </member>
    <member name="F:System.Linq.ParallelMergeOptions.FullyBuffered">
      <summary vsli:raw="Use a merge with full output buffers. The system will accumulate all of the results before making any of them available to the consumer of the query.">利用整个输出缓冲区进行合并。 在向查询使用者提供任何结果之前，系统会先累计所有结果。</summary>
    </member>
    <member name="F:System.Linq.ParallelMergeOptions.NotBuffered">
      <summary vsli:raw="Use a merge without output buffers. As soon as result elements have been computed, make that element available to the consumer of the query.">不利用输出缓冲区进行合并。 一旦计算出结果元素，就向查询使用者提供这些元素。</summary>
    </member>
    <member name="T:System.Linq.ParallelQuery">
      <summary vsli:raw="Represents a parallel sequence.">表示并行序列。</summary>
    </member>
    <member name="M:System.Linq.ParallelQuery.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the sequence.">返回循环访问序列的枚举器。</summary>
      <returns vsli:raw="An enumerator that iterates through the sequence.">循环访问序列的枚举器。</returns>
    </member>
    <member name="T:System.Linq.ParallelQuery`1">
      <summary vsli:raw="Represents a parallel sequence.">表示并行序列。</summary>
      <typeparam name="TSource" vsli:raw="The type of element in the source sequence.">源序列中的元素的类型。</typeparam>
    </member>
    <member name="M:System.Linq.ParallelQuery`1.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the sequence.">返回循环访问序列的枚举器。</summary>
      <returns vsli:raw="An enumerator that iterates through the sequence.">循环访问序列的枚举器。</returns>
    </member>
  </members>
</doc>