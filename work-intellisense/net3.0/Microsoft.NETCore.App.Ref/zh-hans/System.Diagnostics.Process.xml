<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Diagnostics.Process</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Win32.SafeHandles.SafeProcessHandle">
      <summary vsli:raw="Provides a managed wrapper for a process handle.">为一个进程句柄提供托管包装器。</summary>
    </member>
    <member name="M:Microsoft.Win32.SafeHandles.SafeProcessHandle.#ctor(System.IntPtr,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.Win32.SafeHandles.SafeProcessHandle&quot; /&gt; class from the specified handle, indicating whether to release the handle during the finalization phase.">从指定句柄初始化 <see cref="T:Microsoft.Win32.SafeHandles.SafeProcessHandle" /> 类的新实例，这指示在完成阶段是否释放句柄。</summary>
      <param name="existingHandle" vsli:raw="The handle to be wrapped.">要包装的句柄。</param>
      <param name="ownsHandle" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to reliably let &lt;see cref=&quot;T:Microsoft.Win32.SafeHandles.SafeProcessHandle&quot; /&gt; release the handle during the finalization phase; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若要可靠地允许 <see cref="T:Microsoft.Win32.SafeHandles.SafeProcessHandle" /> 在完成阶段释放句柄,则为 <see langword="true" />；否则为 <see langword="false" />。</param>
    </member>
    <member name="P:Microsoft.Win32.SafeHandles.SafeProcessHandle.IsInvalid" />
    <member name="T:System.Diagnostics.DataReceivedEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Diagnostics.Process.OutputDataReceived&quot; /&gt; and &lt;see cref=&quot;E:System.Diagnostics.Process.ErrorDataReceived&quot; /&gt; events.">提供有关 <see cref="E:System.Diagnostics.Process.OutputDataReceived" /> 和 <see cref="E:System.Diagnostics.Process.ErrorDataReceived" /> 事件的数据。</summary>
    </member>
    <member name="P:System.Diagnostics.DataReceivedEventArgs.Data">
      <summary vsli:raw="Gets the line of characters that was written to a redirected &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; output stream.">获取写入到重定向 <see cref="T:System.Diagnostics.Process" /> 输出流的字符行。</summary>
      <returns vsli:raw="The line that was written by an associated &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; to its redirected &lt;see cref=&quot;P:System.Diagnostics.Process.StandardOutput&quot; /&gt; or &lt;see cref=&quot;P:System.Diagnostics.Process.StandardError&quot; /&gt; stream.">由关联的 <see cref="T:System.Diagnostics.Process" /> 写入到其重定向 <see cref="P:System.Diagnostics.Process.StandardOutput" /> 或 <see cref="P:System.Diagnostics.Process.StandardError" /> 流中的行。</returns>
    </member>
    <member name="T:System.Diagnostics.DataReceivedEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Diagnostics.Process.OutputDataReceived&quot; /&gt; event or &lt;see cref=&quot;E:System.Diagnostics.Process.ErrorDataReceived&quot; /&gt; event of a &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt;.">表示将处理 <see cref="E:System.Diagnostics.Process.OutputDataReceived" /> 的 <see cref="E:System.Diagnostics.Process.ErrorDataReceived" /> 事件或 <see cref="T:System.Diagnostics.Process" /> 事件的方法。</summary>
      <param name="sender" vsli:raw="The source of the event.">事件源。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.DataReceivedEventArgs&quot; /&gt; that contains the event data.">包含事件数据的 <see cref="T:System.Diagnostics.DataReceivedEventArgs" />。</param>
    </member>
    <member name="T:System.Diagnostics.MonitoringDescriptionAttribute">
      <summary vsli:raw="Specifies a description for a property or event.">指定属性或事件的说明。</summary>
    </member>
    <member name="M:System.Diagnostics.MonitoringDescriptionAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.MonitoringDescriptionAttribute&quot; /&gt; class, using the specified description.">使用指定的说明初始化 <see cref="T:System.Diagnostics.MonitoringDescriptionAttribute" /> 类的新实例。</summary>
      <param name="description" vsli:raw="The application-defined description text.">应用程序定义的说明文字。</param>
    </member>
    <member name="P:System.Diagnostics.MonitoringDescriptionAttribute.Description">
      <summary vsli:raw="Gets description text associated with the item monitored.">获取与监视的项关联的说明文字。</summary>
      <returns vsli:raw="An application-defined description.">应用程序定义的说明。</returns>
    </member>
    <member name="T:System.Diagnostics.Process">
      <summary vsli:raw="Provides access to local and remote processes and enables you to start and stop local system processes.">提供对本地和远程进程的访问权限并使你能够启动和停止本地系统进程。</summary>
    </member>
    <member name="M:System.Diagnostics.Process.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; class.">初始化 <see cref="T:System.Diagnostics.Process" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Diagnostics.Process.BasePriority">
      <summary vsli:raw="Gets the base priority of the associated process.">获取关联进程的基本优先级。</summary>
      <returns vsli:raw="The base priority, which is computed from the &lt;see cref=&quot;P:System.Diagnostics.Process.PriorityClass&quot; /&gt; of the associated process.">基本优先级，从关联进程的 <see cref="P:System.Diagnostics.Process.PriorityClass" /> 计算。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The process has exited.&#xA;&#xA; -or-&#xA;&#xA; The process has not started, so there is no process ID.">该进程已退出。  
 或  
 尚未启动进程，因此没有进程 ID。</exception>
    </member>
    <member name="M:System.Diagnostics.Process.BeginErrorReadLine">
      <summary vsli:raw="Begins asynchronous read operations on the redirected &lt;see cref=&quot;P:System.Diagnostics.Process.StandardError&quot; /&gt; stream of the application.">在应用程序的重定向 <see cref="P:System.Diagnostics.Process.StandardError" /> 流上开始进行异步读取操作。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.RedirectStandardError&quot; /&gt; property is &lt;see langword=&quot;false&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA; An asynchronous read operation is already in progress on the &lt;see cref=&quot;P:System.Diagnostics.Process.StandardError&quot; /&gt; stream.&#xA;&#xA;-or-&#xA;&#xA; The &lt;see cref=&quot;P:System.Diagnostics.Process.StandardError&quot; /&gt; stream has been used by a synchronous read operation.">
        <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" /> 属性为 <see langword="false" />。  
或 
<see cref="P:System.Diagnostics.Process.StandardError" /> 流上已在进行异步读取操作。  
或 
同步读取操作已使用 <see cref="P:System.Diagnostics.Process.StandardError" /> 流。</exception>
    </member>
    <member name="M:System.Diagnostics.Process.BeginOutputReadLine">
      <summary vsli:raw="Begins asynchronous read operations on the redirected &lt;see cref=&quot;P:System.Diagnostics.Process.StandardOutput&quot; /&gt; stream of the application.">在应用程序的重定向 <see cref="P:System.Diagnostics.Process.StandardOutput" /> 流上开始进行异步读取操作。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput&quot; /&gt; property is &lt;see langword=&quot;false&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA; An asynchronous read operation is already in progress on the &lt;see cref=&quot;P:System.Diagnostics.Process.StandardOutput&quot; /&gt; stream.&#xA;&#xA;-or-&#xA;&#xA; The &lt;see cref=&quot;P:System.Diagnostics.Process.StandardOutput&quot; /&gt; stream has been used by a synchronous read operation.">
        <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" /> 属性为 <see langword="false" />。  

或 - 
<see cref="P:System.Diagnostics.Process.StandardOutput" /> 流上已在进行异步读取操作。  

或 
同步读取操作已使用 <see cref="P:System.Diagnostics.Process.StandardOutput" /> 流。</exception>
    </member>
    <member name="M:System.Diagnostics.Process.CancelErrorRead">
      <summary vsli:raw="Cancels the asynchronous read operation on the redirected &lt;see cref=&quot;P:System.Diagnostics.Process.StandardError&quot; /&gt; stream of an application.">取消在应用程序的重定向 <see cref="P:System.Diagnostics.Process.StandardError" /> 流上执行的异步读取操作。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.Process.StandardError&quot; /&gt; stream is not enabled for asynchronous read operations.">未针对异步读取操作启用 <see cref="P:System.Diagnostics.Process.StandardError" /> 流。</exception>
    </member>
    <member name="M:System.Diagnostics.Process.CancelOutputRead">
      <summary vsli:raw="Cancels the asynchronous read operation on the redirected &lt;see cref=&quot;P:System.Diagnostics.Process.StandardOutput&quot; /&gt; stream of an application.">取消在应用程序的重定向 <see cref="P:System.Diagnostics.Process.StandardOutput" /> 流上执行的异步读取操作。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.Process.StandardOutput&quot; /&gt; stream is not enabled for asynchronous read operations.">未针对异步读取操作启用 <see cref="P:System.Diagnostics.Process.StandardOutput" /> 流。</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Close">
      <summary vsli:raw="Frees all the resources that are associated with this component.">释放与此组件关联的所有资源。</summary>
    </member>
    <member name="M:System.Diagnostics.Process.CloseMainWindow">
      <summary vsli:raw="Closes a process that has a user interface by sending a close message to its main window.">通过向进程的主窗口发送关闭消息来关闭拥有用户界面的进程。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the close message was successfully sent; &lt;see langword=&quot;false&quot; /&gt; if the associated process does not have a main window or if the main window is disabled (for example if a modal dialog is being shown).">如果成功发送了关闭消息，则为 <see langword="true" />；如果关联进程没有主窗口或禁用了主窗口(例如，如果当前显示模式对话框)，则为 <see langword="false" />。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The process has already exited.&#xA;&#xA; -or-&#xA;&#xA; No process is associated with this &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; object.">已经退出该进程。  

或 - 
没有与此 <see cref="T:System.Diagnostics.Process" /> 对象关联的进程。</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Dispose(System.Boolean)">
      <summary vsli:raw="Release all resources used by this process.">释放此进程使用的所有资源。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> 表示释放托管资源和非托管资源；<see langword="false" /> 表示仅释放非托管资源。</param>
    </member>
    <member name="P:System.Diagnostics.Process.EnableRaisingEvents">
      <summary vsli:raw="Gets or sets whether the &lt;see cref=&quot;E:System.Diagnostics.Process.Exited&quot; /&gt; event should be raised when the process terminates.">获取或设置在进程终止时是否应引发 <see cref="E:System.Diagnostics.Process.Exited" /> 事件。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;E:System.Diagnostics.Process.Exited&quot; /&gt; event should be raised when the associated process is terminated (through either an exit or a call to &lt;see cref=&quot;M:System.Diagnostics.Process.Kill&quot; /&gt;); otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;. Note that even if the value of &lt;see cref=&quot;P:System.Diagnostics.Process.EnableRaisingEvents&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;, the &lt;see cref=&quot;E:System.Diagnostics.Process.Exited&quot; /&gt; event will be raised by the &lt;see cref=&quot;P:System.Diagnostics.Process.HasExited&quot; /&gt; property accessor, if it determines that the process has exited.">如果关联的进程终止（通过退出或者调用<see langword="true" /> ）时应引发 <see cref="E:System.Diagnostics.Process.Exited" /> 事件，则为 <see cref="M:System.Diagnostics.Process.Kill" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。 请注意, <see cref="E:System.Diagnostics.Process.Exited" />即使的<see cref="P:System.Diagnostics.Process.EnableRaisingEvents" />值是<see langword="false" />在用户执行<see cref="P:System.Diagnostics.Process.HasExited" />检查的过程中或在用户执行检查之前, 此事件也会引发。</returns>
    </member>
    <member name="M:System.Diagnostics.Process.EnterDebugMode">
      <summary vsli:raw="Puts a &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; component in state to interact with operating system processes that run in a special mode by enabling the native property &lt;see langword=&quot;SeDebugPrivilege&quot; /&gt; on the current thread.">通过启用当前线程的本机属性 <see cref="T:System.Diagnostics.Process" />，将 <see langword="SeDebugPrivilege" /> 组件置于与以特殊模式运行的操作系统进程交互的状态。</summary>
    </member>
    <member name="E:System.Diagnostics.Process.ErrorDataReceived">
      <summary vsli:raw="Occurs when an application writes to its redirected &lt;see cref=&quot;P:System.Diagnostics.Process.StandardError&quot; /&gt; stream.">当应用程序写入其重定向 <see cref="P:System.Diagnostics.Process.StandardError" /> 流中时发生。</summary>
    </member>
    <member name="P:System.Diagnostics.Process.ExitCode">
      <summary vsli:raw="Gets the value that the associated process specified when it terminated.">获取关联进程终止时指定的值。</summary>
      <returns vsli:raw="The code that the associated process specified when it terminated.">关联进程终止时指定的代码。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The process has not exited.&#xA;&#xA; -or-&#xA;&#xA; The process &lt;see cref=&quot;P:System.Diagnostics.Process.Handle&quot; /&gt; is not valid.">进程尚未退出。  
或 
进程 <see cref="P:System.Diagnostics.Process.Handle" /> 无效。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="You are trying to access the &lt;see cref=&quot;P:System.Diagnostics.Process.ExitCode&quot; /&gt; property for a process that is running on a remote computer. This property is available only for processes that are running on the local computer.">你正尝试访问在远程计算机上运行的进程的 <see cref="P:System.Diagnostics.Process.ExitCode" /> 属性。 此属性仅可用于本地计算机上运行的进程。</exception>
    </member>
    <member name="E:System.Diagnostics.Process.Exited">
      <summary vsli:raw="Occurs when a process exits.">在进程退出时发生。</summary>
    </member>
    <member name="P:System.Diagnostics.Process.ExitTime">
      <summary vsli:raw="Gets the time that the associated process exited.">获取关联进程退出的时间。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that indicates when the associated process was terminated.">
        <see cref="T:System.DateTime" />，它指示关联进程终止的时间。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="You are trying to access the &lt;see cref=&quot;P:System.Diagnostics.Process.ExitTime&quot; /&gt; property for a process that is running on a remote computer. This property is available only for processes that are running on the local computer.">你正尝试访问在远程计算机上运行的进程的 <see cref="P:System.Diagnostics.Process.ExitTime" /> 属性。 此属性仅可用于本地计算机上运行的进程。</exception>
    </member>
    <member name="M:System.Diagnostics.Process.GetCurrentProcess">
      <summary vsli:raw="Gets a new &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; component and associates it with the currently active process.">获取新的 <see cref="T:System.Diagnostics.Process" /> 组件并将其与当前活动的进程关联。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; component associated with the process resource that is running the calling application.">与运行调用应用程序的进程资源关联的新的 <see cref="T:System.Diagnostics.Process" /> 组件。</returns>
    </member>
    <member name="M:System.Diagnostics.Process.GetProcessById(System.Int32)">
      <summary vsli:raw="Returns a new &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; component, given the identifier of a process on the local computer.">返回新的 <see cref="T:System.Diagnostics.Process" /> 组件(给定本地计算机上某个进程的标识符)。</summary>
      <param name="processId" vsli:raw="The system-unique identifier of a process resource.">进程资源的系统唯一标识符。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; component that is associated with the local process resource identified by the &lt;paramref name=&quot;processId&quot; /&gt; parameter.">与 <paramref name="processId" /> 参数标识的本地进程资源关联的 <see cref="T:System.Diagnostics.Process" /> 组件。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The process specified by the &lt;paramref name=&quot;processId&quot; /&gt; parameter is not running. The identifier might be expired.">
        <paramref name="processId" /> 参数指定的进程未运行。 此标识符可能已过期。</exception>
      <exception cref="T:System.InvalidOperationException">此对象未启动该进程。</exception>
    </member>
    <member name="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
      <summary vsli:raw="Returns a new &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; component, given a process identifier and the name of a computer on the network.">返回新的 <see cref="T:System.Diagnostics.Process" /> 组件(给定进程标识符和网络中计算机的名称)。</summary>
      <param name="processId" vsli:raw="The system-unique identifier of a process resource.">进程资源的系统唯一标识符。</param>
      <param name="machineName" vsli:raw="The name of a computer on the network.">网络上计算机的名称。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; component that is associated with a remote process resource identified by the &lt;paramref name=&quot;processId&quot; /&gt; parameter.">与 <paramref name="processId" /> 参数标识的远程进程资源关联的 <see cref="T:System.Diagnostics.Process" /> 组件。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The process specified by the &lt;paramref name=&quot;processId&quot; /&gt; parameter is not running. The identifier might be expired.&#xA;&#xA; -or-&#xA;&#xA; The &lt;paramref name=&quot;machineName&quot; /&gt; parameter syntax is invalid. The name might have length zero (0).">
        <paramref name="processId" /> 参数指定的进程未运行。 此标识符可能已过期。  
或 
<paramref name="machineName" /> 参数的语法无效。 名称的长度可能为零 (0)。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;machineName&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="machineName" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">此对象未启动该进程。</exception>
    </member>
    <member name="M:System.Diagnostics.Process.GetProcesses">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; component for each process resource on the local computer.">为本地计算机上的每个进程资源创建一个新的 <see cref="T:System.Diagnostics.Process" /> 组件。</summary>
      <returns vsli:raw="An array of type &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; that represents all the process resources running on the local computer.">类型 <see cref="T:System.Diagnostics.Process" /> 的数组，表示本地计算机上运行的所有进程资源。</returns>
    </member>
    <member name="M:System.Diagnostics.Process.GetProcesses(System.String)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; component for each process resource on the specified computer.">为指定计算机上的每个进程资源创建一个新的 <see cref="T:System.Diagnostics.Process" /> 组件。</summary>
      <param name="machineName" vsli:raw="The computer from which to read the list of processes.">从其中读取进程列表的计算机。</param>
      <returns vsli:raw="An array of type &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; that represents all the process resources running on the specified computer.">类型 <see cref="T:System.Diagnostics.Process" /> 的数组，表示指定计算机上运行的所有进程资源。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;machineName&quot; /&gt; parameter syntax is invalid. It might have length zero (0).">
        <paramref name="machineName" /> 参数的语法无效。 其长度可能为零 (0)。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;machineName&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="machineName" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw="The operating system platform does not support this operation on remote computers.">操作系统平台不支持在远程计算机上进行此操作。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There are problems accessing the performance counter APIs used to get process information. This exception is specific to Windows NT, Windows 2000, and Windows XP.">访问用于获取进程信息的性能计数器 API 时出现问题。 此异常特定于 Windows NT、Windows 2000 和 Windows XP。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="A problem occurred accessing an underlying system API.">访问基础系统 API 时出现问题。</exception>
    </member>
    <member name="M:System.Diagnostics.Process.GetProcessesByName(System.String)">
      <summary vsli:raw="Creates an array of new &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; components and associates them with all the process resources on the local computer that share the specified process name.">创建新的 <see cref="T:System.Diagnostics.Process" /> 组件的数组，并将它们与本地计算机上共享指定的进程名称的所有进程资源关联。</summary>
      <param name="processName" vsli:raw="The friendly name of the process.">该进程的友好名称。</param>
      <returns vsli:raw="An array of type &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; that represents the process resources running the specified application or file.">类型 <see cref="T:System.Diagnostics.Process" /> 的数组，表示运行指定应用程序或文件的进程资源。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There are problems accessing the performance counter APIs used to get process information. This exception is specific to Windows NT, Windows 2000, and Windows XP.">访问用于获取进程信息的性能计数器 API 时出现问题。 此异常特定于 Windows NT、Windows 2000 和 Windows XP。</exception>
    </member>
    <member name="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
      <summary vsli:raw="Creates an array of new &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; components and associates them with all the process resources on a remote computer that share the specified process name.">创建新的 <see cref="T:System.Diagnostics.Process" /> 组件的数组，并将它们与远程计算机上共享指定进程名称的所有进程资源关联。</summary>
      <param name="processName" vsli:raw="The friendly name of the process.">该进程的友好名称。</param>
      <param name="machineName" vsli:raw="The name of a computer on the network.">网络上计算机的名称。</param>
      <returns vsli:raw="An array of type &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; that represents the process resources running the specified application or file.">类型 <see cref="T:System.Diagnostics.Process" /> 的数组，表示运行指定应用程序或文件的进程资源。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;machineName&quot; /&gt; parameter syntax is invalid. It might have length zero (0).">
        <paramref name="machineName" /> 参数的语法无效。 其长度可能为零 (0)。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;machineName&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="machineName" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw="The operating system platform does not support this operation on remote computers.">操作系统平台不支持在远程计算机上进行此操作。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The attempt to connect to &lt;paramref name=&quot;machineName&quot; /&gt; has failed.&#xA;&#xA; -or-&#xA;&#xA;There are problems accessing the performance counter APIs used to get process information. This exception is specific to Windows NT, Windows 2000, and Windows XP.">尝试连接到 <paramref name="machineName" /> 失败。

或 - 
访问用于获取进程信息的性能计数器 API 时出现问题。 此异常特定于 Windows NT、Windows 2000 和 Windows XP。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="A problem occurred accessing an underlying system API.">访问基础系统 API 时出现问题。</exception>
    </member>
    <member name="P:System.Diagnostics.Process.Handle">
      <summary vsli:raw="Gets the native handle of the associated process.">获取关联进程的本机句柄。</summary>
      <returns vsli:raw="The handle that the operating system assigned to the associated process when the process was started. The system uses this handle to keep track of process attributes.">进程启动时操作系统向关联进程分配的句柄。 系统使用此句柄来跟踪进程特性。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The process has not been started or has exited. The &lt;see cref=&quot;P:System.Diagnostics.Process.Handle&quot; /&gt; property cannot be read because there is no process associated with this &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; instance.&#xA;&#xA; -or-&#xA;&#xA; The &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; instance has been attached to a running process but you do not have the necessary permissions to get a handle with full access rights.">该进程尚未启动或已退出。 不能读取 <see cref="P:System.Diagnostics.Process.Handle" /> 属性，因为没有与此 <see cref="T:System.Diagnostics.Process" /> 实例关联的进程。  
或 
<see cref="T:System.Diagnostics.Process" /> 实例已附加到正在运行的进程，但你没有获取具有完全访问权限的句柄所需的权限。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="You are trying to access the &lt;see cref=&quot;P:System.Diagnostics.Process.Handle&quot; /&gt; property for a process that is running on a remote computer. This property is available only for processes that are running on the local computer.">你正尝试访问在远程计算机上运行的进程的 <see cref="P:System.Diagnostics.Process.Handle" /> 属性。 此属性仅可用于本地计算机上运行的进程。</exception>
    </member>
    <member name="P:System.Diagnostics.Process.HandleCount">
      <summary vsli:raw="Gets the number of handles opened by the process.">获取由进程打开的句柄数。</summary>
      <returns vsli:raw="The number of operating system handles the process has opened.">进程打开的操作系统句柄数。</returns>
    </member>
    <member name="P:System.Diagnostics.Process.HasExited">
      <summary vsli:raw="Gets a value indicating whether the associated process has been terminated.">获取指示关联进程是否已终止的值。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the operating system process referenced by the &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; component has terminated; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Diagnostics.Process" /> 组件引用的操作系统进程已终止，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There is no process associated with the object.">没有与此对象关联的进程。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The exit code for the process could not be retrieved.">无法检索该进程的退出代码。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="You are trying to access the &lt;see cref=&quot;P:System.Diagnostics.Process.HasExited&quot; /&gt; property for a process that is running on a remote computer. This property is available only for processes that are running on the local computer.">你正尝试访问在远程计算机上运行的进程的 <see cref="P:System.Diagnostics.Process.HasExited" /> 属性。 此属性仅可用于本地计算机上运行的进程。</exception>
    </member>
    <member name="P:System.Diagnostics.Process.Id">
      <summary vsli:raw="Gets the unique identifier for the associated process.">获取关联进程的唯一标识符。</summary>
      <returns vsli:raw="The system-generated unique identifier of the process that is referenced by this &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; instance.">此 <see cref="T:System.Diagnostics.Process" /> 实例引用的、由系统生成的进程的唯一标识符。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The process's &lt;see cref=&quot;P:System.Diagnostics.Process.Id&quot; /&gt; property has not been set.&#xA;&#xA; -or-&#xA;&#xA; There is no process associated with this &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; object.">尚未设置此进程的 <see cref="P:System.Diagnostics.Process.Id" /> 属性。  
或 
没有与此 <see cref="T:System.Diagnostics.Process" /> 对象关联的进程。</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Kill">
      <summary vsli:raw="Immediately stops the associated process.">立即停止关联的进程。</summary>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The associated process could not be terminated.">无法终止相关联的进程。  

或 -  

 进程将终止。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="You are attempting to call &lt;see cref=&quot;M:System.Diagnostics.Process.Kill&quot; /&gt; for a process that is running on a remote computer. The method is available only for processes running on the local computer.">你正尝试为远程计算机上运行的进程调用 <see cref="M:System.Diagnostics.Process.Kill" />。 该方法仅对本地计算机上运行的进程可用。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There is no process associated with this &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; object.">已经退出该进程。  

或 - 
没有与此 <see cref="T:System.Diagnostics.Process" /> 对象关联的进程。</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Kill(System.Boolean)">
      <summary vsli:raw="Immediately stops the associated process, and optionally its child/descendent processes.">立即停止关联的进程，并可选择停止其子/后代进程。</summary>
      <param name="entireProcessTree" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to kill the associated process and its descendants; &lt;see langword=&quot;false&quot; /&gt; to kill only the associated process.">
        <see langword="true" /> 终止相关联进程及其后代；<see langword="false" /> 仅终止相关联进程。</param>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The associated process could not be terminated.&#xA;&#xA; -or-&#xA;&#xA; The process is terminating.">无法终止相关联的进程。  

或 -  

 进程将终止。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="You are attempting to call &lt;see cref=&quot;M:System.Diagnostics.Process.Kill&quot; /&gt; for a process that is running on a remote computer. The method is available only for processes running on the local computer.">你正尝试为远程计算机上运行的进程调用 <see cref="M:System.Diagnostics.Process.Kill" />。 该方法仅对本地计算机上运行的进程可用。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw=".NET Framework and .NET Core 3.0 and earlier versions only: The process has already exited.&#xA;&#xA;-or-&#xA;&#xA;There is no process associated with this &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; object.&#xA;&#xA;-or-&#xA;&#xA;The calling process is a member of the associated process's descendant tree.">已经退出该进程。  

或 - 
没有与此 <see cref="T:System.Diagnostics.Process" /> 对象关联的进程。

或 -


调用进程是关联进程的后代树的成员。</exception>
      <exception cref="T:System.AggregateException" vsli:raw="Not all processes in the associated process's descendant tree could be terminated.">并非关联进程的后代树中的所有进程都可以终止。</exception>
    </member>
    <member name="M:System.Diagnostics.Process.LeaveDebugMode">
      <summary vsli:raw="Takes a &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; component out of the state that lets it interact with operating system processes that run in a special mode.">使 <see cref="T:System.Diagnostics.Process" /> 组件离开允许它与以特殊模式运行的操作系统进程交互的状态。</summary>
    </member>
    <member name="P:System.Diagnostics.Process.MachineName">
      <summary vsli:raw="Gets the name of the computer the associated process is running on.">获取关联进程正在其上运行的计算机的名称。</summary>
      <returns vsli:raw="The name of the computer that the associated process is running on.">关联进程正在其上运行的计算机的名称。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There is no process associated with this &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; object.">没有与此 <see cref="T:System.Diagnostics.Process" /> 对象关联的进程。</exception>
    </member>
    <member name="P:System.Diagnostics.Process.MainModule">
      <summary vsli:raw="Gets the main module for the associated process.">获取关联进程的主模块。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.ProcessModule&quot; /&gt; that was used to start the process.">用于启动进程的 <see cref="T:System.Diagnostics.ProcessModule" />。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="You are trying to access the &lt;see cref=&quot;P:System.Diagnostics.Process.MainModule&quot; /&gt; property for a process that is running on a remote computer. This property is available only for processes that are running on the local computer.">你正尝试访问在远程计算机上运行的进程的 <see cref="P:System.Diagnostics.Process.MainModule" /> 属性。 此属性仅可用于本地计算机上运行的进程。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="A 32-bit process is trying to access the modules of a 64-bit process.">32 位进程正尝试访问 64 位进程的模块。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The process &lt;see cref=&quot;P:System.Diagnostics.Process.Id&quot; /&gt; is not available.&#xA;&#xA; -or-&#xA;&#xA; The process has exited.">进程 <see cref="P:System.Diagnostics.Process.Id" /> 不可用。  
或 
该进程已退出。</exception>
    </member>
    <member name="P:System.Diagnostics.Process.MainWindowHandle">
      <summary vsli:raw="Gets the window handle of the main window of the associated process.">获取关联进程主窗口的窗口句柄。</summary>
      <returns vsli:raw="The system-generated window handle of the main window of the associated process.">关联进程主窗口的系统生成的窗口句柄。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.Process.MainWindowHandle&quot; /&gt; is not defined because the process has exited.">未定义 <see cref="P:System.Diagnostics.Process.MainWindowHandle" />，因为已退出进程。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="You are trying to access the &lt;see cref=&quot;P:System.Diagnostics.Process.MainWindowHandle&quot; /&gt; property for a process that is running on a remote computer. This property is available only for processes that are running on the local computer.">你正尝试访问在远程计算机上运行的进程的 <see cref="P:System.Diagnostics.Process.MainWindowHandle" /> 属性。 此属性仅可用于本地计算机上运行的进程。</exception>
    </member>
    <member name="P:System.Diagnostics.Process.MainWindowTitle">
      <summary vsli:raw="Gets the caption of the main window of the process.">获取进程的主窗口标题。</summary>
      <returns vsli:raw="The main window title of the process.">进程的主窗口标题。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.Process.MainWindowTitle&quot; /&gt; property is not defined because the process has exited.">未定义 <see cref="P:System.Diagnostics.Process.MainWindowTitle" /> 属性，因为进程已退出。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="You are trying to access the &lt;see cref=&quot;P:System.Diagnostics.Process.MainWindowTitle&quot; /&gt; property for a process that is running on a remote computer. This property is available only for processes that are running on the local computer.">你正尝试访问在远程计算机上运行的进程的 <see cref="P:System.Diagnostics.Process.MainWindowTitle" /> 属性。 此属性仅可用于本地计算机上运行的进程。</exception>
    </member>
    <member name="P:System.Diagnostics.Process.MaxWorkingSet">
      <summary vsli:raw="Gets or sets the maximum allowable working set size, in bytes, for the associated process.">获取或设置关联进程允许的最大工作集大小（以字节为单位）。</summary>
      <returns vsli:raw="The maximum working set size that is allowed in memory for the process, in bytes.">内存中允许的进程的最大工作集大小（以字节为单位）。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The maximum working set size is invalid. It must be greater than or equal to the minimum working set size.">最大的工作集大小无效。 它必须大于或等于最小的工作集大小。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="Working set information cannot be retrieved from the associated process resource.&#xA;&#xA; -or-&#xA;&#xA; The process identifier or process handle is zero because the process has not been started.">无法从关联的进程资源中检索工作集信息。  
 或  
 进程标识符或进程句柄为零，因为尚未启动该进程。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="You are trying to access the &lt;see cref=&quot;P:System.Diagnostics.Process.MaxWorkingSet&quot; /&gt; property for a process that is running on a remote computer. This property is available only for processes that are running on the local computer.">你正尝试访问在远程计算机上运行的进程的 <see cref="P:System.Diagnostics.Process.MaxWorkingSet" /> 属性。 此属性仅可用于本地计算机上运行的进程。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The process &lt;see cref=&quot;P:System.Diagnostics.Process.Id&quot; /&gt; is not available.&#xA;&#xA; -or-&#xA;&#xA; The process has exited.">进程 <see cref="P:System.Diagnostics.Process.Id" /> 不可用。  
或 
该进程已退出。</exception>
    </member>
    <member name="P:System.Diagnostics.Process.MinWorkingSet">
      <summary vsli:raw="Gets or sets the minimum allowable working set size, in bytes, for the associated process.">获取或设置关联进程允许的最小工作集大小（以字节为单位）。</summary>
      <returns vsli:raw="The minimum working set size that is required in memory for the process, in bytes.">内存中进程所需的最小工作集大小（以字节为单位）。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The minimum working set size is invalid. It must be less than or equal to the maximum working set size.">最小工作集大小无效。 它必须小于或等于最大工作集大小。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="Working set information cannot be retrieved from the associated process resource.&#xA;&#xA; -or-&#xA;&#xA; The process identifier or process handle is zero because the process has not been started.">无法从关联的进程资源中检索工作集信息。  

或 -  

 进程标识符或进程句柄为零，因为尚未启动该进程。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="You are trying to access the &lt;see cref=&quot;P:System.Diagnostics.Process.MinWorkingSet&quot; /&gt; property for a process that is running on a remote computer. This property is available only for processes that are running on the local computer.">你正尝试访问在远程计算机上运行的进程的 <see cref="P:System.Diagnostics.Process.MinWorkingSet" /> 属性。 此属性仅可用于本地计算机上运行的进程。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The process &lt;see cref=&quot;P:System.Diagnostics.Process.Id&quot; /&gt; is not available.&#xA;&#xA; -or-&#xA;&#xA; The process has exited.">进程 <see cref="P:System.Diagnostics.Process.Id" /> 不可用。  

或 - 
该进程已退出。</exception>
    </member>
    <member name="P:System.Diagnostics.Process.Modules">
      <summary vsli:raw="Gets the modules that have been loaded by the associated process.">获取已由关联进程加载的模块。</summary>
      <returns vsli:raw="An array of type &lt;see cref=&quot;T:System.Diagnostics.ProcessModule&quot; /&gt; that represents the modules that have been loaded by the associated process.">类型 <see cref="T:System.Diagnostics.ProcessModule" /> 的数组，表示已由关联进程加载的模块。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="You are attempting to access the &lt;see cref=&quot;P:System.Diagnostics.Process.Modules&quot; /&gt; property for a process that is running on a remote computer. This property is available only for processes that are running on the local computer.">你正试图访问在远程计算机上运行的进程的 <see cref="P:System.Diagnostics.Process.Modules" /> 属性。 此属性仅可用于本地计算机上运行的进程。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The process &lt;see cref=&quot;P:System.Diagnostics.Process.Id&quot; /&gt; is not available.">进程 <see cref="P:System.Diagnostics.Process.Id" /> 不可用。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="You are attempting to access the &lt;see cref=&quot;P:System.Diagnostics.Process.Modules&quot; /&gt; property for either the system process or the idle process. These processes do not have modules.">您尝试访问系统进程或 Idle 进程的 <see cref="P:System.Diagnostics.Process.Modules" /> 属性。 这些进程没有模块。</exception>
    </member>
    <member name="P:System.Diagnostics.Process.NonpagedSystemMemorySize">
      <summary vsli:raw="Gets the amount of nonpaged system memory, in bytes, allocated for the associated process.">获取为关联的进程分配的非分页系统内存量（以字节为单位）。</summary>
      <returns vsli:raw="The amount of memory, in bytes, the system has allocated for the associated process that cannot be written to the virtual memory paging file.">系统已为无法写入到虚拟内存分页文件的关联进程分配的内存量（以字节为单位）。</returns>
    </member>
    <member name="P:System.Diagnostics.Process.NonpagedSystemMemorySize64">
      <summary vsli:raw="Gets the amount of nonpaged system memory, in bytes, allocated for the associated process.">获取为关联的进程分配的非分页系统内存量（以字节为单位）。</summary>
      <returns vsli:raw="The amount of system memory, in bytes, allocated for the associated process that cannot be written to the virtual memory paging file.">为关联的进程分配的、不能写入虚拟内存分页文件中的系统内存量（以字节为单位）。</returns>
    </member>
    <member name="M:System.Diagnostics.Process.OnExited">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Diagnostics.Process.Exited&quot; /&gt; event.">引发 <see cref="E:System.Diagnostics.Process.Exited" /> 事件。</summary>
    </member>
    <member name="E:System.Diagnostics.Process.OutputDataReceived">
      <summary vsli:raw="Occurs each time an application writes a line to its redirected &lt;see cref=&quot;P:System.Diagnostics.Process.StandardOutput&quot; /&gt; stream.">每次应用程序向其重定向 <see cref="P:System.Diagnostics.Process.StandardOutput" /> 流中写入行时发生。</summary>
    </member>
    <member name="P:System.Diagnostics.Process.PagedMemorySize">
      <summary vsli:raw="Gets the amount of paged memory, in bytes, allocated for the associated process.">获取为关联的进程分配的分页内存量（以字节为单位）。</summary>
      <returns vsli:raw="The amount of memory, in bytes, allocated by the associated process that can be written to the virtual memory paging file.">由可写入到虚拟内存分页文件的关联进程分配的内存量(以字节为单位)。</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PagedMemorySize64">
      <summary vsli:raw="Gets the amount of paged memory, in bytes, allocated for the associated process.">获取为关联的进程分配的分页内存量（以字节为单位）。</summary>
      <returns vsli:raw="The amount of memory, in bytes, allocated in the virtual memory paging file for the associated process.">在虚拟内存分页文件中为关联进程分配的内存量（以字节为单位）。</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PagedSystemMemorySize">
      <summary vsli:raw="Gets the amount of pageable system memory, in bytes, allocated for the associated process.">获取为关联进程分配的可分页系统内存量（以字节为单位）。</summary>
      <returns vsli:raw="The amount of memory, in bytes, the system has allocated for the associated process that can be written to the virtual memory paging file.">系统已为可写入到虚拟内存页面文件的关联进程分配的内存量（以字节为单位）。</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PagedSystemMemorySize64">
      <summary vsli:raw="Gets the amount of pageable system memory, in bytes, allocated for the associated process.">获取为关联进程分配的可分页系统内存量（以字节为单位）。</summary>
      <returns vsli:raw="The amount of system memory, in bytes, allocated for the associated process that can be written to the virtual memory paging file.">为可写入虚拟内存分页文件的关联内存分配的系统内存量(以字节为单位)。</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PeakPagedMemorySize">
      <summary vsli:raw="Gets the maximum amount of memory in the virtual memory paging file, in bytes, used by the associated process.">获取关联的进程使用的虚拟内存分页文件中的最大内存量（以字节为单位）。</summary>
      <returns vsli:raw="The maximum amount of memory, in bytes, allocated by the associated process that could be written to the virtual memory paging file.">由可写入到虚拟内存分页文件的关联进程分配的最大内存量（以字节为单位）。</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PeakPagedMemorySize64">
      <summary vsli:raw="Gets the maximum amount of memory in the virtual memory paging file, in bytes, used by the associated process.">获取关联的进程使用的虚拟内存分页文件中的最大内存量（以字节为单位）。</summary>
      <returns vsli:raw="The maximum amount of memory, in bytes, allocated in the virtual memory paging file for the associated process since it was started.">从启动关联的进程以来在为虚拟内存分页文件中关联进程分配的最大内存量（以字节为单位）。</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PeakVirtualMemorySize">
      <summary vsli:raw="Gets the maximum amount of virtual memory, in bytes, used by the associated process.">获取关联进程使用的最大虚拟内存量（以字节为单位）。</summary>
      <returns vsli:raw="The maximum amount of virtual memory, in bytes, that the associated process has requested.">关联进程请求的最大虚拟内存量(以字节为单位)。</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PeakVirtualMemorySize64">
      <summary vsli:raw="Gets the maximum amount of virtual memory, in bytes, used by the associated process.">获取关联进程使用的最大虚拟内存量（以字节为单位）。</summary>
      <returns vsli:raw="The maximum amount of virtual memory, in bytes, allocated for the associated process since it was started.">从关联进程启动以来为关联进程分配的最大虚拟内存量（以字节为单位）。</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PeakWorkingSet">
      <summary vsli:raw="Gets the peak working set size for the associated process, in bytes.">获取关联进程的峰值工作集大小（以字节为单位）。</summary>
      <returns vsli:raw="The maximum amount of physical memory that the associated process has required all at once, in bytes.">关联进程一次所需的最大物理内存量（以字节为单位）。</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PeakWorkingSet64">
      <summary vsli:raw="Gets the maximum amount of physical memory, in bytes, used by the associated process.">获取关联进程使用的最大物理内存量（以字节为单位）。</summary>
      <returns vsli:raw="The maximum amount of physical memory, in bytes, allocated for the associated process since it was started.">从启动关联进程以来为关联进程分配的最大物理内存量（以字节为单位）。</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PriorityBoostEnabled">
      <summary vsli:raw="Gets or sets a value indicating whether the associated process priority should temporarily be boosted by the operating system when the main window has the focus.">获取或设置一个值，该值指示主窗口拥有焦点时是否应由操作系统暂时提升关联进程优先级。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if dynamic boosting of the process priority should take place for a process when it is taken out of the wait state; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果进程离开等待状态时应动态提升进程优先级别，则为<see langword="true" /> ；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="Priority boost information could not be retrieved from the associated process resource.">未能从关联的进程资源检索到优先级提升信息。</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw="The process identifier or process handle is zero. (The process has not been started.)">进程标识符或进程句柄为零。 （进程尚未启动。）</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="You are attempting to access the &lt;see cref=&quot;P:System.Diagnostics.Process.PriorityBoostEnabled&quot; /&gt; property for a process that is running on a remote computer. This property is available only for processes that are running on the local computer.">你正试图访问在远程计算机上运行的进程的 <see cref="P:System.Diagnostics.Process.PriorityBoostEnabled" /> 属性。 此属性仅可用于本地计算机上运行的进程。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The process &lt;see cref=&quot;P:System.Diagnostics.Process.Id&quot; /&gt; is not available.">进程 <see cref="P:System.Diagnostics.Process.Id" /> 不可用。</exception>
    </member>
    <member name="P:System.Diagnostics.Process.PriorityClass">
      <summary vsli:raw="Gets or sets the overall priority category for the associated process.">获取或设置关联进程的总体优先级类别。</summary>
      <returns vsli:raw="The priority category for the associated process, from which the &lt;see cref=&quot;P:System.Diagnostics.Process.BasePriority&quot; /&gt; of the process is calculated.">关联进程的优先级类别，可从该类别计算进程的 <see cref="P:System.Diagnostics.Process.BasePriority" />。</returns>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="Process priority information could not be set or retrieved from the associated process resource.&#xA;&#xA; -or-&#xA;&#xA; The process identifier or process handle is zero. (The process has not been started.)">无法从关联的进程资源中设置或检索进程优先级信息。  
 或  
 进程标识符或进程句柄为零。 （进程尚未启动。）</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="You are attempting to access the &lt;see cref=&quot;P:System.Diagnostics.Process.PriorityClass&quot; /&gt; property for a process that is running on a remote computer. This property is available only for processes that are running on the local computer.">你正试图访问在远程计算机上运行的进程的 <see cref="P:System.Diagnostics.Process.PriorityClass" /> 属性。 此属性仅可用于本地计算机上运行的进程。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The process &lt;see cref=&quot;P:System.Diagnostics.Process.Id&quot; /&gt; is not available.">进程 <see cref="P:System.Diagnostics.Process.Id" /> 不可用。</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="Priority class cannot be set because it does not use a valid value, as defined in the &lt;see cref=&quot;T:System.Diagnostics.ProcessPriorityClass&quot; /&gt; enumeration.">无法设置优先级类，因为它不使用有效的值，如 <see cref="T:System.Diagnostics.ProcessPriorityClass" /> 枚举中所定义。</exception>
    </member>
    <member name="P:System.Diagnostics.Process.PrivateMemorySize">
      <summary vsli:raw="Gets the amount of private memory, in bytes, allocated for the associated process.">获取为关联的进程分配的专用内存量（以字节为单位）。</summary>
      <returns vsli:raw="The number of bytes allocated by the associated process that cannot be shared with other processes.">由关联的进程分配的、不能与其他进程共享的字节数。</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PrivateMemorySize64">
      <summary vsli:raw="Gets the amount of private memory, in bytes, allocated for the associated process.">获取为关联的进程分配的专用内存量（以字节为单位）。</summary>
      <returns vsli:raw="The amount of memory, in bytes, allocated for the associated process that cannot be shared with other processes.">为关联进程分配的不能与其他进程共享的内存量(以字节为单位)。</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PrivilegedProcessorTime">
      <summary vsli:raw="Gets the privileged processor time for this process.">获取此进程的特权处理器时间。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; that indicates the amount of time that the process has spent running code inside the operating system core.">
        <see cref="T:System.TimeSpan" />，它指示进程在操作系统内核中运行代码所用的时间。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="You are attempting to access the &lt;see cref=&quot;P:System.Diagnostics.Process.PrivilegedProcessorTime&quot; /&gt; property for a process that is running on a remote computer. This property is available only for processes that are running on the local computer.">你正试图访问在远程计算机上运行的进程的 <see cref="P:System.Diagnostics.Process.PrivilegedProcessorTime" /> 属性。 此属性仅可用于本地计算机上运行的进程。</exception>
    </member>
    <member name="P:System.Diagnostics.Process.ProcessName">
      <summary vsli:raw="Gets the name of the process.">获取该进程的名称。</summary>
      <returns vsli:raw="The name that the system uses to identify the process to the user.">系统用以向用户标识该进程的名称。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The process does not have an identifier, or no process is associated with the &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; The associated process has exited.">进程没有标识符，或者没有与 <see cref="T:System.Diagnostics.Process" /> 关联的进程。  
或 
关联进程已退出。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The process is not on this computer.">进程不在此计算机上。</exception>
    </member>
    <member name="P:System.Diagnostics.Process.ProcessorAffinity">
      <summary vsli:raw="Gets or sets the processors on which the threads in this process can be scheduled to run.">获取或设置一些处理器，此进程中的线程可以按计划在这些处理器上运行。</summary>
      <returns vsli:raw="A bitmask representing the processors that the threads in the associated process can run on. The default depends on the number of processors on the computer. The default value is 2 n -1, where n is the number of processors.">位掩码，表示关联进程内的线程可以在其上运行的处理器。 默认值取决于计算机上的处理器数。 默认值为 2 n -1, 其中 n 是处理器数。</returns>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="&lt;see cref=&quot;P:System.Diagnostics.Process.ProcessorAffinity&quot; /&gt; information could not be set or retrieved from the associated process resource.&#xA;&#xA; -or-&#xA;&#xA; The process identifier or process handle is zero. (The process has not been started.)">未能从关联的进程资源设置或检索 <see cref="P:System.Diagnostics.Process.ProcessorAffinity" /> 信息。  

或 - 
进程标识符或进程句柄为零。 （进程尚未启动。）</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="You are attempting to access the &lt;see cref=&quot;P:System.Diagnostics.Process.ProcessorAffinity&quot; /&gt; property for a process that is running on a remote computer. This property is available only for processes that are running on the local computer.">你正试图访问在远程计算机上运行的进程的 <see cref="P:System.Diagnostics.Process.ProcessorAffinity" /> 属性。 此属性仅可用于本地计算机上运行的进程。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The process &lt;see cref=&quot;P:System.Diagnostics.Process.Id&quot; /&gt; was not available.&#xA;&#xA; -or-&#xA;&#xA; The process has exited.">进程 <see cref="P:System.Diagnostics.Process.Id" /> 不可用。  
或 
该进程已退出。</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Refresh">
      <summary vsli:raw="Discards any information about the associated process that has been cached inside the process component.">放弃已缓存到进程组件的关联仅存的任何相关信息。</summary>
    </member>
    <member name="P:System.Diagnostics.Process.Responding">
      <summary vsli:raw="Gets a value indicating whether the user interface of the process is responding.">获取指示进程的用户界面当前是否响应的值。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the user interface of the associated process is responding to the system; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果关联进程的用户界面当前响应系统，则为<see langword="true" /> ；否则为 <see langword="false" />。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There is no process associated with this &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; object.">没有与此 <see cref="T:System.Diagnostics.Process" /> 对象关联的进程。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="You are attempting to access the &lt;see cref=&quot;P:System.Diagnostics.Process.Responding&quot; /&gt; property for a process that is running on a remote computer. This property is available only for processes that are running on the local computer.">你正试图访问在远程计算机上运行的进程的 <see cref="P:System.Diagnostics.Process.Responding" /> 属性。 此属性仅可用于本地计算机上运行的进程。</exception>
    </member>
    <member name="P:System.Diagnostics.Process.SafeHandle">
      <summary vsli:raw="Gets the native handle to this process.">获取此进程的本机句柄。</summary>
      <returns vsli:raw="The native handle to this process.">此进程的本机句柄。</returns>
    </member>
    <member name="P:System.Diagnostics.Process.SessionId">
      <summary vsli:raw="Gets the Terminal Services session identifier for the associated process.">获取关联进程的终端服务会话标识符。</summary>
      <returns vsli:raw="The Terminal Services session identifier for the associated process.">关联进程的终端服务会话标识符。</returns>
      <exception cref="T:System.NullReferenceException" vsli:raw="There is no session associated with this process.">没有与此进程关联的会话。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There is no process associated with this session identifier.&#xA;&#xA; -or-&#xA;&#xA; The associated process is not on this machine.">没有与此会话标识符关联的进程。  
 或  
 关联的进程不在此计算机上。</exception>
    </member>
    <member name="P:System.Diagnostics.Process.StandardError">
      <summary vsli:raw="Gets a stream used to read the error output of the application.">获取用于读取应用程序错误输出的流。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.IO.StreamReader&quot; /&gt; that can be used to read the standard error stream of the application.">可用于读取应用程序的标准错误流的 <see cref="T:System.IO.StreamReader" />。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.Process.StandardError&quot; /&gt; stream has not been defined for redirection; ensure &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.RedirectStandardError&quot; /&gt; is set to &lt;see langword=&quot;true&quot; /&gt; and &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.UseShellExecute&quot; /&gt; is set to &lt;see langword=&quot;false&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA; The &lt;see cref=&quot;P:System.Diagnostics.Process.StandardError&quot; /&gt; stream has been opened for asynchronous read operations with &lt;see cref=&quot;M:System.Diagnostics.Process.BeginErrorReadLine&quot; /&gt;.">尚未对 <see cref="P:System.Diagnostics.Process.StandardError" /> 流进行重定向定义；请确保 <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" /> 设置为 <see langword="true" /> 且 <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> 设置为 <see langword="false" />。  
或 
已打开 <see cref="P:System.Diagnostics.Process.StandardError" /> 流，以使用 <see cref="M:System.Diagnostics.Process.BeginErrorReadLine" /> 进行异步读取操作。</exception>
    </member>
    <member name="P:System.Diagnostics.Process.StandardInput">
      <summary vsli:raw="Gets a stream used to write the input of the application.">获取用于写入应用程序输入的流。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.IO.StreamWriter&quot; /&gt; that can be used to write the standard input stream of the application.">
        <see cref="T:System.IO.StreamWriter" />，可用于写入应用程序的标准输入流。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.Process.StandardInput&quot; /&gt; stream has not been defined because &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput&quot; /&gt; is set to &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="P:System.Diagnostics.Process.StandardInput" /> 流尚未定义，因为 <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput" /> 设置为 <see langword="false" />。</exception>
    </member>
    <member name="P:System.Diagnostics.Process.StandardOutput">
      <summary vsli:raw="Gets a stream used to read the textual output of the application.">获取用于读取应用程序文本输出的流。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.IO.StreamReader&quot; /&gt; that can be used to read the standard output stream of the application.">
        <see cref="T:System.IO.StreamReader" />，可用于读取应用程序的标准输出流。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.Process.StandardOutput&quot; /&gt; stream has not been defined for redirection; ensure &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput&quot; /&gt; is set to &lt;see langword=&quot;true&quot; /&gt; and &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.UseShellExecute&quot; /&gt; is set to &lt;see langword=&quot;false&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA; The &lt;see cref=&quot;P:System.Diagnostics.Process.StandardOutput&quot; /&gt; stream has been opened for asynchronous read operations with &lt;see cref=&quot;M:System.Diagnostics.Process.BeginOutputReadLine&quot; /&gt;.">尚未对 <see cref="P:System.Diagnostics.Process.StandardOutput" /> 流进行重定向定义；请确保 <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" /> 设置为 <see langword="true" /> 且 <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> 设置为 <see langword="false" />。  
或 
已打开 <see cref="P:System.Diagnostics.Process.StandardOutput" /> 流，以使用 <see cref="M:System.Diagnostics.Process.BeginOutputReadLine" /> 进行异步读取操作。</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Start">
      <summary vsli:raw="Starts (or reuses) the process resource that is specified by the &lt;see cref=&quot;P:System.Diagnostics.Process.StartInfo&quot; /&gt; property of this &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; component and associates it with the component.">启动(或重用)此 <see cref="T:System.Diagnostics.Process" /> 组件的 <see cref="P:System.Diagnostics.Process.StartInfo" /> 属性指定的进程资源，并将其与该组件关联。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a process resource is started; &lt;see langword=&quot;false&quot; /&gt; if no new process resource is started (for example, if an existing process is reused).">如果启动了进程资源，则为 <see langword="true" />；如果没有启动新的进程资源(例如，如果重用了现有进程)，则为 <see langword="false" />。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="No file name was specified in the &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; component's &lt;see cref=&quot;P:System.Diagnostics.Process.StartInfo&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;The &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.UseShellExecute&quot; /&gt; member of the &lt;see cref=&quot;P:System.Diagnostics.Process.StartInfo&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; while &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput&quot; /&gt;, &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput&quot; /&gt;, or &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.RedirectStandardError&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;.">在 <see cref="T:System.Diagnostics.Process" /> 组件的 <see cref="P:System.Diagnostics.Process.StartInfo" /> 中未指定任何文件名。
或者，当 <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput" />、<see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" /> 或 <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" /> 为 <see langword="true" /> 时，<see cref="P:System.Diagnostics.Process.StartInfo" /> 属性的 <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> 成员为 <see langword="true" />。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="There was an error in opening the associated file.">打开关联的文件时出错。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The process object has already been disposed.">已释放此进程对象。</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw="Method not supported on operating systems without shell support such as Nano Server (.NET Core only).">不支持 shell 的操作系统（如，仅适用于.NET Core 的 Nano Server）不支持此方法。</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
      <summary vsli:raw="Starts the process resource that is specified by the parameter containing process start information (for example, the file name of the process to start) and associates the resource with a new &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; component.">启动由包含进程启动信息(例如，要启动的进程的文件名)的参数指定的进程资源，并将该资源与新的 <see cref="T:System.Diagnostics.Process" /> 组件关联。</summary>
      <param name="startInfo" vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.ProcessStartInfo&quot; /&gt; that contains the information that is used to start the process, including the file name and any command-line arguments.">
        <see cref="T:System.Diagnostics.ProcessStartInfo" />，包含用于启动进程的信息(包括文件名和任何命令行自变量)。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; that is associated with the process resource, or &lt;see langword=&quot;null&quot; /&gt; if no process resource is started. Note that a new process that's started alongside already running instances of the same process will be independent from the others. In addition, Start may return a non-null Process with its &lt;see cref=&quot;P:System.Diagnostics.Process.HasExited&quot; /&gt; property already set to &lt;see langword=&quot;true&quot; /&gt;. In this case, the started process may have activated an existing instance of itself and then exited.">与进程资源关联的新 <see cref="T:System.Diagnostics.Process" />，如果未启动进程资源，则为 <see langword="null" />。 请注意，伴随同一进程中已运行的实例而启动的新进程将独立于其他进程。 此外，启动可能返回一个 <see cref="P:System.Diagnostics.Process.HasExited" /> 属性已设置为 <see langword="true" /> 的非 null 进程。 在这种情况下，启动的进程可能已激活现有实例自身，然后退出。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="No file name was specified in the &lt;paramref name=&quot;startInfo&quot; /&gt; parameter's &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.FileName&quot; /&gt; property.&#xA;&#xA; -or-&#xA;&#xA; The &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.UseShellExecute&quot; /&gt; property of the &lt;paramref name=&quot;startInfo&quot; /&gt; parameter is &lt;see langword=&quot;true&quot; /&gt; and the &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput&quot; /&gt;, &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput&quot; /&gt;, or &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.RedirectStandardError&quot; /&gt; property is also &lt;see langword=&quot;true&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; The &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.UseShellExecute&quot; /&gt; property of the &lt;paramref name=&quot;startInfo&quot; /&gt; parameter is &lt;see langword=&quot;true&quot; /&gt; and the &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.UserName&quot; /&gt; property is not &lt;see langword=&quot;null&quot; /&gt; or empty or the &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.Password&quot; /&gt; property is not &lt;see langword=&quot;null&quot; /&gt;.">在 <paramref name="startInfo" /> 参数的 <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> 属性中未指定任何文件名。  
或 
<paramref name="startInfo" /> 参数的 <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> 属性值为 <see langword="true" />，且 <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput" />、<see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" /> 或 <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" /> 属性的值也为 <see langword="true" />。  

或 - 
<paramref name="startInfo" /> 参数的 <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> 属性值为 <see langword="true" />，且 <see cref="P:System.Diagnostics.ProcessStartInfo.UserName" /> 属性值不为 <see langword="null" /> 或空，或者 <see cref="P:System.Diagnostics.ProcessStartInfo.Password" /> 属性值不为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;startInfo&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="startInfo" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The process object has already been disposed.">已释放此进程对象。</exception>
      <exception cref="T:System.IO.FileNotFoundException">在 <paramref name="startInfo" /> 参数的 <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> 属性中指定的文件未找到。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="An error occurred when opening the associated file.&#xA;&#xA; -or-&#xA;&#xA; The file specified in the &lt;paramref name=&quot;startInfo&quot; /&gt; parameter's &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.FileName&quot; /&gt; property could not be found.&#xA;&#xA; -or-&#xA;&#xA; The sum of the length of the arguments and the length of the full path to the process exceeds 2080. The error message associated with this exception can be one of the following: &quot;The data area passed to a system call is too small.&quot; or &quot;Access is denied.&quot;">打开关联的文件时出错。  

或 -  

 自变量的长度与该进程的完整路径的长度的总和超过了 2080。 与此异常关联的错误消息可以是下面其中一项：“传递给系统调用的数据区域太小。” 或“拒绝访问。”</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw="Method not supported on operating systems without shell support such as Nano Server (.NET Core only).">不支持 shell 的操作系统（如，仅适用于.NET Core 的 Nano Server）不支持此方法。</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Start(System.String)">
      <summary vsli:raw="Starts a process resource by specifying the name of a document or application file and associates the resource with a new &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; component.">通过指定文档或应用程序文件的名称来启动进程资源，并将资源与新的 <see cref="T:System.Diagnostics.Process" /> 组件关联。</summary>
      <param name="fileName" vsli:raw="The name of a document or application file to run in the process.">要在进程中运行的文档或应用程序文件的名称。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; that is associated with the process resource, or &lt;see langword=&quot;null&quot; /&gt; if no process resource is started. Note that a new process that's started alongside already running instances of the same process will be independent from the others. In addition, Start may return a non-null Process with its &lt;see cref=&quot;P:System.Diagnostics.Process.HasExited&quot; /&gt; property already set to &lt;see langword=&quot;true&quot; /&gt;. In this case, the started process may have activated an existing instance of itself and then exited.">与进程资源关联的新 <see cref="T:System.Diagnostics.Process" />，如果未启动进程资源，则为 <see langword="null" />。 请注意，伴随同一进程中已运行的实例而启动的新进程将独立于其他进程。 此外，启动可能返回一个 <see cref="P:System.Diagnostics.Process.HasExited" /> 属性已设置为 <see langword="true" /> 的非 null 进程。 在这种情况下，启动的进程可能已激活现有实例自身，然后退出。</returns>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="An error occurred when opening the associated file.&#xA;&#xA;-or-&#xA;&#xA;The file specified in the &lt;paramref name=&quot;fileName&quot; /&gt; could not be found.">打开关联的文件时出错。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The process object has already been disposed.">已释放此进程对象。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The PATH environment variable has a string containing quotes.">PATH 环境变量具有一个包含引号的字符串。</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Start(System.String,System.String)">
      <summary vsli:raw="Starts a process resource by specifying the name of an application and a set of command-line arguments, and associates the resource with a new &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; component.">通过指定应用程序的名称和一组命令行参数来启动一个进程资源，并将该资源与新的 <see cref="T:System.Diagnostics.Process" /> 组件相关联。</summary>
      <param name="fileName" vsli:raw="The name of an application file to run in the process.">要在进程中运行的应用程序文件的名称。</param>
      <param name="arguments" vsli:raw="Command-line arguments to pass when starting the process.">启动该进程时传递的命令行参数。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; that is associated with the process resource, or &lt;see langword=&quot;null&quot; /&gt; if no process resource is started. Note that a new process that's started alongside already running instances of the same process will be independent from the others. In addition, Start may return a non-null Process with its &lt;see cref=&quot;P:System.Diagnostics.Process.HasExited&quot; /&gt; property already set to &lt;see langword=&quot;true&quot; /&gt;. In this case, the started process may have activated an existing instance of itself and then exited.">与进程资源关联的新 <see cref="T:System.Diagnostics.Process" />，如果未启动进程资源，则为 <see langword="null" />。 请注意，伴随同一进程中已运行的实例而启动的新进程将独立于其他进程。 此外，启动可能返回一个 <see cref="P:System.Diagnostics.Process.HasExited" /> 属性已设置为 <see langword="true" /> 的非 null 进程。 在这种情况下，启动的进程可能已激活现有实例自身，然后退出。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;fileName&quot; /&gt; or &lt;paramref name=&quot;arguments&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="fileName" /> 或 <paramref name="arguments" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="An error occurred when opening the associated file.&#xA;&#xA;-or-&#xA;&#xA;The file specified in the &lt;paramref name=&quot;fileName&quot; /&gt; could not be found.&#xA;&#xA; -or-&#xA;&#xA; The sum of the length of the arguments and the length of the full path to the process exceeds 2080. The error message associated with this exception can be one of the following: &quot;The data area passed to a system call is too small.&quot; or &quot;Access is denied.&quot;">打开关联的文件时出错。  
 或  
 自变量的长度与该进程的完整路径的长度的总和超过了 2080。 与此异常关联的错误消息可以是下面其中一项：“传递给系统调用的数据区域太小。” 或“拒绝访问。”</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The process object has already been disposed.">已释放此进程对象。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The PATH environment variable has a string containing quotes.">PATH 环境变量具有一个包含引号的字符串。</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
      <summary vsli:raw="Starts a process resource by specifying the name of an application, a user name, a password, and a domain and associates the resource with a new &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; component.">通过指定应用程序的名称、用户名、密码和域来启动一个进程资源，并将该资源与新的 <see cref="T:System.Diagnostics.Process" /> 组件关联起来。</summary>
      <param name="fileName" vsli:raw="The name of an application file to run in the process.">要在进程中运行的应用程序文件的名称。</param>
      <param name="userName" vsli:raw="The user name to use when starting the process.">启动进程时使用的用户名。</param>
      <param name="password" vsli:raw="A &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; that contains the password to use when starting the process.">包含启动进程时要使用的密码的 <see cref="T:System.Security.SecureString" />。</param>
      <param name="domain" vsli:raw="The domain to use when starting the process.">启动进程时要使用的域。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; that is associated with the process resource, or &lt;see langword=&quot;null&quot; /&gt; if no process resource is started. Note that a new process that's started alongside already running instances of the same process will be independent from the others. In addition, Start may return a non-null Process with its &lt;see cref=&quot;P:System.Diagnostics.Process.HasExited&quot; /&gt; property already set to &lt;see langword=&quot;true&quot; /&gt;. In this case, the started process may have activated an existing instance of itself and then exited.">与进程资源关联的新 <see cref="T:System.Diagnostics.Process" />，如果未启动进程资源，则为 <see langword="null" />。 请注意，伴随同一进程中已运行的实例而启动的新进程将独立于其他进程。 此外，启动可能返回一个 <see cref="P:System.Diagnostics.Process.HasExited" /> 属性已设置为 <see langword="true" /> 的非 null 进程。 在这种情况下，启动的进程可能已激活现有实例自身，然后退出。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="No file name was specified.">未指定文件名。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="There was an error in opening the associated file.&#xA;&#xA;-or-&#xA;&#xA;The file specified in the &lt;paramref name=&quot;fileName&quot; /&gt; could not be found.">打开关联的文件时出错。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The process object has already been disposed.">已释放此进程对象。</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw="This member is not supported on Linux or macOS (.NET Core only).">Linux 或 macOS（仅适用于.NET Core）不支持此成员。</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
      <summary vsli:raw="Starts a process resource by specifying the name of an application, a set of command-line arguments, a user name, a password, and a domain and associates the resource with a new &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; component.">通过指定应用程序的名称、一组命令行自变量、用户名、密码和域来启动一个进程资源，并将该资源与新的 <see cref="T:System.Diagnostics.Process" /> 组件关联起来。</summary>
      <param name="fileName" vsli:raw="The name of an application file to run in the process.">要在进程中运行的应用程序文件的名称。</param>
      <param name="arguments" vsli:raw="Command-line arguments to pass when starting the process.">启动该进程时传递的命令行参数。</param>
      <param name="userName" vsli:raw="The user name to use when starting the process.">启动进程时使用的用户名。</param>
      <param name="password" vsli:raw="A &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; that contains the password to use when starting the process.">包含启动进程时要使用的密码的 <see cref="T:System.Security.SecureString" />。</param>
      <param name="domain" vsli:raw="The domain to use when starting the process.">启动进程时要使用的域。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; that is associated with the process resource, or &lt;see langword=&quot;null&quot; /&gt; if no process resource is started. Note that a new process that's started alongside already running instances of the same process will be independent from the others. In addition, Start may return a non-null Process with its &lt;see cref=&quot;P:System.Diagnostics.Process.HasExited&quot; /&gt; property already set to &lt;see langword=&quot;true&quot; /&gt;. In this case, the started process may have activated an existing instance of itself and then exited.">与进程资源关联的新 <see cref="T:System.Diagnostics.Process" />，如果未启动进程资源，则为 <see langword="null" />。 请注意，伴随同一进程中已运行的实例而启动的新进程将独立于其他进程。 此外，启动可能返回一个 <see cref="P:System.Diagnostics.Process.HasExited" /> 属性已设置为 <see langword="true" /> 的非 null 进程。 在这种情况下，启动的进程可能已激活现有实例自身，然后退出。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="No file name was specified.">未指定文件名。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="An error occurred when opening the associated file.&#xA;&#xA;-or-&#xA;&#xA;The file specified in the &lt;paramref name=&quot;fileName&quot; /&gt; could not be found.&#xA;&#xA; -or-&#xA;&#xA; The sum of the length of the arguments and the length of the full path to the associated file exceeds 2080. The error message associated with this exception can be one of the following: &quot;The data area passed to a system call is too small.&quot; or &quot;Access is denied.&quot;">打开关联的文件时出错。  
 或  
 参数的长度与该关联文件的完整路径的长度的总和超过了 2080。 与此异常关联的错误消息可以是下面其中一项：“传递给系统调用的数据区域太小。” 或“拒绝访问。”</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The process object has already been disposed.">已释放此进程对象。</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw="This member is not supported on Linux or macOS (.NET Core only).">Linux 或 macOS（仅适用于.NET Core）不支持此成员。</exception>
    </member>
    <member name="P:System.Diagnostics.Process.StartInfo">
      <summary vsli:raw="Gets or sets the properties to pass to the &lt;see cref=&quot;M:System.Diagnostics.Process.Start&quot; /&gt; method of the &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt;.">获取或设置要传递给 <see cref="T:System.Diagnostics.Process" /> 的 <see cref="M:System.Diagnostics.Process.Start" /> 方法的属性。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.ProcessStartInfo&quot; /&gt; that represents the data with which to start the process. These arguments include the name of the executable file or document used to start the process.">表示启动进程时要使用的数据的 <see cref="T:System.Diagnostics.ProcessStartInfo" />。 这些自变量包括用于启动该进程的可执行文件或文档的名称。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value that specifies the &lt;see cref=&quot;P:System.Diagnostics.Process.StartInfo&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">指定 <see cref="P:System.Diagnostics.Process.StartInfo" /> 的值为 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw=".NET Core and .NET 5+ only: The &lt;see cref=&quot;M:System.Diagnostics.Process.Start&quot; /&gt; method was not used to start the process.">
        <see cref="M:System.Diagnostics.Process.Start" /> 方法未用于启动进程。</exception>
    </member>
    <member name="P:System.Diagnostics.Process.StartTime">
      <summary vsli:raw="Gets the time that the associated process was started.">获取关联进程启动的时间。</summary>
      <returns vsli:raw="An object  that indicates when the process started. An exception is thrown if the process is not running.">指示进程启动的时间的对象。 如果进程未运行，将会引发异常。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="You are attempting to access the &lt;see cref=&quot;P:System.Diagnostics.Process.StartTime&quot; /&gt; property for a process that is running on a remote computer. This property is available only for processes that are running on the local computer.">你正试图访问在远程计算机上运行的进程的 <see cref="P:System.Diagnostics.Process.StartTime" /> 属性。 此属性仅可用于本地计算机上运行的进程。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The process has exited.&#xA;&#xA; -or-&#xA;&#xA; The process has not been started.">该进程已退出。  

或 -  

 该进程尚未启动。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="An error occurred in the call to the Windows function.">调用 Windows 函数时出错。</exception>
    </member>
    <member name="P:System.Diagnostics.Process.SynchronizingObject">
      <summary vsli:raw="Gets or sets the object used to marshal the event handler calls that are issued as a result of a process exit event.">获取或设置用于封送由于进程退出事件而发出的事件处理程序调用的对象。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ISynchronizeInvoke&quot; /&gt; used to marshal event handler calls that are issued as a result of an &lt;see cref=&quot;E:System.Diagnostics.Process.Exited&quot; /&gt; event on the process.">
        <see cref="T:System.ComponentModel.ISynchronizeInvoke" />，它用于封送由于进程上的 <see cref="E:System.Diagnostics.Process.Exited" /> 事件而发出的事件处理程序调用。</returns>
    </member>
    <member name="P:System.Diagnostics.Process.Threads">
      <summary vsli:raw="Gets the set of threads that are running in the associated process.">获取在关联进程中运行的一组线程。</summary>
      <returns vsli:raw="An array of type &lt;see cref=&quot;T:System.Diagnostics.ProcessThread&quot; /&gt; representing the operating system threads currently running in the associated process.">类型 <see cref="T:System.Diagnostics.ProcessThread" /> 的数组，表示当前在关联进程中运行的操作系统线程。</returns>
      <exception cref="T:System.SystemException" vsli:raw="The process does not have an &lt;see cref=&quot;P:System.Diagnostics.Process.Id&quot; /&gt;, or no process is associated with the &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; instance.&#xA;&#xA; -or-&#xA;&#xA; The associated process has exited.">进程没有 <see cref="P:System.Diagnostics.Process.Id" />，或者没有与 <see cref="T:System.Diagnostics.Process" /> 实例关联的进程。  

或 - 
关联进程已退出。</exception>
    </member>
    <member name="M:System.Diagnostics.Process.ToString">
      <summary vsli:raw="Formats the process's name as a string, combined with the parent component type, if applicable.">如果适用，则将进程的名称格式化为字符串，并与父组件类型组合。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.Process.ProcessName&quot; /&gt;, combined with the base component's &lt;see cref=&quot;M:System.Object.ToString&quot; /&gt; return value.">
        <see cref="P:System.Diagnostics.Process.ProcessName" />，与基组件的 <see cref="M:System.Object.ToString" /> 返回值组合。</returns>
    </member>
    <member name="P:System.Diagnostics.Process.TotalProcessorTime">
      <summary vsli:raw="Gets the total processor time for this process.">获取此进程的总的处理器时间。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; that indicates the amount of time that the associated process has spent utilizing the CPU. This value is the sum of the &lt;see cref=&quot;P:System.Diagnostics.Process.UserProcessorTime&quot; /&gt; and the &lt;see cref=&quot;P:System.Diagnostics.Process.PrivilegedProcessorTime&quot; /&gt;.">
        <see cref="T:System.TimeSpan" />，它指示关联进程使用 CPU 的时间。 此值是 <see cref="P:System.Diagnostics.Process.UserProcessorTime" /> 和 <see cref="P:System.Diagnostics.Process.PrivilegedProcessorTime" /> 的和。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="You are attempting to access the &lt;see cref=&quot;P:System.Diagnostics.Process.TotalProcessorTime&quot; /&gt; property for a process that is running on a remote computer. This property is available only for processes that are running on the local computer.">你正试图访问在远程计算机上运行的进程的 <see cref="P:System.Diagnostics.Process.TotalProcessorTime" /> 属性。 此属性仅可用于本地计算机上运行的进程。</exception>
    </member>
    <member name="P:System.Diagnostics.Process.UserProcessorTime">
      <summary vsli:raw="Gets the user processor time for this process.">获取此进程的用户处理器时间。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; that indicates the amount of time that the associated process has spent running code inside the application portion of the process (not inside the operating system core).">
        <see cref="T:System.TimeSpan" />，它指示关联进程在该进程的应用程序部分内(而不是在操作系统内核中)运行代码所用的时间。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="You are attempting to access the &lt;see cref=&quot;P:System.Diagnostics.Process.UserProcessorTime&quot; /&gt; property for a process that is running on a remote computer. This property is available only for processes that are running on the local computer.">你正试图访问在远程计算机上运行的进程的 <see cref="P:System.Diagnostics.Process.UserProcessorTime" /> 属性。 此属性仅可用于本地计算机上运行的进程。</exception>
    </member>
    <member name="P:System.Diagnostics.Process.VirtualMemorySize">
      <summary vsli:raw="Gets the size of the process's virtual memory, in bytes.">获取进程的虚拟内存大小（以字节为单位）。</summary>
      <returns vsli:raw="The amount of virtual memory, in bytes, that the associated process has requested.">关联进程请求的虚拟内存量（以字节为单位）。</returns>
    </member>
    <member name="P:System.Diagnostics.Process.VirtualMemorySize64">
      <summary vsli:raw="Gets the amount of the virtual memory, in bytes, allocated for the associated process.">获取为关联进程分配的虚拟内存量（以字节为单位）。</summary>
      <returns vsli:raw="The amount of virtual memory, in bytes, allocated for the associated process.">为关联进程分配的虚拟内存量(以字节为单位)。</returns>
    </member>
    <member name="M:System.Diagnostics.Process.WaitForExit">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; component to wait indefinitely for the associated process to exit.">指示 <see cref="T:System.Diagnostics.Process" /> 组件无限期地等待关联进程退出。</summary>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The wait setting could not be accessed.">无法访问等待设置。</exception>
      <exception cref="T:System.SystemException" vsli:raw="No process &lt;see cref=&quot;P:System.Diagnostics.Process.Id&quot; /&gt; has been set, and a &lt;see cref=&quot;P:System.Diagnostics.Process.Handle&quot; /&gt; from which the &lt;see cref=&quot;P:System.Diagnostics.Process.Id&quot; /&gt; property can be determined does not exist.&#xA;&#xA; -or-&#xA;&#xA; There is no process associated with this &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; object.&#xA;&#xA; -or-&#xA;&#xA; You are attempting to call &lt;see cref=&quot;M:System.Diagnostics.Process.WaitForExit&quot; /&gt; for a process that is running on a remote computer. This method is available only for processes that are running on the local computer.">尚未设置进程 <see cref="P:System.Diagnostics.Process.Id" />，而且不存在可从其确定 <see cref="P:System.Diagnostics.Process.Id" /> 属性的 <see cref="P:System.Diagnostics.Process.Handle" />。  
或 
没有与此 <see cref="T:System.Diagnostics.Process" /> 对象关联的进程。  
或 
你正尝试为远程计算机上运行的进程调用 <see cref="M:System.Diagnostics.Process.WaitForExit" /> 。 此方法仅对本地计算机上运行的进程可用。</exception>
    </member>
    <member name="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; component to wait the specified number of milliseconds for the associated process to exit.">指示 <see cref="T:System.Diagnostics.Process" /> 组件在指定的毫秒数内等待关联进程退出。</summary>
      <param name="milliseconds" vsli:raw="The amount of time, in milliseconds, to wait for the associated process to exit. A value of 0 specifies an immediate return, and a value of -1 specifies an infinite wait.">等待关联进程退出的时间（以毫秒为单位）。 最大值为 32 位整数的最大可能值，这对于操作系统而言表示无限大。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the associated process has exited; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果关联进程已退出，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The wait setting could not be accessed.">无法访问等待设置。</exception>
      <exception cref="T:System.SystemException" vsli:raw="No process &lt;see cref=&quot;P:System.Diagnostics.Process.Id&quot; /&gt; has been set, and a &lt;see cref=&quot;P:System.Diagnostics.Process.Handle&quot; /&gt; from which the &lt;see cref=&quot;P:System.Diagnostics.Process.Id&quot; /&gt; property can be determined does not exist.&#xA;&#xA; -or-&#xA;&#xA; There is no process associated with this &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; object.&#xA;&#xA; -or-&#xA;&#xA; You are attempting to call &lt;see cref=&quot;M:System.Diagnostics.Process.WaitForExit(System.Int32)&quot; /&gt; for a process that is running on a remote computer. This method is available only for processes that are running on the local computer.">尚未设置进程 <see cref="P:System.Diagnostics.Process.Id" />，而且不存在可从其确定 <see cref="P:System.Diagnostics.Process.Id" /> 属性的 <see cref="P:System.Diagnostics.Process.Handle" />。  

或 - 
没有与此 <see cref="T:System.Diagnostics.Process" /> 对象关联的进程。  

或 
你正尝试为远程计算机上运行的进程调用 <see cref="M:System.Diagnostics.Process.WaitForExit(System.Int32)" /> 。 此方法仅对本地计算机上运行的进程可用。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;milliseconds&quot; /&gt; is a negative number other than -1, which represents an infinite time-out.">
        <paramref name="milliseconds" /> 是一个非 -1 的负数，而 -1 表示无限期超时。</exception>
    </member>
    <member name="M:System.Diagnostics.Process.WaitForInputIdle">
      <summary vsli:raw="Causes the &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; component to wait indefinitely for the associated process to enter an idle state. This overload applies only to processes with a user interface and, therefore, a message loop.">使 <see cref="T:System.Diagnostics.Process" /> 组件无限期地等待关联进程进入空闲状态。 此重载仅适用于具有用户界面并因此具有消息循环的进程。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the associated process has reached an idle state.">如果关联进程已经达到空闲状态，则为 <see langword="true" />。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The process does not have a graphical interface.&#xA;&#xA; -or-&#xA;&#xA; An unknown error occurred. The process failed to enter an idle state.&#xA;&#xA; -or-&#xA;&#xA; The process has already exited.&#xA;&#xA; -or-&#xA;&#xA; No process is associated with this &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; object.">进程不具有图形界面。  
或 
发生未知错误。 进程无法进入空闲状态。  

或 - 
已经退出该进程。  

或 - 
没有与此 <see cref="T:System.Diagnostics.Process" /> 对象关联的进程。</exception>
    </member>
    <member name="M:System.Diagnostics.Process.WaitForInputIdle(System.Int32)">
      <summary vsli:raw="Causes the &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; component to wait the specified number of milliseconds for the associated process to enter an idle state. This overload applies only to processes with a user interface and, therefore, a message loop.">使 <see cref="T:System.Diagnostics.Process" /> 组件在指定的毫秒数内等待关联进程进入空闲状态。 此重载仅适用于具有用户界面并因此具有消息循环的进程。</summary>
      <param name="milliseconds" vsli:raw="A value of 1 to &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; that specifies the amount of time, in milliseconds, to wait for the associated process to become idle. A value of 0 specifies an immediate return, and a value of -1 specifies an infinite wait.">1 到 <see cref="F:System.Int32.MaxValue" /> 的值以毫秒为单位指定了等待关联进程变为空闲状态的时间量。 0 值指定立即返回，而 -1 值则指定无限期等待。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the associated process has reached an idle state; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果关联进程已经达到空闲状态，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The process does not have a graphical interface.&#xA;&#xA; -or-&#xA;&#xA; An unknown error occurred. The process failed to enter an idle state.&#xA;&#xA; -or-&#xA;&#xA; The process has already exited.&#xA;&#xA; -or-&#xA;&#xA; No process is associated with this &lt;see cref=&quot;T:System.Diagnostics.Process&quot; /&gt; object.">进程不具有图形界面。  
或 
发生未知错误。 进程无法进入空闲状态。  
或 
已经退出该进程。  
或 
没有与此 <see cref="T:System.Diagnostics.Process" /> 对象关联的进程。</exception>
    </member>
    <member name="P:System.Diagnostics.Process.WorkingSet">
      <summary vsli:raw="Gets the associated process's physical memory usage, in bytes.">获取关联进程的物理内存使用量（以字节为单位）。</summary>
      <returns vsli:raw="The total amount of physical memory the associated process is using, in bytes.">关联进程当前使用的物理内存总量(以字节为单位)。</returns>
    </member>
    <member name="P:System.Diagnostics.Process.WorkingSet64">
      <summary vsli:raw="Gets the amount of physical memory, in bytes, allocated for the associated process.">获取为关联的进程分配的物理内存量（以字节为单位）。</summary>
      <returns vsli:raw="The amount of physical memory, in bytes, allocated for the associated process.">为关的进程分配的物理内存量(以字节为单位)。</returns>
    </member>
    <member name="T:System.Diagnostics.ProcessModule">
      <summary vsli:raw="Represents a .dll or .exe file that is loaded into a particular process.">表示加载到特定进程的 .dll 或 .exe 文件。</summary>
    </member>
    <member name="P:System.Diagnostics.ProcessModule.BaseAddress">
      <summary vsli:raw="Gets the memory address where the module was loaded.">获取加载模块的内存地址。</summary>
      <returns vsli:raw="The load address of the module.">模块的加载地址。</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessModule.EntryPointAddress">
      <summary vsli:raw="Gets the memory address for the function that runs when the system loads and runs the module.">获取系统加载并运行模块时运行的函数的内存地址。</summary>
      <returns vsli:raw="The entry point of the module.">模块的入口点。</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessModule.FileName">
      <summary vsli:raw="Gets the full path to the module.">获取模块的完整路径。</summary>
      <returns vsli:raw="The fully qualified path that defines the location of the module.">定义模块位置的完全限定路径。</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessModule.FileVersionInfo">
      <summary vsli:raw="Gets version information about the module.">获取有关模块的版本信息。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.FileVersionInfo&quot; /&gt; that contains the module's version information.">包含模块版本信息的 <see cref="T:System.Diagnostics.FileVersionInfo" />。</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessModule.ModuleMemorySize">
      <summary vsli:raw="Gets the amount of memory that is required to load the module.">获取加载模块所需的内存量。</summary>
      <returns vsli:raw="The size, in bytes, of the memory that the module occupies.">模块占用的内存大小（以字节为单位）。</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessModule.ModuleName">
      <summary vsli:raw="Gets the name of the process module.">获取进程模块的名称。</summary>
      <returns vsli:raw="The name of the module.">模块的名称。</returns>
    </member>
    <member name="M:System.Diagnostics.ProcessModule.ToString">
      <summary vsli:raw="Converts the name of the module to a string.">将模块的名称转换为字符串。</summary>
      <returns vsli:raw="The value of the &lt;see cref=&quot;P:System.Diagnostics.ProcessModule.ModuleName&quot; /&gt; property.">
        <see cref="P:System.Diagnostics.ProcessModule.ModuleName" /> 属性的值。</returns>
    </member>
    <member name="T:System.Diagnostics.ProcessModuleCollection">
      <summary vsli:raw="Provides a strongly typed collection of &lt;see cref=&quot;T:System.Diagnostics.ProcessModule&quot; /&gt; objects.">提供 <see cref="T:System.Diagnostics.ProcessModule" /> 对象的强类型集合。</summary>
    </member>
    <member name="M:System.Diagnostics.ProcessModuleCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.ProcessModuleCollection&quot; /&gt; class, with no associated &lt;see cref=&quot;T:System.Diagnostics.ProcessModule&quot; /&gt; instances.">在没有关联的 <see cref="T:System.Diagnostics.ProcessModuleCollection" /> 实例的情况下，初始化 <see cref="T:System.Diagnostics.ProcessModule" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Diagnostics.ProcessModuleCollection.#ctor(System.Diagnostics.ProcessModule[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.ProcessModuleCollection&quot; /&gt; class, using the specified array of &lt;see cref=&quot;T:System.Diagnostics.ProcessModule&quot; /&gt; instances.">使用指定的 <see cref="T:System.Diagnostics.ProcessModuleCollection" /> 实例数组来初始化 <see cref="T:System.Diagnostics.ProcessModule" /> 类的新实例。</summary>
      <param name="processModules" vsli:raw="An array of &lt;see cref=&quot;T:System.Diagnostics.ProcessModule&quot; /&gt; instances with which to initialize this &lt;see cref=&quot;T:System.Diagnostics.ProcessModuleCollection&quot; /&gt; instance.">用来初始化该 <see cref="T:System.Diagnostics.ProcessModule" /> 实例的 <see cref="T:System.Diagnostics.ProcessModuleCollection" /> 实例的数组。</param>
    </member>
    <member name="M:System.Diagnostics.ProcessModuleCollection.Contains(System.Diagnostics.ProcessModule)">
      <summary vsli:raw="Determines whether the specified process module exists in the collection.">确定集合中是否存在指定的进程模块。</summary>
      <param name="module" vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.ProcessModule&quot; /&gt; instance that indicates the module to find in this collection.">一个 <see cref="T:System.Diagnostics.ProcessModule" /> 实例，它指示要该集合中查找的模块。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the module exists in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果集合中存在该模块，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.ProcessModuleCollection.CopyTo(System.Diagnostics.ProcessModule[],System.Int32)">
      <summary vsli:raw="Copies an array of &lt;see cref=&quot;T:System.Diagnostics.ProcessModule&quot; /&gt; instances to the collection, at the specified index.">将 <see cref="T:System.Diagnostics.ProcessModule" /> 实例的数组复制到集合的指定索引处。</summary>
      <param name="array" vsli:raw="An array of &lt;see cref=&quot;T:System.Diagnostics.ProcessModule&quot; /&gt; instances to add to the collection.">要添加到集合的 <see cref="T:System.Diagnostics.ProcessModule" /> 实例的数组。</param>
      <param name="index" vsli:raw="The location at which to add the new instances.">要添加新实例的位置。</param>
    </member>
    <member name="M:System.Diagnostics.ProcessModuleCollection.IndexOf(System.Diagnostics.ProcessModule)">
      <summary vsli:raw="Provides the location of a specified module within the collection.">提供指定模块在集合中的位置。</summary>
      <param name="module" vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.ProcessModule&quot; /&gt; whose index is retrieved.">检索其索引的 <see cref="T:System.Diagnostics.ProcessModule" />。</param>
      <returns vsli:raw="The zero-based index that defines the location of the module within the &lt;see cref=&quot;T:System.Diagnostics.ProcessModuleCollection&quot; /&gt;.">从零开始的索引，它定义模块在 <see cref="T:System.Diagnostics.ProcessModuleCollection" /> 中的位置。</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessModuleCollection.Item(System.Int32)">
      <summary vsli:raw="Gets an index for iterating over the set of process modules.">获取用于循环访问进程模块集的索引。</summary>
      <param name="index" vsli:raw="The zero-based index value of the module in the collection.">集合中该模块的从零开始的索引值。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.ProcessModule&quot; /&gt; that indexes the modules in the collection.">一个 <see cref="T:System.Diagnostics.ProcessModule" />，它对集合中的模块进行索引</returns>
    </member>
    <member name="T:System.Diagnostics.ProcessPriorityClass">
      <summary vsli:raw="Indicates the priority that the system associates with a process. This value, together with the priority value of each thread of the process, determines each thread's base priority level.">指示系统将与进程关联的优先级。 此值与进程的每个线程的优先级值一起来确定每个线程的基本优先级别。</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessPriorityClass.AboveNormal">
      <summary vsli:raw="Specifies that the process has priority higher than &lt;see langword=&quot;Normal&quot; /&gt; but lower than &lt;see langword=&quot;High&quot; /&gt;.">指定进程的优先级高于 <see langword="Normal" /> 但低于 <see langword="High" />。</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessPriorityClass.BelowNormal">
      <summary vsli:raw="Specifies that the process has priority above &lt;see langword=&quot;Idle&quot; /&gt; but below &lt;see langword=&quot;Normal&quot; /&gt;.">指定进程的优先级在 <see langword="Idle" /> 之上，但在 <see langword="Normal" /> 之下。</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessPriorityClass.High">
      <summary vsli:raw="Specifies that the process performs time-critical tasks that must be executed immediately, such as the &lt;see langword=&quot;Task List&quot; /&gt; dialog, which must respond quickly when called by the user, regardless of the load on the operating system. The threads of the process preempt the threads of normal or idle priority class processes. &lt;br /&gt;Use extreme care when specifying &lt;see langword=&quot;High&quot; /&gt; for the process's priority class, because a high priority class application can use nearly all available processor time.">指定进程执行必须立即执行的时间关键任务，如 <see langword="Task List" /> 对话框，不管操作系统的负荷如何，用户调用该对话框后均必须迅速响应。 该进程的线程优先于普通或空闲优先级类进程的线程。 为进程的优先级类指定 <see langword="High" /> 这一个优先级时需谨慎，因为高优先级类应用程序几乎可以使用所有可用的处理器时间。</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessPriorityClass.Idle">
      <summary vsli:raw="Specifies that the threads of this process run only when the system is idle, such as a screen saver. The threads of the process are preempted by the threads of any process running in a higher priority class. This priority class is inherited by child processes.">指定此进程的线程只能在系统空闲时运行，如屏幕保护程序。 更高优先级类中运行的任何进程的线程都优先于此进程的线程。 此优先级类由子进程继承。</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessPriorityClass.Normal">
      <summary vsli:raw="Specifies that the process has no special scheduling needs.">指定进程没有特殊的安排需求。</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessPriorityClass.RealTime">
      <summary vsli:raw="Specifies that the process has the highest possible priority. &lt;br /&gt;The threads of a process with &lt;see langword=&quot;RealTime&quot; /&gt; priority preempt the threads of all other processes, including operating system processes performing important tasks. Thus, a &lt;see langword=&quot;RealTime&quot; /&gt; priority process that executes for more than a very brief interval can cause disk caches not to flush or cause the mouse to be unresponsive.">指定进程拥有可能的最高优先级。 具有 <see langword="RealTime" /> 优先级的进程的线程抢占所有其他进程的线程，包括执行重要任务的操作系统进程。 因此，执行时间并不太短的 <see langword="RealTime" /> 优先级进程可能导致磁盘高速缓存不刷新或鼠标无响应。</summary>
    </member>
    <member name="T:System.Diagnostics.ProcessStartInfo">
      <summary vsli:raw="Specifies a set of values that are used when you start a process.">指定启动进程时使用的一组值。</summary>
    </member>
    <member name="M:System.Diagnostics.ProcessStartInfo.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.ProcessStartInfo&quot; /&gt; class without specifying a file name with which to start the process.">初始化 <see cref="T:System.Diagnostics.ProcessStartInfo" /> 类的新实例，而不指定启动进程时使用的文件名。</summary>
    </member>
    <member name="M:System.Diagnostics.ProcessStartInfo.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.ProcessStartInfo&quot; /&gt; class and specifies a file name such as an application or document with which to start the process.">初始化 <see cref="T:System.Diagnostics.ProcessStartInfo" /> 类的新实例，并指定启动进程时使用的诸如应用程序或文档的文件名。</summary>
      <param name="fileName" vsli:raw="An application or document with which to start a process.">启动进程时使用的应用程序或文档。</param>
    </member>
    <member name="M:System.Diagnostics.ProcessStartInfo.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.ProcessStartInfo&quot; /&gt; class, specifies an application file name with which to start the process, and specifies a set of command-line arguments to pass to the application.">初始化 <see cref="T:System.Diagnostics.ProcessStartInfo" /> 类的新实例，指定启动该进程时使用的应用程序文件名以及要传递给该应用程序的一组命令行参数。</summary>
      <param name="fileName" vsli:raw="An application with which to start a process.">启动进程时使用的应用程序。</param>
      <param name="arguments" vsli:raw="Command-line arguments to pass to the application when the process starts.">进程启动时要传递给应用程序的命令行参数。</param>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.ArgumentList">
      <summary vsli:raw="Gets a collection of command-line arguments to use when starting the application. Strings added to the list don't need to be previously escaped.">获取启动应用程序时要使用的命令行参数集合。</summary>
      <returns vsli:raw="A collection of command-line arguments.">命令行参数的集合。</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.Arguments">
      <summary vsli:raw="Gets or sets the set of command-line arguments to use when starting the application.">获取或设置启动应用程序时要使用的一组命令行参数。</summary>
      <returns vsli:raw="A single string containing the arguments to pass to the target application specified in the &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.FileName&quot; /&gt; property. The default is an empty string (&quot;&quot;).">单个字符串包含要传递给在 <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> 属性中指定的目标应用程序的参数。 默认值为空字符串("")。</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.CreateNoWindow">
      <summary vsli:raw="Gets or sets a value indicating whether to start the process in a new window.">获取或设置指示是否在新窗口中启动该进程的值。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the process should be started without creating a new window to contain it; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果应启动该进程而不创建包含它的新窗口，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.Domain">
      <summary vsli:raw="Gets or sets a value that identifies the domain to use when starting the process. If this value is &lt;see langword=&quot;null&quot; /&gt;, the &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.UserName&quot; /&gt; property must be specified in UPN format.">获取或设置一个值，该值标识要在启动进程时使用的域。 如果此值为 <see langword="null" />，则必须以 UPN 格式指定 <see cref="P:System.Diagnostics.ProcessStartInfo.UserName" /> 属性。</summary>
      <returns vsli:raw="The Active Directory domain to use when starting the process. If this value is &lt;see langword=&quot;null&quot; /&gt;, the &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.UserName&quot; /&gt; property must be specified in UPN format.">要在启动进程时使用的 Active Directory 域。 如果此值为 <see langword="null" />，则必须以 UPN 格式指定 <see cref="P:System.Diagnostics.ProcessStartInfo.UserName" /> 属性。</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.Environment">
      <summary vsli:raw="Gets the environment variables that apply to this process and its child processes.">获取应用于此进程及其子进程的环境变量。</summary>
      <returns vsli:raw="A generic dictionary containing the environment variables that apply to this process and its child processes. The default is &lt;see langword=&quot;null&quot; /&gt;.">一个泛型字典，包含应用于此进程及其子进程的环境变量。 默认值为 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.EnvironmentVariables">
      <summary vsli:raw="Gets search paths for files, directories for temporary files, application-specific options, and other similar information.">获取文件的搜索路径、临时文件的目录、应用程序特定的选项和其他类似信息。</summary>
      <returns vsli:raw="A string dictionary that provides environment variables that apply to this process and child processes. The default is &lt;see langword=&quot;null&quot; /&gt;.">一个字符串字典，提供应用于此进程和子进程的环境变量。 默认值为 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.ErrorDialog">
      <summary vsli:raw="Gets or sets a value indicating whether an error dialog box is displayed to the user if the process cannot be started.">获取或设置一个值，该值指示不能启动进程时是否向用户显示错误对话框。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an error dialog box should be displayed on the screen if the process cannot be started; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果在不能启动进程时在屏幕上显示错误对话框，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.ErrorDialogParentHandle">
      <summary vsli:raw="Gets or sets the window handle to use when an error dialog box is shown for a process that cannot be started.">获取或设置在为不能启动的进程显示错误对话框时要使用的窗口句柄。</summary>
      <returns vsli:raw="A pointer to the handle of the error dialog box that results from a process start failure.">一个指针，标识因进程启动失败而产生的错误对话框的句柄。</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.FileName">
      <summary vsli:raw="Gets or sets the application or document to start.">获取或设置要启动的应用程序或文档。</summary>
      <returns vsli:raw="The name of the application to start, or the name of a document of a file type that is associated with an application and that has a default open action available to it. The default is an empty string (&quot;&quot;).">要启动的应用程序的名称或某文件类型的文档的名称，该文件类型与应用程序关联并且拥有可用的默认打开操作。 默认值为空字符串("")。</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.LoadUserProfile">
      <summary vsli:raw="Gets or sets a value that indicates whether the Windows user profile is to be loaded from the registry.">获取或设置一个值，该值指示是否从注册表加载 Windows 用户配置文件。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Windows user profile should be loaded; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果应加载 Windows 用户概况，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.Password">
      <summary vsli:raw="Gets or sets a secure string that contains the user password to use when starting the process.">获取或设置一个安全字符串，其中包含要在启动进程时使用的用户密码。</summary>
      <returns vsli:raw="The user password to use when starting the process.">启动进程时使用的用户密码。</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.PasswordInClearText">
      <summary vsli:raw="Gets or sets the user password in clear text to use when starting the process.">获取或设置明文形式的用户密码以便在启动进程时使用。</summary>
      <returns vsli:raw="The user password in clear text.">明文形式的用户密码。</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError">
      <summary vsli:raw="Gets or sets a value that indicates whether the error output of an application is written to the &lt;see cref=&quot;P:System.Diagnostics.Process.StandardError&quot; /&gt; stream.">获取或设置一个值，该值指示是否将应用程序的错误输出写入 <see cref="P:System.Diagnostics.Process.StandardError" /> 流中。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if error output should be written to &lt;see cref=&quot;P:System.Diagnostics.Process.StandardError&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果错误输出应写入<see langword="true" /> ，则为 <see cref="P:System.Diagnostics.Process.StandardError" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput">
      <summary vsli:raw="Gets or sets a value indicating whether the input for an application is read from the &lt;see cref=&quot;P:System.Diagnostics.Process.StandardInput&quot; /&gt; stream.">获取或设置一个值，该值指示应用程序的输入是否从 <see cref="P:System.Diagnostics.Process.StandardInput" /> 流中读取。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if input should be read from &lt;see cref=&quot;P:System.Diagnostics.Process.StandardInput&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果应从 <see cref="P:System.Diagnostics.Process.StandardInput" /> 读取输入，作为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput">
      <summary vsli:raw="Gets or sets a value that indicates whether the textual output of an application is written to the &lt;see cref=&quot;P:System.Diagnostics.Process.StandardOutput&quot; /&gt; stream.">获取或设置指示是否将应用程序的文本输出写入 <see cref="P:System.Diagnostics.Process.StandardOutput" /> 流中的值。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if output should be written to &lt;see cref=&quot;P:System.Diagnostics.Process.StandardOutput&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果输出应写入<see langword="true" /> ，则为 <see cref="P:System.Diagnostics.Process.StandardOutput" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.StandardErrorEncoding">
      <summary vsli:raw="Gets or sets the preferred encoding for error output.">获取或设置错误输出的首选编码。</summary>
      <returns vsli:raw="An object that represents the preferred encoding for error output. The default is &lt;see langword=&quot;null&quot; /&gt;.">一个对象，表示错误输出的首选编码。 默认值为 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.StandardInputEncoding" />
    <member name="P:System.Diagnostics.ProcessStartInfo.StandardOutputEncoding">
      <summary vsli:raw="Gets or sets the preferred encoding for standard output.">获取或设置标准输出的首选编码。</summary>
      <returns vsli:raw="An object that represents the preferred encoding for standard output. The default is &lt;see langword=&quot;null&quot; /&gt;.">一个对象，表示标准输出的首选编码。 默认值为 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.UserName">
      <summary vsli:raw="Gets or sets the user name to use when starting the process. If you use the UPN format, &lt;paramref name=&quot;user&quot; /&gt;@&lt;paramref name=&quot;DNS_domain_name&quot; /&gt;, the &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.Domain&quot; /&gt; property must be &lt;see langword=&quot;null&quot; /&gt;.">获取或设置在启动进程时使用的用户名。 如果使用 UPN 格式，<paramref name="user" />@<paramref name="DNS_domain_name" />，则 <see cref="P:System.Diagnostics.ProcessStartInfo.Domain" /> 属性必须为 <see langword="null" />。</summary>
      <returns vsli:raw="The user name to use when starting the process. If you use the UPN format, &lt;paramref name=&quot;user&quot; /&gt;@&lt;paramref name=&quot;DNS_domain_name&quot; /&gt;, the &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.Domain&quot; /&gt; property must be &lt;see langword=&quot;null&quot; /&gt;.">启动进程时使用的用户名。 如果使用 UPN 格式，<paramref name="user" />@<paramref name="DNS_domain_name" />，则 <see cref="P:System.Diagnostics.ProcessStartInfo.Domain" /> 属性必须为 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.UseShellExecute">
      <summary vsli:raw="Gets or sets a value indicating whether to use the operating system shell to start the process.">获取或设置一个值，该值指示是否使用操作系统 shell 启动进程。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the shell should be used when starting the process; &lt;see langword=&quot;false&quot; /&gt; if the process should be created directly from the executable file. The default is &lt;see langword=&quot;true&quot; /&gt; on .NET Framework apps and &lt;see langword=&quot;false&quot; /&gt; on .NET Core apps.">如果应在启动进程时使用 shell，则为 <see langword="true" />；如果直接从可执行文件创建进程，则为 <see langword="false" />。 默认值为<see langword="true" /> .NET Framework 应用和<see langword="false" /> .net Core 应用上的。</returns>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw="An attempt to set the value to &lt;see langword=&quot;true&quot; /&gt; on Universal Windows Platform (UWP) apps occurs.">尝试在通用 Windows 平台 (UWP) 应用上将值设置为 <see langword="true" />。</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.Verb">
      <summary vsli:raw="Gets or sets the verb to use when opening the application or document specified by the &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.FileName&quot; /&gt; property.">获取或设置打开 <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> 属性指定的应用程序或文档时要使用的谓词。</summary>
      <returns vsli:raw="The action to take with the file that the process opens. The default is an empty string (&quot;&quot;), which signifies no action.">要对进程打开的文件执行的操作。 默认值是空字符串 ("")，它表示没有操作。</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.Verbs">
      <summary vsli:raw="Gets the set of verbs associated with the type of file specified by the &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.FileName&quot; /&gt; property.">获取与 <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> 属性指定的文件类型关联的一组谓词。</summary>
      <returns vsli:raw="The actions that the system can apply to the file indicated by the &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.FileName&quot; /&gt; property.">系统可应用于 <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> 属性所指示文件的操作。</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.WindowStyle">
      <summary vsli:raw="Gets or sets the window state to use when the process is started.">获取或设置启动进程时使用的窗口状态。</summary>
      <returns vsli:raw="One of the enumeration values that indicates whether the process is started in a window that is maximized, minimized, normal (neither maximized nor minimized), or not visible. The default is &lt;see langword=&quot;Normal&quot; /&gt;.">枚举值之一，它指示是在最大化窗口、最小化窗口、正常（即非最大化也非最小化）窗口还是在不可见的窗口中启动进程。 默认值为 <see langword="Normal" />。</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="The window style is not one of the &lt;see cref=&quot;T:System.Diagnostics.ProcessWindowStyle&quot; /&gt; enumeration members.">窗口样式不是 <see cref="T:System.Diagnostics.ProcessWindowStyle" /> 枚举成员之一。</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.WorkingDirectory">
      <summary vsli:raw="When the &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.UseShellExecute&quot; /&gt; property is &lt;see langword=&quot;false&quot; /&gt;, gets or sets the working directory for the process to be started. When &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.UseShellExecute&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;, gets or sets the directory that contains the process to be started.">当 <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> 属性为 <see langword="false" /> 时，将获取或设置要启动的进程的工作目录。 当 <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> 为 <see langword="true" /> 时，获取或设置包含要启动的进程的目录。</summary>
      <returns vsli:raw="When &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.UseShellExecute&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;, the fully qualified name of the directory that contains the process to be started. When the &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.UseShellExecute&quot; /&gt; property is &lt;see langword=&quot;false&quot; /&gt;, the working directory for the process to be started. The default is an empty string (&quot;&quot;).">当 <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> 为 <see langword="true" /> 时，是包含要启动的进程的目录的完全限定名。 当 <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> 属性为 <see langword="false" /> 时，则为要启动的进程的工作目录。 默认值为空字符串("")。</returns>
    </member>
    <member name="T:System.Diagnostics.ProcessThread">
      <summary vsli:raw="Represents an operating system process thread.">表示操作系统进程线程。</summary>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.BasePriority">
      <summary vsli:raw="Gets the base priority of the thread.">获取线程的基本优先级。</summary>
      <returns vsli:raw="The base priority of the thread, which the operating system computes by combining the process priority class with the priority level of the associated thread.">线程的基本优先级，它由操作系统通过将进程优先级类与关联线程的优先级别相结合进行计算。</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.CurrentPriority">
      <summary vsli:raw="Gets the current priority of the thread.">获取线程的当前优先级。</summary>
      <returns vsli:raw="The current priority of the thread, which may deviate from the base priority based on how the operating system is scheduling the thread. The priority may be temporarily boosted for an active thread.">线程的当前优先级，可根据操作系统如何安排该线程而偏离基本优先级。 可为活动线程暂时提升优先级。</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.Id">
      <summary vsli:raw="Gets the unique identifier of the thread.">获取线程的唯一标识符。</summary>
      <returns vsli:raw="The unique identifier associated with a specific thread.">与指定线程关联的唯一标识符。</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.IdealProcessor">
      <summary vsli:raw="Sets the preferred processor for this thread to run on.">设置让此线程在其上运行的首选处理器。</summary>
      <returns vsli:raw="The preferred processor for the thread, used when the system schedules threads, to determine which processor to run the thread on.">线程的首选处理器，用来在系统安排线程时确定在哪个处理器上运行线程。</returns>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The system could not set the thread to start on the specified processor.">系统未能设置线程在指定的处理器上启动。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The process is on a remote computer.">进程在远程计算机上。</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.PriorityBoostEnabled">
      <summary vsli:raw="Gets or sets a value indicating whether the operating system should temporarily boost the priority of the associated thread whenever the main window of the thread's process receives the focus.">获取或设置一个值，该值指示每当关联线程的进程主窗口接收焦点时，操作系统是否暂时提升该线程的优先级。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to boost the thread's priority when the user interacts with the process's interface; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">若要在用户与进程的界面交互时提升线程的优先级，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The priority boost information could not be retrieved.  &#xA;  &#xA; -or-  &#xA;  &#xA; The priority boost information could not be set.">未能检索到优先级提升信息。  
 或  
 未能设置优先级提升信息。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The process is on a remote computer.">进程在远程计算机上。</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.PriorityLevel">
      <summary vsli:raw="Gets or sets the priority level of the thread.">获取或设置线程的优先级别。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Diagnostics.ThreadPriorityLevel&quot; /&gt; values, specifying a range that bounds the thread's priority.">
        <see cref="T:System.Diagnostics.ThreadPriorityLevel" /> 值之一，它指定限制线程优先级的范围。</returns>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The thread priority level information could not be retrieved.  &#xA;  &#xA; -or-  &#xA;  &#xA; The thread priority level could not be set.">未能检索到线程优先级别信息。  
 或  
 未能设置线程优先级别。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The process is on a remote computer.">进程在远程计算机上。</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.PrivilegedProcessorTime">
      <summary vsli:raw="Gets the amount of time that the thread has spent running code inside the operating system core.">获取线程在操作系统内核中运行代码所用的时间。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; indicating the amount of time that the thread has spent running code inside the operating system core.">
        <see cref="T:System.TimeSpan" />，它指示线程在操作系统内核中运行代码所用的时间。</returns>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The thread time could not be retrieved.">未能检索到线程时间。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The process is on a remote computer.">进程在远程计算机上。</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.ProcessorAffinity">
      <summary vsli:raw="Sets the processors on which the associated thread can run.">设置关联线程可以在其上运行的处理器。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IntPtr&quot; /&gt; that points to a set of bits, each of which represents a processor that the thread can run on.">指向一组位的 <see cref="T:System.IntPtr" />，每个位表示该线程可在其上运行的一个处理器。</returns>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The processor affinity could not be set.">未能设置处理器关联。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The process is on a remote computer.">进程在远程计算机上。</exception>
    </member>
    <member name="M:System.Diagnostics.ProcessThread.ResetIdealProcessor">
      <summary vsli:raw="Resets the ideal processor for this thread to indicate that there is no single ideal processor. In other words, so that any processor is ideal.">重置此线程的理想处理器，以指示没有单个的理想处理器。 换言之，任何处理器都是理想处理器。</summary>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The ideal processor could not be reset.">未能重置理想处理器。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The process is on a remote computer.">进程在远程计算机上。</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.StartAddress">
      <summary vsli:raw="Gets the memory address of the function that the operating system called that started this thread.">获取操作系统调用的、启动此线程的函数的内存地址。</summary>
      <returns vsli:raw="The thread's starting address, which points to the application-defined function that the thread executes.">线程的起始地址，它指向线程执行的应用程序定义的函数。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The process is on a remote computer.">进程在远程计算机上。</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.StartTime">
      <summary vsli:raw="Gets the time that the operating system started the thread.">获取操作系统启动该线程的时间。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; representing the time that was on the system when the operating system started the thread.">
        <see cref="T:System.DateTime" />，它表示操作系统启动该线程时系统上的时间。</returns>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The thread time could not be retrieved.">未能检索到线程时间。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The process is on a remote computer.">进程在远程计算机上。</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.ThreadState">
      <summary vsli:raw="Gets the current state of this thread.">获取此线程的当前状态。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.ThreadState&quot; /&gt; that indicates the thread's execution, for example, running, waiting, or terminated.">指示线程执行情况的 <see cref="T:System.Diagnostics.ThreadState" />（例如运行、等待或终止）。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The process is on a remote computer.">进程在远程计算机上。</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.TotalProcessorTime">
      <summary vsli:raw="Gets the total amount of time that this thread has spent using the processor.">获取此线程使用处理器的时间总量。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; that indicates the amount of time that the thread has had control of the processor.">
        <see cref="T:System.TimeSpan" />，它指示线程控制处理器的时间。</returns>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The thread time could not be retrieved.">未能检索到线程时间。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The process is on a remote computer.">进程在远程计算机上。</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.UserProcessorTime">
      <summary vsli:raw="Gets the amount of time that the associated thread has spent running code inside the application.">获取关联的线程在应用程序内运行代码所用的时间。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; indicating the amount of time that the thread has spent running code inside the application, as opposed to inside the operating system core.">
        <see cref="T:System.TimeSpan" />，它指示线程在应用程序内（相对于在操作系统内核中）运行代码所用的时间。</returns>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The thread time could not be retrieved.">未能检索到线程时间。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The process is on a remote computer.">进程在远程计算机上。</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.WaitReason">
      <summary vsli:raw="Gets the reason that the thread is waiting.">获取线程等待的原因。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.ThreadWaitReason&quot; /&gt; representing the reason that the thread is in the wait state.">一个 <see cref="T:System.Diagnostics.ThreadWaitReason" />，表示线程处于等待状态的原因。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The thread is not in the wait state.">线程不在等待状态。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The process is on a remote computer.">进程在远程计算机上。</exception>
    </member>
    <member name="T:System.Diagnostics.ProcessThreadCollection">
      <summary vsli:raw="Provides a strongly typed collection of &lt;see cref=&quot;T:System.Diagnostics.ProcessThread&quot; /&gt; objects.">提供 <see cref="T:System.Diagnostics.ProcessThread" /> 对象的强类型集合。</summary>
    </member>
    <member name="M:System.Diagnostics.ProcessThreadCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.ProcessThreadCollection&quot; /&gt; class, with no associated &lt;see cref=&quot;T:System.Diagnostics.ProcessThread&quot; /&gt; instances.">在没有关联的 <see cref="T:System.Diagnostics.ProcessThreadCollection" /> 实例的情况下，初始化 <see cref="T:System.Diagnostics.ProcessThread" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Diagnostics.ProcessThreadCollection.#ctor(System.Diagnostics.ProcessThread[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.ProcessThreadCollection&quot; /&gt; class, using the specified array of &lt;see cref=&quot;T:System.Diagnostics.ProcessThread&quot; /&gt; instances.">使用指定的 <see cref="T:System.Diagnostics.ProcessThreadCollection" /> 实例数组来初始化 <see cref="T:System.Diagnostics.ProcessThread" /> 类的新实例。</summary>
      <param name="processThreads" vsli:raw="An array of &lt;see cref=&quot;T:System.Diagnostics.ProcessThread&quot; /&gt; instances with which to initialize this &lt;see cref=&quot;T:System.Diagnostics.ProcessThreadCollection&quot; /&gt; instance.">用来初始化该 <see cref="T:System.Diagnostics.ProcessThread" /> 实例的 <see cref="T:System.Diagnostics.ProcessThreadCollection" /> 实例的数组。</param>
    </member>
    <member name="M:System.Diagnostics.ProcessThreadCollection.Add(System.Diagnostics.ProcessThread)">
      <summary vsli:raw="Appends a process thread to the collection.">将进程线程附加到集合。</summary>
      <param name="thread" vsli:raw="The thread to add to the collection.">要添加到集合中的线程。</param>
      <returns vsli:raw="The zero-based index of the thread in the collection.">集合中线程的从零开始的索引。</returns>
    </member>
    <member name="M:System.Diagnostics.ProcessThreadCollection.Contains(System.Diagnostics.ProcessThread)">
      <summary vsli:raw="Determines whether the specified process thread exists in the collection.">确定集合中是否存在指定的进程线程。</summary>
      <param name="thread" vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.ProcessThread&quot; /&gt; instance that indicates the thread to find in this collection.">一个 <see cref="T:System.Diagnostics.ProcessThread" /> 实例，它指示要在该集合中查找的线程。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the thread exists in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果集合中存在该线程，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.ProcessThreadCollection.CopyTo(System.Diagnostics.ProcessThread[],System.Int32)">
      <summary vsli:raw="Copies an array of &lt;see cref=&quot;T:System.Diagnostics.ProcessThread&quot; /&gt; instances to the collection, at the specified index.">将 <see cref="T:System.Diagnostics.ProcessThread" /> 实例的数组复制到集合的指定索引处。</summary>
      <param name="array" vsli:raw="An array of &lt;see cref=&quot;T:System.Diagnostics.ProcessThread&quot; /&gt; instances to add to the collection.">要添加到集合的 <see cref="T:System.Diagnostics.ProcessThread" /> 实例的数组。</param>
      <param name="index" vsli:raw="The location at which to add the new instances.">要添加新实例的位置。</param>
    </member>
    <member name="M:System.Diagnostics.ProcessThreadCollection.IndexOf(System.Diagnostics.ProcessThread)">
      <summary vsli:raw="Provides the location of a specified thread within the collection.">提供指定线程在集合中的位置。</summary>
      <param name="thread" vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.ProcessThread&quot; /&gt; whose index is retrieved.">检索其索引的 <see cref="T:System.Diagnostics.ProcessThread" />。</param>
      <returns vsli:raw="The zero-based index that defines the location of the thread within the &lt;see cref=&quot;T:System.Diagnostics.ProcessThreadCollection&quot; /&gt;.">从零开始的索引，它定义线程在 <see cref="T:System.Diagnostics.ProcessThreadCollection" /> 中的位置。</returns>
    </member>
    <member name="M:System.Diagnostics.ProcessThreadCollection.Insert(System.Int32,System.Diagnostics.ProcessThread)">
      <summary vsli:raw="Inserts a process thread at the specified location in the collection.">在集合中的指定位置插入进程线程。</summary>
      <param name="index" vsli:raw="The zero-based index indicating the location at which to insert the thread.">从零开始的索引，指示插入线程的位置。</param>
      <param name="thread" vsli:raw="The thread to insert into the collection.">要插入到集合中的线程。</param>
    </member>
    <member name="P:System.Diagnostics.ProcessThreadCollection.Item(System.Int32)">
      <summary vsli:raw="Gets an index for iterating over the set of process threads.">获取用于循环访问进程线程集的索引。</summary>
      <param name="index" vsli:raw="The zero-based index value of the thread in the collection.">集合中该值的从零开始的索引。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.ProcessThread&quot; /&gt; that indexes the threads in the collection.">一个 <see cref="T:System.Diagnostics.ProcessThread" />，它对集合中的线程进行索引。</returns>
    </member>
    <member name="M:System.Diagnostics.ProcessThreadCollection.Remove(System.Diagnostics.ProcessThread)">
      <summary vsli:raw="Deletes a process thread from the collection.">从集合中删除进程线程。</summary>
      <param name="thread" vsli:raw="The thread to remove from the collection.">要从该集合中移除的线程。</param>
    </member>
    <member name="T:System.Diagnostics.ProcessWindowStyle">
      <summary vsli:raw="Specified how a new window should appear when the system starts a process.">指定在系统启动进程时新窗口应如何显示。</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessWindowStyle.Hidden">
      <summary vsli:raw="The hidden window style. A window can be either visible or hidden. The system displays a hidden window by not drawing it. If a window is hidden, it is effectively disabled. A hidden window can process messages from the system or from other windows, but it cannot process input from the user or display output. Frequently, an application may keep a new window hidden while it customizes the window's appearance, and then make the window style &lt;see cref=&quot;F:System.Diagnostics.ProcessWindowStyle.Normal&quot; /&gt;. To use &lt;see cref=&quot;F:System.Diagnostics.ProcessWindowStyle.Hidden&quot; /&gt;, the &lt;see cref=&quot;P:System.Diagnostics.ProcessStartInfo.UseShellExecute&quot; /&gt; property must be &lt;see langword=&quot;true&quot; /&gt;.">隐藏窗口样式。 窗口可以采用可见或隐藏样式。 系统会通过不绘制窗口来显示隐藏的窗口。 当隐藏窗口时，实际上是将其禁用。 隐藏的窗口可以从系统或其他窗口中处理消息，但它不能处理用户的输入，也不能显示输出。 通常，应用程序可能会在自定义窗口外观时使新窗口保持隐藏，然后再使窗口样式成为 <see cref="F:System.Diagnostics.ProcessWindowStyle.Normal" />。 要使用 <see cref="F:System.Diagnostics.ProcessWindowStyle.Hidden" />，<see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> 属性必须为 <see langword="true" />。</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessWindowStyle.Maximized">
      <summary vsli:raw="The maximized window style. By default, the system enlarges a maximized window so that it fills the screen or, in the case of a child window, the parent window's client area. If the window has a title bar, the system automatically moves it to the top of the screen or to the top of the parent window's client area. Also, the system disables the window's sizing border and the window-positioning capability of the title bar so that the user cannot move the window by dragging the title bar.">最大化窗口样式。 默认情况下，系统会放大最大化窗口，使其填充整个屏幕（或者在子窗口的情况下使其填充父窗口的整个工作区）。 如果窗口具有标题栏，系统会自动将其移至屏幕的顶端或父窗口工作区的顶端。 此外，系统会禁用窗口的可调整边框和标题栏的窗口定位功能，使用户无法通过拖动标题栏来移动窗口。</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessWindowStyle.Minimized">
      <summary vsli:raw="The minimized window style. By default, the system reduces a minimized window to the size of its taskbar button and moves the minimized window to the taskbar.">最小化窗口样式。 默认情况下，系统会将最小化窗口缩小到任务栏按钮的大小并将最小化窗口移至任务栏上。</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessWindowStyle.Normal">
      <summary vsli:raw="The normal, visible window style. The system displays a window with &lt;see cref=&quot;F:System.Diagnostics.ProcessWindowStyle.Normal&quot; /&gt; style on the screen, in a default location. If a window is visible, the user can supply input to the window and view the window's output. Frequently, an application may initialize a new window to the &lt;see cref=&quot;F:System.Diagnostics.ProcessWindowStyle.Hidden&quot; /&gt; style while it customizes the window's appearance, and then make the window style &lt;see cref=&quot;F:System.Diagnostics.ProcessWindowStyle.Normal&quot; /&gt;.">正常的可见窗口样式。 系统会在屏幕上的默认位置显示具有 <see cref="F:System.Diagnostics.ProcessWindowStyle.Normal" /> 样式的窗口。 如果窗口可见，用户就可以在该窗口中提供输入并查看窗口的输出。 通常，应用程序可能会在自定义窗口外观时将新窗口初始化为 <see cref="F:System.Diagnostics.ProcessWindowStyle.Hidden" /> 样式，然后再使窗口样式成为 <see cref="F:System.Diagnostics.ProcessWindowStyle.Normal" />。</summary>
    </member>
    <member name="T:System.Diagnostics.ThreadPriorityLevel">
      <summary vsli:raw="Specifies the priority level of a thread.">指定线程的优先级别。</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadPriorityLevel.AboveNormal">
      <summary vsli:raw="Specifies one step above the normal priority for the associated &lt;see cref=&quot;T:System.Diagnostics.ProcessPriorityClass&quot; /&gt;.">指定的优先级比关联的 <see cref="T:System.Diagnostics.ProcessPriorityClass" /> 的普通优先级高一级。</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadPriorityLevel.BelowNormal">
      <summary vsli:raw="Specifies one step below the normal priority for the associated &lt;see cref=&quot;T:System.Diagnostics.ProcessPriorityClass&quot; /&gt;.">指定的优先级比关联的 <see cref="T:System.Diagnostics.ProcessPriorityClass" /> 的普通优先级低一级。</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadPriorityLevel.Highest">
      <summary vsli:raw="Specifies highest priority. This is two steps above the normal priority for the associated &lt;see cref=&quot;T:System.Diagnostics.ProcessPriorityClass&quot; /&gt;.">指定最高优先级。 这比关联的 <see cref="T:System.Diagnostics.ProcessPriorityClass" /> 的普通优先级高两级。</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadPriorityLevel.Idle">
      <summary vsli:raw="Specifies idle priority. This is the lowest possible priority value of all threads, independent of the value of the associated &lt;see cref=&quot;T:System.Diagnostics.ProcessPriorityClass&quot; /&gt;.">指定空闲优先级。 它是所有线程的可能的最低优先级值，与关联的 <see cref="T:System.Diagnostics.ProcessPriorityClass" /> 的值无关。</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadPriorityLevel.Lowest">
      <summary vsli:raw="Specifies lowest priority. This is two steps below the normal priority for the associated &lt;see cref=&quot;T:System.Diagnostics.ProcessPriorityClass&quot; /&gt;.">指定最低优先级。 这比关联的 <see cref="T:System.Diagnostics.ProcessPriorityClass" /> 的普通优先级低两级。</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadPriorityLevel.Normal">
      <summary vsli:raw="Specifies normal priority for the associated &lt;see cref=&quot;T:System.Diagnostics.ProcessPriorityClass&quot; /&gt;.">指定关联的 <see cref="T:System.Diagnostics.ProcessPriorityClass" /> 的普通优先级。</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadPriorityLevel.TimeCritical">
      <summary vsli:raw="Specifies time-critical priority. This is the highest priority of all threads, independent of the value of the associated &lt;see cref=&quot;T:System.Diagnostics.ProcessPriorityClass&quot; /&gt;.">指定时间关键优先级。 这是所有线程中的最高优先级，与关联的 <see cref="T:System.Diagnostics.ProcessPriorityClass" /> 的值无关。</summary>
    </member>
    <member name="T:System.Diagnostics.ThreadState">
      <summary vsli:raw="Specifies the current execution state of the thread.">指定线程的当前执行状态。</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadState.Initialized">
      <summary vsli:raw="A state that indicates the thread has been initialized, but has not yet started.">此状态指示线程已初始化但尚未启动。</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadState.Ready">
      <summary vsli:raw="A state that indicates the thread is waiting to use a processor because no processor is free. The thread is prepared to run on the next available processor.">此状态指示线程因无可用的处理器而等待使用处理器。 线程准备在下一个可用的处理器上运行。</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadState.Running">
      <summary vsli:raw="A state that indicates the thread is currently using a processor.">此状态指示线程当前正在使用处理器。</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadState.Standby">
      <summary vsli:raw="A state that indicates the thread is about to use a processor. Only one thread can be in this state at a time.">此状态指示线程将要使用处理器。 一次只能有一个线程处于此状态。</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadState.Terminated">
      <summary vsli:raw="A state that indicates the thread has finished executing and has exited.">此状态指示线程已完成执行并已退出。</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadState.Transition">
      <summary vsli:raw="A state that indicates the thread is waiting for a resource, other than the processor, before it can execute. For example, it might be waiting for its execution stack to be paged in from disk.">此状态指示线程在可以执行前等待处理器之外的资源。 例如，它可能正在等待其执行堆栈从磁盘中分页。</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadState.Unknown">
      <summary vsli:raw="The state of the thread is unknown.">线程的状态未知。</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadState.Wait">
      <summary vsli:raw="A state that indicates the thread is not ready to use the processor because it is waiting for a peripheral operation to complete or a resource to become free. When the thread is ready, it will be rescheduled.">此状态指示线程尚未准备好使用处理器，因为它正在等待外围操作完成或等待资源释放。 当线程就绪后，将对其进行重排。</summary>
    </member>
    <member name="T:System.Diagnostics.ThreadWaitReason">
      <summary vsli:raw="Specifies the reason a thread is waiting.">指定线程等待的原因。</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.EventPairHigh">
      <summary vsli:raw="The thread is waiting for event pair high.">线程正在等待事件对高。</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.EventPairLow">
      <summary vsli:raw="The thread is waiting for event pair low.">线程正在等待事件对低。</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.ExecutionDelay">
      <summary vsli:raw="Thread execution is delayed.">线程执行延迟。</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.Executive">
      <summary vsli:raw="The thread is waiting for the scheduler.">线程正在等待计划程序。</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.FreePage">
      <summary vsli:raw="The thread is waiting for a free virtual memory page.">线程正在等待可用的虚拟内存页。</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.LpcReceive">
      <summary vsli:raw="The thread is waiting for a local procedure call to arrive.">线程正在等待本地过程调用到达。</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.LpcReply">
      <summary vsli:raw="The thread is waiting for reply to a local procedure call to arrive.">线程正在等待对本地过程调用的回复到达。</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.PageIn">
      <summary vsli:raw="The thread is waiting for a virtual memory page to arrive in memory.">线程正在等待虚拟内存页到达内存。</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.PageOut">
      <summary vsli:raw="The thread is waiting for a virtual memory page to be written to disk.">线程正在等待虚拟内存页写入磁盘。</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.Suspended">
      <summary vsli:raw="Thread execution is suspended.">线程执行暂停。</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.SystemAllocation">
      <summary vsli:raw="The thread is waiting for system allocation.">线程正在等待系统分配。</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.Unknown">
      <summary vsli:raw="The thread is waiting for an unknown reason.">线程正在因未知原因而等待。</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.UserRequest">
      <summary vsli:raw="The thread is waiting for a user request.">线程正在等待用户请求。</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.VirtualMemory">
      <summary vsli:raw="The thread is waiting for the system to allocate virtual memory.">线程正在等待系统分配虚拟内存。</summary>
    </member>
  </members>
</doc>