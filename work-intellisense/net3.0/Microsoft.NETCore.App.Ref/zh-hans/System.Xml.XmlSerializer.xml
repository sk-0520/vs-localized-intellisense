<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Xml.XmlSerializer</name>
  </assembly>
  <members>
    <member name="T:System.Xml.Serialization.CodeGenerationOptions">
      <summary vsli:raw="Specifies various options to use when generating .NET types for use with an XML Web Service.">指定在生成用于 XML Web services 的 .NET Framework 类型时使用的各种选项。</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.EnableDataBinding">
      <summary vsli:raw="Enables data binding.">启用数据绑定。</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateNewAsync">
      <summary vsli:raw="Creates events for the asynchronous invocation of Web methods.">创建异步调用 Web 方法的事件。</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateOldAsync">
      <summary vsli:raw="Creates Begin and End methods for the asynchronous invocation of Web methods.">创建异步调用 Web 方法的 Begin 和 End 方法。</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder">
      <summary vsli:raw="Generates explicitly ordered serialization code as specified through the &lt;see langword=&quot;Order&quot; /&gt; property of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayAttribute&quot; /&gt;, and &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; attributes.">按 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />、<see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> 和 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 特性的 <see langword="Order" /> 属性所指定的方式显式生成排序序列化代码。</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateProperties">
      <summary vsli:raw="Represents primitive types by properties.">由属性表示基元类型。</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.None">
      <summary vsli:raw="Represents primitive types by fields and primitive types by &lt;see cref=&quot;N:System&quot; /&gt; namespace types.">由字段表示基元类型并由 <see cref="N:System" /> 命名空间类型表示基元类型。</summary>
    </member>
    <member name="T:System.Xml.Serialization.CodeIdentifier">
      <summary vsli:raw="Provides static methods to convert input text into names for code entities.">提供一些静态方法，用于将输入文本转换为代码实体的名称。</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifier&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.CodeIdentifier" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakeCamel(System.String)">
      <summary vsli:raw="Produces a camel-case string from an input string.">从输入字符串生成 Camel 大小写格式的字符串。</summary>
      <param name="identifier" vsli:raw="The name of a code entity, such as a method parameter, typically taken from an XML element or attribute name.">代码实体的名称（如方法参数）通常取自 XML 元素或特性名称。</param>
      <returns vsli:raw="A camel-case version of the parameter string.">参数字符串的 Camel 大小写格式版本。</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakePascal(System.String)">
      <summary vsli:raw="Produces a Pascal-case string from an input string.">从输入字符串生成 Pascal 大小写格式的字符串。</summary>
      <param name="identifier" vsli:raw="The name of a code entity, such as a method parameter, typically taken from an XML element or attribute name.">代码实体的名称（如方法参数）通常取自 XML 元素或特性名称。</param>
      <returns vsli:raw="A Pascal-case version of the parameter string.">参数字符串的 Pascal 大小写格式版本。</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakeValid(System.String)">
      <summary vsli:raw="Produces a valid code entity name from an input string.">从输入字符串生成有效的代码实体名称。</summary>
      <param name="identifier" vsli:raw="The name of a code entity, such as a method parameter, typically taken from an XML element or attribute name.">代码实体的名称（如方法参数）通常取自 XML 元素或特性名称。</param>
      <returns vsli:raw="A string that can be used as a code identifier, such as the name of a method parameter.">可以用作代码标识符的字符串，如方法参数的名称。</returns>
    </member>
    <member name="T:System.Xml.Serialization.CodeIdentifiers">
      <summary vsli:raw="Maintains a group of names for related code entities or type mappings that are generated by .NET's XML serialization infrastructure.">维护相关代码实体或类型映射的一组名称，这些名称是 .NET Framework 的 XML 序列化基础结构生成的。</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; class and determines whether code identifiers are case sensitive.">初始化 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 类的新实例并确定代码标识符是否区分大小写。</summary>
      <param name="caseSensitive" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if identifiers are case sensitive; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果标识符区分大小写，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Add(System.String,System.Object)">
      <summary vsli:raw="Adds a named code entity or type mapping to the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">将命名的代码实体或类型映射添加到 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 实例的范围中。</summary>
      <param name="identifier" vsli:raw="A name that is used to index the code entity.">用于对代码实体进行索引的名称。</param>
      <param name="value" vsli:raw="The code entity or type mapping information.">代码实体或类型映射信息。</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.AddReserved(System.String)">
      <summary vsli:raw="Prevents a specified name from being used within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">防止在 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 实例的范围中使用指定的名称。</summary>
      <param name="identifier" vsli:raw="A name that will not be available within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">将在 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 实例的范围中不可用的名称。</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.AddUnique(System.String,System.Object)">
      <summary vsli:raw="Adds a named code entity or type mapping to the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope, ensuring that the name is unique within the scope.">将命名的代码实体或类型映射添加到 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 实例的范围中，确保名称在该范围内是唯一的。</summary>
      <param name="identifier" vsli:raw="A candidate name that is used to index the code entity.">用于对代码实体进行索引的候选名称。</param>
      <param name="value" vsli:raw="The code entity or type mapping information.">代码实体或类型映射信息。</param>
      <returns vsli:raw="The identifier parameter value or a modified string if there is a name collision.">标识符参数值；如果存在名称冲突，则为修改后的字符串。</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Clear">
      <summary vsli:raw="Removes all code entities or type mappings, including their names, from the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">从 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 实例的范围中移除所有代码实体或类型映射，包括它们的名称。</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.IsInUse(System.String)">
      <summary vsli:raw="Determines whether a specified name is already being used within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">确定指定名称是否已在 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 实例的范围中使用。</summary>
      <param name="identifier" vsli:raw="The name to check for use within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">要检查是否已在 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 实例的范围中使用的名称。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the name is already in use; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果名称已使用，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.MakeRightCase(System.String)">
      <summary vsli:raw="Ensures that the input is of the correct case by modifying the name according to the value of the &lt;see cref=&quot;P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing&quot; /&gt; property.">根据 <see cref="P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing" /> 属性的值修改名称，以确保输入的大小写正确。</summary>
      <param name="identifier" vsli:raw="The name to possibly modify.">可能要修改的名称。</param>
      <returns vsli:raw="A string that is the same as the input identifier or has the first letter's case modified.">与输入标识符相同（或改变了首字母的大小写）的字符串。</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.MakeUnique(System.String)">
      <summary vsli:raw="Determines whether the input name conflicts with another name within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope and, if it does, generates a modified string.">确定输入名称是否与 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 实例范围中的其他名称冲突，如果是，则生成修改的字符串。</summary>
      <param name="identifier" vsli:raw="The name to modify if it is not already unique.">要修改的名称（如果不唯一）。</param>
      <returns vsli:raw="The identifier parameter value or a modified string if there is a name collision.">标识符参数值；如果存在名称冲突，则为修改后的字符串。</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Remove(System.String)">
      <summary vsli:raw="Removes from the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope the code entity or type mapping identified by the input name.">从 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 实例的范围中移除由输入名称标识的代码实体或类型映射。</summary>
      <param name="identifier" vsli:raw="The name of the code entity or type mapping information to remove.">要移除的代码实体或类型映射信息的名称。</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.RemoveReserved(System.String)">
      <summary vsli:raw="Removes the input name from the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's reserved names.">从 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 实例的保留名称中移除输入名称。</summary>
      <param name="identifier" vsli:raw="A name that will be made available within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">将在 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 实例的范围中可用的名称。</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.ToArray(System.Type)">
      <summary vsli:raw="Returns an array of the code entities or type mappings within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">返回 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 实例范围中的代码实体或类型映射的数组。</summary>
      <param name="type" vsli:raw="The type of all the code entities or type mappings for the instance.">实例中所有代码实体或类型映射的类型。</param>
      <returns vsli:raw="An array of the code entities or type mappings that is stored by the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; object.">代码实体或类型映射的数组，由 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 对象存储。</returns>
    </member>
    <member name="P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing">
      <summary vsli:raw="Gets or sets a value that indicates whether the instance uses camel case.">获取或设置一个值，该值指示实例是否使用 camel 大小写。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the instance uses camel case; &lt;see langword=&quot;false&quot; /&gt; to indicate that the instance uses Pascal case.">如果指示实例使用 camel 大小写，则为 <see langword="true" />；如果指示实例使用 Pascal 大小写，则为 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Xml.Serialization.ImportContext">
      <summary vsli:raw="Describes the context in which a set of schema is bound to .NET code entities.">描述特定上下文，架构集在该上下文中绑定到 .NET Framework 代码实体。</summary>
    </member>
    <member name="M:System.Xml.Serialization.ImportContext.#ctor(System.Xml.Serialization.CodeIdentifiers,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.ImportContext&quot; /&gt; class for the given code identifiers, with the given type-sharing option.">使用给定的类型共享选项，初始化给定代码标识符的 <see cref="T:System.Xml.Serialization.ImportContext" /> 类的新实例。</summary>
      <param name="identifiers" vsli:raw="The code entities to which the context applies.">应用上下文的代码实体。</param>
      <param name="shareTypes" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that determines whether custom types are shared among schema.">
        <see cref="T:System.Boolean" /> 值，确定自定义类型是否由架构共享。</param>
    </member>
    <member name="P:System.Xml.Serialization.ImportContext.ShareTypes">
      <summary vsli:raw="Gets a value that determines whether custom types are shared.">获取一个值，该值确定自定义类型是否共享。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if custom types are shared among schema; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果自定义类型由架构共享，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.ImportContext.TypeIdentifiers">
      <summary vsli:raw="Gets a set of code entities to which the context applies.">获取应用上下文的代码实体集。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; that specifies the code entities to which the context applies.">
        <see cref="T:System.Xml.Serialization.CodeIdentifiers" />，指定应用上下文的代码实体。</returns>
    </member>
    <member name="P:System.Xml.Serialization.ImportContext.Warnings">
      <summary vsli:raw="Gets a collection of warnings that are generated when importing the code entity descriptions.">获取在导入代码实体说明时生成的警告集合。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Specialized.StringCollection&quot; /&gt; that contains warnings that were generated when importing the code entity descriptions.">
        <see cref="T:System.Collections.Specialized.StringCollection" />，包含在导入代码实体说明时生成的警告。</returns>
    </member>
    <member name="T:System.Xml.Serialization.IXmlTextParser">
      <summary vsli:raw="Establishes a &lt;see cref=&quot;P:System.Xml.Serialization.IXmlTextParser.Normalized&quot; /&gt; property for use by the .NET infrastructure.">建立一个 <see cref="P:System.Xml.Serialization.IXmlTextParser.Normalized" /> 属性供 .NET Framework 基础结构使用。</summary>
    </member>
    <member name="P:System.Xml.Serialization.IXmlTextParser.Normalized">
      <summary vsli:raw="Gets or sets whether white space and attribute values are normalized.">获取或设置一个值，该值指示空白特性值是否规范化。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if white space attributes values are normalized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果空白特性值已规范化，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.IXmlTextParser.WhitespaceHandling">
      <summary vsli:raw="Gets or sets how white space is handled when parsing XML.">获取或设置一个值，该值指示在分析 XML 时如何处理空白。</summary>
      <returns vsli:raw="A member of the &lt;see cref=&quot;T:System.Xml.WhitespaceHandling&quot; /&gt; enumeration that describes how whites pace is handled when parsing XML.">
        <see cref="T:System.Xml.WhitespaceHandling" /> 枚举的一个成员，说明在分析 XML 时如何处理空白。</returns>
    </member>
    <member name="T:System.Xml.Serialization.SchemaImporter">
      <summary vsli:raw="Describes a schema importer.">描述架构导入程序。</summary>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributeAttribute">
      <summary vsli:raw="Specifies that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must serialize the class member as an encoded SOAP attribute.">指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 必须将类成员序列化为编码的 SOAP 特性。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeAttribute&quot; /&gt; class using the specified value as the name of the XML attribute.">使用指定值作为 XML 特性的名称来初始化 <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> 类的新实例。</summary>
      <param name="attributeName" vsli:raw="The name of the XML attribute.">XML 属性的名称。</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.AttributeName">
      <summary vsli:raw="Gets or sets the name of the XML attribute generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">获取或设置 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 生成的 XML 特性的名称。</summary>
      <returns vsli:raw="The name of the XML attribute. The default is the member identifier.">XML 属性的名称。 默认值为成员标识符。</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.DataType">
      <summary vsli:raw="Gets or sets the XML Schema definition language (XSD) data type of the SOAP attribute generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">获取或设置由 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 生成的 SOAP 特性的“XML 架构”定义语言 (XSD) 数据类型。</summary>
      <returns vsli:raw="An XML Schema data type.">XML 架构数据类型。</returns>
      <exception cref="T:System.Exception" vsli:raw="The XML Schema data type you have specified cannot be mapped to the .NET data type.">已指定的 XML 架构数据类型无法映射到 .NET 数据类型。</exception>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.Namespace">
      <summary vsli:raw="Gets or sets the XML namespace of the XML attribute.">获取或设置 XML 属性的 XML 命名空间。</summary>
      <returns vsli:raw="The XML namespace of the XML attribute.">XML 属性的 XML 命名空间。</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributeOverrides">
      <summary vsli:raw="Allows you to override attributes applied to properties, fields, and classes when you use an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; to serialize or deserialize an object as encoded SOAP.">允许您在使用 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 将对象序列化或反序列化为编码的 SOAP 时重写应用于属性、字段和类的特性。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeOverrides&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.SoapAttributes)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; to the collection of &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; objects contained by the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeOverrides&quot; /&gt;. The &lt;paramref name=&quot;type&quot; /&gt; parameter specifies the object to be overridden by the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt;. The &lt;paramref name=&quot;member&quot; /&gt; parameter specifies the name of a member that is overridden.">将 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 添加到 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 所包含的 <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" /> 对象的集合中。 <paramref name="type" /> 参数指定由 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 重写的对象。 <paramref name="member" /> 参数指定所替代的成员名称。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to override.">要替代的对象的 <see cref="T:System.Type" />。</param>
      <param name="member" vsli:raw="The name of the member to override.">要替代的成员的名称。</param>
      <param name="attributes" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; that represents the overriding attributes.">表示重写特性的 <see cref="T:System.Xml.Serialization.SoapAttributes" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.Add(System.Type,System.Xml.Serialization.SoapAttributes)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; to a collection of &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; objects. The &lt;paramref name=&quot;type&quot; /&gt; parameter specifies an object to be overridden by the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt;.">将 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 添加到 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 对象的集合。 <paramref name="type" /> 参数指定由 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 重写的对象。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object that is overridden.">所替代的对象的 <see cref="T:System.Type" />。</param>
      <param name="attributes" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; that represents the overriding attributes.">表示重写特性的 <see cref="T:System.Xml.Serialization.SoapAttributes" />。</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeOverrides.Item(System.Type)">
      <summary vsli:raw="Gets the object associated with the specified (base class) type.">获取与指定（基类）类型关联的对象。</summary>
      <param name="type" vsli:raw="The base class &lt;see cref=&quot;T:System.Type&quot; /&gt; that is associated with the collection of attributes you want to retrieve.">与要检索的属性的集合相关联的基类 <see cref="T:System.Type" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; that represents the collection of overriding attributes.">表示重写特性集合的 <see cref="T:System.Xml.Serialization.SoapAttributes" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeOverrides.Item(System.Type,System.String)">
      <summary vsli:raw="Gets the object associated with the specified (base class) type. The &lt;paramref name=&quot;member&quot; /&gt; parameter specifies the base class member that is overridden.">获取与指定（基类）类型关联的对象。 <paramref name="member" /> 参数指定被重写的基类成员。</summary>
      <param name="type" vsli:raw="The base class &lt;see cref=&quot;T:System.Type&quot; /&gt; that is associated with the collection of attributes you want to override.">与要重写的特性的集合关联的基类 <see cref="T:System.Type" />。</param>
      <param name="member" vsli:raw="The name of the overridden member that specifies the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; to return.">指定要返回的 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 的替代成员名称。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; that represents the collection of overriding attributes.">表示重写特性集合的 <see cref="T:System.Xml.Serialization.SoapAttributes" />。</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributes">
      <summary vsli:raw="Represents a collection of attribute objects that control how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes and deserializes SOAP methods.">表示特性对象的集合，这些对象控制 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 如何序列化和反序列化 SOAP 方法。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributes.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributes.#ctor(System.Reflection.ICustomAttributeProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; class using the specified custom type.">使用指定的自定义类型初始化 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 类的新实例。</summary>
      <param name="provider" vsli:raw="Any object that implements the &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; interface, such as the &lt;see cref=&quot;T:System.Type&quot; /&gt; class.">实现 <see cref="T:System.Reflection.ICustomAttributeProvider" /> 接口的任何一个对象，如 <see cref="T:System.Type" /> 类。</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapAttribute">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeAttribute&quot; /&gt; to override.">获取或设置要替代的 <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeAttribute&quot; /&gt; that overrides the behavior of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; when the member is serialized.">
        <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" />，在序列化成员时重写 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 的行为。</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapDefaultValue">
      <summary vsli:raw="Gets or sets the default value of an XML element or attribute.">获取或设置 XML 元素或属性的默认值。</summary>
      <returns vsli:raw="An object that represents the default value of an XML element or attribute.">表示 XML 元素或特性的默认值的对象。</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapElement">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Xml.Serialization.SoapElementAttribute&quot; /&gt; to override.">获取或设置要重写的 <see cref="T:System.Xml.Serialization.SoapElementAttribute" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.SoapElementAttribute&quot; /&gt; to override.">要重写的 <see cref="T:System.Xml.Serialization.SoapElementAttribute" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapEnum">
      <summary vsli:raw="Gets or sets an object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a SOAP enumeration.">获取或设置一个对象，该对象指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 如何序列化 SOAP 枚举。</summary>
      <returns vsli:raw="An object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes an enumeration member.">一个对象，指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 如何序列化一个枚举成员。</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapIgnore">
      <summary vsli:raw="Gets or sets a value that specifies whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a public field or property as encoded SOAP XML.">获取或设置一个值，该值指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 是否将公共字段或属性序列化为经过编码的 SOAP XML。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must not serialize the field or property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 不得序列化字段或属性，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapType">
      <summary vsli:raw="Gets or sets an object that instructs the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; how to serialize an object type into encoded SOAP XML.">获取或设置指示 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 如何将对象类型序列化为经过编码的 SOAP XML 的对象。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapTypeAttribute&quot; /&gt; that either overrides a &lt;see cref=&quot;T:System.Xml.Serialization.SoapTypeAttribute&quot; /&gt; applied to a class declaration, or is applied to a class declaration.">
        <see cref="T:System.Xml.Serialization.SoapTypeAttribute" />，它或者重写应用到类声明的 <see cref="T:System.Xml.Serialization.SoapTypeAttribute" />，或者应用到类声明。</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapElementAttribute">
      <summary vsli:raw="Specifies that the public member value be serialized by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; as an encoded SOAP XML element.">指定公共成员值由 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化为经过编码的 SOAP XML 元素。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapElementAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapElementAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapElementAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapElementAttribute&quot; /&gt; class and specifies the name of the XML element.">初始化 <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> 类的新实例，并指定 XML 元素的名称。</summary>
      <param name="elementName" vsli:raw="The XML element name of the serialized member.">序列化成员的 XML 元素名。</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.DataType">
      <summary vsli:raw="Gets or sets the XML Schema definition language (XSD) data type of the generated XML element.">获取或设置生成的 XML 元素的“XML 架构”定义语言 (XSD) 数据类型。</summary>
      <returns vsli:raw="One of the XML Schema data types.">“XML 架构”数据类型之一。</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.ElementName">
      <summary vsli:raw="Gets or sets the name of the generated XML element.">获取或设置生成的 XML 元素的名称。</summary>
      <returns vsli:raw="The name of the generated XML element. The default is the member identifier.">生成的 XML 元素的名称。 默认值为成员标识符。</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.IsNullable">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must serialize a member that has the &lt;see langword=&quot;xsi:null&quot; /&gt; attribute set to &quot;1&quot;.">获取或者设置一个值，该值指示 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 是否必须序列化一个 <see langword="xsi:null" /> 特性设置为“1”的成员。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates the &lt;see langword=&quot;xsi:null&quot; /&gt; attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 生成 <see langword="true" /> 属性，则为 <see langword="xsi:null" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapEnumAttribute">
      <summary vsli:raw="Controls how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes an enumeration member.">控制 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 如何序列化枚举成员。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapEnumAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapEnumAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.SoapEnumAttribute" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapEnumAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapEnumAttribute&quot; /&gt; class using the specified element name.">使用指定的元素名称初始化 <see cref="T:System.Xml.Serialization.SoapEnumAttribute" /> 类的新实例。</summary>
      <param name="name" vsli:raw="The XML element name generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">由 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 生成的 XML 元素名称。</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapEnumAttribute.Name">
      <summary vsli:raw="Gets or sets the value generated in an XML document when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes an enumeration, or the value recognized when it deserializes the enumeration member.">获取或设置一个值，该值在 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化枚举时在 XML 文档中生成，或在它反序列化该枚举成员时被识别。</summary>
      <returns vsli:raw="The value generated in an XML document when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes the enumeration, or the value recognized when it deserializes the enumeration member.">当 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化枚举时在 XML 文档中生成的值，或当它反序列化该枚举成员时识别的值。</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapIgnoreAttribute">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; not to serialize the public field or public read/write property value.">指示 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 不序列化公共字段或公共读/写属性值。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapIgnoreAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapIgnoreAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.SoapIgnoreAttribute" /> 类的新实例。</summary>
    </member>
    <member name="T:System.Xml.Serialization.SoapIncludeAttribute">
      <summary vsli:raw="Allows the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; to recognize a type when it serializes or deserializes an object as encoded SOAP XML.">允许 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 在将对象序列化或反序列化为编码的 SOAP XML 时识别类型。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapIncludeAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapIncludeAttribute&quot; /&gt; class using the specified type.">使用指定的类型初始化 <see cref="T:System.Xml.Serialization.SoapIncludeAttribute" /> 类的新实例。</summary>
      <param name="type" vsli:raw="The type of the object to include.">要包含的对象的类型。</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapIncludeAttribute.Type">
      <summary vsli:raw="Gets or sets the type of the object to use when serializing or deserializing an object.">获取或设置在序列化或反序列化对象时应使用的对象的类型。</summary>
      <returns vsli:raw="The type of the object to include.">要包含的对象的类型。</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapReflectionImporter">
      <summary vsli:raw="Generates mappings to SOAP-encoded messages from .NET types or Web service method information.">生成从 .NET Framework 类型或 Web 服务方法信息到 SOAP 编码消息的映射。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapReflectionImporter&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapReflectionImporter&quot; /&gt; class, specifying a default XML namespace for imported type mappings.">初始化 <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> 类的新实例，指定导入的类型映射的默认 XML 命名空间。</summary>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use for imported type mappings.">导入的类型映射要使用的默认 XML 命名空间。</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.Xml.Serialization.SoapAttributeOverrides)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapReflectionImporter&quot; /&gt; class, specifying overrides for XML serialization.">指定 XML 序列化的替代，初始化 <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> 类的新实例。</summary>
      <param name="attributeOverrides" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeOverrides&quot; /&gt; object that overrides how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class serializes mapped types using SOAP encoding.">一个 <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" /> 对象，该对象替代 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类使用 SOAP 编码序列化映射类型的方式。</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.Xml.Serialization.SoapAttributeOverrides,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapReflectionImporter&quot; /&gt; class, specifying XML serialization overrides and a default XML namespace.">指定 XML 序列化替代和默认 XML 命名空间，初始化 <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> 类的新实例。</summary>
      <param name="attributeOverrides" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeOverrides&quot; /&gt; object that overrides how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class serializes mapped types using SOAP encoding.">一个 <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" /> 对象，该对象替代 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类使用 SOAP 编码序列化映射类型的方式。</param>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use for imported type mappings.">导入的类型映射要使用的默认 XML 命名空间。</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[])">
      <summary vsli:raw="Generates internal type mappings for information that is gathered from a Web service method.">为从 Web 服务方法收集的信息生成内部类型映射。</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">从 Web 服务方法生成的 XML 元素名称。</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">从 Web 服务方法生成的 XML 元素命名空间。</param>
      <param name="members" vsli:raw="An array of .NET code entities that belong to a Web service method.">属于 Web 服务方法的 .NET Framework 代码实体的数组。</param>
      <returns vsli:raw="Internal .NET type mappings to the element parts of a WSDL message definition.">到 WSDL 消息定义中元素部分的内部 .NET Framework 类型映射。</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Generates internal type mappings for information that is gathered from a Web service method.">为从 Web 服务方法收集的信息生成内部类型映射。</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">从 Web 服务方法生成的 XML 元素名称。</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">从 Web 服务方法生成的 XML 元素命名空间。</param>
      <param name="members" vsli:raw="An array of .NET code entities that belong to a Web service method.">属于 Web 服务方法的 .NET Framework 代码实体的数组。</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that elements that correspond to WSDL message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指示与 WSDL 消息部分对应的元素应包含在 SOAP 消息的额外包装器元素中，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <param name="writeAccessors" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate an RPC-style Web service binding; &lt;see langword=&quot;false&quot; /&gt; to indicate a document-style Web service binding or a SOAP header.">如果指示 RPC 样式的 Web 服务绑定，则为 <see langword="true" />；如果指示文档样式的 Web 服务绑定或 SOAP 标头，则为 <see langword="false" />。</param>
      <returns vsli:raw="Internal .NET type mappings to the element parts of a WSDL message definition.">到 WSDL 消息定义中元素部分的内部 .NET Framework 类型映射。</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean)">
      <summary vsli:raw="Generates internal type mappings for information that is gathered from a Web service method.">为从 Web 服务方法收集的信息生成内部类型映射。</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">从 Web 服务方法生成的 XML 元素名称。</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">从 Web 服务方法生成的 XML 元素命名空间。</param>
      <param name="members" vsli:raw="An array of .NET code entities that belong to a Web service method.">属于 Web 服务方法的 .NET Framework 代码实体的数组。</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that elements that correspond to WSDL message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指示与 WSDL 消息部分对应的元素应包含在 SOAP 消息的额外包装器元素中，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <param name="writeAccessors" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate an RPC-style Web service binding; &lt;see langword=&quot;false&quot; /&gt; to indicate a document-style Web service binding or a SOAP header.">如果指示 RPC 样式的 Web 服务绑定，则为 <see langword="true" />；如果指示文档样式的 Web 服务绑定或 SOAP 标头，则为 <see langword="false" />。</param>
      <param name="validate" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that a generated deserializer should check for the expected qualified name of the wrapper element; otherwise, &lt;see langword=&quot;false&quot; /&gt;. This parameter's value is relevant only if the &lt;paramref name=&quot;hasWrapperElement&quot; /&gt; parameter's value is &lt;see langword=&quot;true&quot; /&gt;.">如果指示生成的反序列化程序应检查包装器元素需要的限定名称，则为 <see langword="true" />；否则为 <see langword="false" />。 仅当 <paramref name="hasWrapperElement" /> 参数的值为 <see langword="true" /> 时，此参数的值才有意义。</param>
      <returns vsli:raw="Internal .NET type mappings to the element parts of a WSDL message definition.">到 WSDL 消息定义中元素部分的内部 .NET Framework 类型映射。</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.XmlMappingAccess)">
      <summary vsli:raw="Generates internal type mappings for information that is gathered from a Web service method.">为从 Web 服务方法收集的信息生成内部类型映射。</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">从 Web 服务方法生成的 XML 元素名称。</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">从 Web 服务方法生成的 XML 元素命名空间。</param>
      <param name="members" vsli:raw="An array of .NET code entities that belong to a Web service method.">属于 Web 服务方法的 .NET Framework 代码实体的数组。</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that elements that correspond to WSDL message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指示与 WSDL 消息部分对应的元素应包含在 SOAP 消息的额外包装器元素中，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <param name="writeAccessors" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate an RPC-style Web service binding; &lt;see langword=&quot;false&quot; /&gt; to indicate a document-style Web service binding or a SOAP header.">如果指示 RPC 样式的 Web 服务绑定，则为 <see langword="true" />；如果指示文档样式的 Web 服务绑定或 SOAP 标头，则为 <see langword="false" />。</param>
      <param name="validate" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that a generated deserializer should check for the expected qualified name of the wrapper element; otherwise, &lt;see langword=&quot;false&quot; /&gt;. This parameter's value is relevant only if the &lt;paramref name=&quot;hasWrapperElement&quot; /&gt; parameter's value is &lt;see langword=&quot;true&quot; /&gt;.">如果指示生成的反序列化程序应检查包装器元素需要的限定名称，则为 <see langword="true" />；否则为 <see langword="false" />。 仅当 <paramref name="hasWrapperElement" /> 参数的值为 <see langword="true" /> 时，此参数的值才有意义。</param>
      <param name="access" vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlMappingAccess&quot; /&gt; values.">
        <see cref="T:System.Xml.Serialization.XmlMappingAccess" /> 值之一。</param>
      <returns vsli:raw="Internal .NET type mappings to the element parts of a WSDL message definition.">到 WSDL 消息定义中元素部分的内部 .NET Framework 类型映射。</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping(System.Type)">
      <summary vsli:raw="Generates a mapping to an XML Schema element for a .NET type.">为 .NET Framework 类型生成到 XML 架构元素的映射。</summary>
      <param name="type" vsli:raw="The .NET type for which to generate a type mapping.">将为其生成类型映射的 .NET Framework 类型。</param>
      <returns vsli:raw="Internal .NET mapping of a type to an XML Schema element.">从一个类型到一个 XML 架构元素的 .NET Framework 内部映射。</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping(System.Type,System.String)">
      <summary vsli:raw="Generates a mapping to an XML Schema element for a .NET type.">为 .NET Framework 类型生成到 XML 架构元素的映射。</summary>
      <param name="type" vsli:raw="The .NET type for which to generate a type mapping.">将为其生成类型映射的 .NET Framework 类型。</param>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use.">要使用的默认 XML 命名空间。</param>
      <returns vsli:raw="Internal .NET mapping of a type to an XML Schema element.">从一个类型到一个 XML 架构元素的 .NET Framework 内部映射。</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.IncludeType(System.Type)">
      <summary vsli:raw="Places mappings for a type in the &lt;see cref=&quot;T:System.Xml.Serialization.SoapReflectionImporter&quot; /&gt; instance's context for later use when import methods are invoked.">在 <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> 实例的上下文中放置某个类型的映射，以供以后调用导入方法时使用。</summary>
      <param name="type" vsli:raw="The .NET type for which to save type mapping information.">要为其保存类型映射信息的 .NET Framework 类型。</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)">
      <summary vsli:raw="Places mappings for derived types in the &lt;see cref=&quot;T:System.Xml.Serialization.SoapReflectionImporter&quot; /&gt; instance's context for later use when import methods are invoked.">在 <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> 实例的上下文中放置派生类型的映射，以供以后调用导入方法时使用。</summary>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; reflection object that contains custom attributes that are derived from the &lt;see cref=&quot;T:System.Xml.Serialization.SoapIncludeAttribute&quot; /&gt; attribute.">一个 <see cref="T:System.Reflection.ICustomAttributeProvider" /> 反射对象，其中包含从 <see cref="T:System.Xml.Serialization.SoapIncludeAttribute" /> 属性派生的自定义属性。</param>
    </member>
    <member name="T:System.Xml.Serialization.SoapSchemaMember">
      <summary vsli:raw="Represents certain attributes of a XSD &amp;lt;&lt;see langword=&quot;part&quot; /&gt;&amp;gt; element in a WSDL document for generating classes from the document.">表示 WSDL 文档中 XSD &lt;<see langword="part" />&gt; 元素的特定属性，用于从文档中生成类。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapSchemaMember.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapSchemaMember&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.SoapSchemaMember" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Xml.Serialization.SoapSchemaMember.MemberName">
      <summary vsli:raw="Gets or sets a value that corresponds to the name attribute of the WSDL part element.">获取或设置一个值，该值对应于 WSDL part 元素的名称特性。</summary>
      <returns vsli:raw="The element name.">元素名称。</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapSchemaMember.MemberType">
      <summary vsli:raw="Gets or sets a value that corresponds to the type attribute of the WSDL part element.">获取或设置一个值，该值对应于 WSDL part 元素的类型特性。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that corresponds to the XML type.">对应于 XML 类型的 <see cref="T:System.Xml.XmlQualifiedName" />。</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapTypeAttribute">
      <summary vsli:raw="Controls the schema generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; when a class instance is serialized as SOAP encoded XML.">将类实例序列化为 SOAP 编码的 XML 时，控制 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 生成的架构。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapTypeAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapTypeAttribute&quot; /&gt; class and specifies the name of the XML type.">初始化 <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> 类的新实例，并指定 XML 类型的名称。</summary>
      <param name="typeName" vsli:raw="The name of the XML type that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates when it serializes the class instance (and recognizes when it deserializes the class instance).">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化类实例时生成（和在反序列化类实例时识别）的 XML 类型的名称。</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapTypeAttribute&quot; /&gt; class and specifies the name and XML namespace of the type.">初始化 <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> 类的新实例，并指定类型的名称和 XML 命名空间。</summary>
      <param name="typeName" vsli:raw="The name of the XML type that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates when it serializes the class instance (and recognizes when it deserializes the class instance).">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化类实例时生成（和在反序列化类实例时识别）的 XML 类型的名称。</param>
      <param name="ns" vsli:raw="The XML namespace of the type.">类型的 XML 命名空间。</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema">
      <summary vsli:raw="Gets or sets a value that indicates whether to include the type in SOAP-encoded XML Schema documents.">获取或设置一个值，该值指示是否在 SOAP 编码的 XML 架构文档中包括该类型。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to include the type in SOAP-encoded XML Schema documents; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">要在 SOAP 编码的“XML 架构”文档中包括该类型，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.Namespace">
      <summary vsli:raw="Gets or sets the namespace of the XML type.">获取或设置 XML 类型的命名空间。</summary>
      <returns vsli:raw="The namespace of the XML type. The default is an empty string (&quot;&quot;).">XML 类型的命名空间。 默认值为空字符串("")。</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.TypeName">
      <summary vsli:raw="Gets or sets the name of the XML type.">获取或设置 XML 类型的名称。</summary>
      <returns vsli:raw="The name of the XML type. The default is the class name.">XML 类型的名称。 默认为类名称。</returns>
    </member>
    <member name="T:System.Xml.Serialization.UnreferencedObjectEventArgs">
      <summary vsli:raw="Provides data for the known, but unreferenced, object found in an encoded SOAP XML stream during deserialization.">在反序列化期间，为在编码的 SOAP XML 流中找到的已知的（但未引用的）对象提供数据。</summary>
    </member>
    <member name="M:System.Xml.Serialization.UnreferencedObjectEventArgs.#ctor(System.Object,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.UnreferencedObjectEventArgs&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.UnreferencedObjectEventArgs" /> 类的新实例。</summary>
      <param name="o" vsli:raw="The unreferenced object.">未引用的对象。</param>
      <param name="id" vsli:raw="A unique string used to identify the unreferenced object.">用于识别未引用的对象的唯一字符串。</param>
    </member>
    <member name="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId">
      <summary vsli:raw="Gets the ID of the object.">获取对象的 ID。</summary>
      <returns vsli:raw="The ID of the object.">对象的 ID。</returns>
    </member>
    <member name="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject">
      <summary vsli:raw="Gets the deserialized, but unreferenced, object.">获取已反序列化但尚未引用的对象。</summary>
      <returns vsli:raw="The deserialized, but unreferenced, object.">已反序列化但未引用的对象。</returns>
    </member>
    <member name="T:System.Xml.Serialization.UnreferencedObjectEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnreferencedObject&quot; /&gt; event of an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">表示处理 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 的 <see cref="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" /> 事件的方法。</summary>
      <param name="sender" vsli:raw="The source of the event.">事件源。</param>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.UnreferencedObjectEventArgs&quot; /&gt; that contains the event data.">包含事件数据的 <see cref="T:System.Xml.Serialization.UnreferencedObjectEventArgs" />。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAnyElementAttributes">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; objects.">表示 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 对象集合。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttributes&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Add(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; to the collection.">将 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 添加到集合中。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; to add.">要添加的 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />。</param>
      <returns vsli:raw="The index of the newly added &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt;.">新添加的 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 的索引。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Contains(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary vsli:raw="Gets a value that indicates whether the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; exists in the collection.">获取一个值，该值指示集合中是否存在指定的 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; you are interested in.">您关注的 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; exists in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果集合中存在该 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.CopyTo(System.Xml.Serialization.XmlAnyElementAttribute[],System.Int32)">
      <summary vsli:raw="Copies the entire collection to a compatible one-dimensional array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; objects, starting at the specified index of the target array.">将整个集合复制到 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 对象的一个兼容一维数组，从目标数组的指定索引处开始。</summary>
      <param name="array" vsli:raw="The one-dimensional array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; objects that is the destination of the elements copied from the collection. The array must have zero-based indexing.">
        <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 对象的一维数组，它是从集合复制来的元素的目标。 该数组的索引必须从零开始。</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">
        <paramref name="array" /> 中从零开始的索引，从此处开始复制。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.IndexOf(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt;.">获取指定 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 的索引。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; whose index you want.">您需要其索引的 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />。</param>
      <returns vsli:raw="The index of the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt;.">指定的 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 的索引。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary vsli:raw="Inserts an &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; into the collection at the specified index.">在集合中的指定索引处插入 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />。</summary>
      <param name="index" vsli:raw="The index where the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; is inserted.">
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 的插入位置的索引。</param>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; to insert.">要插入的 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttributes.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; at the specified index.">获取或设置指定索引处的 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />。</summary>
      <param name="index" vsli:raw="The index of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 的索引。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; at the specified index.">指定索引处的一个 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Remove(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; from the collection.">从集合中移除指定的 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; to remove.">要移除的 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayAttribute">
      <summary vsli:raw="Specifies that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must serialize a particular class member as an array of XML elements.">指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 必须将特定的类成员序列化为 XML 元素的数组。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayAttribute&quot; /&gt; class and specifies the XML element name generated in the XML document instance.">初始化 <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> 类的新实例，并指定在 XML 文档实例中生成的 XML 元素名称。</summary>
      <param name="elementName" vsli:raw="The name of the XML element that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 生成的 XML 元素的名称。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.ElementName">
      <summary vsli:raw="Gets or sets the XML element name given to the serialized array.">获取或设置提供给序列化数组的 XML 元素名称。</summary>
      <returns vsli:raw="The XML element name of the serialized array. The default is the name of the member to which the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayAttribute&quot; /&gt; is assigned.">序列化数组的 XML 元素名称。 默认值为向其分配 <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> 的成员的名称。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Form">
      <summary vsli:raw="Gets or sets a value that indicates whether the XML element name generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is qualified or unqualified.">获取或设置一个值，该值指示 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 生成的 XML 元素名称是限定的还是非限定的。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaForm&quot; /&gt; values. The default is &lt;see langword=&quot;XmlSchemaForm.None&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaForm" /> 值之一。 默认值为 <see langword="XmlSchemaForm.None" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.IsNullable">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must serialize a member as an empty XML tag with the &lt;see langword=&quot;xsi:nil&quot; /&gt; attribute set to &lt;see langword=&quot;true&quot; /&gt;.">获取或设置一个值，该值指示 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 是否必须将成员序列化为 <see langword="xsi:nil" /> 属性设置为 <see langword="true" /> 的 XML 空标记。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates the &lt;see langword=&quot;xsi:nil&quot; /&gt; attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 生成 <see langword="true" /> 属性，则为 <see langword="xsi:nil" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Namespace">
      <summary vsli:raw="Gets or sets the namespace of the XML element.">获取或设置 XML 元素的命名空间。</summary>
      <returns vsli:raw="The namespace of the XML element.">XML 元素的命名空间。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Order">
      <summary vsli:raw="Gets or sets the explicit order in which the elements are serialized or deserialized.">获取或设置序列化或反序列化元素的显式顺序。</summary>
      <returns vsli:raw="The order of the code generation.">代码生成的顺序。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayItemAttribute">
      <summary vsli:raw="Represents an attribute that specifies the derived types that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can place in a serialized array.">表示指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 可以放置在序列化数组中的派生类型的特性。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; class and specifies the name of the XML element generated in the XML document.">初始化 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 类的新实例，并指定在 XML 文档中生成的 XML 元素的名称。</summary>
      <param name="elementName" vsli:raw="The name of the XML element.">XML 元素的名称。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; class and specifies the name of the XML element generated in the XML document and the &lt;see cref=&quot;T:System.Type&quot; /&gt; that can be inserted into the generated XML document.">初始化 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 类的新实例，并指定在 XML 文档中生成的 XML 元素的名称，以及可插入到所生成的 XML 文档中的 <see cref="T:System.Type" />。</summary>
      <param name="elementName" vsli:raw="The name of the XML element.">XML 元素的名称。</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to serialize.">要序列化的对象的 <see cref="T:System.Type" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; class and specifies the &lt;see cref=&quot;T:System.Type&quot; /&gt; that can be inserted into the serialized array.">初始化 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 类的新实例，并指定可插入到序列化数组中的 <see cref="T:System.Type" />。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to serialize.">要序列化的对象的 <see cref="T:System.Type" />。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.DataType">
      <summary vsli:raw="Gets or sets the XML data type of the generated XML element.">获取或设置生成的 XML 元素的 XML 数据类型。</summary>
      <returns vsli:raw="An XML schema definition (XSD) data type.">XML 架构定义 (XSD) 数据类型。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.ElementName">
      <summary vsli:raw="Gets or sets the name of the generated XML element.">获取或设置生成的 XML 元素的名称。</summary>
      <returns vsli:raw="The name of the generated XML element. The default is the member identifier.">生成的 XML 元素的名称。 默认值为成员标识符。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Form">
      <summary vsli:raw="Gets or sets a value that indicates whether the name of the generated XML element is qualified.">获取或设置一个值，该值指示生成的 XML 元素的名称是否是限定的。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaForm&quot; /&gt; values. The default is &lt;see langword=&quot;XmlSchemaForm.None&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaForm" /> 值之一。 默认值为 <see langword="XmlSchemaForm.None" />。</returns>
      <exception cref="T:System.Exception" vsli:raw="The &lt;see cref=&quot;P:System.Xml.Serialization.XmlArrayItemAttribute.Form&quot; /&gt; property is set to &lt;see langword=&quot;XmlSchemaForm.Unqualified&quot; /&gt; and a &lt;see cref=&quot;P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace&quot; /&gt; value is specified.">
        <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Form" /> 属性设置为 <see langword="XmlSchemaForm.Unqualified" />，并且指定 <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace" /> 值。</exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must serialize a member as an empty XML tag with the &lt;see langword=&quot;xsi:nil&quot; /&gt; attribute set to &lt;see langword=&quot;true&quot; /&gt;.">获取或设置一个值，该值指示 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 是否必须将成员序列化为 <see langword="xsi:nil" /> 属性设置为 <see langword="true" /> 的 XML 空标记。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates the &lt;see langword=&quot;xsi:nil&quot; /&gt; attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;, and no instance is generated. The default is &lt;see langword=&quot;true&quot; /&gt;.">如果 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 生成 <see langword="true" /> 特性，则为 <see langword="xsi:nil" />；否则为 <see langword="false" />，且不生成实例。 默认值为 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace">
      <summary vsli:raw="Gets or sets the namespace of the generated XML element.">获取或设置生成的 XML 元素的命名空间。</summary>
      <returns vsli:raw="The namespace of the generated XML element.">生成的 XML 元素的命名空间。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel">
      <summary vsli:raw="Gets or sets the level in a hierarchy of XML elements that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; affects.">获取或设置受 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 影响的 XML 元素的层次结构中的级别。</summary>
      <returns vsli:raw="The zero-based index of a set of indexes in an array of arrays.">数组的数组中的索引集从零开始的索引。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Type">
      <summary vsli:raw="Gets or sets the type allowed in an array.">获取或设置数组中允许的类型。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that is allowed in the array.">数组中允许的 <see cref="T:System.Type" />。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayItemAttributes">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; objects.">表示 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 对象集合。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttributes&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Add(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; to the collection.">将 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 添加到集合中。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; to add to the collection.">要添加到集合中的 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />。</param>
      <returns vsli:raw="The index of the added item.">所添加的项的索引。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Contains(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary vsli:raw="Determines whether the collection contains the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt;.">确定集合是否包含指定的 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; to check for.">要检查的 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果该集合包含指定的 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.CopyTo(System.Xml.Serialization.XmlArrayItemAttribute[],System.Int32)">
      <summary vsli:raw="Copies an &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; array to the collection, starting at a specified target index.">从指定的目标索引开始，将 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 数组复制到集合。</summary>
      <param name="array" vsli:raw="The array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; objects to copy to the collection.">要复制到集合中的 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 对象的数组。</param>
      <param name="index" vsli:raw="The index at which the copied attributes begin.">从该处开始特性复制的索引。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.IndexOf(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary vsli:raw="Returns the zero-based index of the first occurrence of the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; in the collection or -1 if the attribute is not found in the collection.">返回所指定 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 在集合中首个匹配项的从零开始的索引；如果在集合中找不到该特性，则为 -1。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; to locate in the collection.">要在集合中查找的 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />。</param>
      <returns vsli:raw="The first index of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; in the collection or -1 if the attribute is not found in the collection.">
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 在集合中的首个索引；如果在集合中找不到该特性，则为 -1。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Insert(System.Int32,System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary vsli:raw="Inserts an &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; into the collection at the specified index.">在集合中的指定索引处插入 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />。</summary>
      <param name="index" vsli:raw="The index at which the attribute is inserted.">在该处插入特性的索引。</param>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; to insert.">要插入的 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttributes.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the item at the specified index.">获取或设置指定索引处的项。</summary>
      <param name="index" vsli:raw="The zero-based index of the collection member to get or set.">要获取或设置的从零开始的集合成员的索引。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; at the specified index.">位于指定索引处的 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Remove(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary vsli:raw="Removes an &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; from the collection, if it is present.">如果存在，则从集合中移除 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; to remove.">要移除的 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownAttribute&quot; /&gt; event.">为 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /> 事件提供数据。</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.Attr">
      <summary vsli:raw="Gets an object that represents the unknown XML attribute.">获取一个对象，该对象表示未知的 XML 特性。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; that represents the unknown XML attribute.">
        <see cref="T:System.Xml.XmlAttribute" />，表示未知的 XML 特性。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.ExpectedAttributes">
      <summary vsli:raw="Gets a comma-delimited list of XML attribute names expected to be in an XML document instance.">获取 XML 特性名的逗号分隔列表，该列表应出现在 XML 文档实例中。</summary>
      <returns vsli:raw="A comma-delimited list of XML attribute names. Each name is in the following format: &lt;paramref name=&quot;namespace&quot; /&gt;:&lt;paramref name=&quot;name&quot; /&gt;.">XML 特性名的逗号分隔列表。 每个名称的格式为：<paramref name="namespace" />:<paramref name="name" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.LineNumber">
      <summary vsli:raw="Gets the line number of the unknown XML attribute.">获取未知 XML 特性的行号。</summary>
      <returns vsli:raw="The line number of the unknown XML attribute.">未知 XML 特性的行号。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.LinePosition">
      <summary vsli:raw="Gets the position in the line of the unknown XML attribute.">获取未知 XML 特性行中的位置。</summary>
      <returns vsli:raw="The position number of the unknown XML attribute.">未知 XML 特性的位置编号。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized">
      <summary vsli:raw="Gets the object being deserialized.">获取正在被反序列化的对象。</summary>
      <returns vsli:raw="The object being deserialized.">正在被反序列化的对象。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownAttribute&quot; /&gt;.">表示处理 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /> 的方法</summary>
      <param name="sender" vsli:raw="The source of the event.">事件源。</param>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeEventArgs&quot; /&gt; that contains the event data.">包含事件数据的 <see cref="T:System.Xml.Serialization.XmlAttributeEventArgs" />。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeOverrides">
      <summary vsli:raw="Allows you to override property, field, and class attributes when you use the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; to serialize or deserialize an object.">允许在使用 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 串行化或反序列化对象时替代属性、字段和类特性。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.XmlAttributes)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; object to the collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; objects. The &lt;paramref name=&quot;type&quot; /&gt; parameter specifies an object to be overridden. The &lt;paramref name=&quot;member&quot; /&gt; parameter specifies the name of a member that is overridden.">将 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 对象添加到 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 对象的集合中。 <paramref name="type" /> 参数指定要替代的对象。 <paramref name="member" /> 参数指定所替代的成员名称。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to override.">要替代的对象的 <see cref="T:System.Type" />。</param>
      <param name="member" vsli:raw="The name of the member to override.">要替代的成员的名称。</param>
      <param name="attributes" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; object that represents the overriding attributes.">表示替代属性的 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 对象。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.Xml.Serialization.XmlAttributes)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; object to the collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; objects. The &lt;paramref name=&quot;type&quot; /&gt; parameter specifies an object to be overridden by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; object.">将 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 对象添加到 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 对象的集合中。 <paramref name="type" /> 参数指定由 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 对象替代的对象。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object that is overridden.">所替代的对象的 <see cref="T:System.Type" />。</param>
      <param name="attributes" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; object that represents the overriding attributes.">表示替代属性的 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 对象。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type)">
      <summary vsli:raw="Gets the object associated with the specified, base-class, type.">获取与指定的基类类型相关联的对象。</summary>
      <param name="type" vsli:raw="The base class &lt;see cref=&quot;T:System.Type&quot; /&gt; that is associated with the collection of attributes you want to retrieve.">与要检索的属性的集合相关联的基类 <see cref="T:System.Type" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; that represents the collection of overriding attributes.">表示重写属性集合的 <see cref="T:System.Xml.Serialization.XmlAttributes" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type,System.String)">
      <summary vsli:raw="Gets the object associated with the specified (base-class) type. The member parameter specifies the base-class member that is overridden.">获取与指定（基类）类型相关联的对象。 成员参数指定被替代的基类成员。</summary>
      <param name="type" vsli:raw="The base class &lt;see cref=&quot;T:System.Type&quot; /&gt; that is associated with the collection of attributes you want.">与所需属性的集合相关联的基类 <see cref="T:System.Type" />。</param>
      <param name="member" vsli:raw="The name of the overridden member that specifies the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; to return.">指定要返回的 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 的替代成员名称。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; that represents the collection of overriding attributes.">表示重写属性集合的 <see cref="T:System.Xml.Serialization.XmlAttributes" />。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributes">
      <summary vsli:raw="Represents a collection of attribute objects that control how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes and deserializes an object.">表示控制 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 串行化和反序列化对象方式的属性对象的集合。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributes.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributes.#ctor(System.Reflection.ICustomAttributeProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; class and customizes how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes and deserializes an object.">初始化 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 类的新实例，并自定义 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 串行化和反序列化对象的方式。</summary>
      <param name="provider" vsli:raw="A class that can provide alternative implementations of attributes that control XML serialization.">可提供控制 XML 序列化的属性的其他实现的类。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyAttributeAttribute&quot; /&gt; to override.">获取或设置要替代的 <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyAttributeAttribute&quot; /&gt; to override.">要重写的 <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements">
      <summary vsli:raw="Gets the collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; objects to override.">获取要替代的 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 对象集合。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttributes&quot; /&gt; object that represents the collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; objects.">表示 <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" /> 对象集合的 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 对象。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlArray">
      <summary vsli:raw="Gets or sets an object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a public field or read/write property that returns an array.">获取或设置一个对象，该对象指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 串行化返回数组的公共字段或读/写属性的方式。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayAttribute&quot; /&gt; that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a public field or read/write property that returns an array.">一个 <see cref="T:System.Xml.Serialization.XmlArrayAttribute" />，指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化如何返回数组的公共字段或读/写属性。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems">
      <summary vsli:raw="Gets or sets a collection of objects that specify how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes items inserted into an array returned by a public field or read/write property.">获取或设置一个对象集合，该集合指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化插入数组（由公共字段或读/写属性返回）的项的方式。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttributes&quot; /&gt; object that contains a collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; objects.">
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" /> 对象，它包含 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 对象的集合。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
      <summary vsli:raw="Gets or sets an object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a public field or public read/write property as an XML attribute.">获取或设置一个对象，该对象指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 将公共字段或公共读/写属性串行化为 XML 特性的方式。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeAttribute&quot; /&gt; that controls the serialization of a public field or read/write property as an XML attribute.">控制将公共字段或读/写属性序列化为 XML 特性的 <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlChoiceIdentifier">
      <summary vsli:raw="Gets or sets an object that allows you to distinguish between a set of choices.">获取或设置一个对象，该对象允许你区分一组选择。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlChoiceIdentifierAttribute&quot; /&gt; that can be applied to a class member that is serialized as an &lt;see langword=&quot;xsi:choice&quot; /&gt; element.">可应用到被序列化为 <see langword="xsi:choice" /> 元素的类成员的 <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
      <summary vsli:raw="Gets or sets the default value of an XML element or attribute.">获取或设置 XML 元素或属性的默认值。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents the default value of an XML element or attribute.">表示 XML 元素或属性的默认值的 <see cref="T:System.Object" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlElements">
      <summary vsli:raw="Gets a collection of objects that specify how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a public field or read/write property as an XML element.">获取一个对象集合，该集合指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 将公共字段或读/写属性串行化为 XML 元素的方式。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttributes&quot; /&gt; that contains a collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; objects.">包含一个 <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> 对象集合的 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlEnum">
      <summary vsli:raw="Gets or sets an object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes an enumeration member.">获取或设置一个对象，该对象指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 串行化枚举成员的方式。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlEnumAttribute&quot; /&gt; that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes an enumeration member.">指定 <see cref="T:System.Xml.Serialization.XmlEnumAttribute" /> 如何序列化枚举成员的 <see cref="T:System.Xml.Serialization.XmlSerializer" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlIgnore">
      <summary vsli:raw="Gets or sets a value that specifies whether or not the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a public field or public read/write property.">获取或设置一个值，该值指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 是否串行化公共字段或公共读/写属性。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must not serialize the field or property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 不得序列化字段或属性，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.Xmlns">
      <summary vsli:raw="Gets or sets a value that specifies whether to keep all namespace declarations when an object containing a member that returns an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; object is overridden.">获取或设置一个值，该值指定当替代包含返回 <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> 对象的成员的对象时，是否保留所有的命名空间声明。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the namespace declarations should be kept; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果应保留命名空间声明，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlRoot">
      <summary vsli:raw="Gets or sets an object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a class as an XML root element.">获取或设置一个对象，该对象指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 将类串行化为 XML 根元素的方式。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that overrides a class attributed as an XML root element.">重写特性化为 XML 根元素的类的 <see cref="T:System.Xml.Serialization.XmlRootAttribute" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlText">
      <summary vsli:raw="Gets or sets an object that instructs the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; to serialize a public field or public read/write property as XML text.">获取或设置一个对象，该对象指示 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 将公共字段或公共读/写属性串行化为 XML 文本。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTextAttribute&quot; /&gt; that overrides the default serialization of a public property or field.">重写公共属性或字段的默认序列化的 <see cref="T:System.Xml.Serialization.XmlTextAttribute" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlType">
      <summary vsli:raw="Gets or sets an object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a class to which the &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeAttribute&quot; /&gt; has been applied.">获取或设置一个对象，该对象指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 串行化已对其应用 <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> 的类的方式。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeAttribute&quot; /&gt; that overrides an &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeAttribute&quot; /&gt; applied to a class declaration.">重写应用于类声明的 <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> 的 <see cref="T:System.Xml.Serialization.XmlTypeAttribute" />。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute">
      <summary vsli:raw="Specifies that the member can be further detected by using an enumeration.">指定可以通过使用枚举来进一步检测成员。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlChoiceIdentifierAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlChoiceIdentifierAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" /> 类的新实例。</summary>
      <param name="name" vsli:raw="The member name that returns the enumeration used to detect a choice.">返回用于检测选项的枚举的成员名称。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlChoiceIdentifierAttribute.MemberName">
      <summary vsli:raw="Gets or sets the name of the field that returns the enumeration to use when detecting types.">获取或设置字段的名称，该字段返回在检测类型时使用的枚举。</summary>
      <returns vsli:raw="The name of a field that returns an enumeration.">返回枚举的字段的名称。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlDeserializationEvents">
      <summary vsli:raw="Contains fields that can be used to pass event delegates to a thread-safe &lt;see cref=&quot;Overload:System.Xml.Serialization.XmlSerializer.Deserialize&quot; /&gt; method of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">包含可用于将事件委托传递给 <see cref="Overload:System.Xml.Serialization.XmlSerializer.Deserialize" /> 的线程安全的 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 方法的字段。</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownAttribute_p">
      <summary>获取或设置表示处理 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /> 事件的方法的对象。</summary>
      <returns>指向事件处理程序的 <see cref="T:System.Xml.Serialization.XmlAttributeEventHandler" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownElement_p">
      <summary>获取或设置表示处理 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> 事件的方法的对象。</summary>
      <returns>指向事件处理程序的 <see cref="T:System.Xml.Serialization.XmlElementEventHandler" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownNode_p">
      <summary>获取或设置表示处理 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> 事件的方法的对象。</summary>
      <returns>指向事件处理程序的 <see cref="T:System.Xml.Serialization.XmlNodeEventHandler" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnreferencedObject_p">
      <summary>获取或设置表示处理 <see cref="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" /> 事件的方法的对象。</summary>
      <returns>指向事件处理程序的 <see cref="T:System.Xml.Serialization.UnreferencedObjectEventHandler" />。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementAttributes">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; objects used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; to override the default way it serializes a class.">表示 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 对象的集合，该对象由 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 用来重写序列化类的默认方式。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttributes&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Add(System.Xml.Serialization.XmlElementAttribute)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; to the collection.">将 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 添加到集合中。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; to add.">要添加的 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />。</param>
      <returns vsli:raw="The zero-based index of the newly added item.">新添加项的从零开始的索引。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Contains(System.Xml.Serialization.XmlElementAttribute)">
      <summary vsli:raw="Determines whether the collection contains the specified object.">确定集合是否包含指定对象。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; to look for.">要查找的 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object exists in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果该集合中存在对象，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.CopyTo(System.Xml.Serialization.XmlElementAttribute[],System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttributes&quot; /&gt;, or a portion of it to a one-dimensional array.">将 <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> 或它的一部分复制到一维数组中。</summary>
      <param name="array" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; array to hold the copied elements.">保留所复制的元素的 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 数组。</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">
        <paramref name="array" /> 中从零开始的索引，从此处开始复制。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.IndexOf(System.Xml.Serialization.XmlElementAttribute)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt;.">获取指定 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 的索引。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; whose index is being retrieved.">要检索其索引的 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />。</param>
      <returns vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 的从零开始的索引。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlElementAttribute)">
      <summary vsli:raw="Inserts an &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; into the collection.">向集合中插入 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />。</summary>
      <param name="index" vsli:raw="The zero-based index where the member is inserted.">从零开始的索引，在此处插入了成员。</param>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; to insert.">要插入的 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttributes.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">获取或设置指定索引处的元素。</summary>
      <param name="index" vsli:raw="The zero-based index of the element to get or set.">要获取或设置的元素的从零开始的索引。</param>
      <returns vsli:raw="The element at the specified index.">指定索引处的元素。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is not a valid index in the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttributes&quot; /&gt;.">
        <paramref name="index" /> 不是 <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> 中的有效索引。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The property is set and the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttributes&quot; /&gt; is read-only.">设置了该属性，但 <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> 为只读。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Remove(System.Xml.Serialization.XmlElementAttribute)">
      <summary vsli:raw="Removes the specified object from the collection.">从集合中移除指定的对象。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; to remove from the collection.">要从该集合中移除的 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownElement&quot; /&gt; event.">为 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> 事件提供数据。</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.Element">
      <summary vsli:raw="Gets the object that represents the unknown XML element.">获取表示未知 XML 元素的对象。</summary>
      <returns vsli:raw="The object that represents the unknown XML element.">表示未知 XML 元素的对象。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.ExpectedElements">
      <summary vsli:raw="Gets a comma-delimited list of XML element names expected to be in an XML document instance.">获取逗号分隔的 XML 元素名称列表，这些名称应在 XML 文档实例内。</summary>
      <returns vsli:raw="A comma-delimited list of XML element names. Each name is in the following format: &lt;paramref name=&quot;namespace&quot; /&gt;:&lt;paramref name=&quot;name&quot; /&gt;.">以逗号分隔的 XML 元素名称的列表。 每个名称的格式为：<paramref name="namespace" />:<paramref name="name" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.LineNumber">
      <summary vsli:raw="Gets the line number where the unknown element was encountered if the XML reader is an &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt;.">如果 XML 读取器为 <see cref="T:System.Xml.XmlTextReader" />，则在遇到未知元素的位置获取行号。</summary>
      <returns vsli:raw="The line number where the unknown element was encountered if the XML reader is an &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt;; otherwise, -1.">如果 XML 读取器为 <see cref="T:System.Xml.XmlTextReader" />，则为遇到未知元素的位置处的行号；否则为 -1。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.LinePosition">
      <summary vsli:raw="Gets the place in the line where the unknown element occurs if the XML reader is an &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt;.">如果 XML 读取器为 <see cref="T:System.Xml.XmlTextReader" />，则获取未知元素在行中出现的位置。</summary>
      <returns vsli:raw="The number in the line where the unknown element occurs if the XML reader is an &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt;; otherwise, -1.">如果 XML 读取器为 <see cref="T:System.Xml.XmlTextReader" />，则为出现未知元素的行的编号；否则为 -1。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.ObjectBeingDeserialized">
      <summary vsli:raw="Gets the object the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is deserializing.">获取 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 正在反序列化的对象。</summary>
      <returns vsli:raw="The object that is being deserialized by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 正在反序列化的对象。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownElement&quot; /&gt; event of an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">表示处理 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 的 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> 事件的方法。</summary>
      <param name="sender" vsli:raw="The source of the event.">事件源。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementEventArgs&quot; /&gt; that contains the event data.">包含事件数据的 <see cref="T:System.Xml.Serialization.XmlElementEventArgs" />。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlIncludeAttribute">
      <summary vsli:raw="Allows the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; to recognize a type when it serializes or deserializes an object.">允许 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 在它序列化或反序列化对象时识别类型。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlIncludeAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlIncludeAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.XmlIncludeAttribute" /> 类的新实例。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to include.">要包含的对象的 <see cref="T:System.Type" />。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlIncludeAttribute.Type">
      <summary vsli:raw="Gets or sets the type of the object to include.">获取或设置要包含的对象的类型。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to include.">要包含的对象的 <see cref="T:System.Type" />。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMapping">
      <summary vsli:raw="Supports mappings between .NET types and XML Schema data types.">支持 .NET Framework 类型和 XML 架构数据类型之间的映射。</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.ElementName">
      <summary vsli:raw="Gets the name of the mapped element.">获取被映射元素的名称。</summary>
      <returns vsli:raw="The name of the mapped element.">被映射元素的名称。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.Namespace">
      <summary vsli:raw="Gets the namespace of the mapped element.">获取被映射元素的命名空间。</summary>
      <returns vsli:raw="The namespace of the mapped element.">被映射元素的命名空间。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlMapping.SetKey(System.String)">
      <summary vsli:raw="Sets the key used to look up the mapping.">设置用于查找映射的键。</summary>
      <param name="key" vsli:raw="The lookup key.">查找键。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.XsdElementName">
      <summary vsli:raw="Gets the name of the XSD element of the mapping.">获取映射的 XSD 元素的名称。</summary>
      <returns vsli:raw="The XSD element name.">XSD 元素名称。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMappingAccess">
      <summary vsli:raw="Specifies whether a mapping is read, write, or both.">指定映射是读取、写入，还是既读取又写入。</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.None">
      <summary vsli:raw="Both read and write methods are generated.">生成读取方法和写入方法。</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.Read">
      <summary vsli:raw="Read methods are generated.">生成读取方法。</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.Write">
      <summary vsli:raw="Write methods are generated.">生成写入方法。</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlMemberMapping">
      <summary vsli:raw="Maps a code entity in a .NET Web service method to an element in a Web Services Description Language (WSDL) message.">将 .NET Framework Web 服务方法中的代码实体映射到 Web 服务描述语言 (WSDL) 消息中的元素。</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.Any">
      <summary vsli:raw="Gets or sets a value that indicates whether the .NET type maps to an XML element or attribute of any type.">获取或设置一个值，该值指示 .NET Framework 类型是否可以映射到任何类型的 XML 元素或属性。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the type maps to an XML any element or attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果该类型可以映射到任何 XML 元素或属性，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.CheckSpecified">
      <summary vsli:raw="Gets a value that indicates whether the accompanying field in the .NET type has a value specified.">获取一个值，该值指示 .NET Framework 类型中的伴随字段是否指定了值。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the accompanying field has a value specified; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果伴随字段指定了值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.ElementName">
      <summary vsli:raw="Gets the unqualified name of the XML element declaration that applies to this mapping.">获取应用于此映射的 XML 元素声明的非限定名。</summary>
      <returns vsli:raw="The unqualified name of the XML element declaration that applies to this mapping.">应用于此映射的 XML 元素声明的非限定名。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.MemberName">
      <summary vsli:raw="Gets the name of the Web service method member that is represented by this mapping.">获取此映射所表示的 Web 服务方法成员的名称。</summary>
      <returns vsli:raw="The name of the Web service method member represented by this mapping.">此映射所表示的 Web 服务方法成员的名称。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.Namespace">
      <summary vsli:raw="Gets the XML namespace that applies to this mapping.">获取应用于此映射的 XML 命名空间。</summary>
      <returns vsli:raw="The XML namespace that applies to this mapping.">应用于此映射的 XML 命名空间。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeFullName">
      <summary vsli:raw="Gets the fully qualified type name of the .NET type for this mapping.">获取此映射的 .NET Framework 类型的完全限定类型名称。</summary>
      <returns vsli:raw="The fully qualified type name of the .NET type for this mapping.">此映射的 .NET Framework 类型的完全限定类型名称。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeName">
      <summary vsli:raw="Gets the type name of the .NET type for this mapping.">获取此映射的 .NET Framework 类型的类型名称。</summary>
      <returns vsli:raw="The type name of the .NET type for this mapping.">此映射的 .NET Framework 类型的类型名称。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeNamespace">
      <summary vsli:raw="Gets the namespace of the .NET type for this mapping.">获取此映射的 .NET Framework 类型的命名空间。</summary>
      <returns vsli:raw="The namespace of the .NET type for this mapping.">此映射的 .NET Framework 类型的命名空间。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.XsdElementName">
      <summary vsli:raw="Gets the XML element name as it appears in the service description document.">获取服务描述文档中显示的 XML 元素名称。</summary>
      <returns vsli:raw="The XML element name.">XML 元素名称。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMembersMapping">
      <summary vsli:raw="Provides mappings between .NET Web service methods and Web Services Description Language (WSDL) messages that are defined for SOAP Web services.">提供 .NET Framework Web 服务方法与为 SOAP Web 服务定义的 Web 服务描述语言 (WSDL) 消息之间的映射。</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.Count">
      <summary vsli:raw="Gets the number of .NET code entities that belong to a Web service method to which a SOAP message is being mapped.">获取 .NET Framework 代码实体的数目，这些实体属于 SOAP 消息所映射到的 Web 服务方法。</summary>
      <returns vsli:raw="The number of mappings in the collection.">集合中映射的数目。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.Item(System.Int32)">
      <summary vsli:raw="Gets an item that contains internal type mapping information for a .NET code entity that belongs to a Web service method being mapped to a SOAP message.">获取一项，该项包含 .NET Framework 代码实体的内部类型映射信息，而 .NET Framework 代码实体属于映射到 SOAP 消息的 Web 服务方法。</summary>
      <param name="index" vsli:raw="The index of the mapping to return.">要返回的映射的索引。</param>
      <returns vsli:raw="The requested &lt;see cref=&quot;T:System.Xml.Serialization.XmlMemberMapping&quot; /&gt;.">请求的 <see cref="T:System.Xml.Serialization.XmlMemberMapping" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.TypeName">
      <summary vsli:raw="Gets the name of the .NET type being mapped to the data type of an XML Schema element that represents a SOAP message.">获取 .NET Framework 类型的名称，该类型映射到表示 SOAP 消息的 XML 架构元素的数据类型。</summary>
      <returns vsli:raw="The name of the .NET type.">.NET Framework 类型的名称。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.TypeNamespace">
      <summary vsli:raw="Gets the namespace of the .NET type being mapped to the data type of an XML Schema element that represents a SOAP message.">获取 .NET Framework 类型的命名空间，该类型映射到表示 SOAP 消息的 XML 架构元素的数据类型。</summary>
      <returns vsli:raw="The .NET namespace of the mapping.">映射的 .NET Framework 命名空间。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlNodeEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownNode&quot; /&gt; event.">为 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> 事件提供数据。</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LineNumber">
      <summary vsli:raw="Gets the line number of the unknown XML node.">获取未知 XML 节点的行号。</summary>
      <returns vsli:raw="The line number of the unknown XML node.">未知 XML 节点的行号。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LinePosition">
      <summary vsli:raw="Gets the position in the line of the unknown XML node.">获取未知 XML 节点行中的位置。</summary>
      <returns vsli:raw="The position number of the unknown XML node.">未知 XML 节点的位置编号。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LocalName">
      <summary vsli:raw="Gets the XML local name of the XML node being deserialized.">获取正在被反序列化的 XML 节点的 XML 本地名称。</summary>
      <returns vsli:raw="The XML local name of the node being deserialized.">正在被反序列化的节点的 XML 本地名称。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.Name">
      <summary vsli:raw="Gets the name of the XML node being deserialized.">获取正在被反序列化的 XML 节点的名称。</summary>
      <returns vsli:raw="The name of the node being deserialized.">正在被反序列化的节点的名称。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.NamespaceURI">
      <summary vsli:raw="Gets the namespace URI that is associated with the XML node being deserialized.">获取与正在被反序列化的 XML 节点关联的命名空间 URI。</summary>
      <returns vsli:raw="The namespace URI that is associated with the XML node being deserialized.">与正在被反序列化的 XML 节点关联的命名空间 URI。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.NodeType">
      <summary vsli:raw="Gets the type of the XML node being deserialized.">获取正在被反序列化的 XML 节点的类型。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNodeType&quot; /&gt; that represents the XML node being deserialized.">表示正在被反序列化的 XML 节点的 <see cref="T:System.Xml.XmlNodeType" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.ObjectBeingDeserialized">
      <summary vsli:raw="Gets the object being deserialized.">获取正在被反序列化的对象。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; being deserialized.">正被反序列化的 <see cref="T:System.Object" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.Text">
      <summary vsli:raw="Gets the text of the XML node being deserialized.">获取正在被反序列化的 XML 节点的文本。</summary>
      <returns vsli:raw="The text of the XML node being deserialized.">正在被反序列化的 XML 节点的文本。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlNodeEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownNode&quot; /&gt; event of an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">表示处理 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 的 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> 事件的方法。</summary>
      <param name="sender" vsli:raw="The source of the event.">事件源。</param>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlNodeEventArgs&quot; /&gt; that contains the event data.">包含事件数据的 <see cref="T:System.Xml.Serialization.XmlNodeEventArgs" />。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlReflectionImporter">
      <summary vsli:raw="Generates mappings to XML schema element declarations, including literal XML Schema Definition (XSD) message parts in a Web Services Description Language (WSDL) document, for .NET types or Web service method information.">为 .NET Framework 类型或 Web 服务方法信息生成到 XML 架构元素声明（包括 Web 服务描述语言 (WSDL) 文档中的文本 XML 架构定义 (XSD) 消息部分）的映射。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionImporter&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionImporter&quot; /&gt; class using the specified default XML namespace.">使用指定的默认 XML 命名空间，初始化 <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> 类的新实例。</summary>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use for imported type mappings.">导入的类型映射要使用的默认 XML 命名空间。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionImporter&quot; /&gt; class using the specified XML serialization overrides.">使用指定的 XML 序列化重写，初始化 <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> 类的新实例。</summary>
      <param name="attributeOverrides" vsli:raw="An object that overrides how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class serializes mapped types.">一个对象，该对象重写 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类序列化映射类型的方式。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionImporter&quot; /&gt; class using the specified XML serialization overrides and default XML namespace.">使用指定的 XML 序列化重写和默认的 XML 命名空间，初始化 <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> 类的新实例。</summary>
      <param name="attributeOverrides" vsli:raw="An object that overrides how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class serializes mapped types.">一个对象，该对象重写 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类序列化映射类型的方式。</param>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use for imported type mappings.">导入的类型映射要使用的默认 XML 命名空间。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean)">
      <summary vsli:raw="Generates internal type mappings for information from a Web service method.">为 Web 服务方法的信息生成内部类型映射。</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">从 Web 服务方法生成的 XML 元素名称。</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">从 Web 服务方法生成的 XML 元素命名空间。</param>
      <param name="members" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionMember&quot; /&gt; objects that contain .NET Framework code entities that belong to a Web service method.">
        <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> 对象的数组，这些对象包含属于 Web 服务方法的 .NET Framework 代码实体。</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if elements that correspond to Web Services Description Language (WSDL) message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果对应于 Web 服务描述语言 (WSDL) 消息部分的元素应包含在 SOAP 消息的额外包装元素中，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; with mappings to the element parts of a WSDL message definition.">
        <see cref="T:System.Xml.Serialization.XmlMembersMapping" />，其中具有到 WSDL 消息定义的元素部分的映射。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Returns internal type mappings using information from a Web service method, and allows you to specify an XML element name, XML namespace, and other options.">使用 Web 服务方法的信息返回内部类型映射，并允许指定 XML 元素名称、XML 命名空间和其他选项。</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">从 Web 服务方法生成的 XML 元素名称。</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">从 Web 服务方法生成的 XML 元素命名空间。</param>
      <param name="members" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionMember&quot; /&gt; objects that contain .NET Framework code entities that belong to a Web service method.">
        <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> 对象的数组，这些对象包含属于 Web 服务方法的 .NET Framework 代码实体。</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if elements that correspond to Web Services Description Language (WSDL) message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果对应于 Web 服务描述语言 (WSDL) 消息部分的元素应包含在 SOAP 消息的额外包装元素中，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <param name="rpc" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the method is a remote procedure call; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果该方法是远程过程调用，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; that contains the mappings.">包含映射的 <see cref="T:System.Xml.Serialization.XmlMembersMapping" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean)">
      <summary vsli:raw="Returns internal type mappings using information from a Web service method, and allows you to specify an XML element name, XML namespace, and other options.">使用 Web 服务方法的信息返回内部类型映射，并允许指定 XML 元素名称、XML 命名空间和其他选项。</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">从 Web 服务方法生成的 XML 元素名称。</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">从 Web 服务方法生成的 XML 元素命名空间。</param>
      <param name="members" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionMember&quot; /&gt; objects that contain .NET Framework code entities that belong to a Web service method.">
        <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> 对象的数组，这些对象包含属于 Web 服务方法的 .NET Framework 代码实体。</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if elements that correspond to Web Services Description Language (WSDL) message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果对应于 Web 服务描述语言 (WSDL) 消息部分的元素应包含在 SOAP 消息的额外包装元素中，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <param name="rpc" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the method is a remote procedure call; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果该方法是远程过程调用，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <param name="openModel" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that the generated schema type will be marked with the &lt;see langword=&quot;&amp;lt;xs:anyAttribute&amp;gt;&quot; /&gt; element; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定生成的架构类型用 <see langword="&lt;xs:anyAttribute&gt;" /> 元素标记，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; that contains the mappings.">包含映射的 <see cref="T:System.Xml.Serialization.XmlMembersMapping" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.XmlMappingAccess)">
      <summary vsli:raw="Generates internal type mappings for information from a Web service method.">为 Web 服务方法的信息生成内部类型映射。</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">从 Web 服务方法生成的 XML 元素名称。</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">从 Web 服务方法生成的 XML 元素命名空间。</param>
      <param name="members" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionMember&quot; /&gt; objects that contain .NET Framework code entities that belong to a Web service method.">
        <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> 对象的数组，这些对象包含属于 Web 服务方法的 .NET Framework 代码实体。</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if elements that correspond to Web Services Description Language (WSDL) message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果对应于 Web 服务描述语言 (WSDL) 消息部分的元素应包含在 SOAP 消息的额外包装元素中，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <param name="rpc" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the method is a remote procedure call; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果该方法是远程过程调用，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <param name="openModel" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that the generated schema type will be marked with the &lt;see langword=&quot;&amp;lt;xs:anyAttribute&amp;gt;&quot; /&gt; element; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定生成的架构类型用 <see langword="&lt;xs:anyAttribute&gt;" /> 元素标记，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <param name="access" vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlMappingAccess&quot; /&gt; values. The default is &lt;see langword=&quot;None&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlMappingAccess" /> 值之一。 默认值为 <see langword="None" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; that contains the mappings.">包含映射的 <see cref="T:System.Xml.Serialization.XmlMembersMapping" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type)">
      <summary vsli:raw="Generates a mapping to an XML Schema element for a specified .NET type.">为指定的 .NET Framework 类型生成到 XML 架构元素的映射。</summary>
      <param name="type" vsli:raw="The .NET type for which to generate a type mapping.">将为其生成类型映射的 .NET Framework 类型。</param>
      <returns vsli:raw="Internal .NET mapping of a type to an XML Schema element.">从一个类型到一个 XML 架构元素的 .NET Framework 内部映射。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.String)">
      <summary vsli:raw="Generates a mapping to an XML Schema element for a .NET type, using the specified type and namespace.">使用指定的类型和命名空间为 .NET Framework 类型生成到 XML 架构元素的映射。</summary>
      <param name="type" vsli:raw="The .NET type for which to generate a type mapping.">将为其生成类型映射的 .NET Framework 类型。</param>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use.">要使用的默认 XML 命名空间。</param>
      <returns vsli:raw="Internal .NET mapping of a type to an XML Schema element.">从一个类型到一个 XML 架构元素的 .NET Framework 内部映射。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary vsli:raw="Generates a mapping to an XML Schema element for a .NET type, using the specified type and attribute.">使用指定的类型和特性为 .NET Framework 类型生成到 XML 架构元素的映射。</summary>
      <param name="type" vsli:raw="The .NET type for which to generate a type mapping.">将为其生成类型映射的 .NET Framework 类型。</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; attribute that is applied to the type.">应用于类型的 <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> 特性。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; that represents a mapping of a .NET type to an XML Schema element.">
        <see cref="T:System.Xml.Serialization.XmlTypeMapping" />，表示 .NET Framework 类型到 XML 架构元素的映射。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary vsli:raw="Generates a mapping to an XML Schema element for a .NET type, using the specified type, attribute, and namespace.">使用指定的类型、特性和命名空间为 .NET Framework 类型生成到 XML 架构元素的映射。</summary>
      <param name="type" vsli:raw="The .NET type for which to generate a type mapping.">将为其生成类型映射的 .NET Framework 类型。</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; attribute that is applied to the type.">应用于类型的 <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> 特性。</param>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use.">要使用的默认 XML 命名空间。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; that contains the internal .NET mapping of a type to an XML Schema element.">
        <see cref="T:System.Xml.Serialization.XmlTypeMapping" />，其中包含一个类型到一个 XML 架构元素的 .NET Framework 内部映射。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.IncludeType(System.Type)">
      <summary vsli:raw="Includes mappings for a type for later use when import methods are invoked.">包含类型的映射，这些映射在以后调用导入方法时使用。</summary>
      <param name="type" vsli:raw="The .NET Framework type for which to save type mapping information.">要为其保存类型映射信息的 .NET Framework 类型。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)">
      <summary vsli:raw="Includes mappings for derived types for later use when import methods are invoked.">包含派生类型的映射，这些映射在以后调用导入方法时使用。</summary>
      <param name="provider" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; class that contains custom attributes derived from the &lt;see cref=&quot;T:System.Xml.Serialization.XmlIncludeAttribute&quot; /&gt; attribute.">
        <see cref="T:System.Reflection.ICustomAttributeProvider" /> 类的实例，该类包含从 <see cref="T:System.Xml.Serialization.XmlIncludeAttribute" /> 特性派生的自定义特性。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlReflectionMember">
      <summary vsli:raw="Provides mappings between code entities in .NET Web service methods and the content of Web Services Description Language (WSDL) messages that are defined for SOAP Web services.">提供 .NET Framework Web 服务方法中的代码实体与为 SOAP Web 服务定义的 Web 服务描述语言 (WSDL) 消息的内容之间的映射。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionMember.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionMember&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.IsReturnValue">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionMember&quot; /&gt; represents a Web service method return value, as opposed to an output parameter.">获取或设置一个值，该值指示 <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> 是否表示 Web 服务方法返回值（而不是输出参数）。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the member represents a Web service return value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果成员表示 Web 服务返回值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.MemberName">
      <summary vsli:raw="Gets or sets the name of the Web service method member for this mapping.">获取或设置映射的 Web 服务方法成员的名称。</summary>
      <returns vsli:raw="The name of the Web service method.">Web 服务方法的名称。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.MemberType">
      <summary vsli:raw="Gets or sets the type of the Web service method member code entity that is represented by this mapping.">获取或设置此映射所表示的 Web 服务方法成员代码实体的类型。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the Web service method member code entity that is represented by this mapping.">此映射所表示的 Web 服务方法成员代码实体的 <see cref="T:System.Type" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.OverrideIsNullable">
      <summary vsli:raw="Gets or sets a value that indicates that the value of the corresponding XML element definition's &lt;c&gt;isNullable&lt;/c&gt; attribute is &lt;see langword=&quot;false&quot; /&gt;.">获取或设置一个值，该值指示相应 XML 元素定义的 <c>isNullable</c> 属性的值是 <see langword="false" />。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to override the &lt;see cref=&quot;P:System.Xml.Serialization.XmlElementAttribute.IsNullable&quot; /&gt; property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果要重写 <see cref="P:System.Xml.Serialization.XmlElementAttribute.IsNullable" /> 属性，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.SoapAttributes">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; with the collection of SOAP-related attributes that have been applied to the member code entity.">使用应用于成员代码实体的 SOAP 相关特性的集合获取或设置 <see cref="T:System.Xml.Serialization.SoapAttributes" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; that contains the objects that represent SOAP attributes applied to the member.">包含对象的 <see cref="T:System.Xml.Serialization.SoapAttributes" />，这些对象表示应用于成员的 SOAP 特性。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.XmlAttributes">
      <summary vsli:raw="Gets or sets an &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; with the collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;-related attributes that have been applied to the member code entity.">使用应用于成员代码实体的 <see cref="T:System.Xml.Serialization.XmlAttributes" />相关属性的集合获取或设置 <see cref="T:System.Xml.Serialization.XmlSerializer" />。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; that represents XML attributes that have been applied to the member code.">
        <see cref="T:System.Xml.Serialization.XmlAttributes" />，表示应用于成员代码的 XML 属性。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaEnumerator">
      <summary vsli:raw="Enables iteration over a collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects.">启用 <see cref="T:System.Xml.Schema.XmlSchema" /> 对象的集合上的迭代。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemaEnumerator&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.XmlSchemaEnumerator" /> 类的新实例。</summary>
      <param name="list" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; object you want to iterate over.">要在其上进行迭代的 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 对象。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaEnumerator.Current">
      <summary vsli:raw="Gets the current element in the collection.">获取集合中的当前元素。</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object in the collection.">集合中当前的 <see cref="T:System.Xml.Schema.XmlSchema" /> 对象。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemaEnumerator&quot; /&gt;.">释放由 <see cref="T:System.Xml.Serialization.XmlSchemaEnumerator" /> 使用的所有资源。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.MoveNext">
      <summary vsli:raw="Advances the enumerator to the next item in the collection.">使枚举数前进到集合中的下一项。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the move is successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果移动成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaEnumerator.System#Collections#IEnumerator#Current">
      <summary vsli:raw="Gets the current element in the collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects.">获取 <see cref="T:System.Xml.Schema.XmlSchema" /> 对象集合中的当前元素。</summary>
      <returns vsli:raw="The current element in the collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> 对象集合中的当前元素。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.System#Collections#IEnumerator#Reset">
      <summary vsli:raw="Sets the enumerator to its initial position, which is before the first element in the collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects.">将枚举器设置为其初始位置，该位置位于 <see cref="T:System.Xml.Schema.XmlSchema" /> 对象集合中第一个元素之前。</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaExporter">
      <summary vsli:raw="Populates &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects with XML schema element declarations that are found in type mapping objects.">使用类型映射对象中的 XML 架构元素声明填充 <see cref="T:System.Xml.Schema.XmlSchema" /> 对象。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemaExporter&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.XmlSchemaExporter" /> 类的新实例。</summary>
      <param name="schemas" vsli:raw="A collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects to which element declarations obtained from type mappings are added.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> 对象的集合，其中将添加从类型映射获取的元素声明。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportAnyType(System.String)">
      <summary vsli:raw="Exports an &lt;c&gt;&amp;lt;any&amp;gt;&lt;/c&gt; element to the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object that is identified by the specified namespace.">将 &lt;any&gt; 元素导出到由指定命名空间标识的 <see cref="T:System.Xml.Schema.XmlSchema" /> 对象。</summary>
      <param name="ns" vsli:raw="The namespace of the XML schema document to which to add an &lt;c&gt;&amp;lt;any&amp;gt;&lt;/c&gt; element.">向 XML 架构文档的命名空间添加 &lt;any&gt; 元素。</param>
      <returns vsli:raw="An arbitrary name assigned to the &lt;c&gt;&amp;lt;any&amp;gt;&lt;/c&gt; element declaration.">向 &lt;any&gt; 元素声明分配任意名称。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportAnyType(System.Xml.Serialization.XmlMembersMapping)">
      <summary vsli:raw="Adds an element declaration for an object or type to a SOAP message or to an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object.">将对象或类型的元素声明添加到 SOAP 消息或 <see cref="T:System.Xml.Schema.XmlSchema" /> 对象。</summary>
      <param name="members" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; that contains mappings to export.">包含要导出的映射的 <see cref="T:System.Xml.Serialization.XmlMembersMapping" />。</param>
      <returns vsli:raw="The string &quot;any&quot; with an appended integer.">追加有一个整数的字符串“any”。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping)">
      <summary vsli:raw="Adds an element declaration to the applicable &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; for each of the element parts of a literal SOAP message definition.">向文本 SOAP 消息定义中每一个元素部分的适用 <see cref="T:System.Xml.Schema.XmlSchema" /> 添加一个元素声明。</summary>
      <param name="xmlMembersMapping" vsli:raw="The internal .NET Framework type mappings for the element parts of a Web Services Description Language (WSDL) message definition.">Web 服务描述语言 (WSDL) 消息定义中元素部分的内部 .NET Framework 类型映射。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping,System.Boolean)">
      <summary vsli:raw="Adds an element declaration to the applicable &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; for each of the element parts of a literal SOAP message definition, and specifies whether enclosing elements are included.">向文本 SOAP 消息定义中每一个元素部分的适用 <see cref="T:System.Xml.Schema.XmlSchema" /> 添加一个元素声明，并指定是否包含封闭元素。</summary>
      <param name="xmlMembersMapping" vsli:raw="The internal mapping between a .NET Framework type and an XML schema element.">.NET Framework 类型和 XML 架构元素之间的内部映射。</param>
      <param name="exportEnclosingType" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the schema elements that enclose the schema are to be included; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果包含封闭架构的架构元素，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlMembersMapping)">
      <summary vsli:raw="Adds an element declaration to the applicable &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object for a single element part of a literal SOAP message definition.">向文本 SOAP 消息定义中单个元素部分的适用 <see cref="T:System.Xml.Schema.XmlSchema" /> 对象添加一个元素声明。</summary>
      <param name="xmlMembersMapping" vsli:raw="Internal .NET Framework type mappings for the element parts of a Web Services Description Language (WSDL) message definition.">Web 服务描述语言 (WSDL) 消息定义中元素部分的内部 .NET Framework 类型映射。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the qualified XML name of the exported element declaration.">
        <see cref="T:System.Xml.XmlQualifiedName" />，表示导出的元素声明的限定 XML 名称。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlTypeMapping)">
      <summary vsli:raw="Adds an element declaration for a .NET type to the applicable &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object.">将 .NET Framework 类型的元素声明添加到适用 <see cref="T:System.Xml.Schema.XmlSchema" /> 对象。</summary>
      <param name="xmlTypeMapping" vsli:raw="The internal mapping between a .NET type and an XML schema element.">.NET Framework 类型和 XML 架构元素之间的内部映射。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaImporter">
      <summary vsli:raw="Generates internal mappings to .NET types for XML schema element declarations, including literal XSD message parts in a WSDL document.">为 XML 架构元素声明（包括 WSDL 文档中的文本 XSD 消息部分）生成到 .NET Framework 类型的内部映射。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemaImporter&quot; /&gt; class, taking a collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects representing the XML schemas used by SOAP literal messages defined in a WSDL document.">初始化 <see cref="T:System.Xml.Serialization.XmlSchemaImporter" /> 类的新实例，采用 <see cref="T:System.Xml.Schema.XmlSchema" /> 对象的集合，表示 WSDL 文档中定义的 SOAP 文本消息所使用的 XML 架构。</summary>
      <param name="schemas" vsli:raw="A collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> 对象的集合。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeIdentifiers)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemaImporter&quot; /&gt; class, taking a collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects that represents the XML schemas used by SOAP literal messages, plus classes being generated for bindings defined in a Web Services Description Language (WSDL) document.">初始化 <see cref="T:System.Xml.Serialization.XmlSchemaImporter" /> 类的新实例，需要 <see cref="T:System.Xml.Schema.XmlSchema" /> 对象（表示 SOAP 文本消息所使用的 XML 架构）的集合，以及为 Web 服务描述语言 (WSDL) 文档中定义的绑定生成的类。</summary>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; object.">
        <see cref="T:System.Xml.Serialization.XmlSchemas" /> 对象。</param>
      <param name="typeIdentifiers" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; object that specifies a collection of classes being generated for bindings defined in a WSDL document.">一个 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 对象，指定为 WSDL 文档中定义的绑定生成的类的集合。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportAnyType(System.Xml.XmlQualifiedName,System.String)">
      <summary vsli:raw="Generates internal type mapping information for a single, (SOAP) literal element part defined in a WSDL document.">为 WSDL 文档中定义的单个 (SOAP) 文本元素部分生成内部类型映射信息。</summary>
      <param name="typeName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the name of an element's type for which a .NET Framework type is generated.">一个 <see cref="T:System.Xml.XmlQualifiedName" /> ，指定为其生成.NET Framework 类型的元素类型名称。</param>
      <param name="elementName" vsli:raw="The name of the part element in the WSDL document.">WSDL 文档中 part 元素的名称。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; representing the .NET Framework type mapping for a single element part of a WSDL message definition.">表示 WSDL 消息定义中单个元素部分的 .NET Framework 类型映射的 <see cref="T:System.Xml.Serialization.XmlMembersMapping" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportDerivedTypeMapping(System.Xml.XmlQualifiedName,System.Type)">
      <summary vsli:raw="Generates internal type mapping information for an element defined in an XML schema document.">为 XML 架构文档中定义的元素生成内部类型映射信息。</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the name of an element defined in an XML schema document.">一个 <see cref="T:System.Xml.XmlQualifiedName" />，指定在 XML 架构文档中定义的元素的名称。</param>
      <param name="baseType" vsli:raw="A base type for the .NET Framework type that is generated to correspond to an XSD element's type.">对应于 XSD 元素的类型生成的 .NET Framework 类型的基类型。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; representing the.NET Framework type mapping information for an XML schema element.">表示 XML 架构元素的 .NET Framework 类型映射信息的 <see cref="T:System.Xml.Serialization.XmlTypeMapping" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportDerivedTypeMapping(System.Xml.XmlQualifiedName,System.Type,System.Boolean)">
      <summary vsli:raw="Generates internal type mapping information for an element defined in an XML schema document or as a part in a WSDL document.">为 XML 架构文档中定义的元素或作为 WSDL 文档的部分的元素生成内部类型映射信息。</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the name of an element defined in an XML schema document.">一个 <see cref="T:System.Xml.XmlQualifiedName" />，指定在 XML 架构文档中定义的元素的名称。</param>
      <param name="baseType" vsli:raw="A base type for the .NET Framework type that is generated to correspond to an XSD element's type.">对应于 XSD 元素的类型生成的 .NET Framework 类型的基类型。</param>
      <param name="baseTypeCanBeIndirect" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the type corresponding to an XSD element can indirectly inherit from the base type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指示对应于 XSD 元素的类型可以从基类型间接继承，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <returns vsli:raw="The .NET Framework type mapping information for an XML schema element.">XML 架构元素的 .NET Framework 类型映射信息。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.SoapSchemaMember[])">
      <summary vsli:raw="Generates internal type mapping information for the element parts of a literal-use SOAP message defined in a WSDL document.">为 WSDL 文档中定义的使用文本的 SOAP 消息的元素部分生成内部类型映射信息。</summary>
      <param name="name" vsli:raw="The name of the element for which to generate a mapping.">为其生成映射的元素的名称。</param>
      <param name="ns" vsli:raw="The namespace of the element for which to generate a mapping.">为其生成映射的元素的命名空间。</param>
      <param name="members" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.SoapSchemaMember&quot; /&gt; instances that specifies the members of the element for which to generate a mapping.">一个 <see cref="T:System.Xml.Serialization.SoapSchemaMember" /> 实例的数组，指定为其生成映射的元素的成员。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; that contains type mapping information.">一个 <see cref="T:System.Xml.Serialization.XmlMembersMapping" />，包含类型映射信息。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Generates internal type mapping information for a single element part of a literal-use SOAP message defined in a WSDL document.">为 WSDL 文档中定义的使用文本的 SOAP 消息的单个元素部分生成内部类型映射信息。</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the name of the message part.">一个 <see cref="T:System.Xml.XmlQualifiedName" /> ，指定消息部分的名称。</param>
      <returns vsli:raw="The .NET Framework type mapping for a WSDL message definition containing a single element part.">包含单个元素部分的 WSDL 消息定义的 .NET Framework 类型映射。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName[])">
      <summary vsli:raw="Generates internal type mapping information for the element parts of a literal-use SOAP message defined in a WSDL document.">为 WSDL 文档中定义的使用文本的 SOAP 消息的元素部分生成内部类型映射信息。</summary>
      <param name="names" vsli:raw="An array of type &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the names of the message parts.">一个类型 <see cref="T:System.Xml.XmlQualifiedName" /> 的数组，指定消息部分的名称。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; that represents the .NET Framework type mappings for the element parts of a WSDL message definition.">表示 WSDL 消息定义中元素部分的 .NET Framework 类型映射的 <see cref="T:System.Xml.Serialization.XmlMembersMapping" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName[],System.Type,System.Boolean)">
      <summary vsli:raw="Generates internal type mapping information for the element parts of a literal-use SOAP message defined in a WSDL document.">为 WSDL 文档中定义的使用文本的 SOAP 消息的元素部分生成内部类型映射信息。</summary>
      <param name="names" vsli:raw="An array of type &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the names of the message parts.">一个类型 <see cref="T:System.Xml.XmlQualifiedName" /> 的数组，指定消息部分的名称。</param>
      <param name="baseType" vsli:raw="A base type for all .NET Framework types that are generated to correspond to message parts.">生成来对应消息部分的 .NET Framework 类型的基类型。</param>
      <param name="baseTypeCanBeIndirect" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the types corresponding to message parts can indirectly inherit from the base type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指示对应于消息部分的类型可以直接从基类型继承，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <returns vsli:raw="The .NET Framework type mappings for the element parts of a WSDL message definition.">WSDL 消息定义中元素部分的 .NET Framework 类型映射。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Generates internal type mapping information for an element defined in an XML schema document.">为 XML 架构文档中定义的元素生成内部类型映射信息。</summary>
      <param name="typeName" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies an XML element.">
        <see cref="T:System.Xml.XmlQualifiedName" />，指定一个 XML 元素。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; object that describes a type mapping.">
        <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> 对象，描述一个类型映射。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName,System.Type)">
      <summary vsli:raw="Generates internal type mapping information for an element defined in an XML schema document.">为 XML 架构文档中定义的元素生成内部类型映射信息。</summary>
      <param name="typeName" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies an XML element.">
        <see cref="T:System.Xml.XmlQualifiedName" />，指定一个 XML 元素。</param>
      <param name="baseType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; object that specifies a base type.">
        <see cref="T:System.Type" /> 对象，指定一个基类型。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; object that describes a type mapping.">
        <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> 对象，描述一个类型映射。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName,System.Type,System.Boolean)">
      <summary vsli:raw="Generates internal type mapping information for an element defined in an XML schema document.">为 XML 架构文档中定义的元素生成内部类型映射信息。</summary>
      <param name="typeName" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies an XML element.">
        <see cref="T:System.Xml.XmlQualifiedName" />，指定一个 XML 元素。</param>
      <param name="baseType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; object that specifies a base type.">
        <see cref="T:System.Type" /> 对象，指定一个基类型。</param>
      <param name="baseTypeCanBeIndirect" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the generated type can indirectly inherit the &lt;paramref name=&quot;baseType&quot; /&gt;.">
        <see cref="T:System.Boolean" /> 值，指定生成的类型是否可以间接继承 <paramref name="baseType" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; object that describes a type mapping.">
        <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> 对象，描述一个类型映射。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportTypeMapping(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Generates internal type mapping information for an element defined in an XML schema document.">为 XML 架构文档中定义的元素生成内部类型映射信息。</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the name of an element defined in an XML schema document.">一个 <see cref="T:System.Xml.XmlQualifiedName" />，指定在 XML 架构文档中定义的元素的名称。</param>
      <returns vsli:raw="The .NET Framework type mapping information for an XML schema element.">XML 架构元素的 .NET Framework 类型映射信息。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemas">
      <summary vsli:raw="Represents the collection of XML schemas.">表示 XML 架构的集合。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Adds an object to the end of the collection.">将对象添加到集合末尾。</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object to be added to the collection of objects.">要添加到对象的集合中的 <see cref="T:System.Xml.Schema.XmlSchema" /> 对象。</param>
      <returns vsli:raw="The index at which the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; is added.">添加 <see cref="T:System.Xml.Schema.XmlSchema" /> 的位置的索引。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Schema.XmlSchema,System.Uri)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object that represents an assembly reference to the collection.">添加一个 <see cref="T:System.Xml.Schema.XmlSchema" /> 对象，该对象表示对集合的程序集引用。</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; to add.">要添加的 <see cref="T:System.Xml.Schema.XmlSchema" />。</param>
      <param name="baseUri" vsli:raw="The &lt;see cref=&quot;T:System.Uri&quot; /&gt; of the schema object.">架构对象的 <see cref="T:System.Uri" />。</param>
      <returns vsli:raw="The index at which the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; is added.">添加 <see cref="T:System.Xml.Schema.XmlSchema" /> 的位置的索引。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Serialization.XmlSchemas)">
      <summary vsli:raw="Adds an instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; class to the end of the collection.">将 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 类的实例添加到集合的末尾。</summary>
      <param name="schemas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; object to be added to the end of the collection.">要添加到集合末尾的 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 对象。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.AddReference(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object that represents an assembly reference to the collection.">添加一个 <see cref="T:System.Xml.Schema.XmlSchema" /> 对象，该对象表示对集合的程序集引用。</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; to add.">要添加的 <see cref="T:System.Xml.Schema.XmlSchema" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Compile(System.Xml.Schema.ValidationEventHandler,System.Boolean)">
      <summary vsli:raw="Processes the element and attribute names in the XML schemas and, optionally, validates the XML schemas.">处理 XML 架构中的元素和特性名称，还可以选择验证 XML 架构。</summary>
      <param name="handler" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; that specifies the callback method that handles errors and warnings during XML Schema validation, if the strict parameter is set to &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.ValidationEventHandler" />，在严格参数设置为 <see langword="true" /> 时指定在 XML 架构验证过程中处理错误和警告的回调方法。</param>
      <param name="fullCompile" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to validate the XML schemas in the collection using the &lt;see cref=&quot;M:System.Xml.Serialization.XmlSchemas.Compile(System.Xml.Schema.ValidationEventHandler,System.Boolean)&quot; /&gt; method of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">为 <see langword="true" /> 则使用 <see cref="M:System.Xml.Serialization.XmlSchemas.Compile(System.Xml.Schema.ValidationEventHandler,System.Boolean)" /> 类的 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 方法验证集合中的 XML 架构；否则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Contains(System.String)">
      <summary vsli:raw="Returns a value that indicates whether the collection contains an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object that belongs to the specified namespace.">返回一个值，指示该集合是否包含属于指定命名空间的 <see cref="T:System.Xml.Schema.XmlSchema" /> 对象。</summary>
      <param name="targetNamespace" vsli:raw="The namespace of the item to check for.">要检查的项的命名空间。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the item is found; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果找到该项，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Contains(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; contains a specific schema.">确定 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 是否包含特定架构。</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object to locate.">要定位的 <see cref="T:System.Xml.Schema.XmlSchema" /> 对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the collection contains the specified item; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果集合包含指定的项，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
      <summary vsli:raw="Copies the entire &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; to a compatible one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, which starts at the specified index of the target array.">从目标数组的指定索引处开始将整个 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 复制到兼容的一维 <see cref="T:System.Array" />。</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the schemas copied from &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">作为从 <see cref="T:System.Array" /> 复制的架构的目标位置的一维 <see cref="T:System.Xml.Serialization.XmlSchemas" />。 <see cref="T:System.Array" /> 必须具有从零开始的索引。</param>
      <param name="index" vsli:raw="A 32-bit integer that represents the index in the array where copying begins.">一个 32 位整数，它表示在数组中开始复制的位置的索引。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Find(System.Xml.XmlQualifiedName,System.Type)">
      <summary vsli:raw="Locates in one of the XML schemas an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; of the specified name and type.">将一个 XML 架构放置具有指定名称和类型的 <see cref="T:System.Xml.Schema.XmlSchemaObject" /> 中。</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies a fully qualified name with a namespace used to locate an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object in the collection.">
        <see cref="T:System.Xml.XmlQualifiedName" />，指定带有命名空间的完全限定名，用来在集合中定位 <see cref="T:System.Xml.Schema.XmlSchema" />。</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to find. Possible types include: &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaGroup&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttributeGroup&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaElement&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt;, and &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaNotation&quot; /&gt;.">要查找的对象的 <see cref="T:System.Type" />。 可能的值包括：<see cref="T:System.Xml.Schema.XmlSchemaGroup" />、<see cref="T:System.Xml.Schema.XmlSchemaAttributeGroup" />、<see cref="T:System.Xml.Schema.XmlSchemaElement" />、<see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> 和 <see cref="T:System.Xml.Schema.XmlSchemaNotation" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; instance, such as an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaElement&quot; /&gt; or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" /> 实例，如 <see cref="T:System.Xml.Schema.XmlSchemaElement" /> 或 <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.GetSchemas(System.String)">
      <summary vsli:raw="Gets a collection of schemas that belong to the same namespace.">获取属于相同命名空间的架构的集合。</summary>
      <param name="ns" vsli:raw="The namespace of the schemas to retrieve.">要检索的架构的命名空间。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; implementation that contains the schemas.">包含这些架构的 <see cref="T:System.Collections.IList" /> 实现。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.IndexOf(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Searches for the specified schema and returns the zero-based index of the first occurrence within the entire &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt;.">搜索指定的架构，并返回整个 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 中第一个匹配项的从零开始的索引。</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; to locate.">要查找的 <see cref="T:System.Xml.Schema.XmlSchema" />。</param>
      <returns vsli:raw="The zero-based index of the first occurrence of the value within the entire &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt;, if found; otherwise, -1.">如果在整个 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 中找到值的第一个匹配项，则为该项的从零开始的索引；否则为 -1。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Insert(System.Int32,System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Inserts a schema into the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; at the specified index.">将架构插入 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 中的指定索引处。</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;schema&quot; /&gt; should be inserted.">应插入 <paramref name="schema" /> 的从零开始的索引。</param>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object to be inserted.">要插入的 <see cref="T:System.Xml.Schema.XmlSchema" /> 对象。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.IsCompiled">
      <summary vsli:raw="Gets a value that indicates whether the schemas have been compiled.">获取一个值，该值指示是否编译了架构。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the schemas have been compiled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果已编译架构，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.IsDataSet(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Static method that determines whether the specified XML schema contains a custom &lt;see langword=&quot;IsDataSet&quot; /&gt; attribute set to &lt;see langword=&quot;true&quot; /&gt;, or its equivalent.">静态方法，该方法确定指定 XML 架构是否包含设置为 <see langword="IsDataSet" /> 的自定义 <see langword="true" /> 特性或其等效项。</summary>
      <param name="schema" vsli:raw="The XML schema to check for an &lt;see langword=&quot;IsDataSet&quot; /&gt; attribute with a &lt;see langword=&quot;true&quot; /&gt; value.">要在其中检查值为 <see langword="IsDataSet" /> 的 <see langword="true" /> 特性的 XML 架构。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified schema exists; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果存在指定架构，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object at the specified index.">获取或设置位于指定索引处的 <see cref="T:System.Xml.Schema.XmlSchema" /> 对象。</summary>
      <param name="index" vsli:raw="The index of the item to retrieve.">要检索的项的索引。</param>
      <returns vsli:raw="The specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt;.">指定的 <see cref="T:System.Xml.Schema.XmlSchema" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.Item(System.String)">
      <summary vsli:raw="Gets a specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object that represents the XML schema associated with the specified namespace.">获取指定的 <see cref="T:System.Xml.Schema.XmlSchema" /> 对象，该对象表示和指定命名空间关联的 XML 架构。</summary>
      <param name="ns" vsli:raw="The namespace of the specified object.">指定对象的命名空间。</param>
      <returns vsli:raw="The specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object.">指定的 <see cref="T:System.Xml.Schema.XmlSchema" /> 对象。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnClear">
      <summary vsli:raw="Performs additional custom processes when clearing the contents of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; instance.">当清除 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 实例的内容时执行其他自定义进程。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnInsert(System.Int32,System.Object)">
      <summary vsli:raw="Performs additional custom processes before inserting a new element into the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; instance.">在向 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 实例中插入新元素之前执行其他自定义进程。</summary>
      <param name="index" vsli:raw="The zero-based index at which to insert &lt;paramref name=&quot;value&quot; /&gt;.">从零开始的索引，在该处插入 <paramref name="value" />。</param>
      <param name="value" vsli:raw="The new value of the element at &lt;paramref name=&quot;index&quot; /&gt;.">
        <paramref name="index" /> 处的元素的新值。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnRemove(System.Int32,System.Object)">
      <summary vsli:raw="Performs additional custom processes when removing an element from the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; instance.">当从 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 实例移除元素时执行其他自定义进程。</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; can be found.">从零开始的索引，可在该位置找到 <paramref name="value" />。</param>
      <param name="value" vsli:raw="The value of the element to remove at &lt;paramref name=&quot;index&quot; /&gt;.">要移除的位于 <paramref name="index" /> 处的元素的值。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnSet(System.Int32,System.Object,System.Object)">
      <summary vsli:raw="Performs additional custom processes before setting a value in the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; instance.">当在 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 实例中设置值之前执行其他自定义进程。</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;oldValue&quot; /&gt; can be found.">从零开始的索引，可在该位置找到 <paramref name="oldValue" />。</param>
      <param name="oldValue" vsli:raw="The value to replace with &lt;paramref name=&quot;newValue&quot; /&gt;.">要用 <paramref name="newValue" /> 替换的值。</param>
      <param name="newValue" vsli:raw="The new value of the element at &lt;paramref name=&quot;index&quot; /&gt;.">
        <paramref name="index" /> 处的元素的新值。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Remove(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Removes the first occurrence of a specific schema from the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt;.">从 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 中移除特定架构的第一个匹配项。</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; to remove.">要移除的 <see cref="T:System.Xml.Schema.XmlSchema" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.System#Collections#Generic#IEnumerable{System#Xml#Schema#XmlSchema}#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the collection of XML schemas.">返回循环访问 XML 架构集合的枚举器。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object that can be used to iterate through the collection.">一个可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" /> 对象。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback">
      <summary vsli:raw="Delegate used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class for deserialization of SOAP-encoded XML data types that map to collections or enumerations.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类用于对映射到集合或枚举的 SOAP 编码的 XML 数据类型进行反序列化的委托。</summary>
      <param name="collection" vsli:raw="The collection into which the collection items array is copied.">复制集合项数组的目标集合。</param>
      <param name="collectionItems" vsli:raw="An array of items to be copied into the &lt;c&gt;object collection&lt;/c&gt;.">要复制到 <c>object collection</c> 的项的数组。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationFixupCallback">
      <summary vsli:raw="Delegate used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class for deserialization of SOAP-encoded XML data.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类用来反序列化 SOAP 编码的 XML 数据的委托。</summary>
      <param name="fixup" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader.Fixup&quot; /&gt; class that contains the object to be fixed and the array of string identifiers for the items to fill in.">
        <see cref="T:System.Xml.Serialization.XmlSerializationReader.Fixup" /> 类的一个实例，包含要链接的对象和待填写项的字符串标识符数组。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationGeneratedCode">
      <summary vsli:raw="An abstract class that is the base class for &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt; and &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt; and that contains methods common to both of these types.">一个抽象类，该类是 <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> 和 <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> 以及包含这两种类型的通用方法的那些类型的基类。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationGeneratedCode.#ctor">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationGeneratedCode&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.XmlSerializationGeneratedCode" /> 类的实例。</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReadCallback">
      <summary vsli:raw="Delegate used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class for deserialization of types from SOAP-encoded, non-root XML data.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类为了对 SOAP 编码的非根 XML 数据的类型进行反序列化而使用的委托。</summary>
      <returns vsli:raw="The object returned by the callback.">由回调返回的对象。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReader">
      <summary vsli:raw="Controls deserialization by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class.">控制由 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类执行的反序列化。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.CollectionFixup)">
      <summary vsli:raw="Stores an object that contains a callback method that will be called, as necessary, to fill in .NET collections or enumerations that map to SOAP-encoded arrays or SOAP-encoded, multi-referenced elements.">存储包含回调方法的对象，以便在必要时填充映射到 SOAP 编码的数组或 SOAP 编码的多引用元素的 .NET Framework 集合或枚举。</summary>
      <param name="fixup" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback&quot; /&gt; delegate and the callback method's input data.">
        <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> 委托和回调方法的输入数据。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.Fixup)">
      <summary vsli:raw="Stores an object that contains a callback method instance that will be called, as necessary, to fill in the objects in a SOAP-encoded array.">存储包含回调方法实例的对象，以便在必要时填充 SOAP 编码的数组中的对象。</summary>
      <param name="fixup" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationFixupCallback&quot; /&gt; delegate and the callback method's input data.">
        <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> 委托和回调方法的输入数据。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddReadCallback(System.String,System.String,System.Type,System.Xml.Serialization.XmlSerializationReadCallback)">
      <summary vsli:raw="Stores an implementation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReadCallback&quot; /&gt; delegate and its input data for a later invocation.">存储 <see cref="T:System.Xml.Serialization.XmlSerializationReadCallback" /> 委托的实现及其输入数据，以备以后调用。</summary>
      <param name="name" vsli:raw="The name of the .NET Framework type that is being deserialized.">要反序列化的 .NET Framework 类型的名称。</param>
      <param name="ns" vsli:raw="The namespace of the .NET Framework type that is being deserialized.">要反序列化的 .NET Framework 类型的命名空间。</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to be deserialized.">要反序列化的 <see cref="T:System.Type" />。</param>
      <param name="read" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReadCallback&quot; /&gt; delegate.">
        <see cref="T:System.Xml.Serialization.XmlSerializationReadCallback" /> 委托。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)">
      <summary vsli:raw="Stores an object that is being deserialized from a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; element for later access through the &lt;see cref=&quot;M:System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)&quot; /&gt; method.">存储要从 SOAP 编码的 <see langword="multiRef" /> 元素反序列化的对象，以备以后通过 <see cref="M:System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)" /> 方法访问。</summary>
      <param name="id" vsli:raw="The value of the &lt;see langword=&quot;id&quot; /&gt; attribute of a &lt;see langword=&quot;multiRef&quot; /&gt; element that identifies the element.">标识 <see langword="id" /> 元素的 <see langword="multiRef" /> 特性的值。</param>
      <param name="o" vsli:raw="The object that is deserialized from the XML element.">从 XML 元素反序列化的对象。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CheckReaderCount(System.Int32@,System.Int32@)">
      <summary vsli:raw="Checks whether the deserializer has advanced.">检查反序列化程序是否已推进。</summary>
      <param name="whileIterations" vsli:raw="The current &lt;see langword=&quot;count&quot; /&gt; in a while loop.">While 循环中的当前 <see langword="count" />。</param>
      <param name="readerCount" vsli:raw="The current &lt;see cref=&quot;P:System.Xml.Serialization.XmlSerializationReader.ReaderCount&quot; /&gt;.">当前的 <see cref="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount" />。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Xml.Serialization.XmlSerializationReader.ReaderCount&quot; /&gt; has not advanced.">
        <see cref="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount" /> 尚未推进。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CollapseWhitespace(System.String)">
      <summary vsli:raw="Removes all occurrences of white space characters from the beginning and end of the specified string.">从指定字符串的开始位置和末尾移除所有空白字符。</summary>
      <param name="value" vsli:raw="The string that will have its white space trimmed.">将移除其空白的字符串。</param>
      <returns vsli:raw="The trimmed string.">修整后的字符串。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup">
      <summary vsli:raw="Holds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback&quot; /&gt; delegate instance, plus the method's inputs; also supplies the method's parameters.">保存 <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> 委托实例和方法的输入；还提供方法的参数。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationCollectionFixupCallback,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup&quot; /&gt; class with parameters for a callback method.">使用回调方法的参数实例化 <see cref="T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup" /> 类的新实例。</summary>
      <param name="collection" vsli:raw="A collection into which the callback method copies the collection items array.">回调方法将集合项数组复制到的目标集合。</param>
      <param name="callback" vsli:raw="A method that instantiates the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback&quot; /&gt; delegate.">对 <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> 委托进行实例化的方法。</param>
      <param name="collectionItems" vsli:raw="An array into which the callback method copies a collection.">回调方法将集合复制到的目标数组。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.Callback">
      <summary vsli:raw="Gets the callback method that instantiates the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback&quot; /&gt; delegate.">获取对 <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> 委托进行实例化的回调方法。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback&quot; /&gt; delegate that points to the callback method.">指向回调方法的 <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> 委托。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.Collection">
      <summary vsli:raw="Gets the &lt;paramref name=&quot;object collection&quot; /&gt; for the callback method.">获取回调方法的 <paramref name="object collection" />。</summary>
      <returns vsli:raw="The collection that is used for the fixup.">用于链接地址信息的集合。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.CollectionItems">
      <summary vsli:raw="Gets the array into which the callback method copies a collection.">获取回调方法将集合复制到的目标数组。</summary>
      <returns vsli:raw="The array into which the callback method copies a collection.">回调方法将集合复制到的目标数组。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException(System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that an object being deserialized should be abstract.">创建一个 <see cref="T:System.InvalidOperationException" />，该异常指示要反序列化的对象应是抽象对象。</summary>
      <param name="name" vsli:raw="The name of the abstract type.">抽象类型的名称。</param>
      <param name="ns" vsli:raw="The .NET Framework namespace of the abstract type.">抽象类型的 .NET Framework 命名空间。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">一个 <see cref="T:System.InvalidOperationException" /> 异常。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateBadDerivationException(System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Populates an object from its XML representation at the current location of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;, with an option to read the inner element.">使用读取内部元素的选项，根据 <see cref="T:System.Xml.XmlReader" /> 当前位置的 XML 表示形式填充相应对象。</summary>
      <param name="xsdDerived" vsli:raw="The local name of the derived XML Schema data type.">派生 XML 架构数据类型的本地名称。</param>
      <param name="nsDerived" vsli:raw="The namespace of the derived XML Schema data type.">派生 XML 架构数据类型的命名空间。</param>
      <param name="xsdBase" vsli:raw="The local name of the base XML Schema data type.">基 XML 架构数据类型的本地名称。</param>
      <param name="nsBase" vsli:raw="The namespace of the base XML Schema data type.">基 XML 架构数据类型的命名空间。</param>
      <param name="clrDerived" vsli:raw="The namespace of the derived .NET Framework type.">派生 .NET Framework 类型的命名空间。</param>
      <param name="clrBase" vsli:raw="The name of the base .NET Framework type.">基 .NET Framework 类型的名称。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">一个 <see cref="T:System.InvalidOperationException" /> 异常。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateCtorHasSecurityException(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that an object being deserialized cannot be instantiated because the constructor throws a security exception.">创建一个 <see cref="T:System.InvalidOperationException" />，该异常指示要反序列化的对象无法实例化，原因是构造函数引发了安全性异常。</summary>
      <param name="typeName" vsli:raw="The name of the type.">类型的名称。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">一个 <see cref="T:System.InvalidOperationException" /> 异常。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInaccessibleConstructorException(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that an object being deserialized cannot be instantiated because there is no constructor available.">创建一个 <see cref="T:System.InvalidOperationException" />，该异常指示要反序列化的对象无法实例化，原因是无构造函数可用。</summary>
      <param name="typeName" vsli:raw="The name of the type.">类型的名称。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">一个 <see cref="T:System.InvalidOperationException" /> 异常。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidCastException&quot; /&gt; that indicates that an explicit reference conversion failed.">创建一个 <see cref="T:System.InvalidCastException" />，该异常指示显式引用转换失败。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that an object cannot be cast to. This type is incorporated into the exception message.">对象无法强制转换为的 <see cref="T:System.Type" />。 此类型包含在异常消息中。</param>
      <param name="value" vsli:raw="The object that cannot be cast. This object is incorporated into the exception message.">无法强制转换的对象。 此对象包含在异常消息中。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidCastException&quot; /&gt; exception.">一个 <see cref="T:System.InvalidCastException" /> 异常。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidCastException&quot; /&gt; that indicates that an explicit reference conversion failed.">创建一个 <see cref="T:System.InvalidCastException" />，该异常指示显式引用转换失败。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that an object cannot be cast to. This type is incorporated into the exception message.">对象无法强制转换为的 <see cref="T:System.Type" />。 此类型包含在异常消息中。</param>
      <param name="value" vsli:raw="The object that cannot be cast. This object is incorporated into the exception message.">无法强制转换的对象。 此对象包含在异常消息中。</param>
      <param name="id" vsli:raw="A string identifier.">字符串标识符。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidCastException&quot; /&gt; exception.">一个 <see cref="T:System.InvalidCastException" /> 异常。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateMissingIXmlSerializableType(System.String,System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that a derived type that is mapped to an XML Schema data type cannot be located.">创建一个 <see cref="T:System.InvalidOperationException" />，该异常指示无法定位映射到 XML 架构数据类型的派生类型。</summary>
      <param name="name" vsli:raw="The local name of the XML Schema data type that is mapped to the unavailable derived type.">映射到不可用派生类型的 XML 架构数据类型的本地名称。</param>
      <param name="ns" vsli:raw="The namespace of the XML Schema data type that is mapped to the unavailable derived type.">映射到不可用派生类型的 XML 架构数据类型的命名空间。</param>
      <param name="clrType" vsli:raw="The full name of the .NET Framework base type for which a derived type cannot be located.">无法为其定位派生类型的 .NET Framework 基类型的全名。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">一个 <see cref="T:System.InvalidOperationException" /> 异常。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that a SOAP-encoded collection type cannot be modified and its values cannot be filled in.">创建一个 <see cref="T:System.InvalidOperationException" />，该异常指示无法修改 SOAP 编码的集合类型，也无法填充其值。</summary>
      <param name="name" vsli:raw="The fully qualified name of the .NET Framework type for which there is a mapping.">具有映射的 .NET Framework 类型的完全限定名。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">一个 <see cref="T:System.InvalidOperationException" /> 异常。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException(System.String,System.Type)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that an enumeration value is not valid.">创建一个 <see cref="T:System.InvalidOperationException" />，该异常指示枚举值无效。</summary>
      <param name="value" vsli:raw="The enumeration value that is not valid.">无效的枚举值。</param>
      <param name="enumType" vsli:raw="The enumeration type.">枚举类型。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">一个 <see cref="T:System.InvalidOperationException" /> 异常。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that the current position of &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; represents an unknown XML node.">创建一个 <see cref="T:System.InvalidOperationException" />，该异常指示表示未知 XML 节点的 <see cref="T:System.Xml.XmlReader" /> 的当前位置。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">一个 <see cref="T:System.InvalidOperationException" /> 异常。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that a type is unknown.">创建一个 <see cref="T:System.InvalidOperationException" />，该异常指示类型未知。</summary>
      <param name="type" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the name of the unknown type.">表示未知类型的名称的 <see cref="T:System.Xml.XmlQualifiedName" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">一个 <see cref="T:System.InvalidOperationException" /> 异常。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.DecodeName">
      <summary vsli:raw="Gets or sets a value that determines whether XML strings are translated into valid .NET type names.">获取或设置一个值，该值确定 XML 字符串是否转换为有效的 .NET Framework 类型名称。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if XML strings are decoded into valid .NET type names; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 XML 字符串解码为有效的 .NET Framework 类型名称，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Document">
      <summary vsli:raw="Gets the XML document object into which the XML document is being deserialized.">获取 XML 文档反序列化到的 XML 文档对象。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; that represents the deserialized &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; data.">表示反序列化 <see cref="T:System.Xml.XmlDocument" /> 数据的 <see cref="T:System.Xml.XmlDocument" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex(System.Array,System.Int32,System.Type)">
      <summary vsli:raw="Ensures that a given array, or a copy, is large enough to contain a specified index.">确保给定的数组或副本足够大以包含指定的索引。</summary>
      <param name="a" vsli:raw="The &lt;see cref=&quot;T:System.Array&quot; /&gt; that is being checked.">要检查的 <see cref="T:System.Array" />。</param>
      <param name="index" vsli:raw="The required index.">要求的索引。</param>
      <param name="elementType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the array's elements.">数组元素的 <see cref="T:System.Type" />。</param>
      <returns vsli:raw="The existing &lt;see cref=&quot;T:System.Array&quot; /&gt;, if it is already large enough; otherwise, a new, larger array that contains the original array's elements.">如果数组足够大，则为现有的 <see cref="T:System.Array" />；否则为包含原始数组元素的一个更大的新数组。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReader.Fixup">
      <summary vsli:raw="Holds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationFixupCallback&quot; /&gt; delegate instance, plus the method's inputs; also serves as the parameter for the method.">保存 <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> 委托实例，以及该方法的输入；也作为该方法的参数使用。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Fixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationFixupCallback,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader.Fixup&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.XmlSerializationReader.Fixup" /> 类的新实例。</summary>
      <param name="o" vsli:raw="The object that contains other objects whose values get filled in by the callback implementation.">包含值由回叫实现填充的其他对象的对象。</param>
      <param name="callback" vsli:raw="A method that instantiates the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationFixupCallback&quot; /&gt; delegate.">对 <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> 委托进行实例化的方法。</param>
      <param name="count" vsli:raw="The size of the string array obtained through the &lt;see cref=&quot;P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids&quot; /&gt; property.">通过 <see cref="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids" /> 属性获取的字符串数组大小。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Fixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationFixupCallback,System.String[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader.Fixup&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.XmlSerializationReader.Fixup" /> 类的新实例。</summary>
      <param name="o" vsli:raw="The object that contains other objects whose values get filled in by the callback implementation.">包含值由回叫实现填充的其他对象的对象。</param>
      <param name="callback" vsli:raw="A method that instantiates the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationFixupCallback&quot; /&gt; delegate.">对 <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> 委托进行实例化的方法。</param>
      <param name="ids" vsli:raw="The string array obtained through the &lt;see cref=&quot;P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids&quot; /&gt; property.">通过 <see cref="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids" /> 属性获取的字符串数组。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Callback">
      <summary vsli:raw="Gets the callback method that creates an instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationFixupCallback&quot; /&gt; delegate.">获取创建 <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> 委托的实例的回叫方法。</summary>
      <returns vsli:raw="The callback method that creates an instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationFixupCallback&quot; /&gt; delegate.">创建 <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> 委托的实例的回调方法。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids">
      <summary vsli:raw="Gets or sets an array of keys for the objects that belong to the &lt;see cref=&quot;P:System.Xml.Serialization.XmlSerializationReader.Fixup.Source&quot; /&gt; property whose values get filled in by the callback implementation.">为属于 <see cref="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Source" /> 属性的对象（值由回叫实现填入）获取或设置键的数组。</summary>
      <returns vsli:raw="The array of keys.">键的数组。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Source">
      <summary vsli:raw="Gets or sets the object that contains other objects whose values get filled in by the callback implementation.">获取或设置包含值由回叫实现填充的其他对象的对象。</summary>
      <returns vsli:raw="The source containing objects with values to fill.">包含要填充值的对象的源。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.FixupArrayRefs(System.Object)">
      <summary vsli:raw="Fills in the values of a SOAP-encoded array whose data type maps to a .NET reference type.">填充 SOAP 编码的数组的值，该数组的数据类型映射到 .NET Framework 引用类型。</summary>
      <param name="fixup" vsli:raw="An object that contains the array whose values are filled in.">一个对象，包含填充值的数组。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetArrayLength(System.String,System.String)">
      <summary vsli:raw="Gets the length of the SOAP-encoded array where the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is currently positioned.">获取 <see cref="T:System.Xml.XmlReader" /> 当前定位的 SOAP 编码的数组的长度。</summary>
      <param name="name" vsli:raw="The local name that the array should have.">数组应具有的本地名称。</param>
      <param name="ns" vsli:raw="The namespace that the array should have.">数组应具有的命名空间。</param>
      <returns vsli:raw="The length of the SOAP array.">SOAP 数组的长度。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetNullAttr">
      <summary vsli:raw="Determines whether the XML element where the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is currently positioned has a null attribute set to the value &lt;see langword=&quot;true&quot; /&gt;.">确定 <see cref="T:System.Xml.XmlReader" /> 当前定位的 XML 元素是否将某个空属性设置为值 <see langword="true" />。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is currently positioned over a null attribute with the value &lt;see langword=&quot;true&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Xml.XmlReader" /> 当前定位于值为 <see langword="true" /> 的空属性，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)">
      <summary vsli:raw="Gets an object that is being deserialized from a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; element and that was stored earlier by &lt;see cref=&quot;M:System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)&quot; /&gt;.">获取先由 <see cref="M:System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)" /> 存储，后从 SOAP 编码的 <see langword="multiRef" /> 元素反序列化的对象。</summary>
      <param name="id" vsli:raw="The value of the &lt;see langword=&quot;id&quot; /&gt; attribute of a &lt;see langword=&quot;multiRef&quot; /&gt; element that identifies the element.">标识 <see langword="id" /> 元素的 <see langword="multiRef" /> 特性的值。</param>
      <returns vsli:raw="An object to be deserialized from a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; element.">要从 SOAP 编码的 <see langword="multiRef" /> 元素反序列化的对象。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetXsiType">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute for the XML element at the current location of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">获取 <see cref="T:System.Xml.XmlReader" /> 当前位置的 XML 元素的 <see langword="xsi:type" /> 属性的值。</summary>
      <returns vsli:raw="An XML qualified name that indicates the data type of an XML element.">XML 限定名，指示 XML 元素的数据类型。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.InitCallbacks">
      <summary vsli:raw="Initializes callback methods that populate objects that map to SOAP-encoded XML data.">初始化回调方法，该方法填充映射到 SOAP 编码的 XML 数据的对象。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.InitIDs">
      <summary vsli:raw="Stores element and attribute names in a &lt;see cref=&quot;T:System.Xml.NameTable&quot; /&gt; object.">将元素名称和属性名称存储在 <see cref="T:System.Xml.NameTable" /> 对象中。</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.IsReturnValue">
      <summary vsli:raw="Gets or sets a value that should be &lt;see langword=&quot;true&quot; /&gt; for a SOAP 1.1 return value.">获取或设置一个值，对于 SOAP 1.1 返回值，该值应为 <see langword="true" />。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the value is a return value.">如果该值是返回值，则为 <see langword="true" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute(System.String)">
      <summary vsli:raw="Determines whether an XML attribute name indicates an XML namespace.">确定 XML 属性名称是否指示 XML 命名空间。</summary>
      <param name="name" vsli:raw="The name of an XML attribute.">XML 特性的名称。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the XML attribute name indicates an XML namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 XML 属性名称指示 XML 命名空间，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ParseWsdlArrayType(System.Xml.XmlAttribute)">
      <summary vsli:raw="Sets the value of the XML attribute if it is of type &lt;see langword=&quot;arrayType&quot; /&gt; from the Web Services Description Language (WSDL) namespace.">如果 XML 特性是 Web 服务描述语言 (WSDL) 命名空间的类型 <see langword="arrayType" />，则设置其值。</summary>
      <param name="attr" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; that may have the type &lt;see langword=&quot;wsdl:array&quot; /&gt;.">
        <see cref="T:System.Xml.XmlAttribute" />，可以具有类型 <see langword="wsdl:array" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadElementQualifiedName">
      <summary vsli:raw="Makes the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; read the fully qualified name of the element where it is currently positioned.">使 <see cref="T:System.Xml.XmlReader" /> 读取其当前定位的元素的完全限定名。</summary>
      <returns vsli:raw="The fully qualified name of the current XML element.">当前 XML 元素的完全限定名。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadEndElement">
      <summary vsli:raw="Makes the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; read an XML end tag.">使 <see cref="T:System.Xml.XmlReader" /> 读取 XML 结束标记。</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Reader">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object that is being used by &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt;.">获取由 <see cref="T:System.Xml.XmlReader" /> 使用的 <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> 对象。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that is being used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt;.">由 <see cref="T:System.Xml.XmlReader" /> 使用的 <see cref="T:System.Xml.Serialization.XmlSerializationReader" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount">
      <summary vsli:raw="Gets the current count of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">获取 <see cref="T:System.Xml.XmlReader" /> 的当前计数。</summary>
      <returns vsli:raw="The current count of an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" /> 的当前计数。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNull">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read the current XML element if the element has a null attribute with the value true.">如果当前 XML 元素某个 null 特性的值为 true，则指示 <see cref="T:System.Xml.XmlReader" /> 读取该元素。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the element has a &lt;c&gt;null=&quot;true&quot;&lt;/c&gt; attribute value and has been read; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果元素具有“null="true"”属性值并且已经读取，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNullableQualifiedName">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read the fully qualified name of the element where it is currently positioned.">指示 <see cref="T:System.Xml.XmlReader" /> 读取其当前定位的元素的完全限定名。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the fully qualified name of the current XML element; otherwise, &lt;see langword=&quot;null&quot; /&gt; if a &lt;c&gt;null=&quot;true&quot;&lt;/c&gt; attribute value is present.">
        <see cref="T:System.Xml.XmlQualifiedName" />，表示当前 XML 元素的完全限定名；如果存在 null="true" 属性值，则为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNullableString">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read a simple, text-only XML element that could be &lt;see langword=&quot;null&quot; /&gt;.">指示 <see cref="T:System.Xml.XmlReader" /> 读取可能为 <see langword="null" /> 的简单纯文本 XML 元素。</summary>
      <returns vsli:raw="The string value; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">字符串值；否则为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReference(System.String@)">
      <summary vsli:raw="Reads the value of the &lt;see langword=&quot;href&quot; /&gt; attribute (&lt;see langword=&quot;ref&quot; /&gt; attribute for SOAP 1.2) that is used to refer to an XML element in SOAP encoding.">读取用于引用 SOAP 编码中的 XML 元素的 <see langword="href" /> 特性（在 SOAP 1.2 中为 <see langword="ref" /> 特性）的值。</summary>
      <param name="fixupReference" vsli:raw="An output string into which the &lt;see langword=&quot;href&quot; /&gt; attribute value is read.">将 <see langword="href" /> 特性值读入到其中的输出字符串。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value was read; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果值已读取，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement">
      <summary vsli:raw="Deserializes an object from a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; XML element.">从 SOAP 编码的 <see langword="multiRef" /> XML 元素反序列化对象。</summary>
      <returns vsli:raw="The value of the referenced element in the document.">在文档中引用的元素的值。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement(System.String,System.String)">
      <summary vsli:raw="Deserializes an object from a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; XML element.">从 SOAP 编码的 <see langword="multiRef" /> XML 元素反序列化对象。</summary>
      <param name="name" vsli:raw="The local name of the element's XML Schema data type.">元素的 XML 架构数据类型的本地名称。</param>
      <param name="ns" vsli:raw="The namespace of the element's XML Schema data type.">元素的 XML 架构数据类型的命名空间。</param>
      <returns vsli:raw="The value of the referenced element in the document.">在文档中引用的元素的值。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElements">
      <summary vsli:raw="Deserializes objects from the SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; elements in a SOAP message.">从 SOAP 消息中的 SOAP 编码的 <see langword="multiRef" /> 元素反序列化对象。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.Boolean,System.String@)">
      <summary vsli:raw="Deserializes an object from an XML element in a SOAP message that contains a reference to a &lt;see langword=&quot;multiRef&quot; /&gt; element.">反序列化 SOAP 消息中的 XML 元素的对象，该消息包含对 <see langword="multiRef" /> 元素的引用。</summary>
      <param name="name" vsli:raw="The local name of the element's XML Schema data type.">元素的 XML 架构数据类型的本地名称。</param>
      <param name="ns" vsli:raw="The namespace of the element's XML Schema data type.">元素的 XML 架构数据类型的命名空间。</param>
      <param name="elementCanBeType" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the element name is also the XML Schema data type name; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果元素名称也是 XML 架构数据类型名称，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <param name="fixupReference" vsli:raw="An output string into which the value of the &lt;see langword=&quot;href&quot; /&gt; attribute is read.">将 <see langword="href" /> 特性值读入到其中的输出字符串。</param>
      <returns vsli:raw="The deserialized object.">反序列化的对象。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.String@)">
      <summary vsli:raw="Deserializes an object from an XML element in a SOAP message that contains a reference to a &lt;see langword=&quot;multiRef&quot; /&gt; element.">反序列化 SOAP 消息中的 XML 元素的对象，该消息包含对 <see langword="multiRef" /> 元素的引用。</summary>
      <param name="name" vsli:raw="The local name of the element's XML Schema data type.">元素的 XML 架构数据类型的本地名称。</param>
      <param name="ns" vsli:raw="The namespace of the element's XML Schema data type.">元素的 XML 架构数据类型的命名空间。</param>
      <param name="fixupReference" vsli:raw="An output string into which the &lt;see langword=&quot;href&quot; /&gt; attribute value is read.">将 <see langword="href" /> 特性值读入到其中的输出字符串。</param>
      <returns vsli:raw="The deserialized object.">反序列化的对象。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String@)">
      <summary vsli:raw="Deserializes an object from an XML element in a SOAP message that contains a reference to a &lt;see langword=&quot;multiRef&quot; /&gt; element.">反序列化 SOAP 消息中的 XML 元素的对象，该消息包含对 <see langword="multiRef" /> 元素的引用。</summary>
      <param name="fixupReference" vsli:raw="An output string into which the &lt;see langword=&quot;href&quot; /&gt; attribute value is read.">将 <see langword="href" /> 特性值读入到其中的输出字符串。</param>
      <returns vsli:raw="The deserialized object.">反序列化的对象。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable)">
      <summary vsli:raw="Populates an object from its XML representation at the current location of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">根据 <see cref="T:System.Xml.XmlReader" /> 当前位置的对象的 XML 表示形式填充该对象。</summary>
      <param name="serializable" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.IXmlSerializable&quot; /&gt; that corresponds to the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">对应于 <see cref="T:System.Xml.Serialization.IXmlSerializable" /> 当前位置的 <see cref="T:System.Xml.XmlReader" />。</param>
      <returns vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Xml.Serialization.IXmlSerializable&quot; /&gt; interface with its members populated from the location of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">实现 <see cref="T:System.Xml.Serialization.IXmlSerializable" /> 接口的对象，其成员从 <see cref="T:System.Xml.XmlReader" /> 的位置填充。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable,System.Boolean)">
      <summary vsli:raw="This method supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此方法支持 .NET Framework 基础结构，但不适合直接在代码中使用。</summary>
      <param name="serializable" vsli:raw="An IXmlSerializable object that corresponds to the current position of the XMLReader.">对应于 XMLReader 当前位置的 IXmlSerializable 对象。</param>
      <param name="wrappedAny" vsli:raw="Specifies whether the serializable object is wrapped.">指明该可序列化的对象是否为包装的。</param>
      <returns vsli:raw="An object that implements the IXmlSerializable interface with its members populated from the location of the XmlReader.">实现 IXmlSerializable 接口的对象，其成员从 XmlReader 的位置填充。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadString(System.String)">
      <summary vsli:raw="Produces the result of a call to the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadString&quot; /&gt; method appended to the input value.">生成 <see cref="M:System.Xml.XmlReader.ReadString" /> 方法的调用结果，该结果被追加到输入值。</summary>
      <param name="value" vsli:raw="A string to prefix to the result of a call to the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadString&quot; /&gt; method.">作为 <see cref="M:System.Xml.XmlReader.ReadString" /> 方法调用结果的前缀的字符串。</param>
      <returns vsli:raw="The result of call to the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadString&quot; /&gt; method appended to the input value.">
        <see cref="M:System.Xml.XmlReader.ReadString" /> 方法的调用结果，该结果被追加到输入值。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadString(System.String,System.Boolean)">
      <summary vsli:raw="Returns the result of a call to the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadString&quot; /&gt; method of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; class, trimmed of white space if needed, and appended to the input value.">返回 <see cref="M:System.Xml.XmlReader.ReadString" /> 类的 <see cref="T:System.Xml.XmlReader" /> 方法的调用结果，如果需要则移除空白，然后追加到输入值。</summary>
      <param name="value" vsli:raw="A string that will be appended to.">要追加到的字符串。</param>
      <param name="trim" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the result of the read operation should be trimmed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果读取操作的结果应进行修整，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <returns vsli:raw="The result of the read operation appended to the input value.">追加到输入值的读取操作结果。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadTypedNull(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Reads an XML element that allows null values (&lt;see langword=&quot;xsi:nil = 'true'&quot; /&gt;) and returns a generic &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; value.">读取允许空值 (<see langword="xsi:nil = 'true'" />) 的 XML 元素，然后返回一个泛型 <see cref="T:System.Nullable`1" /> 值。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the simple data type for the current location of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlQualifiedName" />，表示 <see cref="T:System.Xml.XmlReader" /> 当前位置的简单数据类型。</param>
      <returns vsli:raw="A generic &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; that represents a null XML value.">一个泛型 <see cref="T:System.Nullable`1" />，表示空的 XML 值。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadTypedPrimitive(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Gets the value of the XML node at which the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is currently positioned.">获取 <see cref="T:System.Xml.XmlReader" /> 当前定位的 XML 节点的值。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the simple data type for the current location of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlQualifiedName" />，表示 <see cref="T:System.Xml.XmlReader" /> 当前位置的简单数据类型。</param>
      <returns vsli:raw="The value of the node as a .NET Framework value type, if the value is a simple XML Schema data type.">如果值是简单 XML 架构数据类型，则为 .NET Framework 值类型形式的节点值。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadXmlDocument(System.Boolean)">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read an XML document root element at its current position.">指示 <see cref="T:System.Xml.XmlReader" /> 在其当前位置读取 XML 文档的根元素。</summary>
      <param name="wrapped" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the method should read content only after reading the element's start element; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果该方法只在读取元素的开始元素之后读取内容，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; that contains the root element that has been read.">
        <see cref="T:System.Xml.XmlDocument" />，包含已读取的根元素。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadXmlNode(System.Boolean)">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read the XML node at its current position.">指示 <see cref="T:System.Xml.XmlReader" /> 在其当前位置读取 XML 节点。</summary>
      <param name="wrapped" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to read content only after reading the element's start element; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果只在读取元素的开始元素之后读取内容，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; that represents the XML node that has been read.">
        <see cref="T:System.Xml.XmlNode" />，表示已读取的 XML 节点。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Referenced(System.Object)">
      <summary vsli:raw="Stores an object to be deserialized from a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; element.">存储要从 SOAP 编码的 <see langword="multiRef" /> 元素反序列化的对象。</summary>
      <param name="o" vsli:raw="The object to be deserialized.">要反序列化的对象。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ResolveDynamicAssembly(System.String)">
      <summary vsli:raw="Gets a dynamically generated assembly by name.">按名称获取动态生成的程序集。</summary>
      <param name="assemblyFullName" vsli:raw="The full name of the assembly.">程序集的全名。</param>
      <returns vsli:raw="A dynamically generated &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt;.">动态生成的 <see cref="T:System.Reflection.Assembly" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ShrinkArray(System.Array,System.Int32,System.Type,System.Boolean)">
      <summary vsli:raw="Ensures that a given array, or a copy, is no larger than a specified length.">确保给定的数组或副本不大于指定的长度。</summary>
      <param name="a" vsli:raw="The array that is being checked.">要检查的数组。</param>
      <param name="length" vsli:raw="The maximum length of the array.">数组的最大长度。</param>
      <param name="elementType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the array's elements.">数组元素的 <see cref="T:System.Type" />。</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;null&quot; /&gt; for the array, if present for the input array, can be returned; otherwise, a new, smaller array.">如果为 <see langword="true" />，则可对输入数组返回 <see langword="null" />；否则，返回一个更小的新数组。</param>
      <returns vsli:raw="The existing &lt;see cref=&quot;T:System.Array&quot; /&gt;, if it is already small enough; otherwise, a new, smaller array that contains the original array's elements up to the size of &lt;paramref name=&quot;length&quot; /&gt;.">如果数组足够小，则为现有的 <see cref="T:System.Array" />；否则为包含原始数组元素的一个更小的新数组，其最大大小为 <paramref name="length" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.Boolean)">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read the string value at its current position and return it as a base-64 byte array.">指示 <see cref="T:System.Xml.XmlReader" /> 读取当前位置的字符串值并以 base-64 字节数组的形式返回该字符串值。</summary>
      <param name="isNull" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to return &lt;see langword=&quot;null&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; to return a base-64 byte array.">如果要返回 <see langword="true" />，则为 <see langword="null" />；如果要返回 base-64 字节数组，则为 <see langword="false" />。</param>
      <returns vsli:raw="A base-64 byte array; otherwise, &lt;see langword=&quot;null&quot; /&gt; if the value of the &lt;paramref name=&quot;isNull&quot; /&gt; parameter is &lt;see langword=&quot;true&quot; /&gt;.">base-64 字节数组；如果 <paramref name="isNull" /> 参数的值为 <see langword="null" />，则为 <see langword="true" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.String)">
      <summary vsli:raw="Produces a base-64 byte array from an input string.">从输入字符串生成一个 base-64 字节数组。</summary>
      <param name="value" vsli:raw="A string to translate into a base-64 byte array.">要转换为 base-64 字节数组的字符串。</param>
      <returns vsli:raw="A base-64 byte array.">base-64 字节数组。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.Boolean)">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read the string value at its current position and return it as a hexadecimal byte array.">指示 <see cref="T:System.Xml.XmlReader" /> 读取其当前位置的字符串值并以十六进制字节数组的形式返回该字符串值。</summary>
      <param name="isNull" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to return &lt;see langword=&quot;null&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; to return a hexadecimal byte array.">如果要返回 <see langword="true" />，则为 <see langword="null" />；如果要返回十六进制字节数组，则为 <see langword="false" />。</param>
      <returns vsli:raw="A hexadecimal byte array; otherwise, &lt;see langword=&quot;null&quot; /&gt; if the value of the &lt;paramref name=&quot;isNull&quot; /&gt; parameter is &lt;see langword=&quot;true&quot; /&gt;.">十六进制字节数组；如果 <paramref name="isNull" /> 参数的值为 <see langword="true" />，则为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.String)">
      <summary vsli:raw="Produces a hexadecimal byte array from an input string.">从输入字符串中生成一个十六进制字节数组。</summary>
      <param name="value" vsli:raw="A string to translate into a hexadecimal byte array.">要转换为十六进制字节数组的字符串。</param>
      <returns vsli:raw="A hexadecimal byte array.">一个十六进制字节数组。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToChar(System.String)">
      <summary vsli:raw="Produces a &lt;see cref=&quot;T:System.Char&quot; /&gt; object from an input string.">从输入字符串生成一个 <see cref="T:System.Char" /> 对象。</summary>
      <param name="value" vsli:raw="A string to translate into a &lt;see cref=&quot;T:System.Char&quot; /&gt; object.">要转换为 <see cref="T:System.Char" /> 对象的字符串。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; object.">一个 <see cref="T:System.Char" /> 对象。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToDate(System.String)">
      <summary vsli:raw="Produces a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object from an input string.">从输入字符串生成一个 <see cref="T:System.DateTime" /> 对象。</summary>
      <param name="value" vsli:raw="A string to translate into a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; class object.">要转换为 <see cref="T:System.DateTime" /> 类对象的字符串。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">一个 <see cref="T:System.DateTime" /> 对象。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToDateTime(System.String)">
      <summary vsli:raw="Produces a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object from an input string.">从输入字符串生成一个 <see cref="T:System.DateTime" /> 对象。</summary>
      <param name="value" vsli:raw="A string to translate into a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">要转换为 <see cref="T:System.DateTime" /> 对象的字符串。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">一个 <see cref="T:System.DateTime" /> 对象。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToEnum(System.String,System.Collections.Hashtable,System.String)">
      <summary vsli:raw="Produces a numeric enumeration value from a string that consists of delimited identifiers that represent constants from the enumerator list.">从由分隔的标识符组成的字符串生成数字枚举值，这些标识符表示枚举器列表中的常数。</summary>
      <param name="value" vsli:raw="A string that consists of delimited identifiers where each identifier represents a constant from the set enumerator list.">一个由分隔的标识符组成的字符串，其中每个标识符都表示已经设置的枚举数列表的一个常数。</param>
      <param name="h" vsli:raw="A &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; that consists of the identifiers as keys and the constants as integral numbers.">由标识符（作为键）和常数（作为整数）组成的 <see cref="T:System.Collections.Hashtable" />。</param>
      <param name="typeName" vsli:raw="The name of the enumeration type.">枚举类型的名称。</param>
      <returns vsli:raw="A long value that consists of the enumeration value as a series of bitwise &lt;see langword=&quot;OR&quot; /&gt; operations.">由枚举值组成的长值，其中枚举值的形式为一系列按位 <see langword="OR" /> 操作。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToTime(System.String)">
      <summary vsli:raw="Produces a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; from a string that represents the time.">从表示时间的字符串生成一个 <see cref="T:System.DateTime" />。</summary>
      <param name="value" vsli:raw="A string to translate into a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">要转换为 <see cref="T:System.DateTime" /> 对象的字符串。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">一个 <see cref="T:System.DateTime" /> 对象。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlName(System.String)">
      <summary vsli:raw="Decodes an XML name.">解码 XML 名称。</summary>
      <param name="value" vsli:raw="An XML name to be decoded.">要解码的 XML 名称。</param>
      <returns vsli:raw="A decoded string.">已解码的字符串。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNCName(System.String)">
      <summary vsli:raw="Decodes an XML name.">解码 XML 名称。</summary>
      <param name="value" vsli:raw="An XML name to be decoded.">要解码的 XML 名称。</param>
      <returns vsli:raw="A decoded string.">已解码的字符串。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNmToken(System.String)">
      <summary vsli:raw="Decodes an XML name.">解码 XML 名称。</summary>
      <param name="value" vsli:raw="An XML name to be decoded.">要解码的 XML 名称。</param>
      <returns vsli:raw="A decoded string.">已解码的字符串。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNmTokens(System.String)">
      <summary vsli:raw="Decodes an XML name.">解码 XML 名称。</summary>
      <param name="value" vsli:raw="An XML name to be decoded.">要解码的 XML 名称。</param>
      <returns vsli:raw="A decoded string.">已解码的字符串。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlQualifiedName(System.String)">
      <summary vsli:raw="Obtains an &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; from a name that may contain a prefix.">从可能包含前缀的名称中获取 <see cref="T:System.Xml.XmlQualifiedName" />。</summary>
      <param name="value" vsli:raw="A name that may contain a prefix.">可能包含前缀的名称。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents a namespace-qualified XML name.">
        <see cref="T:System.Xml.XmlQualifiedName" />，表示命名空间限定的 XML 名称。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownAttribute&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">为 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /> 的当前位置引发 <see cref="T:System.Xml.XmlReader" /> 事件。</summary>
      <param name="o" vsli:raw="An object that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is attempting to deserialize, subsequently accessible through the &lt;see cref=&quot;P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized&quot; /&gt; property.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 尝试反序列化的对象，该对象随后可通过 <see cref="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" /> 属性进行访问。</param>
      <param name="attr" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; that represents the attribute in question.">
        <see cref="T:System.Xml.XmlAttribute" />，表示要考查的特性。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute,System.String)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownAttribute&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">为 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /> 的当前位置引发 <see cref="T:System.Xml.XmlReader" /> 事件。</summary>
      <param name="o" vsli:raw="An object that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is attempting to deserialize, subsequently accessible through the &lt;see cref=&quot;P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized&quot; /&gt; property.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 尝试反序列化的对象，该对象随后可通过 <see cref="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" /> 属性进行访问。</param>
      <param name="attr" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; that represents the attribute in question.">
        <see cref="T:System.Xml.XmlAttribute" />，表示要考查的特性。</param>
      <param name="qnames" vsli:raw="A comma-delimited list of XML qualified names.">以逗号分隔的 XML 限定名列表。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownElement&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">为 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> 的当前位置引发 <see cref="T:System.Xml.XmlReader" /> 事件。</summary>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; that is being deserialized.">要反序列化的 <see cref="T:System.Object" />。</param>
      <param name="elem" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; for which an event is raised.">为其引发事件的 <see cref="T:System.Xml.XmlElement" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement,System.String)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownElement&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">为 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> 的当前位置引发 <see cref="T:System.Xml.XmlReader" /> 事件。</summary>
      <param name="o" vsli:raw="An object that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is attempting to deserialize, subsequently accessible through the &lt;see cref=&quot;P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized&quot; /&gt; property.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 尝试反序列化的对象，该对象随后可通过 <see cref="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" /> 属性进行访问。</param>
      <param name="elem" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; for which an event is raised.">为其引发事件的 <see cref="T:System.Xml.XmlElement" />。</param>
      <param name="qnames" vsli:raw="A comma-delimited list of XML qualified names.">以逗号分隔的 XML 限定名列表。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownNode&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">为 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> 的当前位置引发 <see cref="T:System.Xml.XmlReader" /> 事件。</summary>
      <param name="o" vsli:raw="The object that is being deserialized.">要反序列化的对象。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object,System.String)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownNode&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">为 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> 的当前位置引发 <see cref="T:System.Xml.XmlReader" /> 事件。</summary>
      <param name="o" vsli:raw="The object being deserialized.">正在被反序列化的对象。</param>
      <param name="qnames" vsli:raw="A comma-delimited list of XML qualified names.">以逗号分隔的 XML 限定名列表。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnreferencedObject(System.String,System.Object)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnreferencedObject&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">为 <see cref="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" /> 的当前位置引发 <see cref="T:System.Xml.XmlReader" /> 事件。</summary>
      <param name="id" vsli:raw="A unique string that is used to identify the unreferenced object, subsequently accessible through the &lt;see cref=&quot;P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId&quot; /&gt; property.">用于标识未引用对象的唯一字符串，该字符串随后可通过 <see cref="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId" /> 属性进行访问。</param>
      <param name="o" vsli:raw="An object that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is attempting to deserialize, subsequently accessible through the &lt;see cref=&quot;P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject&quot; /&gt; property.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 尝试反序列化的对象，该对象随后可通过 <see cref="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject" /> 属性进行访问。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationWriteCallback">
      <summary vsli:raw="Delegate that is used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class for serialization of types from SOAP-encoded, non-root XML data.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类为了对 SOAP 编码的非根 XML 数据的类型进行序列化而使用的委托。</summary>
      <param name="o" vsli:raw="The object being serialized.">将序列化的对象。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationWriter">
      <summary vsli:raw="Represents an abstract class used for controlling serialization by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class.">表示抽象类，用于控制由 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类执行的序列化。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.AddWriteCallback(System.Type,System.String,System.String,System.Xml.Serialization.XmlSerializationWriteCallback)">
      <summary vsli:raw="Stores an implementation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriteCallback&quot; /&gt; delegate and the type it applies to, for a later invocation.">存储 <see cref="T:System.Xml.Serialization.XmlSerializationWriteCallback" /> 委托的实现及其应用的类型，以备以后调用。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of objects that are serialized.">被序列化的对象的 <see cref="T:System.Type" />。</param>
      <param name="typeName" vsli:raw="The name of the type of objects that are serialized.">被序列化的对象的类型的名称。</param>
      <param name="typeNs" vsli:raw="The namespace of the type of objects that are serialized.">被序列化的对象的类型的命名空间。</param>
      <param name="callback" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriteCallback&quot; /&gt; delegate.">
        <see cref="T:System.Xml.Serialization.XmlSerializationWriteCallback" /> 委托的实例。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateChoiceIdentifierValueException(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates an unexpected name for an element that adheres to an XML Schema &lt;see langword=&quot;choice&quot; /&gt; element declaration.">创建一个 <see cref="T:System.InvalidOperationException" />，该异常指示符合 XML 架构 <see langword="choice" /> 元素声明的元素具有意外名称。</summary>
      <param name="value" vsli:raw="The name that is not valid.">无效的名称。</param>
      <param name="identifier" vsli:raw="The &lt;see langword=&quot;choice&quot; /&gt; element declaration that the name belongs to.">名称所属的 <see langword="choice" /> 元素声明。</param>
      <param name="name" vsli:raw="The expected local name of an element.">元素需要的本地名称。</param>
      <param name="ns" vsli:raw="The expected namespace of an element.">元素需要的命名空间。</param>
      <returns vsli:raw="The newly created exception.">新创建的异常。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Object)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; which has been invalidly applied to a member; only members that are of type &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;, or derived from &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;, are valid.">创建一个 <see cref="T:System.InvalidOperationException" />，该异常指示 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 无效地应用于某个成员；只有 <see cref="T:System.Xml.XmlNode" /> 类型的成员或从 <see cref="T:System.Xml.XmlNode" /> 派生的成员才可有效应用。</summary>
      <param name="o" vsli:raw="The object that represents the invalid member.">表示无效成员的对象。</param>
      <returns vsli:raw="The newly created exception.">新创建的异常。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Type)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; which has been invalidly applied to a member; only members that are of type &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;, or derived from &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;, are valid.">创建一个 <see cref="T:System.InvalidOperationException" />，该异常指示 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 无效地应用于某个成员；只有 <see cref="T:System.Xml.XmlNode" /> 类型的成员或从 <see cref="T:System.Xml.XmlNode" /> 派生的成员才可有效应用。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that is invalid.">无效的 <see cref="T:System.Type" />。</param>
      <returns vsli:raw="The newly created exception.">新创建的异常。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidChoiceIdentifierValueException(System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates a failure while writing an array where an XML Schema &lt;see langword=&quot;choice&quot; /&gt; element declaration is applied.">创建一个 <see cref="T:System.InvalidOperationException" />，该异常指示在应用 XML 架构 <see langword="choice" /> 元素声明的位置写入数组时操作失败。</summary>
      <param name="type" vsli:raw="The type being serialized.">正在序列化的类型。</param>
      <param name="identifier" vsli:raw="A name for the &lt;see langword=&quot;choice&quot; /&gt; element declaration.">
        <see langword="choice" /> 元素声明的名称。</param>
      <returns vsli:raw="The newly created exception.">新创建的异常。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidEnumValueException(System.Object,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; for an invalid enumeration value.">为一个无效的枚举值创建 <see cref="T:System.InvalidOperationException" />。</summary>
      <param name="value" vsli:raw="An object that represents the invalid enumeration.">表示无效枚举的对象。</param>
      <param name="typeName" vsli:raw="The XML type name.">XML 类型名。</param>
      <returns vsli:raw="The newly created exception.">新创建的异常。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateMismatchChoiceException(System.String,System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that a value for an XML element does not match an enumeration type.">创建一个 <see cref="T:System.InvalidOperationException" />，该异常指示 XML 元素的某个值与枚举类型不匹配。</summary>
      <param name="value" vsli:raw="The value that is not valid.">无效的值。</param>
      <param name="elementName" vsli:raw="The name of the XML element with an invalid value.">具有无效值的 XML 元素的名称。</param>
      <param name="enumValue" vsli:raw="The valid value.">有效值。</param>
      <returns vsli:raw="The newly created exception.">新创建的异常。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownAnyElementException(System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that an XML element that should adhere to the XML Schema &lt;see langword=&quot;any&quot; /&gt; element declaration cannot be processed.">创建一个 <see cref="T:System.InvalidOperationException" />，该异常指示无法处理某个应符合 XML 架构 <see langword="any" /> 元素声明的 XML 元素。</summary>
      <param name="name" vsli:raw="The XML element that cannot be processed.">无法处理的 XML 元素。</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">XML 元素的命名空间。</param>
      <returns vsli:raw="The newly created exception.">新创建的异常。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Object)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that a type being serialized is not being used in a valid manner or is unexpectedly encountered.">创建一个 <see cref="T:System.InvalidOperationException" />，该异常指示被序列化的类型的使用方式无效，或者意外遇到该类型。</summary>
      <param name="o" vsli:raw="The object whose type cannot be serialized.">无法序列化其类型的对象。</param>
      <returns vsli:raw="The newly created exception.">新创建的异常。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Type)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that a type being serialized is not being used in a valid manner or is unexpectedly encountered.">创建一个 <see cref="T:System.InvalidOperationException" />，该异常指示被序列化的类型的使用方式无效，或者意外遇到该类型。</summary>
      <param name="type" vsli:raw="The type that cannot be serialized.">无法序列化的类型。</param>
      <returns vsli:raw="The newly created exception.">新创建的异常。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.EscapeName">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;M:System.Xml.XmlConvert.EncodeName(System.String)&quot; /&gt; method is used to write valid XML.">获取或设置一个值，该值指示 <see cref="M:System.Xml.XmlConvert.EncodeName(System.String)" /> 方法是否用于写入有效的 XML。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)&quot; /&gt; method returns an encoded name; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)" /> 方法返回一个编码名称，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromByteArrayBase64(System.Byte[])">
      <summary vsli:raw="Processes a base-64 byte array.">处理 base-64 字节数组。</summary>
      <param name="value" vsli:raw="A base-64 &lt;see cref=&quot;T:System.Byte&quot; /&gt; array.">base-64 <see cref="T:System.Byte" /> 数组。</param>
      <returns vsli:raw="The same byte array that was passed in as an argument.">作为参数传入的字节数组。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromByteArrayHex(System.Byte[])">
      <summary vsli:raw="Produces a string from an input hexadecimal byte array.">从输入的十六进制字节数组生成一个字符串。</summary>
      <param name="value" vsli:raw="A hexadecimal byte array to translate to a string.">要转换为字符串的十六进制字节数组。</param>
      <returns vsli:raw="The byte array value converted to a string.">转换为字符串的字节数组值。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromChar(System.Char)">
      <summary vsli:raw="Produces a string from an input &lt;see cref=&quot;T:System.Char&quot; /&gt;.">从输入的 <see cref="T:System.Char" /> 生成一个字符串。</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; to translate to a string.">要转换为字符串的 <see cref="T:System.Char" />。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Char&quot; /&gt; value converted to a string.">转换为字符串的 <see cref="T:System.Char" /> 值。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromDate(System.DateTime)">
      <summary vsli:raw="Produces a string from a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">从 <see cref="T:System.DateTime" /> 对象生成一个字符串。</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; to translate to a string.">要转换为字符串的 <see cref="T:System.DateTime" />。</param>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that shows the date but no time.">
        <see cref="T:System.DateTime" /> 的字符串表示形式，该对象显示日期但不显示时间。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromDateTime(System.DateTime)">
      <summary vsli:raw="Produces a string from an input &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">从输入的 <see cref="T:System.DateTime" /> 生成一个字符串。</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; to translate to a string.">要转换为字符串的 <see cref="T:System.DateTime" />。</param>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that shows the date and time.">
        <see cref="T:System.DateTime" /> 的字符串表示形式，该对象显示日期和时间。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[])">
      <summary vsli:raw="Produces a string that consists of delimited identifiers that represent the enumeration members that have been set.">生成一个由分隔的标识符组成的字符串，这些标识符表示已经设置的枚举成员。</summary>
      <param name="value" vsli:raw="The enumeration value as a series of bitwise &lt;see langword=&quot;OR&quot; /&gt; operations.">形式为一系列按位 <see langword="OR" /> 运算的枚举值。</param>
      <param name="values" vsli:raw="The enumeration's name values.">枚举的名称值。</param>
      <param name="ids" vsli:raw="The enumeration's constant values.">枚举的常数值。</param>
      <returns vsli:raw="A string that consists of delimited identifiers, where each represents a member from the set enumerator list.">一个由分隔的标识符组成的字符串，其中每个标识符都表示已经设置的枚举器列表的一个成员。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[],System.String)">
      <summary vsli:raw="Takes a numeric enumeration value and the names and constants from the enumerator list for the enumeration and returns a string that consists of delimited identifiers that represent the enumeration members that have been set.">接受一个数字枚举值以及该枚举的枚举列表中的名称和常数，返回一个由分隔的标识符组成的字符串，这些标识符表示已经设置的枚举成员。</summary>
      <param name="value" vsli:raw="The enumeration value as a series of bitwise &lt;see langword=&quot;OR&quot; /&gt; operations.">形式为一系列按位 <see langword="OR" /> 运算的枚举值。</param>
      <param name="values" vsli:raw="The values of the enumeration.">枚举的值。</param>
      <param name="ids" vsli:raw="The constants of the enumeration.">枚举的常数。</param>
      <param name="typeName" vsli:raw="The name of the type.">类型的名称</param>
      <returns vsli:raw="A string that consists of delimited identifiers, where each item is one of the values set by the bitwise operation.">一个由分隔的标识符组成的字符串，其中每一项都是由按位运算设置的一个值。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromTime(System.DateTime)">
      <summary vsli:raw="Produces a string from a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">从 <see cref="T:System.DateTime" /> 对象生成一个字符串。</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that is translated to a string.">转换为字符串的 <see cref="T:System.DateTime" />。</param>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object that shows the time but no date.">
        <see cref="T:System.DateTime" /> 对象的字符串表示形式，该对象显示时间但不显示日期。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlName(System.String)">
      <summary vsli:raw="Encodes a valid XML name by replacing characters that are not valid with escape sequences.">通过使用转义序列替换无效字符，对一个有效的 XML 名称进行编码。</summary>
      <param name="name" vsli:raw="A string to be used as an XML name.">要用作 XML 名称的字符串。</param>
      <returns vsli:raw="An encoded string.">已编码的字符串。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNCName(System.String)">
      <summary vsli:raw="Encodes a valid XML local name by replacing characters that are not valid with escape sequences.">通过使用转义序列替换无效字符，对一个有效的 XML 本地名称进行编码。</summary>
      <param name="ncName" vsli:raw="A string to be used as a local (unqualified) XML name.">要用作本地（非限定）XML 名称的字符串。</param>
      <returns vsli:raw="An encoded string.">已编码的字符串。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNmToken(System.String)">
      <summary vsli:raw="Encodes an XML name.">对 XML 名称进行编码。</summary>
      <param name="nmToken" vsli:raw="An XML name to be encoded.">要进行编码的 XML 名称。</param>
      <returns vsli:raw="An encoded string.">已编码的字符串。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNmTokens(System.String)">
      <summary vsli:raw="Encodes a space-delimited sequence of XML names into a single XML name.">将以空格分隔的 XML 名称序列编码为单个 XML 名称。</summary>
      <param name="nmTokens" vsli:raw="A space-delimited sequence of XML names to be encoded.">要进行编码的以空格分隔的 XML 名称序列。</param>
      <returns vsli:raw="An encoded string.">已编码的字符串。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Returns an XML qualified name, with invalid characters replaced by escape sequences.">返回一个 XML 限定名，其中无效字符已由转义序列替换。</summary>
      <param name="xmlQualifiedName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the XML to be written.">
        <see cref="T:System.Xml.XmlQualifiedName" />，表示要写入的 XML。</param>
      <returns vsli:raw="An XML qualified name, with invalid characters replaced by escape sequences.">一个 XML 限定名，其中无效字符已由转义序列替换。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName,System.Boolean)">
      <summary vsli:raw="Produces a string that can be written as an XML qualified name, with invalid characters replaced by escape sequences.">生成一个可以写入为 XML 限定名的字符串，其中无效字符已由转义序列替换。</summary>
      <param name="xmlQualifiedName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the XML to be written.">
        <see cref="T:System.Xml.XmlQualifiedName" />，表示要写入的 XML。</param>
      <param name="ignoreEmpty" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to ignore empty spaces in the string; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果忽略字符串中的空格，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <returns vsli:raw="An XML qualified name, with invalid characters replaced by escape sequences.">一个 XML 限定名，其中无效字符已由转义序列替换。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.InitCallbacks">
      <summary vsli:raw="Initializes an instances of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriteCallback&quot; /&gt; delegate to serialize SOAP-encoded XML data.">初始化 <see cref="T:System.Xml.Serialization.XmlSerializationWriteCallback" /> 委托的一个实例，以序列化 SOAP 编码的 XML 数据。</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.Namespaces">
      <summary vsli:raw="Gets or sets a list of XML qualified name objects that contain the namespaces and prefixes used to produce qualified names in XML documents.">获取或设置 XML 限定名对象的列表，这些对象包含用于在 XML 文档中生成限定名的命名空间和前缀。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ArrayList&quot; /&gt; that contains the namespaces and prefix pairs.">包含命名空间和前缀对的 <see cref="T:System.Collections.ArrayList" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.ResolveDynamicAssembly(System.String)">
      <summary vsli:raw="Gets a dynamically generated assembly by name.">按名称获取动态生成的程序集。</summary>
      <param name="assemblyFullName" vsli:raw="The full name of the assembly.">程序集的全名。</param>
      <returns vsli:raw="A dynamically generated assembly.">动态生成的程序集。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.TopLevelElement">
      <summary vsli:raw="Initializes object references only while serializing a SOAP-encoded SOAP message.">仅在序列化 SOAP 编码的 SOAP 消息时初始化对象引用。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.Byte[])">
      <summary vsli:raw="Instructs an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object to write an XML attribute that has no namespace specified for its name.">指示 <see cref="T:System.Xml.XmlWriter" /> 对象写入未为其名称指定命名空间的 XML 属性。</summary>
      <param name="localName" vsli:raw="The local name of the XML attribute.">XML 特性的本地名称。</param>
      <param name="value" vsli:raw="The value of the XML attribute as a byte array.">XML 特性的值，形式为字节数组。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String)">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to write an XML attribute that has no namespace specified for its name.">指示 <see cref="T:System.Xml.XmlWriter" /> 写入未为其名称指定命名空间的 XML 属性。</summary>
      <param name="localName" vsli:raw="The local name of the XML attribute.">XML 特性的本地名称。</param>
      <param name="value" vsli:raw="The value of the XML attribute as a string.">字符串形式的 XML 特性值。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.Byte[])">
      <summary vsli:raw="Instructs an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object to write an XML attribute.">指示 <see cref="T:System.Xml.XmlWriter" /> 对象写入 XML 属性。</summary>
      <param name="localName" vsli:raw="The local name of the XML attribute.">XML 特性的本地名称。</param>
      <param name="ns" vsli:raw="The namespace of the XML attribute.">XML 特性的命名空间。</param>
      <param name="value" vsli:raw="The value of the XML attribute as a byte array.">XML 特性的值，形式为字节数组。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String)">
      <summary vsli:raw="Writes an XML attribute.">写入 XML 属性。</summary>
      <param name="localName" vsli:raw="The local name of the XML attribute.">XML 特性的本地名称。</param>
      <param name="ns" vsli:raw="The namespace of the XML attribute.">XML 特性的命名空间。</param>
      <param name="value" vsli:raw="The value of the XML attribute as a string.">字符串形式的 XML 特性值。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Writes an XML attribute where the namespace prefix is provided manually.">写入 XML 属性，其中命名空间前缀是手动提供的。</summary>
      <param name="prefix" vsli:raw="The namespace prefix to write.">要写入的命名空间前缀。</param>
      <param name="localName" vsli:raw="The local name of the XML attribute.">XML 特性的本地名称。</param>
      <param name="ns" vsli:raw="The namespace represented by the prefix.">前缀所表示的命名空间。</param>
      <param name="value" vsli:raw="The value of the XML attribute as a string.">字符串形式的 XML 特性值。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementEncoded(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)">
      <summary vsli:raw="Writes an XML node object within the body of a named XML element.">在命名 XML 元素体内写入 XML 节点对象。</summary>
      <param name="node" vsli:raw="The XML node to write, possibly a child XML element.">要写入的 XML 节点，可能是一个子 XML 元素。</param>
      <param name="name" vsli:raw="The local name of the parent XML element to write.">要写入的 XML 父元素的本地名称。</param>
      <param name="ns" vsli:raw="The namespace of the parent XML element to write.">要写入的 XML 父元素的命名空间。</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the object to serialize is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若要在要序列化的对象为 <see langword="true" /> 时写入 <see langword="xsi:nil='true'" /> 特性，则为 <see langword="null" />；否则为 <see langword="false" />。</param>
      <param name="any" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the node, if an XML element, adheres to an XML Schema &lt;see langword=&quot;any&quot; /&gt; element declaration; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若要指示节点（如果是 XML 元素）遵守 XML 架构 <see langword="true" /> 元素声明，则为 <see langword="any" />；否则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementLiteral(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)">
      <summary vsli:raw="Instructs an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object to write an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object within the body of a named XML element.">指示 <see cref="T:System.Xml.XmlWriter" /> 对象在命名 XML 元素体内写入 <see cref="T:System.Xml.XmlNode" /> 对象。</summary>
      <param name="node" vsli:raw="The XML node to write, possibly a child XML element.">要写入的 XML 节点，可能是一个子 XML 元素。</param>
      <param name="name" vsli:raw="The local name of the parent XML element to write.">要写入的 XML 父元素的本地名称。</param>
      <param name="ns" vsli:raw="The namespace of the parent XML element to write.">要写入的 XML 父元素的命名空间。</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the object to serialize is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若要在要序列化的对象为 <see langword="true" /> 时写入 <see langword="xsi:nil='true'" /> 特性，则为 <see langword="null" />；否则为 <see langword="false" />。</param>
      <param name="any" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the node, if an XML element, adheres to an XML Schema &lt;see langword=&quot;any&quot; /&gt; element declaration; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若要指示节点（如果是 XML 元素）遵守 XML 架构 <see langword="true" /> 元素声明，则为 <see langword="any" />；否则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified qualified name in its body.">写入一个其主体中具有指定限定名的 XML 元素。</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">XML 元素的本地名称。</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">XML 元素的命名空间。</param>
      <param name="value" vsli:raw="The name to write, using its prefix if namespace-qualified, in the element text.">要在元素文本中写入的名称（如果是命名空间限定的，则使用其前缀）。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified qualified name in its body.">写入一个其主体中具有指定限定名的 XML 元素。</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">XML 元素的本地名称。</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">XML 元素的命名空间。</param>
      <param name="value" vsli:raw="The name to write, using its prefix if namespace-qualified, in the element text.">要在元素文本中写入的名称（如果是命名空间限定的，则使用其前缀）。</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">要写入 <see langword="xsi:type" /> 特性的“XML 架构”数据类型的名称。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified qualified name in its body.">写入一个其主体中具有指定限定名的 XML 元素。</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">XML 元素的本地名称。</param>
      <param name="value" vsli:raw="The name to write, using its prefix if namespace-qualified, in the element text.">要在元素文本中写入的名称（如果是命名空间限定的，则使用其前缀）。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified qualified name in its body.">写入一个其主体中具有指定限定名的 XML 元素。</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">XML 元素的本地名称。</param>
      <param name="value" vsli:raw="The name to write, using its prefix if namespace-qualified, in the element text.">要在元素文本中写入的名称（如果是命名空间限定的，则使用其前缀）。</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">要写入 <see langword="xsi:type" /> 特性的“XML 架构”数据类型的名称。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">写入一个其主体中具有指定值的 XML 元素。</summary>
      <param name="localName" vsli:raw="The local name of the XML element to be written without namespace qualification.">要写入的 XML 元素的本地名称，该名称不具有命名空间限定。</param>
      <param name="value" vsli:raw="The text value of the XML element.">XML 元素的文本值。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">写入一个其主体中具有指定值的 XML 元素。</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">XML 元素的本地名称。</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">XML 元素的命名空间。</param>
      <param name="value" vsli:raw="The text value of the XML element.">XML 元素的文本值。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">写入一个其主体中具有指定值的 XML 元素。</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">XML 元素的本地名称。</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">XML 元素的命名空间。</param>
      <param name="value" vsli:raw="The text value of the XML element.">XML 元素的文本值。</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">要写入 <see langword="xsi:type" /> 特性的“XML 架构”数据类型的名称。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">写入一个其主体中具有指定值的 XML 元素。</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">XML 元素的本地名称。</param>
      <param name="value" vsli:raw="The text value of the XML element.">XML 元素的文本值。</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">要写入 <see langword="xsi:type" /> 特性的“XML 架构”数据类型的名称。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[])">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">写入一个其主体中具有指定值的 XML 元素。</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">XML 元素的本地名称。</param>
      <param name="value" vsli:raw="The text value of the XML element.">XML 元素的文本值。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">写入一个其主体中具有指定值的 XML 元素。</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">XML 元素的本地名称。</param>
      <param name="value" vsli:raw="The text value of the XML element.">XML 元素的文本值。</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">要写入 <see langword="xsi:type" /> 特性的“XML 架构”数据类型的名称。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">写入一个其主体中具有指定值的 XML 元素。</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">XML 元素的本地名称。</param>
      <param name="value" vsli:raw="The text value of the XML element.">XML 元素的文本值。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[])">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">写入一个其主体中具有指定值的 XML 元素。</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">XML 元素的本地名称。</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">XML 元素的命名空间。</param>
      <param name="value" vsli:raw="The text value of the XML element.">XML 元素的文本值。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">写入一个其主体中具有指定值的 XML 元素。</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">XML 元素的本地名称。</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">XML 元素的命名空间。</param>
      <param name="value" vsli:raw="The text value of the XML element.">XML 元素的文本值。</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">要写入 <see langword="xsi:type" /> 特性的“XML 架构”数据类型的名称。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">写入一个其主体中具有指定值的 XML 元素。</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">XML 元素的本地名称。</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">XML 元素的命名空间。</param>
      <param name="value" vsli:raw="The text value of the XML element.">XML 元素的文本值。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">写入一个其主体中具有指定值的 XML 元素。</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">XML 元素的本地名称。</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">XML 元素的命名空间。</param>
      <param name="value" vsli:raw="The text value of the XML element.">XML 元素的文本值。</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">要写入 <see langword="xsi:type" /> 特性的“XML 架构”数据类型的名称。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">写入一个其主体中具有指定值的 XML 元素。</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">XML 元素的本地名称。</param>
      <param name="value" vsli:raw="The text value of the XML element.">XML 元素的文本值。</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">要写入 <see langword="xsi:type" /> 特性的“XML 架构”数据类型的名称。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String)">
      <summary vsli:raw="Writes an XML element whose body is empty.">写入一个其主体为空的 XML 元素。</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">要写入的 XML 元素的本地名称。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String,System.String)">
      <summary vsli:raw="Writes an XML element whose body is empty.">写入一个其主体为空的 XML 元素。</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">要写入的 XML 元素的本地名称。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">要写入的 XML 元素的命名空间。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEndElement">
      <summary vsli:raw="Writes a &lt;see langword=&quot;&amp;lt;closing&amp;gt;&quot; /&gt; element tag.">写入一个 <see langword="&lt;closing&gt;" /> 元素标记。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEndElement(System.Object)">
      <summary vsli:raw="Writes a &lt;see langword=&quot;&amp;lt;closing&amp;gt;&quot; /&gt; element tag.">写入一个 <see langword="&lt;closing&gt;" /> 元素标记。</summary>
      <param name="o" vsli:raw="The object being serialized.">将序列化的对象。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteId(System.Object)">
      <summary vsli:raw="Writes an &lt;see langword=&quot;id&quot; /&gt; attribute that appears in a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; element.">写入一个在 SOAP 编码的 <see langword="id" /> 元素中出现的 <see langword="multiRef" /> 特性。</summary>
      <param name="o" vsli:raw="The object being serialized.">将序列化的对象。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNamespaceDeclarations(System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary vsli:raw="Writes the namespace declaration attributes.">写入该命名空间声明特性。</summary>
      <param name="xmlns" vsli:raw="The XML namespaces to declare.">要声明的 XML 命名空间。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameEncoded(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element whose body contains a valid XML qualified name. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">写入一个其主体包含有效 XML 限定名的 XML 元素。 如果字符串的值是 <see langword="xsi:nil='true'" />，则 <see cref="T:System.Xml.XmlWriter" /> 插入一个 <see langword="null" /> 属性。</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">要写入的 XML 元素的本地名称。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">要写入的 XML 元素的命名空间。</param>
      <param name="value" vsli:raw="The XML qualified name to write in the body of the XML element.">要写入 XML 元素体的 XML 限定名。</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">要写入 <see langword="xsi:type" /> 特性的“XML 架构”数据类型的名称。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameLiteral(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element whose body contains a valid XML qualified name. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">写入一个其主体包含有效 XML 限定名的 XML 元素。 如果字符串的值是 <see langword="xsi:nil='true'" />，则 <see cref="T:System.Xml.XmlWriter" /> 插入一个 <see langword="null" /> 属性。</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">要写入的 XML 元素的本地名称。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">要写入的 XML 元素的命名空间。</param>
      <param name="value" vsli:raw="The XML qualified name to write in the body of the XML element.">要写入 XML 元素体的 XML 限定名。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncoded(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element that contains a string as the body. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">写入一个 XML 元素，该元素包含一个作为主体的字符串。 如果字符串的值是 <see langword="xsi:nil='true'" />，则 <see cref="T:System.Xml.XmlWriter" /> 插入一个 <see langword="null" /> 属性。</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">要写入的 XML 元素的本地名称。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">要写入的 XML 元素的命名空间。</param>
      <param name="value" vsli:raw="The string to write in the body of the XML element.">要写入 XML 元素体的字符串。</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">要写入 <see langword="xsi:type" /> 特性的“XML 架构”数据类型的名称。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes a byte array as the body of an XML element. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">写入一个作为 XML 元素主体的字节数组。 如果字符串的值是 <see langword="xsi:nil='true'" />，则 <see cref="T:System.Xml.XmlWriter" /> 插入一个 <see langword="null" /> 属性。</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">要写入的 XML 元素的本地名称。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">要写入的 XML 元素的命名空间。</param>
      <param name="value" vsli:raw="The byte array to write in the body of the XML element.">要写入 XML 元素体的字节数组。</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">要写入 <see langword="xsi:type" /> 特性的“XML 架构”数据类型的名称。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element that contains a string as the body. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">写入一个 XML 元素，该元素包含一个作为主体的字符串。 如果字符串的值是 <see langword="xsi:nil='true'" />，则 <see cref="T:System.Xml.XmlWriter" /> 插入一个 <see langword="null" /> 属性。</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">要写入的 XML 元素的本地名称。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">要写入的 XML 元素的命名空间。</param>
      <param name="value" vsli:raw="The string to write in the body of the XML element.">要写入 XML 元素体的字符串。</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">要写入 <see langword="xsi:type" /> 特性的“XML 架构”数据类型的名称。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteral(System.String,System.String,System.String)">
      <summary vsli:raw="Writes an XML element that contains a string as the body. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">写入一个 XML 元素，该元素包含一个作为主体的字符串。 如果字符串的值是 <see langword="xsi:nil='true'" />，则 <see cref="T:System.Xml.XmlWriter" /> 插入一个 <see langword="null" /> 属性。</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">要写入的 XML 元素的本地名称。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">要写入的 XML 元素的命名空间。</param>
      <param name="value" vsli:raw="The string to write in the body of the XML element.">要写入 XML 元素体的字符串。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.Byte[])">
      <summary vsli:raw="Writes a byte array as the body of an XML element. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">写入一个作为 XML 元素主体的字节数组。 如果字符串的值是 <see langword="xsi:nil='true'" />，则 <see cref="T:System.Xml.XmlWriter" /> 插入一个 <see langword="null" /> 属性。</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">要写入的 XML 元素的本地名称。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">要写入的 XML 元素的命名空间。</param>
      <param name="value" vsli:raw="The byte array to write in the body of the XML element.">要写入 XML 元素体的字节数组。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.String)">
      <summary vsli:raw="Writes an XML element that contains a string as the body. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts a &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">写入一个 XML 元素，该元素包含一个作为主体的字符串。 如果字符串的值是 <see langword="xsi:nil='true'" />，则 <see cref="T:System.Xml.XmlWriter" /> 插入一个 <see langword="null" /> 属性。</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">要写入的 XML 元素的本地名称。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">要写入的 XML 元素的命名空间。</param>
      <param name="value" vsli:raw="The string to write in the body of the XML element.">要写入 XML 元素体的字符串。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String)">
      <summary vsli:raw="Writes an XML element with an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute.">写入一个具有 <see langword="xsi:nil='true'" /> 属性的 XML 元素。</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">要写入的 XML 元素的本地名称。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String,System.String)">
      <summary vsli:raw="Writes an XML element with an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute.">写入一个具有 <see langword="xsi:nil='true'" /> 属性的 XML 元素。</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">要写入的 XML 元素的本地名称。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">要写入的 XML 元素的命名空间。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String)">
      <summary vsli:raw="Writes an XML element with an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute.">写入一个具有 <see langword="xsi:nil='true'" /> 属性的 XML 元素。</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">要写入的 XML 元素的本地名称。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String,System.String)">
      <summary vsli:raw="Writes an XML element with an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute.">写入一个具有 <see langword="xsi:nil='true'" /> 属性的 XML 元素。</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">要写入的 XML 元素的本地名称。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">要写入的 XML 元素的命名空间。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object)">
      <summary vsli:raw="Writes a SOAP message XML element that can contain a reference to a &lt;see langword=&quot;&amp;lt;multiRef&amp;gt;&quot; /&gt; XML element for a given object.">写入一个 SOAP 消息 XML 元素，它可以包含对给定对象的 <see langword="&lt;multiRef&gt;" /> XML 元素的引用。</summary>
      <param name="n" vsli:raw="The local name of the XML element to write.">要写入的 XML 元素的本地名称。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">要写入的 XML 元素的命名空间。</param>
      <param name="o" vsli:raw="The object being serialized either in the current XML element or a &lt;see langword=&quot;multiRef&quot; /&gt; element that is referenced by the current element.">当前 XML 元素或当前元素所引用的 <see langword="multiRef" /> 元素中被序列化的对象。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type)">
      <summary vsli:raw="Writes a SOAP message XML element that can contain a reference to a &lt;see langword=&quot;&amp;lt;multiRef&amp;gt;&quot; /&gt; XML element for a given object.">写入一个 SOAP 消息 XML 元素，它可以包含对给定对象的 <see langword="&lt;multiRef&gt;" /> XML 元素的引用。</summary>
      <param name="n" vsli:raw="The local name of the XML element to write.">要写入的 XML 元素的本地名称。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">要写入的 XML 元素的命名空间。</param>
      <param name="o" vsli:raw="The object being serialized either in the current XML element or a &lt;see langword=&quot;multiRef&quot; /&gt; element that referenced by the current element.">当前 XML 元素或当前元素所引用的 <see langword="multiRef" /> 元素中被序列化的对象。</param>
      <param name="ambientType" vsli:raw="The type stored in the object's type mapping (as opposed to the object's type found directly through the &lt;see langword=&quot;typeof&quot; /&gt; operation).">存储在对象的类型映射中的类型（与通过 <see langword="typeof" /> 操作直接找到的对象的类型相对）。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean)">
      <summary vsli:raw="Writes a SOAP message XML element that can contain a reference to a &lt;see langword=&quot;&amp;lt;multiRef&amp;gt;&quot; /&gt; XML element for a given object.">写入一个 SOAP 消息 XML 元素，它可以包含对给定对象的 <see langword="&lt;multiRef&gt;" /> XML 元素的引用。</summary>
      <param name="n" vsli:raw="The local name of the XML element to write.">要写入的 XML 元素的本地名称。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">要写入的 XML 元素的命名空间。</param>
      <param name="o" vsli:raw="The object being serialized either in the current XML element or a &lt;see langword=&quot;multiRef&quot; /&gt; element that is referenced by the current element.">当前 XML 元素或当前元素所引用的 <see langword="multiRef" /> 元素中被序列化的对象。</param>
      <param name="ambientType" vsli:raw="The type stored in the object's type mapping (as opposed to the object's type found directly through the &lt;see langword=&quot;typeof&quot; /&gt; operation).">存储在对象的类型映射中的类型（与通过 <see langword="typeof" /> 操作直接找到的对象的类型相对）。</param>
      <param name="suppressReference" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to serialize the object directly into the XML element rather than make the element reference another element that contains the data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果直接将对象序列化为 XML 元素，而不是使该元素引用另一个包含该数据的元素，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean,System.Boolean)">
      <summary vsli:raw="Writes a SOAP message XML element that can contain a reference to a &lt;see langword=&quot;multiRef&quot; /&gt; XML element for a given object.">写入一个 SOAP 消息 XML 元素，它可以包含对给定对象的 <see langword="multiRef" /> XML 元素的引用。</summary>
      <param name="n" vsli:raw="The local name of the XML element to write.">要写入的 XML 元素的本地名称。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">要写入的 XML 元素的命名空间。</param>
      <param name="o" vsli:raw="The object being serialized either in the current XML element or a &lt;see langword=&quot;multiRef&quot; /&gt; element that referenced by the current element.">当前 XML 元素或当前元素所引用的 <see langword="multiRef" /> 元素中被序列化的对象。</param>
      <param name="ambientType" vsli:raw="The type stored in the object's type mapping (as opposed to the object's type found directly through the &lt;see langword=&quot;typeof&quot; /&gt; operation).">存储在对象的类型映射中的类型（与通过 <see langword="typeof" /> 操作直接找到的对象的类型相对）。</param>
      <param name="suppressReference" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to serialize the object directly into the XML element rather than make the element reference another element that contains the data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果直接将对象序列化为 XML 元素，而不是使该元素引用另一个包含该数据的元素，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the object to serialize is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若要在要序列化的对象为 <see langword="true" /> 时写入 <see langword="xsi:nil='true'" /> 特性，则为 <see langword="null" />；否则为 <see langword="false" />。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.Writer">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that is being used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt;.">获取或设置由 <see cref="T:System.Xml.XmlWriter" /> 使用的自定义 <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used by the class instance.">由类实例使用的 <see cref="T:System.Xml.XmlWriter" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencedElements">
      <summary vsli:raw="Serializes objects into SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; XML elements in a SOAP message.">将对象序列化为 SOAP 编码的 SOAP 消息 <see langword="multiRef" /> XML 元素。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object)">
      <summary vsli:raw="Writes a SOAP message XML element that contains a reference to a &lt;see langword=&quot;multiRef&quot; /&gt; element for a given object.">写入一个 SOAP 消息 XML 元素，该元素包含对给定对象的 <see langword="multiRef" /> 元素的引用。</summary>
      <param name="n" vsli:raw="The local name of the referencing element being written.">正被写入的引用元素的本地名称。</param>
      <param name="ns" vsli:raw="The namespace of the referencing element being written.">正被写入的引用元素的命名空间。</param>
      <param name="o" vsli:raw="The object being serialized.">将序列化的对象。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object,System.Boolean)">
      <summary vsli:raw="Writes a SOAP message XML element that contains a reference to a &lt;see langword=&quot;multiRef&quot; /&gt; element for a given object.">写入一个 SOAP 消息 XML 元素，该元素包含对给定对象的 <see langword="multiRef" /> 元素的引用。</summary>
      <param name="n" vsli:raw="The local name of the referencing element being written.">正被写入的引用元素的本地名称。</param>
      <param name="ns" vsli:raw="The namespace of the referencing element being written.">正被写入的引用元素的命名空间。</param>
      <param name="o" vsli:raw="The object being serialized.">将序列化的对象。</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the object to serialize is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若要在要序列化的对象为 <see langword="true" /> 时写入 <see langword="xsi:nil='true'" /> 特性，则为 <see langword="null" />；否则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteRpcResult(System.String,System.String)">
      <summary vsli:raw="Writes a SOAP 1.2 RPC result element with a specified qualified name in its body.">使用指定的限定名将 SOAP 1.2 RPC 结果元素写入其体中。</summary>
      <param name="name" vsli:raw="The local name of the result body.">结果体的本地名称。</param>
      <param name="ns" vsli:raw="The namespace of the result body.">结果体的命名空间。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean)">
      <summary vsli:raw="Writes an object that uses custom XML formatting as an XML element.">写入一个对象，该对象使用自定义 XML 格式作为 XML 元素。</summary>
      <param name="serializable" vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Xml.Serialization.IXmlSerializable&quot; /&gt; interface that uses custom XML formatting.">实现 <see cref="T:System.Xml.Serialization.IXmlSerializable" /> 接口的对象，该接口使用自定义 XML 格式。</param>
      <param name="name" vsli:raw="The local name of the XML element to write.">要写入的 XML 元素的本地名称。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">要写入的 XML 元素的命名空间。</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the &lt;see cref=&quot;T:System.Xml.Serialization.IXmlSerializable&quot; /&gt; class object is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Xml.Serialization.IXmlSerializable" /> 类对象是 <see langword="true" /> 时写入 <see langword="xsi:nil='true'" /> 特性，则为 <see langword="null" />；否则，为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean,System.Boolean)">
      <summary vsli:raw="Instructs &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; to write an object that uses custom XML formatting as an XML element.">指示 <see cref="T:System.Xml.XmlNode" /> 写入一个对象，该对象使用自定义 XML 格式作为 XML 元素。</summary>
      <param name="serializable" vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Xml.Serialization.IXmlSerializable&quot; /&gt; interface that uses custom XML formatting.">实现 <see cref="T:System.Xml.Serialization.IXmlSerializable" /> 接口的对象，该接口使用自定义 XML 格式。</param>
      <param name="name" vsli:raw="The local name of the XML element to write.">要写入的 XML 元素的本地名称。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">要写入的 XML 元素的命名空间。</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the &lt;see cref=&quot;T:System.Xml.Serialization.IXmlSerializable&quot; /&gt; object is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果为 <see langword="true" />，则在 <see cref="T:System.Xml.Serialization.IXmlSerializable" /> 对象是 <see langword="xsi:nil='true'" /> 时写入 <see langword="null" /> 特性，则为 ；否则，为<see langword="false" />。</param>
      <param name="wrapped" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to ignore writing the opening element tag; otherwise, &lt;see langword=&quot;false&quot; /&gt; to write the opening element tag.">如果忽略写入开始元素标记，则为 <see langword="true" />；如果写入开始元素标记，则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartDocument">
      <summary vsli:raw="Writes the XML declaration if the writer is positioned at the start of an XML document.">如果编写器位于 XML 文档的开头，则写入 XML 声明。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String)">
      <summary vsli:raw="Writes an opening element tag, including any attributes.">写入一个包括任何属性的开始元素标记。</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">要写入的 XML 元素的本地名称。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String)">
      <summary vsli:raw="Writes an opening element tag, including any attributes.">写入一个包括任何属性的开始元素标记。</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">要写入的 XML 元素的本地名称。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">要写入的 XML 元素的命名空间。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Writes an opening element tag, including any attributes.">写入一个包括任何属性的开始元素标记。</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">要写入的 XML 元素的本地名称。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">要写入的 XML 元素的命名空间。</param>
      <param name="writePrefixed" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write the element name with a prefix if none is available for the specified namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若要在指定的命名空间无可用元素名称时写入带有前缀的元素名称，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object)">
      <summary vsli:raw="Writes an opening element tag, including any attributes.">写入一个包括任何属性的开始元素标记。</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">要写入的 XML 元素的本地名称。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">要写入的 XML 元素的命名空间。</param>
      <param name="o" vsli:raw="The object being serialized as an XML element.">被序列化为 XML 元素的对象。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean)">
      <summary vsli:raw="Writes an opening element tag, including any attributes.">写入一个包括任何属性的开始元素标记。</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">要写入的 XML 元素的本地名称。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">要写入的 XML 元素的命名空间。</param>
      <param name="o" vsli:raw="The object being serialized as an XML element.">被序列化为 XML 元素的对象。</param>
      <param name="writePrefixed" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write the element name with a prefix if none is available for the specified namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若要在指定的命名空间无可用元素名称时写入带有前缀的元素名称，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary vsli:raw="Writes an opening element tag, including any attributes.">写入一个包括任何属性的开始元素标记。</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">要写入的 XML 元素的本地名称。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">要写入的 XML 元素的命名空间。</param>
      <param name="o" vsli:raw="The object being serialized as an XML element.">被序列化为 XML 元素的对象。</param>
      <param name="writePrefixed" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write the element name with a prefix if none is available for the specified namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若要在指定的命名空间无可用元素名称时写入带有前缀的元素名称，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <param name="xmlns" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; class that contains prefix and namespace pairs to be used in the generated XML.">
        <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> 类的实例，包含要在生成的 XML 中使用的前缀和命名空间对。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteTypedPrimitive(System.String,System.String,System.Object,System.Boolean)">
      <summary vsli:raw="Writes an XML element whose text body is a value of a simple XML Schema data type.">写入一个 XML 元素，其文本正文是一个简单 XML 架构数据类型的值。</summary>
      <param name="name" vsli:raw="The local name of the element to write.">要写入的元素的本地名称。</param>
      <param name="ns" vsli:raw="The namespace of the element to write.">要写入的元素的命名空间。</param>
      <param name="o" vsli:raw="The object to be serialized in the element body.">要序列化到元素体中的对象。</param>
      <param name="xsiType" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the XML element explicitly specifies the text value's type using the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 XML 元素使用 <see langword="true" /> 特性显式指定文本值的类型，则为 <see langword="xsi:type" />；否则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.Byte[])">
      <summary vsli:raw="Writes a base-64 byte array.">写入 base-64 字节数组。</summary>
      <param name="value" vsli:raw="The byte array to write.">要写入的字节数组。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.String)">
      <summary vsli:raw="Writes a specified string value.">写入指定的字符串值。</summary>
      <param name="value" vsli:raw="The value of the string to write.">要写入的字符串的值。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode)">
      <summary vsli:raw="Writes the specified &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; as an XML attribute.">将指定的 <see cref="T:System.Xml.XmlNode" /> 写入为一个 XML 特性。</summary>
      <param name="node" vsli:raw="The XML node to write.">要编写的 XML 名称。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode,System.Object)">
      <summary vsli:raw="Writes the specified &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object as an XML attribute.">将指定的 <see cref="T:System.Xml.XmlNode" /> 对象写入为一个 XML 特性。</summary>
      <param name="node" vsli:raw="The XML node to write.">要编写的 XML 名称。</param>
      <param name="container" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; object (or &lt;see langword=&quot;null&quot; /&gt;) used to generate a qualified name value for an &lt;see langword=&quot;arrayType&quot; /&gt; attribute from the Web Services Description Language (WSDL) namespace (&quot;http://schemas.xmlsoap.org/wsdl/&quot;).">一个 <see cref="T:System.Xml.Schema.XmlSchemaObject" /> 对象（或 <see langword="null" />），用于为 Web Services 描述语言 (WSDL) 命名空间 ("http://schemas.xmlsoap.org/wsdl/") 中的 <see langword="arrayType" /> 属性生成限定名值。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXsiType(System.String,System.String)">
      <summary vsli:raw="Writes an &lt;see langword=&quot;xsi:type&quot; /&gt; attribute for an XML element that is being serialized into a document.">为要序列化为文档的 XML 元素写入一个 <see langword="xsi:type" /> 属性。</summary>
      <param name="name" vsli:raw="The local name of an XML Schema data type.">XML 架构数据类型的本地名称。</param>
      <param name="ns" vsli:raw="The namespace of an XML Schema data type.">XML 架构数据类型的命名空间。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializer">
      <summary vsli:raw="Serializes and deserializes objects into and from XML documents. The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; enables you to control how objects are encoded into XML.">将对象序列化到 XML 文档中和从 XML 文档中反序列化对象。 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 使您得以控制如何将对象编码到 XML 中。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and deserialize XML documents into objects of the specified type.">初始化 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类的新实例，该类可以将指定类型的对象序列化为 XML 文档，也可以将 XML 文档反序列化为指定类型的对象。</summary>
      <param name="type" vsli:raw="The type of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">此 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 可序列化的对象的类型。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and deserialize XML documents into objects of the specified type. Specifies the default namespace for all the XML elements.">初始化 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类的新实例，该类可以将指定类型的对象序列化为 XML 文档，也可以将 XML 文档反序列化为指定类型的对象。 指定所有 XML 元素的默认命名空间。</summary>
      <param name="type" vsli:raw="The type of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">此 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 可序列化的对象的类型。</param>
      <param name="defaultNamespace" vsli:raw="The default namespace to use for all the XML elements.">用于所有 XML 元素的默认命名空间。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and deserialize XML documents into object of a specified type. If a property or field returns an array, the &lt;paramref name=&quot;extraTypes&quot; /&gt; parameter specifies objects that can be inserted into the array.">初始化 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类的新实例，该类可以将指定类型的对象序列化为 XML 文档，也可以将 XML 文档反序列化为指定类型的对象。 如果属性或字段返回一个数组，则 <paramref name="extraTypes" /> 参数指定可插入到该数组的对象。</summary>
      <param name="type" vsli:raw="The type of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">此 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 可序列化的对象的类型。</param>
      <param name="extraTypes" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; array of additional object types to serialize.">要序列化的其他对象类型的 <see cref="T:System.Type" /> 数组。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and deserialize XML documents into objects of the specified type. Each object to be serialized can itself contain instances of classes, which this overload can override with other classes.">初始化 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类的新实例，该类可以将指定类型的对象序列化为 XML 文档，也可以将 XML 文档反序列化为指定类型的对象。 要序列化的每个对象本身可包含类的实例，此重载可使用其他类重写这些实例。</summary>
      <param name="type" vsli:raw="The type of the object to serialize.">要序列化的对象的类型。</param>
      <param name="overrides" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt;.">一个 <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of type &lt;see cref=&quot;T:System.Object&quot; /&gt; into XML document instances, and deserialize XML document instances into objects of type &lt;see cref=&quot;T:System.Object&quot; /&gt;. Each object to be serialized can itself contain instances of classes, which this overload overrides with other classes. This overload also specifies the default namespace for all the XML elements and the class to use as the XML root element.">初始化 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类的新实例，该类可将 <see cref="T:System.Object" /> 类型的对象序列化为 XML 文档实例，并可将 XML 文档实例反序列化为 <see cref="T:System.Object" /> 类型的对象。 要序列化的每个对象本身可包含类的实例，此重载可使用其他类重写这些实例。 此重载还指定所有 XML 元素的默认命名空间和用作 XML 根元素的类。</summary>
      <param name="type" vsli:raw="The type of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">此 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 可序列化的对象的类型。</param>
      <param name="overrides" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt; that extends or overrides the behavior of the class specified in the &lt;paramref name=&quot;type&quot; /&gt; parameter.">一个 <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />，它扩展或重写 <paramref name="type" /> 参数中指定类的行为。</param>
      <param name="extraTypes" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; array of additional object types to serialize.">要序列化的其他对象类型的 <see cref="T:System.Type" /> 数组。</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that defines the XML root element properties.">定义 XML 根元素属性的 <see cref="T:System.Xml.Serialization.XmlRootAttribute" />。</param>
      <param name="defaultNamespace" vsli:raw="The default namespace of all XML elements in the XML document.">XML 文档中所有 XML 元素的默认命名空间。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of type &lt;see cref=&quot;T:System.Object&quot; /&gt; into XML document instances, and deserialize XML document instances into objects of type &lt;see cref=&quot;T:System.Object&quot; /&gt;. Each object to be serialized can itself contain instances of classes, which this overload overrides with other classes. This overload also specifies the default namespace for all the XML elements and the class to use as the XML root element.">初始化 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类的新实例，该类可将 <see cref="T:System.Object" /> 类型的对象序列化为 XML 文档实例，并可将 XML 文档实例反序列化为 <see cref="T:System.Object" /> 类型的对象。 要序列化的每个对象本身可包含类的实例，此重载可使用其他类重写这些实例。 此重载还指定所有 XML 元素的默认命名空间和用作 XML 根元素的类。</summary>
      <param name="type" vsli:raw="The type of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">此 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 可序列化的对象的类型。</param>
      <param name="overrides" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt; that extends or overrides the behavior of the class specified in the &lt;paramref name=&quot;type&quot; /&gt; parameter.">一个 <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />，它扩展或重写 <paramref name="type" /> 参数中指定类的行为。</param>
      <param name="extraTypes" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; array of additional object types to serialize.">要序列化的其他对象类型的 <see cref="T:System.Type" /> 数组。</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that defines the XML root element properties.">定义 XML 根元素属性的 <see cref="T:System.Xml.Serialization.XmlRootAttribute" />。</param>
      <param name="defaultNamespace" vsli:raw="The default namespace of all XML elements in the XML document.">XML 文档中所有 XML 元素的默认命名空间。</param>
      <param name="location" vsli:raw="The location of the types.">该类型的位置。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and deserialize an XML document into object of the specified type. It also specifies the class to use as the XML root element.">初始化 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类的新实例，该类可以将指定类型的对象序列化为 XML 文档，也可以将 XML 文档反序列化为指定类型的对象。 还可以指定作为 XML 根元素使用的类。</summary>
      <param name="type" vsli:raw="The type of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">此 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 可序列化的对象的类型。</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that represents the XML root element.">表示 XML 根元素的 <see cref="T:System.Xml.Serialization.XmlRootAttribute" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Xml.Serialization.XmlTypeMapping)">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class using an object that maps one type to another.">使用将一个类型映射到另一个类型的对象来初始化 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类的实例。</summary>
      <param name="xmlTypeMapping" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; that maps one type to another.">将一种类型映射到另一种类型的 <see cref="T:System.Xml.Serialization.XmlTypeMapping" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can deserialize a specified XML document.">获取一个值，该值指示此 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 是否可以反序列化指定的 XML 文档。</summary>
      <param name="xmlReader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that points to the document to deserialize.">指向要反序列化的文档的 <see cref="T:System.Xml.XmlReader" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can deserialize the object that the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; points to; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果此 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 可以反序列化 <see cref="T:System.Xml.XmlReader" /> 指向的对象，则为 <see langword="true" />，否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CreateReader">
      <summary vsli:raw="Returns an object used to read the XML document to be serialized.">返回一个对象，该对象用于读取要进行序列化的 XML 文档。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt; used to read the XML document.">用于读取 XML 文档的 <see cref="T:System.Xml.Serialization.XmlSerializationReader" />。</returns>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to access the method when the method is not overridden in a descendant class.">当未在子类中重写该方法时，为访问该方法进行的任何尝试。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CreateWriter">
      <summary vsli:raw="When overridden in a derived class, returns a writer used to serialize the object.">当在派生类中重写时，返回用于序列化对象的编写器。</summary>
      <returns vsli:raw="An instance that implements the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt; class.">实现 <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> 类的实例。</returns>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to access the method when the method is not overridden in a descendant class.">当未在子类中重写该方法时，为访问该方法进行的任何尝试。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)">
      <summary vsli:raw="Deserializes the XML document contained by the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">反序列化指定 <see cref="T:System.IO.Stream" /> 包含的 XML 文档。</summary>
      <param name="stream" vsli:raw="The &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; that contains the XML document to deserialize.">包含要反序列化的 XML 文档的 <see cref="T:System.IO.Stream" />。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; being deserialized.">正被反序列化的 <see cref="T:System.Object" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)">
      <summary vsli:raw="Deserializes the XML document contained by the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">反序列化指定 <see cref="T:System.IO.TextReader" /> 包含的 XML 文档。</summary>
      <param name="textReader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; that contains the XML document to deserialize.">包含要反序列化的 XML 文档的 <see cref="T:System.IO.TextReader" />。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; being deserialized.">正被反序列化的 <see cref="T:System.Object" />。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during deserialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">反序列化期间发生错误。 使用 <see cref="P:System.Exception.InnerException" /> 属性时可使用原始异常。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.Serialization.XmlSerializationReader)">
      <summary vsli:raw="Deserializes the XML document contained by the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt;.">反序列化指定 <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> 包含的 XML 文档。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt; that contains the XML document to deserialize.">包含要反序列化的 XML 文档的 <see cref="T:System.Xml.Serialization.XmlSerializationReader" />。</param>
      <returns vsli:raw="The deserialized object.">反序列化的对象。</returns>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to access the method when the method is not overridden in a descendant class.">当未在子类中重写该方法时，为访问该方法进行的任何尝试。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)">
      <summary vsli:raw="Deserializes the XML document contained by the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">反序列化指定 <see cref="T:System.Xml.XmlReader" /> 包含的 XML 文档。</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that contains the XML document to deserialize.">包含要反序列化的 XML 文档的 <see cref="T:System.Xml.XmlReader" />。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; being deserialized.">正被反序列化的 <see cref="T:System.Object" />。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during deserialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">反序列化期间发生错误。 使用 <see cref="P:System.Exception.InnerException" /> 属性时可使用原始异常。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String)">
      <summary vsli:raw="Deserializes the XML document contained by the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and encoding style.">反序列化指定 <see cref="T:System.Xml.XmlReader" /> 和编码样式包含的 XML 文档。</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that contains the XML document to deserialize.">包含要反序列化的 XML 文档的 <see cref="T:System.Xml.XmlReader" />。</param>
      <param name="encodingStyle" vsli:raw="The encoding style of the serialized XML.">序列化的 XML 的编码样式。</param>
      <returns vsli:raw="The deserialized object.">反序列化的对象。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during deserialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">反序列化期间发生错误。 使用 <see cref="P:System.Exception.InnerException" /> 属性时可使用原始异常。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String,System.Xml.Serialization.XmlDeserializationEvents)">
      <summary vsli:raw="Deserializes the object using the data contained by the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">使用指定的 <see cref="T:System.Xml.XmlReader" /> 包含的数据反序列化该对象。</summary>
      <param name="xmlReader" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; class used to read the document.">
        <see cref="T:System.Xml.XmlReader" /> 类的实例，用于读取文档。</param>
      <param name="encodingStyle" vsli:raw="The encoding used.">使用的编码方式。</param>
      <param name="events" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlDeserializationEvents&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlDeserializationEvents" /> 类的实例。</param>
      <returns vsli:raw="The object being deserialized.">正在被反序列化的对象。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.Xml.Serialization.XmlDeserializationEvents)">
      <summary vsli:raw="Deserializes an XML document contained by the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and allows the overriding of events that occur during deserialization.">反序列化一个由指定的 <see cref="T:System.Xml.XmlReader" /> 包含的 XML 文档，并允许重写反序列化过程中发生的事件。</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that contains the document to deserialize.">包含要反序列化的文档的 <see cref="T:System.Xml.XmlReader" />。</param>
      <param name="events" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlDeserializationEvents&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlDeserializationEvents" /> 类的实例。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; being deserialized.">正被反序列化的 <see cref="T:System.Object" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[])">
      <summary vsli:raw="Returns an array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; objects created from an array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; objects.">返回从 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 对象的数组创建的 <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> 对象的数组。</summary>
      <param name="mappings" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; that maps one type to another.">将一种类型映射到另一种类型的 <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> 的数组。</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; objects.">一个 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 对象数组。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Type)">
      <summary vsli:raw="Returns an instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class from the specified mappings.">从指定的映射返回 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类的实例。</summary>
      <param name="mappings" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlMapping&quot; /&gt; objects.">一个 <see cref="T:System.Xml.Serialization.XmlMapping" /> 对象数组。</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the deserialized object.">反序列化的对象的 <see cref="T:System.Type" />。</param>
      <returns vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类的实例。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromTypes(System.Type[])">
      <summary vsli:raw="Returns an array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; objects created from an array of types.">返回从类型数组创建的 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 对象的数组。</summary>
      <param name="types" vsli:raw="An array of &lt;see cref=&quot;T:System.Type&quot; /&gt; objects.">一个 <see cref="T:System.Type" /> 对象数组。</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; objects.">一个 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 对象数组。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type)">
      <summary vsli:raw="Returns the name of the assembly that contains one or more versions of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; especially created to serialize or deserialize the specified type.">返回程序集的名称，该程序集包含专门为序列化或反序列化特定类型创建的 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 的一个或多个版本。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; you are deserializing.">正在进行反序列化的 <see cref="T:System.Type" />。</param>
      <returns vsli:raw="The name of the assembly that contains an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; for the type.">包含该类型的 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 的程序集的名称。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type,System.String)">
      <summary vsli:raw="Returns the name of the assembly that contains the serializer for the specified type in the specified namespace.">返回程序集的名称，该程序集包含指定命名空间中指定类型的序列化程序。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; you are interested in.">您关注的 <see cref="T:System.Type" />。</param>
      <param name="defaultNamespace" vsli:raw="The namespace of the type.">类型的命名空间。</param>
      <returns vsli:raw="The name of the assembly that contains specially built serializers.">程序集的名称，该程序集包含专门生成的序列化程序。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">使用指定的 <see cref="T:System.Object" /> 序列化指定的 <see cref="T:System.IO.Stream" /> 并将 XML 文档写入文件。</summary>
      <param name="stream" vsli:raw="The &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; used to write the XML document.">用于编写 XML 文档的 <see cref="T:System.IO.Stream" />。</param>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">要序列化的 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during serialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">序列化期间发生错误。 使用 <see cref="P:System.Exception.InnerException" /> 属性时可使用原始异常。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; that references the specified namespaces.">使用引用指定命名空间的指定 <see cref="T:System.IO.Stream" /> 序列化指定的 <see cref="T:System.Object" /> 并将 XML 文档写入文件。</summary>
      <param name="stream" vsli:raw="The &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; used to write the XML document.">用于编写 XML 文档的 <see cref="T:System.IO.Stream" />。</param>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">要序列化的 <see cref="T:System.Object" />。</param>
      <param name="namespaces" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; referenced by the object.">该对象所引用的 <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during serialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">序列化期间发生错误。 使用 <see cref="P:System.Exception.InnerException" /> 属性时可使用原始异常。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">使用指定的 <see cref="T:System.Object" /> 序列化指定的 <see cref="T:System.IO.TextWriter" /> 并将 XML 文档写入文件。</summary>
      <param name="textWriter" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; used to write the XML document.">用于编写 XML 文档的 <see cref="T:System.IO.TextWriter" />。</param>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">要序列化的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; and references the specified namespaces.">使用指定的 <see cref="T:System.Object" /> 和指定命名空间序列化指定的 <see cref="T:System.IO.TextWriter" /> 并将 XML 文档写入文件。</summary>
      <param name="textWriter" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; used to write the XML document.">用于编写 XML 文档的 <see cref="T:System.IO.TextWriter" />。</param>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">要序列化的 <see cref="T:System.Object" />。</param>
      <param name="namespaces" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; that contains namespaces for the generated XML document.">包含生成的 XML 文档的命名空间的 <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during serialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">序列化期间发生错误。 使用 <see cref="P:System.Exception.InnerException" /> 属性时可使用原始异常。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.Serialization.XmlSerializationWriter)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt;.">使用指定的 <see cref="T:System.Object" /> 序列化指定的 <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> 并将 XML 文档写入文件。</summary>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">要序列化的 <see cref="T:System.Object" />。</param>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt; used to write the XML document.">用于编写 XML 文档的 <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />。</param>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to access the method when the method is not overridden in a descendant class.">当未在子类中重写该方法时，为访问该方法进行的任何尝试。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">使用指定的 <see cref="T:System.Object" /> 序列化指定的 <see cref="T:System.Xml.XmlWriter" /> 并将 XML 文档写入文件。</summary>
      <param name="xmlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document.">用于编写 XML 文档的 <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">要序列化的 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during serialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">序列化期间发生错误。 使用 <see cref="P:System.Exception.InnerException" /> 属性时可使用原始异常。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; and references the specified namespaces.">使用指定的 <see cref="T:System.Object" /> 和指定命名空间序列化指定的 <see cref="T:System.Xml.XmlWriter" /> 并将 XML 文档写入文件。</summary>
      <param name="xmlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document.">用于编写 XML 文档的 <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">要序列化的 <see cref="T:System.Object" />。</param>
      <param name="namespaces" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; referenced by the object.">该对象所引用的 <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during serialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">序列化期间发生错误。 使用 <see cref="P:System.Exception.InnerException" /> 属性时可使用原始异常。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String)">
      <summary vsli:raw="Serializes the specified object and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; and references the specified namespaces and encoding style.">使用指定的 <see cref="T:System.Xml.XmlWriter" /> 和指定命名空间及编码样式序列化指定对象并将 XML 文档写入文件。</summary>
      <param name="xmlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document.">用于编写 XML 文档的 <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="o" vsli:raw="The object to serialize.">要序列化的对象。</param>
      <param name="namespaces" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; referenced by the object.">该对象所引用的 <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />。</param>
      <param name="encodingStyle" vsli:raw="The encoding style of the serialized XML.">序列化的 XML 的编码样式。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during serialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">序列化期间发生错误。 使用 <see cref="P:System.Exception.InnerException" /> 属性时可使用原始异常。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String,System.String)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;, XML namespaces, and encoding.">使用指定的 <see cref="T:System.Object" />、XML 命名空间和编码序列化指定的 <see cref="T:System.Xml.XmlWriter" /> 并将 XML 文档写入文件。</summary>
      <param name="xmlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document.">用于编写 XML 文档的 <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="o" vsli:raw="The object to serialize.">要序列化的对象。</param>
      <param name="namespaces" vsli:raw="An instance of the &lt;see langword=&quot;XmlSerializerNamespaces&quot; /&gt; that contains namespaces and prefixes to use.">
        <see langword="XmlSerializerNamespaces" /> 的实例，其中包含要使用的命名空间和前缀。</param>
      <param name="encodingStyle" vsli:raw="The encoding used in the document.">该文档中使用的编码。</param>
      <param name="id" vsli:raw="For SOAP encoded messages, the base used to generate id attributes.">对于 SOAP 编码消息，这是用于生成 id 特性的基。</param>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; encounters an XML attribute of unknown type during deserialization.">当 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 在反序列化过程中遇到未知类型的 XML 特性时发生。</summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownElement">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; encounters an XML element of unknown type during deserialization.">当 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 在反序列化过程中遇到未知类型的 XML 元素时发生。</summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownNode">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; encounters an XML node of unknown type during deserialization.">当 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 在反序列化过程中遇到未知类型的 XML 节点时发生。</summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject">
      <summary vsli:raw="Occurs during deserialization of a SOAP-encoded XML stream, when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; encounters a recognized type that is not used or is unreferenced.">在反序列化 SOAP 编码的 XML 流的过程中发生，此时 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 遇到未使用（或未引用）的识别类型。</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute">
      <summary vsli:raw="Applied to a Web service client proxy, enables you to specify an assembly that contains custom-made serializers.">应用于 Web 服务客户端代理，可用来指定包含自定义序列化程序的程序集。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerAssemblyAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerAssemblyAttribute&quot; /&gt; class with the specified assembly name.">用指定的程序集名称初始化 <see cref="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" /> 类的新实例。</summary>
      <param name="assemblyName" vsli:raw="The simple, unencrypted name of the assembly.">程序集的未加密的简单名称。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerAssemblyAttribute&quot; /&gt; class with the specified assembly name and location of the assembly.">用指定的程序集名称和程序集位置初始化 <see cref="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" /> 类的新实例。</summary>
      <param name="assemblyName" vsli:raw="The simple, unencrypted name of the assembly.">程序集的未加密的简单名称。</param>
      <param name="codeBase" vsli:raw="A string that is the URL location of the assembly.">一个字符串，它是程序集的 URL 位置。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerAssemblyAttribute.AssemblyName">
      <summary vsli:raw="Gets or sets the name of the assembly that contains serializers for a specific set of types.">获取或设置程序集的名称，该程序集包含一组特定类型的序列化程序。</summary>
      <returns vsli:raw="The simple, unencrypted name of the assembly.">程序集的未加密的简单名称。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerAssemblyAttribute.CodeBase">
      <summary vsli:raw="Gets or sets the location of the assembly that contains the serializers.">获取或设置包含序列化程序的程序集的位置。</summary>
      <returns vsli:raw="A location, such as a path or URI, that points to the assembly.">指向程序集的位置，如路径或 URI。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerFactory">
      <summary vsli:raw="Creates typed versions of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; for more efficient serialization.">创建 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 的类型化版本，以使序列化更为有效。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerFactory&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.XmlSerializerFactory" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that is used to serialize the specified type.">返回 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 的一个派生类，用于对指定类型进行序列化。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to serialize.">要序列化的 <see cref="T:System.Type" />。</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that is specifically created to serialize the specified type.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 的一个派生类，专为对指定类型进行序列化而创建。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.String)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that is used to serialize the specified type and namespace.">返回 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 的一个派生类，用于对指定类型和命名空间进行序列化。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to serialize.">要序列化的 <see cref="T:System.Type" />。</param>
      <param name="defaultNamespace" vsli:raw="The default namespace to use for all the XML elements.">用于所有 XML 元素的默认命名空间。</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that is specifically created to serialize the specified type.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 的一个派生类，专为对指定类型进行序列化而创建。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Type[])">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that is used to serialize the specified type. If a property or field returns an array, the &lt;paramref name=&quot;extraTypes&quot; /&gt; parameter specifies objects that can be inserted into the array.">返回 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 的一个派生类，用于对指定类型进行序列化。 如果属性或字段返回一个数组，则 <paramref name="extraTypes" /> 参数指定可插入到该数组的对象。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to serialize.">要序列化的 <see cref="T:System.Type" />。</param>
      <param name="extraTypes" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; array of additional object types to serialize.">要序列化的其他对象类型的 <see cref="T:System.Type" /> 数组。</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">派生 <see cref="T:System.Xml.Serialization.XmlSerializer" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and vice versa. Each object to be serialized can itself contain instances of classes, which this overload can override with other classes.">返回一个 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 派生类，该派生类可以将指定类型的对象序列化为 XML 文档，反之亦然。 要序列化的每个对象本身可包含类的实例，此重载可使用其他类重写这些实例。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to serialize.">要序列化的 <see cref="T:System.Type" />。</param>
      <param name="overrides" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt; that contains fields that override the default serialization behavior.">一个包含重写默认序列化行为的字段的 <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />。</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">派生 <see cref="T:System.Xml.Serialization.XmlSerializer" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML document instances, and vice versa. Each object to be serialized can itself contain instances of classes, which this overload can override with other classes. This overload also specifies the default namespace for all the XML elements, and the class to use as the XML root element.">返回 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类的一个派生类，该派生类可以将指定类型的对象序列化为 XML 文档实例，反之亦然。 要序列化的每个对象本身可包含类的实例，此重载可使用其他类重写这些实例。 此重载还指定所有 XML 元素的默认命名空间和用作 XML 根元素的类。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to serialize.">要序列化的 <see cref="T:System.Type" />。</param>
      <param name="overrides" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt; that contains fields that override the default serialization behavior.">一个包含重写默认序列化行为的字段的 <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />。</param>
      <param name="extraTypes" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; array of additional object types to serialize.">要序列化的其他对象类型的 <see cref="T:System.Type" /> 数组。</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that represents the XML root element.">表示 XML 根元素的 <see cref="T:System.Xml.Serialization.XmlRootAttribute" />。</param>
      <param name="defaultNamespace" vsli:raw="The default namespace of all XML elements in the XML document.">XML 文档中所有 XML 元素的默认命名空间。</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">派生 <see cref="T:System.Xml.Serialization.XmlSerializer" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML document instances, and vice versa. Each object to be serialized can itself contain instances of classes, which this overload can override with other classes. This overload also specifies the default namespace for all the XML elements, and the class to use as the XML root element.">返回 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类的一个派生类，该派生类可以将指定类型的对象序列化为 XML 文档实例，反之亦然。 要序列化的每个对象本身可包含类的实例，此重载可使用其他类重写这些实例。 此重载还指定所有 XML 元素的默认命名空间和用作 XML 根元素的类。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">此 <see cref="T:System.Type" /> 可序列化的对象的 <see cref="T:System.Xml.Serialization.XmlSerializer" />。</param>
      <param name="overrides" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt; that extends or overrides the behavior of the class specified in the type parameter.">一个 <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />，它扩展或重写 type 参数中指定类的行为。</param>
      <param name="extraTypes" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; array of additional object types to serialize.">要序列化的其他对象类型的 <see cref="T:System.Type" /> 数组。</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that defines the XML root element properties.">定义 XML 根元素属性的 <see cref="T:System.Xml.Serialization.XmlRootAttribute" />。</param>
      <param name="defaultNamespace" vsli:raw="The default namespace of all XML elements in the XML document.">XML 文档中所有 XML 元素的默认命名空间。</param>
      <param name="location" vsli:raw="The path that specifies the location of the types.">用于指定类型位置的路径。</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">派生 <see cref="T:System.Xml.Serialization.XmlSerializer" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and vice versa. Specifies the object that represents the XML root element.">返回一个 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 派生类，该派生类可以将指定类型的对象序列化为 XML 文档，反之亦然。 指定用于表示 XML 根元素的对象。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to serialize.">要序列化的 <see cref="T:System.Type" />。</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that represents the XML root element.">表示 XML 根元素的 <see cref="T:System.Xml.Serialization.XmlRootAttribute" />。</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">派生 <see cref="T:System.Xml.Serialization.XmlSerializer" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Xml.Serialization.XmlTypeMapping)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class using an object that maps one type to another.">使用将一个类型映射到另一个类型的对象，返回 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 的一个派生类。</summary>
      <param name="xmlTypeMapping" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; that maps one type to another.">将一种类型映射到另一种类型的 <see cref="T:System.Xml.Serialization.XmlTypeMapping" />。</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that is specifically created to serialize the mapped type.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 的一个派生类，专为对映射类型进行序列化而创建。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerImplementation">
      <summary vsli:raw="Defines the reader, writer, and methods for pre-generated, typed serializers.">为预生成的类型化序列化程序定义读取器、编写器和方法。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerImplementation&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.XmlSerializerImplementation" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.CanSerialize(System.Type)">
      <summary vsli:raw="Gets a value that determines whether a type can be serialized.">获取一个值，该值确定某一类型是否可进行序列化。</summary>
      <param name="type" vsli:raw="The type to be serialized.">要序列化的类型。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the type can be serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果类型可进行序列化，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.GetSerializer(System.Type)">
      <summary vsli:raw="Returns a serializer for the specified type.">返回指定类型的序列化程序。</summary>
      <param name="type" vsli:raw="The type to be serialized.">要序列化的类型。</param>
      <returns vsli:raw="An instance of a type derived from the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class.">从 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类派生的类型的实例。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.Reader">
      <summary vsli:raw="Gets the XML reader object that is used by the serializer.">获取序列化程序所使用的 XML 读取器对象。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt; that is used to read an XML document or data stream.">用于读取 XML 文档或数据流的 <see cref="T:System.Xml.Serialization.XmlSerializationReader" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.ReadMethods">
      <summary vsli:raw="Gets the collection of methods that is used to read a data stream.">获取用于读取数据流的方法的集合。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; that contains the methods.">包含方法的 <see cref="T:System.Collections.Hashtable" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.TypedSerializers">
      <summary vsli:raw="Gets the collection of typed serializers that is found in the assembly.">获取程序集中的类型化序列化程序的集合。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; that contains the typed serializers.">包含类型化序列化程序的 <see cref="T:System.Collections.Hashtable" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.WriteMethods">
      <summary vsli:raw="Gets the collection of methods that is used to write to a data stream.">获取用于写入数据流的方法的集合。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; that contains the methods.">包含方法的 <see cref="T:System.Collections.Hashtable" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.Writer">
      <summary vsli:raw="Gets the XML writer object for the serializer.">获取序列化程序的 XML 编写器对象。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt; that is used to write to an XML data stream or document.">用于写入到 XML 数据流或文档的 <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerVersionAttribute">
      <summary vsli:raw="Signifies that the code was generated by the serialization infrastructure and can be reused for increased performance, when this attribute is applied to an assembly.">表示代码是由序列化基础结构生成的，向程序集应用此特性时，可重复使用以提高性能。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerVersionAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerVersionAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.XmlSerializerVersionAttribute" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerVersionAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerVersionAttribute&quot; /&gt; class for the specified type.">为指定类型初始化 <see cref="T:System.Xml.Serialization.XmlSerializerVersionAttribute" /> 类的新实例。</summary>
      <param name="type" vsli:raw="The type that is being serialized.">正在进行串行化的类型。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Namespace">
      <summary vsli:raw="Gets or sets the common language runtime (CLR) namespace of the assembly.">获取或设置程序集的公共语言运行时 (CLR) 命名空间。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the common language runtime (CLR) namespace of the assembly.">一个 <see cref="T:System.String" />，包含程序集的公共语言运行时 (CLR) 命名空间。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.ParentAssemblyId">
      <summary vsli:raw="Gets or sets the identity of the parent assembly.">获取或设置父程序集的标识。</summary>
      <returns vsli:raw="The version of the parent assembly.">父程序集的版本。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Type">
      <summary vsli:raw="Gets or sets the type that the serializer operates on.">获取或设置序列化程序所操作的类型。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to be serialized.">要序列化的 <see cref="T:System.Type" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Version">
      <summary vsli:raw="Gets or sets the assembly's version number.">获取或设置程序集的版本号。</summary>
      <returns vsli:raw="The version of the assembly.">该程序集的版本。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlTypeAttribute">
      <summary vsli:raw="Controls the XML schema that is generated when the attribute target is serialized by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">控制当属性目标由 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化时生成的 XML 架构。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTypeAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTypeAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeAttribute&quot; /&gt; class and specifies the name of the XML type.">初始化 <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> 类的新实例，并指定 XML 类型的名称。</summary>
      <param name="typeName" vsli:raw="The name of the XML type that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates when it serializes the class instance (and recognizes when it deserializes the class instance).">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化类实例时生成（和在反序列化类实例时识别）的 XML 类型的名称。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.AnonymousType">
      <summary vsli:raw="Gets or sets a value that determines whether the resulting schema type is an XSD anonymous type.">获取或设置一个值，该值确定生成的构架类型是否为 XSD 匿名类型。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the resulting schema type is an XSD anonymous type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果结果架构类型为 XSD 匿名类型，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.IncludeInSchema">
      <summary vsli:raw="Gets or sets a value that indicates whether to include the type in XML schema documents.">获取或设置一个值，该值指示是否要在 XML 架构文档中包含该类型。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to include the type in XML schema documents; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若要将此类型包括到 XML 架构文档中，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.Namespace">
      <summary vsli:raw="Gets or sets the namespace of the XML type.">获取或设置 XML 类型的命名空间。</summary>
      <returns vsli:raw="The namespace of the XML type.">XML 类型的命名空间。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.TypeName">
      <summary vsli:raw="Gets or sets the name of the XML type.">获取或设置 XML 类型的名称。</summary>
      <returns vsli:raw="The name of the XML type.">XML 类型的名称。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlTypeMapping">
      <summary vsli:raw="Contains a mapping of one type to another.">包含从一种类型到另一种类型的映射。</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.TypeFullName">
      <summary vsli:raw="The fully qualified type name that includes the namespace (or namespaces) and type.">包含命名空间和类型的完全限定类型名。</summary>
      <returns vsli:raw="The fully qualified type name.">完全限定的类型名。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.TypeName">
      <summary vsli:raw="Gets the type name of the mapped object.">获取所映射对象的类型名。</summary>
      <returns vsli:raw="The type name of the mapped object.">所映射对象的类型名。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.XsdTypeName">
      <summary vsli:raw="Gets the XML element name of the mapped object.">获取所映射对象的 XML 元素名称。</summary>
      <returns vsli:raw="The XML element name of the mapped object. The default is the class name of the object.">所映射对象的 XML 元素名称。 默认值为对象的类名称。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.XsdTypeNamespace">
      <summary vsli:raw="Gets the XML namespace of the mapped object.">获取所映射对象的 XML 命名空间。</summary>
      <returns vsli:raw="The XML namespace of the mapped object. The default is an empty string (&quot;&quot;).">所映射对象的 XML 命名空间。 默认值为空字符串("")。</returns>
    </member>
  </members>
</doc>