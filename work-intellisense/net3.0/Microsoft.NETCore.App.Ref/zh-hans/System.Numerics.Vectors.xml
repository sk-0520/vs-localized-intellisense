<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Numerics.Vectors</name>
  </assembly>
  <members>
    <member name="T:System.Numerics.Matrix3x2">
      <summary vsli:raw="Represents a 3x2 matrix.">表示 3x2 矩阵。</summary>
    </member>
    <member name="M:System.Numerics.Matrix3x2.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a 3x2 matrix from the specified components.">从指定分量创建 3x2 矩阵。</summary>
      <param name="m11" vsli:raw="The value to assign to the first element in the first row.">要分配给第一行中的第一个元素的值。</param>
      <param name="m12" vsli:raw="The value to assign to the second element in the first row.">要分配给第一行中的第二个元素的值。</param>
      <param name="m21" vsli:raw="The value to assign to the first element in the second row.">要分配给第二行中的第一个元素的值。</param>
      <param name="m22" vsli:raw="The value to assign to the second element in the second row.">要分配给第二行中的第二个元素的值。</param>
      <param name="m31" vsli:raw="The value to assign to the first element in the third row.">要分配给第三行中的第一个元素的值。</param>
      <param name="m32" vsli:raw="The value to assign to the second element in the third row.">要分配给第三行中的第二个元素的值。</param>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Add(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Adds each element in one matrix with its corresponding element in a second matrix.">将一个矩阵中的每个元素与第二个矩阵中的对应元素相加。</summary>
      <param name="value1" vsli:raw="The first matrix.">第一个矩阵。</param>
      <param name="value2" vsli:raw="The second matrix.">第二个矩阵。</param>
      <returns vsli:raw="The matrix that contains the summed values of &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt;.">包含 <paramref name="value1" /> 和 <paramref name="value2" /> 的总和值的矩阵。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateRotation(System.Single)">
      <summary vsli:raw="Creates a rotation matrix using the given rotation in radians.">使用给定的旋转（以弧度表示）创建旋转矩阵。</summary>
      <param name="radians" vsli:raw="The amount of rotation, in radians.">以弧度表示的旋转量。</param>
      <returns vsli:raw="The rotation matrix.">旋转矩阵。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateRotation(System.Single,System.Numerics.Vector2)">
      <summary vsli:raw="Creates a rotation matrix using the specified rotation in radians and a center point.">使用指定旋转（以弧度表示）和中心点创建旋转矩阵。</summary>
      <param name="radians" vsli:raw="The amount of rotation, in radians.">以弧度表示的旋转量。</param>
      <param name="centerPoint" vsli:raw="The center point.">中心点。</param>
      <returns vsli:raw="The rotation matrix.">旋转矩阵。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateScale(System.Numerics.Vector2)">
      <summary vsli:raw="Creates a scaling matrix from the specified vector scale.">从指定向量比例创建缩放矩阵。</summary>
      <param name="scales" vsli:raw="The scale to use.">要使用的比例。</param>
      <returns vsli:raw="The scaling matrix.">缩放矩阵。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateScale(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Creates a scaling matrix from the specified vector scale with an offset from the specified center point.">使用相对于指定中心点的偏移量从指定向量比例创建缩放矩阵。</summary>
      <param name="scales" vsli:raw="The scale to use.">要使用的比例。</param>
      <param name="centerPoint" vsli:raw="The center offset.">中心偏移量。</param>
      <returns vsli:raw="The scaling matrix.">缩放矩阵。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateScale(System.Single)">
      <summary vsli:raw="Creates a scaling matrix that scales uniformly with the given scale.">创建使用给定比例统一缩放的缩放矩阵。</summary>
      <param name="scale" vsli:raw="The uniform scale to use.">要使用的统一比例。</param>
      <returns vsli:raw="The scaling matrix.">缩放矩阵。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateScale(System.Single,System.Numerics.Vector2)">
      <summary vsli:raw="Creates a scaling matrix that scales uniformly with the specified scale with an offset from the specified center.">使用相对于指定中心的偏移量，创建通过指定比例统一缩放的缩放矩阵。</summary>
      <param name="scale" vsli:raw="The uniform scale to use.">要使用的统一比例。</param>
      <param name="centerPoint" vsli:raw="The center offset.">中心偏移量。</param>
      <returns vsli:raw="The scaling matrix.">缩放矩阵。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateScale(System.Single,System.Single)">
      <summary vsli:raw="Creates a scaling matrix from the specified X and Y components.">从指定 X 和 Y 分量创建缩放矩阵。</summary>
      <param name="xScale" vsli:raw="The value to scale by on the X axis.">作为 X 轴上的缩放量的值。</param>
      <param name="yScale" vsli:raw="The value to scale by on the Y axis.">作为 Y 轴上的缩放量的值。</param>
      <returns vsli:raw="The scaling matrix.">缩放矩阵。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateScale(System.Single,System.Single,System.Numerics.Vector2)">
      <summary vsli:raw="Creates a scaling matrix that is offset by a given center point.">创建按给定中心点偏移的缩放矩阵。</summary>
      <param name="xScale" vsli:raw="The value to scale by on the X axis.">作为 X 轴上的缩放量的值。</param>
      <param name="yScale" vsli:raw="The value to scale by on the Y axis.">作为 Y 轴上的缩放量的值。</param>
      <param name="centerPoint" vsli:raw="The center point.">中心点。</param>
      <returns vsli:raw="The scaling matrix.">缩放矩阵。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateSkew(System.Single,System.Single)">
      <summary vsli:raw="Creates a skew matrix from the specified angles in radians.">从指定角度（以弧度表示）创建斜矩阵。</summary>
      <param name="radiansX" vsli:raw="The X angle, in radians.">X 角度（以弧度表示）。</param>
      <param name="radiansY" vsli:raw="The Y angle, in radians.">Y 角度（以弧度表示）。</param>
      <returns vsli:raw="The skew matrix.">斜矩阵。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateSkew(System.Single,System.Single,System.Numerics.Vector2)">
      <summary vsli:raw="Creates a skew matrix from the specified angles in radians and a center point.">从指定角度（以弧度表示）和中心点创建斜矩阵。</summary>
      <param name="radiansX" vsli:raw="The X angle, in radians.">X 角度（以弧度表示）。</param>
      <param name="radiansY" vsli:raw="The Y angle, in radians.">Y 角度（以弧度表示）。</param>
      <param name="centerPoint" vsli:raw="The center point.">中心点。</param>
      <returns vsli:raw="The skew matrix.">斜矩阵。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateTranslation(System.Numerics.Vector2)">
      <summary vsli:raw="Creates a translation matrix from the specified 2-dimensional vector.">从指定二维向量创建平移矩阵。</summary>
      <param name="position" vsli:raw="The translation position.">平移矩阵。</param>
      <returns vsli:raw="The translation matrix.">平移矩阵。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateTranslation(System.Single,System.Single)">
      <summary vsli:raw="Creates a translation matrix from the specified X and Y components.">从指定 X 和 Y 分量创建平移矩阵。</summary>
      <param name="xPosition" vsli:raw="The X position.">X 位置。</param>
      <param name="yPosition" vsli:raw="The Y position.">Y 位置。</param>
      <returns vsli:raw="The translation matrix.">平移矩阵。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Equals(System.Numerics.Matrix3x2)">
      <summary vsli:raw="Returns a value that indicates whether this instance and another 3x2 matrix are equal.">返回一个值，该值指示此实例是否与另一个 3x2 矩阵相等。</summary>
      <param name="other" vsli:raw="The other matrix.">另一个矩阵。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two matrices are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果两个矩阵相等，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance and a specified object are equal.">返回一个值，该值指示此实例是否与指定对象相等。</summary>
      <param name="obj" vsli:raw="The object to compare with the current instance.">要与当前实例进行比较的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;obj&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, the method returns &lt;see langword=&quot;false&quot; /&gt;.">如果当前实例与 <paramref name="obj" /> 相等，则为 <see langword="true" />；否则为 <see langword="false" />。 如果 <paramref name="obj" /> 为 <see langword="null" />，则此方法返回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.GetDeterminant">
      <summary vsli:raw="Calculates the determinant for this matrix.">计算此矩阵的行列式。</summary>
      <returns vsli:raw="The determinant.">行列式。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">返回此实例的哈希代码。</summary>
      <returns vsli:raw="The hash code.">哈希代码。</returns>
    </member>
    <member name="P:System.Numerics.Matrix3x2.Identity">
      <summary vsli:raw="Gets the multiplicative identity matrix.">获取乘法单位矩阵。</summary>
      <returns vsli:raw="The multiplicative identify matrix.">乘法单位矩阵。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Invert(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2@)">
      <summary vsli:raw="Inverts the specified matrix. The return value indicates whether the operation succeeded.">对指定矩阵求逆。 返回值指示操作是否成功。</summary>
      <param name="matrix" vsli:raw="The matrix to invert.">要求逆的矩阵。</param>
      <param name="result" vsli:raw="When this method returns, contains the inverted matrix if the operation succeeded.">此方法返回时，如果操作成功，则包含逆矩阵。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;matrix&quot; /&gt; was converted successfully; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="matrix" /> 成功转换，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Numerics.Matrix3x2.IsIdentity">
      <summary vsli:raw="Indicates whether the current matrix is the identity matrix.">指示当前矩阵是否为单位矩阵。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current matrix is the identity matrix; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果当前矩阵为单位矩阵，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Lerp(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2,System.Single)">
      <summary vsli:raw="Performs a linear interpolation from one matrix to a second matrix based on a value that specifies the weighting of the second matrix.">基于指定第二个矩阵的权重的值，从一个矩阵向第二个矩阵执行线性内插。</summary>
      <param name="matrix1" vsli:raw="The first matrix.">第一个矩阵。</param>
      <param name="matrix2" vsli:raw="The second matrix.">第二个矩阵。</param>
      <param name="amount" vsli:raw="The relative weighting of &lt;paramref name=&quot;matrix2&quot; /&gt;.">
        <paramref name="matrix2" /> 的相对权重。</param>
      <returns vsli:raw="The interpolated matrix.">内插的矩阵。</returns>
    </member>
    <member name="F:System.Numerics.Matrix3x2.M11">
      <summary vsli:raw="The first element of the first row.">第一行的第一个元素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix3x2.M12">
      <summary vsli:raw="The second element of the first row.">第一行的第二个元素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix3x2.M21">
      <summary vsli:raw="The first element of the second row.">第二行的第一个元素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix3x2.M22">
      <summary vsli:raw="The second element of the second row.">第二行的第二个元素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix3x2.M31">
      <summary vsli:raw="The first element of the third row.">第三行的第一个元素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix3x2.M32">
      <summary vsli:raw="The second element of the third row.">第三行的第二个元素。</summary>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Multiply(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Returns the matrix that results from multiplying two matrices together.">返回将两个矩阵相乘得到的矩阵。</summary>
      <param name="value1" vsli:raw="The first matrix.">第一个矩阵。</param>
      <param name="value2" vsli:raw="The second matrix.">第二个矩阵。</param>
      <returns vsli:raw="The product matrix.">乘积矩阵。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Multiply(System.Numerics.Matrix3x2,System.Single)">
      <summary vsli:raw="Returns the matrix that results from scaling all the elements of a specified matrix by a scalar factor.">返回按标量系数缩放指定矩阵的所有元素后得到的矩阵。</summary>
      <param name="value1" vsli:raw="The matrix to scale.">要缩放的矩阵。</param>
      <param name="value2" vsli:raw="The scaling value to use.">要使用的缩放值。</param>
      <returns vsli:raw="The scaled matrix.">缩放后的矩阵。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Negate(System.Numerics.Matrix3x2)">
      <summary vsli:raw="Negates the specified matrix by multiplying all its values by -1.">通过将其所有值乘以 -1，对指定矩阵求反。</summary>
      <param name="value" vsli:raw="The matrix to negate.">要求反的矩阵。</param>
      <returns vsli:raw="The negated matrix.">求反后的矩阵。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.op_Addition(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Adds each element in one matrix with its corresponding element in a second matrix.">将一个矩阵中的每个元素与第二个矩阵中的对应元素相加。</summary>
      <param name="value1" vsli:raw="The first matrix.">第一个矩阵。</param>
      <param name="value2" vsli:raw="The second matrix.">第二个矩阵。</param>
      <returns vsli:raw="The matrix that contains the summed values.">包含总和值的矩阵。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.op_Equality(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Returns a value that indicates whether the specified matrices are equal.">返回一个值，该值指示指定矩阵是否相等。</summary>
      <param name="value1" vsli:raw="The first matrix to compare.">要比较的第一个矩阵。</param>
      <param name="value2" vsli:raw="The second matrix to compare.">要比较的第二个矩阵。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="value1" /> 和 <paramref name="value2" /> 相等，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.op_Inequality(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Returns a value that indicates whether the specified matrices are not equal.">返回一个值，该值指示指定矩阵是否不相等。</summary>
      <param name="value1" vsli:raw="The first matrix to compare.">要比较的第一个矩阵。</param>
      <param name="value2" vsli:raw="The second matrix to compare.">要比较的第二个矩阵。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="value1" /> 和 <paramref name="value2" /> 不相等，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.op_Multiply(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Returns the matrix that results from multiplying two matrices together.">返回将两个矩阵相乘得到的矩阵。</summary>
      <param name="value1" vsli:raw="The first matrix.">第一个矩阵。</param>
      <param name="value2" vsli:raw="The second matrix.">第二个矩阵。</param>
      <returns vsli:raw="The product matrix.">乘积矩阵。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.op_Multiply(System.Numerics.Matrix3x2,System.Single)">
      <summary vsli:raw="Returns the matrix that results from scaling all the elements of a specified matrix by a scalar factor.">返回按标量系数缩放指定矩阵的所有元素后得到的矩阵。</summary>
      <param name="value1" vsli:raw="The matrix to scale.">要缩放的矩阵。</param>
      <param name="value2" vsli:raw="The scaling value to use.">要使用的缩放值。</param>
      <returns vsli:raw="The scaled matrix.">缩放后的矩阵。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.op_Subtraction(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Subtracts each element in a second matrix from its corresponding element in a first matrix.">从第一个矩阵中的每个元素中减去第二个矩阵中的对应元素。</summary>
      <param name="value1" vsli:raw="The first matrix.">第一个矩阵。</param>
      <param name="value2" vsli:raw="The second matrix.">第二个矩阵。</param>
      <returns vsli:raw="The matrix containing the values that result from subtracting each element in &lt;paramref name=&quot;value2&quot; /&gt; from its corresponding element in &lt;paramref name=&quot;value1&quot; /&gt;.">包含从 <paramref name="value1" /> 中的每个元素中减去 <paramref name="value2" /> 中的对应元素得到的值的矩阵。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.op_UnaryNegation(System.Numerics.Matrix3x2)">
      <summary vsli:raw="Negates the specified matrix by multiplying all its values by -1.">通过将其所有值乘以 -1，对指定矩阵求反。</summary>
      <param name="value" vsli:raw="The matrix to negate.">要求反的矩阵。</param>
      <returns vsli:raw="The negated matrix.">求反后的矩阵。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Subtract(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Subtracts each element in a second matrix from its corresponding element in a first matrix.">从第一个矩阵中的每个元素中减去第二个矩阵中的对应元素。</summary>
      <param name="value1" vsli:raw="The first matrix.">第一个矩阵。</param>
      <param name="value2" vsli:raw="The second matrix.">第二个矩阵。</param>
      <returns vsli:raw="The matrix containing the values that result from subtracting each element in &lt;paramref name=&quot;value2&quot; /&gt; from its corresponding element in &lt;paramref name=&quot;value1&quot; /&gt;.">包含从 <paramref name="value1" /> 中的每个元素中减去 <paramref name="value2" /> 中的对应元素得到的值的矩阵。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.ToString">
      <summary vsli:raw="Returns a string that represents this matrix.">返回表示此矩阵的字符串。</summary>
      <returns vsli:raw="The string representation of this matrix.">此矩阵的字符串表示形式。</returns>
    </member>
    <member name="P:System.Numerics.Matrix3x2.Translation">
      <summary vsli:raw="Gets or sets the translation component of this matrix.">获取或设置此矩阵的平移分量。</summary>
      <returns vsli:raw="The translation component of the current instance.">当前实例的平移分量。</returns>
    </member>
    <member name="T:System.Numerics.Matrix4x4">
      <summary vsli:raw="Represents a 4x4 matrix.">表示 4x4 矩阵。</summary>
    </member>
    <member name="M:System.Numerics.Matrix4x4.#ctor(System.Numerics.Matrix3x2)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Numerics.Matrix4x4&quot; /&gt; object from a specified &lt;see cref=&quot;T:System.Numerics.Matrix3x2&quot; /&gt; object.">从指定的 <see cref="T:System.Numerics.Matrix3x2" /> 对象创建 <see cref="T:System.Numerics.Matrix4x4" /> 对象。</summary>
      <param name="value" vsli:raw="A 3x2 matrix.">3x2 矩阵。</param>
    </member>
    <member name="M:System.Numerics.Matrix4x4.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a 4x4 matrix from the specified components.">从指定分量创建 4x4 矩阵。</summary>
      <param name="m11" vsli:raw="The value to assign to the first element in the first row.">要分配给第一行中的第一个元素的值。</param>
      <param name="m12" vsli:raw="The value to assign to the second element in the first row.">要分配给第一行中的第二个元素的值。</param>
      <param name="m33" vsli:raw="The value to assign to the third element in the third row.">要分配给第三行中的第三个元素的值。</param>
      <param name="m34" vsli:raw="The value to assign to the fourth element in the third row.">要分配给第三行中的第四个元素的值。</param>
      <param name="m41" vsli:raw="The value to assign to the first element in the fourth row.">要分配给第四行中的第一个元素的值。</param>
      <param name="m42" vsli:raw="The value to assign to the second element in the fourth row.">要分配给第四行中的第二个元素的值。</param>
      <param name="m43" vsli:raw="The value to assign to the third element in the fourth row.">要分配给第四行中的第三个元素的值。</param>
      <param name="m44" vsli:raw="The value to assign to the fourth element in the fourth row.">要分配给第四行中的第四个元素的值。</param>
      <param name="m13" vsli:raw="The value to assign to the third element in the first row.">要分配给第一行中的第三个元素的值。</param>
      <param name="m14" vsli:raw="The value to assign to the fourth element in the first row.">要分配给第一行中的第四个元素的值。</param>
      <param name="m21" vsli:raw="The value to assign to the first element in the second row.">要分配给第二行中的第一个元素的值。</param>
      <param name="m22" vsli:raw="The value to assign to the second element in the second row.">要分配给第二行中的第二个元素的值。</param>
      <param name="m23" vsli:raw="The value to assign to the third element in the second row.">要分配给第二行中的第四个元素的值。</param>
      <param name="m24" vsli:raw="The value to assign to the fourth element in the second row.">要分配给第二行中的第四个元素的值。</param>
      <param name="m31" vsli:raw="The value to assign to the first element in the third row.">要分配给第三行中的第一个元素的值。</param>
      <param name="m32" vsli:raw="The value to assign to the second element in the third row.">要分配给第三行中的第二个元素的值。</param>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Add(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Adds each element in one matrix with its corresponding element in a second matrix.">将一个矩阵中的每个元素与第二个矩阵中的对应元素相加。</summary>
      <param name="value1" vsli:raw="The first matrix.">第一个矩阵。</param>
      <param name="value2" vsli:raw="The second matrix.">第二个矩阵。</param>
      <returns vsli:raw="The matrix that contains the summed values of &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt;.">包含 <paramref name="value1" /> 和 <paramref name="value2" /> 的总和值的矩阵。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateBillboard(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a spherical billboard that rotates around a specified object position.">创建围绕指定对象位置旋转的球状宣传位置。</summary>
      <param name="objectPosition" vsli:raw="The position of the object that the billboard will rotate around.">宣传位置将围绕其旋转的对象的位置。</param>
      <param name="cameraPosition" vsli:raw="The position of the camera.">照相机的位置。</param>
      <param name="cameraUpVector" vsli:raw="The up vector of the camera.">照相机的向上向量。</param>
      <param name="cameraForwardVector" vsli:raw="The forward vector of the camera.">照相机的向前向量。</param>
      <returns vsli:raw="The created billboard.">创建的宣传位置。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateConstrainedBillboard(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a cylindrical billboard that rotates around a specified axis.">创建围绕指定轴旋转的圆柱宣传位置。</summary>
      <param name="objectPosition" vsli:raw="The position of the object that the billboard will rotate around.">宣传位置将围绕其旋转的对象的位置。</param>
      <param name="cameraPosition" vsli:raw="The position of the camera.">照相机的位置。</param>
      <param name="rotateAxis" vsli:raw="The axis to rotate the billboard around.">要宣传位置要围绕其旋转的轴。</param>
      <param name="cameraForwardVector" vsli:raw="The forward vector of the camera.">照相机的向前向量。</param>
      <param name="objectForwardVector" vsli:raw="The forward vector of the object.">对象的向前向量。</param>
      <returns vsli:raw="The billboard matrix.">宣传位置矩阵。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateFromAxisAngle(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Creates a matrix that rotates around an arbitrary vector.">创建围绕任意向量旋转的矩阵。</summary>
      <param name="axis" vsli:raw="The axis to rotate around.">要围绕其旋转的轴。</param>
      <param name="angle" vsli:raw="The angle to rotate around &lt;paramref name=&quot;axis&quot; /&gt;, in radians.">要围绕 <paramref name="axis" /> 旋转的角度（以弧度表示）。</param>
      <returns vsli:raw="The rotation matrix.">旋转矩阵。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateFromQuaternion(System.Numerics.Quaternion)">
      <summary vsli:raw="Creates a rotation matrix from the specified Quaternion rotation value.">从指定四元数旋转值创建旋转矩阵。</summary>
      <param name="quaternion" vsli:raw="The source Quaternion.">源四元数。</param>
      <returns vsli:raw="The rotation matrix.">旋转矩阵。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateFromYawPitchRoll(System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a rotation matrix from the specified yaw, pitch, and roll.">从指定的绕 Y 轴旋转、绕 X 轴旋转和绕 Z 轴旋转创建旋转矩阵。</summary>
      <param name="yaw" vsli:raw="The angle of rotation, in radians, around the Y axis.">围绕 Y 轴的旋转角度（以弧度表示）。</param>
      <param name="pitch" vsli:raw="The angle of rotation, in radians, around the X axis.">围绕 X 轴的旋转角度（以弧度表示）。</param>
      <param name="roll" vsli:raw="The angle of rotation, in radians, around the Z axis.">围绕 Z 轴的旋转角度（以弧度表示）。</param>
      <returns vsli:raw="The rotation matrix.">旋转矩阵。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateLookAt(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a view matrix.">创建视图矩阵。</summary>
      <param name="cameraPosition" vsli:raw="The position of the camera.">照相机的位置。</param>
      <param name="cameraTarget" vsli:raw="The target towards which the camera is pointing.">照相机指向的目标。</param>
      <param name="cameraUpVector" vsli:raw="The direction that is &quot;up&quot; from the camera's point of view.">相对于照相机视角为“向上”的方向。</param>
      <returns vsli:raw="The view matrix.">视图矩阵。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateOrthographic(System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates an orthographic perspective matrix from the given view volume dimensions.">从给定视图体维度创建正交透视矩阵。</summary>
      <param name="width" vsli:raw="The width of the view volume.">视图体的宽度。</param>
      <param name="height" vsli:raw="The height of the view volume.">视图体的高度。</param>
      <param name="zNearPlane" vsli:raw="The minimum Z-value of the view volume.">视图体的最小 Z 值。</param>
      <param name="zFarPlane" vsli:raw="The maximum Z-value of the view volume.">视图体的最大 Z 值。</param>
      <returns vsli:raw="The orthographic projection matrix.">正交投影矩阵。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateOrthographicOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a customized orthographic projection matrix.">创建自定义正交投影矩阵。</summary>
      <param name="left" vsli:raw="The minimum X-value of the view volume.">视图体的最小 X 值。</param>
      <param name="right" vsli:raw="The maximum X-value of the view volume.">视图体的最大 X 值。</param>
      <param name="bottom" vsli:raw="The minimum Y-value of the view volume.">视图体的最小 Y 值。</param>
      <param name="top" vsli:raw="The maximum Y-value of the view volume.">视图体的最大 Y 值。</param>
      <param name="zNearPlane" vsli:raw="The minimum Z-value of the view volume.">视图体的最小 Z 值。</param>
      <param name="zFarPlane" vsli:raw="The maximum Z-value of the view volume.">视图体的最大 Z 值。</param>
      <returns vsli:raw="The orthographic projection matrix.">正交投影矩阵。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreatePerspective(System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a perspective projection matrix from the given view volume dimensions.">从给定视图体维度创建透视投影矩阵。</summary>
      <param name="width" vsli:raw="The width of the view volume at the near view plane.">视图体在近视图平面上的宽度。</param>
      <param name="height" vsli:raw="The height of the view volume at the near view plane.">视图体在近视图平面上的高度。</param>
      <param name="nearPlaneDistance" vsli:raw="The distance to the near view plane.">与近视图平面之间的距离。</param>
      <param name="farPlaneDistance" vsli:raw="The distance to the far view plane.">与远视图平面之间的距离。</param>
      <returns vsli:raw="The perspective projection matrix.">透视投影矩阵。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;nearPlaneDistance&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;farPlaneDistance&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;nearPlaneDistance&quot; /&gt; is greater than or equal to &lt;paramref name=&quot;farPlaneDistance&quot; /&gt;.">
        <paramref name="nearPlaneDistance" /> 小于或等于零。  
或 
 <paramref name="farPlaneDistance" /> 小于或等于零。  

或 - 
<paramref name="nearPlaneDistance" /> 大于或等于 <paramref name="farPlaneDistance" />。</exception>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreatePerspectiveFieldOfView(System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a perspective projection matrix based on a field of view, aspect ratio, and near and far view plane distances.">基于视野、纵横比以及近和远视图平面距离创建透视投影矩阵。</summary>
      <param name="fieldOfView" vsli:raw="The field of view in the y direction, in radians.">y 方向上的视野（以弧度表示）。</param>
      <param name="aspectRatio" vsli:raw="The aspect ratio, defined as view space width divided by height.">纵横比，定义为视图空间宽度除以高度。</param>
      <param name="nearPlaneDistance" vsli:raw="The distance to the near view plane.">与近视图平面之间的距离。</param>
      <param name="farPlaneDistance" vsli:raw="The distance to the far view plane.">与远视图平面之间的距离。</param>
      <returns vsli:raw="The perspective projection matrix.">透视投影矩阵。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;fieldOfView&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;fieldOfView&quot; /&gt; is greater than or equal to &lt;see cref=&quot;F:System.Math.PI&quot; /&gt;.  &#xA;  &#xA; &lt;paramref name=&quot;nearPlaneDistance&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;farPlaneDistance&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;nearPlaneDistance&quot; /&gt; is greater than or equal to &lt;paramref name=&quot;farPlaneDistance&quot; /&gt;.">
        <paramref name="fieldOfView" /> 小于或等于零。  
或 
 <paramref name="fieldOfView" /> 大于或等于 <see cref="F:System.Math.PI" />。  
 <paramref name="nearPlaneDistance" /> 小于或等于零。  

或 - 
<paramref name="farPlaneDistance" /> 小于或等于零。  

或 - 
<paramref name="nearPlaneDistance" /> 大于或等于 <paramref name="farPlaneDistance" />。</exception>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreatePerspectiveOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a customized perspective projection matrix.">创建自定义透视投影矩阵。</summary>
      <param name="left" vsli:raw="The minimum x-value of the view volume at the near view plane.">视图体在近视图平面上的最小 x 值。</param>
      <param name="right" vsli:raw="The maximum x-value of the view volume at the near view plane.">视图体在近视图平面上的最大 x 值。</param>
      <param name="bottom" vsli:raw="The minimum y-value of the view volume at the near view plane.">视图体在近视图平面上的最小 y 值。</param>
      <param name="top" vsli:raw="The maximum y-value of the view volume at the near view plane.">视图体在近视图平面上的最大 y 值。</param>
      <param name="nearPlaneDistance" vsli:raw="The distance to the near view plane.">与近视图平面之间的距离。</param>
      <param name="farPlaneDistance" vsli:raw="The distance to the far view plane.">与远视图平面之间的距离。</param>
      <returns vsli:raw="The perspective projection matrix.">透视投影矩阵。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;nearPlaneDistance&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;farPlaneDistance&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;nearPlaneDistance&quot; /&gt; is greater than or equal to &lt;paramref name=&quot;farPlaneDistance&quot; /&gt;.">
        <paramref name="nearPlaneDistance" /> 小于或等于零。  

或 - 
<paramref name="farPlaneDistance" /> 小于或等于零。  

或 
 <paramref name="nearPlaneDistance" /> 大于或等于 <paramref name="farPlaneDistance" />。</exception>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateReflection(System.Numerics.Plane)">
      <summary vsli:raw="Creates a matrix that reflects the coordinate system about a specified plane.">创建围绕指定平面反射坐标系统的矩阵。</summary>
      <param name="value" vsli:raw="The plane about which to create a reflection.">围绕其创建反射的平面。</param>
      <returns vsli:raw="A new matrix expressing the reflection.">表示反射的新矩阵。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateRotationX(System.Single)">
      <summary vsli:raw="Creates a matrix for rotating points around the X axis.">创建用于围绕 X 轴旋转的矩阵。</summary>
      <param name="radians" vsli:raw="The amount, in radians, by which to rotate around the X axis.">要围绕 X 轴旋转的量（以弧度表示）。</param>
      <returns vsli:raw="The rotation matrix.">旋转矩阵。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateRotationX(System.Single,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a matrix for rotating points around the X axis from a center point.">创建用于从中心点围绕 X 轴旋转的矩阵。</summary>
      <param name="radians" vsli:raw="The amount, in radians, by which to rotate around the X axis.">要围绕 X 轴旋转的量（以弧度表示）。</param>
      <param name="centerPoint" vsli:raw="The center point.">中心点。</param>
      <returns vsli:raw="The rotation matrix.">旋转矩阵。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateRotationY(System.Single)">
      <summary vsli:raw="Creates a matrix for rotating points around the Y axis.">创建用于围绕 Y 轴旋转的矩阵。</summary>
      <param name="radians" vsli:raw="The amount, in radians, by which to rotate around the Y-axis.">要围绕 Y 轴旋转的量（以弧度表示）。</param>
      <returns vsli:raw="The rotation matrix.">旋转矩阵。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateRotationY(System.Single,System.Numerics.Vector3)">
      <summary vsli:raw="The amount, in radians, by which to rotate around the Y axis from a center point.">要从中心点围绕 Y 轴旋转的量（以弧度表示）。</summary>
      <param name="radians" vsli:raw="The amount, in radians, by which to rotate around the Y-axis.">要围绕 Y 轴旋转的量（以弧度表示）。</param>
      <param name="centerPoint" vsli:raw="The center point.">中心点。</param>
      <returns vsli:raw="The rotation matrix.">旋转矩阵。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateRotationZ(System.Single)">
      <summary vsli:raw="Creates a matrix for rotating points around the Z axis.">创建用于围绕 Z 轴旋转的矩阵。</summary>
      <param name="radians" vsli:raw="The amount, in radians, by which to rotate around the Z-axis.">要围绕 Z 轴旋转的量（以弧度表示）。</param>
      <returns vsli:raw="The rotation matrix.">旋转矩阵。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateRotationZ(System.Single,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a matrix for rotating points around the Z axis from a center point.">创建用于从中心点围绕 Z 轴旋转的矩阵。</summary>
      <param name="radians" vsli:raw="The amount, in radians, by which to rotate around the Z-axis.">要围绕 Z 轴旋转的量（以弧度表示）。</param>
      <param name="centerPoint" vsli:raw="The center point.">中心点。</param>
      <returns vsli:raw="The rotation matrix.">旋转矩阵。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateScale(System.Numerics.Vector3)">
      <summary vsli:raw="Creates a scaling matrix from the specified vector scale.">从指定向量比例创建缩放矩阵。</summary>
      <param name="scales" vsli:raw="The scale to use.">要使用的比例。</param>
      <returns vsli:raw="The scaling matrix.">缩放矩阵。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateScale(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a scaling matrix with a center point.">创建具有中心点的缩放矩阵。</summary>
      <param name="scales" vsli:raw="The vector that contains the amount to scale on each axis.">包含每个轴上要缩放的量的向量。</param>
      <param name="centerPoint" vsli:raw="The center point.">中心点。</param>
      <returns vsli:raw="The scaling matrix.">缩放矩阵。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateScale(System.Single)">
      <summary vsli:raw="Creates a uniform scaling matrix that scale equally on each axis.">创建在每个轴上均匀缩放的统一缩放矩阵。</summary>
      <param name="scale" vsli:raw="The uniform scaling factor.">统一缩放因子。</param>
      <returns vsli:raw="The scaling matrix.">缩放矩阵。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateScale(System.Single,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a uniform scaling matrix that scales equally on each axis with a center point.">创建具有中心点并且在每个轴上均匀缩放的统一缩放矩阵。</summary>
      <param name="scale" vsli:raw="The uniform scaling factor.">统一缩放因子。</param>
      <param name="centerPoint" vsli:raw="The center point.">中心点。</param>
      <returns vsli:raw="The scaling matrix.">缩放矩阵。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateScale(System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a scaling matrix from the specified X, Y, and Z components.">从指定 X、Y 和 Z 分量创建缩放矩阵。</summary>
      <param name="xScale" vsli:raw="The value to scale by on the X axis.">作为 X 轴上的缩放量的值。</param>
      <param name="yScale" vsli:raw="The value to scale by on the Y axis.">作为 Y 轴上的缩放量的值。</param>
      <param name="zScale" vsli:raw="The value to scale by on the Z axis.">作为 Z 轴上的缩放量的值。</param>
      <returns vsli:raw="The scaling matrix.">缩放矩阵。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateScale(System.Single,System.Single,System.Single,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a scaling matrix that is offset by a given center point.">创建按给定中心点偏移的缩放矩阵。</summary>
      <param name="xScale" vsli:raw="The value to scale by on the X axis.">作为 X 轴上的缩放量的值。</param>
      <param name="yScale" vsli:raw="The value to scale by on the Y axis.">作为 Y 轴上的缩放量的值。</param>
      <param name="zScale" vsli:raw="The value to scale by on the Z axis.">作为 Z 轴上的缩放量的值。</param>
      <param name="centerPoint" vsli:raw="The center point.">中心点。</param>
      <returns vsli:raw="The scaling matrix.">缩放矩阵。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateShadow(System.Numerics.Vector3,System.Numerics.Plane)">
      <summary vsli:raw="Creates a matrix that flattens geometry into a specified plane as if casting a shadow from a specified light source.">创建将几何图形平展到指定平面中（如同从指定光源进行投影）的矩阵。</summary>
      <param name="lightDirection" vsli:raw="The direction from which the light that will cast the shadow is coming.">用于投影的光所来自的方向。</param>
      <param name="plane" vsli:raw="The plane onto which the new matrix should flatten geometry so as to cast a shadow.">新矩阵应将几何图形平展到其中以便进行投影的平面。</param>
      <returns vsli:raw="A new matrix that can be used to flatten geometry onto the specified plane from the specified direction.">可以用于从指定方向将几何图形平展到指定平面上的新矩阵。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateTranslation(System.Numerics.Vector3)">
      <summary vsli:raw="Creates a translation matrix from the specified 3-dimensional vector.">从指定三维向量创建平移矩阵。</summary>
      <param name="position" vsli:raw="The amount to translate in each axis.">要在每个轴上平移的量。</param>
      <returns vsli:raw="The translation matrix.">平移矩阵。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateTranslation(System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a translation matrix from the specified X, Y, and Z components.">从指定 X、Y 和 Z 分量创建平移矩阵。</summary>
      <param name="xPosition" vsli:raw="The amount to translate on the X axis.">要在 X 轴上平移的量。</param>
      <param name="yPosition" vsli:raw="The amount to translate on the Y axis.">要在 Y 轴上平移的量。</param>
      <param name="zPosition" vsli:raw="The amount to translate on the Z axis.">要在 Z 轴上平移的量。</param>
      <returns vsli:raw="The translation matrix.">平移矩阵。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateWorld(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a world matrix with the specified parameters.">使用指定参数创建世界矩阵。</summary>
      <param name="position" vsli:raw="The position of the object.">对象的位置。</param>
      <param name="forward" vsli:raw="The forward direction of the object.">对象的向前方向。</param>
      <param name="up" vsli:raw="The upward direction of the object. Its value is usually &lt;c&gt;[0, 1, 0]&lt;/c&gt;.">对象的向上方向。 其值通常为 <c>[0, 1, 0]</c>。</param>
      <returns vsli:raw="The world matrix.">世界矩阵。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Decompose(System.Numerics.Matrix4x4,System.Numerics.Vector3@,System.Numerics.Quaternion@,System.Numerics.Vector3@)">
      <summary vsli:raw="Attempts to extract the scale, translation, and rotation components from the given scale, rotation, or translation matrix. The return value indicates whether the operation succeeded.">尝试从给定缩放、旋转或平移矩阵中提取缩放、平移和旋转分量。 返回值指示操作是否成功。</summary>
      <param name="matrix" vsli:raw="The source matrix.">源矩阵。</param>
      <param name="scale" vsli:raw="When this method returns, contains the scaling component of the transformation matrix if the operation succeeded.">此方法返回时，如果操作成功，则包含变换矩阵的缩放分量。</param>
      <param name="rotation" vsli:raw="When this method returns, contains the rotation component of the transformation matrix if the operation succeeded.">此方法返回时，如果操作成功，则包含转换矩阵的旋转分量。</param>
      <param name="translation" vsli:raw="When the method returns, contains the translation component of the transformation matrix if the operation succeeded.">此方法返回时，如果操作成功，则包含转换矩阵的平移分量。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;matrix&quot; /&gt; was decomposed successfully; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="matrix" /> 成功分解，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Equals(System.Numerics.Matrix4x4)">
      <summary vsli:raw="Returns a value that indicates whether this instance and another 4x4 matrix are equal.">返回一个值，该值指示此实例是否与另一个 4x4 矩阵相等。</summary>
      <param name="other" vsli:raw="The other matrix.">另一个矩阵。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two matrices are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果两个矩阵相等，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance and a specified object are equal.">返回一个值，该值指示此实例是否与指定对象相等。</summary>
      <param name="obj" vsli:raw="The object to compare with the current instance.">要与当前实例进行比较的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;obj&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, the method returns &lt;see langword=&quot;false&quot; /&gt;.">如果当前实例与 <paramref name="obj" /> 相等，则为 <see langword="true" />；否则为 <see langword="false" />。 如果 <paramref name="obj" /> 为 <see langword="null" />，则此方法返回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.GetDeterminant">
      <summary vsli:raw="Calculates the determinant of the current 4x4 matrix.">计算当前 4x4 矩阵的行列式。</summary>
      <returns vsli:raw="The determinant.">行列式。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">返回此实例的哈希代码。</summary>
      <returns vsli:raw="The hash code.">哈希代码。</returns>
    </member>
    <member name="P:System.Numerics.Matrix4x4.Identity">
      <summary vsli:raw="Gets the multiplicative identity matrix.">获取乘法单位矩阵。</summary>
      <returns vsli:raw="Gets the multiplicative identity matrix.">获取乘法单位矩阵。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Invert(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4@)">
      <summary vsli:raw="Inverts the specified matrix. The return value indicates whether the operation succeeded.">对指定矩阵求逆。 返回值指示操作是否成功。</summary>
      <param name="matrix" vsli:raw="The matrix to invert.">要求逆的矩阵。</param>
      <param name="result" vsli:raw="When this method returns, contains the inverted matrix if the operation succeeded.">此方法返回时，如果操作成功，则包含逆矩阵。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;matrix&quot; /&gt; was converted successfully; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="matrix" /> 成功转换，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Numerics.Matrix4x4.IsIdentity">
      <summary vsli:raw="Indicates whether the current matrix is the identity matrix.">指示当前矩阵是否为单位矩阵。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current matrix is the identity matrix; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果当前矩阵为单位矩阵，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Lerp(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4,System.Single)">
      <summary vsli:raw="Performs a linear interpolation from one matrix to a second matrix based on a value that specifies the weighting of the second matrix.">基于指定第二个矩阵的权重的值，从一个矩阵向第二个矩阵执行线性内插。</summary>
      <param name="matrix1" vsli:raw="The first matrix.">第一个矩阵。</param>
      <param name="matrix2" vsli:raw="The second matrix.">第二个矩阵。</param>
      <param name="amount" vsli:raw="The relative weighting of &lt;paramref name=&quot;matrix2&quot; /&gt;.">
        <paramref name="matrix2" /> 的相对权重。</param>
      <returns vsli:raw="The interpolated matrix.">内插的矩阵。</returns>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M11">
      <summary vsli:raw="The first element of the first row.">第一行的第一个元素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M12">
      <summary vsli:raw="The second element of the first row.">第一行的第二个元素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M13">
      <summary vsli:raw="The third element of the first row.">第一行的第三个元素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M14">
      <summary vsli:raw="The fourth element of the first row.">第一行的第四个元素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M21">
      <summary vsli:raw="The first element of the second row.">第二行的第一个元素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M22">
      <summary vsli:raw="The second element of the second row.">第二行的第二个元素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M23">
      <summary vsli:raw="The third element of the second row.">第二行的第三个元素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M24">
      <summary vsli:raw="The fourth element of the second row.">第二行的第四个元素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M31">
      <summary vsli:raw="The first element of the third row.">第三行的第一个元素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M32">
      <summary vsli:raw="The second element of the third row.">第三行的第二个元素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M33">
      <summary vsli:raw="The third element of the third row.">第三行的第三个元素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M34">
      <summary vsli:raw="The fourth element of the third row.">第三行的第四个元素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M41">
      <summary vsli:raw="The first element of the fourth row.">第四行的第一个元素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M42">
      <summary vsli:raw="The second element of the fourth row.">第四行的第二个元素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M43">
      <summary vsli:raw="The third element of the fourth row.">第四行的第三个元素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M44">
      <summary vsli:raw="The fourth element of the fourth row.">第四行的第四个元素。</summary>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Multiply(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Returns the matrix that results from multiplying two matrices together.">返回将两个矩阵相乘得到的矩阵。</summary>
      <param name="value1" vsli:raw="The first matrix.">第一个矩阵。</param>
      <param name="value2" vsli:raw="The second matrix.">第二个矩阵。</param>
      <returns vsli:raw="The product matrix.">乘积矩阵。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Multiply(System.Numerics.Matrix4x4,System.Single)">
      <summary vsli:raw="Returns the matrix that results from scaling all the elements of a specified matrix by a scalar factor.">返回按标量系数缩放指定矩阵的所有元素后得到的矩阵。</summary>
      <param name="value1" vsli:raw="The matrix to scale.">要缩放的矩阵。</param>
      <param name="value2" vsli:raw="The scaling value to use.">要使用的缩放值。</param>
      <returns vsli:raw="The scaled matrix.">缩放后的矩阵。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Negate(System.Numerics.Matrix4x4)">
      <summary vsli:raw="Negates the specified matrix by multiplying all its values by -1.">通过将其所有值乘以 -1，对指定矩阵求反。</summary>
      <param name="value" vsli:raw="The matrix to negate.">要求反的矩阵。</param>
      <returns vsli:raw="The negated matrix.">求反后的矩阵。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_Addition(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Adds each element in one matrix with its corresponding element in a second matrix.">将一个矩阵中的每个元素与第二个矩阵中的对应元素相加。</summary>
      <param name="value1" vsli:raw="The first matrix.">第一个矩阵。</param>
      <param name="value2" vsli:raw="The second matrix.">第二个矩阵。</param>
      <returns vsli:raw="The matrix that contains the summed values.">包含总和值的矩阵。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_Equality(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Returns a value that indicates whether the specified matrices are equal.">返回一个值，该值指示指定矩阵是否相等。</summary>
      <param name="value1" vsli:raw="The first matrix to compare.">要比较的第一个矩阵。</param>
      <param name="value2" vsli:raw="The second matrix to care.">要比较的第二个矩阵。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="value1" /> 和 <paramref name="value2" /> 相等，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_Inequality(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Returns a value that indicates whether the specified matrices are not equal.">返回一个值，该值指示指定矩阵是否不相等。</summary>
      <param name="value1" vsli:raw="The first matrix to compare.">要比较的第一个矩阵。</param>
      <param name="value2" vsli:raw="The second matrix to compare.">要比较的第二个矩阵。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="value1" /> 和 <paramref name="value2" /> 不相等，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_Multiply(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Returns the matrix that results from multiplying two matrices together.">返回将两个矩阵相乘得到的矩阵。</summary>
      <param name="value1" vsli:raw="The first matrix.">第一个矩阵。</param>
      <param name="value2" vsli:raw="The second matrix.">第二个矩阵。</param>
      <returns vsli:raw="The product matrix.">乘积矩阵。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_Multiply(System.Numerics.Matrix4x4,System.Single)">
      <summary vsli:raw="Returns the matrix that results from scaling all the elements of a specified matrix by a scalar factor.">返回按标量系数缩放指定矩阵的所有元素后得到的矩阵。</summary>
      <param name="value1" vsli:raw="The matrix to scale.">要缩放的矩阵。</param>
      <param name="value2" vsli:raw="The scaling value to use.">要使用的缩放值。</param>
      <returns vsli:raw="The scaled matrix.">缩放后的矩阵。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_Subtraction(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Subtracts each element in a second matrix from its corresponding element in a first matrix.">从第一个矩阵中的每个元素中减去第二个矩阵中的对应元素。</summary>
      <param name="value1" vsli:raw="The first matrix.">第一个矩阵。</param>
      <param name="value2" vsli:raw="The second matrix.">第二个矩阵。</param>
      <returns vsli:raw="The matrix containing the values that result from subtracting each element in &lt;paramref name=&quot;value2&quot; /&gt; from its corresponding element in &lt;paramref name=&quot;value1&quot; /&gt;.">包含从 <paramref name="value1" /> 中的每个元素中减去 <paramref name="value2" /> 中的对应元素得到的值的矩阵。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_UnaryNegation(System.Numerics.Matrix4x4)">
      <summary vsli:raw="Negates the specified matrix by multiplying all its values by -1.">通过将其所有值乘以 -1，对指定矩阵求反。</summary>
      <param name="value" vsli:raw="The matrix to negate.">要求反的矩阵。</param>
      <returns vsli:raw="The negated matrix.">求反后的矩阵。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Subtract(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Subtracts each element in a second matrix from its corresponding element in a first matrix.">从第一个矩阵中的每个元素中减去第二个矩阵中的对应元素。</summary>
      <param name="value1" vsli:raw="The first matrix.">第一个矩阵。</param>
      <param name="value2" vsli:raw="The second matrix.">第二个矩阵。</param>
      <returns vsli:raw="The matrix containing the values that result from subtracting each element in &lt;paramref name=&quot;value2&quot; /&gt; from its corresponding element in &lt;paramref name=&quot;value1&quot; /&gt;.">包含从 <paramref name="value1" /> 中的每个元素中减去 <paramref name="value2" /> 中的对应元素得到的值的矩阵。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.ToString">
      <summary vsli:raw="Returns a string that represents this matrix.">返回表示此矩阵的字符串。</summary>
      <returns vsli:raw="The string representation of this matrix.">此矩阵的字符串表示形式。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Transform(System.Numerics.Matrix4x4,System.Numerics.Quaternion)">
      <summary vsli:raw="Transforms the specified matrix by applying the specified Quaternion rotation.">通过应用指定四元数旋转来变换指定矩阵。</summary>
      <param name="value" vsli:raw="The matrix to transform.">要变换的矩阵。</param>
      <param name="rotation" vsli:raw="The rotation t apply.">要应用的旋转。</param>
      <returns vsli:raw="The transformed matrix.">变换后的矩阵。</returns>
    </member>
    <member name="P:System.Numerics.Matrix4x4.Translation">
      <summary vsli:raw="Gets or sets the translation component of this matrix.">获取或设置此矩阵的平移分量。</summary>
      <returns vsli:raw="The translation component of the current instance.">当前实例的平移分量。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Transpose(System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transposes the rows and columns of a matrix.">转置矩阵的行和列。</summary>
      <param name="matrix" vsli:raw="The matrix to transpose.">要转置的矩阵。</param>
      <returns vsli:raw="The transposed matrix.">转置矩阵。</returns>
    </member>
    <member name="T:System.Numerics.Plane">
      <summary vsli:raw="Represents a plane in three-dimensional space.">表示三维空间中的一个平面。</summary>
    </member>
    <member name="M:System.Numerics.Plane.#ctor(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Numerics.Plane&quot; /&gt; object from a specified normal and the distance along the normal from the origin.">从指定法线以及从原点沿法线的距离创建一个 <see cref="T:System.Numerics.Plane" /> 对象。</summary>
      <param name="normal" vsli:raw="The plane's normal vector.">平面的法向量。</param>
      <param name="d" vsli:raw="The plane's distance from the origin along its normal vector.">平面从原点沿其法向量的距离。</param>
    </member>
    <member name="M:System.Numerics.Plane.#ctor(System.Numerics.Vector4)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Numerics.Plane&quot; /&gt; object from a specified four-dimensional vector.">从指定的四维向量创建一个 <see cref="T:System.Numerics.Plane" /> 对象。</summary>
      <param name="value" vsli:raw="A vector whose first three elements describe the normal vector, and whose &lt;see cref=&quot;F:System.Numerics.Vector4.W&quot; /&gt; defines the distance along that normal from the origin.">一个向量，其前三个元素描述法向量，其 <see cref="F:System.Numerics.Vector4.W" /> 定义从原点沿该法线的距离。</param>
    </member>
    <member name="M:System.Numerics.Plane.#ctor(System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Numerics.Plane&quot; /&gt; object from the X, Y, and Z components of its normal, and its distance from the origin on that normal.">从其法线的 X、Y 和 Z 分量以及距该法线上距原点的距离创建一个 <see cref="T:System.Numerics.Plane" /> 对象。</summary>
      <param name="x" vsli:raw="The X component of the normal.">法线的 X 分量。</param>
      <param name="y" vsli:raw="The Y component of the normal.">法线的 Y 分量。</param>
      <param name="z" vsli:raw="The Z component of the normal.">法线的 Z 分量。</param>
      <param name="d" vsli:raw="The distance of the plane along its normal from the origin.">平面从原点沿其法线的距离。</param>
    </member>
    <member name="M:System.Numerics.Plane.CreateFromVertices(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Numerics.Plane&quot; /&gt; object that contains three specified points.">创建一个 <see cref="T:System.Numerics.Plane" /> 对象，其中包含三个指定的点。</summary>
      <param name="point1" vsli:raw="The first point defining the plane.">定义平面的第一个点。</param>
      <param name="point2" vsli:raw="The second point defining the plane.">定义平面的第二个点。</param>
      <param name="point3" vsli:raw="The third point defining the plane.">定义平面的第三个点。</param>
      <returns vsli:raw="The plane containing the three points.">包含三个点的平面。</returns>
    </member>
    <member name="F:System.Numerics.Plane.D">
      <summary vsli:raw="The distance of the plane along its normal from the origin.">平面从原点沿其法线的距离。</summary>
    </member>
    <member name="M:System.Numerics.Plane.Dot(System.Numerics.Plane,System.Numerics.Vector4)">
      <summary vsli:raw="Calculates the dot product of a plane and a 4-dimensional vector.">计算平面和四维向量的点积。</summary>
      <param name="plane" vsli:raw="The plane.">平面。</param>
      <param name="value" vsli:raw="The four-dimensional vector.">四维向量。</param>
      <returns vsli:raw="The dot product.">点积。</returns>
    </member>
    <member name="M:System.Numerics.Plane.DotCoordinate(System.Numerics.Plane,System.Numerics.Vector3)">
      <summary vsli:raw="Returns the dot product of a specified three-dimensional vector and the normal vector of this plane plus the distance (&lt;see cref=&quot;F:System.Numerics.Plane.D&quot; /&gt;) value of the plane.">返回指定的三维向量和此平面的法向量以及该平面的距离 (<see cref="F:System.Numerics.Plane.D" />) 值的点积。</summary>
      <param name="plane" vsli:raw="The plane.">平面。</param>
      <param name="value" vsli:raw="The 3-dimensional vector.">三维向量。</param>
      <returns vsli:raw="The dot product.">点积。</returns>
    </member>
    <member name="M:System.Numerics.Plane.DotNormal(System.Numerics.Plane,System.Numerics.Vector3)">
      <summary vsli:raw="Returns the dot product of a specified three-dimensional vector and the &lt;see cref=&quot;F:System.Numerics.Plane.Normal&quot; /&gt; vector of this plane.">返回指定的三维向量以及此平面的 <see cref="F:System.Numerics.Plane.Normal" /> 向量的点积。</summary>
      <param name="plane" vsli:raw="The plane.">平面。</param>
      <param name="value" vsli:raw="The three-dimensional vector.">三维向量。</param>
      <returns vsli:raw="The dot product.">点积。</returns>
    </member>
    <member name="M:System.Numerics.Plane.Equals(System.Numerics.Plane)">
      <summary vsli:raw="Returns a value that indicates whether this instance and another plane object are equal.">返回一个值，该值指示此实例是否与另一个平面对象相等。</summary>
      <param name="other" vsli:raw="The other plane.">另一个平面。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two planes are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果两个平面相等，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Plane.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance and a specified object are equal.">返回一个值，该值指示此实例是否与指定对象相等。</summary>
      <param name="obj" vsli:raw="The object to compare with the current instance.">要与当前实例进行比较的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;obj&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, the method returns &lt;see langword=&quot;false&quot; /&gt;.">如果当前实例与 <paramref name="obj" /> 相等，则为 <see langword="true" />；否则为 <see langword="false" />。 如果 <paramref name="obj" /> 为 <see langword="null" />，则此方法返回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Plane.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">返回此实例的哈希代码。</summary>
      <returns vsli:raw="The hash code.">哈希代码。</returns>
    </member>
    <member name="F:System.Numerics.Plane.Normal">
      <summary vsli:raw="The normal vector of the plane.">平面的法向量。</summary>
    </member>
    <member name="M:System.Numerics.Plane.Normalize(System.Numerics.Plane)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Numerics.Plane&quot; /&gt; object whose normal vector is the source plane's normal vector normalized.">创建一个新的 <see cref="T:System.Numerics.Plane" /> 对象，其法向量是源平面的规范化的法向量。</summary>
      <param name="value" vsli:raw="The source plane.">源平面。</param>
      <returns vsli:raw="The normalized plane.">规范化的平面。</returns>
    </member>
    <member name="M:System.Numerics.Plane.op_Equality(System.Numerics.Plane,System.Numerics.Plane)">
      <summary vsli:raw="Returns a value that indicates whether two planes are equal.">返回一个值，该值指示两个平面是否相等。</summary>
      <param name="value1" vsli:raw="The first plane to compare.">要比较的第一个平面。</param>
      <param name="value2" vsli:raw="The second plane to compare.">要比较的第二个平面。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="value1" /> 和 <paramref name="value2" /> 相等，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Plane.op_Inequality(System.Numerics.Plane,System.Numerics.Plane)">
      <summary vsli:raw="Returns a value that indicates whether two planes are not equal.">返回一个值，该值指示两个平面是否不相等。</summary>
      <param name="value1" vsli:raw="The first plane to compare.">要比较的第一个平面。</param>
      <param name="value2" vsli:raw="The second plane to compare.">要比较的第二个平面。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="value1" /> 和 <paramref name="value2" /> 不相等，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Plane.ToString">
      <summary vsli:raw="Returns the string representation of this plane object.">返回此平面对象的字符串表示形式。</summary>
      <returns vsli:raw="A string that represents this &lt;see cref=&quot;T:System.Numerics.Plane&quot; /&gt; object.">表示此 <see cref="T:System.Numerics.Plane" /> 对象的字符串。</returns>
    </member>
    <member name="M:System.Numerics.Plane.Transform(System.Numerics.Plane,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transforms a normalized plane by a 4x4 matrix.">通过 4x4 矩阵转换规范化的平面。</summary>
      <param name="plane" vsli:raw="The normalized plane to transform.">要转换的规范化平面。</param>
      <param name="matrix" vsli:raw="The transformation matrix to apply to &lt;paramref name=&quot;plane&quot; /&gt;.">要应用于 <paramref name="plane" /> 的变换矩阵。</param>
      <returns vsli:raw="The transformed plane.">已转换的平面。</returns>
    </member>
    <member name="M:System.Numerics.Plane.Transform(System.Numerics.Plane,System.Numerics.Quaternion)">
      <summary vsli:raw="Transforms a normalized plane by a Quaternion rotation.">通过四元数旋转转换规范化平面。</summary>
      <param name="plane" vsli:raw="The normalized plane to transform.">要转换的规范化平面。</param>
      <param name="rotation" vsli:raw="The Quaternion rotation to apply to the plane.">要应用于平面的四元数旋转。</param>
      <returns vsli:raw="A new plane that results from applying the Quaternion rotation.">应用四元数旋转得到的新平面。</returns>
    </member>
    <member name="T:System.Numerics.Quaternion">
      <summary vsli:raw="Represents a vector that is used to encode three-dimensional physical rotations.">表示一个用于对三维物理旋转进行编码的向量。</summary>
    </member>
    <member name="M:System.Numerics.Quaternion.#ctor(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Creates a quaternion from the specified vector and rotation parts.">从指定向量和旋转部分创建四元数。</summary>
      <param name="vectorPart" vsli:raw="The vector part of the quaternion.">四元数的向量部分。</param>
      <param name="scalarPart" vsli:raw="The rotation part of the quaternion.">四元数的旋转部分。</param>
    </member>
    <member name="M:System.Numerics.Quaternion.#ctor(System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Constructs a quaternion from the specified components.">从指定分量构造四元数。</summary>
      <param name="x" vsli:raw="The value to assign to the X component of the quaternion.">要分配给四元数的 X 分量的值。</param>
      <param name="y" vsli:raw="The value to assign to the Y component of the quaternion.">要分配给四元数的 Y 分量的值。</param>
      <param name="z" vsli:raw="The value to assign to the Z component of the quaternion.">要分配给四元数的 Z 分量的值。</param>
      <param name="w" vsli:raw="The value to assign to the W component of the quaternion.">要分配给四元数的 W 分量的值。</param>
    </member>
    <member name="M:System.Numerics.Quaternion.Add(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Adds each element in one quaternion with its corresponding element in a second quaternion.">将一个四元数中的每个元素与第二个四元数中的对应元素相加。</summary>
      <param name="value1" vsli:raw="The first quaternion.">第一个四元数。</param>
      <param name="value2" vsli:raw="The second quaternion.">第二个四元数。</param>
      <returns vsli:raw="The quaternion that contains the summed values of &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt;.">包含 <paramref name="value1" /> 和 <paramref name="value2" /> 的总和值的四元数。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Concatenate(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Concatenates two quaternions.">连接两个四元数。</summary>
      <param name="value1" vsli:raw="The first quaternion rotation in the series.">序列中的第一个四元数旋转。</param>
      <param name="value2" vsli:raw="The second quaternion rotation in the series.">序列中的第二个四元数旋转。</param>
      <returns vsli:raw="A new quaternion representing the concatenation of the &lt;paramref name=&quot;value1&quot; /&gt; rotation followed by the &lt;paramref name=&quot;value2&quot; /&gt; rotation.">一个新四元数，表示 <paramref name="value1" /> 旋转后跟 <paramref name="value2" /> 旋转的连接。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Conjugate(System.Numerics.Quaternion)">
      <summary vsli:raw="Returns the conjugate of a specified quaternion.">返回指定四元数的共轭。</summary>
      <param name="value" vsli:raw="The quaternion.">四元数。</param>
      <returns vsli:raw="A new quaternion that is the conjugate of &lt;see langword=&quot;value&quot; /&gt;.">作为 <see langword="value" /> 的共轭的新四元数。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.CreateFromAxisAngle(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Creates a quaternion from a unit vector and an angle to rotate around the vector.">从一个单位向量以及围绕该向量旋转的角度创建四元数。</summary>
      <param name="axis" vsli:raw="The unit vector to rotate around.">要围绕其旋转的单位向量。</param>
      <param name="angle" vsli:raw="The angle, in radians, to rotate around the vector.">用于围绕向量旋转的角度（以弧度表示）。</param>
      <returns vsli:raw="The newly created quaternion.">新创建的四元数。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.CreateFromRotationMatrix(System.Numerics.Matrix4x4)">
      <summary vsli:raw="Creates a quaternion from the specified rotation matrix.">从指定旋转矩阵创建四元数。</summary>
      <param name="matrix" vsli:raw="The rotation matrix.">旋转矩阵。</param>
      <returns vsli:raw="The newly created quaternion.">新创建的四元数。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.CreateFromYawPitchRoll(System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a new quaternion from the given yaw, pitch, and roll.">从给定的绕 Y 轴旋转、绕 X 轴旋转和绕 Z 轴旋转创建新四元数。</summary>
      <param name="yaw" vsli:raw="The yaw angle, in radians, around the Y axis.">绕 Y 轴旋转的角度（以弧度表示）。</param>
      <param name="pitch" vsli:raw="The pitch angle, in radians, around the X axis.">绕 X 轴旋转的角度（以弧度表示）。</param>
      <param name="roll" vsli:raw="The roll angle, in radians, around the Z axis.">绕 Z 轴旋转的角度（以弧度表示）。</param>
      <returns vsli:raw="The resulting quaternion.">生成的四元数。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Divide(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Divides one quaternion by a second quaternion.">将一个四元数除以第二个四元数。</summary>
      <param name="value1" vsli:raw="The dividend.">被除数。</param>
      <param name="value2" vsli:raw="The divisor.">除数。</param>
      <returns vsli:raw="The quaternion that results from dividing &lt;paramref name=&quot;value1&quot; /&gt; by &lt;paramref name=&quot;value2&quot; /&gt;.">将 <paramref name="value1" /> 除以 <paramref name="value2" /> 得到的结果四元数。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Dot(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Calculates the dot product of two quaternions.">计算两个四元数的点积。</summary>
      <param name="quaternion1" vsli:raw="The first quaternion.">第一个四元数。</param>
      <param name="quaternion2" vsli:raw="The second quaternion.">第二个四元数。</param>
      <returns vsli:raw="The dot product.">点积。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Equals(System.Numerics.Quaternion)">
      <summary vsli:raw="Returns a value that indicates whether this instance and another quaternion are equal.">返回一个值，该值指示此实例是否与另一个四元数相等。</summary>
      <param name="other" vsli:raw="The other quaternion.">另一个四元数。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two quaternions are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果两个四元数相等，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance and a specified object are equal.">返回一个值，该值指示此实例是否与指定对象相等。</summary>
      <param name="obj" vsli:raw="The object to compare with the current instance.">要与当前实例进行比较的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;obj&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, the method returns &lt;see langword=&quot;false&quot; /&gt;.">如果当前实例与 <paramref name="obj" /> 相等，则为 <see langword="true" />；否则为 <see langword="false" />。 如果 <paramref name="obj" /> 为 <see langword="null" />，则此方法返回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">返回此实例的哈希代码。</summary>
      <returns vsli:raw="The hash code.">哈希代码。</returns>
    </member>
    <member name="P:System.Numerics.Quaternion.Identity">
      <summary vsli:raw="Gets a quaternion that represents no rotation.">获取一个表示无旋转的四元数。</summary>
      <returns vsli:raw="A quaternion whose values are &lt;c&gt;(0, 0, 0, 1)&lt;/c&gt;.">其值为<c>(0, 0, 0, 1)</c>的四元数。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Inverse(System.Numerics.Quaternion)">
      <summary vsli:raw="Returns the inverse of a quaternion.">返回四元数的逆。</summary>
      <param name="value" vsli:raw="The quaternion.">四元数。</param>
      <returns vsli:raw="The inverted quaternion.">求逆后的四元数。</returns>
    </member>
    <member name="P:System.Numerics.Quaternion.IsIdentity">
      <summary vsli:raw="Gets a value that indicates whether the current instance is the identity quaternion.">获取一个指示当前实例是否为 Identity 四元数的值。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance is the identity quaternion; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果当前实例是 Identity 四元数，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Length">
      <summary vsli:raw="Calculates the length of the quaternion.">计算四元数的长度。</summary>
      <returns vsli:raw="The computed length of the quaternion.">四元数的计算长度。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.LengthSquared">
      <summary vsli:raw="Calculates the squared length of the quaternion.">计算四元数的长度平方值。</summary>
      <returns vsli:raw="The length squared of the quaternion.">四元数的长度平方值。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Lerp(System.Numerics.Quaternion,System.Numerics.Quaternion,System.Single)">
      <summary vsli:raw="Performs a linear interpolation between two quaternions based on a value that specifies the weighting of the second quaternion.">基于指定第二个四元数的权重的值在两个四元数之间执行线性内插。</summary>
      <param name="quaternion1" vsli:raw="The first quaternion.">第一个四元数。</param>
      <param name="quaternion2" vsli:raw="The second quaternion.">第二个四元数。</param>
      <param name="amount" vsli:raw="The relative weight of &lt;paramref name=&quot;quaternion2&quot; /&gt; in the interpolation.">
        <paramref name="quaternion2" /> 在内插中的相对权重。</param>
      <returns vsli:raw="The interpolated quaternion.">内插的四元数。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Multiply(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Returns the quaternion that results from multiplying two quaternions together.">返回将两个四元数相乘得到的四元数。</summary>
      <param name="value1" vsli:raw="The first quaternion.">第一个四元数。</param>
      <param name="value2" vsli:raw="The second quaternion.">第二个四元数。</param>
      <returns vsli:raw="The product quaternion.">乘积四元数。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Multiply(System.Numerics.Quaternion,System.Single)">
      <summary vsli:raw="Returns the quaternion that results from scaling all the components of a specified quaternion by a scalar factor.">返回按标量系数缩放指定四元数的所有分量后得到的四元数。</summary>
      <param name="value1" vsli:raw="The source quaternion.">源四元数。</param>
      <param name="value2" vsli:raw="The scalar value.">标量值。</param>
      <returns vsli:raw="The scaled quaternion.">缩放的四元数。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Negate(System.Numerics.Quaternion)">
      <summary vsli:raw="Reverses the sign of each component of the quaternion.">反转四元数的每个分量的符号。</summary>
      <param name="value" vsli:raw="The quaternion to negate.">要求反的四元数。</param>
      <returns vsli:raw="The negated quaternion.">求反后的四元数。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Normalize(System.Numerics.Quaternion)">
      <summary vsli:raw="Divides each component of a specified &lt;see cref=&quot;T:System.Numerics.Quaternion&quot; /&gt; by its length.">将指定 <see cref="T:System.Numerics.Quaternion" /> 的每个分量除以其长度。</summary>
      <param name="value" vsli:raw="The quaternion to normalize.">要规范化的四元数。</param>
      <returns vsli:raw="The normalized quaternion.">规范化的四元数。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_Addition(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Adds each element in one quaternion with its corresponding element in a second quaternion.">将一个四元数中的每个元素与第二个四元数中的对应元素相加。</summary>
      <param name="value1" vsli:raw="The first quaternion.">第一个四元数。</param>
      <param name="value2" vsli:raw="The second quaternion.">第二个四元数。</param>
      <returns vsli:raw="The quaternion that contains the summed values of &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt;.">包含 <paramref name="value1" /> 和 <paramref name="value2" /> 的总和值的四元数。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_Division(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Divides one quaternion by a second quaternion.">将一个四元数除以第二个四元数。</summary>
      <param name="value1" vsli:raw="The dividend.">被除数。</param>
      <param name="value2" vsli:raw="The divisor.">除数。</param>
      <returns vsli:raw="The quaternion that results from dividing &lt;paramref name=&quot;value1&quot; /&gt; by &lt;paramref name=&quot;value2&quot; /&gt;.">将 <paramref name="value1" /> 除以 <paramref name="value2" /> 得到的结果四元数。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_Equality(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Returns a value that indicates whether two quaternions are equal.">返回一个值，该值指示两个四元数是否相等。</summary>
      <param name="value1" vsli:raw="The first quaternion to compare.">要比较的第一个四元数。</param>
      <param name="value2" vsli:raw="The second quaternion to compare.">要比较的第二个四元数。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two quaternions are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果两个四元数相等，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_Inequality(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Returns a value that indicates whether two quaternions are not equal.">返回一个值，该值指示两个四元数是否不相等。</summary>
      <param name="value1" vsli:raw="The first quaternion to compare.">要比较的第一个四元数。</param>
      <param name="value2" vsli:raw="The second quaternion to compare.">要比较的第二个四元数。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="value1" /> 和 <paramref name="value2" /> 不相等，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_Multiply(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Returns the quaternion that results from multiplying two quaternions together.">返回将两个四元数相乘得到的四元数。</summary>
      <param name="value1" vsli:raw="The first quaternion.">第一个四元数。</param>
      <param name="value2" vsli:raw="The second quaternion.">第二个四元数。</param>
      <returns vsli:raw="The product quaternion.">乘积四元数。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_Multiply(System.Numerics.Quaternion,System.Single)">
      <summary vsli:raw="Returns the quaternion that results from scaling all the components of a specified quaternion by a scalar factor.">返回按标量系数缩放指定四元数的所有分量后得到的四元数。</summary>
      <param name="value1" vsli:raw="The source quaternion.">源四元数。</param>
      <param name="value2" vsli:raw="The scalar value.">标量值。</param>
      <returns vsli:raw="The scaled quaternion.">缩放的四元数。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_Subtraction(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Subtracts each element in a second quaternion from its corresponding element in a first quaternion.">从第一个四元数中的每个元素中减去第二个四元数中的对应元素。</summary>
      <param name="value1" vsli:raw="The first quaternion.">第一个四元数。</param>
      <param name="value2" vsli:raw="The second quaternion.">第二个四元数。</param>
      <returns vsli:raw="The quaternion containing the values that result from subtracting each element in &lt;paramref name=&quot;value2&quot; /&gt; from its corresponding element in &lt;paramref name=&quot;value1&quot; /&gt;.">包含从 <paramref name="value1" /> 中的每个元素中减去 <paramref name="value2" /> 中的对应元素得到的值的四元数。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_UnaryNegation(System.Numerics.Quaternion)">
      <summary vsli:raw="Reverses the sign of each component of the quaternion.">反转四元数的每个分量的符号。</summary>
      <param name="value" vsli:raw="The quaternion to negate.">要求反的四元数。</param>
      <returns vsli:raw="The negated quaternion.">求反后的四元数。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Slerp(System.Numerics.Quaternion,System.Numerics.Quaternion,System.Single)">
      <summary vsli:raw="Interpolates between two quaternions, using spherical linear interpolation.">使用球状线性内插，在两个四元数之间进行内插。</summary>
      <param name="quaternion1" vsli:raw="The first quaternion.">第一个四元数。</param>
      <param name="quaternion2" vsli:raw="The second quaternion.">第二个四元数。</param>
      <param name="amount" vsli:raw="The relative weight of the second quaternion in the interpolation.">第二个四元数在内插中的相对权重。</param>
      <returns vsli:raw="The interpolated quaternion.">内插的四元数。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Subtract(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Subtracts each element in a second quaternion from its corresponding element in a first quaternion.">从第一个四元数中的每个元素中减去第二个四元数中的对应元素。</summary>
      <param name="value1" vsli:raw="The first quaternion.">第一个四元数。</param>
      <param name="value2" vsli:raw="The second quaternion.">第二个四元数。</param>
      <returns vsli:raw="The quaternion containing the values that result from subtracting each element in &lt;paramref name=&quot;value2&quot; /&gt; from its corresponding element in &lt;paramref name=&quot;value1&quot; /&gt;.">包含从 <paramref name="value1" /> 中的每个元素中减去 <paramref name="value2" /> 中的对应元素得到的值的四元数。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.ToString">
      <summary vsli:raw="Returns a string that represents this quaternion.">返回表示此四元数的字符串。</summary>
      <returns vsli:raw="The string representation of this quaternion.">此四元数的字符串表示形式。</returns>
    </member>
    <member name="F:System.Numerics.Quaternion.W">
      <summary vsli:raw="The rotation component of the quaternion.">四元数的旋转分量。</summary>
    </member>
    <member name="F:System.Numerics.Quaternion.X">
      <summary vsli:raw="The X value of the vector component of the quaternion.">四元数向量分量的 X 值。</summary>
    </member>
    <member name="F:System.Numerics.Quaternion.Y">
      <summary vsli:raw="The Y value of the vector component of the quaternion.">四元数向量分量的 Y 值。</summary>
    </member>
    <member name="F:System.Numerics.Quaternion.Z">
      <summary vsli:raw="The Z value of the vector component of the quaternion.">四元数向量分量的 Z 值。</summary>
    </member>
    <member name="T:System.Numerics.Vector">
      <summary vsli:raw="Provides a collection of static methods for creating, manipulating, and otherwise operating on generic vectors.">提供用于创建、操作、结合使用和转换泛型向量的静态简便方法的集合。</summary>
    </member>
    <member name="M:System.Numerics.Vector.Abs``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements are the absolute values of the given vector's elements.">返回一个新向量，其元素是给定向量的元素的绝对值。</summary>
      <param name="value" vsli:raw="The source vector.">源向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量类型。 <c>T</c>可以是任何基元数值类型。</typeparam>
      <returns vsli:raw="The absolute value vector.">绝对值向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Add``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose values are the sum of each pair of elements from two given vectors.">返回一个新向量，其值是两个给定向量中的每对元素的总和。</summary>
      <param name="left" vsli:raw="The first vector.">第一个向量。</param>
      <param name="right" vsli:raw="The second vector.">第二个向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量类型。 <c>T</c>可以是任何基元数值类型。</typeparam>
      <returns vsli:raw="The summed vector.">总和向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.AndNot``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector by performing a bitwise And Not operation on each pair of corresponding elements in two vectors.">通过在两个向量中的每对相应元素上执行按位“与非”运算，返回一个新向量。</summary>
      <param name="left" vsli:raw="The first vector.">第一个向量。</param>
      <param name="right" vsli:raw="The second vector.">第二个向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量类型。 <c>T</c>可以是任何基元数值类型。</typeparam>
      <returns vsli:raw="The resulting vector.">所得的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorByte``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a vector of unsigned bytes.">将指定向量的位重新解释为无符号字节向量的位。</summary>
      <param name="value" vsli:raw="The source vector.">源向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量类型。 <c>T</c>可以是任何基元数值类型。</typeparam>
      <returns vsli:raw="The reinterpreted vector.">重新解释后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorDouble``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a double-precision floating-point vector.">将指定向量的位重新解释为双精度浮点向量的位。</summary>
      <param name="value" vsli:raw="The source vector.">源向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量类型。 <c>T</c>可以是任何基元数值类型。</typeparam>
      <returns vsli:raw="The reinterpreted vector.">重新解释后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorInt16``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a vector of 16-bit integers.">将指定向量的位重新解释为 16 位整型向量的位。</summary>
      <param name="value" vsli:raw="The source vector.">源向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量类型。 <c>T</c>可以是任何基元数值类型。</typeparam>
      <returns vsli:raw="The reinterpreted vector.">重新解释后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorInt32``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a vector of integers.">将指定向量的位重新解释为整型向量的位。</summary>
      <param name="value" vsli:raw="The source vector.">源向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量类型。 <c>T</c>可以是任何基元数值类型。</typeparam>
      <returns vsli:raw="The reinterpreted vector.">重新解释后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorInt64``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a vector of long integers.">将指定向量的位重新解释为长整型向量的位。</summary>
      <param name="value" vsli:raw="The source vector.">源向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量类型。 <c>T</c>可以是任何基元数值类型。</typeparam>
      <returns vsli:raw="The reinterpreted vector.">重新解释后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorSByte``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a vector of signed bytes.">将指定向量的位重新解释为带符号字节向量的位。</summary>
      <param name="value" vsli:raw="The source vector.">源向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量类型。 <c>T</c>可以是任何基元数值类型。</typeparam>
      <returns vsli:raw="The reinterpreted vector.">重新解释后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorSingle``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a single-precision floating-point vector.">将指定向量的位重新解释为单精度浮点向量的位。</summary>
      <param name="value" vsli:raw="The source vector.">源向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量类型。 <c>T</c>可以是任何基元数值类型。</typeparam>
      <returns vsli:raw="The reinterpreted vector.">重新解释后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorUInt16``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a vector of unsigned 16-bit integers.">将指定向量的位重新解释为无符号 16 位整型向量的位。</summary>
      <param name="value" vsli:raw="The source vector.">源向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量类型。 <c>T</c>可以是任何基元数值类型。</typeparam>
      <returns vsli:raw="The reinterpreted vector.">重新解释后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorUInt32``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a vector of unsigned integers.">将指定向量的位重新解释为无符号整型向量的位。</summary>
      <param name="value" vsli:raw="The source vector.">源向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量类型。 <c>T</c>可以是任何基元数值类型。</typeparam>
      <returns vsli:raw="The reinterpreted vector.">重新解释后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorUInt64``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a vector of unsigned long integers.">将指定向量的位重新解释为无符号长整型向量的位。</summary>
      <param name="value" vsli:raw="The source vector.">源向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量类型。 <c>T</c>可以是任何基元数值类型。</typeparam>
      <returns vsli:raw="The reinterpreted vector.">重新解释后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.BitwiseAnd``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector by performing a bitwise &lt;see langword=&quot;And&quot; /&gt; operation on each pair of elements in two vectors.">通过在两个向量中的每对元素上执行按位 <see langword="And" /> 运算，返回一个新向量。</summary>
      <param name="left" vsli:raw="The first vector.">第一个向量。</param>
      <param name="right" vsli:raw="The second vector.">第二个向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量类型。 <c>T</c>可以是任何基元数值类型。</typeparam>
      <returns vsli:raw="The resulting vector.">所得的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.BitwiseOr``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector by performing a bitwise &lt;see langword=&quot;Or&quot; /&gt; operation on each pair of elements in two vectors.">通过在两个向量中的每对元素上执行按位 <see langword="Or" /> 运算，返回一个新向量。</summary>
      <param name="left" vsli:raw="The first vector.">第一个向量。</param>
      <param name="right" vsli:raw="The second vector.">第二个向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量类型。 <c>T</c>可以是任何基元数值类型。</typeparam>
      <returns vsli:raw="The resulting vector.">所得的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConditionalSelect(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
      <summary vsli:raw="Creates a new single-precision vector with elements selected between two specified single-precision source vectors based on an integral mask vector.">使用基于整型遮罩向量的两个指定单精度源向量之间的选定元素，创建一个新的单精度向量。</summary>
      <param name="condition" vsli:raw="The integral mask vector used to drive selection.">用于驱动选择的整型遮罩向量。</param>
      <param name="left" vsli:raw="The first source vector.">第一个源向量。</param>
      <param name="right" vsli:raw="The second source vector.">第二个源向量。</param>
      <returns vsli:raw="The new vector with elements selected based on the mask.">使用基于掩码的选定元素的新向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConditionalSelect(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Creates a new double-precision vector with elements selected between two specified double-precision source vectors based on an integral mask vector.">使用基于整型遮罩向量的两个指定双精度源向量之间的选定元素，创建一个新的双精度向量。</summary>
      <param name="condition" vsli:raw="The integral mask vector used to drive selection.">用于驱动选择的整型遮罩向量。</param>
      <param name="left" vsli:raw="The first source vector.">第一个源向量。</param>
      <param name="right" vsli:raw="The second source vector.">第二个源向量。</param>
      <returns vsli:raw="The new vector with elements selected based on the mask.">使用基于掩码的选定元素的新向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConditionalSelect``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Creates a new vector of a specified type with elements selected between two specified source vectors of the same type based on an integral mask vector.">使用基于整型遮罩向量的两个同一类型的指定源向量之间的选定元素，创建一个指定类型的新向量。</summary>
      <param name="condition" vsli:raw="The integral mask vector used to drive selection.">用于驱动选择的整型遮罩向量。</param>
      <param name="left" vsli:raw="The first source vector.">第一个源向量。</param>
      <param name="right" vsli:raw="The second source vector.">第二个源向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量类型。 <c>T</c>可以是任何基元数值类型。</typeparam>
      <returns vsli:raw="The new vector with elements selected based on the mask.">使用基于掩码的选定元素的新向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToDouble(System.Numerics.Vector{System.Int64})">
      <summary vsli:raw="Converts a &lt;c&gt;Vector&amp;lt;Int64&amp;gt;&lt;/c&gt; to a &lt;c&gt;Vector&amp;lt;Double&amp;gt;&lt;/c&gt;.">将 <see cref="System.Numerics.Vector{System.Int64}" /> 转换为 <see cref="System.Numerics.Vector{System.Double}" />。</summary>
      <param name="value" vsli:raw="The source vector.">源向量。</param>
      <returns vsli:raw="The converted vector.">转换后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToDouble(System.Numerics.Vector{System.UInt64})">
      <summary vsli:raw="Converts a &lt;c&gt;Vector&amp;lt;UInt64&amp;gt;&lt;/c&gt; to a &lt;c&gt;Vector&amp;lt;Double&amp;gt;&lt;/c&gt;.">将 <see cref="System.Numerics.Vector{System.UInt64}" /> 转换为 <see cref="System.Numerics.Vector{System.Double}" />。</summary>
      <param name="value" vsli:raw="The source vector.">源向量。</param>
      <returns vsli:raw="The converted vector.">转换后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToInt32(System.Numerics.Vector{System.Single})">
      <summary vsli:raw="Converts a &lt;c&gt;Vector&amp;lt;Single&amp;gt;&lt;/c&gt; to a &lt;c&gt;Vector&amp;lt;Int32&amp;gt;&lt;/c&gt;.">将 <see cref="System.Numerics.Vector{System.Single}" /> 转换为 <see cref="System.Numerics.Vector{System.Int32}" />。</summary>
      <param name="value" vsli:raw="The source vector.">源向量。</param>
      <returns vsli:raw="The converted vector.">转换后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToInt64(System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Converts a &lt;c&gt;Vector&amp;lt;Double&amp;gt;&lt;/c&gt; to a &lt;c&gt;Vector&amp;lt;Int64&amp;gt;&lt;/c&gt;.">将 <see cref="System.Numerics.Vector{System.Double}" /> 转换为 <see cref="System.Numerics.Vector{System.Int64}" />。</summary>
      <param name="value" vsli:raw="The source vector.">源向量。</param>
      <returns vsli:raw="The converted vector.">转换后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToSingle(System.Numerics.Vector{System.Int32})">
      <summary vsli:raw="Converts a &lt;c&gt;Vector&amp;lt;Int32&amp;gt;&lt;/c&gt; to a &lt;c&gt;Vector&amp;lt;Single&amp;gt;&lt;/c&gt;.">将 <see cref="System.Numerics.Vector{System.Int32}" /> 转换为 <see cref="System.Numerics.Vector{System.Single}" />。</summary>
      <param name="value" vsli:raw="The source vector.">源向量。</param>
      <returns vsli:raw="The converted vector.">转换后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToSingle(System.Numerics.Vector{System.UInt32})">
      <summary vsli:raw="Converts a &lt;c&gt;Vector&amp;lt;UInt32&amp;gt;&lt;/c&gt; to a &lt;c&gt;Vector&amp;lt;Single&amp;gt;&lt;/c&gt;.">将 <see cref="System.Numerics.Vector{System.UInt32}" /> 转换为 <see cref="System.Numerics.Vector{System.Single}" />。</summary>
      <param name="value" vsli:raw="The source vector.">源向量。</param>
      <returns vsli:raw="The converted vector.">转换后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToUInt32(System.Numerics.Vector{System.Single})">
      <summary vsli:raw="Converts a &lt;c&gt;Vector&amp;lt;Single&amp;gt;&lt;/c&gt; to a &lt;c&gt;Vector&amp;lt;UInt32&amp;gt;&lt;/c&gt;.">将 <see cref="System.Numerics.Vector{System.Single}" /> 转换为 <see cref="System.Numerics.Vector{System.UInt32}" />。</summary>
      <param name="value" vsli:raw="The source vector.">源向量。</param>
      <returns vsli:raw="The converted vector.">转换后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToUInt64(System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Converts a &lt;c&gt;Vector&amp;lt;Double&amp;gt;&lt;/c&gt; to a &lt;c&gt;Vector&amp;lt;UInt64&amp;gt;&lt;/c&gt;.">将 <see cref="System.Numerics.Vector{System.Double}" /> 转换为 <see cref="System.Numerics.Vector{System.UInt64}" />。</summary>
      <param name="value" vsli:raw="The source vector.">源向量。</param>
      <returns vsli:raw="The converted vector.">转换后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Divide``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose values are the result of dividing the first vector's elements by the corresponding elements in the second vector.">返回一个新向量，其值是第一个向量的元素除以第二个向量中的相应元素所得的结果。</summary>
      <param name="left" vsli:raw="The first vector.">第一个向量。</param>
      <param name="right" vsli:raw="The second vector.">第二个向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量类型。 <c>T</c>可以是任何基元数值类型。</typeparam>
      <returns vsli:raw="The divided vector.">相除后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Dot``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns the dot product of two vectors.">返回两个向量的点积。</summary>
      <param name="left" vsli:raw="The first vector.">第一个向量。</param>
      <param name="right" vsli:raw="The second vector.">第二个向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量类型。 <c>T</c>可以是任何基元数值类型。</typeparam>
      <returns vsli:raw="The dot product.">点积。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Equals(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in two specified double-precision vectors are equal.">返回一个新的整型向量，其元素指示两个指定双精度向量中的元素是否相等。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比较的第一个向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比较的第二个向量。</param>
      <returns vsli:raw="The resulting integral vector.">所得的整型向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Equals(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in two specified integral vectors are equal.">返回一个新的整型向量，其元素指示两个指定整型向量中的元素是否相等。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比较的第一个向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比较的第二个向量。</param>
      <returns vsli:raw="The resulting integral vector.">所得的整型向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Equals(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
      <summary vsli:raw="Returns a new vector whose elements signal whether the elements in two specified long integer vectors are equal.">返回一个新向量，其元素指示两个指定的长整型向量中的元素是否相等。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比较的第一个向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比较的第二个向量。</param>
      <returns vsli:raw="The resulting long integer vector.">所得的长整型向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Equals(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in two specified single-precision vectors are equal.">返回一个新的整型向量，其元素指示两个指定单精度向量中的元素是否相等。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比较的第一个向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比较的第二个向量。</param>
      <returns vsli:raw="The resulting integral vector.">所得的整型向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Equals``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector of a specified type whose elements signal whether the elements in two specified vectors of the same type are equal.">返回一个指定类型的新向量，其元素指示两个同一类型的指定向量中的元素是否相等。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比较的第一个向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比较的第二个向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量类型。 <c>T</c>可以是任何基元数值类型。</typeparam>
      <returns vsli:raw="The resulting vector.">所得的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.EqualsAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether each pair of elements in the given vectors is equal.">返回一个值，该值指示两个给定向量中的每对元素是否相等。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比较的第一个向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比较的第二个向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量类型。 <c>T</c>可以是任何基元数值类型。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if all elements in &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 和 <paramref name="right" /> 中的所有元素相等，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector.EqualsAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether any single pair of elements in the given vectors is equal.">返回一个值，该值指示两个给定向量中的任意元素对是否相等。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比较的第一个向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比较的第二个向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量类型。 <c>T</c>可以是任何基元数值类型。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any element pair in &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; is equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 和 <paramref name="right" /> 中的任意元素对相等，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one double-precision floating-point vector are greater than their corresponding elements in a second double-precision floating-point vector.">返回一个新的整型向量，其元素指示一个双精度浮点向量中的元素是否大于第二个双精度浮点向量中的相应元素。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比较的第一个向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比较的第二个向量。</param>
      <returns vsli:raw="The resulting integral vector.">所得的整型向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one integral vector are greater than their corresponding elements in a second integral vector.">返回一个新的整型向量，其元素指示一个整型向量中的元素是否大于第二个整型向量中的相应元素。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比较的第一个向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比较的第二个向量。</param>
      <returns vsli:raw="The resulting integral vector.">所得的整型向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
      <summary vsli:raw="Returns a new long integer vector whose elements signal whether the elements in one long integer vector are greater than their corresponding elements in a second long integer vector.">返回一个新的长整型向量，其元素指示一个长整型向量中的元素是否大于第二个长整型向量中的相应元素。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比较的第一个向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比较的第二个向量。</param>
      <returns vsli:raw="The resulting long integer vector.">所得的长整型向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one single-precision floating-point vector are greater than their corresponding elements in a second single-precision floating-point vector.">返回一个新的整型向量，其元素指示一个单精度浮点向量中的元素是否大于第二个单精度浮点向量中的相应元素。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比较的第一个向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比较的第二个向量。</param>
      <returns vsli:raw="The resulting integral vector.">所得的整型向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThan``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements signal whether the elements in one vector of a specified type are greater than their corresponding elements in the second vector of the same time.">返回一个新向量，其元素指示一个指定类型的向量中的元素是否大于同一类型的第二个向量中的相应元素。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比较的第一个向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比较的第二个向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量类型。 <c>T</c>可以是任何基元数值类型。</typeparam>
      <returns vsli:raw="The resulting vector.">所得的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether all elements in the first vector are greater than the corresponding elements in the second vector.">返回一个值，该值指示第一个向量中的所有元素是否大于第二个向量中的相应元素。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比较的第一个向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比较的第二个向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量类型。 <c>T</c>可以是任何基元数值类型。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if all elements in &lt;paramref name=&quot;left&quot; /&gt; are greater than the corresponding elements in &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 中的所有元素大于 <paramref name="right" /> 中的相应元素，则为 <see langword="true" />； 否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether any element in the first vector is greater than the corresponding element in the second vector.">返回一个值，该值指示第一个向量中的任意元素是否大于第二个向量中的相应元素。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比较的第一个向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比较的第二个向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量类型。 <c>T</c>可以是任何基元数值类型。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any element in &lt;paramref name=&quot;left&quot; /&gt; is greater than the corresponding element in &lt;paramref name=&quot;right&quot; /&gt;; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 中的任意元素大于 <paramref name="right" /> 中的相应元素，则为 <see langword="true" />； 否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one vector are greater than or equal to their corresponding elements in the second double-precision floating-point vector.">返回一个新的整型向量，其元素指示一个向量中的元素是否大于或等于第二个双精度浮点向量中的相应元素。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比较的第一个向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比较的第二个向量。</param>
      <returns vsli:raw="The resulting integral vector.">所得的整型向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one integral vector are greater than or equal to their corresponding elements in the second integral vector.">返回一个新的整型向量，其元素指示一个整型向量中的元素是否大于或等于第二个整型向量中的相应元素。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比较的第一个向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比较的第二个向量。</param>
      <returns vsli:raw="The resulting integral vector.">所得的整型向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
      <summary vsli:raw="Returns a new long integer vector whose elements signal whether the elements in one long integer vector are greater than or equal to their corresponding elements in the second long integer vector.">返回一个新的长整型向量，其元素指示一个长整型向量中的元素是否大于或等于第二个长整型向量中的相应元素。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比较的第一个向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比较的第二个向量。</param>
      <returns vsli:raw="The resulting long integer vector.">所得的长整型向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one vector are greater than or equal to their corresponding elements in the single-precision floating-point second vector.">返回一个新的整型向量，其元素指示一个向量中的元素是否大于或等于第二个单精度浮点向量中的相应元素。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比较的第一个向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比较的第二个向量。</param>
      <returns vsli:raw="The resulting integral vector.">所得的整型向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanOrEqual``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements signal whether the elements in one vector of a specified type are greater than or equal to their corresponding elements in the second vector of the same type.">返回一个新向量，其元素指示一个指定类型的向量中的元素是否大于或等于同一类型的第二个向量中的相应元素。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比较的第一个向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比较的第二个向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量类型。 <c>T</c>可以是任何基元数值类型。</typeparam>
      <returns vsli:raw="The resulting vector.">所得的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanOrEqualAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether all elements in the first vector are greater than or equal to all the corresponding elements in the second vector.">返回一个值，该值指示第一个向量中的所有元素是否大于或等于第二个向量中的所有相应元素。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比较的第一个向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比较的第二个向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量类型。 <c>T</c>可以是任何基元数值类型。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if all elements in &lt;paramref name=&quot;left&quot; /&gt; are greater than or equal to the corresponding elements in &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 中的所有元素大于或等于 <paramref name="right" /> 中的相应元素，则为 <see langword="true" />； 否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanOrEqualAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether any element in the first vector is greater than or equal to the corresponding element in the second vector.">返回一个值，该值指示第一个向量中的任意元素是否大于或等于第二个向量中的相应元素。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比较的第一个向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比较的第二个向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量类型。 <c>T</c>可以是任何基元数值类型。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any element in &lt;paramref name=&quot;left&quot; /&gt; is greater than or equal to the corresponding element in &lt;paramref name=&quot;right&quot; /&gt;; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 中的任意元素大于或等于 <paramref name="right" /> 中的相应元素，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Numerics.Vector.IsHardwareAccelerated">
      <summary vsli:raw="Gets a value that indicates whether vector operations are subject to hardware acceleration through JIT intrinsic support.">获取一个值，该值指示向量运算是否会通过 JIT 内在支持进行硬件加速。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if vector operations are subject to hardware acceleration; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果向量运算要进行硬件加速，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one double-precision floating-point vector are less than their corresponding elements in a second double-precision floating-point vector.">返回一个新的整型向量，其元素指示一个双精度浮点向量中的元素是否小于第二个双精度浮点向量中的相应元素。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比较的第一个向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比较的第二个向量。</param>
      <returns vsli:raw="The resulting integral vector.">所得的整型向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one integral vector are less than their corresponding elements in a second integral vector.">返回一个新的整型向量，其元素指示一个整型向量中的元素是否小于第二个整型向量中的相应元素。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比较的第一个向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比较的第二个向量。</param>
      <returns vsli:raw="The resulting integral vector.">所得的整型向量</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
      <summary vsli:raw="Returns a new long integer vector whose elements signal whether the elements in one long integer vector are less than their corresponding elements in a second long integer vector.">返回一个新的长整型向量，其元素指示一个长整型向量中的元素是否小于第二个长整型向量中的相应元素。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比较的第一个向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比较的第二个向量。</param>
      <returns vsli:raw="The resulting long integer vector.">所得的长整型向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one single-precision vector are less than their corresponding elements in a second single-precision vector.">返回一个新的整型向量，其元素指示一个单精度向量中的元素是否小于第二个单精度向量中的相应元素。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比较的第一个向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比较的第二个向量。</param>
      <returns vsli:raw="The resulting integral vector.">所得的整型向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThan``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector of a specified type whose elements signal whether the elements in one vector are less than their corresponding elements in the second vector.">返回一个指定类型的新向量，其元素指示一个向量中的元素是否小于第二个向量中的相应元素。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比较的第一个向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比较的第二个向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量类型。 <c>T</c>可以是任何基元数值类型。</typeparam>
      <returns vsli:raw="The resulting vector.">所得的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether all of the elements in the first vector are less than their corresponding elements in the second vector.">返回一个值，该值指示第一个向量中的所有元素是否小于第二个向量中的相应元素。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比较的第一个向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比较的第二个向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量类型。 <c>T</c>可以是任何基元数值类型。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if all of the elements in &lt;paramref name=&quot;left&quot; /&gt; are less than the corresponding elements in &lt;paramref name=&quot;right&quot; /&gt;; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 中的所有元素均小于 <paramref name="right" /> 中的相应元素，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether any element in the first vector is less than the corresponding element in the second vector.">返回一个值，该值指示第一个向量中的任意元素是否小于第二个向量中的相应元素。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比较的第一个向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比较的第二个向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量类型。 <c>T</c>可以是任何基元数值类型。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any element in &lt;paramref name=&quot;left&quot; /&gt; is less than the corresponding element in &lt;paramref name=&quot;right&quot; /&gt;; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 中的任意元素小于 <paramref name="right" /> 中的相应元素，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one double-precision floating-point vector are less than or equal to their corresponding elements in a second double-precision floating-point vector.">返回一个新的整型向量，其元素指示一个双精度浮点向量中的元素是否小于或等于第二个双精度浮点向量中的相应元素。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比较的第一个向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比较的第二个向量。</param>
      <returns vsli:raw="The resulting integral vector.">所得的整型向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one integral vector are less than or equal to their corresponding elements in a second integral vector.">返回一个新的整型向量，其元素指示一个整型向量中的元素是否小于或等于第二个整型向量中的相应元素。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比较的第一个向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比较的第二个向量。</param>
      <returns vsli:raw="The resulting integral vector.">所得的整型向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
      <summary vsli:raw="Returns a new long integer vector whose elements signal whether the elements in one long integer vector are less or equal to their corresponding elements in a second long integer vector.">返回一个新的长整型向量，其元素指示一个长整型向量中的元素是否小于或等于第二个长整型向量中的相应元素。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比较的第一个向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比较的第二个向量。</param>
      <returns vsli:raw="The resulting long integer vector.">所得的长整型向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one single-precision floating-point vector are less than or equal to their corresponding elements in a second single-precision floating-point vector.">返回一个新的整型向量，其元素指示一个单精度浮点向量中的元素是否小于或等于第二个单精度浮点向量中的相应元素。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比较的第一个向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比较的第二个向量。</param>
      <returns vsli:raw="The resulting integral vector.">所得的整型向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanOrEqual``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements signal whether the elements in one vector are less than or equal to their corresponding elements in the second vector.">返回一个新向量，其元素指示一个向量中的元素是否小于或等于第二个向量中的相应元素。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比较的第一个向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比较的第二个向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量类型。 <c>T</c>可以是任何基元数值类型。</typeparam>
      <returns vsli:raw="The resulting vector.">所得的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanOrEqualAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether all elements in the first vector are less than or equal to their corresponding elements in the second vector.">返回一个值，该值指示第一个向量中的所有元素是否小于或等于第二个向量中的相应元素。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比较的第一个向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比较的第二个向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量类型。 <c>T</c>可以是任何基元数值类型。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if all of the elements in &lt;paramref name=&quot;left&quot; /&gt; are less than or equal to the corresponding elements in &lt;paramref name=&quot;right&quot; /&gt;; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 中的所有元素均小于或等于 <paramref name="right" /> 中的相应元素，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanOrEqualAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether any element in the first vector is less than or equal to the corresponding element in the second vector.">返回一个值，该值指示第一个向量中的任意元素是否小于或等于第二个向量中的相应元素。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比较的第一个向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比较的第二个向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量类型。 <c>T</c>可以是任何基元数值类型。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any element in &lt;paramref name=&quot;left&quot; /&gt; is less than or equal to the corresponding element in &lt;paramref name=&quot;right&quot; /&gt;; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 中的任意元素小于或等于 <paramref name="right" /> 中的相应元素，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Max``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements are the maximum of each pair of elements in the two given vectors.">返回一个新向量，其元素是两个给定向量中每对元素的最大值。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比较的第一个向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比较的第二个向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量类型。 <c>T</c>可以是任何基元数值类型。</typeparam>
      <returns vsli:raw="The maximum vector.">最大向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Min``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements are the minimum of each pair of elements in the two given vectors.">返回一个新向量，其元素是两个给定向量中每对元素的最小值。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比较的第一个向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比较的第二个向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量类型。 <c>T</c>可以是任何基元数值类型。</typeparam>
      <returns vsli:raw="The minimum vector.">最小向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Multiply``1(``0,System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose values are a scalar value multiplied by each of the values of a specified vector.">返回一个新向量，其值为乘以指定向量中的每个值所得的标量值。</summary>
      <param name="left" vsli:raw="The scalar value.">标量值。</param>
      <param name="right" vsli:raw="The vector.">向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量类型。 <c>T</c>可以是任何基元数值类型。</typeparam>
      <returns vsli:raw="The scaled vector.">缩放后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Multiply``1(System.Numerics.Vector{``0},``0)">
      <summary vsli:raw="Returns a new vector whose values are the values of a specified vector each multiplied by a scalar value.">返回一个新向量，其值是乘以标量值的指定向量的每个值。</summary>
      <param name="left" vsli:raw="The vector.">向量。</param>
      <param name="right" vsli:raw="The scalar value.">标量值。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量类型。 <c>T</c>可以是任何基元数值类型。</typeparam>
      <returns vsli:raw="The scaled vector.">缩放后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Multiply``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose values are the product of each pair of elements in two specified vectors.">返回一个新向量，其值是两个指定向量中的每对元素的乘积。</summary>
      <param name="left" vsli:raw="The first vector.">第一个向量。</param>
      <param name="right" vsli:raw="The second vector.">第二个向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量类型。 <c>T</c>可以是任何基元数值类型。</typeparam>
      <returns vsli:raw="The element-wise product vector.">元素方面的乘积向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Narrow(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Narrows two &lt;c&gt;Vector&amp;lt;Double&amp;gt;&lt;/c&gt; instances into one &lt;c&gt;Vector&amp;lt;Single&amp;gt;&lt;/c&gt;.">将两个 <see cref="System.Numerics.Vector{System.Double}" /> 实例缩小为一个 <see cref="System.Numerics.Vector{System.Single}" />。</summary>
      <param name="source1">第一个源向量，其元素成为返回值的较低索引元素。</param>
      <param name="source2">第二个源向量，其元素成为返回值的较高索引元素。</param>
      <returns vsli:raw="A &lt;c&gt;Vector&amp;lt;Single&amp;gt;&lt;/c&gt; containing elements narrowed from the source vectors.">一个包含从源向量缩小的元素的 <see cref="System.Numerics.Vector{System.Single}" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Narrow(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16})">
      <summary vsli:raw="Narrows two &lt;c&gt;Vector&amp;lt;Int16&amp;gt;&lt;/c&gt; instances into one &lt;c&gt;Vector&amp;lt;SByte&amp;gt;&lt;/c&gt;.">将两个 <see cref="System.Numerics.Vector{System.Int16}" /> 实例缩小为一个 <see cref="System.Numerics.Vector{System.SByte}" />。</summary>
      <param name="source1">第一个源向量，其元素成为返回值的较低索引元素。</param>
      <param name="source2">第二个源向量，其元素成为返回值的较高索引元素。</param>
      <returns vsli:raw="A &lt;c&gt;Vector&amp;lt;SByte&amp;gt;&lt;/c&gt; containing elements narrowed from the source vectors.">一个包含从源向量缩小的元素的 <see cref="System.Numerics.Vector{System.SByte}" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Narrow(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
      <summary vsli:raw="Narrows two &lt;c&gt;Vector&amp;lt;Int32&amp;gt;&lt;/c&gt; instances into one &lt;c&gt;Vector&amp;lt;Int16&amp;gt;&lt;/c&gt;.">将两个 <see cref="System.Numerics.Vector{System.Int32}" /> 实例缩小为一个 <see cref="System.Numerics.Vector{System.Int16}" />。</summary>
      <param name="source1">第一个源向量，其元素成为返回值的较低索引元素。</param>
      <param name="source2">第二个源向量，其元素成为返回值的较高索引元素。</param>
      <returns vsli:raw="A &lt;c&gt;Vector&amp;lt;Int16&amp;gt;&lt;/c&gt; containing elements narrowed from the source vectors.">一个包含从源向量缩小的元素的 <see cref="System.Numerics.Vector{System.Int16}" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Narrow(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
      <summary vsli:raw="Narrows two &lt;c&gt;Vector&amp;lt;Int64&amp;gt;&lt;/c&gt; instances into one &lt;c&gt;Vector&amp;lt;Int32&amp;gt;&lt;/c&gt;.">将两个 <see cref="System.Numerics.Vector{System.Int64}" /> 实例缩小为一个 <see cref="System.Numerics.Vector{System.Int32}" />。</summary>
      <param name="source1">第一个源向量，其元素成为返回值的较低索引元素。</param>
      <param name="source2">第二个源向量，其元素成为返回值的较高索引元素。</param>
      <returns vsli:raw="A &lt;c&gt;Vector&amp;lt;Int32&amp;gt;&lt;/c&gt; containing elements narrowed from the source vectors.">一个包含从源向量缩小的元素的 <see cref="System.Numerics.Vector{System.Int32}" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Narrow(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16})">
      <summary vsli:raw="Narrows two &lt;c&gt;Vector&amp;lt;UInt16&amp;gt;&lt;/c&gt; instances into one &lt;c&gt;Vector&amp;lt;Byte&amp;gt;&lt;/c&gt;.">将两个 <see cref="System.Numerics.Vector{System.UInt16}" /> 实例缩小为一个 <see cref="System.Numerics.Vector{System.Byte}" />。</summary>
      <param name="source1">第一个源向量，其元素成为返回值的较低索引元素。</param>
      <param name="source2">第二个源向量，其元素成为返回值的较高索引元素。</param>
      <returns vsli:raw="A &lt;c&gt;Vector&amp;lt;Byte&amp;gt;&lt;/c&gt; containing elements narrowed from the source vectors.">一个包含从源向量缩小的元素的 <see cref="System.Numerics.Vector{System.Byte}" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Narrow(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})">
      <summary vsli:raw="Narrows two &lt;c&gt;Vector&amp;lt;UInt32&amp;gt;&lt;/c&gt; instances into one &lt;c&gt;Vector&amp;lt;UInt16&amp;gt;&lt;/c&gt;.">将两个 <see cref="System.Numerics.Vector{System.UInt32}" /> 实例缩小为一个 <see cref="System.Numerics.Vector{System.UInt16}" />。</summary>
      <param name="source1">第一个源向量，其元素成为返回值的较低索引元素。</param>
      <param name="source2">第二个源向量，其元素成为返回值的较高索引元素。</param>
      <returns vsli:raw="A &lt;c&gt;Vector&amp;lt;UInt16&amp;gt;&lt;/c&gt; containing elements narrowed from the source vectors.">一个包含从源向量缩小的元素的 <see cref="System.Numerics.Vector{System.UInt16}" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Narrow(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})">
      <summary vsli:raw="Narrows two &lt;c&gt;Vector&amp;lt;UInt64&amp;gt;&lt;/c&gt; instances into one &lt;c&gt;Vector&amp;lt;UInt32&amp;gt;&lt;/c&gt;.">将两个 <see cref="System.Numerics.Vector{System.UInt64}" /> 实例缩小为一个 <see cref="System.Numerics.Vector{System.UInt32}" />。</summary>
      <param name="source1">第一个源向量，其元素成为返回值的较低索引元素。</param>
      <param name="source2">第二个源向量，其元素成为返回值的较高索引元素。</param>
      <returns vsli:raw="A &lt;c&gt;Vector&amp;lt;UInt32&amp;gt;&lt;/c&gt; containing elements narrowed from the source vectors.">一个包含从源向量缩小的元素的 <see cref="System.Numerics.Vector{System.UInt32}" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Negate``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements are the negation of the corresponding element in the specified vector.">返回一个新向量，其元素是对指定向量中相应元素的求反。</summary>
      <param name="value" vsli:raw="The source vector.">源向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量类型。 <c>T</c>可以是任何基元数值类型。</typeparam>
      <returns vsli:raw="The negated vector.">求反后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.OnesComplement``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements are obtained by taking the one's complement of a specified vector's elements.">返回一个新向量，其元素是通过取用指定向量的元素的二进制反码来获取的。</summary>
      <param name="value" vsli:raw="The source vector.">源向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量类型。 <c>T</c>可以是任何基元数值类型。</typeparam>
      <returns vsli:raw="The resulting vector.">所得的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.SquareRoot``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements are the square roots of a specified vector's elements.">返回一个新向量，其元素是指定向量的元素的平方根。</summary>
      <param name="value" vsli:raw="The source vector.">源向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量类型。 <c>T</c>可以是任何基元数值类型。</typeparam>
      <returns vsli:raw="The square root vector.">平方根向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Subtract``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose values are the difference between the elements in the second vector and their corresponding elements in the first vector.">返回一个新向量，其值是第二个向量中的元素与第一个向量中的相应元素的差。</summary>
      <param name="left" vsli:raw="The first vector.">第一个向量。</param>
      <param name="right" vsli:raw="The second vector.">第二个向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量类型。 <c>T</c>可以是任何基元数值类型。</typeparam>
      <returns vsli:raw="The difference vector.">差向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Widen(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.UInt16}@,System.Numerics.Vector{System.UInt16}@)">
      <summary vsli:raw="Widens a &lt;c&gt;Vector&amp;lt;Byte&amp;gt;&lt;/c&gt; into two &lt;c&gt;Vector&amp;lt;UInt16&amp;gt;&lt;/c&gt; instances.">将一个 <see cref="System.Numerics.Vector{System.Byte}" /> 扩大为两个 <see cref="System.Numerics.Vector{System.UInt16}" /> 实例。</summary>
      <param name="source" vsli:raw="The source vector whose elements are widened into the outputs.">元素被扩大为输出的源向量。</param>
      <param name="dest1">第一个输出向量，其元素将包含源向量中较低索引的扩大元素。</param>
      <param name="dest2">第二个输出向量，其元素将包含源向量中较高索引的扩大元素。</param>
    </member>
    <member name="M:System.Numerics.Vector.Widen(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int32}@,System.Numerics.Vector{System.Int32}@)">
      <summary vsli:raw="Widens a &lt;c&gt;Vector&amp;lt;Int16&amp;gt;&lt;/c&gt; into two &lt;c&gt;Vector&amp;lt;Int32&amp;gt;&lt;/c&gt; instances.">将一个 <see cref="System.Numerics.Vector{System.Int16}" /> 扩大为两个 <see cref="System.Numerics.Vector{System.Int32}" /> 实例。</summary>
      <param name="source" vsli:raw="The source vector whose elements are widened into the outputs.">元素被扩大为输出的源向量。</param>
      <param name="dest1">第一个输出向量，其元素将包含源向量中较低索引的扩大元素。</param>
      <param name="dest2">第二个输出向量，其元素将包含源向量中较高索引的扩大元素。</param>
    </member>
    <member name="M:System.Numerics.Vector.Widen(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int64}@,System.Numerics.Vector{System.Int64}@)">
      <summary vsli:raw="Widens a &lt;c&gt;Vector&amp;lt;Int32&amp;gt;&lt;/c&gt; into two &lt;c&gt;Vector&amp;lt;Int64&amp;gt;&lt;/c&gt; instances.">将一个 <see cref="System.Numerics.Vector{System.Int32}" /> 扩大为两个 <see cref="System.Numerics.Vector{System.Int64}" /> 实例。</summary>
      <param name="source" vsli:raw="The source vector whose elements are widened into the outputs.">元素被扩大为输出的源向量。</param>
      <param name="dest1">第一个输出向量，其元素将包含源向量中较低索引的扩大元素。</param>
      <param name="dest2">第二个输出向量，其元素将包含源向量中较高索引的扩大元素。</param>
    </member>
    <member name="M:System.Numerics.Vector.Widen(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.Int16}@,System.Numerics.Vector{System.Int16}@)">
      <summary vsli:raw="Widens a &lt;c&gt;Vector&amp;lt;SByte&amp;gt;&lt;/c&gt; into two &lt;c&gt;Vector&amp;lt;Int16&amp;gt;&lt;/c&gt; instances.">将一个 <see cref="System.Numerics.Vector{System.SByte}" /> 扩大为两个 <see cref="System.Numerics.Vector{System.Int16}" /> 实例。</summary>
      <param name="source" vsli:raw="The source vector whose elements are widened into the outputs.">元素被扩大为输出的源向量。</param>
      <param name="dest1">第一个输出向量，其元素将包含源向量中较低索引的扩大元素。</param>
      <param name="dest2">第二个输出向量，其元素将包含源向量中较高索引的扩大元素。</param>
    </member>
    <member name="M:System.Numerics.Vector.Widen(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Double}@,System.Numerics.Vector{System.Double}@)">
      <summary vsli:raw="Widens a &lt;c&gt;Vector&amp;lt;Single&amp;gt;&lt;/c&gt; into two &lt;c&gt;Vector&amp;lt;Double&amp;gt;&lt;/c&gt; instances.">将一个 <see cref="System.Numerics.Vector{System.Single}" /> 扩大为两个 <see cref="System.Numerics.Vector{System.Double}" /> 实例。</summary>
      <param name="source" vsli:raw="The source vector whose elements are widened into the outputs.">元素被扩大为输出的源向量。</param>
      <param name="dest1">第一个输出向量，其元素将包含源向量中较低索引的扩大元素。</param>
      <param name="dest2">第二个输出向量，其元素将包含源向量中较高索引的扩大元素。</param>
    </member>
    <member name="M:System.Numerics.Vector.Widen(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt32}@,System.Numerics.Vector{System.UInt32}@)">
      <summary vsli:raw="Widens a &lt;c&gt;Vector&amp;lt;UInt16&amp;gt;&lt;/c&gt; into two &lt;c&gt;Vector&amp;lt;UInt32&amp;gt;&lt;/c&gt; instances.">将一个 <see cref="System.Numerics.Vector{System.UInt16}" /> 扩大为两个 <see cref="System.Numerics.Vector{System.UInt32}" /> 实例。</summary>
      <param name="source" vsli:raw="The source vector whose elements are widened into the outputs.">元素被扩大为输出的源向量。</param>
      <param name="dest1">第一个输出向量，其元素将包含源向量中较低索引的扩大元素。</param>
      <param name="dest2">第二个输出向量，其元素将包含源向量中较高索引的扩大元素。</param>
    </member>
    <member name="M:System.Numerics.Vector.Widen(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt64}@,System.Numerics.Vector{System.UInt64}@)">
      <summary vsli:raw="Widens a &lt;c&gt;Vector&amp;lt;UInt32&amp;gt;&lt;/c&gt; into two &lt;c&gt;Vector&amp;lt;UInt64&amp;gt;&lt;/c&gt; instances.">将一个 <see cref="System.Numerics.Vector{System.UInt32}" /> 扩大为两个 <see cref="System.Numerics.Vector{System.UInt64}" /> 实例。</summary>
      <param name="source" vsli:raw="The source vector whose elements are widened into the outputs.">元素被扩大为输出的源向量。</param>
      <param name="dest1">第一个输出向量，其元素将包含源向量中较低索引的扩大元素。</param>
      <param name="dest2">第二个输出向量，其元素将包含源向量中较高索引的扩大元素。</param>
    </member>
    <member name="M:System.Numerics.Vector.Xor``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector by performing a bitwise exclusive Or (&lt;see langword=&quot;XOr&quot; /&gt;) operation on each pair of elements in two vectors.">通过在两个向量中的每对元素上执行按位“异或”(<see langword="XOr" />) 运算，返回一个新向量。</summary>
      <param name="left" vsli:raw="The first vector.">第一个向量。</param>
      <param name="right" vsli:raw="The second vector.">第二个向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量类型。 <c>T</c>可以是任何基元数值类型。</typeparam>
      <returns vsli:raw="The resulting vector.">所得的向量。</returns>
    </member>
    <member name="T:System.Numerics.Vector`1">
      <summary vsli:raw="Represents a single vector of a specified numeric type that is suitable for low-level optimization of parallel algorithms.">表示指定数值类型（适用于并行算法的低级别优化）的单个向量。</summary>
      <typeparam name="T" vsli:raw="The type of the elements in the vector. &lt;typeparamref name=&quot;T&quot; /&gt; can be any primitive numeric type.">向量类型。 <c>T</c>可以是任何基元数值类型。</typeparam>
    </member>
    <member name="M:System.Numerics.Vector`1.#ctor(`0)">
      <summary vsli:raw="Creates a vector whose components are of a specified type.">创建其组件为指定类型的向量。</summary>
      <param name="value" vsli:raw="The numeric type that defines the type of the components in the vector.">定义向量中的组件类型的数值类型。</param>
    </member>
    <member name="M:System.Numerics.Vector`1.#ctor(`0[])">
      <summary vsli:raw="Creates a vector from a specified array.">从指定数组创建一个向量。</summary>
      <param name="values" vsli:raw="The values to add to the vector, as an array of objects of type T. The array must contain at least &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements and only the first &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements are used.">数值数组。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;values&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="values" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Numerics.Vector`1.#ctor(`0[],System.Int32)">
      <summary vsli:raw="Creates a vector from a specified array starting at a specified index position.">于指定索引位置开始，从指定数组创建一个向量。</summary>
      <param name="values" vsli:raw="The values to add to the vector, as an array of objects of type T. The array must contain at least &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements from the specified index and only the first &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements are used.">数值数组。</param>
      <param name="index" vsli:raw="The starting index position from which to create the vector.">从其创建向量的起始索引位置。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;values&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="values" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The length of &lt;paramref name=&quot;values&quot; /&gt; minus &lt;paramref name=&quot;index&quot; /&gt; is less than &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt;.">
        <paramref name="index" /> 小于零。  
或 
<paramref name="values" /> 的长度减去 <paramref name="index" /> 小于 <see cref="P:System.Numerics.Vector`1.Count" />。</exception>
    </member>
    <member name="M:System.Numerics.Vector`1.#ctor(System.ReadOnlySpan{`0})">
      <summary vsli:raw="Constructs a vector from the given &lt;see cref=&quot;T:System.ReadOnlySpan`1&quot; /&gt;.">根据给定的 <see cref="T:System.ReadOnlySpan`1" /> 构造一个向量。</summary>
      <param name="values" vsli:raw="The values to add to the vector, as a read-only span of objects of type &lt;see langword=&quot;T&quot; /&gt;. The span must contain at least &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements and only the first &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements are used.">要添加到矢量的值，作为类型为 T 的对象的只读跨度。此跨度必须至少包含 <see cref="P:System.Numerics.Vector`1.Count" /> 个元素。</param>
    </member>
    <member name="M:System.Numerics.Vector`1.#ctor(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Constructs a vector from the given read-only span of bytes.">根据给定的只读字节跨度构造一个矢量。</summary>
      <param name="values" vsli:raw="A read-only span of bytes that contains the values to add to the vector. The span must contain at least &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements and only the first &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements are used.">一个只读字节跨度，其中包含要添加到矢量的值。 跨度必须至少包含 <see cref="P:System.Numerics.Vector`1.Count" /> 个元素。</param>
    </member>
    <member name="M:System.Numerics.Vector`1.#ctor(System.Span{`0})">
      <summary vsli:raw="Constructs a vector from the given &lt;see cref=&quot;T:System.Span`1&quot; /&gt;.">根据给定的 <see cref="T:System.Span`1" /> 构造一个向量。</summary>
      <param name="values" vsli:raw="The values to add to the vector, as a span of objects of type T. The span must contain at least &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements and only the first &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements are used.">要添加到向量的值，作为类型为 T 的对象的跨度。跨度必须至少包含 <see cref="P:System.Numerics.Vector`1.Count" /> 个元素。</param>
    </member>
    <member name="M:System.Numerics.Vector`1.CopyTo(`0[])">
      <summary vsli:raw="Copies the vector instance to a specified destination array.">将向量实例复制到指定的目标数组。</summary>
      <param name="destination" vsli:raw="The array to receive a copy of the vector values.">要接收矢量值的副本的数组。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destination&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="destination" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the current vector is greater than the number of elements available in the &lt;paramref name=&quot;destination&quot; /&gt; array.">当前向量中的元素数目大于 <paramref name="destination" /> 数组中的可用元素数目。</exception>
    </member>
    <member name="M:System.Numerics.Vector`1.CopyTo(`0[],System.Int32)">
      <summary vsli:raw="Copies the vector instance to a specified destination array starting at a specified index position.">从指定索引位置开始，将向量实例复制到指定的目标数组中。</summary>
      <param name="destination" vsli:raw="The array to receive a copy of the vector values.">要接收矢量值的副本的数组。</param>
      <param name="startIndex" vsli:raw="The starting index in &lt;paramref name=&quot;destination&quot; /&gt; at which to begin the copy operation.">在 <paramref name="destination" /> 中的起始索引，要于此处开始复制操作。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destination&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="destination" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the current instance is greater than the number of elements available from &lt;paramref name=&quot;startIndex&quot; /&gt; to the end of the &lt;paramref name=&quot;destination&quot; /&gt; array.">当前实例中的元素数目大于从 <paramref name="startIndex" /> 到 <paramref name="destination" /> 数组末尾之间的可用元素数目。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero or greater than the last index in &lt;paramref name=&quot;destination&quot; /&gt;.">
        <paramref name="index" /> 小于零或大于 <paramref name="destination" /> 中的最后一个索引。</exception>
    </member>
    <member name="M:System.Numerics.Vector`1.CopyTo(System.Span{`0})">
      <summary vsli:raw="Copies the vector to the given span. .">请将向量复制到给定跨度。 。</summary>
      <param name="destination" vsli:raw="The destination span to which the values are copied. The destination span must be at least size &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt;.">复制值的目标跨度。 目标跨度大小必须至少为 <see cref="P:System.Numerics.Vector`1.Count" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the source vector is greater than those available in the destination span.">源向量中的元素个数大于目标跨度中可用的元素个数。</exception>
    </member>
    <member name="M:System.Numerics.Vector`1.CopyTo(System.Span{System.Byte})">
      <summary vsli:raw="Copies the vector to the given &lt;see cref=&quot;T:System.Span`1&quot; /&gt;.">将向量复制到给定的 <see cref="T:System.Span`1" />。</summary>
      <param name="destination" vsli:raw="The destination span to which the values are copied. The destination span must be at least size &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt;.">复制值的目标跨度。 目标跨度大小必须至少为 <see cref="P:System.Numerics.Vector`1.Count" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the source vector is greater than those available in the destination span.">源向量中的元素个数大于目标跨度中可用的元素个数。</exception>
    </member>
    <member name="P:System.Numerics.Vector`1.Count">
      <summary vsli:raw="Returns the number of elements stored in the vector.">返回存储在向量中的元素数量。</summary>
      <returns vsli:raw="The number of elements stored in the vector.">存储在向量中的元素数量。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Access to the property getter via reflection is not supported.&#xA;        &#xA;-or-&#xA;        &#xA;.NET 5 and later: Type &lt;see langword=&quot;T&quot; /&gt; is not supported.">不支持通过反射访问属性 getter。</exception>
    </member>
    <member name="M:System.Numerics.Vector`1.Equals(System.Numerics.Vector{`0})">
      <summary vsli:raw="Returns a value that indicates whether this instance is equal to a specified vector.">返回一个值，该值指示此实例是否与指定的向量相等。</summary>
      <param name="other" vsli:raw="The vector to compare with this instance.">要与此实例进行比较的向量。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;other&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果当前实例与 <paramref name="other" /> 相等，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance is equal to a specified object.">返回一个值，该值指示此实例是否与指定的对象相等。</summary>
      <param name="obj" vsli:raw="The object to compare with this instance.">与该实例进行比较的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;obj&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The method returns &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is null, or if &lt;paramref name=&quot;obj&quot; /&gt; is a vector of a different type than the current instance.">如果当前实例与 <paramref name="obj" /> 相等，则为 <see langword="true" />；否则为 <see langword="false" />。 如果 <paramref name="obj" /> 为 null，或者如果 <paramref name="obj" /> 是与当前实例类型不同的向量，则该方法将返回 <see langword="false" /></returns>
    </member>
    <member name="M:System.Numerics.Vector`1.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">返回此实例的哈希代码。</summary>
      <returns vsli:raw="The hash code.">哈希代码。</returns>
    </member>
    <member name="P:System.Numerics.Vector`1.Item(System.Int32)">
      <summary vsli:raw="Gets the element at a specified index.">获取指定索引处的元素。</summary>
      <param name="index" vsli:raw="The index of the element to return.">要返回的元素的索引。</param>
      <returns vsli:raw="The element at index &lt;paramref name=&quot;index&quot; /&gt;.">索引 <paramref name="index" /> 处的元素。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is greater than or equal to &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt;.">
        <paramref name="index" /> 小于零。  
或 
 <paramref name="index" /> 大于或等于 <see cref="P:System.Numerics.Vector`1.Count" />。</exception>
    </member>
    <member name="P:System.Numerics.Vector`1.One">
      <summary vsli:raw="Returns a vector containing all ones.">返回一个包含所有 1 的向量。</summary>
      <returns vsli:raw="A vector containing all ones.">一个包含所有 1 的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Addition(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Adds two vectors together.">将两个向量相加。</summary>
      <param name="left" vsli:raw="The first vector to add.">要相加的第一个向量。</param>
      <param name="right" vsli:raw="The second vector to add.">要相加的第二个向量。</param>
      <returns vsli:raw="The summed vector.">总和向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_BitwiseAnd(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Returns a new vector by performing a bitwise &lt;see langword=&quot;And&quot; /&gt; operation on each of the elements in two vectors.">通过在两个向量中的每个元素上执行按位 <see langword="And" /> 运算，返回一个新向量。</summary>
      <param name="left" vsli:raw="The first vector.">第一个向量。</param>
      <param name="right" vsli:raw="The second vector.">第二个向量。</param>
      <returns vsli:raw="The vector that results from the bitwise &lt;see langword=&quot;And&quot; /&gt; of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;.">从 <paramref name="left" /> 和 <paramref name="right" /> 的按位 <see langword="And" /> 得到的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_BitwiseOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Returns a new vector by performing a bitwise &lt;see langword=&quot;Or&quot; /&gt; operation on each of the elements in two vectors.">通过在两个向量中的每个元素上执行按位 <see langword="Or" /> 运算，返回一个新向量。</summary>
      <param name="left" vsli:raw="The first vector.">第一个向量。</param>
      <param name="right" vsli:raw="The second vector.">第二个向量。</param>
      <returns vsli:raw="The vector that results from the bitwise &lt;see langword=&quot;Or&quot; /&gt; of the elements in &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;.">从 <paramref name="left" /> 和 <paramref name="right" /> 中的元素的按位 <see langword="Or" /> 运算得到的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Division(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Divides the first vector by the second.">将第一个向量除以第二个向量。</summary>
      <param name="left" vsli:raw="The first vector.">第一个向量。</param>
      <param name="right" vsli:raw="The second vector.">第二个向量。</param>
      <returns vsli:raw="The vector that results from dividing &lt;paramref name=&quot;left&quot; /&gt; by &lt;paramref name=&quot;right&quot; /&gt;.">将 <paramref name="left" /> 除以 <paramref name="right" /> 得到的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Equality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Returns a value that indicates whether each pair of elements in two specified vectors are equal.">返回一个值，该值指示两个指定向量中的每对元素是否相等。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比较的第一个向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比较的第二个向量。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 和 <paramref name="right" /> 相等，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_ExclusiveOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Returns a new vector by performing a bitwise &lt;see langword=&quot;XOr&quot; /&gt; operation on each of the elements in two vectors.">通过在两个向量中的每个元素上执行按位 <see langword="XOr" /> 运算，返回一个新向量。</summary>
      <param name="left" vsli:raw="The first vector.">第一个向量。</param>
      <param name="right" vsli:raw="The second vector.">第二个向量。</param>
      <returns vsli:raw="The vector that results from the bitwise &lt;see langword=&quot;XOr&quot; /&gt; of the elements in &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;.">从 <paramref name="left" /> 和 <paramref name="right" /> 中的元素的按位 <see langword="XOr" /> 运算得到的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Byte}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.Byte&quot; /&gt;.">将指定向量的位重新解释为 <see cref="T:System.Byte" /> 类型的向量。</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">要重新解释的向量。</param>
      <returns vsli:raw="The reinterpreted vector.">重新解释后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Double}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.Double&quot; /&gt;.">将指定向量的位重新解释为 <see cref="T:System.Double" /> 类型的向量。</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">要重新解释的向量。</param>
      <returns vsli:raw="The reinterpreted vector.">重新解释后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int16}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.Int16&quot; /&gt;.">将指定向量的位重新解释为 <see cref="T:System.Int16" /> 类型的向量。</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">要重新解释的向量。</param>
      <returns vsli:raw="The reinterpreted vector.">重新解释后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int32}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">将指定向量的位重新解释为 <see cref="T:System.Int32" /> 类型的向量。</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">要重新解释的向量。</param>
      <returns vsli:raw="The reinterpreted vector.">重新解释后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int64}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">将指定向量的位重新解释为 <see cref="T:System.Int64" /> 类型的向量。</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">要重新解释的向量。</param>
      <returns vsli:raw="The reinterpreted vector.">重新解释后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.SByte}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.SByte&quot; /&gt;.">将指定向量的位重新解释为 <see cref="T:System.SByte" /> 类型的向量。</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">要重新解释的向量。</param>
      <returns vsli:raw="The reinterpreted vector.">重新解释后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Single}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.Single&quot; /&gt;.">将指定向量的位重新解释为 <see cref="T:System.Single" /> 类型的向量。</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">要重新解释的向量。</param>
      <returns vsli:raw="The reinterpreted vector.">重新解释后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt16}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.UInt16&quot; /&gt;.">将指定向量的位重新解释为 <see cref="T:System.UInt16" /> 类型的向量。</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">要重新解释的向量。</param>
      <returns vsli:raw="The reinterpreted vector.">重新解释后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt32}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.UInt32&quot; /&gt;.">将指定向量的位重新解释为 <see cref="T:System.UInt32" /> 类型的向量。</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">要重新解释的向量。</param>
      <returns vsli:raw="The reinterpreted vector.">重新解释后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt64}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.UInt64&quot; /&gt;.">将指定向量的位重新解释为 <see cref="T:System.UInt64" /> 类型的向量。</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">要重新解释的向量。</param>
      <returns vsli:raw="The reinterpreted vector.">重新解释后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Inequality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Returns a value that indicates whether any single pair of elements in the specified vectors is equal.">返回一个值，该值指示指定向量中的任意元素对是否相等。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比较的第一个向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比较的第二个向量。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any element pairs in left and right are equal. &lt;see langword=&quot;false&quot; /&gt; if no element pairs are equal.">如果左侧和右侧的任意元素对相等，则为 <see langword="true" />。 如果没有元素对相等，则为 <see langword="false" /></returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Multiply(`0,System.Numerics.Vector{`0})">
      <summary vsli:raw="Multiplies a vector by a specified scalar value.">将向量乘以指定标量值。</summary>
      <param name="factor" vsli:raw="The scalar value.">标量值。</param>
      <param name="value" vsli:raw="The source vector.">源向量。</param>
      <returns vsli:raw="The scaled vector.">缩放后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},`0)">
      <summary vsli:raw="Multiplies a vector by a specified scalar value.">将向量乘以指定标量值。</summary>
      <param name="value" vsli:raw="The source vector.">源向量。</param>
      <param name="factor" vsli:raw="A scalar value.">标量值。</param>
      <returns vsli:raw="The scaled vector.">缩放后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Returns a new vector whose values are the product of each pair of elements in two specified vectors.">返回一个新向量，其值是两个指定向量中的每对元素的乘积。</summary>
      <param name="left" vsli:raw="The first vector.">第一个向量。</param>
      <param name="right" vsli:raw="The second vector.">第二个向量。</param>
      <returns vsli:raw="The element-wise product vector.">元素方面的乘积向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_OnesComplement(System.Numerics.Vector{`0})">
      <summary vsli:raw="Returns a new vector whose elements are obtained by taking the one's complement of a specified vector's elements.">返回一个新向量，其元素是通过取用指定向量的元素的二进制反码来获取的。</summary>
      <param name="value" vsli:raw="The source vector.">源向量。</param>
      <returns vsli:raw="The one's complement vector.">二进制反码向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Subtraction(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Subtracts the second vector from the first.">从第一个向量中减去第二个向量。</summary>
      <param name="left" vsli:raw="The first vector.">第一个向量。</param>
      <param name="right" vsli:raw="The second vector.">第二个向量。</param>
      <returns vsli:raw="The vector that results from subtracting &lt;paramref name=&quot;right&quot; /&gt; from &lt;paramref name=&quot;left&quot; /&gt;.">从 <paramref name="left" /> 中减去 <paramref name="right" /> 得到的结果向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_UnaryNegation(System.Numerics.Vector{`0})">
      <summary vsli:raw="Negates a given vector.">对给定向量求反。</summary>
      <param name="value" vsli:raw="The vector to negate.">要求反的向量。</param>
      <returns vsli:raw="The negated vector.">求反后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.ToString">
      <summary vsli:raw="Returns the string representation of this vector using default formatting.">通过使用默认格式设置，返回此向量的字符串表示形式。</summary>
      <returns vsli:raw="The string representation of this vector.">此向量的字符串表示形式。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.ToString(System.String)">
      <summary vsli:raw="Returns the string representation of this vector using the specified format string to format individual elements.">通过使用指定格式字符串设置各个元素的格式，来返回此向量的字符串表示形式。</summary>
      <param name="format" vsli:raw="The format of individual elements.">一个  或  定义各个元素的格式的。</param>
      <returns vsli:raw="The string representation of the current instance.">当前实例的字符串表示形式。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="Returns the string representation of this vector using the specified format string to format individual elements and the specified format provider to define culture-specific formatting.">通过使用指定格式字符串设置各个元素的格式并使用指定格式提供程序定义特定于区域性的格式设置，来返回此向量的字符串表示形式。</summary>
      <param name="format" vsli:raw="The format of individual elements.">一个  或  定义各个元素的格式的。</param>
      <param name="formatProvider" vsli:raw="A format provider that supplies culture-specific formatting information.">一个提供特定于区域性的格式设置信息的格式提供程序。</param>
      <returns vsli:raw="The string representation of the current instance.">当前实例的字符串表示形式。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.TryCopyTo(System.Span{`0})">
      <summary vsli:raw="Attempts to copy the vector to the given &lt;see cref=&quot;T:System.Span`1&quot; /&gt;.">请尝试将向量复制到给定的 <see cref="T:System.Span`1" />。</summary>
      <param name="destination" vsli:raw="The destination span to which the values are copied. The destination span must be at least size &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt;.">复制值的目标跨度。 目标跨度大小必须至少为 <see cref="P:System.Numerics.Vector`1.Count" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the source vector was successfully copied to &lt;paramref name=&quot;destination&quot; /&gt;. &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;destination&quot; /&gt; is not large enough to hold the source vector.">如果源向量成功复制到 <paramref name="destination" />，则为 <see langword="true" />。 如果 <paramref name="destination" /> 不足以保存源向量，则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.TryCopyTo(System.Span{System.Byte})">
      <summary vsli:raw="Attempts to copy the vector to the given byte span.">请尝试将向量复制到给定字节跨度。</summary>
      <param name="destination" vsli:raw="The destination span to which the values are copied. The destination span must be at least size &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt;.">复制值的目标跨度。 目标跨度大小必须至少为 <see cref="P:System.Numerics.Vector`1.Count" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the source vector was successfully copied to &lt;paramref name=&quot;destination&quot; /&gt;. &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;destination&quot; /&gt; is not large enough to hold the source vector.">如果源向量成功复制到 <paramref name="destination" />，则为 <see langword="true" />。 如果 <paramref name="destination" /> 不足以保存源向量，则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Numerics.Vector`1.Zero">
      <summary vsli:raw="Returns a vector containing all zeroes.">返回一个包含所有 0 的向量。</summary>
      <returns vsli:raw="A vector containing all zeroes.">一个包含所有 0 的向量。</returns>
    </member>
    <member name="T:System.Numerics.Vector2">
      <summary vsli:raw="Represents a vector with two single-precision floating-point values.">表示一个具有两个单精度浮点值的向量。</summary>
    </member>
    <member name="M:System.Numerics.Vector2.#ctor(System.Single)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Numerics.Vector2&quot; /&gt; object whose two elements have the same value.">创建一个其两个元素具有相同值的新 <see cref="T:System.Numerics.Vector2" /> 对象。</summary>
      <param name="value" vsli:raw="The value to assign to both elements.">要分配给两个元素的值。</param>
    </member>
    <member name="M:System.Numerics.Vector2.#ctor(System.Single,System.Single)">
      <summary vsli:raw="Creates a vector whose elements have the specified values.">创建一个其元素具有指定值的向量。</summary>
      <param name="x" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector2.X&quot; /&gt; field.">要分配给 <see cref="F:System.Numerics.Vector2.X" /> 字段的值。</param>
      <param name="y" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector2.Y&quot; /&gt; field.">要分配给 <see cref="F:System.Numerics.Vector2.Y" /> 字段的值。</param>
    </member>
    <member name="M:System.Numerics.Vector2.Abs(System.Numerics.Vector2)">
      <summary vsli:raw="Returns a vector whose elements are the absolute values of each of the specified vector's elements.">返回一个向量，其元素是指定向量的每个元素的绝对值。</summary>
      <param name="value" vsli:raw="A vector.">一个向量。</param>
      <returns vsli:raw="The absolute value vector.">绝对值向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Add(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Adds two vectors together.">将两个向量相加。</summary>
      <param name="left" vsli:raw="The first vector to add.">要相加的第一个向量。</param>
      <param name="right" vsli:raw="The second vector to add.">要相加的第二个向量。</param>
      <returns vsli:raw="The summed vector.">总和向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Clamp(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Restricts a vector between a minimum and a maximum value.">将向量限制在最小值与最大值之间。</summary>
      <param name="value1" vsli:raw="The vector to restrict.">要限制的向量。</param>
      <param name="min" vsli:raw="The minimum value.">最小值。</param>
      <param name="max" vsli:raw="The maximum value.">最大值。</param>
      <returns vsli:raw="The restricted vector.">限制后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.CopyTo(System.Single[])">
      <summary vsli:raw="Copies the elements of the vector to a specified array.">将向量的元素复制到指定数组中。</summary>
      <param name="array" vsli:raw="The destination array.">目标数组。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the current instance is greater than in the array.">当前实例中的元素数目大于数组中的。</exception>
      <exception cref="T:System.RankException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.">
        <paramref name="array" /> 是多维的。</exception>
    </member>
    <member name="M:System.Numerics.Vector2.CopyTo(System.Single[],System.Int32)">
      <summary vsli:raw="Copies the elements of the vector to a specified array starting at a specified index position.">从指定的索引位置开始，将向量的元素复制到指定的数组中。</summary>
      <param name="array" vsli:raw="The destination array.">目标数组。</param>
      <param name="index" vsli:raw="The index at which to copy the first element of the vector.">用于复制向量的第一个元素的索引。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the current instance is greater than in the array.">当前实例中的元素数目大于数组中的。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is greater than or equal to the array length.">
        <paramref name="index" /> 小于零。  

或 - 
<paramref name="index" /> 大于或等于数组长度。</exception>
      <exception cref="T:System.RankException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.">
        <paramref name="array" /> 是多维的。</exception>
    </member>
    <member name="M:System.Numerics.Vector2.Distance(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Computes the Euclidean distance between the two given points.">计算两个给定点之间的欧几里得距离。</summary>
      <param name="value1" vsli:raw="The first point.">第一个点。</param>
      <param name="value2" vsli:raw="The second point.">第二个点。</param>
      <returns vsli:raw="The distance.">距离。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.DistanceSquared(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns the Euclidean distance squared between two specified points.">返回两个指定点之间的欧几里得距离平方值。</summary>
      <param name="value1" vsli:raw="The first point.">第一个点。</param>
      <param name="value2" vsli:raw="The second point.">第二个点。</param>
      <returns vsli:raw="The distance squared.">距离平方值。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Divide(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Divides the first vector by the second.">将第一个向量除以第二个向量。</summary>
      <param name="left" vsli:raw="The first vector.">第一个向量。</param>
      <param name="right" vsli:raw="The second vector.">第二个向量。</param>
      <returns vsli:raw="The vector resulting from the division.">从除法得到的结果向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Divide(System.Numerics.Vector2,System.Single)">
      <summary vsli:raw="Divides the specified vector by a specified scalar value.">将指定向量除以指定标量值。</summary>
      <param name="left" vsli:raw="The vector.">向量。</param>
      <param name="divisor" vsli:raw="The scalar value.">标量值。</param>
      <returns vsli:raw="The vector that results from the division.">从除法得到的结果向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Dot(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns the dot product of two vectors.">返回两个向量的点积。</summary>
      <param name="value1" vsli:raw="The first vector.">第一个向量。</param>
      <param name="value2" vsli:raw="The second vector.">第二个向量。</param>
      <returns vsli:raw="The dot product.">点积。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Equals(System.Numerics.Vector2)">
      <summary vsli:raw="Returns a value that indicates whether this instance and another vector are equal.">返回一个值，该值指示此实例是否与另一个向量相等。</summary>
      <param name="other" vsli:raw="The other vector.">另一个向量。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two vectors are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果两个向量相等，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance and a specified object are equal.">返回一个值，该值指示此实例是否与指定对象相等。</summary>
      <param name="obj" vsli:raw="The object to compare with the current instance.">要与当前实例进行比较的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;obj&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, the method returns &lt;see langword=&quot;false&quot; /&gt;.">如果当前实例与 <paramref name="obj" /> 相等，则为 <see langword="true" />；否则为 <see langword="false" />。 如果 <paramref name="obj" /> 为 <see langword="null" />，则此方法返回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">返回此实例的哈希代码。</summary>
      <returns vsli:raw="The hash code.">哈希代码。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Length">
      <summary vsli:raw="Returns the length of the vector.">返回向量的长度。</summary>
      <returns vsli:raw="The vector's length.">向量的长度。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.LengthSquared">
      <summary vsli:raw="Returns the length of the vector squared.">返回向量长度平方值。</summary>
      <returns vsli:raw="The vector's length squared.">向量长度平方值。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Lerp(System.Numerics.Vector2,System.Numerics.Vector2,System.Single)">
      <summary vsli:raw="Performs a linear interpolation between two vectors based on the given weighting.">基于给定权重在两个向量之间执行线性内插。</summary>
      <param name="value1" vsli:raw="The first vector.">第一个向量。</param>
      <param name="value2" vsli:raw="The second vector.">第二个向量。</param>
      <param name="amount" vsli:raw="A value between 0 and 1 that indicates the weight of &lt;paramref name=&quot;value2&quot; /&gt;.">一个介于 0 与 1 之间的值，指示 <paramref name="value2" /> 的权重。</param>
      <returns vsli:raw="The interpolated vector.">内插的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Max(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns a vector whose elements are the maximum of each of the pairs of elements in two specified vectors.">返回一个向量，其元素是两个指定向量中每对元素的较大值。</summary>
      <param name="value1" vsli:raw="The first vector.">第一个向量。</param>
      <param name="value2" vsli:raw="The second vector.">第二个向量。</param>
      <returns vsli:raw="The maximized vector.">最大化的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Min(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns a vector whose elements are the minimum of each of the pairs of elements in two specified vectors.">返回一个向量，其元素是两个指定向量中每对元素的较小值。</summary>
      <param name="value1" vsli:raw="The first vector.">第一个向量。</param>
      <param name="value2" vsli:raw="The second vector.">第二个向量。</param>
      <returns vsli:raw="The minimized vector.">最小化的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Multiply(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns a new vector whose values are the product of each pair of elements in two specified vectors.">返回一个新向量，其值是两个指定向量中的每对元素的乘积。</summary>
      <param name="left" vsli:raw="The first vector.">第一个向量。</param>
      <param name="right" vsli:raw="The second vector.">第二个向量。</param>
      <returns vsli:raw="The element-wise product vector.">元素方面的乘积向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Multiply(System.Numerics.Vector2,System.Single)">
      <summary vsli:raw="Multiplies a vector by a specified scalar.">将向量乘以指定标量。</summary>
      <param name="left" vsli:raw="The vector to multiply.">要相乘的向量。</param>
      <param name="right" vsli:raw="The scalar value.">标量值。</param>
      <returns vsli:raw="The scaled vector.">缩放后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Multiply(System.Single,System.Numerics.Vector2)">
      <summary vsli:raw="Multiplies a scalar value by a specified vector.">将标量值乘以指定向量。</summary>
      <param name="left" vsli:raw="The scaled value.">缩放后的值。</param>
      <param name="right" vsli:raw="The vector.">向量。</param>
      <returns vsli:raw="The scaled vector.">缩放后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Negate(System.Numerics.Vector2)">
      <summary vsli:raw="Negates a specified vector.">对指定向量求反。</summary>
      <param name="value" vsli:raw="The vector to negate.">要求反的向量。</param>
      <returns vsli:raw="The negated vector.">求反后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Normalize(System.Numerics.Vector2)">
      <summary vsli:raw="Returns a vector with the same direction as the specified vector, but with a length of one.">返回一个向量，其方向与指定向量相同，但长度为一。</summary>
      <param name="value" vsli:raw="The vector to normalize.">要规范化的向量。</param>
      <returns vsli:raw="The normalized vector.">规范化的向量。</returns>
    </member>
    <member name="P:System.Numerics.Vector2.One">
      <summary vsli:raw="Gets a vector whose 2 elements are equal to one.">获取一个其 2 个元素等于 1 的向量。</summary>
      <returns vsli:raw="A vector whose two elements are equal to one (that is, it returns the vector &lt;c&gt;(1,1)&lt;/c&gt;).">两个元素等于1的向量 (也就是说, 它返回向量<c>(1, 1)</c>。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Addition(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Adds two vectors together.">将两个向量相加。</summary>
      <param name="left" vsli:raw="The first vector to add.">要相加的第一个向量。</param>
      <param name="right" vsli:raw="The second vector to add.">要相加的第二个向量。</param>
      <returns vsli:raw="The summed vector.">总和向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Division(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Divides the first vector by the second.">将第一个向量除以第二个向量。</summary>
      <param name="left" vsli:raw="The first vector.">第一个向量。</param>
      <param name="right" vsli:raw="The second vector.">第二个向量。</param>
      <returns vsli:raw="The vector that results from dividing &lt;paramref name=&quot;left&quot; /&gt; by &lt;paramref name=&quot;right&quot; /&gt;.">将 <paramref name="left" /> 除以 <paramref name="right" /> 得到的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Division(System.Numerics.Vector2,System.Single)">
      <summary vsli:raw="Divides the specified vector by a specified scalar value.">将指定向量除以指定标量值。</summary>
      <param name="value1" vsli:raw="The vector.">向量。</param>
      <param name="value2" vsli:raw="The scalar value.">标量值。</param>
      <returns vsli:raw="The result of the division.">除法的结果。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Equality(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns a value that indicates whether each pair of elements in two specified vectors is equal.">返回一个值，该值指示两个指定向量中的每对元素是否相等。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比较的第一个向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比较的第二个向量。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 和 <paramref name="right" /> 相等，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Inequality(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns a value that indicates whether two specified vectors are not equal.">返回一个值，该值指示两个指定向量是否不相等。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比较的第一个向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比较的第二个向量。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 和 <paramref name="right" /> 不相等，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Multiply(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns a new vector whose values are the product of each pair of elements in two specified vectors.">返回一个新向量，其值是两个指定向量中的每对元素的乘积。</summary>
      <param name="left" vsli:raw="The first vector.">第一个向量。</param>
      <param name="right" vsli:raw="The second vector.">第二个向量。</param>
      <returns vsli:raw="The element-wise product vector.">元素方面的乘积向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Multiply(System.Numerics.Vector2,System.Single)">
      <summary vsli:raw="Multiples the specified vector by the specified scalar value.">将指定向量乘以指定标量值。</summary>
      <param name="left" vsli:raw="The vector.">向量。</param>
      <param name="right" vsli:raw="The scalar value.">标量值。</param>
      <returns vsli:raw="The scaled vector.">缩放后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Multiply(System.Single,System.Numerics.Vector2)">
      <summary vsli:raw="Multiples the scalar value by the specified vector.">将标量值乘以指定向量。</summary>
      <param name="left" vsli:raw="The vector.">向量。</param>
      <param name="right" vsli:raw="The scalar value.">标量值。</param>
      <returns vsli:raw="The scaled vector.">缩放后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Subtraction(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Subtracts the second vector from the first.">从第一个向量中减去第二个向量。</summary>
      <param name="left" vsli:raw="The first vector.">第一个向量。</param>
      <param name="right" vsli:raw="The second vector.">第二个向量。</param>
      <returns vsli:raw="The vector that results from subtracting &lt;paramref name=&quot;right&quot; /&gt; from &lt;paramref name=&quot;left&quot; /&gt;.">从 <paramref name="left" /> 中减去 <paramref name="right" /> 得到的结果向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_UnaryNegation(System.Numerics.Vector2)">
      <summary vsli:raw="Negates the specified vector.">对指定向量求反。</summary>
      <param name="value" vsli:raw="The vector to negate.">要求反的向量。</param>
      <returns vsli:raw="The negated vector.">求反后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Reflect(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns the reflection of a vector off a surface that has the specified normal.">返回向量对具有指定法线的表面的反射。</summary>
      <param name="vector" vsli:raw="The source vector.">源向量。</param>
      <param name="normal" vsli:raw="The normal of the surface being reflected off.">反射的表面的法线。</param>
      <returns vsli:raw="The reflected vector.">反射的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.SquareRoot(System.Numerics.Vector2)">
      <summary vsli:raw="Returns a vector whose elements are the square root of each of a specified vector's elements.">返回一个向量，其元素是指定向量的每个元素的平方根。</summary>
      <param name="value" vsli:raw="A vector.">一个向量。</param>
      <returns vsli:raw="The square root vector.">平方根向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Subtract(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Subtracts the second vector from the first.">从第一个向量中减去第二个向量。</summary>
      <param name="left" vsli:raw="The first vector.">第一个向量。</param>
      <param name="right" vsli:raw="The second vector.">第二个向量。</param>
      <returns vsli:raw="The difference vector.">差向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.ToString">
      <summary vsli:raw="Returns the string representation of the current instance using default formatting.">使用默认格式设置返回当前实例的字符串表示形式。</summary>
      <returns vsli:raw="The string representation of the current instance.">当前实例的字符串表示形式。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.ToString(System.String)">
      <summary vsli:raw="Returns the string representation of the current instance using the specified format string to format individual elements.">通过使用指定格式字符串设置各个元素的格式，来返回当前实例的字符串表示形式。</summary>
      <param name="format" vsli:raw="A standard or custom numeric format string that defines the format of individual elements.">一个标准或自定义数字格式字符串，用于定义各个元素的格式。</param>
      <returns vsli:raw="The string representation of the current instance.">当前实例的字符串表示形式。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="Returns the string representation of the current instance using the specified format string to format individual elements and the specified format provider to define culture-specific formatting.">通过使用指定格式字符串设置各个元素的格式并使用指定格式提供程序定义特定于区域性的格式设置，来返回当前实例的字符串表示形式。</summary>
      <param name="format" vsli:raw="A standard or custom numeric format string that defines the format of individual elements.">一个标准或自定义数字格式字符串，用于定义各个元素的格式。</param>
      <param name="formatProvider" vsli:raw="A format provider that supplies culture-specific formatting information.">一个提供特定于区域性的格式设置信息的格式提供程序。</param>
      <returns vsli:raw="The string representation of the current instance.">当前实例的字符串表示形式。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Transform(System.Numerics.Vector2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Transforms a vector by a specified 3x2 matrix.">通过指定 3 x 2 矩阵变换向量。</summary>
      <param name="position" vsli:raw="The vector to transform.">要转换的向量。</param>
      <param name="matrix" vsli:raw="The transformation matrix.">变换矩阵。</param>
      <returns vsli:raw="The transformed vector.">转换后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Transform(System.Numerics.Vector2,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transforms a vector by a specified 4x4 matrix.">通过指定 4 x 4 矩阵转换向量。</summary>
      <param name="position" vsli:raw="The vector to transform.">要转换的向量。</param>
      <param name="matrix" vsli:raw="The transformation matrix.">变换矩阵。</param>
      <returns vsli:raw="The transformed vector.">转换后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Transform(System.Numerics.Vector2,System.Numerics.Quaternion)">
      <summary vsli:raw="Transforms a vector by the specified Quaternion rotation value.">通过指定的四元数旋转值转换向量。</summary>
      <param name="value" vsli:raw="The vector to rotate.">要旋转的向量。</param>
      <param name="rotation" vsli:raw="The rotation to apply.">要应用的旋转。</param>
      <returns vsli:raw="The transformed vector.">转换后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.TransformNormal(System.Numerics.Vector2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Transforms a vector normal by the given 3x2 matrix.">通过给定的 3 x 2 矩阵变换向量法线。</summary>
      <param name="normal" vsli:raw="The source vector.">源向量。</param>
      <param name="matrix" vsli:raw="The matrix.">矩阵。</param>
      <returns vsli:raw="The transformed vector.">转换后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.TransformNormal(System.Numerics.Vector2,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transforms a vector normal by the given 4x4 matrix.">通过给定的 4 x 4 矩阵变换向量法线。</summary>
      <param name="normal" vsli:raw="The source vector.">源向量。</param>
      <param name="matrix" vsli:raw="The matrix.">矩阵。</param>
      <returns vsli:raw="The transformed vector.">转换后的向量。</returns>
    </member>
    <member name="P:System.Numerics.Vector2.UnitX">
      <summary vsli:raw="Gets the vector (1,0).">获取向量 (1,0)。</summary>
      <returns vsli:raw="The vector &lt;c&gt;(1,0)&lt;/c&gt;.">向量<c>(1, 0)</c>。</returns>
    </member>
    <member name="P:System.Numerics.Vector2.UnitY">
      <summary vsli:raw="Gets the vector (0,1).">获取向量 (0,1)。</summary>
      <returns vsli:raw="The vector &lt;c&gt;(0,1)&lt;/c&gt;.">向量<c>(0, 1)</c>。</returns>
    </member>
    <member name="F:System.Numerics.Vector2.X">
      <summary vsli:raw="The X component of the vector.">向量的 X 分量。</summary>
    </member>
    <member name="F:System.Numerics.Vector2.Y">
      <summary vsli:raw="The Y component of the vector.">向量的 Y 分量。</summary>
    </member>
    <member name="P:System.Numerics.Vector2.Zero">
      <summary vsli:raw="Returns a vector whose 2 elements are equal to zero.">返回一个其 2 个元素等于 0 的向量。</summary>
      <returns vsli:raw="A vector whose two elements are equal to zero (that is, it returns the vector &lt;c&gt;(0,0)&lt;/c&gt;).">一个向量, 其两个元素等于零 (也就是说, 它返回向量<c>(0, 0)</c>。</returns>
    </member>
    <member name="T:System.Numerics.Vector3">
      <summary vsli:raw="Represents a vector with three  single-precision floating-point values.">表示一个具有三个单精度浮点值的向量。</summary>
    </member>
    <member name="M:System.Numerics.Vector3.#ctor(System.Numerics.Vector2,System.Single)">
      <summary vsli:raw="Creates a   new &lt;see cref=&quot;T:System.Numerics.Vector3&quot; /&gt; object from the specified &lt;see cref=&quot;T:System.Numerics.Vector2&quot; /&gt; object and the specified value.">从指定的 <see cref="T:System.Numerics.Vector2" /> 对象和指定值创建新的 <see cref="T:System.Numerics.Vector3" /> 对象。</summary>
      <param name="value" vsli:raw="The vector with two elements.">具有两个元素的向量。</param>
      <param name="z" vsli:raw="The additional value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector3.Z&quot; /&gt; field.">要分配给 <see cref="F:System.Numerics.Vector3.Z" /> 字段的其他值。</param>
    </member>
    <member name="M:System.Numerics.Vector3.#ctor(System.Single)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Numerics.Vector3&quot; /&gt; object whose three elements have the same value.">创建一个其三个元素具有相同值的新 <see cref="T:System.Numerics.Vector3" /> 对象。</summary>
      <param name="value" vsli:raw="The value to assign to all three elements.">要分配给所有三个元素的值。</param>
    </member>
    <member name="M:System.Numerics.Vector3.#ctor(System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a vector whose elements have the specified values.">创建一个其元素具有指定值的向量。</summary>
      <param name="x" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector3.X&quot; /&gt; field.">要分配给 <see cref="F:System.Numerics.Vector3.X" /> 字段的值。</param>
      <param name="y" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector3.Y&quot; /&gt; field.">要分配给 <see cref="F:System.Numerics.Vector3.Y" /> 字段的值。</param>
      <param name="z" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector3.Z&quot; /&gt; field.">要分配给 <see cref="F:System.Numerics.Vector3.Z" /> 字段的值。</param>
    </member>
    <member name="M:System.Numerics.Vector3.Abs(System.Numerics.Vector3)">
      <summary vsli:raw="Returns a vector whose elements are the absolute values of each of the specified vector's elements.">返回一个向量，其元素是指定向量的每个元素的绝对值。</summary>
      <param name="value" vsli:raw="A vector.">一个向量。</param>
      <returns vsli:raw="The absolute value vector.">绝对值向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Add(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Adds two vectors together.">将两个向量相加。</summary>
      <param name="left" vsli:raw="The first vector to add.">要相加的第一个向量。</param>
      <param name="right" vsli:raw="The second vector to add.">要相加的第二个向量。</param>
      <returns vsli:raw="The summed vector.">总和向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Clamp(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Restricts a vector between a minimum and a maximum value.">将向量限制在最小值与最大值之间。</summary>
      <param name="value1" vsli:raw="The vector to restrict.">要限制的向量。</param>
      <param name="min" vsli:raw="The minimum value.">最小值。</param>
      <param name="max" vsli:raw="The maximum value.">最大值。</param>
      <returns vsli:raw="The restricted vector.">限制后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.CopyTo(System.Single[])">
      <summary vsli:raw="Copies the elements of the vector to a specified array.">将向量的元素复制到指定数组中。</summary>
      <param name="array" vsli:raw="The destination array.">目标数组。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the current instance is greater than in the array.">当前实例中的元素数目大于数组中的。</exception>
      <exception cref="T:System.RankException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.">
        <paramref name="array" /> 是多维的。</exception>
    </member>
    <member name="M:System.Numerics.Vector3.CopyTo(System.Single[],System.Int32)">
      <summary vsli:raw="Copies the elements of the vector to a specified array starting at a specified index position.">从指定的索引位置开始，将向量的元素复制到指定的数组中。</summary>
      <param name="array" vsli:raw="The destination array.">目标数组。</param>
      <param name="index" vsli:raw="The index at which to copy the first element of the vector.">用于复制向量的第一个元素的索引。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the current instance is greater than in the array.">当前实例中的元素数目大于数组中的。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is greater than or equal to the array length.">
        <paramref name="index" /> 小于零。  
或 
 <paramref name="index" /> 大于或等于数组长度。</exception>
      <exception cref="T:System.RankException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.">
        <paramref name="array" /> 是多维的。</exception>
    </member>
    <member name="M:System.Numerics.Vector3.Cross(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Computes the cross product of two vectors.">计算两个向量的叉积。</summary>
      <param name="vector1" vsli:raw="The first vector.">第一个向量。</param>
      <param name="vector2" vsli:raw="The second vector.">第二个向量。</param>
      <returns vsli:raw="The cross product.">叉积。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Distance(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Computes the Euclidean distance between the two given points.">计算两个给定点之间的欧几里得距离。</summary>
      <param name="value1" vsli:raw="The first point.">第一个点。</param>
      <param name="value2" vsli:raw="The second point.">第二个点。</param>
      <returns vsli:raw="The distance.">距离。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.DistanceSquared(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns the Euclidean distance squared between two specified points.">返回两个指定点之间的欧几里得距离平方值。</summary>
      <param name="value1" vsli:raw="The first point.">第一个点。</param>
      <param name="value2" vsli:raw="The second point.">第二个点。</param>
      <returns vsli:raw="The distance squared.">距离平方值。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Divide(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Divides the first vector by the second.">将第一个向量除以第二个向量。</summary>
      <param name="left" vsli:raw="The first vector.">第一个向量。</param>
      <param name="right" vsli:raw="The second vector.">第二个向量。</param>
      <returns vsli:raw="The vector resulting from the division.">从除法得到的结果向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Divide(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Divides the specified vector by a specified scalar value.">将指定向量除以指定标量值。</summary>
      <param name="left" vsli:raw="The vector.">向量。</param>
      <param name="divisor" vsli:raw="The scalar value.">标量值。</param>
      <returns vsli:raw="The vector that results from the division.">从除法得到的结果向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Dot(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns the dot product of two vectors.">返回两个向量的点积。</summary>
      <param name="vector1" vsli:raw="The first vector.">第一个向量。</param>
      <param name="vector2" vsli:raw="The second vector.">第二个向量。</param>
      <returns vsli:raw="The dot product.">点积。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Equals(System.Numerics.Vector3)">
      <summary vsli:raw="Returns a value that indicates whether this instance and another vector are equal.">返回一个值，该值指示此实例是否与另一个向量相等。</summary>
      <param name="other" vsli:raw="The other vector.">另一个向量。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two vectors are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果两个向量相等，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance and a specified object are equal.">返回一个值，该值指示此实例是否与指定对象相等。</summary>
      <param name="obj" vsli:raw="The object to compare with the current instance.">要与当前实例进行比较的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;obj&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, the method returns &lt;see langword=&quot;false&quot; /&gt;.">如果当前实例与 <paramref name="obj" /> 相等，则为 <see langword="true" />；否则为 <see langword="false" />。 如果 <paramref name="obj" /> 为 <see langword="null" />，则此方法返回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">返回此实例的哈希代码。</summary>
      <returns vsli:raw="The hash code.">哈希代码。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Length">
      <summary vsli:raw="Returns the length of this vector object.">返回此向量对象的长度。</summary>
      <returns vsli:raw="The vector's length.">向量的长度。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.LengthSquared">
      <summary vsli:raw="Returns the length of the vector squared.">返回向量长度平方值。</summary>
      <returns vsli:raw="The vector's length squared.">向量长度平方值。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Lerp(System.Numerics.Vector3,System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Performs a linear interpolation between two vectors based on the given weighting.">基于给定权重在两个向量之间执行线性内插。</summary>
      <param name="value1" vsli:raw="The first vector.">第一个向量。</param>
      <param name="value2" vsli:raw="The second vector.">第二个向量。</param>
      <param name="amount" vsli:raw="A value between 0 and 1 that indicates the weight of &lt;paramref name=&quot;value2&quot; /&gt;.">一个介于 0 与 1 之间的值，指示 <paramref name="value2" /> 的权重。</param>
      <returns vsli:raw="The interpolated vector.">内插的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Max(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns a vector whose elements are the maximum of each of the pairs of elements in two specified vectors.">返回一个向量，其元素是两个指定向量中每对元素的较大值。</summary>
      <param name="value1" vsli:raw="The first vector.">第一个向量。</param>
      <param name="value2" vsli:raw="The second vector.">第二个向量。</param>
      <returns vsli:raw="The maximized vector.">最大化的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Min(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns a vector whose elements are the minimum of each of the pairs of elements in two specified vectors.">返回一个向量，其元素是两个指定向量中每对元素的较小值。</summary>
      <param name="value1" vsli:raw="The first vector.">第一个向量。</param>
      <param name="value2" vsli:raw="The second vector.">第二个向量。</param>
      <returns vsli:raw="The minimized vector.">最小化的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Multiply(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns a new vector whose values are the product of each pair of elements in two specified vectors.">返回一个新向量，其值是两个指定向量中的每对元素的乘积。</summary>
      <param name="left" vsli:raw="The first vector.">第一个向量。</param>
      <param name="right" vsli:raw="The second vector.">第二个向量。</param>
      <returns vsli:raw="The element-wise product vector.">元素方面的乘积向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Multiply(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Multiplies a vector by a specified scalar.">将向量乘以指定标量。</summary>
      <param name="left" vsli:raw="The vector to multiply.">要相乘的向量。</param>
      <param name="right" vsli:raw="The scalar value.">标量值。</param>
      <returns vsli:raw="The scaled vector.">缩放后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Multiply(System.Single,System.Numerics.Vector3)">
      <summary vsli:raw="Multiplies a scalar value by a specified vector.">将标量值乘以指定向量。</summary>
      <param name="left" vsli:raw="The scaled value.">缩放后的值。</param>
      <param name="right" vsli:raw="The vector.">向量。</param>
      <returns vsli:raw="The scaled vector.">缩放后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Negate(System.Numerics.Vector3)">
      <summary vsli:raw="Negates a specified vector.">对指定向量求反。</summary>
      <param name="value" vsli:raw="The vector to negate.">要求反的向量。</param>
      <returns vsli:raw="The negated vector.">求反后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Normalize(System.Numerics.Vector3)">
      <summary vsli:raw="Returns a vector with the same direction as the specified vector, but with a length of one.">返回一个向量，其方向与指定向量相同，但长度为一。</summary>
      <param name="value" vsli:raw="The vector to normalize.">要规范化的向量。</param>
      <returns vsli:raw="The normalized vector.">规范化的向量。</returns>
    </member>
    <member name="P:System.Numerics.Vector3.One">
      <summary vsli:raw="Gets a vector whose 3 elements are equal to one.">获取一个其 3 个元素等于 1 的向量。</summary>
      <returns vsli:raw="A vector whose three elements are equal to one (that is, it returns the vector &lt;c&gt;(1,1,1)&lt;/c&gt;).">其三个元素等于1的向量 (也就是说, 它返回向量<c>(1, 1, 1)</c>。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Addition(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Adds two vectors together.">将两个向量相加。</summary>
      <param name="left" vsli:raw="The first vector to add.">要相加的第一个向量。</param>
      <param name="right" vsli:raw="The second vector to add.">要相加的第二个向量。</param>
      <returns vsli:raw="The summed vector.">总和向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Division(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Divides the first vector by the second.">将第一个向量除以第二个向量。</summary>
      <param name="left" vsli:raw="The first vector.">第一个向量。</param>
      <param name="right" vsli:raw="The second vector.">第二个向量。</param>
      <returns vsli:raw="The vector that results from dividing &lt;paramref name=&quot;left&quot; /&gt; by &lt;paramref name=&quot;right&quot; /&gt;.">将 <paramref name="left" /> 除以 <paramref name="right" /> 得到的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Division(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Divides the specified vector by a specified scalar value.">将指定向量除以指定标量值。</summary>
      <param name="value1" vsli:raw="The vector.">向量。</param>
      <param name="value2" vsli:raw="The scalar value.">标量值。</param>
      <returns vsli:raw="The result of the division.">除法的结果。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Equality(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns a value that indicates whether each pair of elements in two specified vectors is equal.">返回一个值，该值指示两个指定向量中的每对元素是否相等。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比较的第一个向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比较的第二个向量。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 和 <paramref name="right" /> 相等，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Inequality(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns a value that indicates whether two specified vectors are not equal.">返回一个值，该值指示两个指定向量是否不相等。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比较的第一个向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比较的第二个向量。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 和 <paramref name="right" /> 不相等，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Multiply(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns a new vector whose values are the product of each pair of elements in two specified vectors.">返回一个新向量，其值是两个指定向量中的每对元素的乘积。</summary>
      <param name="left" vsli:raw="The first vector.">第一个向量。</param>
      <param name="right" vsli:raw="The second vector.">第二个向量。</param>
      <returns vsli:raw="The element-wise product vector.">元素方面的乘积向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Multiply(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Multiples the specified vector by the specified scalar value.">将指定向量乘以指定标量值。</summary>
      <param name="left" vsli:raw="The vector.">向量。</param>
      <param name="right" vsli:raw="The scalar value.">标量值。</param>
      <returns vsli:raw="The scaled vector.">缩放后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Multiply(System.Single,System.Numerics.Vector3)">
      <summary vsli:raw="Multiples the scalar value by the specified vector.">将标量值乘以指定向量。</summary>
      <param name="left" vsli:raw="The vector.">向量。</param>
      <param name="right" vsli:raw="The scalar value.">标量值。</param>
      <returns vsli:raw="The scaled vector.">缩放后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Subtraction(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Subtracts the second vector from the first.">从第一个向量中减去第二个向量。</summary>
      <param name="left" vsli:raw="The first vector.">第一个向量。</param>
      <param name="right" vsli:raw="The second vector.">第二个向量。</param>
      <returns vsli:raw="The vector that results from subtracting &lt;paramref name=&quot;right&quot; /&gt; from &lt;paramref name=&quot;left&quot; /&gt;.">从 <paramref name="left" /> 中减去 <paramref name="right" /> 得到的结果向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_UnaryNegation(System.Numerics.Vector3)">
      <summary vsli:raw="Negates the specified vector.">对指定向量求反。</summary>
      <param name="value" vsli:raw="The vector to negate.">要求反的向量。</param>
      <returns vsli:raw="The negated vector.">求反后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Reflect(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns the reflection of a vector off a surface that has the specified normal.">返回向量对具有指定法线的表面的反射。</summary>
      <param name="vector" vsli:raw="The source vector.">源向量。</param>
      <param name="normal" vsli:raw="The normal of the surface being reflected off.">反射的表面的法线。</param>
      <returns vsli:raw="The reflected vector.">反射的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.SquareRoot(System.Numerics.Vector3)">
      <summary vsli:raw="Returns a vector whose elements are the square root of each of a specified vector's elements.">返回一个向量，其元素是指定向量的每个元素的平方根。</summary>
      <param name="value" vsli:raw="A vector.">一个向量。</param>
      <returns vsli:raw="The square root vector.">平方根向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Subtract(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Subtracts the second vector from the first.">从第一个向量中减去第二个向量。</summary>
      <param name="left" vsli:raw="The first vector.">第一个向量。</param>
      <param name="right" vsli:raw="The second vector.">第二个向量。</param>
      <returns vsli:raw="The difference vector.">差向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.ToString">
      <summary vsli:raw="Returns the string representation of the current instance using default formatting.">使用默认格式设置返回当前实例的字符串表示形式。</summary>
      <returns vsli:raw="The string representation of the current instance.">当前实例的字符串表示形式。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.ToString(System.String)">
      <summary vsli:raw="Returns the string representation of the current instance using the specified format string to format individual elements.">通过使用指定格式字符串设置各个元素的格式，来返回当前实例的字符串表示形式。</summary>
      <param name="format" vsli:raw="A standard or custom numeric format string that defines the format of individual elements.">一个标准或自定义数字格式字符串，用于定义各个元素的格式。</param>
      <returns vsli:raw="The string representation of the current instance.">当前实例的字符串表示形式。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="Returns the string representation of the current instance using the specified format string to format individual elements and the specified format provider to define culture-specific formatting.">通过使用指定格式字符串设置各个元素的格式并使用指定格式提供程序定义特定于区域性的格式设置，来返回当前实例的字符串表示形式。</summary>
      <param name="format" vsli:raw="A standard or custom numeric format string that defines the format of individual elements.">一个标准或自定义数字格式字符串，用于定义各个元素的格式。</param>
      <param name="formatProvider" vsli:raw="A format provider that supplies culture-specific formatting information.">一个提供特定于区域性的格式设置信息的格式提供程序。</param>
      <returns vsli:raw="The string representation of the current instance.">当前实例的字符串表示形式。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Transform(System.Numerics.Vector3,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transforms a vector by a specified 4x4 matrix.">通过指定 4 x 4 矩阵转换向量。</summary>
      <param name="position" vsli:raw="The vector to transform.">要转换的向量。</param>
      <param name="matrix" vsli:raw="The transformation matrix.">变换矩阵。</param>
      <returns vsli:raw="The transformed vector.">转换后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Transform(System.Numerics.Vector3,System.Numerics.Quaternion)">
      <summary vsli:raw="Transforms a vector by the specified Quaternion rotation value.">通过指定的四元数旋转值转换向量。</summary>
      <param name="value" vsli:raw="The vector to rotate.">要旋转的向量。</param>
      <param name="rotation" vsli:raw="The rotation to apply.">要应用的旋转。</param>
      <returns vsli:raw="The transformed vector.">转换后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.TransformNormal(System.Numerics.Vector3,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transforms a vector normal by the given 4x4 matrix.">通过给定的 4 x 4 矩阵变换向量法线。</summary>
      <param name="normal" vsli:raw="The source vector.">源向量。</param>
      <param name="matrix" vsli:raw="The matrix.">矩阵。</param>
      <returns vsli:raw="The transformed vector.">转换后的向量。</returns>
    </member>
    <member name="P:System.Numerics.Vector3.UnitX">
      <summary vsli:raw="Gets the vector (1,0,0).">获取向量 (1,0,0)。</summary>
      <returns vsli:raw="The vector &lt;c&gt;(1,0,0)&lt;/c&gt;.">向量<c>(1, 0, 0)</c>。</returns>
    </member>
    <member name="P:System.Numerics.Vector3.UnitY">
      <summary vsli:raw="Gets the vector (0,1,0).">获取向量 (0,1,0)。</summary>
      <returns vsli:raw="The vector &lt;c&gt;(0,1,0)&lt;/c&gt;.">向量<c>(0, 1, 0)</c>。</returns>
    </member>
    <member name="P:System.Numerics.Vector3.UnitZ">
      <summary vsli:raw="Gets the vector (0,0,1).">获取向量 (0,0,1)。</summary>
      <returns vsli:raw="The vector &lt;c&gt;(0,0,1)&lt;/c&gt;.">向量<c>(0, 0, 1)</c>。</returns>
    </member>
    <member name="F:System.Numerics.Vector3.X">
      <summary vsli:raw="The X component of the vector.">向量的 X 分量。</summary>
    </member>
    <member name="F:System.Numerics.Vector3.Y">
      <summary vsli:raw="The Y component of the vector.">向量的 Y 分量。</summary>
    </member>
    <member name="F:System.Numerics.Vector3.Z">
      <summary vsli:raw="The Z component of the vector.">向量的 Z 分量。</summary>
    </member>
    <member name="P:System.Numerics.Vector3.Zero">
      <summary vsli:raw="Gets a vector whose 3 elements are equal to zero.">获取一个其 3 个元素等于 0 的向量。</summary>
      <returns vsli:raw="A vector whose three elements are equal to zero (that is, it returns the vector &lt;c&gt;(0,0,0)&lt;/c&gt;).">一个向量, 其三个元素等于零 (也就是说, 它返回向量<c>(0, 0, 0)</c>。</returns>
    </member>
    <member name="T:System.Numerics.Vector4">
      <summary vsli:raw="Represents a vector with four single-precision floating-point values.">表示一个具有四个单精度浮点值的向量。</summary>
    </member>
    <member name="M:System.Numerics.Vector4.#ctor(System.Numerics.Vector2,System.Single,System.Single)">
      <summary vsli:raw="Creates a   new &lt;see cref=&quot;T:System.Numerics.Vector4&quot; /&gt; object from the specified &lt;see cref=&quot;T:System.Numerics.Vector2&quot; /&gt; object and a Z and a W component.">从指定的 <see cref="T:System.Numerics.Vector2" /> 对象以及 Z 和 W 分量创建新的 <see cref="T:System.Numerics.Vector4" /> 对象。</summary>
      <param name="value" vsli:raw="The vector to use for the X and Y components.">要用于 X 和 Y 分量的向量。</param>
      <param name="z" vsli:raw="The Z component.">Z 分量。</param>
      <param name="w" vsli:raw="The W component.">W 分量。</param>
    </member>
    <member name="M:System.Numerics.Vector4.#ctor(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Constructs a new &lt;see cref=&quot;T:System.Numerics.Vector4&quot; /&gt; object from the specified &lt;see cref=&quot;T:System.Numerics.Vector3&quot; /&gt; object and a W component.">从指定的 <see cref="T:System.Numerics.Vector3" /> 对象以及 W 分量构造新的 <see cref="T:System.Numerics.Vector4" /> 对象。</summary>
      <param name="value" vsli:raw="The vector to use for the X, Y, and Z components.">要用于 X、Y 和 Z 分量的向量。</param>
      <param name="w" vsli:raw="The W component.">W 分量。</param>
    </member>
    <member name="M:System.Numerics.Vector4.#ctor(System.Single)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Numerics.Vector4&quot; /&gt; object whose four elements have the same value.">创建一个其四个元素具有相同值的新 <see cref="T:System.Numerics.Vector4" /> 对象。</summary>
      <param name="value" vsli:raw="The value to assign to all four elements.">要分配给所有四个元素的值。</param>
    </member>
    <member name="M:System.Numerics.Vector4.#ctor(System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a vector whose elements have the specified values.">创建一个其元素具有指定值的向量。</summary>
      <param name="x" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector4.X&quot; /&gt; field.">要分配给 <see cref="F:System.Numerics.Vector4.X" /> 字段的值。</param>
      <param name="y" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector4.Y&quot; /&gt; field.">要分配给 <see cref="F:System.Numerics.Vector4.Y" /> 字段的值。</param>
      <param name="z" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector4.Z&quot; /&gt; field.">要分配给 <see cref="F:System.Numerics.Vector4.Z" /> 字段的值。</param>
      <param name="w" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector4.W&quot; /&gt; field.">要分配给 <see cref="F:System.Numerics.Vector4.W" /> 字段的值。</param>
    </member>
    <member name="M:System.Numerics.Vector4.Abs(System.Numerics.Vector4)">
      <summary vsli:raw="Returns a vector whose elements are the absolute values of each of the specified vector's elements.">返回一个向量，其元素是指定向量的每个元素的绝对值。</summary>
      <param name="value" vsli:raw="A vector.">一个向量。</param>
      <returns vsli:raw="The absolute value vector.">绝对值向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Add(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Adds two vectors together.">将两个向量相加。</summary>
      <param name="left" vsli:raw="The first vector to add.">要相加的第一个向量。</param>
      <param name="right" vsli:raw="The second vector to add.">要相加的第二个向量。</param>
      <returns vsli:raw="The summed vector.">总和向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Clamp(System.Numerics.Vector4,System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Restricts a vector between a minimum and a maximum value.">将向量限制在最小值与最大值之间。</summary>
      <param name="value1" vsli:raw="The vector to restrict.">要限制的向量。</param>
      <param name="min" vsli:raw="The minimum value.">最小值。</param>
      <param name="max" vsli:raw="The maximum value.">最大值。</param>
      <returns vsli:raw="The restricted vector.">限制后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.CopyTo(System.Single[])">
      <summary vsli:raw="Copies the elements of the vector to a specified array.">将向量的元素复制到指定数组中。</summary>
      <param name="array" vsli:raw="The destination array.">目标数组。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the current instance is greater than in the array.">当前实例中的元素数目大于数组中的。</exception>
      <exception cref="T:System.RankException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.">
        <paramref name="array" /> 是多维的。</exception>
    </member>
    <member name="M:System.Numerics.Vector4.CopyTo(System.Single[],System.Int32)">
      <summary vsli:raw="Copies the elements of the vector to a specified array starting at a specified index position.">从指定的索引位置开始，将向量的元素复制到指定的数组中。</summary>
      <param name="array" vsli:raw="The destination array.">目标数组。</param>
      <param name="index" vsli:raw="The index at which to copy the first element of the vector.">用于复制向量的第一个元素的索引。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the current instance is greater than in the array.">当前实例中的元素数目大于数组中的。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is greater than or equal to the array length.">
        <paramref name="index" /> 小于零。  
或 
 <paramref name="index" /> 大于或等于数组长度。</exception>
      <exception cref="T:System.RankException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.">
        <paramref name="array" /> 是多维的。</exception>
    </member>
    <member name="M:System.Numerics.Vector4.Distance(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Computes the Euclidean distance between the two given points.">计算两个给定点之间的欧几里得距离。</summary>
      <param name="value1" vsli:raw="The first point.">第一个点。</param>
      <param name="value2" vsli:raw="The second point.">第二个点。</param>
      <returns vsli:raw="The distance.">距离。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.DistanceSquared(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Returns the Euclidean distance squared between two specified points.">返回两个指定点之间的欧几里得距离平方值。</summary>
      <param name="value1" vsli:raw="The first point.">第一个点。</param>
      <param name="value2" vsli:raw="The second point.">第二个点。</param>
      <returns vsli:raw="The distance squared.">距离平方值。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Divide(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Divides the first vector by the second.">将第一个向量除以第二个向量。</summary>
      <param name="left" vsli:raw="The first vector.">第一个向量。</param>
      <param name="right" vsli:raw="The second vector.">第二个向量。</param>
      <returns vsli:raw="The vector resulting from the division.">从除法得到的结果向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Divide(System.Numerics.Vector4,System.Single)">
      <summary vsli:raw="Divides the specified vector by a specified scalar value.">将指定向量除以指定标量值。</summary>
      <param name="left" vsli:raw="The vector.">向量。</param>
      <param name="divisor" vsli:raw="The scalar value.">标量值。</param>
      <returns vsli:raw="The vector that results from the division.">从除法得到的结果向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Dot(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Returns the dot product of two vectors.">返回两个向量的点积。</summary>
      <param name="vector1" vsli:raw="The first vector.">第一个向量。</param>
      <param name="vector2" vsli:raw="The second vector.">第二个向量。</param>
      <returns vsli:raw="The dot product.">点积。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Equals(System.Numerics.Vector4)">
      <summary vsli:raw="Returns a value that indicates whether this instance and another vector are equal.">返回一个值，该值指示此实例是否与另一个向量相等。</summary>
      <param name="other" vsli:raw="The other vector.">另一个向量。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two vectors are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果两个向量相等，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance and a specified object are equal.">返回一个值，该值指示此实例是否与指定对象相等。</summary>
      <param name="obj" vsli:raw="The object to compare with the current instance.">要与当前实例进行比较的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;obj&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, the method returns &lt;see langword=&quot;false&quot; /&gt;.">如果当前实例与 <paramref name="obj" /> 相等，则为 <see langword="true" />；否则为 <see langword="false" />。 如果 <paramref name="obj" /> 为 <see langword="null" />，则此方法返回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">返回此实例的哈希代码。</summary>
      <returns vsli:raw="The hash code.">哈希代码。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Length">
      <summary vsli:raw="Returns the length of this vector object.">返回此向量对象的长度。</summary>
      <returns vsli:raw="The vector's length.">向量的长度。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.LengthSquared">
      <summary vsli:raw="Returns the length of the vector squared.">返回向量长度平方值。</summary>
      <returns vsli:raw="The vector's length squared.">向量长度平方值。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Lerp(System.Numerics.Vector4,System.Numerics.Vector4,System.Single)">
      <summary vsli:raw="Performs a linear interpolation between two vectors based on the given weighting.">基于给定权重在两个向量之间执行线性内插。</summary>
      <param name="value1" vsli:raw="The first vector.">第一个向量。</param>
      <param name="value2" vsli:raw="The second vector.">第二个向量。</param>
      <param name="amount" vsli:raw="A value between 0 and 1 that indicates the weight of &lt;paramref name=&quot;value2&quot; /&gt;.">一个介于 0 与 1 之间的值，指示 <paramref name="value2" /> 的权重。</param>
      <returns vsli:raw="The interpolated vector.">内插的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Max(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Returns a vector whose elements are the maximum of each of the pairs of elements in two specified vectors.">返回一个向量，其元素是两个指定向量中每对元素的较大值。</summary>
      <param name="value1" vsli:raw="The first vector.">第一个向量。</param>
      <param name="value2" vsli:raw="The second vector.">第二个向量。</param>
      <returns vsli:raw="The maximized vector.">最大化的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Min(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Returns a vector whose elements are the minimum of each of the pairs of elements in two specified vectors.">返回一个向量，其元素是两个指定向量中每对元素的较小值。</summary>
      <param name="value1" vsli:raw="The first vector.">第一个向量。</param>
      <param name="value2" vsli:raw="The second vector.">第二个向量。</param>
      <returns vsli:raw="The minimized vector.">最小化的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Multiply(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Returns a new vector whose values are the product of each pair of elements in two specified vectors.">返回一个新向量，其值是两个指定向量中的每对元素的乘积。</summary>
      <param name="left" vsli:raw="The first vector.">第一个向量。</param>
      <param name="right" vsli:raw="The second vector.">第二个向量。</param>
      <returns vsli:raw="The element-wise product vector.">元素方面的乘积向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Multiply(System.Numerics.Vector4,System.Single)">
      <summary vsli:raw="Multiplies a vector by a specified scalar.">将向量乘以指定标量。</summary>
      <param name="left" vsli:raw="The vector to multiply.">要相乘的向量。</param>
      <param name="right" vsli:raw="The scalar value.">标量值。</param>
      <returns vsli:raw="The scaled vector.">缩放后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Multiply(System.Single,System.Numerics.Vector4)">
      <summary vsli:raw="Multiplies a scalar value by a specified vector.">将标量值乘以指定向量。</summary>
      <param name="left" vsli:raw="The scaled value.">缩放后的值。</param>
      <param name="right" vsli:raw="The vector.">向量。</param>
      <returns vsli:raw="The scaled vector.">缩放后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Negate(System.Numerics.Vector4)">
      <summary vsli:raw="Negates a specified vector.">对指定向量求反。</summary>
      <param name="value" vsli:raw="The vector to negate.">要求反的向量。</param>
      <returns vsli:raw="The negated vector.">求反后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Normalize(System.Numerics.Vector4)">
      <summary vsli:raw="Returns a vector with the same direction as the specified vector, but with a length of one.">返回一个向量，其方向与指定向量相同，但长度为一。</summary>
      <param name="vector" vsli:raw="The vector to normalize.">要规范化的向量。</param>
      <returns vsli:raw="The normalized vector.">规范化的向量。</returns>
    </member>
    <member name="P:System.Numerics.Vector4.One">
      <summary vsli:raw="Gets a vector whose 4 elements are equal to one.">获取一个其 4 个元素等于 1 的向量。</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Numerics.Vector4&quot; /&gt;.">返回 <see cref="T:System.Numerics.Vector4" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Addition(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Adds two vectors together.">将两个向量相加。</summary>
      <param name="left" vsli:raw="The first vector to add.">要相加的第一个向量。</param>
      <param name="right" vsli:raw="The second vector to add.">要相加的第二个向量。</param>
      <returns vsli:raw="The summed vector.">总和向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Division(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Divides the first vector by the second.">将第一个向量除以第二个向量。</summary>
      <param name="left" vsli:raw="The first vector.">第一个向量。</param>
      <param name="right" vsli:raw="The second vector.">第二个向量。</param>
      <returns vsli:raw="The vector that results from dividing &lt;paramref name=&quot;left&quot; /&gt; by &lt;paramref name=&quot;right&quot; /&gt;.">将 <paramref name="left" /> 除以 <paramref name="right" /> 得到的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Division(System.Numerics.Vector4,System.Single)">
      <summary vsli:raw="Divides the specified vector by a specified scalar value.">将指定向量除以指定标量值。</summary>
      <param name="value1" vsli:raw="The vector.">向量。</param>
      <param name="value2" vsli:raw="The scalar value.">标量值。</param>
      <returns vsli:raw="The result of the division.">除法的结果。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Equality(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Returns a value that indicates whether each pair of elements in two specified vectors is equal.">返回一个值，该值指示两个指定向量中的每对元素是否相等。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比较的第一个向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比较的第二个向量。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 和 <paramref name="right" /> 相等，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Inequality(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Returns a value that indicates whether two specified vectors are not equal.">返回一个值，该值指示两个指定向量是否不相等。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比较的第一个向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比较的第二个向量。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 和 <paramref name="right" /> 不相等，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Multiply(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Returns a new vector whose values are the product of each pair of elements in two specified vectors.">返回一个新向量，其值是两个指定向量中的每对元素的乘积。</summary>
      <param name="left" vsli:raw="The first vector.">第一个向量。</param>
      <param name="right" vsli:raw="The second vector.">第二个向量。</param>
      <returns vsli:raw="The element-wise product vector.">元素方面的乘积向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Multiply(System.Numerics.Vector4,System.Single)">
      <summary vsli:raw="Multiples the specified vector by the specified scalar value.">将指定向量乘以指定标量值。</summary>
      <param name="left" vsli:raw="The vector.">向量。</param>
      <param name="right" vsli:raw="The scalar value.">标量值。</param>
      <returns vsli:raw="The scaled vector.">缩放后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Multiply(System.Single,System.Numerics.Vector4)">
      <summary vsli:raw="Multiples the scalar value by the specified vector.">将标量值乘以指定向量。</summary>
      <param name="left" vsli:raw="The vector.">向量。</param>
      <param name="right" vsli:raw="The scalar value.">标量值。</param>
      <returns vsli:raw="The scaled vector.">缩放后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Subtraction(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Subtracts the second vector from the first.">从第一个向量中减去第二个向量。</summary>
      <param name="left" vsli:raw="The first vector.">第一个向量。</param>
      <param name="right" vsli:raw="The second vector.">第二个向量。</param>
      <returns vsli:raw="The vector that results from subtracting &lt;paramref name=&quot;right&quot; /&gt; from &lt;paramref name=&quot;left&quot; /&gt;.">从 <paramref name="left" /> 中减去 <paramref name="right" /> 得到的结果向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_UnaryNegation(System.Numerics.Vector4)">
      <summary vsli:raw="Negates the specified vector.">对指定向量求反。</summary>
      <param name="value" vsli:raw="The vector to negate.">要求反的向量。</param>
      <returns vsli:raw="The negated vector.">求反后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.SquareRoot(System.Numerics.Vector4)">
      <summary vsli:raw="Returns a vector whose elements are the square root of each of a specified vector's elements.">返回一个向量，其元素是指定向量的每个元素的平方根。</summary>
      <param name="value" vsli:raw="A vector.">一个向量。</param>
      <returns vsli:raw="The square root vector.">平方根向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Subtract(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Subtracts the second vector from the first.">从第一个向量中减去第二个向量。</summary>
      <param name="left" vsli:raw="The first vector.">第一个向量。</param>
      <param name="right" vsli:raw="The second vector.">第二个向量。</param>
      <returns vsli:raw="The difference vector.">差向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.ToString">
      <summary vsli:raw="Returns the string representation of the current instance using default formatting.">使用默认格式设置返回当前实例的字符串表示形式。</summary>
      <returns vsli:raw="The string representation of the current instance.">当前实例的字符串表示形式。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.ToString(System.String)">
      <summary vsli:raw="Returns the string representation of the current instance using the specified format string to format individual elements.">通过使用指定格式字符串设置各个元素的格式，来返回当前实例的字符串表示形式。</summary>
      <param name="format" vsli:raw="A standard or custom numeric format string that defines the format of individual elements.">一个标准或自定义数字格式字符串，用于定义各个元素的格式。</param>
      <returns vsli:raw="The string representation of the current instance.">当前实例的字符串表示形式。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="Returns the string representation of the current instance using the specified format string to format individual elements and the specified format provider to define culture-specific formatting.">通过使用指定格式字符串设置各个元素的格式并使用指定格式提供程序定义特定于区域性的格式设置，来返回当前实例的字符串表示形式。</summary>
      <param name="format" vsli:raw="A standard or custom numeric format string that defines the format of individual elements.">一个标准或自定义数字格式字符串，用于定义各个元素的格式。</param>
      <param name="formatProvider" vsli:raw="A format provider that supplies culture-specific formatting information.">一个提供特定于区域性的格式设置信息的格式提供程序。</param>
      <returns vsli:raw="The string representation of the current instance.">当前实例的字符串表示形式。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Transform(System.Numerics.Vector2,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transforms a two-dimensional vector by a specified 4x4 matrix.">通过指定的 4x4 矩阵变换二维向量。</summary>
      <param name="position" vsli:raw="The vector to transform.">要转换的向量。</param>
      <param name="matrix" vsli:raw="The transformation matrix.">变换矩阵。</param>
      <returns vsli:raw="The transformed vector.">转换后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Transform(System.Numerics.Vector2,System.Numerics.Quaternion)">
      <summary vsli:raw="Transforms a two-dimensional vector by the specified Quaternion rotation value.">通过指定的四元数旋转值变换二维向量。</summary>
      <param name="value" vsli:raw="The vector to rotate.">要旋转的向量。</param>
      <param name="rotation" vsli:raw="The rotation to apply.">要应用的旋转。</param>
      <returns vsli:raw="The transformed vector.">转换后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Transform(System.Numerics.Vector3,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transforms a three-dimensional vector by a specified 4x4 matrix.">通过指定的 4x4 矩阵转换三维向量。</summary>
      <param name="position" vsli:raw="The vector to transform.">要转换的向量。</param>
      <param name="matrix" vsli:raw="The transformation matrix.">变换矩阵。</param>
      <returns vsli:raw="The transformed vector.">转换后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Transform(System.Numerics.Vector3,System.Numerics.Quaternion)">
      <summary vsli:raw="Transforms a three-dimensional vector by the specified Quaternion rotation value.">通过指定的四元数旋转值变换三维向量。</summary>
      <param name="value" vsli:raw="The vector to rotate.">要旋转的向量。</param>
      <param name="rotation" vsli:raw="The rotation to apply.">要应用的旋转。</param>
      <returns vsli:raw="The transformed vector.">转换后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Transform(System.Numerics.Vector4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transforms a four-dimensional vector by a specified 4x4 matrix.">通过指定的 4x4 矩阵变换四维向量。</summary>
      <param name="vector" vsli:raw="The vector to transform.">要转换的向量。</param>
      <param name="matrix" vsli:raw="The transformation matrix.">变换矩阵。</param>
      <returns vsli:raw="The transformed vector.">转换后的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Transform(System.Numerics.Vector4,System.Numerics.Quaternion)">
      <summary vsli:raw="Transforms a four-dimensional vector by the specified Quaternion rotation value.">通过指定的四元数旋转值转换四维向量。</summary>
      <param name="value" vsli:raw="The vector to rotate.">要旋转的向量。</param>
      <param name="rotation" vsli:raw="The rotation to apply.">要应用的旋转。</param>
      <returns vsli:raw="The transformed vector.">转换后的向量。</returns>
    </member>
    <member name="P:System.Numerics.Vector4.UnitW">
      <summary vsli:raw="Gets the vector (0,0,0,1).">获取向量 (0,0,0,1)。</summary>
      <returns vsli:raw="The vector &lt;c&gt;(0,0,0,1)&lt;/c&gt;.">向量<c>(0, 0, 0, 1)</c>。</returns>
    </member>
    <member name="P:System.Numerics.Vector4.UnitX">
      <summary vsli:raw="Gets the vector (1,0,0,0).">获取向量 (1,0,0,0)。</summary>
      <returns vsli:raw="The vector &lt;c&gt;(1,0,0,0)&lt;/c&gt;.">向量<c>(1, 0, 0, 0)</c>。</returns>
    </member>
    <member name="P:System.Numerics.Vector4.UnitY">
      <summary vsli:raw="Gets the vector (0,1,0,0).">获取向量 (0,1,0,0)。</summary>
      <returns vsli:raw="The vector &lt;c&gt;(0,1,0,0)&lt;/c&gt;.">向量<c>(0, 1, 0, 0)</c>。</returns>
    </member>
    <member name="P:System.Numerics.Vector4.UnitZ">
      <summary vsli:raw="Gets the vector (0,0,1,0).">获取向量 (0,0,1,0)。</summary>
      <returns vsli:raw="The vector &lt;c&gt;(0,0,1,0)&lt;/c&gt;.">向量<c>(0, 0, 1, 0)</c>。</returns>
    </member>
    <member name="F:System.Numerics.Vector4.W">
      <summary vsli:raw="The W component of the vector.">向量的 W 分量。</summary>
    </member>
    <member name="F:System.Numerics.Vector4.X">
      <summary vsli:raw="The X component of the vector.">向量的 X 分量。</summary>
    </member>
    <member name="F:System.Numerics.Vector4.Y">
      <summary vsli:raw="The Y component of the vector.">向量的 Y 分量。</summary>
    </member>
    <member name="F:System.Numerics.Vector4.Z">
      <summary vsli:raw="The Z component of the vector.">向量的 Z 分量。</summary>
    </member>
    <member name="P:System.Numerics.Vector4.Zero">
      <summary vsli:raw="Gets a vector whose 4 elements are equal to zero.">获取一个其 4 个元素等于 0 的向量。</summary>
      <returns vsli:raw="A vector whose four elements are equal to zero (that is, it returns the vector &lt;c&gt;(0,0,0,0)&lt;/c&gt;).">一个向量, 其四个元素等于零 (也就是说, 它返回向量<c>(0, 0, 0, 0)</c>。</returns>
    </member>
  </members>
</doc>