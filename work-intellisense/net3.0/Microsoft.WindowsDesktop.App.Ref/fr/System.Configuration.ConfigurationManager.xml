<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Configuration.ConfigurationManager</name>
  </assembly>
  <members>
    <member name="T:System.Configuration.ApplicationScopedSettingAttribute">
      <summary vsli:raw="Specifies that an application settings property has a common value for all users of an application. This class cannot be inherited.">Spécifie qu’une propriété de paramètres d’application a une valeur commune pour tous les utilisateurs d’une application. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.ApplicationScopedSettingAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ApplicationScopedSettingAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ApplicationScopedSettingAttribute" />.</summary>
    </member>
    <member name="T:System.Configuration.ApplicationSettingsBase">
      <summary vsli:raw="Acts as a base class for deriving concrete wrapper classes to implement the application settings feature in Window Forms applications.">Agit comme classe de base pour la dérivation des classes wrapper concrètes afin d'implémenter la fonctionnalité de paramètres d'application dans les applications Windows Forms.</summary>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.#ctor">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Configuration.ApplicationSettingsBase&quot; /&gt; class to its default state.">Initialise une instance de la classe <see cref="T:System.Configuration.ApplicationSettingsBase" /> dans son état par défaut.</summary>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent)">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Configuration.ApplicationSettingsBase&quot; /&gt; class using the supplied owner component.">Initialise une instance de la classe <see cref="T:System.Configuration.ApplicationSettingsBase" /> à l'aide du composant propriétaire fourni.</summary>
      <param name="owner" vsli:raw="The component that will act as the owner of the application settings object.">Composant qui agira comme propriétaire de l'objet de paramètres d'application.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;owner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="owner" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Configuration.ApplicationSettingsBase&quot; /&gt; class using the supplied owner component and settings key.">Initialise une instance de la classe <see cref="T:System.Configuration.ApplicationSettingsBase" /> à l'aide du composant propriétaire et de la clé de paramètres fournis.</summary>
      <param name="owner" vsli:raw="The component that will act as the owner of the application settings object.">Composant qui agira comme propriétaire de l'objet de paramètres d'application.</param>
      <param name="settingsKey" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that uniquely identifies separate instances of the wrapper class.">
        <see cref="T:System.String" /> qui  identifie de manière unique des instances distinctes de la classe wrapper.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;owner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="owner" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.#ctor(System.String)">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Configuration.ApplicationSettingsBase&quot; /&gt; class using the supplied settings key.">Initialise une instance de la classe <see cref="T:System.Configuration.ApplicationSettingsBase" /> à l'aide de la clé de paramètres fournie.</summary>
      <param name="settingsKey" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that uniquely identifies separate instances of the wrapper class.">
        <see cref="T:System.String" /> qui  identifie de manière unique des instances distinctes de la classe wrapper.</param>
    </member>
    <member name="P:System.Configuration.ApplicationSettingsBase.Context">
      <summary vsli:raw="Gets the application settings context associated with the settings group.">Obtient le contexte de paramètres d'application associé au groupe de paramètres.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsContext&quot; /&gt; associated with the settings group.">
        <see cref="T:System.Configuration.SettingsContext" /> associé au groupe de paramètres.</returns>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)">
      <summary vsli:raw="Returns the value of the named settings property for the previous version of the same application.">Retourne la valeur de la propriété de paramètres nommée pour la version antérieure de la même application.</summary>
      <param name="propertyName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the name of the settings property whose value is to be returned.">
        <see cref="T:System.String" /> contenant le nom de la propriété de paramètres dont la valeur sera retournée.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; containing the value of the specified &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; if found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Object" /> contenant la valeur du <see cref="T:System.Configuration.SettingsProperty" /> spécifié s'il est trouvé ; sinon, <see langword="null" />.</returns>
      <exception cref="T:System.Configuration.SettingsPropertyNotFoundException" vsli:raw="The property does not exist. The property count is zero or the property cannot be found in the data store.">La propriété n'existe pas. Le compte de propriété est zéro ou la propriété est introuvable dans le magasin de données.</exception>
    </member>
    <member name="P:System.Configuration.ApplicationSettingsBase.Item(System.String)">
      <summary vsli:raw="Gets or sets the value of the specified application settings property.">Obtient ou définit la valeur de la propriété de paramètres d'application spécifiée.</summary>
      <param name="propertyName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the name of the property to access.">
        <see cref="T:System.String" /> contenant le nom de la propriété à accéder.</param>
      <returns vsli:raw="If found, the value of the named settings property; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Si elle est trouvée, correspond au nom de la propriété de paramètres nommée ; sinon, <see langword="null" />.</returns>
      <exception cref="T:System.Configuration.SettingsPropertyNotFoundException" vsli:raw="There are no properties associated with the current wrapper or the specified property could not be found.">Il n'y a pas de propriété associée au wrapper actuel ou la propriété spécifiée est introuvable.</exception>
      <exception cref="T:System.Configuration.SettingsPropertyIsReadOnlyException" vsli:raw="An attempt was made to set a read-only property.">Une tentative de définition de propriété en lecture seule a été effectuée.</exception>
      <exception cref="T:System.Configuration.SettingsPropertyWrongTypeException" vsli:raw="The value supplied is of a type incompatible with the settings property, during a set operation.">La valeur fournie est d'un type incompatible avec la propriété de paramètres, durant une opération de définition.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The configuration file could not be parsed.">Le fichier de configuration n'a pas pu être analysé.</exception>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Configuration.ApplicationSettingsBase.PropertyChanged&quot; /&gt; event.">Déclenche l'événement <see cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Source de l'événement.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyChangedEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> qui contient les données d'événement.</param>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Configuration.ApplicationSettingsBase.SettingChanging&quot; /&gt; event.">Déclenche l'événement <see cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Source de l'événement.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingChangingEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Configuration.SettingChangingEventArgs" /> qui contient les données d'événement.</param>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Configuration.ApplicationSettingsBase.SettingsLoaded&quot; /&gt; event.">Déclenche l'événement <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Source de l'événement.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsLoadedEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Configuration.SettingsLoadedEventArgs" /> qui contient les données d'événement.</param>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Configuration.ApplicationSettingsBase.SettingsSaving&quot; /&gt; event.">Déclenche l'événement <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Source de l'événement.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CancelEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.ComponentModel.CancelEventArgs" /> qui contient les données d'événement.</param>
    </member>
    <member name="P:System.Configuration.ApplicationSettingsBase.Properties">
      <summary vsli:raw="Gets the collection of settings properties in the wrapper.">Obtient la collection de propriétés de paramètres dans le wrapper.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsPropertyCollection&quot; /&gt; containing all the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; objects used in the current wrapper.">
        <see cref="T:System.Configuration.SettingsPropertyCollection" /> contenant tous les objets <see cref="T:System.Configuration.SettingsProperty" /> utilisés dans le wrapper actuel.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The associated settings provider could not be found or its instantiation failed.">Le fournisseur de paramètres associé est introuvable ou son instanciation a échoué.</exception>
    </member>
    <member name="E:System.Configuration.ApplicationSettingsBase.PropertyChanged">
      <summary vsli:raw="Occurs after the value of an application settings property is changed.">Se produit après que la valeur d'une propriété de paramètres d'application a été modifiée.</summary>
    </member>
    <member name="P:System.Configuration.ApplicationSettingsBase.PropertyValues">
      <summary vsli:raw="Gets a collection of property values.">Obtient une collection de valeurs de propriété.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValueCollection&quot; /&gt; of property values.">
        <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> de valeurs de propriété.</returns>
    </member>
    <member name="P:System.Configuration.ApplicationSettingsBase.Providers">
      <summary vsli:raw="Gets the collection of application settings providers used by the wrapper.">Obtient la collection de fournisseurs de paramètres d'application utilisée par le wrapper.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsProviderCollection&quot; /&gt; containing all the &lt;see cref=&quot;T:System.Configuration.SettingsProvider&quot; /&gt; objects used by the settings properties of the current settings wrapper.">
        <see cref="T:System.Configuration.SettingsProviderCollection" /> contenant tous les objets <see cref="T:System.Configuration.SettingsProvider" /> utilisés par les propriétés de paramètres du wrapper de paramètres actuel.</returns>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.Reload">
      <summary vsli:raw="Refreshes the application settings property values from persistent storage.">Actualise les valeurs de propriétés de paramètres d'application à partir du stockage persistant.</summary>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.Reset">
      <summary vsli:raw="Restores the persisted application settings values to their corresponding default properties.">Restaure les valeurs de paramètre d'application persistantes à leurs propriétés par défaut correspondantes.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The configuration file could not be parsed.">Le fichier de configuration n'a pas pu être analysé.</exception>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.Save">
      <summary vsli:raw="Stores the current values of the application settings properties.">Stocke les valeurs actuelles des propriétés de paramètres d'application.</summary>
    </member>
    <member name="E:System.Configuration.ApplicationSettingsBase.SettingChanging">
      <summary vsli:raw="Occurs before the value of an application settings property is changed.">Se produit avant que la valeur d'une propriété de paramètres d'application ait été modifiée.</summary>
    </member>
    <member name="P:System.Configuration.ApplicationSettingsBase.SettingsKey">
      <summary vsli:raw="Gets or sets the settings key for the application settings group.">Obtient ou définit la clé de paramètres pour le groupe de paramètres d'application.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the settings key for the current settings group.">
        <see cref="T:System.String" /> contenant la clé de paramètres pour le groupe de paramètres actuel.</returns>
    </member>
    <member name="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded">
      <summary vsli:raw="Occurs after the application settings are retrieved from storage.">Se produit après que les paramètres d'application ont été récupérés à partir du stockage.</summary>
    </member>
    <member name="E:System.Configuration.ApplicationSettingsBase.SettingsSaving">
      <summary vsli:raw="Occurs before values are saved to the data store.">Se produit avant que des valeurs soient enregistrées dans le magasin de données.</summary>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.Upgrade">
      <summary vsli:raw="Updates application settings to reflect a more recent installation of the application.">Met à jour des paramètres d'application de façon à refléter une installation plus récente de l'application.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The configuration file could not be parsed.">Le fichier de configuration n'a pas pu être analysé.</exception>
    </member>
    <member name="T:System.Configuration.ApplicationSettingsGroup">
      <summary vsli:raw="Represents a grouping of related application settings sections within a configuration file. This class cannot be inherited.">Représente un regroupement de sections de paramètres d’application connexes dans un fichier de configuration. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsGroup.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ApplicationSettingsGroup&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ApplicationSettingsGroup" />.</summary>
    </member>
    <member name="T:System.Configuration.AppSettingsReader">
      <summary vsli:raw="Provides a method for reading values of a particular type from the configuration.">Fournit une méthode permettant de lire les valeurs d'un type particulier dans la configuration.</summary>
    </member>
    <member name="M:System.Configuration.AppSettingsReader.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.AppSettingsReader&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.AppSettingsReader" />.</summary>
    </member>
    <member name="M:System.Configuration.AppSettingsReader.GetValue(System.String,System.Type)">
      <summary vsli:raw="Gets the value for a specified key from the &lt;see cref=&quot;P:System.Configuration.ConfigurationSettings.AppSettings&quot; /&gt; property and returns an object of the specified type containing the value from the configuration.">Obtient la valeur d'une clé spécifiée de la propriété <see cref="P:System.Configuration.ConfigurationSettings.AppSettings" /> et retourne un objet du type déterminé contenant la valeur de la configuration.</summary>
      <param name="key" vsli:raw="The key for which to get the value.">Clé pour laquelle obtenir la valeur.</param>
      <param name="type" vsli:raw="The type of the object to return.">Type de l'objet à retourner.</param>
      <returns vsli:raw="The value of the specified key.">Valeur de la clé spécifiée.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> a la valeur <see langword="null" />.  

ou - 
<paramref name="type" /> est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; does not exist in the &lt;see langword=&quot;&amp;lt;appSettings&amp;gt;&quot; /&gt; configuration section.  &#xA;  &#xA;-or-&#xA;  &#xA; The value in the &lt;see langword=&quot;&amp;lt;appSettings&amp;gt;&quot; /&gt; configuration section for &lt;paramref name=&quot;key&quot; /&gt; is not of type &lt;paramref name=&quot;type&quot; /&gt;.">
        <paramref name="key" /> n'existe pas dans la section de configuration <see langword="&lt;appSettings&gt;" />.  
ou 
La valeur présente dans la section de configuration <see langword="&lt;appSettings&gt;" /> pour <paramref name="key" /> n'est pas du type <paramref name="type" />.</exception>
    </member>
    <member name="T:System.Configuration.AppSettingsSection">
      <summary vsli:raw="Provides configuration system support for the &lt;see langword=&quot;appSettings&quot; /&gt; configuration section. This class cannot be inherited.">Fournit une prise en charge du système de configuration pour la section de configuration <see langword="appSettings" />. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.AppSettingsSection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.AppSettingsSection&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.AppSettingsSection" />.</summary>
    </member>
    <member name="P:System.Configuration.AppSettingsSection.File">
      <summary vsli:raw="Gets or sets a configuration file that provides additional settings or overrides the settings specified in the &lt;see langword=&quot;appSettings&quot; /&gt; element.">Obtient ou définit un fichier de configuration qui fournit des paramètres supplémentaires ou substitue les paramètres spécifiés dans l’élément <see langword="appSettings" />.</summary>
      <returns vsli:raw="A configuration file that provides additional settings or overrides the settings specified in the &lt;see langword=&quot;appSettings&quot; /&gt; element.">Fichier de configuration qui fournit des paramètres supplémentaires ou substitue les paramètres spécifiés dans l'élément <see langword="appSettings" />.</returns>
    </member>
    <member name="P:System.Configuration.AppSettingsSection.Settings">
      <summary vsli:raw="Gets a collection of key/value pairs that contains application settings.">Obtient une collection de paires clé/valeur qui contient des paramètres d’application.</summary>
      <returns vsli:raw="A collection of key/value pairs that contains the application settings from the configuration file.">Une collection de paires clé/valeur qui contient les paramètres d'application du fichier de configuration.</returns>
    </member>
    <member name="T:System.Configuration.CallbackValidator">
      <summary vsli:raw="Provides dynamic validation of an object.">Fournit la validation dynamique d'un objet.</summary>
    </member>
    <member name="M:System.Configuration.CallbackValidator.#ctor(System.Type,System.Configuration.ValidatorCallback)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.CallbackValidator&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.CallbackValidator" />.</summary>
      <param name="type" vsli:raw="The type of object that will be validated.">Type d'objet qui sera validé.</param>
      <param name="callback" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ValidatorCallback&quot; /&gt; used as the delegate.">
        <see cref="T:System.Configuration.ValidatorCallback" /> utilisé comme délégué.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Configuration.CallbackValidator.CanValidate(System.Type)">
      <summary vsli:raw="Determines whether the type of the object can be validated.">Détermine si le type de l'objet peut être validé.</summary>
      <param name="type" vsli:raw="The type of object.">Type d'objet.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see langword=&quot;type&quot; /&gt; parameter matches the type used as the first parameter when creating an instance of &lt;see cref=&quot;T:System.Configuration.CallbackValidator&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le paramètre <see langword="type" /> correspond au type utilisé comme premier paramètre lors de la création d'une instance de <see cref="T:System.Configuration.CallbackValidator" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.CallbackValidator.Validate(System.Object)">
      <summary vsli:raw="Determines whether the value of an object is valid.">Détermine si la valeur d’un objet est valide.</summary>
      <param name="value" vsli:raw="The value of an object.">Valeur d’un objet.</param>
    </member>
    <member name="T:System.Configuration.CallbackValidatorAttribute">
      <summary vsli:raw="Specifies a &lt;see cref=&quot;T:System.Configuration.CallbackValidator&quot; /&gt; object to use for code validation. This class cannot be inherited.">Spécifie un objet <see cref="T:System.Configuration.CallbackValidator" /> à utiliser pour la validation de code. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.CallbackValidatorAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.CallbackValidatorAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.CallbackValidatorAttribute" />.</summary>
    </member>
    <member name="P:System.Configuration.CallbackValidatorAttribute.CallbackMethodName">
      <summary vsli:raw="Gets or sets the name of the callback method.">Obtient ou définit le nom de la méthode de rappel.</summary>
      <returns vsli:raw="The name of the method to call.">Nom de la méthode à appeler.</returns>
    </member>
    <member name="P:System.Configuration.CallbackValidatorAttribute.Type">
      <summary vsli:raw="Gets or sets the type of the validator.">Obtient ou définit le type du validateur.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the current validator attribute instance.">
        <see cref="T:System.Type" /> de l'instance d'attribut du validateur actuelle.</returns>
    </member>
    <member name="P:System.Configuration.CallbackValidatorAttribute.ValidatorInstance">
      <summary vsli:raw="Gets the validator instance.">Obtient l’instance du validateur.</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorBase&quot; /&gt; instance.">Instance <see cref="T:System.Configuration.ConfigurationValidatorBase" /> actuelle.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value of the &lt;see cref=&quot;P:System.Configuration.CallbackValidatorAttribute.Type&quot; /&gt; property is &lt;see langword=&quot;null&quot; /&gt;.">La propriété <see cref="P:System.Configuration.CallbackValidatorAttribute.Type" /> possède la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Configuration.CallbackValidatorAttribute.CallbackMethodName&quot; /&gt; property is not set to a public static void method with one object parameter.">La valeur de la propriété <see cref="P:System.Configuration.CallbackValidatorAttribute.CallbackMethodName" /> n’est pas une méthode public static void avec un seul paramètre d’objet.</exception>
    </member>
    <member name="T:System.Configuration.ClientSettingsSection">
      <summary vsli:raw="Represents a group of user-scoped application settings in a configuration file.">Représente un groupe de paramètres d’application de portée utilisateur dans un fichier de configuration.</summary>
    </member>
    <member name="M:System.Configuration.ClientSettingsSection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ClientSettingsSection&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ClientSettingsSection" />.</summary>
    </member>
    <member name="P:System.Configuration.ClientSettingsSection.Settings">
      <summary vsli:raw="Gets the collection of client settings for the section.">Obtient la collection de paramètres client pour la section.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingElementCollection&quot; /&gt; containing all the client settings found in the current configuration section.">
        <see cref="T:System.Configuration.SettingElementCollection" /> contenant tous les paramètres client qui se trouvent dans la section de configuration actuelle.</returns>
    </member>
    <member name="T:System.Configuration.CommaDelimitedStringCollection">
      <summary vsli:raw="Represents a collection of string elements separated by commas. This class cannot be inherited.">Représente une collection d’éléments de chaîne séparés par des virgules. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.#ctor">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Configuration.CommaDelimitedStringCollection&quot; /&gt; class.">Crée une instance de la classe <see cref="T:System.Configuration.CommaDelimitedStringCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.Add(System.String)">
      <summary vsli:raw="Adds a string to the comma-delimited collection.">Ajoute une chaîne à la collection délimitée par des virgules.</summary>
      <param name="value" vsli:raw="A string value.">Valeur de chaîne.</param>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.AddRange(System.String[])">
      <summary vsli:raw="Adds all the strings in a string array to the collection.">Ajoute toutes les chaînes d'un tableau de chaînes à la collection.</summary>
      <param name="range" vsli:raw="An array of strings to add to the collection.">Tableau de chaînes à ajouter à la collection.</param>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.Clear">
      <summary vsli:raw="Clears the collection.">Efface la collection.</summary>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.Clone">
      <summary vsli:raw="Creates a copy of the collection.">Crée une copie de la collection.</summary>
      <returns vsli:raw="A copy of the &lt;see cref=&quot;T:System.Configuration.CommaDelimitedStringCollection&quot; /&gt;.">Copie de <see cref="T:System.Configuration.CommaDelimitedStringCollection" />.</returns>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.Insert(System.Int32,System.String)">
      <summary vsli:raw="Adds a string element to the collection at the specified index.">Ajoute un élément de chaîne à la collection au niveau de l'index spécifié.</summary>
      <param name="index" vsli:raw="The index in the collection at which the new element will be added.">Index de la collection auquel le nouvel élément sera ajouté.</param>
      <param name="value" vsli:raw="The value of the new element to add to the collection.">Valeur du nouvel élément à ajouter à la collection.</param>
    </member>
    <member name="P:System.Configuration.CommaDelimitedStringCollection.IsModified">
      <summary vsli:raw="Gets a value that specifies whether the collection has been modified.">Obtient une valeur qui spécifie si la collection a été modifiée.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Configuration.CommaDelimitedStringCollection&quot; /&gt; has been modified; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> en cas de modification de <see cref="T:System.Configuration.CommaDelimitedStringCollection" /> ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.CommaDelimitedStringCollection.IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the collection object is read-only.">Obtient une valeur indiquant si l'objet de la collection est en lecture seule.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified string element in the &lt;see cref=&quot;T:System.Configuration.CommaDelimitedStringCollection&quot; /&gt; is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'élément de chaîne spécifié dans le <see cref="T:System.Configuration.CommaDelimitedStringCollection" /> est en lecture seule ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.CommaDelimitedStringCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets a string element in the collection based on the index.">Obtient ou définit un élément de chaîne dans la collection en fonction de l'index.</summary>
      <param name="index" vsli:raw="The index of the string element in the collection.">Index de l'élément de chaîne dans la collection.</param>
      <returns vsli:raw="A string element in the collection.">Élément de chaîne dans la collection.</returns>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.Remove(System.String)">
      <summary vsli:raw="Removes a string element from the collection.">Supprime un élément de chaîne de la collection.</summary>
      <param name="value" vsli:raw="The string to remove.">Chaîne à supprimer.</param>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.SetReadOnly">
      <summary vsli:raw="Sets the collection object to read-only.">Définit l'objet de la collection qui doit être en lecture seule.</summary>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.ToString">
      <summary vsli:raw="Returns a string representation of the object.">Retourne une représentation de l'objet sous forme de chaîne.</summary>
      <returns vsli:raw="A string representation of the object.">Représentation sous forme de chaîne de l'objet.</returns>
    </member>
    <member name="T:System.Configuration.CommaDelimitedStringCollectionConverter">
      <summary vsli:raw="Converts a comma-delimited string value to and from a &lt;see cref=&quot;T:System.Configuration.CommaDelimitedStringCollection&quot; /&gt; object. This class cannot be inherited.">Convertit une valeur de chaîne délimitée par des virgules en un objet <see cref="T:System.Configuration.CommaDelimitedStringCollection" />, et vice versa. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollectionConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.CommaDelimitedStringCollectionConverter&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.CommaDelimitedStringCollectionConverter" />.</summary>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; object to a &lt;see cref=&quot;T:System.Configuration.CommaDelimitedStringCollection&quot; /&gt; object.">Convertit un objet <see cref="T:System.String" /> en un objet <see cref="T:System.Configuration.CommaDelimitedStringCollection" />.</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; used for type conversions.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilisé pour les conversions de types.</param>
      <param name="ci" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; used during conversion.">
        <see cref="T:System.Globalization.CultureInfo" /> utilisé pendant la conversion.</param>
      <param name="data" vsli:raw="The comma-separated &lt;see cref=&quot;T:System.String&quot; /&gt; to convert.">
        <see cref="T:System.String" /> séparé par des virgules à convertir.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.CommaDelimitedStringCollection&quot; /&gt; containing the converted value.">
        <see cref="T:System.Configuration.CommaDelimitedStringCollection" /> contenant la valeur convertie.</returns>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Configuration.CommaDelimitedStringCollection&quot; /&gt; object to a &lt;see cref=&quot;T:System.String&quot; /&gt; object.">Convertit un objet <see cref="T:System.Configuration.CommaDelimitedStringCollection" /> en un objet <see cref="T:System.String" />.</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; used for type conversions.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilisé pour les conversions de types.</param>
      <param name="ci" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; used during conversion.">
        <see cref="T:System.Globalization.CultureInfo" /> utilisé pendant la conversion.</param>
      <param name="value" vsli:raw="The value to convert.">Valeur à convertir.</param>
      <param name="type" vsli:raw="The conversion type.">Type de conversion.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; representing the converted &lt;paramref name=&quot;value&quot; /&gt; parameter, which is a &lt;see cref=&quot;T:System.Configuration.CommaDelimitedStringCollection&quot; /&gt;.">
        <see cref="T:System.String" /> représentant le paramètre <paramref name="value" /> converti, qui est un <see cref="T:System.Configuration.CommaDelimitedStringCollection" />.</returns>
    </member>
    <member name="T:System.Configuration.Configuration">
      <summary vsli:raw="Represents a configuration file that is applicable to a particular computer, application, or resource. This class cannot be inherited.">Représente un fichier de configuration applicable à un ordinateur, une application ou une ressource particulière. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="P:System.Configuration.Configuration.AppSettings">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Configuration.AppSettingsSection&quot; /&gt; object configuration section that applies to this &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">Obtient la section de configuration de l'objet <see cref="T:System.Configuration.AppSettingsSection" /> qui s'applique à cet objet <see cref="T:System.Configuration.Configuration" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Configuration.AppSettingsSection&quot; /&gt; object representing the &lt;see langword=&quot;appSettings&quot; /&gt; configuration section that applies to this &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">Objet <see cref="T:System.Configuration.AppSettingsSection" /> représentant la section de configuration <see langword="appSettings" /> qui s'applique à cet objet <see cref="T:System.Configuration.Configuration" />.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.AssemblyStringTransformer">
      <summary vsli:raw="Specifies a function delegate that is used to transform assembly strings in configuration files.">Spécifie un délégué de fonction utilisé pour transformer des chaînes d'assembly dans les fichiers de configuration.</summary>
      <returns vsli:raw="A delegate that transforms type strings. The default value is &lt;see langword=&quot;null&quot; /&gt;.">Délégué qui transforme des chaînes de type. La valeur par défaut est <see langword="null" />.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.ConnectionStrings">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Configuration.ConnectionStringsSection&quot; /&gt; configuration-section object that applies to this &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">Obtient un objet de section de configuration <see cref="T:System.Configuration.ConnectionStringsSection" /> qui s'applique à cet objet <see cref="T:System.Configuration.Configuration" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConnectionStringsSection&quot; /&gt; configuration-section object representing the &lt;see langword=&quot;connectionStrings&quot; /&gt; configuration section that applies to this &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">Objet de section de configuration <see cref="T:System.Configuration.ConnectionStringsSection" /> représentant la section de configuration <see langword="connectionStrings" /> qui s'applique à cet objet <see cref="T:System.Configuration.Configuration" />.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.EvaluationContext">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Configuration.ContextInformation&quot; /&gt; object for the &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">Obtient l'objet <see cref="T:System.Configuration.ContextInformation" /> pour l'objet <see cref="T:System.Configuration.Configuration" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ContextInformation&quot; /&gt; object for the &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">Objet <see cref="T:System.Configuration.ContextInformation" /> pour l'objet <see cref="T:System.Configuration.Configuration" />.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.FilePath">
      <summary vsli:raw="Gets the physical path to the configuration file represented by this &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">Obtient le chemin d'accès physique du fichier de configuration représenté par cet objet <see cref="T:System.Configuration.Configuration" />.</summary>
      <returns vsli:raw="The physical path to the configuration file represented by this &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">Chemin d'accès physique du fichier de configuration représenté par cet objet <see cref="T:System.Configuration.Configuration" />.</returns>
    </member>
    <member name="M:System.Configuration.Configuration.GetSection(System.String)">
      <summary vsli:raw="Returns the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object.">Retourne l'objet <see cref="T:System.Configuration.ConfigurationSection" /> spécifié.</summary>
      <param name="sectionName" vsli:raw="The path to the section to be returned.">Chemin d'accès de la section à retourner.</param>
      <returns vsli:raw="The specified &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object, or &lt;see langword=&quot;null&quot; /&gt; if the requested section does not exist.">Objet <see cref="T:System.Configuration.ConfigurationSection" /> spécifié ou <see langword="null" /> si la section demandée n’existe pas.</returns>
    </member>
    <member name="M:System.Configuration.Configuration.GetSectionGroup(System.String)">
      <summary vsli:raw="Gets the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object.">Obtient l'objet <see cref="T:System.Configuration.ConfigurationSectionGroup" /> spécifié.</summary>
      <param name="sectionGroupName" vsli:raw="The path name of the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; to return.">Nom du chemin d'accès du <see cref="T:System.Configuration.ConfigurationSectionGroup" /> à retourner.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; specified, or &lt;see langword=&quot;null&quot; /&gt; if the requested section group does not exist.">
        <see cref="T:System.Configuration.ConfigurationSectionGroup" /> spécifié ou <see langword="null" /> si le groupe de sections demandé n’existe pas.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.HasFile">
      <summary vsli:raw="Gets a value that indicates whether a file exists for the resource represented by this &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">Indique si un fichier de configuration existe pour la ressource représentée par cet objet <see cref="T:System.Configuration.Configuration" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there is a configuration file; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> s'il existe un fichier de configuration ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.Locations">
      <summary vsli:raw="Gets the locations defined within this &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">Obtient les emplacements définis dans cet objet <see cref="T:System.Configuration.Configuration" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConfigurationLocationCollection&quot; /&gt; containing the locations defined within this &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">
        <see cref="T:System.Configuration.ConfigurationLocationCollection" /> contenant les emplacements définis dans cet objet <see cref="T:System.Configuration.Configuration" />.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.NamespaceDeclared">
      <summary vsli:raw="Gets or sets a value indicating whether the configuration file has an XML namespace.">Obtient ou définit une valeur indiquant si le fichier de configuration a un espace de noms XML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration file has an XML namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le fichier de configuration a un espace de noms XML ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.RootSectionGroup">
      <summary vsli:raw="Gets the root &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; for this &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">Obtient le <see cref="T:System.Configuration.ConfigurationSectionGroup" /> racine pour cet objet <see cref="T:System.Configuration.Configuration" />.</summary>
      <returns vsli:raw="The root section group for this &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">Groupe de sections racine pour cet objet <see cref="T:System.Configuration.Configuration" />.</returns>
    </member>
    <member name="M:System.Configuration.Configuration.Save">
      <summary vsli:raw="Writes the configuration settings contained within this &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object to the current XML configuration file.">Écrit les paramètres de configuration contenus dans cet objet <see cref="T:System.Configuration.Configuration" /> dans le fichier de configuration XML actuel.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The configuration file could not be written to.  &#xA;  &#xA;-or-&#xA;  &#xA; The configuration file has changed.">Impossible d'écrire dans le fichier de configuration.  

ou -

 Le fichier de configuration a changé.</exception>
    </member>
    <member name="M:System.Configuration.Configuration.Save(System.Configuration.ConfigurationSaveMode)">
      <summary vsli:raw="Writes the configuration settings contained within this &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object to the current XML configuration file.">Écrit les paramètres de configuration contenus dans cet objet <see cref="T:System.Configuration.Configuration" /> dans le fichier de configuration XML actuel.</summary>
      <param name="saveMode" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConfigurationSaveMode&quot; /&gt; value that determines which property values to save.">Valeur <see cref="T:System.Configuration.ConfigurationSaveMode" /> qui détermine les valeurs de propriété à enregistrer.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The configuration file could not be written to.  &#xA;  &#xA;-or-&#xA;  &#xA; The configuration file has changed.">Impossible d'écrire dans le fichier de configuration.  
ou
 Le fichier de configuration a changé.</exception>
    </member>
    <member name="M:System.Configuration.Configuration.Save(System.Configuration.ConfigurationSaveMode,System.Boolean)">
      <summary vsli:raw="Writes the configuration settings contained within this &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object to the current XML configuration file.">Écrit les paramètres de configuration contenus dans cet objet <see cref="T:System.Configuration.Configuration" /> dans le fichier de configuration XML actuel.</summary>
      <param name="saveMode" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConfigurationSaveMode&quot; /&gt; value that determines which property values to save.">Valeur <see cref="T:System.Configuration.ConfigurationSaveMode" /> qui détermine les valeurs de propriété à enregistrer.</param>
      <param name="forceSaveAll" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to save even if the configuration was not modified; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> à enregistrer même si la configuration n'a pas été modifiée ; sinon, <see langword="false" />.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The configuration file could not be written to.  &#xA;  &#xA;-or-&#xA;  &#xA; The configuration file has changed.">Impossible d'écrire dans le fichier de configuration.  

ou -

 Le fichier de configuration a changé.</exception>
    </member>
    <member name="M:System.Configuration.Configuration.SaveAs(System.String)">
      <summary vsli:raw="Writes the configuration settings contained within this &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object to the specified XML configuration file.">Écrit les paramètres de configuration contenus dans cet objet <see cref="T:System.Configuration.Configuration" /> dans le fichier de configuration XML spécifié.</summary>
      <param name="filename" vsli:raw="The path and file name to save the configuration file to.">Chemin d'accès et nom de fichier à utiliser pour enregistrer le fichier de configuration.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The configuration file could not be written to.  &#xA;  &#xA;-or-&#xA;  &#xA; The configuration file has changed.">Impossible d'écrire dans le fichier de configuration.  

ou -

 Le fichier de configuration a changé.</exception>
    </member>
    <member name="M:System.Configuration.Configuration.SaveAs(System.String,System.Configuration.ConfigurationSaveMode)">
      <summary vsli:raw="Writes the configuration settings contained within this &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object to the specified XML configuration file.">Écrit les paramètres de configuration contenus dans cet objet <see cref="T:System.Configuration.Configuration" /> dans le fichier de configuration XML spécifié.</summary>
      <param name="filename" vsli:raw="The path and file name to save the configuration file to.">Chemin d'accès et nom de fichier à utiliser pour enregistrer le fichier de configuration.</param>
      <param name="saveMode" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConfigurationSaveMode&quot; /&gt; value that determines which property values to save.">Valeur <see cref="T:System.Configuration.ConfigurationSaveMode" /> qui détermine les valeurs de propriété à enregistrer.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The configuration file could not be written to.  &#xA;  &#xA;-or-&#xA;  &#xA; The configuration file has changed.">Impossible d'écrire dans le fichier de configuration.  

ou -

 Le fichier de configuration a changé.</exception>
    </member>
    <member name="M:System.Configuration.Configuration.SaveAs(System.String,System.Configuration.ConfigurationSaveMode,System.Boolean)">
      <summary vsli:raw="Writes the configuration settings contained within this &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object to the specified XML configuration file.">Écrit les paramètres de configuration contenus dans cet objet <see cref="T:System.Configuration.Configuration" /> dans le fichier de configuration XML spécifié.</summary>
      <param name="filename" vsli:raw="The path and file name to save the configuration file to.">Chemin d'accès et nom de fichier à utiliser pour enregistrer le fichier de configuration.</param>
      <param name="saveMode" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConfigurationSaveMode&quot; /&gt; value that determines which property values to save.">Valeur <see cref="T:System.Configuration.ConfigurationSaveMode" /> qui détermine les valeurs de propriété à enregistrer.</param>
      <param name="forceSaveAll" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to save even if the configuration was not modified; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> à enregistrer même si la configuration n'a pas été modifiée ; sinon, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;filename&quot; /&gt; is null or an empty string (&quot;&quot;).">
        <paramref name="filename" /> est null ou une chaîne vide ("").</exception>
    </member>
    <member name="P:System.Configuration.Configuration.SectionGroups">
      <summary vsli:raw="Gets a collection of the section groups defined by this configuration.">Obtient la collection des groupes de sections définis par cette configuration.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroupCollection&quot; /&gt; collection representing the collection of section groups for this &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">Collection <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> représentant la collection de groupes de sections pour cet objet <see cref="T:System.Configuration.Configuration" />.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.Sections">
      <summary vsli:raw="Gets a collection of the sections defined by this &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">Obtient une collection des sections définies par cet objet <see cref="T:System.Configuration.Configuration" />.</summary>
      <returns vsli:raw="A collection of the sections defined by this &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">Collection des sections définies par cet objet <see cref="T:System.Configuration.Configuration" />.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.TargetFramework">
      <summary vsli:raw="Gets or sets the targeted version of .NET when a version earlier than the current one is targeted.">Spécifie la version ciblée du .NET Framework lorsqu'une version antérieure à l'actuelle est ciblée.</summary>
      <returns vsli:raw="The name of the targeted version of .NET. The default value is &lt;see langword=&quot;null&quot; /&gt;, which indicates that the current version is targeted.">Nom de la version ciblée du .NET Framework. La valeur par défaut est <see langword="null" />, ce qui indique que la version actuelle est ciblée.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.TypeStringTransformer">
      <summary vsli:raw="Specifies a function delegate that is used to transform type strings in configuration files.">Spécifie un délégué de fonction utilisé pour transformer des chaînes de type dans les fichiers de configuration.</summary>
      <returns vsli:raw="A delegate that transforms type strings. The default value is &lt;see langword=&quot;null&quot; /&gt;.">Délégué qui transforme des chaînes de type. La valeur par défaut est <see langword="null" />.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationAllowDefinition">
      <summary vsli:raw="Specifies the locations within the configuration-file hierarchy that can set or override the properties contained within a &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object.">Spécifie les emplacements dans la hiérarchie des fichiers de configuration qui peuvent définir ou substituer les propriétés contenues dans un objet <see cref="T:System.Configuration.ConfigurationSection" />.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowDefinition.Everywhere">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; can be defined anywhere.">
        <see cref="T:System.Configuration.ConfigurationSection" /> peut être défini n'importe où.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowDefinition.MachineOnly">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; can be defined only in the Machine.config file.">
        <see cref="T:System.Configuration.ConfigurationSection" /> peut uniquement être défini dans le fichier Machine.config.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowDefinition.MachineToApplication">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; can be defined in either the Machine.config file, the machine-level Web.config file found in the same directory as Machine.config, or the top-level application Web.config file found in the virtual-directory root, but not in subdirectories of a virtual root.">
        <see cref="T:System.Configuration.ConfigurationSection" /> peut être défini dans le fichier Machine.config, le fichier Web.config au niveau de l'ordinateur situé dans le même répertoire que Machine.config ou le fichier Web.config au niveau supérieur de l'application situé à la racine du répertoire virtuel, mais pas dans les sous-répertoires d'une racine virtuelle.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowDefinition.MachineToWebRoot">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; can be defined in either the Machine.config file or the machine-level Web.config file found in the same directory as Machine.config, but not in application Web.config files.">
        <see cref="T:System.Configuration.ConfigurationSection" /> peut être défini dans le fichier Machine.config ou le fichier Web.config au niveau de l'ordinateur situé dans le même répertoire que Machine.config, mais pas dans les fichiers Web.config de l'application.</summary>
    </member>
    <member name="T:System.Configuration.ConfigurationAllowExeDefinition">
      <summary vsli:raw="Specifies the locations within the configuration-file hierarchy that can set or override the properties contained within a &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object.">Spécifie les emplacements dans la hiérarchie des fichiers de configuration qui peuvent définir ou substituer les propriétés contenues dans un objet <see cref="T:System.Configuration.ConfigurationSection" />.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowExeDefinition.MachineOnly">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; can be defined only in the Machine.config file.">
        <see cref="T:System.Configuration.ConfigurationSection" /> peut uniquement être défini dans le fichier Machine.config.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowExeDefinition.MachineToApplication">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; can be defined either in the Machine.config file or in the Exe.config file in the client application directory. This is the default value.">
        <see cref="T:System.Configuration.ConfigurationSection" /> peut être défini dans le fichier Machine.config ou dans le fichier Exe.config du répertoire de l'application cliente. Valeur par défaut.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowExeDefinition.MachineToLocalUser">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; can be defined in the Machine.config file, in the Exe.config file in the client application directory, in the User.config file in the roaming user directory, or in the User.config file in the local user directory.">
        <see cref="T:System.Configuration.ConfigurationSection" /> peut être défini dans le fichier Machine.config, dans le fichier Exe.config du répertoire de l'application cliente, dans le fichier User.config du répertoire de l'utilisateur itinérant ou dans le fichier User.config du répertoire de l'utilisateur local.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowExeDefinition.MachineToRoamingUser">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; can be defined in the Machine.config file, in the Exe.config file in the client application directory, or in the User.config file in the roaming user directory.">
        <see cref="T:System.Configuration.ConfigurationSection" /> peut être défini dans le fichier Machine.config, dans le fichier Exe.config du répertoire de l'application cliente ou dans le fichier User.config du répertoire de l'utilisateur itinérant.</summary>
    </member>
    <member name="T:System.Configuration.ConfigurationCollectionAttribute">
      <summary vsli:raw="Declaratively instructs .NET to create an instance of a configuration element collection. This class cannot be inherited.">Ordonne de manière déclarative au .NET Framework de créer une instance d'une collection d'éléments de configuration. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationCollectionAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationCollectionAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationCollectionAttribute" />.</summary>
      <param name="itemType" vsli:raw="The type of the property collection to create.">Type de la collection de propriétés à créer.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;itemType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="itemType" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationCollectionAttribute.AddItemName">
      <summary vsli:raw="Gets or sets the name of the &lt;see langword=&quot;&amp;lt;add&amp;gt;&quot; /&gt; configuration element.">Obtient ou définit le nom de l'élément de configuration <see langword="&lt;add&gt;" />.</summary>
      <returns vsli:raw="The name that substitutes the standard name &quot;add&quot; for the configuration item.">Nom qui remplace le nom standard "add" de l'élément de configuration.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationCollectionAttribute.ClearItemsName">
      <summary vsli:raw="Gets or sets the name for the &lt;see langword=&quot;&amp;lt;clear&amp;gt;&quot; /&gt; configuration element.">Obtient ou définit le nom de l'élément de configuration <see langword="&lt;clear&gt;" />.</summary>
      <returns vsli:raw="The name that replaces the standard name &quot;clear&quot; for the configuration item.">Nom qui remplace le nom standard "clear" de l'élément de configuration.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationCollectionAttribute.CollectionType">
      <summary vsli:raw="Gets or sets the type of the &lt;see cref=&quot;T:System.Configuration.ConfigurationCollectionAttribute&quot; /&gt; attribute.">Obtient ou définit le type de l'attribut <see cref="T:System.Configuration.ConfigurationCollectionAttribute" />.</summary>
      <returns vsli:raw="The type of the &lt;see cref=&quot;T:System.Configuration.ConfigurationCollectionAttribute&quot; /&gt;.">Type de <see cref="T:System.Configuration.ConfigurationCollectionAttribute" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationCollectionAttribute.ItemType">
      <summary vsli:raw="Gets the type of the collection element.">Obtient le type de l'élément de la collection.</summary>
      <returns vsli:raw="The type of the collection element.">Type de l'élément de la collection.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationCollectionAttribute.RemoveItemName">
      <summary vsli:raw="Gets or sets the name for the &lt;see langword=&quot;&amp;lt;remove&amp;gt;&quot; /&gt; configuration element.">Obtient ou définit le nom de l'élément de configuration <see langword="&lt;remove&gt;" />.</summary>
      <returns vsli:raw="The name that replaces the standard name &quot;remove&quot; for the configuration element.">Nom qui remplace le nom standard "remove" de l'élément de configuration.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationConverterBase">
      <summary vsli:raw="The base class for the configuration converter types.">Classe de base des types de convertisseurs de configuration.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationConverterBase.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationConverterBase&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationConverterBase" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether the conversion is allowed.">Détermine si la conversion est autorisée.</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; object used for type conversions.">Objet <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilisé pour les conversions de type.</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to convert from.">
        <see cref="T:System.Type" /> à partir duquel effectuer la conversion.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the conversion is allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la conversion est autorisée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether the conversion is allowed.">Détermine si la conversion est autorisée.</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; object used for type conversion.">Objet <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilisé pour la conversion de type.</param>
      <param name="type" vsli:raw="The type to convert to.">Type vers lequel effectuer la conversion.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the conversion is allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la conversion est autorisée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationElement">
      <summary vsli:raw="Represents a configuration element within a configuration file.">Représente un élément de configuration dans un fichier de configuration.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.CurrentConfiguration">
      <summary vsli:raw="Gets a reference to the top-level &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; instance that represents the configuration hierarchy that the current &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; instance belongs to.">Obtient une référence à l'instance <see cref="T:System.Configuration.Configuration" /> de niveau supérieur qui représente la hiérarchie de configuration à laquelle l'instance <see cref="T:System.Configuration.ConfigurationElement" /> actuelle appartient.</summary>
      <returns vsli:raw="The top-level &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; instance that the current &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; instance belongs to.">Instance <see cref="T:System.Configuration.Configuration" /> de niveau supérieur à laquelle l'instance <see cref="T:System.Configuration.ConfigurationElement" /> actuelle appartient.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
      <summary vsli:raw="Reads XML from the configuration file.">Lit du XML à partir du fichier de configuration.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that reads from the configuration file.">
        <see cref="T:System.Xml.XmlReader" /> qui lit le fichier de configuration.</param>
      <param name="serializeCollectionKey" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to serialize only the collection key properties; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour sérialiser uniquement les propriétés clés de la collection ; sinon <see langword="false" />.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The element to read is locked.  &#xA;  &#xA;-or-&#xA;  &#xA; An attribute of the current node is not recognized.  &#xA;  &#xA;-or-&#xA;  &#xA; The lock status of the current node cannot be determined.">L'élément à lire est verrouillé.  

ou -

 Un attribut du nœud actuel n'est pas reconnu.  
ou
 L'état de verrouillage du nœud actuel ne peut pas être déterminé.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.ElementInformation">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Configuration.ElementInformation&quot; /&gt; object that contains the non-customizable information and functionality of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object.">Obtient un objet <see cref="T:System.Configuration.ElementInformation" /> qui contient les fonctionnalités et informations non personnalisables de l'objet <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Configuration.ElementInformation&quot; /&gt; that contains the non-customizable information and functionality of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt;.">
        <see cref="T:System.Configuration.ElementInformation" /> qui contient les fonctionnalités et informations non personnalisables de <see cref="T:System.Configuration.ConfigurationElement" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.ElementProperty">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementProperty&quot; /&gt; object that represents the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object itself.">Obtient l'objet <see cref="T:System.Configuration.ConfigurationElementProperty" /> qui représente l'objet <see cref="T:System.Configuration.ConfigurationElement" /> lui-même.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationElementProperty&quot; /&gt; that represents the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; itself.">
        <see cref="T:System.Configuration.ConfigurationElementProperty" /> qui représente le <see cref="T:System.Configuration.ConfigurationElement" /> lui-même.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.Equals(System.Object)">
      <summary vsli:raw="Compares the current &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; instance to the specified object.">Compare l’instance de <see cref="T:System.Configuration.ConfigurationElement" /> actuelle à l’objet spécifié.</summary>
      <param name="compareTo" vsli:raw="The object to compare with.">Objet avec lequel comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object to compare with is equal to the current &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet à comparer équivaut à l'instance de <see cref="T:System.Configuration.ConfigurationElement" /> actuelle ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.EvaluationContext">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Configuration.ContextInformation&quot; /&gt; object for the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object.">Obtient l'objet <see cref="T:System.Configuration.ContextInformation" /> pour l'objet <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ContextInformation&quot; /&gt; for the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt;.">
        <see cref="T:System.Configuration.ContextInformation" /> pour <see cref="T:System.Configuration.ConfigurationElement" />.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The current element is not associated with a context.">L'élément actuel n'est pas associé à un contexte.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.GetHashCode">
      <summary vsli:raw="Gets a unique value representing the current &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; instance.">Obtient une valeur unique représentant l'instance actuelle de <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
      <returns vsli:raw="A unique value representing the current &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; instance.">Valeur unique représentant l'instance actuelle de <see cref="T:System.Configuration.ConfigurationElement" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)">
      <summary vsli:raw="Returns the transformed version of the specified assembly name.">Retourne la version transformée du nom de l'assembly spécifié.</summary>
      <param name="assemblyName" vsli:raw="The name of the assembly.">Nom de l'assembly.</param>
      <returns vsli:raw="The transformed version of the assembly name. If no transformer is available, the &lt;paramref name=&quot;assemblyName&quot; /&gt; parameter value is returned unchanged. The &lt;see cref=&quot;P:System.Configuration.Configuration.TypeStringTransformer&quot; /&gt; property is &lt;see langword=&quot;null&quot; /&gt; if no transformer is available.">Version transformée du nom de l'assembly. Si aucun transformateur n'est disponible, la valeur de paramètre <paramref name="assemblyName" /> est retournée inchangée. La valeur de la propriété <see cref="P:System.Configuration.Configuration.TypeStringTransformer" /> est <see langword="null" /> si aucun transformateur n'est disponible.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)">
      <summary vsli:raw="Returns the transformed version of the specified type name.">Retourne la version transformée du nom de type spécifié.</summary>
      <param name="typeName" vsli:raw="The name of the type.">Nom du type.</param>
      <returns vsli:raw="The transformed version of the specified type name. If no transformer is available, the &lt;paramref name=&quot;typeName&quot; /&gt; parameter value is returned unchanged. The &lt;see cref=&quot;P:System.Configuration.Configuration.TypeStringTransformer&quot; /&gt; property is &lt;see langword=&quot;null&quot; /&gt; if no transformer is available.">Version transformée du nom de type spécifié. Si aucun transformateur n'est disponible, la valeur de paramètre <paramref name="typeName" /> est retournée inchangée. La valeur de la propriété <see cref="P:System.Configuration.Configuration.TypeStringTransformer" /> est <see langword="null" /> si aucun transformateur n'est disponible.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.HasContext">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;P:System.Configuration.ConfigurationElement.CurrentConfiguration&quot; /&gt; property is &lt;see langword=&quot;null&quot; /&gt;.">Obtient une valeur qui indique si la propriété <see cref="P:System.Configuration.ConfigurationElement.CurrentConfiguration" /> a la valeur <see langword="null" />.</summary>
      <returns vsli:raw="false if the &lt;see cref=&quot;P:System.Configuration.ConfigurationElement.CurrentConfiguration&quot; /&gt; property is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;true&quot; /&gt;.">false si la propriété <see cref="P:System.Configuration.ConfigurationElement.CurrentConfiguration" /> est <see langword="null" /> ; sinon, <see langword="true" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.Init">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object to its initial state.">Rétablit l’état initial de l’objet <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.InitializeDefault">
      <summary vsli:raw="Used to initialize a default set of values for the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object.">Utilisé pour initialiser un jeu de valeurs par défaut pour l'objet <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.IsModified">
      <summary vsli:raw="Indicates whether this configuration element has been modified since it was last saved or loaded, when implemented in a derived class.">Indique si cet élément de configuration a été modifié depuis son dernier enregistrement ou chargement lorsqu'il est implémenté dans une classe dérivée.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the element has been modified; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'élément a été modifié ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object is read-only.">Obtient une valeur indiquant si l’objet <see cref="T:System.Configuration.ConfigurationElement" /> est en lecture seule.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet <see cref="T:System.Configuration.ConfigurationElement" /> est en lecture seule ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)">
      <summary vsli:raw="Gets or sets a property or attribute of this configuration element.">Obtient ou définit une propriété ou un attribut de cet élément de configuration.</summary>
      <param name="prop" vsli:raw="The property to access.">Propriété à laquelle accéder.</param>
      <returns vsli:raw="The specified property, attribute, or child element.">Propriété, attribut ou élément enfant spécifié.</returns>
      <exception cref="T:System.Configuration.ConfigurationException" vsli:raw="&lt;paramref name=&quot;prop&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or does not exist within the element.">
        <paramref name="prop" /> est <see langword="null" /> ou n'existe pas dans l'élément.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="&lt;paramref name=&quot;prop&quot; /&gt; is read only or locked.">
        <paramref name="prop" /> est en lecture seule ou verrouillé.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.Item(System.String)">
      <summary vsli:raw="Gets or sets a property, attribute, or child element of this configuration element.">Obtient ou définit une propriété, un attribut ou un élément enfant de cet élément de configuration.</summary>
      <param name="propertyName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; to access.">Nom du <see cref="T:System.Configuration.ConfigurationProperty" /> auquel accéder.</param>
      <returns vsli:raw="The specified property, attribute, or child element.">Propriété, attribut ou élément enfant spécifié</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="&lt;paramref name=&quot;prop&quot; /&gt; is read-only or locked.">
        <paramref name="prop" /> est en lecture seule ou verrouillé.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)">
      <summary vsli:raw="Adds the invalid-property errors in this &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object, and in all subelements, to the passed list.">Ajoute les erreurs de propriété non valide dans cet objet <see cref="T:System.Configuration.ConfigurationElement" /> et dans tous les sous-éléments à la liste passée.</summary>
      <param name="errorList" vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; interface.">Objet qui implémente l'interface <see cref="T:System.Collections.IList" />.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept">
      <summary vsli:raw="Gets the collection of locked attributes.">Obtient la collection d'attributs verrouillés.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationLockCollection&quot; /&gt; of locked attributes (properties) for the element.">
        <see cref="T:System.Configuration.ConfigurationLockCollection" /> d'attributs (propriétés) verrouillés de l'élément.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.LockAllElementsExcept">
      <summary vsli:raw="Gets the collection of locked elements.">Obtient la collection d'éléments verrouillés.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationLockCollection&quot; /&gt; of locked elements.">
        <see cref="T:System.Configuration.ConfigurationLockCollection" /> d'éléments verrouillés.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.LockAttributes">
      <summary vsli:raw="Gets the collection of locked attributes.">Obtient la collection d'attributs verrouillés.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationLockCollection&quot; /&gt; of locked attributes (properties) for the element.">
        <see cref="T:System.Configuration.ConfigurationLockCollection" /> d'attributs (propriétés) verrouillés de l'élément.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.LockElements">
      <summary vsli:raw="Gets the collection of locked elements.">Obtient la collection d'éléments verrouillés.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationLockCollection&quot; /&gt; of locked elements.">
        <see cref="T:System.Configuration.ConfigurationLockCollection" /> d'éléments verrouillés.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.LockItem">
      <summary vsli:raw="Gets or sets a value indicating whether the element is locked.">Obtient ou définit une valeur indiquant si l'élément est verrouillé.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the element is locked; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'élément est verrouillé ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The element has already been locked at a higher configuration level.">L'élément a déjà été verrouillé à un niveau de configuration supérieur.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
      <summary vsli:raw="Gets a value indicating whether an unknown attribute is encountered during deserialization.">Obtient une valeur indiquant si un attribut inconnu est rencontré pendant la désérialisation.</summary>
      <param name="name" vsli:raw="The name of the unrecognized attribute.">Nom de l'attribut non reconnu.</param>
      <param name="value" vsli:raw="The value of the unrecognized attribute.">Valeur de l'attribut non reconnu.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; when an unknown attribute is encountered while deserializing; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> lorsqu'un attribut inconnu est rencontré pendant la désérialisation ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
      <summary vsli:raw="Gets a value indicating whether an unknown element is encountered during deserialization.">Obtient une valeur indiquant si un élément inconnu est rencontré pendant la désérialisation.</summary>
      <param name="elementName" vsli:raw="The name of the unknown subelement.">Nom du sous-élément inconnu.</param>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; being used for deserialization.">
        <see cref="T:System.Xml.XmlReader" /> utilisé pour la désérialisation.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; when an unknown element is encountered while deserializing; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> lorsqu'un élément inconnu est rencontré pendant la désérialisation ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The element identified by &lt;paramref name=&quot;elementName&quot; /&gt; is locked.  &#xA;  &#xA;-or-&#xA;  &#xA; One or more of the element's attributes is locked.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;elementName&quot; /&gt; is unrecognized, or the element has an unrecognized attribute.  &#xA;  &#xA;-or-&#xA;  &#xA; The element has a Boolean attribute with an invalid value.  &#xA;  &#xA;-or-&#xA;  &#xA; An attempt was made to deserialize a property more than once.  &#xA;  &#xA;-or-&#xA;  &#xA; An attempt was made to deserialize a property that is not a valid member of the element.  &#xA;  &#xA;-or-&#xA;  &#xA; The element cannot contain a CDATA or text element.">L'élément identifié par <paramref name="elementName" /> est verrouillé.  

ou - 
Un ou plusieurs des attributs de l'élément sont verrouillés.  

ou - 
<paramref name="elementName" /> n'est pas reconnu, ou l'élément a un attribut non reconnu.  

ou - 
L'élément a un attribut Boolean avec une valeur non valide.  

ou - 
Une tentative a été effectuée pour désérialiser une propriété plusieurs fois.  

ou - 
Une tentative a été effectuée pour désérialiser une propriété qui n'est pas un membre valide de l'élément.  


ou 
L'élément ne peut pas contenir un élément CDATA ou un élément de texte.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)">
      <summary vsli:raw="Throws an exception when a required property is not found.">Lève une exception lorsqu'une propriété requise est introuvable.</summary>
      <param name="name" vsli:raw="The name of the required attribute that was not found.">Nom de l'attribut requis qui n'a pas été trouvé.</param>
      <returns>Aucun.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="In all cases.">Dans tous les cas.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.PostDeserialize">
      <summary vsli:raw="Called after deserialization.">Appelé après la désérialisation.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)">
      <summary vsli:raw="Called before serialization.">Appelé avant la sérialisation.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that will be used to serialize the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt;.">
        <see cref="T:System.Xml.XmlWriter" /> qui sera utilisé pour sérialiser <see cref="T:System.Configuration.ConfigurationElement" />.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.Properties">
      <summary vsli:raw="Gets the collection of properties.">Obtient la collection de propriétés.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationPropertyCollection&quot; /&gt; of properties for the element.">
        <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> de propriétés de l'élément.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)">
      <summary vsli:raw="Resets the internal state of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object, including the locks and the properties collections.">Rétablit l'état interne de l'objet <see cref="T:System.Configuration.ConfigurationElement" />, y compris les verrouillages et les collections de propriétés.</summary>
      <param name="parentElement" vsli:raw="The parent node of the configuration element.">Nœud parent de l’élément de configuration.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.ResetModified">
      <summary vsli:raw="Resets the value of the &lt;see cref=&quot;M:System.Configuration.ConfigurationElement.IsModified&quot; /&gt; method to &lt;see langword=&quot;false&quot; /&gt; when implemented in a derived class.">Réinitialise la valeur de la méthode <see cref="M:System.Configuration.ConfigurationElement.IsModified" /> à <see langword="false" /> en cas d’implémentation dans une classe dérivée.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
      <summary vsli:raw="Writes the contents of this configuration element to the configuration file when implemented in a derived class.">Écrit le contenu de cet élément de configuration dans le fichier de configuration lorsqu'il est implémenté dans une classe dérivée.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that writes to the configuration file.">
        <see cref="T:System.Xml.XmlWriter" /> écrivant dans le fichier de configuration.</param>
      <param name="serializeCollectionKey" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to serialize only the collection key properties; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour sérialiser uniquement les propriétés clés de la collection ; sinon <see langword="false" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any data was actually serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les données ont été correctement sérialisées ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The current attribute is locked at a higher configuration level.">L'attribut actuel est verrouillé à un niveau de configuration supérieur.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
      <summary vsli:raw="Writes the outer tags of this configuration element to the configuration file when implemented in a derived class.">Écrit les balises extérieures de cet élément de configuration dans le fichier de configuration lorsqu'il est implémenté dans une classe dérivée.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that writes to the configuration file.">
        <see cref="T:System.Xml.XmlWriter" /> écrivant dans le fichier de configuration.</param>
      <param name="elementName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; to be written.">Nom de <see cref="T:System.Configuration.ConfigurationElement" /> qui doit être écrit.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if writing was successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'écriture a réussi ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.Exception" vsli:raw="The element has multiple child elements.">L'élément a plusieurs éléments enfants.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)">
      <summary vsli:raw="Sets a property to the specified value.">Affecte la valeur spécifiée à une propriété.</summary>
      <param name="prop" vsli:raw="The element property to set.">Propriété d'élément à définir.</param>
      <param name="value" vsli:raw="The value to assign to the property.">Valeur à assigner à la propriété.</param>
      <param name="ignoreLocks" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the locks on the property should be ignored; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les verrous de la propriété doivent être ignorés ; sinon, <see langword="false" />.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="Occurs if the element is read-only or &lt;paramref name=&quot;ignoreLocks&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt; but the locks cannot be ignored.">Se produit si l'élément est en lecture seule ou que <paramref name="ignoreLocks" /> est <see langword="true" /> mais que les verrouillages ne peuvent pas être ignorés.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.SetReadOnly">
      <summary vsli:raw="Sets the &lt;see cref=&quot;M:System.Configuration.ConfigurationElement.IsReadOnly&quot; /&gt; property for the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object and all subelements.">Définit la propriété <see cref="M:System.Configuration.ConfigurationElement.IsReadOnly" /> pour l'objet <see cref="T:System.Configuration.ConfigurationElement" /> et tous les sous-éléments.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
      <summary vsli:raw="Modifies the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object to remove all values that should not be saved.">Modifie l'objet <see cref="T:System.Configuration.ConfigurationElement" /> pour supprimer toutes les valeurs qui ne doivent pas être enregistrées.</summary>
      <param name="sourceElement" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; at the current level containing a merged view of the properties.">
        <see cref="T:System.Configuration.ConfigurationElement" /> au niveau actuel contenant un affichage fusionné des propriétés.</param>
      <param name="parentElement" vsli:raw="The parent &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if this is the top level.">
        <see cref="T:System.Configuration.ConfigurationElement" /> parent, ou <see langword="null" /> s'il s'agit du niveau supérieur.</param>
      <param name="saveMode" vsli:raw="One of the enumeration values that determines which property values to include.">Une des valeurs d’énumération qui détermine les valeurs de propriétés à inclure.</param>
    </member>
    <member name="T:System.Configuration.ConfigurationElementCollection">
      <summary vsli:raw="Represents a configuration element containing a collection of child elements.">Représente un élément de configuration contenant une collection d’éléments enfants.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.#ctor(System.Collections.IComparer)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; class.">Crée une instance de la classe <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <param name="comparer" vsli:raw="The &lt;see cref=&quot;T:System.Collections.IComparer&quot; /&gt; comparer to use.">Comparateur <see cref="T:System.Collections.IComparer" /> à utiliser.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;comparer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="comparer" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.AddElementName">
      <summary vsli:raw="Gets or sets the name of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; to associate with the add operation in the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; when overridden in a derived class.">Obtient ou définit le nom du <see cref="T:System.Configuration.ConfigurationElement" /> à associer à l'opération d'ajout dans <see cref="T:System.Configuration.ConfigurationElementCollection" /> en cas de substitution dans une classe dérivée.</summary>
      <returns vsli:raw="The name of the element.">Nom de l'élément.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The selected value starts with the reserved prefix &quot;config&quot; or &quot;lock&quot;.">La valeur sélectionnée commence par le préfixe réservé "config" ou "lock".</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)">
      <summary vsli:raw="Adds a configuration element to the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt;.">Ajoute un élément de configuration à <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; to add.">
        <see cref="T:System.Configuration.ConfigurationElement" /> à ajouter.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)">
      <summary vsli:raw="Adds a configuration element to the configuration element collection.">Ajoute un élément de configuration à la collection d'éléments de configuration.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; to add.">
        <see cref="T:System.Configuration.ConfigurationElement" /> à ajouter.</param>
      <param name="throwIfExists" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to throw an exception if the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; specified is already contained in the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour lever une exception si le <see cref="T:System.Configuration.ConfigurationElement" /> spécifié est déjà contenu dans <see cref="T:System.Configuration.ConfigurationElementCollection" /> ; sinon, <see langword="false" />.</param>
      <exception cref="T:System.Exception" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; to add already exists in the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; and the &lt;paramref name=&quot;throwIfExists&quot; /&gt; parameter is &lt;see langword=&quot;true&quot; /&gt;.">Le <see cref="T:System.Configuration.ConfigurationElement" /> à ajouter existe déjà dans <see cref="T:System.Configuration.ConfigurationElementCollection" /> et le paramètre <paramref name="throwIfExists" /> est <see langword="true" />.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)">
      <summary vsli:raw="Adds a configuration element to the configuration element collection.">Ajoute un élément de configuration à la collection d'éléments de configuration.</summary>
      <param name="index" vsli:raw="The index location at which to add the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt;.">Emplacement d'index où ajouter le <see cref="T:System.Configuration.ConfigurationElement" /> spécifié.</param>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; to add.">
        <see cref="T:System.Configuration.ConfigurationElement" /> à ajouter.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseClear">
      <summary vsli:raw="Removes all configuration element objects from the collection.">Supprime tous les objets d'élément de configuration de la collection.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The configuration is read-only.  &#xA;  &#xA;-or-&#xA;  &#xA; A collection item has been locked in a higher-level configuration.">La configuration est en lecture seule.  

ou -

 Un élément de collection a été verrouillé dans une configuration de niveau supérieur.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)">
      <summary vsli:raw="Gets the configuration element at the specified index location.">Obtient l'élément de configuration à l'emplacement d'index spécifié.</summary>
      <param name="index" vsli:raw="The index location of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; to return.">Emplacement d’index du <see cref="T:System.Configuration.ConfigurationElement" /> à retourner.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; at the specified index.">Objet <see cref="T:System.Configuration.ConfigurationElement" /> à l'index spécifié.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than &lt;see langword=&quot;0&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; There is no &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; at the specified &lt;paramref name=&quot;index&quot; /&gt;.">
        <paramref name="index" /> est inférieur à <see langword="0" />.  
ou 
Il n'y a pas de <see cref="T:System.Configuration.ConfigurationElement" /> au niveau du <paramref name="index" /> spécifié.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)">
      <summary vsli:raw="Returns the configuration element with the specified key.">Retourne l'élément de configuration avec la clé spécifiée.</summary>
      <param name="key" vsli:raw="The key of the element to return.">Clé de l'élément à retourner.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; with the specified key; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Configuration.ConfigurationElement" /> avec la clé spécifiée ; sinon, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseGetAllKeys">
      <summary vsli:raw="Returns an array of the keys for all of the configuration elements contained in the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt;.">Retourne un tableau des clés pour tous les éléments de configuration contenus dans <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <returns vsli:raw="An array that contains the keys for all of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; objects contained in the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt;.">Tableau qui contient les clés pour tous les objets <see cref="T:System.Configuration.ConfigurationElement" /> contenus dans <see cref="T:System.Configuration.ConfigurationElementCollection" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)">
      <summary vsli:raw="Gets the key for the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; at the specified index location.">Obtient la clé pour le <see cref="T:System.Configuration.ConfigurationElement" /> à l'emplacement d'index spécifié.</summary>
      <param name="index" vsli:raw="The index location for the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt;.">Emplacement d'index pour <see cref="T:System.Configuration.ConfigurationElement" />.</param>
      <returns vsli:raw="The key for the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt;.">Clé pour le <see cref="T:System.Configuration.ConfigurationElement" /> spécifié.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than &lt;see langword=&quot;0&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; There is no &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; at the specified &lt;paramref name=&quot;index&quot; /&gt;.">
        <paramref name="index" /> est inférieur à <see langword="0" />.  
ou 
Il n'y a pas de <see cref="T:System.Configuration.ConfigurationElement" /> au niveau du <paramref name="index" /> spécifié.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)">
      <summary vsli:raw="Indicates the index of the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt;.">Indique l'index de l'élément <see cref="T:System.Configuration.ConfigurationElement" /> spécifié.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; for the specified index location.">
        <see cref="T:System.Configuration.ConfigurationElement" /> pour l'emplacement d'index spécifié.</param>
      <returns vsli:raw="The index of the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt;; otherwise, -1.">Index du <see cref="T:System.Configuration.ConfigurationElement" /> spécifié ; sinon, -1.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)">
      <summary vsli:raw="Indicates whether the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; with the specified key has been removed from the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt;.">Indique si l'élément <see cref="T:System.Configuration.ConfigurationElement" /> avec la clé spécifiée a été supprimé de la collection <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <param name="key" vsli:raw="The key of the element to check.">Clé de l'élément à vérifier.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; with the specified key has been removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le <see cref="T:System.Configuration.ConfigurationElement" /> avec la clé spécifiée a été supprimé ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)">
      <summary vsli:raw="Removes a &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; from the collection.">Supprime <see cref="T:System.Configuration.ConfigurationElement" /> de la collection.</summary>
      <param name="key" vsli:raw="The key of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; to remove.">Clé du <see cref="T:System.Configuration.ConfigurationElement" /> à supprimer.</param>
      <exception cref="T:System.Exception" vsli:raw="No &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; with the specified key exists in the collection, the element has already been removed, or the element cannot be removed because the value of its &lt;see cref=&quot;P:System.Configuration.ConfigurationProperty.Type&quot; /&gt; is not &lt;see cref=&quot;F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap&quot; /&gt;.">Aucun <see cref="T:System.Configuration.ConfigurationElement" /> avec la clé spécifiée n'existe dans la collection, l'élément a déjà été supprimé ou l'élément ne peut pas être supprimé, car la valeur de son <see cref="P:System.Configuration.ConfigurationProperty.Type" /> n'est pas <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap" />.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; at the specified index location.">Supprime le <see cref="T:System.Configuration.ConfigurationElement" /> à l'emplacement d'index spécifié.</summary>
      <param name="index" vsli:raw="The index location of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; to remove.">Emplacement d'index du <see cref="T:System.Configuration.ConfigurationElement" /> à supprimer.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The configuration is read-only.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is less than &lt;see langword=&quot;0&quot; /&gt; or greater than the number of &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; objects in the collection.  &#xA;  &#xA;-or-&#xA;  &#xA; The &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object has already been removed.  &#xA;  &#xA;-or-&#xA;  &#xA; The value of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object has been locked at a higher level.  &#xA;  &#xA;-or-&#xA;  &#xA; The &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object was inherited.  &#xA;  &#xA;-or-&#xA;  &#xA; The value of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object's &lt;see cref=&quot;P:System.Configuration.ConfigurationProperty.Type&quot; /&gt; is not &lt;see cref=&quot;F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap&quot; /&gt; or &lt;see cref=&quot;F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate&quot; /&gt;.">La configuration est en lecture seule.  

ou - 
<paramref name="index" /> est inférieur à <see langword="0" /> ou supérieur au nombre d'objets <see cref="T:System.Configuration.ConfigurationElement" /> de la collection.  

ou 
L'objet <see cref="T:System.Configuration.ConfigurationElement" /> a déjà été supprimé.  

ou - 
La valeur de l'objet <see cref="T:System.Configuration.ConfigurationElement" /> a été verrouillée à un niveau supérieur.  

ou 
L'objet <see cref="T:System.Configuration.ConfigurationElement" /> est hérité.  

ou - 
La valeur du <see cref="T:System.Configuration.ConfigurationElement" /> de l'objet <see cref="P:System.Configuration.ConfigurationProperty.Type" /> n'est ni <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap" /> ni <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate" />.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.ClearElementName">
      <summary vsli:raw="Gets or sets the name for the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; to associate with the clear operation in the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; when overridden in a derived class.">Obtient ou définit le nom du <see cref="T:System.Configuration.ConfigurationElement" /> à associer à l'opération d'effacement dans <see cref="T:System.Configuration.ConfigurationElementCollection" /> en cas de substitution dans une classe dérivée.</summary>
      <returns vsli:raw="The name of the element.">Nom de l'élément.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The selected value starts with the reserved prefix &quot;config&quot; or &quot;lock&quot;.">La valeur sélectionnée commence par le préfixe réservé "config" ou "lock".</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.CollectionType">
      <summary vsli:raw="Gets the type of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt;.">Obtient le type de <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollectionType&quot; /&gt; of this collection.">
        <see cref="T:System.Configuration.ConfigurationElementCollectionType" /> de cette collection.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)">
      <summary vsli:raw="Copies the contents of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; to an array.">Copie le contenu de <see cref="T:System.Configuration.ConfigurationElementCollection" /> dans un tableau.</summary>
      <param name="array" vsli:raw="Array to which to copy the contents of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt;.">Tableau dans lequel copier le contenu de <see cref="T:System.Configuration.ConfigurationElementCollection" />.</param>
      <param name="index" vsli:raw="Index location at which to begin copying.">Emplacement d'index où commencer la copie.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.Count">
      <summary vsli:raw="Gets the number of elements in the collection.">Obtient le nombre d’éléments de la collection.</summary>
      <returns vsli:raw="The number of elements in the collection.">Nombre d’éléments de la collection.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.CreateNewElement">
      <summary vsli:raw="When overridden in a derived class, creates a new &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt;.">En cas de substitution dans une classe dérivée, crée <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
      <returns vsli:raw="A newly created &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt;.">
        <see cref="T:System.Configuration.ConfigurationElement" /> qui vient d'être créé.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; when overridden in a derived class.">Crée un nouveau <see cref="T:System.Configuration.ConfigurationElement" /> en cas de substitution dans une classe dérivée.</summary>
      <param name="elementName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; to create.">Nom du <see cref="T:System.Configuration.ConfigurationElement" /> à créer.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; with a specified name.">Nouveau <see cref="T:System.Configuration.ConfigurationElement" /> avec un nom spécifié.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.ElementName">
      <summary vsli:raw="Gets the name used to identify this collection of elements in the configuration file when overridden in a derived class.">Obtient le nom utilisé pour identifier cette collection d'éléments dans le fichier de configuration en cas de substitution dans une classe dérivée.</summary>
      <returns vsli:raw="The name of the collection; otherwise, an empty string. The default is an empty string.">Nom de la collection ; sinon, une chaîne vide. La valeur par défaut est une chaîne vide.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.EmitClear">
      <summary vsli:raw="Gets or sets a value that specifies whether the collection has been cleared.">Obtient ou définit une valeur qui spécifie si la collection a été effacée.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection has been cleared; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la collection a été effacée ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The configuration is read-only.">La configuration est en lecture seule.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.Equals(System.Object)">
      <summary vsli:raw="Compares the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; to the specified object.">Compare <see cref="T:System.Configuration.ConfigurationElementCollection" /> avec l'objet spécifié.</summary>
      <param name="compareTo" vsli:raw="The object to compare.">Objet à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object to compare with is equal to the current &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet à comparer équivaut à l'instance de <see cref="T:System.Configuration.ConfigurationElementCollection" /> actuelle ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
      <summary vsli:raw="Gets the element key for a specified configuration element when overridden in a derived class.">Obtient la clé d'élément pour un élément de configuration spécifié en cas de substitution dans une classe dérivée.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; to return the key for.">
        <see cref="T:System.Configuration.ConfigurationElement" /> pour lequel retourner la clé.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that acts as the key for the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt;.">
        <see cref="T:System.Object" /> qui agit comme clé pour le <see cref="T:System.Configuration.ConfigurationElement" /> spécifié.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.GetEnumerator">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; which is used to iterate through the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt;.">Obtient un <see cref="T:System.Collections.IEnumerator" /> utilisé pour itérer au sein de <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; which is used to iterate through the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt;.">
        <see cref="T:System.Collections.IEnumerator" /> utilisé pour itérer au sein de <see cref="T:System.Configuration.ConfigurationElementCollection" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.GetHashCode">
      <summary vsli:raw="Gets a unique value representing the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; instance.">Obtient une valeur unique représentant l'instance de <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <returns vsli:raw="A unique value representing the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; current instance.">Valeur unique représentant l’instance actuelle de <see cref="T:System.Configuration.ConfigurationElementCollection" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.IsElementName(System.String)">
      <summary vsli:raw="Indicates whether the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; exists in the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt;.">Indique si le <see cref="T:System.Configuration.ConfigurationElement" /> spécifié existe dans <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <param name="elementName" vsli:raw="The name of the element to verify.">Nom de l'élément  à vérifier.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the element exists in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'élément existe dans la collection ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)">
      <summary vsli:raw="Indicates whether the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; can be removed from the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt;.">Indique si l'élément <see cref="T:System.Configuration.ConfigurationElement" /> spécifié peut être supprimée de la collection <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <param name="element" vsli:raw="The element to check.">Élément à vérifier.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; can be removed from this &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si le <see cref="T:System.Configuration.ConfigurationElement" /> spécifié peut être supprimé de cette <see cref="T:System.Configuration.ConfigurationElementCollection" /> ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.IsModified">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; has been modified since it was last saved or loaded when overridden in a derived class.">Indique si cette <see cref="T:System.Configuration.ConfigurationElementCollection" /> a été modifiée depuis son dernier enregistrement ou chargement en cas de substitution dans une classe dérivée.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any contained element has been modified; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si un élément contenu a été modifié ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.IsReadOnly">
      <summary vsli:raw="Indicates whether the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; object is read only.">Indique si l'objet <see cref="T:System.Configuration.ConfigurationElementCollection" /> est en lecture seule.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; object is read only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet <see cref="T:System.Configuration.ConfigurationElementCollection" /> est en lecture seule ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the collection is synchronized.">Obtient une valeur indiquant si l'accès à la collection est synchronisé.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; is synchronized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'accès à <see cref="T:System.Configuration.ConfigurationElementCollection" /> est synchronisé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
      <summary vsli:raw="Causes the configuration system to throw an exception.">Fait en sorte que le système de configuration lève une exception.</summary>
      <param name="elementName" vsli:raw="The name of the unrecognized element.">Nom de l'élément non reconnu.</param>
      <param name="reader" vsli:raw="An input stream that reads XML from the configuration file.">Flux d'entrée qui lit le code XML à partir du fichier de configuration.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the unrecognized element was deserialized successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'élément non reconnu a été correctement désérialisé ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The element specified in &lt;paramref name=&quot;elementName&quot; /&gt; is the &lt;see langword=&quot;&amp;lt;clear&amp;gt;&quot; /&gt; element.">L'élément spécifié dans <paramref name="elementName" /> est l'élément <see langword="&lt;clear&gt;" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;elementName&quot; /&gt; starts with the reserved prefix &quot;config&quot; or &quot;lock&quot;.">
        <paramref name="elementName" /> commence par le préfixe réservé "config" ou "lock".</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.RemoveElementName">
      <summary vsli:raw="Gets or sets the name of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; to associate with the remove operation in the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; when overridden in a derived class.">Obtient ou définit le nom du <see cref="T:System.Configuration.ConfigurationElement" /> à associer à l'opération de suppression dans <see cref="T:System.Configuration.ConfigurationElementCollection" /> en cas de substitution dans une classe dérivée.</summary>
      <returns vsli:raw="The name of the element.">Nom de l'élément.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The selected value starts with the reserved prefix &quot;config&quot; or &quot;lock&quot;.">La valeur sélectionnée commence par le préfixe réservé "config" ou "lock".</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)">
      <summary vsli:raw="Resets the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; to its unmodified state when overridden in a derived class.">Réinitialise <see cref="T:System.Configuration.ConfigurationElementCollection" /> à son état non modifié en cas de substitution dans une classe dérivée.</summary>
      <param name="parentElement" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; representing the collection parent element, if any; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Configuration.ConfigurationElement" /> représentant l'élément parent de collection, le cas échéant ; sinon, <see langword="null" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.ResetModified">
      <summary vsli:raw="Resets the value of the &lt;see cref=&quot;M:System.Configuration.ConfigurationElementCollection.IsModified&quot; /&gt; property to &lt;see langword=&quot;false&quot; /&gt; when overridden in a derived class.">Réinitialise la valeur de la propriété <see cref="M:System.Configuration.ConfigurationElementCollection.IsModified" /> à <see langword="false" /> en cas de substitution dans une classe dérivée.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
      <summary vsli:raw="Writes the configuration data to an XML element in the configuration file when overridden in a derived class.">Écrit les données de configuration d'un élément XML dans le fichier de configuration en cas de substitution dans une classe dérivée.</summary>
      <param name="writer" vsli:raw="Output stream that writes XML to the configuration file.">Flux de sortie qui écrit le XML dans le fichier de configuration.</param>
      <param name="serializeCollectionKey" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to serialize the collection key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour sérialiser uniquement la clé de collection ; sinon <see langword="false" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; was written to the configuration file successfully.">
        <see langword="true" /> si <see cref="T:System.Configuration.ConfigurationElementCollection" /> a été écrite avec succès dans le fichier de configuration.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="One of the elements in the collection was added or replaced and starts with the reserved prefix &quot;config&quot; or &quot;lock&quot;.">L'un des éléments de la collection a été ajouté ou remplacé, et commence par le préfixe réservé "config" ou "lock".</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.SetReadOnly">
      <summary vsli:raw="Sets the &lt;see cref=&quot;M:System.Configuration.ConfigurationElementCollection.IsReadOnly&quot; /&gt; property for the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; object and for all sub-elements.">Définit la propriété <see cref="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" /> pour l'objet <see cref="T:System.Configuration.ConfigurationElementCollection" /> et pour tous les sous-éléments.</summary>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.SyncRoot">
      <summary vsli:raw="Gets an object used to synchronize access to the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt;.">Obtient un objet utilisé pour synchroniser l'accès à <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <returns vsli:raw="An object used to synchronize access to the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt;.">Objet utilisé pour synchroniser l'accès à <see cref="T:System.Configuration.ConfigurationElementCollection" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; to an array.">Copie <see cref="T:System.Configuration.ConfigurationElementCollection" /> dans un tableau.</summary>
      <param name="arr" vsli:raw="Array to which to copy this &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt;.">Tableau dans lequel copier cette <see cref="T:System.Configuration.ConfigurationElementCollection" />.</param>
      <param name="index" vsli:raw="Index location at which to begin copying.">Emplacement d'index où commencer la copie.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate">
      <summary vsli:raw="Gets a value indicating whether an attempt to add a duplicate &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; to the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; will cause an exception to be thrown.">Obtient une valeur indiquant si une tentative d'ajout d'un <see cref="T:System.Configuration.ConfigurationElement" /> dupliqué à <see cref="T:System.Configuration.ConfigurationElementCollection" /> provoquera la levée d'une exception.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an attempt to add a duplicate &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; to this &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; will cause an exception to be thrown; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si une tentative d'ajout d'un <see cref="T:System.Configuration.ConfigurationElement" /> dupliqué à cette <see cref="T:System.Configuration.ConfigurationElementCollection" /> provoquera la levée d'une exception ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
      <summary vsli:raw="Reverses the effect of merging configuration information from different levels of the configuration hierarchy.">Inverse l'effet de la fusion des informations de configuration de différents niveaux de la hiérarchie de configuration.</summary>
      <param name="sourceElement" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object at the current level containing a merged view of the properties.">Objet <see cref="T:System.Configuration.ConfigurationElement" /> au niveau actuel contenant un affichage fusionné des propriétés.</param>
      <param name="parentElement" vsli:raw="The parent &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object of the current element, or &lt;see langword=&quot;null&quot; /&gt; if this is the top level.">Objet <see cref="T:System.Configuration.ConfigurationElement" /> parent de l'élément actuel ou <see langword="null" /> s'il s'agit du niveau supérieur.</param>
      <param name="saveMode" vsli:raw="One of the enumeration value that determines which property values to include.">Une des valeurs d’énumération qui détermine les valeurs de propriétés à inclure.</param>
    </member>
    <member name="T:System.Configuration.ConfigurationElementCollectionType">
      <summary vsli:raw="Specifies the type of a &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollectionType&quot; /&gt; object.">Spécifie le type d'un objet <see cref="T:System.Configuration.ConfigurationElementCollectionType" />.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap">
      <summary vsli:raw="The default type of &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt;. Collections of this type contain elements that can be merged across a hierarchy of configuration files. At any particular level within such a hierarchy, &lt;see langword=&quot;add&quot; /&gt;, &lt;see langword=&quot;remove&quot; /&gt;, and &lt;see langword=&quot;clear&quot; /&gt; directives are used to modify any inherited properties and specify new ones.">Type par défaut de <see cref="T:System.Configuration.ConfigurationElementCollection" />. Les collections de ce type contiennent des éléments qui peuvent être fusionnés dans une hiérarchie de fichiers de configuration. Quel que soit le niveau d'une telle hiérarchie, les directives <see langword="add" />, <see langword="remove" /> et <see langword="clear" /> sont utilisées pour modifier des propriétés héritées et en spécifier de nouvelles.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate">
      <summary vsli:raw="Same as &lt;see cref=&quot;F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap&quot; /&gt;, except that this type causes the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; object to sort its contents such that inherited elements are listed last.">Même que <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap" />, mais ce type permet à l'objet <see cref="T:System.Configuration.ConfigurationElementCollection" /> de trier son contenu de telle manière que les éléments hérités soient répertoriés en dernier.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationElementCollectionType.BasicMap">
      <summary vsli:raw="Collections of this type contain elements that apply to the level at which they are specified, and to all child levels. A child level cannot modify the properties specified by a parent element of this type.">Les collections de ce type contiennent des éléments qui s'appliquent au niveau auquel ils sont spécifiés et à tous les niveaux enfants. Un niveau enfant ne peut pas modifier les propriétés spécifiées par un élément parent de ce type.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate">
      <summary vsli:raw="Same as &lt;see cref=&quot;F:System.Configuration.ConfigurationElementCollectionType.BasicMap&quot; /&gt;, except that this type causes the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; object to sort its contents such that inherited elements are listed last.">Même que <see cref="F:System.Configuration.ConfigurationElementCollectionType.BasicMap" />, mais ce type permet à l'objet <see cref="T:System.Configuration.ConfigurationElementCollection" /> de trier son contenu de telle manière que les éléments hérités soient répertoriés en dernier.</summary>
    </member>
    <member name="T:System.Configuration.ConfigurationElementProperty">
      <summary vsli:raw="Specifies the property of a configuration element. This class cannot be inherited.">Spécifie la propriété d’un élément de configuration. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElementProperty.#ctor(System.Configuration.ConfigurationValidatorBase)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementProperty&quot; /&gt; class, based on a supplied parameter.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationElementProperty" /> en fonction d’un paramètre fourni.</summary>
      <param name="validator" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorBase&quot; /&gt; object.">Objet <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;validator&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="validator" /> est <see langword="null" />.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationElementProperty.Validator">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorBase&quot; /&gt; object used to validate the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementProperty&quot; /&gt; object.">Obtient un objet <see cref="T:System.Configuration.ConfigurationValidatorBase" /> utilisé pour valider l’objet <see cref="T:System.Configuration.ConfigurationElementProperty" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorBase&quot; /&gt; object.">Objet <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationErrorsException">
      <summary vsli:raw="The exception that is thrown when a configuration error has occurred.">Exception levée lorsqu'une erreur de configuration s'est produite.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationErrorsException" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationErrorsException" />.</summary>
      <param name="info" vsli:raw="The object that holds the information to deserialize.">Objet qui contient les informations à désérialiser.</param>
      <param name="context" vsli:raw="Contextual information about the source or destination.">Informations contextuelles sur la source ou la destination.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current type is not a &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; or a &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt;.">Le type actuel n'est ni un <see cref="T:System.Configuration.ConfigurationException" /> ni un <see cref="T:System.Configuration.ConfigurationErrorsException" />.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationErrorsException" />.</summary>
      <param name="message" vsli:raw="A message that describes why this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception was thrown.">Message qui explique pourquoi cette exception <see cref="T:System.Configuration.ConfigurationErrorsException" /> a été levée.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationErrorsException" />.</summary>
      <param name="message" vsli:raw="A message that describes why this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception was thrown.">Message qui explique pourquoi cette exception <see cref="T:System.Configuration.ConfigurationErrorsException" /> a été levée.</param>
      <param name="inner" vsli:raw="The exception that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception to be thrown.">Exception qui a provoqué la levée de cette exception <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception,System.String,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; class.">Initialise une nouvelle instance d'une classe <see cref="T:System.Configuration.ConfigurationErrorsException" />.</summary>
      <param name="message" vsli:raw="A message that describes why this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception was thrown.">Message qui explique pourquoi cette exception <see cref="T:System.Configuration.ConfigurationErrorsException" /> a été levée.</param>
      <param name="inner" vsli:raw="The inner exception that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception to be thrown.">Exception interne qui a provoqué la levée de cette exception <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <param name="filename" vsli:raw="The path to the configuration file that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception to be thrown.">Chemin d'accès au fichier de configuration qui a provoqué la levée de cette exception <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <param name="line" vsli:raw="The line number within the configuration file at which this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception was thrown.">Numéro de la ligne du fichier de configuration dans laquelle cette exception <see cref="T:System.Configuration.ConfigurationErrorsException" /> a été levée.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception,System.Xml.XmlNode)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationErrorsException" />.</summary>
      <param name="message" vsli:raw="A message that describes why this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception was thrown.">Message qui explique pourquoi cette exception <see cref="T:System.Configuration.ConfigurationErrorsException" /> a été levée.</param>
      <param name="inner" vsli:raw="The inner exception that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception to be thrown.">Exception interne qui a provoqué la levée de cette exception <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception to be thrown.">Objet <see cref="T:System.Xml.XmlNode" /> qui a provoqué la levée de cette exception <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception,System.Xml.XmlReader)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationErrorsException" />.</summary>
      <param name="message" vsli:raw="A message that describes why this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception was thrown.">Message qui explique pourquoi cette exception <see cref="T:System.Configuration.ConfigurationErrorsException" /> a été levée.</param>
      <param name="inner" vsli:raw="The inner exception that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception to be thrown.">Exception interne qui a provoqué la levée de cette exception <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception to be thrown.">Objet <see cref="T:System.Xml.XmlReader" /> qui a provoqué la levée de cette exception <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.String,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationErrorsException" />.</summary>
      <param name="message" vsli:raw="A message that describes why this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception was thrown.">Message qui explique pourquoi cette exception <see cref="T:System.Configuration.ConfigurationErrorsException" /> a été levée.</param>
      <param name="filename" vsli:raw="The path to the configuration file that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception to be thrown.">Chemin d'accès au fichier de configuration qui a provoqué la levée de cette exception <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <param name="line" vsli:raw="The line number within the configuration file at which this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception was thrown.">Numéro de la ligne du fichier de configuration dans laquelle cette exception <see cref="T:System.Configuration.ConfigurationErrorsException" /> a été levée.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Xml.XmlNode)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationErrorsException" />.</summary>
      <param name="message" vsli:raw="A message that describes why this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception was thrown.">Message qui explique pourquoi cette exception <see cref="T:System.Configuration.ConfigurationErrorsException" /> a été levée.</param>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception to be thrown.">Objet <see cref="T:System.Xml.XmlNode" /> qui a provoqué la levée de cette exception <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Xml.XmlReader)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationErrorsException" />.</summary>
      <param name="message" vsli:raw="A message that describes why this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception was thrown.">Message qui explique pourquoi cette exception <see cref="T:System.Configuration.ConfigurationErrorsException" /> a été levée.</param>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception to be thrown.">Objet <see cref="T:System.Xml.XmlReader" /> qui a provoqué la levée de cette exception <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationErrorsException.BareMessage">
      <summary>Obtient une description expliquant pourquoi cette exception de configuration a été levée.</summary>
      <returns>Description de la raison pour laquelle cette exception <see cref="T:System.Configuration.ConfigurationErrorsException" /> a été levée.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationErrorsException.Errors">
      <summary vsli:raw="Gets a collection of errors that detail the reasons this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception was thrown.">Obtient une collection d'erreurs qui détaillent les raisons pour lesquelles cette exception <see cref="T:System.Configuration.ConfigurationErrorsException" /> a été levée.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; object that contains errors that identify the reasons this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception was thrown.">Objet <see cref="T:System.Collections.ICollection" /> qui contient des erreurs qui identifient les raisons pour lesquelles cette exception <see cref="T:System.Configuration.ConfigurationErrorsException" /> a été levée.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationErrorsException.Filename">
      <summary vsli:raw="Gets the path to the configuration file that caused this configuration exception to be thrown.">Obtient le chemin d'accès au fichier de configuration qui a provoqué la levée de cette exception.</summary>
      <returns vsli:raw="The path to the configuration file that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; to be thrown.">Chemin d'accès au fichier de configuration qui a provoqué la levée de cette <see cref="T:System.Configuration.ConfigurationErrorsException" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.GetFilename(System.Xml.XmlNode)">
      <summary vsli:raw="Gets the path to the configuration file from which the internal &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object was loaded when this configuration exception was thrown.">Obtient le chemin d'accès du fichier de configuration à partir duquel l'objet <see cref="T:System.Xml.XmlNode" /> interne a été chargé lorsque cette exception de configuration a été levée.</summary>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception to be thrown.">Objet <see cref="T:System.Xml.XmlNode" /> qui a provoqué la levée de cette exception <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <returns vsli:raw="The path to the configuration file from which the internal &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object was loaded when this configuration exception was thrown.">Chemin d'accès au fichier de configuration à partir duquel l'objet <see cref="T:System.Xml.XmlNode" /> interne a été chargé lorsque cette exception de configuration a été levée.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.GetFilename(System.Xml.XmlReader)">
      <summary vsli:raw="Gets the path to the configuration file that the internal &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; was reading when this configuration exception was thrown.">Obtient le chemin d'accès au fichier de configuration que le <see cref="T:System.Xml.XmlReader" /> interne lisait lorsque cette exception de configuration a été levée.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception to be thrown.">Objet <see cref="T:System.Xml.XmlReader" /> qui a provoqué la levée de cette exception <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <returns vsli:raw="The path of the configuration file the internal &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object was accessing when the exception occurred.">Chemin du fichier de configuration auquel l'objet <see cref="T:System.Xml.XmlReader" /> interne accédait lorsque l'exception s'est produite.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.GetLineNumber(System.Xml.XmlNode)">
      <summary vsli:raw="Gets the line number within the configuration file that the internal &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object represented when this configuration exception was thrown.">Obtient le numéro de ligne du fichier de configuration que l'objet <see cref="T:System.Xml.XmlNode" /> interne représentait lorsque cette exception de configuration a été levée.</summary>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception to be thrown.">Objet <see cref="T:System.Xml.XmlNode" /> qui a provoqué la levée de cette exception <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <returns vsli:raw="The line number within the configuration file that contains the &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object being parsed when this configuration exception was thrown.">Numéro de ligne du fichier de configuration contenant l'objet <see cref="T:System.Xml.XmlNode" /> qui était analysé lorsque cette exception de configuration a été levée.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.GetLineNumber(System.Xml.XmlReader)">
      <summary vsli:raw="Gets the line number within the configuration file that the internal &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object was processing when this configuration exception was thrown.">Obtient le numéro de ligne du fichier de configuration que l'objet <see cref="T:System.Xml.XmlReader" /> interne traitait lorsque cette exception de configuration a été levée.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception to be thrown.">Objet <see cref="T:System.Xml.XmlReader" /> qui a provoqué la levée de cette exception <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <returns vsli:raw="The line number within the configuration file that the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object was accessing when the exception occurred.">Numéro de ligne du fichier de configuration auquel l'objet <see cref="T:System.Xml.XmlReader" /> accédait lorsque l'exception s'est produite.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object with the file name and line number at which this configuration exception occurred.">Définit l'objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> avec le nom de fichier et le numéro de ligne au niveau desquels cette exception de configuration s'est produite.</summary>
      <param name="info" vsli:raw="The object that holds the information to be serialized.">Objet qui contient les informations à sérialiser.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Informations contextuelles sur la source ou la destination.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationErrorsException.Line">
      <summary vsli:raw="Gets the line number within the configuration file at which this configuration exception was thrown.">Obtient le numéro de la ligne du fichier de configuration dans laquelle cette exception de configuration a été levée.</summary>
      <returns vsli:raw="The line number within the configuration file at which this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception was thrown.">Numéro de la ligne du fichier de configuration dans laquelle cette exception <see cref="T:System.Configuration.ConfigurationErrorsException" /> a été levée.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationErrorsException.Message">
      <summary vsli:raw="Gets an extended description of why this configuration exception was thrown.">Obtient une description détaillée expliquant pourquoi cette exception de configuration a été levée.</summary>
      <returns vsli:raw="An extended description of why this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception was thrown.">Description détaillée expliquant pourquoi cette exception <see cref="T:System.Configuration.ConfigurationErrorsException" /> a été levée.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationException">
      <summary vsli:raw="The exception that is thrown when a configuration system error has occurred.">Exception levée lorsqu'une erreur de système de configuration s'est produite.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationException" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationException" />.</summary>
      <param name="info" vsli:raw="The object that holds the information to deserialize.">Objet qui contient les informations à désérialiser.</param>
      <param name="context" vsli:raw="Contextual information about the source or destination.">Informations contextuelles sur la source ou la destination.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationException" />.</summary>
      <param name="message" vsli:raw="A message describing why this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; exception was thrown.">Message expliquant pourquoi cette exception <see cref="T:System.Configuration.ConfigurationException" /> a été levée.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationException" />.</summary>
      <param name="message" vsli:raw="A message describing why this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; exception was thrown.">Message expliquant pourquoi cette exception <see cref="T:System.Configuration.ConfigurationException" /> a été levée.</param>
      <param name="inner" vsli:raw="The inner exception that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; to be thrown, if any.">Exception interne qui a provoqué la levée de cette exception <see cref="T:System.Configuration.ConfigurationException" />, le cas échéant.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor(System.String,System.Exception,System.String,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationException" />.</summary>
      <param name="message" vsli:raw="A message describing why this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; exception was thrown.">Message expliquant pourquoi cette exception <see cref="T:System.Configuration.ConfigurationException" /> a été levée.</param>
      <param name="inner" vsli:raw="The inner exception that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; to be thrown, if any.">Exception interne qui a provoqué la levée de cette exception <see cref="T:System.Configuration.ConfigurationException" />, le cas échéant.</param>
      <param name="filename" vsli:raw="The path to the configuration file that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; to be thrown.">Chemin d'accès au fichier de configuration qui a provoqué la levée de cette <see cref="T:System.Configuration.ConfigurationException" />.</param>
      <param name="line" vsli:raw="The line number within the configuration file at which this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; was thrown.">Numéro de la ligne du fichier de configuration dans laquelle cette exception <see cref="T:System.Configuration.ConfigurationException" /> a été levée.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor(System.String,System.Exception,System.Xml.XmlNode)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationException" />.</summary>
      <param name="message" vsli:raw="A message describing why this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; exception was thrown.">Message expliquant pourquoi cette exception <see cref="T:System.Configuration.ConfigurationException" /> a été levée.</param>
      <param name="inner" vsli:raw="The inner exception that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; to be thrown, if any.">Exception interne qui a provoqué la levée de cette exception <see cref="T:System.Configuration.ConfigurationException" />, le cas échéant.</param>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; to be thrown.">
        <see cref="T:System.Xml.XmlNode" /> qui entraîne la levée de l'exception <see cref="T:System.Configuration.ConfigurationException" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor(System.String,System.String,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationException" />.</summary>
      <param name="message" vsli:raw="A message describing why this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; exception was thrown.">Message expliquant pourquoi cette exception <see cref="T:System.Configuration.ConfigurationException" /> a été levée.</param>
      <param name="filename" vsli:raw="The path to the configuration file that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; to be thrown.">Chemin d'accès au fichier de configuration qui a provoqué la levée de cette <see cref="T:System.Configuration.ConfigurationException" />.</param>
      <param name="line" vsli:raw="The line number within the configuration file at which this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; was thrown.">Numéro de la ligne du fichier de configuration dans laquelle cette exception <see cref="T:System.Configuration.ConfigurationException" /> a été levée.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor(System.String,System.Xml.XmlNode)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationException" />.</summary>
      <param name="message" vsli:raw="A message describing why this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; exception was thrown.">Message expliquant pourquoi cette exception <see cref="T:System.Configuration.ConfigurationException" /> a été levée.</param>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; to be thrown.">
        <see cref="T:System.Xml.XmlNode" /> qui entraîne la levée de l'exception <see cref="T:System.Configuration.ConfigurationException" />.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationException.BareMessage">
      <summary vsli:raw="Gets a description of why this configuration exception was thrown.">Obtient une description expliquant pourquoi cette exception de configuration a été levée.</summary>
      <returns vsli:raw="A description of why this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; exception was thrown.">Message expliquant pourquoi cette exception <see cref="T:System.Configuration.ConfigurationException" /> a été levée.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationException.Filename">
      <summary vsli:raw="Gets the path to the configuration file that caused this configuration exception to be thrown.">Obtient le chemin d'accès au fichier de configuration qui a provoqué la levée de cette exception.</summary>
      <returns vsli:raw="The path to the configuration file that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; exception to be thrown.">Chemin d'accès au fichier de configuration qui a provoqué la levée de cette exception <see cref="T:System.Configuration.ConfigurationException" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object with the file name and line number at which this configuration exception occurred.">Définit l'objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> avec le nom de fichier et le numéro de ligne au niveau desquels cette exception de configuration s'est produite.</summary>
      <param name="info" vsli:raw="The object that holds the information to be serialized.">Objet qui contient les informations à sérialiser.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Informations contextuelles sur la source ou la destination.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationException.GetXmlNodeFilename(System.Xml.XmlNode)">
      <summary vsli:raw="Gets the path to the configuration file from which the internal &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object was loaded when this configuration exception was thrown.">Obtient le chemin d'accès du fichier de configuration à partir duquel l'objet <see cref="T:System.Xml.XmlNode" /> interne a été chargé lorsque cette exception de configuration a été levée.</summary>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; exception to be thrown.">
        <see cref="T:System.Xml.XmlNode" /> qui entraîne la levée de cette exception <see cref="T:System.Configuration.ConfigurationException" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; representing the node file name.">
        <see langword="string" /> représentant le nom de fichier du nœud.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationException.GetXmlNodeLineNumber(System.Xml.XmlNode)">
      <summary vsli:raw="Gets the line number within the configuration file that the internal &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object represented when this configuration exception was thrown.">Obtient le numéro de ligne du fichier de configuration que l'objet <see cref="T:System.Xml.XmlNode" /> interne représentait lorsque cette exception de configuration a été levée.</summary>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; exception to be thrown.">
        <see cref="T:System.Xml.XmlNode" /> qui entraîne la levée de cette exception <see cref="T:System.Configuration.ConfigurationException" />.</param>
      <returns vsli:raw="An &lt;see langword=&quot;int&quot; /&gt; representing the node line number.">
        <see langword="int" /> représentant le numéro de ligne du nœud.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationException.Line">
      <summary vsli:raw="Gets the line number within the configuration file at which this configuration exception was thrown.">Obtient le numéro de la ligne du fichier de configuration dans laquelle cette exception de configuration a été levée.</summary>
      <returns vsli:raw="The line number within the configuration file at which this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; exception was thrown.">Numéro de la ligne du fichier de configuration dans laquelle cette exception <see cref="T:System.Configuration.ConfigurationException" /> a été levée.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationException.Message">
      <summary vsli:raw="Gets an extended description of why this configuration exception was thrown.">Obtient une description détaillée expliquant pourquoi cette exception de configuration a été levée.</summary>
      <returns vsli:raw="An extended description of why this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; exception was thrown.">Description détaillée expliquant pourquoi cette exception <see cref="T:System.Configuration.ConfigurationException" /> a été levée.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationFileMap">
      <summary vsli:raw="Defines the configuration file mapping for the machine configuration file.">Définit le mappage du fichier de configuration pour le fichier de configuration de l’ordinateur.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationFileMap.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationFileMap&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationFileMap" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationFileMap.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationFileMap&quot; /&gt; class based on the supplied parameter.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationFileMap" /> en fonction du paramètre fourni.</summary>
      <param name="machineConfigFilename" vsli:raw="The name of the machine configuration file.">Nom du fichier de configuration de l’ordinateur.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationFileMap.Clone">
      <summary vsli:raw="Creates a copy of the existing &lt;see cref=&quot;T:System.Configuration.ConfigurationFileMap&quot; /&gt; object.">Crée une copie de l’objet <see cref="T:System.Configuration.ConfigurationFileMap" /> existant.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConfigurationFileMap&quot; /&gt; object.">Objet <see cref="T:System.Configuration.ConfigurationFileMap" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationFileMap.MachineConfigFilename">
      <summary vsli:raw="Gets or sets the name of the machine configuration file name.">Obtient ou définit le nom du fichier de configuration de l’ordinateur.</summary>
      <returns vsli:raw="The machine configuration file name.">Nom du fichier de configuration machine.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationLocation">
      <summary vsli:raw="Represents a &lt;see langword=&quot;location&quot; /&gt; element within a configuration file.">Représente un élément <see langword="location" /> se trouvant dans un fichier de configuration.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationLocation.OpenConfiguration">
      <summary vsli:raw="Creates an instance of a Configuration object.">Crée une instance d’un objet Configuration.</summary>
      <returns vsli:raw="A Configuration object.">Objet Configuration.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationLocation.Path">
      <summary vsli:raw="Gets the relative path to the resource whose configuration settings are represented by this &lt;see cref=&quot;T:System.Configuration.ConfigurationLocation&quot; /&gt; object.">Obtient le chemin relatif à la ressource dont les paramètres de configuration sont représentés par cet objet <see cref="T:System.Configuration.ConfigurationLocation" />.</summary>
      <returns vsli:raw="The relative path to the resource whose configuration settings are represented by this &lt;see cref=&quot;T:System.Configuration.ConfigurationLocation&quot; /&gt;.">Chemin d'accès relatif à la ressource dont les paramètres de configuration sont représentés par ce <see cref="T:System.Configuration.ConfigurationLocation" />.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationLocationCollection">
      <summary vsli:raw="Contains a collection of &lt;see cref=&quot;T:System.Configuration.ConfigurationLocationCollection&quot; /&gt; objects.">Contient une collection d'objets <see cref="T:System.Configuration.ConfigurationLocationCollection" />.</summary>
    </member>
    <member name="P:System.Configuration.ConfigurationLocationCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Configuration.ConfigurationLocationCollection&quot; /&gt; object at the specified index.">Obtient l’objet <see cref="T:System.Configuration.ConfigurationLocationCollection" /> à l’index spécifié.</summary>
      <param name="index" vsli:raw="The index location of the &lt;see cref=&quot;T:System.Configuration.ConfigurationLocationCollection&quot; /&gt; to return.">Emplacement d’index du <see cref="T:System.Configuration.ConfigurationLocationCollection" /> à retourner.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationLocationCollection&quot; /&gt; at the specified index.">Objet <see cref="T:System.Configuration.ConfigurationLocationCollection" /> à l'index spécifié.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationLockCollection">
      <summary vsli:raw="Contains a collection of locked configuration objects. This class cannot be inherited.">Contient une collection d'objets de configuration verrouillés. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.Add(System.String)">
      <summary vsli:raw="Locks a configuration object by adding it to the collection.">Verrouille un objet de configuration en l'ajoutant à la collection.</summary>
      <param name="name" vsli:raw="The name of the configuration object.">Nom de l'objet de configuration.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="Occurs when the &lt;paramref name=&quot;name&quot; /&gt; does not match an existing configuration object within the collection.">Se produit lorsque le <paramref name="name" /> ne correspond pas à un objet de configuration existant dans la collection.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationLockCollection.AttributeList">
      <summary vsli:raw="Gets a list of configuration objects contained in the collection.">Obtient une liste des objets de configuration contenus dans la collection.</summary>
      <returns vsli:raw="A comma-delimited string that lists the lock configuration objects in the collection.">Chaîne délimitée par des virgules qui répertorie les objets de configuration verrouillés dans la collection.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.Clear">
      <summary vsli:raw="Clears all configuration objects from the collection.">Efface tous les objets de configuration de la collection.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.Contains(System.String)">
      <summary vsli:raw="Verifies whether a specific configuration object is locked.">Vérifie si un objet de configuration spécifique est verrouillé.</summary>
      <param name="name" vsli:raw="The name of the configuration object to verify.">Nom de l'objet de configuration à vérifier.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Configuration.ConfigurationLockCollection&quot; /&gt; contains the specified configuration object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Configuration.ConfigurationLockCollection" /> contient l'objet de configuration spécifié ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.CopyTo(System.String[],System.Int32)">
      <summary vsli:raw="Copies the entire &lt;see cref=&quot;T:System.Configuration.ConfigurationLockCollection&quot; /&gt; collection to a compatible one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified index of the target array.">Copie la totalité de la collection <see cref="T:System.Configuration.ConfigurationLockCollection" /> dans un <see cref="T:System.Array" /> compatible unidimensionnel, à partir de l'index spécifié du tableau cible.</summary>
      <param name="array" vsli:raw="A one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from the &lt;see cref=&quot;T:System.Configuration.ConfigurationLockCollection&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">
        <see cref="T:System.Array" /> unidimensionnel constituant la destination des éléments copiés à partir de <see cref="T:System.Configuration.ConfigurationLockCollection" />. <see cref="T:System.Array" /> doit avoir une indexation de base zéro.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Index de base zéro dans l'<paramref name="array" /> à partir duquel la copie commence.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationLockCollection.Count">
      <summary vsli:raw="Gets the number of locked configuration objects contained in the collection.">Obtient le nombre d'objets de configuration verrouillés contenus dans la collection.</summary>
      <returns vsli:raw="The number of locked configuration objects contained in the collection.">Nombre d'objets de configuration verrouillés contenus dans la collection.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.GetEnumerator">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object, which is used to iterate through this &lt;see cref=&quot;T:System.Configuration.ConfigurationLockCollection&quot; /&gt; collection.">Obtient un objet <see cref="T:System.Collections.IEnumerator" />, qui est utilisé pour itérer au sein de cette collection <see cref="T:System.Configuration.ConfigurationLockCollection" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object.">Objet <see cref="T:System.Collections.IEnumerator" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationLockCollection.HasParentElements">
      <summary vsli:raw="Gets a value specifying whether the collection of locked objects has parent elements.">Obtient une valeur spécifiant si la collection d'objets verrouillés a des éléments parents.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Configuration.ConfigurationLockCollection&quot; /&gt; collection has parent elements; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la collection <see cref="T:System.Configuration.ConfigurationLockCollection" /> a des éléments parents ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationLockCollection.IsModified">
      <summary vsli:raw="Gets a value specifying whether the collection has been modified.">Obtient une valeur indiquant si la collection a été modifiée.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Configuration.ConfigurationLockCollection&quot; /&gt; collection has been modified; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la collection <see cref="T:System.Configuration.ConfigurationLockCollection" /> a été modifiée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.IsReadOnly(System.String)">
      <summary vsli:raw="Verifies whether a specific configuration object is read-only.">Vérifie si un objet de configuration spécifique est en lecture seule.</summary>
      <param name="name" vsli:raw="The name of the configuration object to verify.">Nom de l'objet de configuration à vérifier.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified configuration object in the &lt;see cref=&quot;T:System.Configuration.ConfigurationLockCollection&quot; /&gt; collection is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet de configuration spécifié dans la collection <see cref="T:System.Configuration.ConfigurationLockCollection" /> est en lecture seule ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The specified configuration object is not in the collection.">L'objet de configuration spécifié est introuvable dans la collection.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationLockCollection.IsSynchronized">
      <summary vsli:raw="Gets a value specifying whether the collection is synchronized.">Obtient une valeur indiquant si la collection est synchronisée.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Configuration.ConfigurationLockCollection&quot; /&gt; collection is synchronized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la collection <see cref="T:System.Configuration.ConfigurationLockCollection" /> est synchronisée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.Remove(System.String)">
      <summary vsli:raw="Removes a configuration object from the collection.">Supprime un objet de configuration de la collection.</summary>
      <param name="name" vsli:raw="The name of the configuration object.">Nom de l'objet de configuration.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="Occurs when the &lt;paramref name=&quot;name&quot; /&gt; does not match an existing configuration object within the collection.">Se produit lorsque le <paramref name="name" /> ne correspond pas à un objet de configuration existant dans la collection.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.SetFromList(System.String)">
      <summary vsli:raw="Locks a set of configuration objects based on the supplied list.">Verrouille un jeu d'objets de configuration selon la liste fournie.</summary>
      <param name="attributeList" vsli:raw="A comma-delimited string.">Chaîne délimitée par des virgules.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="Occurs when an item in the &lt;paramref name=&quot;attributeList&quot; /&gt; parameter is not a valid lockable configuration attribute.">Se produit lorsqu'un élément du paramètre <paramref name="attributeList" /> n'est pas un attribut de configuration verrouillable valide.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationLockCollection.SyncRoot">
      <summary vsli:raw="Gets an object used to synchronize access to this &lt;see cref=&quot;T:System.Configuration.ConfigurationLockCollection&quot; /&gt; collection.">Obtient un objet utilisé pour synchroniser l'accès à cette collection <see cref="T:System.Configuration.ConfigurationLockCollection" />.</summary>
      <returns vsli:raw="An object used to synchronize access to this &lt;see cref=&quot;T:System.Configuration.ConfigurationLockCollection&quot; /&gt; collection.">Objet utilisé pour synchroniser l'accès à cette collection <see cref="T:System.Configuration.ConfigurationLockCollection" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the entire &lt;see cref=&quot;T:System.Configuration.ConfigurationLockCollection&quot; /&gt; collection to a compatible one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified index of the target array.">Copie la totalité de la collection <see cref="T:System.Configuration.ConfigurationLockCollection" /> dans un <see cref="T:System.Array" /> compatible unidimensionnel, à partir de l'index spécifié du tableau cible.</summary>
      <param name="array" vsli:raw="A one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from the &lt;see cref=&quot;T:System.Configuration.ConfigurationLockCollection&quot; /&gt; collection. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">
        <see cref="T:System.Array" /> unidimensionnel constituant la destination des éléments copiés à partir de la collection <see cref="T:System.Configuration.ConfigurationLockCollection" />. <see cref="T:System.Array" /> doit avoir une indexation de base zéro.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Index de base zéro dans l'<paramref name="array" /> à partir duquel la copie commence.</param>
    </member>
    <member name="T:System.Configuration.ConfigurationManager">
      <summary vsli:raw="Provides access to configuration files for client applications. This class cannot be inherited.">Fournit un accès aux fichiers de configuration pour les applications clientes. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="P:System.Configuration.ConfigurationManager.AppSettings">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Configuration.AppSettingsSection&quot; /&gt; data for the current application's default configuration.">Obtient les données <see cref="T:System.Configuration.AppSettingsSection" /> pour la configuration par défaut de l’application actuelle.</summary>
      <returns vsli:raw="The contents of the &lt;see cref=&quot;T:System.Configuration.AppSettingsSection&quot; /&gt; object for the current application's default configuration.">Objet qui contient le contenu de l' <see cref="T:System.Configuration.AppSettingsSection" /> objet pour la configuration par défaut de l’application actuelle. <see cref="T:System.Collections.Specialized.NameValueCollection" /></returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="Could not retrieve a &lt;see cref=&quot;T:System.Collections.Specialized.NameValueCollection&quot; /&gt; object with the application settings data.">Impossible de récupérer un objet <see cref="T:System.Collections.Specialized.NameValueCollection" /> avec les données de paramètres d’application.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationManager.ConnectionStrings">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Configuration.ConnectionStringsSection&quot; /&gt; data for the current application's default configuration.">Obtient les données <see cref="T:System.Configuration.ConnectionStringsSection" /> pour la configuration par défaut de l’application actuelle.</summary>
      <returns vsli:raw="The contents of the &lt;see cref=&quot;T:System.Configuration.ConnectionStringsSection&quot; /&gt; object for the current application's default configuration.">Objet qui contient le contenu de l' <see cref="T:System.Configuration.ConnectionStringsSection" /> objet pour la configuration par défaut de l’application actuelle. <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /></returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="Could not retrieve a &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettingsCollection&quot; /&gt; object.">Impossible d’extraire un objet <see cref="T:System.Configuration.ConnectionStringSettingsCollection" />.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.GetSection(System.String)">
      <summary vsli:raw="Retrieves a specified configuration section for the current application's default configuration.">Récupère une section de configuration spécifiée pour la configuration par défaut de l'application actuelle.</summary>
      <param name="sectionName" vsli:raw="The configuration section path and name. Node names are separated by forward slashes, for example &quot;system.net/mailSettings/smtp&quot;.">Chemin d'accès et nom de la section de configuration. Les noms de nœud sont séparés par des barres obliques inverses, par exemple "system.net/mailSettings/smtp".</param>
      <returns vsli:raw="The specified &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object, or &lt;see langword=&quot;null&quot; /&gt; if the section does not exist.">Objet <see cref="T:System.Configuration.ConfigurationSection" /> spécifié, ou <see langword="null" /> si la section n’existe pas.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="A configuration file could not be loaded.">Nous n’avons pas pu charger un fichier de configuration.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.OpenExeConfiguration(System.Configuration.ConfigurationUserLevel)">
      <summary vsli:raw="Opens the configuration file for the current application as a &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">Ouvre le fichier de configuration pour l'application actuelle en tant qu'objet <see cref="T:System.Configuration.Configuration" />.</summary>
      <param name="userLevel" vsli:raw="One of the enumeration values that specifies the user level for which you are opening the configuration.">
        <see cref="T:System.Configuration.ConfigurationUserLevel" /> pour lequel vous ouvrez la configuration.</param>
      <returns vsli:raw="The configuration file for the current application.">Objet <see cref="T:System.Configuration.Configuration" />.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="A configuration file could not be loaded.">Nous n’avons pas pu charger un fichier de configuration.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.OpenExeConfiguration(System.String)">
      <summary vsli:raw="Opens the specified client configuration file as a &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">Ouvre le fichier de configuration client spécifié en tant qu'objet <see cref="T:System.Configuration.Configuration" />.</summary>
      <param name="exePath" vsli:raw="The path of the executable (exe) file.">Chemin d’accès du fichier exécutable (exe).</param>
      <returns vsli:raw="The specified configuration file.">Objet <see cref="T:System.Configuration.Configuration" />.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="A configuration file could not be loaded.">Nous n’avons pas pu charger un fichier de configuration.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.OpenMachineConfiguration">
      <summary vsli:raw="Opens the machine configuration file on the current computer as a &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">Ouvre le fichier de configuration machine sur l'ordinateur actuel en tant qu'objet <see cref="T:System.Configuration.Configuration" />.</summary>
      <returns vsli:raw="The machine configuration file.">Objet <see cref="T:System.Configuration.Configuration" />.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="A configuration file could not be loaded.">Nous n’avons pas pu charger un fichier de configuration.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration(System.Configuration.ExeConfigurationFileMap,System.Configuration.ConfigurationUserLevel)">
      <summary vsli:raw="Opens the specified client configuration file as a &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object that uses the specified file mapping and user level.">Ouvre le fichier de configuration client spécifié en tant qu'objet <see cref="T:System.Configuration.Configuration" /> utilisant le mappage de fichiers et le niveau d'utilisateur spécifiés.</summary>
      <param name="fileMap" vsli:raw="The configuration file to use instead of the application default configuration file.">Objet <see cref="T:System.Configuration.ExeConfigurationFileMap" /> qui référence le fichier de configuration à utiliser à la place du fichier de configuration par défaut de l’application.</param>
      <param name="userLevel" vsli:raw="One of the enumeration values that specifies the user level for which you are opening the configuration.">Objet <see cref="T:System.Configuration.ConfigurationUserLevel" /> pour lequel vous ouvrez la configuration.</param>
      <returns vsli:raw="The configuration object.">Objet de configuration.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="A configuration file could not be loaded.">Nous n’avons pas pu charger un fichier de configuration.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration(System.Configuration.ExeConfigurationFileMap,System.Configuration.ConfigurationUserLevel,System.Boolean)">
      <summary vsli:raw="Opens the specified client configuration file as a &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object that uses the specified file mapping, user level, and preload option.">Ouvre le fichier de configuration client spécifié en tant qu'objet <see cref="T:System.Configuration.Configuration" /> utilisant le mappage de fichiers, l'option de préchargement et le niveau d'utilisateur spécifiés.</summary>
      <param name="fileMap" vsli:raw="The configuration file to use instead of the default application configuration file.">Objet <see cref="T:System.Configuration.ExeConfigurationFileMap" /> qui référence le fichier de configuration à utiliser au lieu du fichier de configuration de l'application par défaut.</param>
      <param name="userLevel" vsli:raw="One of the enumeration values that specifies the user level for which you are opening the configuration.">Objet <see cref="T:System.Configuration.ConfigurationUserLevel" /> pour lequel vous ouvrez la configuration.</param>
      <param name="preLoad" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to preload all section groups and sections; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour précharger tous les groupes de sections et toutes les sections ; sinon, <see langword="false" />.</param>
      <returns vsli:raw="The configuration object.">Objet de configuration.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="A configuration file could not be loaded.">Nous n’avons pas pu charger un fichier de configuration.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.OpenMappedMachineConfiguration(System.Configuration.ConfigurationFileMap)">
      <summary vsli:raw="Opens the machine configuration file as a &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object that uses the specified file mapping.">Ouvre le fichier de configuration machine en tant qu'objet <see cref="T:System.Configuration.Configuration" /> utilisant le mappage de fichiers spécifié.</summary>
      <param name="fileMap" vsli:raw="The configuration file to use instead of the application default configuration file.">Objet <see cref="T:System.Configuration.ExeConfigurationFileMap" /> qui référence le fichier de configuration à utiliser au lieu du fichier de configuration de l'application par défaut.</param>
      <returns vsli:raw="The machine configuration file.">Objet <see cref="T:System.Configuration.Configuration" />.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="A configuration file could not be loaded.">Nous n’avons pas pu charger un fichier de configuration.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.RefreshSection(System.String)">
      <summary vsli:raw="Refreshes the named section so the next time that it is retrieved it will be re-read from disk.">Actualise la section nommée de sorte qu'elle soit relue à partir du disque lors de sa prochaine récupération.</summary>
      <param name="sectionName" vsli:raw="The configuration section name or the configuration path and section name of the section to refresh.">Nom de section de configuration ou nom de section et de chemin d'accès de configuration de la section à actualiser.</param>
    </member>
    <member name="T:System.Configuration.ConfigurationProperty">
      <summary vsli:raw="Represents an attribute or a child of a configuration element. This class cannot be inherited.">Représente un attribut ou un enfant d'un élément de configuration. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationProperty" />.</summary>
      <param name="name" vsli:raw="The name of the configuration entity.">Nom de l'entité de configuration.</param>
      <param name="type" vsli:raw="The type of the configuration entity.">Type de l'entité de configuration.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationProperty" />.</summary>
      <param name="name" vsli:raw="The name of the configuration entity.">Nom de l'entité de configuration.</param>
      <param name="type" vsli:raw="The type of the configuration entity.">Type de l'entité de configuration.</param>
      <param name="defaultValue" vsli:raw="The default value of the configuration entity.">Valeur par défaut de l'entité de configuration.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationProperty" />.</summary>
      <param name="name" vsli:raw="The name of the configuration entity.">Nom de l'entité de configuration.</param>
      <param name="type" vsli:raw="The type of the configuration entity.">Type de l'entité de configuration.</param>
      <param name="defaultValue" vsli:raw="The default value of the configuration entity.">Valeur par défaut de l'entité de configuration.</param>
      <param name="typeConverter" vsli:raw="The type of the converter to apply.">Type du convertisseur à appliquer.</param>
      <param name="validator" vsli:raw="The validator to use.">Validateur à utiliser.</param>
      <param name="options" vsli:raw="One of the &lt;see cref=&quot;T:System.Configuration.ConfigurationPropertyOptions&quot; /&gt; enumeration values.">Une des valeurs d'énumération <see cref="T:System.Configuration.ConfigurationPropertyOptions" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationProperty" />.</summary>
      <param name="name" vsli:raw="The name of the configuration entity.">Nom de l'entité de configuration.</param>
      <param name="type" vsli:raw="The type of the configuration entity.">Type de l'entité de configuration.</param>
      <param name="defaultValue" vsli:raw="The default value of the configuration entity.">Valeur par défaut de l'entité de configuration.</param>
      <param name="typeConverter" vsli:raw="The type of the converter to apply.">Type du convertisseur à appliquer.</param>
      <param name="validator" vsli:raw="The validator to use.">Validateur à utiliser.</param>
      <param name="options" vsli:raw="One of the &lt;see cref=&quot;T:System.Configuration.ConfigurationPropertyOptions&quot; /&gt; enumeration values.">Une des valeurs d'énumération <see cref="T:System.Configuration.ConfigurationPropertyOptions" />.</param>
      <param name="description" vsli:raw="The description of the configuration entity.">Description de l'entité de configuration.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.Configuration.ConfigurationPropertyOptions)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationProperty" />.</summary>
      <param name="name" vsli:raw="The name of the configuration entity.">Nom de l'entité de configuration.</param>
      <param name="type" vsli:raw="The type of the configuration entity.">Type de l'entité de configuration.</param>
      <param name="defaultValue" vsli:raw="The default value of the configuration entity.">Valeur par défaut de l'entité de configuration.</param>
      <param name="options" vsli:raw="One of the &lt;see cref=&quot;T:System.Configuration.ConfigurationPropertyOptions&quot; /&gt; enumeration values.">Une des valeurs d'énumération <see cref="T:System.Configuration.ConfigurationPropertyOptions" />.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.Converter">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; used to convert this &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; into an XML representation for writing to the configuration file.">Obtient le <see cref="T:System.ComponentModel.TypeConverter" /> utilisé pour convertir ce <see cref="T:System.Configuration.ConfigurationProperty" /> en une représentation XML pour écrire dans le fichier de configuration.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; used to convert this &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; into an XML representation for writing to the configuration file.">
        <see cref="T:System.ComponentModel.TypeConverter" /> utilisé pour convertir ce <see cref="T:System.Configuration.ConfigurationProperty" /> en une représentation XML pour écrire dans le fichier de configuration.</returns>
      <exception cref="T:System.Exception" vsli:raw="This &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; cannot be converted.">Ce <see cref="T:System.Configuration.ConfigurationProperty" /> ne peut pas être converti.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.DefaultValue">
      <summary vsli:raw="Gets the default value for this &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; property.">Obtient la valeur par défaut pour cette propriété <see cref="T:System.Configuration.ConfigurationProperty" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that can be cast to the type specified by the &lt;see cref=&quot;P:System.Configuration.ConfigurationProperty.Type&quot; /&gt; property.">
        <see cref="T:System.Object" /> pouvant être casté en type spécifié par la propriété <see cref="P:System.Configuration.ConfigurationProperty.Type" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.Description">
      <summary vsli:raw="Gets the description associated with the &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt;.">Obtient la description associée au <see cref="T:System.Configuration.ConfigurationProperty" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that describes the property.">Valeur <see langword="string" /> qui décrit la propriété.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.IsAssemblyStringTransformationRequired">
      <summary vsli:raw="Indicates whether the assembly name for the configuration property requires transformation when it is serialized for an earlier version of the .NET Framework.">Indique si le nom de l'assembly pour la propriété de configuration nécessite une transformation lorsque cette dernière est sérialisée pour une version antérieure du .NET Framework.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property requires assembly name transformation; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la propriété nécessite une transformation de nom de l'assembly ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.IsDefaultCollection">
      <summary vsli:raw="Gets a value that indicates whether the property is the default collection of an element.">Obtient une valeur indiquant si la propriété est la collection par défaut d'un élément.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property is the default collection of an element; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la propriété est la collection par défaut d'un élément ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.IsKey">
      <summary vsli:raw="Gets a value indicating whether this &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; is the key for the containing &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object.">Obtient une valeur indiquant si ce <see cref="T:System.Configuration.ConfigurationProperty" /> est la clé de l'objet <see cref="T:System.Configuration.ConfigurationElement" /> contenant.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; object is the key for the containing element; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si cet objet <see cref="T:System.Configuration.ConfigurationProperty" /> est la clé de l'élément conteneur ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.IsRequired">
      <summary vsli:raw="Gets a value indicating whether this &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; is required.">Obtient une valeur indiquant si ce <see cref="T:System.Configuration.ConfigurationProperty" /> est requis.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; is required; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Configuration.ConfigurationProperty" /> est requis ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.IsTypeStringTransformationRequired">
      <summary vsli:raw="Indicates whether the type name for the configuration property requires transformation when it is serialized for an earlier version of the .NET Framework.">Indique si le nom de type pour la propriété de configuration nécessite une transformation lorsque cette dernière est sérialisée pour une version antérieure du .NET Framework.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property requires type-name transformation; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la propriété nécessite une transformation de nom de type ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.IsVersionCheckRequired">
      <summary vsli:raw="Indicates whether the configuration property's parent configuration section is queried at serialization time to determine whether the configuration property should be serialized into XML.">Indique si la section de configuration parente de la propriété de configuration est interrogée lors de la sérialisation afin de déterminer si la propriété de configuration doit être sérialisée en XML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the parent configuration section should be queried; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la section de configuration parente doit être interrogée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.Name">
      <summary vsli:raw="Gets the name of this &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt;.">Obtient le nom de cet objet <see cref="T:System.Configuration.ConfigurationProperty" />.</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt;.">Nom du <see cref="T:System.Configuration.ConfigurationProperty" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.Type">
      <summary vsli:raw="Gets the type of this &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; object.">Obtient le type de cet objet <see cref="T:System.Configuration.ConfigurationProperty" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; representing the type of this &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; object.">
        <see cref="T:System.Type" /> représentant le type de cet objet <see cref="T:System.Configuration.ConfigurationProperty" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.Validator">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorAttribute&quot; /&gt;, which is used to validate this &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; object.">Obtient <see cref="T:System.Configuration.ConfigurationValidatorAttribute" />, lequel est utilisé pour valider cet objet <see cref="T:System.Configuration.ConfigurationProperty" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorBase&quot; /&gt; validator, which is used to validate this &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt;.">Validateur <see cref="T:System.Configuration.ConfigurationValidatorBase" />, qui est utilisé pour valider ce <see cref="T:System.Configuration.ConfigurationProperty" />.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationPropertyAttribute">
      <summary vsli:raw="Declaratively instructs .NET to instantiate a configuration property. This class cannot be inherited.">Ordonne de manière déclarative au .NET Framework d'instancier une propriété de configuration. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of &lt;see cref=&quot;T:System.Configuration.ConfigurationPropertyAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationPropertyAttribute" />.</summary>
      <param name="name" vsli:raw="Name of the &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; object defined.">Nom de l'objet <see cref="T:System.Configuration.ConfigurationProperty" /> défini.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyAttribute.DefaultValue">
      <summary vsli:raw="Gets or sets the default value for the decorated property.">Obtient ou définit la valeur par défaut de la propriété décorée.</summary>
      <returns vsli:raw="The object representing the default value of the decorated configuration-element property.">Objet représentant la valeur par défaut de la propriété d'élément de configuration décorée.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyAttribute.IsDefaultCollection">
      <summary vsli:raw="Gets or sets a value indicating whether this is the default property collection for the decorated configuration property.">Obtient ou définit une valeur indiquant s'il s'agit de la collection de propriétés par défaut pour la propriété de configuration décorée.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property represents the default collection of an element; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la propriété représente la collection par défaut d'un élément ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyAttribute.IsKey">
      <summary vsli:raw="Gets or sets a value indicating whether this is a key property for the decorated element property.">Obtient ou définit une valeur indiquant s'il s'agit d'une propriété clé pour la propriété d'élément décorée.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property is a key property for an element of the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la propriété est une propriété clé pour un élément de la collection ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyAttribute.IsRequired">
      <summary vsli:raw="Gets or sets a value indicating whether the decorated element property is required.">Obtient ou définit une valeur indiquant si la propriété d'élément décorée est requise.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property is required; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la propriété est requise ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyAttribute.Name">
      <summary vsli:raw="Gets the name of the decorated configuration-element property.">Obtient le nom de la propriété d'élément de configuration décorée.</summary>
      <returns vsli:raw="The name of the decorated configuration-element property.">Nom de la propriété d'élément de configuration décorée.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyAttribute.Options">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Configuration.ConfigurationPropertyOptions&quot; /&gt; for the decorated configuration-element property.">Obtient ou définit <see cref="T:System.Configuration.ConfigurationPropertyOptions" /> pour la propriété d'élément de configuration décorée.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Configuration.ConfigurationPropertyOptions&quot; /&gt; enumeration values associated with the property.">Une des valeurs d'énumération <see cref="T:System.Configuration.ConfigurationPropertyOptions" /> associées à la propriété.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationPropertyCollection">
      <summary vsli:raw="Represents a collection of configuration-element properties.">Représente une collection de propriétés d'éléments de configuration.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationPropertyCollection&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationPropertyCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.Add(System.Configuration.ConfigurationProperty)">
      <summary vsli:raw="Adds a configuration property to the collection.">Ajoute une propriété de configuration à la collection.</summary>
      <param name="property" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; to add.">
        <see cref="T:System.Configuration.ConfigurationProperty" /> à ajouter.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.Clear">
      <summary vsli:raw="Removes all configuration property objects from the collection.">Supprime tous les objets de propriétés de configuration de la collection.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.Contains(System.String)">
      <summary vsli:raw="Specifies whether the configuration property is contained in this collection.">Spécifie si la propriété de configuration est contenue dans cette collection.</summary>
      <param name="name" vsli:raw="An identifier for the &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; to verify.">Identificateur du <see cref="T:System.Configuration.ConfigurationProperty" /> à vérifier.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; is contained in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la collection contient le <see cref="T:System.Configuration.ConfigurationProperty" /> spécifié ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.CopyTo(System.Configuration.ConfigurationProperty[],System.Int32)">
      <summary vsli:raw="Copies this ConfigurationPropertyCollection to an array.">Copie cette ConfigurationPropertyCollection dans un tableau.</summary>
      <param name="array" vsli:raw="Array to which to copy.">Tableau dans lequel effectuer la copie.</param>
      <param name="index" vsli:raw="Index at which to begin copying.">Index où commencer la copie.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyCollection.Count">
      <summary vsli:raw="Gets the number of properties in the collection.">Obtient le nombre de propriétés de la collection.</summary>
      <returns vsli:raw="The number of properties in the collection.">Nombre de propriétés de la collection.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.GetEnumerator">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object as it applies to the collection.">Obtient l'objet <see cref="T:System.Collections.IEnumerator" /> tel qu'il s'applique à la collection.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object as it applies to the collection.">Objet <see cref="T:System.Collections.IEnumerator" /> tel qu'il s'applique à la collection.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyCollection.IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the collection is synchronized (thread safe).">Obtient une valeur indiquant si l’accès à la collection est synchronisé (thread-safe).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Configuration.ConfigurationPropertyCollection&quot; /&gt; is synchronized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'accès à <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> est synchronisé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyCollection.Item(System.String)">
      <summary vsli:raw="Gets the collection item with the specified name.">Obtient l'élément de collection portant le nom spécifié.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; to return.">
        <see cref="T:System.Configuration.ConfigurationProperty" /> à retourner.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; with the specified &lt;paramref name=&quot;name&quot; /&gt;.">
        <see cref="T:System.Configuration.ConfigurationProperty" /> avec le <paramref name="name" /> spécifié.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.Remove(System.String)">
      <summary vsli:raw="Removes a configuration property from the collection.">Supprime une propriété de configuration de la collection.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; to remove.">
        <see cref="T:System.Configuration.ConfigurationProperty" /> à supprimer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; was removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le <see cref="T:System.Configuration.ConfigurationProperty" /> spécifié a été supprimé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyCollection.SyncRoot">
      <summary vsli:raw="Gets the object to synchronize access to the collection.">Obtient l'objet utilisé pour synchroniser l'accès à la collection.</summary>
      <returns vsli:raw="The object to synchronize access to the collection.">Objet utilisé pour synchroniser l'accès à la collection.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies this collection to an array.">Copie cette collection dans un tableau.</summary>
      <param name="array" vsli:raw="The array to which to copy.">Tableau vers lequel effectuer la copie.</param>
      <param name="index" vsli:raw="The index location at which to begin copying.">Position d'index où commence la copie.</param>
    </member>
    <member name="T:System.Configuration.ConfigurationPropertyOptions">
      <summary vsli:raw="Specifies the options to apply to a property.">Spécifie les options à appliquer à une propriété.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.IsAssemblyStringTransformationRequired">
      <summary vsli:raw="Indicates whether the assembly name for the configuration property requires transformation when it is serialized for an earlier version of .NET.">Indique si le nom de l'assembly pour la propriété de configuration nécessite une transformation lorsqu'il est sérialisé pour une version antérieure du .NET Framework.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.IsDefaultCollection">
      <summary vsli:raw="Indicates that the property is a default collection.">Indique que la propriété est une collection par défaut.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.IsKey">
      <summary vsli:raw="Indicates that the property is a collection key.">Indique que la propriété est une clé de collection.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.IsRequired">
      <summary vsli:raw="Indicates that the property is required.">Indique que la propriété est requise.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.IsTypeStringTransformationRequired">
      <summary vsli:raw="Indicates whether the type name for the configuration property requires transformation when it is serialized for an earlier version of .NET.">Indique si le nom de type pour la propriété de configuration nécessite une transformation lorsqu'il est sérialisé pour une version antérieure du .NET Framework.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.IsVersionCheckRequired">
      <summary vsli:raw="Indicates whether the configuration property's parent configuration section should be queried at serialization time to determine whether the configuration property should be serialized into XML.">Indique si la section de configuration parente de la propriété de configuration doit être interrogée lors de la sérialisation afin de déterminer si la propriété de configuration doit être sérialisée en XML.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.None">
      <summary vsli:raw="Indicates that no option applies to the property.">Indique qu'aucune option ne s'applique à la propriété.</summary>
    </member>
    <member name="T:System.Configuration.ConfigurationSaveMode">
      <summary vsli:raw="Determines which properties are written out to a configuration file.">Détermine quelles propriétés sont écrites dans un fichier de configuration.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationSaveMode.Full">
      <summary vsli:raw="Causes all properties to be written to the configuration file. This is useful mostly for creating information configuration files or moving configuration values from one machine to another.">Entraîne l'écriture de toutes les propriétés dans le fichier de configuration. Ceci est particulièrement utile pour créer des fichiers de configuration d'information ou déplacer des valeurs de configuration d'un ordinateur à un autre.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationSaveMode.Minimal">
      <summary vsli:raw="Causes only properties that differ from inherited values to be written to the configuration file.">Seules les propriétés qui diffèrent des valeurs héritées sont écrites dans le fichier de configuration.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationSaveMode.Modified">
      <summary vsli:raw="Causes only modified properties to be written to the configuration file, even when the value is the same as the inherited value.">Seules les propriétés modifiées sont écrites dans le fichier de configuration, même lorsque la valeur est le même que la valeur héritée.</summary>
    </member>
    <member name="T:System.Configuration.ConfigurationSection">
      <summary vsli:raw="Represents a section within a configuration file.">Représente une section dans un fichier de configuration.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationSection" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)">
      <summary vsli:raw="Reads XML from the configuration file.">Lit du XML à partir du fichier de configuration.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object, which reads from the configuration file.">Objet <see cref="T:System.Xml.XmlReader" />, qui lit le fichier de configuration.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="&lt;paramref name=&quot;reader&quot; /&gt; found no elements in the configuration file.">
        <paramref name="reader" /> n'a trouvé aucun élément dans le fichier de configuration.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.GetRuntimeObject">
      <summary vsli:raw="Returns a custom object when overridden in a derived class.">Retourne un objet personnalisé en cas de substitution dans une classe dérivée.</summary>
      <returns vsli:raw="The object representing the section.">Objet représentant la section.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.IsModified">
      <summary vsli:raw="Indicates whether this configuration element has been modified since it was last saved or loaded when implemented in a derived class.">Indique si cet élément de configuration a été modifié depuis son dernier enregistrement ou chargement lorsqu'il est implémenté dans une classe dérivée.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the element has been modified; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'élément a été modifié ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.ResetModified">
      <summary vsli:raw="Resets the value of the &lt;see cref=&quot;M:System.Configuration.ConfigurationElement.IsModified&quot; /&gt; method to &lt;see langword=&quot;false&quot; /&gt; when implemented in a derived class.">Réinitialise la valeur de la méthode <see cref="M:System.Configuration.ConfigurationElement.IsModified" /> à <see langword="false" /> en cas d’implémentation dans une classe dérivée.</summary>
    </member>
    <member name="P:System.Configuration.ConfigurationSection.SectionInformation">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Configuration.SectionInformation&quot; /&gt; object that contains the non-customizable information and functionality of the &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object.">Obtient un objet <see cref="T:System.Configuration.SectionInformation" /> qui contient les fonctionnalités et informations non personnalisables de l'objet <see cref="T:System.Configuration.ConfigurationSection" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SectionInformation&quot; /&gt; that contains the non-customizable information and functionality of the &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt;.">
        <see cref="T:System.Configuration.SectionInformation" /> qui contient les fonctionnalités et informations non personnalisables de <see cref="T:System.Configuration.ConfigurationSection" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)">
      <summary vsli:raw="Creates an XML string containing an unmerged view of the &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object as a single section to write to a file.">Crée une chaîne XML contenant un affichage non fusionné de l'objet <see cref="T:System.Configuration.ConfigurationSection" /> sous la forme d'une section unique à écrire dans un fichier.</summary>
      <param name="parentElement" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; instance to use as the parent when performing the un-merge.">Instance de <see cref="T:System.Configuration.ConfigurationElement" /> à utiliser comme parent lors de l'annulation de la fusion.</param>
      <param name="name" vsli:raw="The name of the section to create.">Nom de la section à créer.</param>
      <param name="saveMode" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSaveMode&quot; /&gt; instance to use when writing to a string.">Instance de <see cref="T:System.Configuration.ConfigurationSaveMode" /> à utiliser lors de l'écriture dans une chaîne.</param>
      <returns vsli:raw="An XML string containing an unmerged view of the &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object.">Chaîne XML contenant un affichage non fusionné de l'objet <see cref="T:System.Configuration.ConfigurationSection" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)">
      <summary vsli:raw="Indicates whether the specified element should be serialized when the configuration object hierarchy is serialized for the specified target version of the .NET Framework.">Indique si l'élément spécifié doit être sérialisé lorsque la hiérarchie d'objets de configuration est sérialisée pour la version cible spécifiée du .NET Framework.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object that is a candidate for serialization.">Objet <see cref="T:System.Configuration.ConfigurationElement" /> qui est candidat pour la sérialisation.</param>
      <param name="elementName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object as it occurs in XML.">Nom de l'objet <see cref="T:System.Configuration.ConfigurationElement" /> tel qu'il apparaît au format XML.</param>
      <param name="targetFramework" vsli:raw="The target version of the .NET Framework.">Version cible du .NET Framework.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;element&quot; /&gt; should be serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="element" /> doit être sérialisé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)">
      <summary vsli:raw="Indicates whether the specified property should be serialized when the configuration object hierarchy is serialized for the specified target version of the .NET Framework.">Indique si la propriété spécifiée doit être sérialisée lorsque la hiérarchie d'objets de configuration est sérialisée pour la version cible spécifiée du .NET Framework.</summary>
      <param name="property" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; object that is a candidate for serialization.">Objet <see cref="T:System.Configuration.ConfigurationProperty" /> qui est candidat pour la sérialisation.</param>
      <param name="propertyName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; object as it occurs in XML.">Nom de l'objet <see cref="T:System.Configuration.ConfigurationProperty" /> tel qu'il apparaît au format XML.</param>
      <param name="targetFramework" vsli:raw="The target version of the .NET Framework.">Version cible du .NET Framework.</param>
      <param name="parentConfigurationElement" vsli:raw="The parent element of the property.">Élément parent de la propriété.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;property&quot; /&gt; should be serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="property" /> doit être sérialisé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)">
      <summary vsli:raw="Indicates whether the current &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; instance should be serialized when the configuration object hierarchy is serialized for the specified target version of the .NET Framework.">Indique si l'instance <see cref="T:System.Configuration.ConfigurationSection" /> actuelle doit être sérialisée lorsque la hiérarchie d'objets de configuration est sérialisée pour la version cible spécifiée du .NET Framework.</summary>
      <param name="targetFramework" vsli:raw="The target version of the .NET Framework.">Version cible du .NET Framework.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current section should be serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la section actuelle doit être sérialisée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationSectionCollection">
      <summary vsli:raw="Represents a collection of related sections within a configuration file.">Représente une collection de sections associées dans un fichier de configuration.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.Add(System.String,System.Configuration.ConfigurationSection)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object to the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionCollection&quot; /&gt; object.">Ajoute un objet <see cref="T:System.Configuration.ConfigurationSection" /> à l’objet <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</summary>
      <param name="name" vsli:raw="The name of the section to be added.">Nom de la section à ajouter.</param>
      <param name="section" vsli:raw="The section to be added.">Section à ajouter.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.Clear">
      <summary vsli:raw="Clears this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionCollection&quot; /&gt; object.">Efface cet objet <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.CopyTo(System.Configuration.ConfigurationSection[],System.Int32)">
      <summary vsli:raw="Copies this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionCollection&quot; /&gt; object to an array.">Copie cet objet <see cref="T:System.Configuration.ConfigurationSectionCollection" /> dans un tableau.</summary>
      <param name="array" vsli:raw="The array to copy the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionCollection&quot; /&gt; object to.">Tableau où copier l’objet <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</param>
      <param name="index" vsli:raw="The index location at which to begin copying.">Position d'index où commence la copie.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The length of &lt;paramref name=&quot;array&quot; /&gt; is less than the value of &lt;see cref=&quot;P:System.Configuration.ConfigurationSectionCollection.Count&quot; /&gt; plus &lt;paramref name=&quot;index&quot; /&gt;.">La longueur de <paramref name="array" /> est inférieure à la valeur de <see cref="P:System.Configuration.ConfigurationSectionCollection.Count" /> plus <paramref name="index" />.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionCollection.Count">
      <summary>Obtient le nombre de sections contenues dans cet objet <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</summary>
      <returns>Entier qui représente le nombre de sections dans la collection.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.Get(System.Int32)">
      <summary vsli:raw="Gets the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object contained in this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionCollection&quot; /&gt; object.">Obtient l'objet <see cref="T:System.Configuration.ConfigurationSection" /> spécifié contenu dans cet objet <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</summary>
      <param name="index" vsli:raw="The index of the &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object to be returned.">Index de l'objet <see cref="T:System.Configuration.ConfigurationSection" /> à retourner.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object at the specified index.">Objet <see cref="T:System.Configuration.ConfigurationSection" /> au niveau de l’index spécifié.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.Get(System.String)">
      <summary vsli:raw="Gets the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object contained in this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionCollection&quot; /&gt; object.">Obtient l'objet <see cref="T:System.Configuration.ConfigurationSection" /> spécifié contenu dans cet objet <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object to be returned.">Nom de l'objet <see cref="T:System.Configuration.ConfigurationSection" /> à retourner.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object with the specified name.">Objet <see cref="T:System.Configuration.ConfigurationSection" /> portant le nom spécifié.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is null or an empty string (&quot;&quot;).">
        <paramref name="name" /> est null ou une chaîne vide ("").</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.GetEnumerator">
      <summary vsli:raw="Gets an enumerator that can iterate through this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionCollection&quot; /&gt; object.">Obtient un énumérateur qui peut itérer au sein de cet objet <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to iterate through this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionCollection&quot; /&gt; object.">
        <see cref="T:System.Collections.IEnumerator" /> qui peut être utilisé pour itérer au sein de cet objet <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.GetKey(System.Int32)">
      <summary vsli:raw="Gets the key of the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object contained in this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionCollection&quot; /&gt; object.">Obtient la clé de l'objet <see cref="T:System.Configuration.ConfigurationSection" /> spécifié contenu dans cet objet <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</summary>
      <param name="index" vsli:raw="The index of the &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object whose key is to be returned.">Index de l'objet <see cref="T:System.Configuration.ConfigurationSection" /> dont la clé doit être retournée.</param>
      <returns vsli:raw="The key of the &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object at the specified index.">Clé de l'objet <see cref="T:System.Configuration.ConfigurationSection" /> à l'index spécifié.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Utilisé par le système pendant la sérialisation.</summary>
      <param name="info">Objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> applicable.</param>
      <param name="context">Objet <see cref="T:System.Runtime.Serialization.StreamingContext" /> applicable.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object.">Obtient l'objet <see cref="T:System.Configuration.ConfigurationSection" /> spécifié.</summary>
      <param name="index" vsli:raw="The index of the &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object to be returned.">Index de l'objet <see cref="T:System.Configuration.ConfigurationSection" /> à retourner.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object at the specified index.">Objet <see cref="T:System.Configuration.ConfigurationSection" /> au niveau de l’index spécifié.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionCollection.Item(System.String)">
      <summary vsli:raw="Gets the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object.">Obtient l'objet <see cref="T:System.Configuration.ConfigurationSection" /> spécifié.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object to be returned.">Nom de l'objet <see cref="T:System.Configuration.ConfigurationSection" /> à retourner.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object with the specified name.">Objet <see cref="T:System.Configuration.ConfigurationSection" /> portant le nom spécifié.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionCollection.Keys">
      <summary>Obtient les clés de tous les objets <see cref="T:System.Configuration.ConfigurationSection" /> contenus dans cet objet <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</summary>
      <returns>Objet <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" /> qui contient les clés de toutes les sections de cette collection.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.Remove(System.String)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object from this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionCollection&quot; /&gt; object.">Supprime l'objet <see cref="T:System.Configuration.ConfigurationSection" /> spécifié de cet objet <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</summary>
      <param name="name" vsli:raw="The name of the section to be removed.">Nom de la section à supprimer.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object from this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionCollection&quot; /&gt; object.">Supprime l'objet <see cref="T:System.Configuration.ConfigurationSection" /> spécifié de cet objet <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</summary>
      <param name="index" vsli:raw="The index of the section to be removed.">Index de la section à supprimer.</param>
    </member>
    <member name="T:System.Configuration.ConfigurationSectionGroup">
      <summary vsli:raw="Represents a group of related sections within a configuration file.">Représente un groupe de sections associées dans un fichier de configuration.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroup.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroup.ForceDeclaration">
      <summary vsli:raw="Forces the declaration for this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object.">Force la déclaration de cet objet <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroup.ForceDeclaration(System.Boolean)">
      <summary vsli:raw="Forces the declaration for this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object.">Force la déclaration de cet objet <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</summary>
      <param name="force" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object must be written to the file; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet <see cref="T:System.Configuration.ConfigurationSectionGroup" /> doit être écrit dans le fichier ; sinon, <see langword="false" />.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object is the root section group.  &#xA;  &#xA;-or-&#xA;  &#xA; The &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object has a location.">L'objet <see cref="T:System.Configuration.ConfigurationSectionGroup" /> est le groupe de sections racine.  
ou 
L'objet <see cref="T:System.Configuration.ConfigurationSectionGroup" /> a un emplacement.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.IsDeclarationRequired">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object declaration is required.">Obtient une valeur qui indique si cette déclaration d'objet <see cref="T:System.Configuration.ConfigurationSectionGroup" /> est requise.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; declaration is required; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si cette déclaration <see cref="T:System.Configuration.ConfigurationSectionGroup" /> est requise ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.IsDeclared">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object is declared.">Obtient une valeur qui indique si cet objet <see cref="T:System.Configuration.ConfigurationSectionGroup" /> est déclaré.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; is declared; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si ce <see cref="T:System.Configuration.ConfigurationSectionGroup" /> est déclaré ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.Name">
      <summary vsli:raw="Gets the name property of this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object.">Obtient la propriété de nom de cet objet <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</summary>
      <returns vsli:raw="The name property of this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object.">Propriété de nom de cet objet <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.SectionGroupName">
      <summary vsli:raw="Gets the section group name associated with this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt;.">Obtient le nom du groupe de sections associé à ce <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</summary>
      <returns vsli:raw="The section group name of this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object.">Nom du groupe de sections de cet objet <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.SectionGroups">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroupCollection&quot; /&gt; object that contains all the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; objects that are children of this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object.">Obtient un objet <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> qui contient tous les objets <see cref="T:System.Configuration.ConfigurationSectionGroup" /> qui sont des enfants de cet objet <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroupCollection&quot; /&gt; object that contains all the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; objects that are children of this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object.">Objet <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> qui contient tous les objets <see cref="T:System.Configuration.ConfigurationSectionGroup" /> qui sont des enfants de cet objet <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.Sections">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionCollection&quot; /&gt; object that contains all of &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; objects within this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object.">Obtient un objet <see cref="T:System.Configuration.ConfigurationSectionCollection" /> qui contient tous les objets <see cref="T:System.Configuration.ConfigurationSection" /> de cet objet <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionCollection&quot; /&gt; object that contains all the &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; objects within this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object.">Objet <see cref="T:System.Configuration.ConfigurationSectionCollection" /> qui contient tous les objets <see cref="T:System.Configuration.ConfigurationSection" /> de cet objet <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroup.ShouldSerializeSectionGroupInTargetVersion(System.Runtime.Versioning.FrameworkName)">
      <summary vsli:raw="Indicates whether the current &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; instance should be serialized when the configuration object hierarchy is serialized for the specified target version of the .NET Framework.">Indique si l'instance <see cref="T:System.Configuration.ConfigurationSectionGroup" /> actuelle doit être sérialisée lorsque la hiérarchie d'objets de configuration est sérialisée pour la version cible spécifiée du .NET Framework.</summary>
      <param name="targetFramework" vsli:raw="The target version of the .NET Framework.">Version cible du .NET Framework.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current section group should be serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le groupe de la section actuelle doit être sérialisé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.Type">
      <summary vsli:raw="Gets or sets the type for this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object.">Obtient ou définit le type de cet objet <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</summary>
      <returns vsli:raw="The type of this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object.">Type de cet objet <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object is the root section group.  &#xA;  &#xA;-or-&#xA;  &#xA; The &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object has a location.">L'objet <see cref="T:System.Configuration.ConfigurationSectionGroup" /> est le groupe de sections racine.  

ou - 
L'objet <see cref="T:System.Configuration.ConfigurationSectionGroup" /> a un emplacement.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The section or group is already defined at another level.">La section ou le groupe est déjà défini à un autre niveau.</exception>
    </member>
    <member name="T:System.Configuration.ConfigurationSectionGroupCollection">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; objects.">Représente une collection d'objets <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.Add(System.String,System.Configuration.ConfigurationSectionGroup)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object to this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroupCollection&quot; /&gt; object.">Ajoute un objet <see cref="T:System.Configuration.ConfigurationSectionGroup" /> à cet objet <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" />.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object to be added.">Nom de l'objet <see cref="T:System.Configuration.ConfigurationSectionGroup" /> à ajouter.</param>
      <param name="sectionGroup" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object to be added.">Objet <see cref="T:System.Configuration.ConfigurationSectionGroup" /> à ajouter.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.Clear">
      <summary vsli:raw="Clears the collection.">Efface la collection.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.CopyTo(System.Configuration.ConfigurationSectionGroup[],System.Int32)">
      <summary vsli:raw="Copies this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroupCollection&quot; /&gt; object to an array.">Copie cet objet <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> dans un tableau.</summary>
      <param name="array" vsli:raw="The array to copy the object to.">Tableau dans lequel copier l'objet.</param>
      <param name="index" vsli:raw="The index location at which to begin copying.">Position d'index où commence la copie.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The length of &lt;paramref name=&quot;array&quot; /&gt; is less than the value of &lt;see cref=&quot;P:System.Configuration.ConfigurationSectionGroupCollection.Count&quot; /&gt; plus &lt;paramref name=&quot;index&quot; /&gt;.">La longueur de <paramref name="array" /> est inférieure à la valeur de <see cref="P:System.Configuration.ConfigurationSectionGroupCollection.Count" /> plus <paramref name="index" />.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroupCollection.Count">
      <summary>Obtient le nombre de groupes de sections de la collection.</summary>
      <returns>Entier qui représente le nombre de groupes de sections dans la collection.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.Get(System.Int32)">
      <summary vsli:raw="Gets the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object contained in the collection.">Obtient l'objet <see cref="T:System.Configuration.ConfigurationSectionGroup" /> spécifié contenu dans la collection.</summary>
      <param name="index" vsli:raw="The index of the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object to be returned.">Index de l'objet <see cref="T:System.Configuration.ConfigurationSectionGroup" /> à retourner.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object at the specified index.">Objet <see cref="T:System.Configuration.ConfigurationSectionGroup" /> au niveau de l’index spécifié.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.Get(System.String)">
      <summary vsli:raw="Gets the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object from the collection.">Obtient l'objet <see cref="T:System.Configuration.ConfigurationSectionGroup" /> spécifié de la collection.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object to be returned.">Nom de l'objet <see cref="T:System.Configuration.ConfigurationSectionGroup" /> à retourner.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object with the specified name.">Objet <see cref="T:System.Configuration.ConfigurationSectionGroup" /> portant le nom spécifié.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is null or an empty string (&quot;&quot;).">
        <paramref name="name" /> est null ou une chaîne vide ("").</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.GetEnumerator">
      <summary vsli:raw="Gets an enumerator that can iterate through the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroupCollection&quot; /&gt; object.">Obtient un énumérateur qui peut itérer au sein de l'objet <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to iterate through the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroupCollection&quot; /&gt; object.">
        <see cref="T:System.Collections.IEnumerator" /> pouvant être utilisé pour itérer au sein de l'objet <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.GetKey(System.Int32)">
      <summary vsli:raw="Gets the key of the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object contained in this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroupCollection&quot; /&gt; object.">Obtient la clé de l'objet <see cref="T:System.Configuration.ConfigurationSectionGroup" /> spécifié contenu dans cet objet <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" />.</summary>
      <param name="index" vsli:raw="The index of the section group whose key is to be returned.">Index du groupe de sections dont la clé doit être retournée.</param>
      <returns vsli:raw="The key of the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object at the specified index.">Clé de l'objet <see cref="T:System.Configuration.ConfigurationSectionGroup" /> à l'index spécifié.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Utilisé par le système pendant la sérialisation.</summary>
      <param name="info">Objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> applicable.</param>
      <param name="context">Objet <see cref="T:System.Runtime.Serialization.StreamingContext" /> applicable.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroupCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object whose index is specified from the collection.">Obtient l'objet <see cref="T:System.Configuration.ConfigurationSectionGroup" /> situé à l'index spécifié de la collection.</summary>
      <param name="index" vsli:raw="The index of the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object to be returned.">Index de l'objet <see cref="T:System.Configuration.ConfigurationSectionGroup" /> à retourner.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object at the specified index.  &#xA;  &#xA; In C#, this property is the indexer for the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionCollection&quot; /&gt; class.">Objet <see cref="T:System.Configuration.ConfigurationSectionGroup" /> au niveau de l’index spécifié.  
En C#, cette propriété est l'indexeur correspondant à la classe <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroupCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object whose name is specified from the collection.">Obtient l'objet <see cref="T:System.Configuration.ConfigurationSectionGroup" /> dont le nom est spécifié à partir de la collection.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object to be returned.">Nom de l'objet <see cref="T:System.Configuration.ConfigurationSectionGroup" /> à retourner.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object with the specified name.  &#xA;  &#xA; In C#, this property is the indexer for the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionCollection&quot; /&gt; class.">Objet <see cref="T:System.Configuration.ConfigurationSectionGroup" /> portant le nom spécifié.  
En C#, cette propriété est l'indexeur correspondant à la classe <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroupCollection.Keys">
      <summary>Obtient les clés de tous les objets <see cref="T:System.Configuration.ConfigurationSectionGroup" /> contenus dans cet objet <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" />.</summary>
      <returns>Objet <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" /> qui contient les noms de tous les groupes de sections dans cette collection.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.Remove(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object whose name is specified from this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroupCollection&quot; /&gt; object.">Supprime de cet objet <see cref="T:System.Configuration.ConfigurationSectionGroup" /> l'objet <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> dont le nom est spécifié.</summary>
      <param name="name" vsli:raw="The name of the section group to be removed.">Nom du groupe de sections à supprimer.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object whose index is specified from this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroupCollection&quot; /&gt; object.">Supprime de cet objet <see cref="T:System.Configuration.ConfigurationSectionGroup" /> l'objet <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> dont l'index est spécifié.</summary>
      <param name="index" vsli:raw="The index of the section group to be removed.">Index du groupe de sections à supprimer.</param>
    </member>
    <member name="T:System.Configuration.ConfigurationSettings">
      <summary vsli:raw="Provides runtime versions 1.0 and 1.1 support for reading configuration sections and common configuration settings.">Fournit la prise en charge des versions 1.0 et 1.1 du runtime pour la lecture des sections de configuration et des paramètres de configuration courants.</summary>
    </member>
    <member name="P:System.Configuration.ConfigurationSettings.AppSettings">
      <summary vsli:raw="Gets a read-only collection of the application settings from the configuration file.">Obtient une <see cref="T:System.Collections.Specialized.NameValueCollection" /> en lecture seule de la section de paramètres d'application du fichier de configuration.</summary>
      <returns vsli:raw="A read-only collection of the application settings from the configuration file.">
        <see cref="T:System.Collections.Specialized.NameValueCollection" /> en lecture seule de la section de paramètres d'application du fichier de configuration.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSettings.GetConfig(System.String)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object for the passed configuration section name and path.">Retourne l'objet <see cref="T:System.Configuration.ConfigurationSection" /> pour le nom et le chemin d'accès de section de configuration passés.</summary>
      <param name="sectionName" vsli:raw="A configuration name and path, such as &quot;system.net/settings&quot;.">Nom et chemin d'accès de configuration, par exemple "system.net/settings".</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object for the passed configuration section name and path.">Objet <see cref="T:System.Configuration.ConfigurationSection" /> pour le nom et le chemin d'accès de section de configuration passés.  
   
 La classe <see cref="T:System.Configuration.ConfigurationSettings" /> fournit uniquement une compatibilité descendante. Vous devez utiliser, à la place, la classe <see cref="T:System.Configuration.ConfigurationManager" /> ou <see cref="T:System.Web.Configuration.WebConfigurationManager" />.</returns>
      <exception cref="T:System.Configuration.ConfigurationException" vsli:raw="Unable to retrieve the requested section.">Impossible de récupérer la section demandée.</exception>
    </member>
    <member name="T:System.Configuration.ConfigurationUserLevel">
      <summary vsli:raw="Used to specify which configuration file is to be represented by the Configuration object.">Utilisé pour spécifier le fichier de configuration qui doit être représenté par l’objet Configuration.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationUserLevel.None">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; that applies to all users.">Obtenez la <see cref="T:System.Configuration.Configuration" /> qui s’applique à tous les utilisateurs.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationUserLevel.PerUserRoaming">
      <summary vsli:raw="Gets the roaming &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; that applies to the current user.">Obtenez la <see cref="T:System.Configuration.Configuration" /> d’itinérance qui s’applique à l’utilisateur actuel.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationUserLevel.PerUserRoamingAndLocal">
      <summary vsli:raw="Gets the local &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; that applies to the current user.">Obtient la <see cref="T:System.Configuration.Configuration" /> locale qui s’applique à l’utilisateur actuel.</summary>
    </member>
    <member name="T:System.Configuration.ConfigurationValidatorAttribute">
      <summary vsli:raw="Serves as the base class for the &lt;see cref=&quot;N:System.Configuration&quot; /&gt; validator attribute types.">Sert de classe de base pour les types d'attributs du validateur <see cref="N:System.Configuration" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationValidatorAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationValidatorAttribute" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationValidatorAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorAttribute&quot; /&gt; class using the specified validator type.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationValidatorAttribute" /> à l'aide du type de validateur spécifié.</summary>
      <param name="validator" vsli:raw="The validator type to use when creating an instance of &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorAttribute&quot; /&gt;.">Type de validateur à utiliser lors de la création d'une instance de <see cref="T:System.Configuration.ConfigurationValidatorAttribute" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;validator&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="validator" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;validator&quot; /&gt; is not derived from &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorBase&quot; /&gt;.">
        <paramref name="validator" /> n'est pas dérivé de <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationValidatorAttribute.ValidatorInstance">
      <summary vsli:raw="Gets the validator attribute instance.">Obtient l’instance d’attribut du validateur.</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorBase&quot; /&gt;.">
        <see cref="T:System.Configuration.ConfigurationValidatorBase" /> actuel.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationValidatorAttribute.ValidatorType">
      <summary vsli:raw="Gets the type of the validator attribute.">Obtient le type de l'attribut du validateur.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the current validator attribute instance.">
        <see cref="T:System.Type" /> de l'instance d'attribut du validateur actuelle.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationValidatorBase">
      <summary vsli:raw="Acts as a base class for deriving a validation class so that a value of an object can be verified.">Joue le rôle de classe de base pour dériver une classe de validation afin qu’une valeur d’objet puisse être vérifiée.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationValidatorBase.#ctor">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorBase&quot; /&gt; class.">Initialise une instance de la classe <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationValidatorBase.CanValidate(System.Type)">
      <summary vsli:raw="Determines whether an object can be validated based on type.">Détermine si un objet peut être validé en fonction du type.</summary>
      <param name="type" vsli:raw="The object type.">Type d'objet.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter value matches the expected &lt;see langword=&quot;type&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la valeur du paramètre <paramref name="type" /> correspond au <see langword="type" /> attendu ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationValidatorBase.Validate(System.Object)">
      <summary vsli:raw="Determines whether the value of an object is valid.">Détermine si la valeur d’un objet est valide.</summary>
      <param name="value" vsli:raw="The object value.">Valeur de l’objet.</param>
    </member>
    <member name="T:System.Configuration.ConfigXmlDocument">
      <summary vsli:raw="Wraps the corresponding &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; type and also carries the necessary information for reporting file-name and line numbers.">Encapsule le type <see cref="T:System.Xml.XmlDocument" /> correspondant et contient également les informations nécessaires pour signaler le nom de fichier et les numéros de ligne.</summary>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigXmlDocument&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigXmlDocument" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.CreateAttribute(System.String,System.String,System.String)">
      <summary vsli:raw="Creates a configuration element attribute.">Crée un attribut d'élément de configuration.</summary>
      <param name="prefix" vsli:raw="The prefix definition.">Définition du préfixe.</param>
      <param name="localName" vsli:raw="The name that is used locally.">Nom utilisé localement.</param>
      <param name="namespaceUri" vsli:raw="The URL that is assigned to the namespace.">URL assignée à l'espace de noms.</param>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Xml.Serialization.XmlAttributes.XmlAttribute&quot; /&gt; attribute.">Attribut <see cref="P:System.Xml.Serialization.XmlAttributes.XmlAttribute" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.CreateCDataSection(System.String)">
      <summary vsli:raw="Creates an XML CData section.">Crée une section CData XML.</summary>
      <param name="data" vsli:raw="The data to use.">Données à utiliser.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlCDataSection&quot; /&gt; value.">Valeur de l'objet <see cref="T:System.Xml.XmlCDataSection" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.CreateComment(System.String)">
      <summary vsli:raw="Create an XML comment.">Crée un commentaire XML.</summary>
      <param name="data" vsli:raw="The comment data.">Données de commentaires.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlComment&quot; /&gt; value.">Valeur de l'objet <see cref="T:System.Xml.XmlComment" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.CreateElement(System.String,System.String,System.String)">
      <summary vsli:raw="Creates a configuration element.">Crée un élément de configuration.</summary>
      <param name="prefix" vsli:raw="The prefix definition.">Définition du préfixe.</param>
      <param name="localName" vsli:raw="The name used locally.">Nom utilisé localement.</param>
      <param name="namespaceUri" vsli:raw="The namespace for the URL.">Espace de noms de l'URL.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; value.">Valeur de l'objet <see cref="T:System.Xml.XmlElement" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.CreateSignificantWhitespace(System.String)">
      <summary vsli:raw="Creates white spaces.">Crée des espaces blancs.</summary>
      <param name="data" vsli:raw="The data to use.">Données à utiliser.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlSignificantWhitespace&quot; /&gt; value.">Valeur de l'objet <see cref="T:System.Xml.XmlSignificantWhitespace" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.CreateTextNode(System.String)">
      <summary vsli:raw="Create a text node.">Crée un nœud de texte.</summary>
      <param name="text" vsli:raw="The text to use.">Texte à utiliser.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlText&quot; /&gt; value.">Valeur de l'objet <see cref="T:System.Xml.XmlText" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.CreateWhitespace(System.String)">
      <summary vsli:raw="Creates white space.">Crée des espaces blancs.</summary>
      <param name="data" vsli:raw="The data to use.">Données à utiliser.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWhitespace&quot; /&gt; value.">Valeur de l'objet <see cref="T:System.Xml.XmlWhitespace" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigXmlDocument.Filename">
      <summary vsli:raw="Gets the configuration file name.">Obtient le nom du fichier de configuration.</summary>
      <returns vsli:raw="The configuration file name.">Nom du fichier de configuration.</returns>
    </member>
    <member name="P:System.Configuration.ConfigXmlDocument.LineNumber">
      <summary vsli:raw="Gets the current node line number.">Obtient le numéro de ligne du nœud actuel.</summary>
      <returns vsli:raw="The line number for the current node.">Numéro de ligne du nœud actuel.</returns>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.Load(System.String)">
      <summary vsli:raw="Loads the configuration file.">Charge le fichier de configuration.</summary>
      <param name="filename" vsli:raw="The name of the file.">Nom du fichier.</param>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.LoadSingleElement(System.String,System.Xml.XmlTextReader)">
      <summary vsli:raw="Loads a single configuration element.">Charge un élément de configuration unique.</summary>
      <param name="filename" vsli:raw="The name of the file.">Nom du fichier.</param>
      <param name="sourceReader" vsli:raw="The source for the reader.">Source du lecteur.</param>
    </member>
    <member name="P:System.Configuration.ConfigXmlDocument.System#Configuration#Internal#IConfigErrorInfo#Filename">
      <summary vsli:raw="Gets the configuration file name.">Obtient le nom du fichier de configuration.</summary>
      <returns vsli:raw="The file name.">Nom du fichier.</returns>
    </member>
    <member name="P:System.Configuration.ConfigXmlDocument.System#Configuration#Internal#IConfigErrorInfo#LineNumber">
      <summary vsli:raw="Gets the configuration line number.">Obtient le numéro de la ligne de configuration.</summary>
      <returns vsli:raw="The line number.">Numéro de ligne.</returns>
    </member>
    <member name="T:System.Configuration.ConnectionStringSettings">
      <summary vsli:raw="Represents a single, named connection string in the connection strings configuration file section.">Représente une chaîne de connexion nommée unique dans la section du fichier de configuration des chaînes de connexion.</summary>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; class.">Initialise une nouvelle instance d'une classe <see cref="T:System.Configuration.ConnectionStringSettings" />.</summary>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettings.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; class.">Initialise une nouvelle instance d'une classe <see cref="T:System.Configuration.ConnectionStringSettings" />.</summary>
      <param name="name" vsli:raw="The name of the connection string.">Nom de la chaîne de connexion.</param>
      <param name="connectionString" vsli:raw="The connection string.">Chaîne de connexion</param>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettings.#ctor(System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; class.">Initialise une nouvelle instance d'un objet <see cref="T:System.Configuration.ConnectionStringSettings" />.</summary>
      <param name="name" vsli:raw="The name of the connection string.">Nom de la chaîne de connexion.</param>
      <param name="connectionString" vsli:raw="The connection string.">Chaîne de connexion</param>
      <param name="providerName" vsli:raw="The name of the provider to use with the connection string.">Nom du fournisseur à utiliser avec la chaîne de connexion.</param>
    </member>
    <member name="P:System.Configuration.ConnectionStringSettings.ConnectionString">
      <summary vsli:raw="Gets or sets the connection string.">Obtient ou définit la valeur de la chaîne de connexion.</summary>
      <returns vsli:raw="The string value assigned to the &lt;see cref=&quot;P:System.Configuration.ConnectionStringSettings.ConnectionString&quot; /&gt; property.">Valeur de chaîne assignée à la propriété <see cref="P:System.Configuration.ConnectionStringSettings.ConnectionString" />.</returns>
    </member>
    <member name="P:System.Configuration.ConnectionStringSettings.Name">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; name.">Obtient ou définit le nom <see cref="T:System.Configuration.ConnectionStringSettings" />.</summary>
      <returns vsli:raw="The string value assigned to the &lt;see cref=&quot;P:System.Configuration.ConnectionStringSettings.Name&quot; /&gt; property.">Valeur de chaîne assignée à la propriété <see cref="P:System.Configuration.ConnectionStringSettings.Name" />.</returns>
    </member>
    <member name="P:System.Configuration.ConnectionStringSettings.ProviderName">
      <summary vsli:raw="Gets or sets the provider name property.">Obtient ou définit la propriété du nom du fournisseur.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Configuration.ConnectionStringSettings.ProviderName&quot; /&gt; property.">La propriété <see cref="P:System.Configuration.ConnectionStringSettings.ProviderName" />.</returns>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettings.ToString">
      <summary vsli:raw="Returns a string representation of the object.">Retourne une représentation de l'objet sous forme de chaîne.</summary>
      <returns vsli:raw="A string representation of the object.">Représentation sous forme de chaîne de l'objet.</returns>
    </member>
    <member name="T:System.Configuration.ConnectionStringSettingsCollection">
      <summary vsli:raw="Contains a collection of &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; objects.">Contient une collection d'objets <see cref="T:System.Configuration.ConnectionStringSettings" />.</summary>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettingsCollection&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConnectionStringSettingsCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.Add(System.Configuration.ConnectionStringSettings)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; object to the collection.">Ajoute un objet <see cref="T:System.Configuration.ConnectionStringSettings" /> à la collection.</summary>
      <param name="settings" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; object to add to the collection.">Objet <see cref="T:System.Configuration.ConnectionStringSettings" /> à ajouter à la collection.</param>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.Clear">
      <summary vsli:raw="Removes all the &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; objects from the collection.">Supprime tous les objets <see cref="T:System.Configuration.ConnectionStringSettings" /> de la collection.</summary>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.IndexOf(System.Configuration.ConnectionStringSettings)">
      <summary vsli:raw="Returns the collection index of the passed &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; object.">Retourne l'index de collection de l'objet <see cref="T:System.Configuration.ConnectionStringSettings" /> passé.</summary>
      <param name="settings" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; object in the collection.">Objet <see cref="T:System.Configuration.ConnectionStringSettings" /> de la collection.</param>
      <returns vsli:raw="The collection index of the specified &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettingsCollection&quot; /&gt; object.">Index de collection de l'objet <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> spécifié.</returns>
    </member>
    <member name="P:System.Configuration.ConnectionStringSettingsCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the connection string at the specified index in the collection.">Obtient ou définit la chaîne de connexion à l'index spécifié dans la collection.</summary>
      <param name="index" vsli:raw="The index of a &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; object in the collection.">Index d'un objet <see cref="T:System.Configuration.ConnectionStringSettings" /> dans la collection.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; object at the specified index.">Objet <see cref="T:System.Configuration.ConnectionStringSettings" /> au niveau de l’index spécifié.</returns>
    </member>
    <member name="P:System.Configuration.ConnectionStringSettingsCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; object with the specified name in the collection.">Obtient ou définit l'objet <see cref="T:System.Configuration.ConnectionStringSettings" /> portant le nom spécifié dans la collection.</summary>
      <param name="name" vsli:raw="The name of a &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; object in the collection.">Nom d’un objet <see cref="T:System.Configuration.ConnectionStringSettings" /> de la collection.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; object with the specified name; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Objet <see cref="T:System.Configuration.ConnectionStringSettings" /> avec le nom spécifié ; sinon, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.Remove(System.Configuration.ConnectionStringSettings)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; object from the collection.">Supprime l'objet <see cref="T:System.Configuration.ConnectionStringSettings" /> spécifié de la collection.</summary>
      <param name="settings" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; object in the collection.">Objet <see cref="T:System.Configuration.ConnectionStringSettings" /> de la collection.</param>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.Remove(System.String)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; object from the collection.">Supprime l'objet <see cref="T:System.Configuration.ConnectionStringSettings" /> spécifié de la collection.</summary>
      <param name="name" vsli:raw="The name of a &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; object in the collection.">Nom d’un objet <see cref="T:System.Configuration.ConnectionStringSettings" /> de la collection.</param>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; object at the specified index in the collection.">Supprime de la collection l'objet <see cref="T:System.Configuration.ConnectionStringSettings" /> à l'index spécifié.</summary>
      <param name="index" vsli:raw="The index of a &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; object in the collection.">Index d'un objet <see cref="T:System.Configuration.ConnectionStringSettings" /> dans la collection.</param>
    </member>
    <member name="T:System.Configuration.ConnectionStringsSection">
      <summary vsli:raw="Provides programmatic access to the connection strings configuration-file section.">Fournit l’accès par programmation à la section des chaînes de connexion du fichier de configuration.</summary>
    </member>
    <member name="M:System.Configuration.ConnectionStringsSection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConnectionStringsSection&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConnectionStringsSection" />.</summary>
    </member>
    <member name="P:System.Configuration.ConnectionStringsSection.ConnectionStrings">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettingsCollection&quot; /&gt; collection of &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; objects.">Obtient une collection <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> d’objets <see cref="T:System.Configuration.ConnectionStringSettings" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettingsCollection&quot; /&gt; collection of &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; objects.">Collection <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> d'objets <see cref="T:System.Configuration.ConnectionStringSettings" />.</returns>
    </member>
    <member name="T:System.Configuration.ContextInformation">
      <summary vsli:raw="Encapsulates the context information that is associated with a &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object. This class cannot be inherited.">Encapsule les informations de contexte qui sont associées à un objet <see cref="T:System.Configuration.ConfigurationElement" />. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.ContextInformation.GetSection(System.String)">
      <summary vsli:raw="Provides an object containing configuration-section information based on the specified section name.">Fournit un objet contenant des informations de section de configuration en fonction du nom de section spécifié.</summary>
      <param name="sectionName" vsli:raw="The name of the configuration section.">Nom de la section de configuration.</param>
      <returns vsli:raw="An object containing the specified section within the configuration.">Objet contenant la section spécifiée dans la configuration.</returns>
    </member>
    <member name="P:System.Configuration.ContextInformation.HostingContext">
      <summary vsli:raw="Gets the context of the environment where the configuration property is being evaluated.">Obtient le contexte de l'environnement dans lequel la propriété de configuration est évaluée.</summary>
      <returns vsli:raw="An object specifying the environment where the configuration property is being evaluated.">Objet spécifiant l'environnement dans lequel la propriété de configuration est évaluée.</returns>
    </member>
    <member name="P:System.Configuration.ContextInformation.IsMachineLevel">
      <summary vsli:raw="Gets a value specifying whether the configuration property is being evaluated at the machine configuration level.">Obtient une valeur spécifiant si la propriété de configuration est évaluée au niveau de la configuration de l'ordinateur.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration property is being evaluated at the machine configuration level; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la propriété de configuration est évaluée au niveau de la configuration de l'ordinateur ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Configuration.DefaultSection">
      <summary vsli:raw="Represents a basic configuration-section handler that exposes the configuration section's XML for both read and write access.">Représente un gestionnaire de section de configuration de base qui expose la partie XML de la section de configuration pour l’accès en lecture et en écriture.</summary>
    </member>
    <member name="M:System.Configuration.DefaultSection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.DefaultSection&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.DefaultSection" />.</summary>
    </member>
    <member name="T:System.Configuration.DefaultSettingValueAttribute">
      <summary vsli:raw="Specifies the default value for an application settings property.">Spécifie la valeur par défaut d’une propriété de paramètre d’application.</summary>
    </member>
    <member name="M:System.Configuration.DefaultSettingValueAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Configuration.DefaultSettingValueAttribute&quot; /&gt; class.">Initialise une instance de la classe <see cref="T:System.Configuration.DefaultSettingValueAttribute" />.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the default value for the property.">
        <see cref="T:System.String" /> représentant la valeur par défaut de la propriété.</param>
    </member>
    <member name="P:System.Configuration.DefaultSettingValueAttribute.Value">
      <summary vsli:raw="Gets the default value for the application settings property.">Obtient la valeur par défaut pour la propriété de paramètres d’application.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the default value for the property.">
        <see cref="T:System.String" /> représentant la valeur par défaut de la propriété.</returns>
    </member>
    <member name="T:System.Configuration.DefaultValidator">
      <summary vsli:raw="Provides validation of an object. This class cannot be inherited.">Fournit la validation d’un objet. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.DefaultValidator.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.DefaultValidator&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.DefaultValidator" />.</summary>
    </member>
    <member name="M:System.Configuration.DefaultValidator.CanValidate(System.Type)">
      <summary vsli:raw="Determines whether an object can be validated, based on type.">Détermine si un objet peut être validé, en fonction du type.</summary>
      <param name="type" vsli:raw="The object type.">Type d'objet.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; for all types being validated.">
        <see langword="true" /> pour tous les types en cours de validation.</returns>
    </member>
    <member name="M:System.Configuration.DefaultValidator.Validate(System.Object)">
      <summary vsli:raw="Determines whether the value of an object is valid.">Détermine si la valeur d’un objet est valide.</summary>
      <param name="value" vsli:raw="The object value.">Valeur de l’objet.</param>
    </member>
    <member name="T:System.Configuration.DictionarySectionHandler">
      <summary vsli:raw="Provides key/value pair configuration information from a configuration section.">Fournit les informations de configuration des paires clé/valeur d’une section de configuration.</summary>
    </member>
    <member name="M:System.Configuration.DictionarySectionHandler.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.DictionarySectionHandler&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.DictionarySectionHandler" />.</summary>
    </member>
    <member name="M:System.Configuration.DictionarySectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <summary vsli:raw="Creates a new configuration handler and adds it to the section-handler collection based on the specified parameters.">Crée un gestionnaire de configuration et l’ajoute à la collection de gestionnaires de section en fonction des paramètres spécifiés.</summary>
      <param name="parent" vsli:raw="Parent object.">Objet parent.</param>
      <param name="context" vsli:raw="Configuration context object.">Objet de contexte de configuration.</param>
      <param name="section" vsli:raw="Section XML node.">Nœud XML de section.</param>
      <returns vsli:raw="A configuration object.">Objet de configuration.</returns>
    </member>
    <member name="P:System.Configuration.DictionarySectionHandler.KeyAttributeName">
      <summary vsli:raw="Gets the XML attribute name to use as the key in a key/value pair.">Obtient le nom de l’attribut XML à utiliser comme clé dans une paire clé/valeur.</summary>
      <returns vsli:raw="A string value containing the name of the key attribute.">Valeur de chaîne contenant le nom de l'attribut clé.</returns>
    </member>
    <member name="P:System.Configuration.DictionarySectionHandler.ValueAttributeName">
      <summary vsli:raw="Gets the XML attribute name to use as the value in a key/value pair.">Obtient le nom de l’attribut XML à utiliser comme valeur dans une paire clé/valeur.</summary>
      <returns vsli:raw="A string value containing the name of the value attribute.">Valeur de chaîne contenant le nom de l'attribut valeur.</returns>
    </member>
    <member name="T:System.Configuration.DpapiProtectedConfigurationProvider">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationProvider&quot; /&gt; object that uses the Windows data protection API (DPAPI) to encrypt and decrypt configuration data.">Fournit un objet <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> qui utilise l'API de protection des données (DPAPI) Windows pour chiffrer et déchiffrer des données de configuration.</summary>
    </member>
    <member name="M:System.Configuration.DpapiProtectedConfigurationProvider.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.DpapiProtectedConfigurationProvider&quot; /&gt; class using default settings.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.DpapiProtectedConfigurationProvider" /> en utilisant les paramètres par défaut.</summary>
    </member>
    <member name="M:System.Configuration.DpapiProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)">
      <summary vsli:raw="Decrypts the passed &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object.">Déchiffre l'objet <see cref="T:System.Xml.XmlNode" /> passé.</summary>
      <param name="encryptedNode" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object to decrypt.">Objet <see cref="T:System.Xml.XmlNode" /> à déchiffrer.</param>
      <returns vsli:raw="A decrypted &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object.">Objet <see cref="T:System.Xml.XmlNode" /> déchiffré.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="&lt;paramref name=&quot;encryptedNode&quot; /&gt; does not have &lt;see cref=&quot;P:System.Xml.XmlNode.Name&quot; /&gt; set to &quot;EncryptedData&quot; and &lt;see cref=&quot;T:System.Xml.XmlNodeType&quot; /&gt; set to &lt;see cref=&quot;F:System.Xml.XmlNodeType.Element&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;encryptedNode&quot; /&gt; does not have a child node named &quot;CipherData&quot; with a child node named &quot;CipherValue&quot;.  &#xA;  &#xA;-or-&#xA;  &#xA; The child node named &quot;CipherData&quot; is an empty node.">
        <paramref name="encryptedNode" /> n'a pas de <see cref="P:System.Xml.XmlNode.Name" /> ayant la valeur "EncryptedData" et de <see cref="T:System.Xml.XmlNodeType" /> ayant la valeur <see cref="F:System.Xml.XmlNodeType.Element" />.  

ou - 
<paramref name="encryptedNode" /> n'a pas de nœud enfant nommé "CipherData" ayant un nœud enfant nommé "CipherValue".  

ou - 
Le nœud enfant nommé "CipherData" est un nœud vide.</exception>
    </member>
    <member name="M:System.Configuration.DpapiProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)">
      <summary vsli:raw="Encrypts the passed &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object.">Chiffre l'objet <see cref="T:System.Xml.XmlNode" /> passé.</summary>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object to encrypt.">Objet <see cref="T:System.Xml.XmlNode" /> à chiffrer.</param>
      <returns vsli:raw="An encrypted &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object.">Objet <see cref="T:System.Xml.XmlNode" /> chiffré.</returns>
    </member>
    <member name="M:System.Configuration.DpapiProtectedConfigurationProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary vsli:raw="Initializes the provider with default settings.">Initialise le fournisseur avec les paramètres par défaut.</summary>
      <param name="name" vsli:raw="The provider name to use for the object.">Nom du fournisseur à utiliser pour l'objet.</param>
      <param name="configurationValues" vsli:raw="A &lt;see cref=&quot;T:System.Collections.Specialized.NameValueCollection&quot; /&gt; collection of values to use when initializing the object.">Collection <see cref="T:System.Collections.Specialized.NameValueCollection" /> de valeurs à utiliser lors de l'initialisation de l'objet.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="&lt;paramref name=&quot;configurationValues&quot; /&gt; contains an unrecognized configuration setting.">
        <paramref name="configurationValues" /> contient un paramètre de configuration non reconnu.</exception>
    </member>
    <member name="P:System.Configuration.DpapiProtectedConfigurationProvider.UseMachineProtection">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Configuration.DpapiProtectedConfigurationProvider&quot; /&gt; object is using machine-specific or user-account-specific protection.">Obtient une valeur qui indique si l'objet <see cref="T:System.Configuration.DpapiProtectedConfigurationProvider" /> utilise la protection spécifique à l'ordinateur ou spécifique au compte d'utilisateur.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Configuration.DpapiProtectedConfigurationProvider&quot; /&gt; is using machine-specific protection; &lt;see langword=&quot;false&quot; /&gt; if it is using user-account-specific protection.">
        <see langword="true" /> si le <see cref="T:System.Configuration.DpapiProtectedConfigurationProvider" /> utilise la protection spécifique à l'ordinateur ; <see langword="false" /> s'il utilise la protection spécifique au compte d'utilisateur.</returns>
    </member>
    <member name="T:System.Configuration.ElementInformation">
      <summary vsli:raw="Contains meta-information about an individual element within the configuration. This class cannot be inherited.">Contient des méta-informations sur un élément individuel dans la configuration. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="P:System.Configuration.ElementInformation.Errors">
      <summary vsli:raw="Gets the errors for the associated element and subelements.">Obtient les erreurs pour l'élément et les sous-éléments associés.</summary>
      <returns vsli:raw="The collection containing the errors for the associated element and subelements.">Collection contenant les erreurs pour l'élément et les sous-éléments associés.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.IsCollection">
      <summary vsli:raw="Gets a value indicating whether the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object is a &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; collection.">Obtient une valeur indiquant si l'objet <see cref="T:System.Configuration.ConfigurationElement" /> associé est une collection <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object is a &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet <see cref="T:System.Configuration.ConfigurationElement" /> associé est une collection <see cref="T:System.Configuration.ConfigurationElementCollection" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.IsLocked">
      <summary vsli:raw="Gets a value that indicates whether the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object cannot be modified.">Obtient une valeur indiquant si l'objet <see cref="T:System.Configuration.ConfigurationElement" /> associé ne peut pas être modifié.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object cannot be modified; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet <see cref="T:System.Configuration.ConfigurationElement" /> associé ne peut pas être modifié ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.IsPresent">
      <summary vsli:raw="Gets a value indicating whether the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object is in the configuration file.">Obtient une valeur indiquant si l'objet <see cref="T:System.Configuration.ConfigurationElement" /> associé se trouve dans le fichier de configuration.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object is in the configuration file; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet <see cref="T:System.Configuration.ConfigurationElement" /> associé se trouve dans le fichier de configuration ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.LineNumber">
      <summary vsli:raw="Gets the line number in the configuration file where the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object is defined.">Obtient le numéro de la ligne du fichier de configuration où l'objet <see cref="T:System.Configuration.ConfigurationElement" /> associé est défini.</summary>
      <returns vsli:raw="The line number in the configuration file where the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object is defined.">Numéro de la ligne du fichier de configuration où l'objet <see cref="T:System.Configuration.ConfigurationElement" /> associé est défini.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.Properties">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Configuration.PropertyInformationCollection&quot; /&gt; collection of the properties in the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object.">Obtient une collection <see cref="T:System.Configuration.PropertyInformationCollection" /> des propriétés de l'objet <see cref="T:System.Configuration.ConfigurationElement" /> associé.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.PropertyInformationCollection&quot; /&gt; collection of the properties in the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object.">Collection <see cref="T:System.Configuration.PropertyInformationCollection" /> des propriétés de l'objet <see cref="T:System.Configuration.ConfigurationElement" /> associé.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.Source">
      <summary vsli:raw="Gets the source file where the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object originated.">Obtient le fichier source d'où l'objet <see cref="T:System.Configuration.ConfigurationElement" /> associé provient.</summary>
      <returns vsli:raw="The source file where the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object originated.">Fichier source d'où l'objet <see cref="T:System.Configuration.ConfigurationElement" /> associé provient.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.Type">
      <summary vsli:raw="Gets the type of the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object.">Obtient le type de l'objet <see cref="T:System.Configuration.ConfigurationElement" /> associé.</summary>
      <returns vsli:raw="The type of the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object.">Type de l'objet <see cref="T:System.Configuration.ConfigurationElement" /> associé.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.Validator">
      <summary vsli:raw="Gets the object used to validate the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object.">Obtient l'objet utilisé pour valider l'objet <see cref="T:System.Configuration.ConfigurationElement" /> associé.</summary>
      <returns vsli:raw="The object used to validate the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object.">Objet utilisé pour valider l'objet <see cref="T:System.Configuration.ConfigurationElement" /> associé.</returns>
    </member>
    <member name="T:System.Configuration.ExeConfigurationFileMap">
      <summary vsli:raw="Defines the configuration file mapping for an .exe application. This class cannot be inherited.">Définit le mappage du fichier de configuration pour une application .exe. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.ExeConfigurationFileMap.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ExeConfigurationFileMap&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ExeConfigurationFileMap" />.</summary>
    </member>
    <member name="M:System.Configuration.ExeConfigurationFileMap.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ExeConfigurationFileMap&quot; /&gt; class by using the specified machine configuration file name.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ExeConfigurationFileMap" /> en utilisant le nom du fichier de configuration de l'ordinateur spécifié.</summary>
      <param name="machineConfigFileName" vsli:raw="The name of the machine configuration file that includes the complete physical path (for example, &lt;c&gt;c:\Windows\Microsoft.NET\Framework\v2.0.50727\CONFIG\machine.config&lt;/c&gt;).">Nom du fichier de configuration de l’ordinateur qui inclut le chemin physique complet (par exemple, <c>c:\Windows\Microsoft.NET\Framework\v2.0.50727\CONFIG\machine.config</c>).</param>
    </member>
    <member name="M:System.Configuration.ExeConfigurationFileMap.Clone">
      <summary vsli:raw="Creates a copy of the existing &lt;see cref=&quot;T:System.Configuration.ExeConfigurationFileMap&quot; /&gt; object.">Crée une copie de l’objet <see cref="T:System.Configuration.ExeConfigurationFileMap" /> existant.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Configuration.ExeConfigurationFileMap&quot; /&gt; object.">Objet <see cref="T:System.Configuration.ExeConfigurationFileMap" />.</returns>
    </member>
    <member name="P:System.Configuration.ExeConfigurationFileMap.ExeConfigFilename">
      <summary vsli:raw="Gets or sets the name of the configuration file.">Obtient ou définit le nom du fichier de configuration.</summary>
      <returns vsli:raw="The configuration file name.">Nom du fichier de configuration.</returns>
    </member>
    <member name="P:System.Configuration.ExeConfigurationFileMap.LocalUserConfigFilename">
      <summary vsli:raw="Gets or sets the name of the configuration file for the local user.">Obtient ou définit le nom du fichier de configuration pour l'utilisateur local.</summary>
      <returns vsli:raw="The configuration file name.">Nom du fichier de configuration.</returns>
    </member>
    <member name="P:System.Configuration.ExeConfigurationFileMap.RoamingUserConfigFilename">
      <summary vsli:raw="Gets or sets the name of the configuration file for the roaming user.">Obtient ou définit le nom du fichier de configuration pour l'utilisateur itinérant.</summary>
      <returns vsli:raw="The configuration file name.">Nom du fichier de configuration.</returns>
    </member>
    <member name="T:System.Configuration.ExeContext">
      <summary vsli:raw="Manages the path context for the current application. This class cannot be inherited.">Gère le contexte de chemin de l’application actuelle. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="P:System.Configuration.ExeContext.ExePath">
      <summary vsli:raw="Gets the current path for the application.">Obtient le chemin actuel de l’application.</summary>
      <returns vsli:raw="A string value containing the current path.">Valeur de chaîne contenant le chemin d'accès actuel.</returns>
    </member>
    <member name="P:System.Configuration.ExeContext.UserLevel">
      <summary vsli:raw="Gets an object representing the path level of the current application.">Obtient un objet représentant le niveau du chemin de l’application actuelle.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConfigurationUserLevel&quot; /&gt; object representing the path level of the current application.">Objet <see cref="T:System.Configuration.ConfigurationUserLevel" /> représentant le niveau du chemin d'accès de l'application en cours.</returns>
    </member>
    <member name="T:System.Configuration.GenericEnumConverter">
      <summary vsli:raw="Converts between a string and an enumeration type.">Effectue une conversion entre une chaîne et un type énumération.</summary>
    </member>
    <member name="M:System.Configuration.GenericEnumConverter.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.GenericEnumConverter&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.GenericEnumConverter" />.</summary>
      <param name="typeEnum" vsli:raw="The enumeration type to convert.">Type d'énumération à convertir.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;typeEnum&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="typeEnum" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Configuration.GenericEnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; to an &lt;see cref=&quot;T:System.Enum&quot; /&gt; type.">Convertit un <see cref="T:System.String" /> en type <see cref="T:System.Enum" />.</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; object used for type conversions.">Objet <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilisé pour les conversions de type.</param>
      <param name="ci" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; object used during conversion.">Objet <see cref="T:System.Globalization.CultureInfo" /> utilisé pendant la conversion.</param>
      <param name="data" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; object to convert.">Objet <see cref="T:System.String" /> à convertir.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Enum&quot; /&gt; type that represents the &lt;paramref name=&quot;data&quot; /&gt; parameter.">Type <see cref="T:System.Enum" />que représente le paramètre <paramref name="data" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;data&quot; /&gt; is null or an empty string (&quot;&quot;).  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;data&quot; /&gt; starts with a numeric character.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;data&quot; /&gt; includes white space.">
        <paramref name="data" /> est null ou une chaîne vide ("").  

ou - 
<paramref name="data" /> démarre avec un caractère numérique.  

ou 
 <paramref name="data" /> inclut un espace blanc.</exception>
    </member>
    <member name="M:System.Configuration.GenericEnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Converts an &lt;see cref=&quot;T:System.Enum&quot; /&gt; type to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">Convertit un type <see cref="T:System.Enum" /> en valeur <see cref="T:System.String" />.</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; object used for type conversions.">Objet <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilisé pour les conversions de type.</param>
      <param name="ci" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; object used during conversion.">Objet <see cref="T:System.Globalization.CultureInfo" /> utilisé pendant la conversion.</param>
      <param name="value" vsli:raw="The value to convert to.">Valeur vers laquelle effectuer la conversion.</param>
      <param name="type" vsli:raw="The type to convert to.">Type vers lequel effectuer la conversion.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the &lt;paramref name=&quot;value&quot; /&gt; parameter.">
        <see cref="T:System.String" /> qui représente le paramètre <paramref name="value" />.</returns>
    </member>
    <member name="T:System.Configuration.IApplicationSettingsProvider">
      <summary vsli:raw="Defines extended capabilities for client-based application settings providers.">Définit des capacités étendues pour les fournisseurs de paramètres d'application basés sur les clients.</summary>
    </member>
    <member name="M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)">
      <summary vsli:raw="Returns the value of the specified settings property for the previous version of the same application.">Retourne la valeur de la propriété de paramètres spécifiée pour la version antérieure de la même application.</summary>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsContext&quot; /&gt; describing the current application usage.">
        <see cref="T:System.Configuration.SettingsContext" /> décrivant l'utilisation de l'application actuelle.</param>
      <param name="property" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; whose value is to be returned.">
        <see cref="T:System.Configuration.SettingsProperty" /> dont la valeur doit être retournée.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValue&quot; /&gt; containing the value of the specified property setting as it was last set in the previous version of the application; or &lt;see langword=&quot;null&quot; /&gt; if the setting cannot be found.">
        <see cref="T:System.Configuration.SettingsPropertyValue" /> contenant la valeur du paramètre de propriété spécifié, tel que défini pour la dernière fois dans la version antérieure de l'application ; ou <see langword="null" /> si le paramètre est introuvable.</returns>
    </member>
    <member name="M:System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)">
      <summary vsli:raw="Resets the application settings associated with the specified application to their default values.">Restaure les valeurs par défaut des paramètres d'application associés à l'application spécifiée.</summary>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsContext&quot; /&gt; describing the current application usage.">
        <see cref="T:System.Configuration.SettingsContext" /> décrivant l'utilisation de l'application actuelle.</param>
    </member>
    <member name="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
      <summary vsli:raw="Indicates to the provider that the application has been upgraded. This offers the provider an opportunity to upgrade its stored settings as appropriate.">Indique au fournisseur que l'application a été mise à niveau. Cela offre au fournisseur la possibilité de mettre à niveau ses paramètres stockés selon les besoins.</summary>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsContext&quot; /&gt; describing the current application usage.">
        <see cref="T:System.Configuration.SettingsContext" /> décrivant l'utilisation de l'application actuelle.</param>
      <param name="properties" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsPropertyCollection&quot; /&gt; containing the settings property group whose values are to be retrieved.">
        <see cref="T:System.Configuration.SettingsPropertyCollection" /> contenant le groupe de propriétés de paramètres dont les valeurs seront récupérées.</param>
    </member>
    <member name="T:System.Configuration.IConfigurationSectionHandler">
      <summary vsli:raw="Handles the access to certain configuration sections.">Gère l’accès à certaines sections de configuration.</summary>
    </member>
    <member name="M:System.Configuration.IConfigurationSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <summary vsli:raw="Creates a configuration section handler.">Crée un gestionnaire de section de configuration.</summary>
      <param name="parent" vsli:raw="Parent object.">Objet parent.</param>
      <param name="configContext" vsli:raw="Configuration context object.">Objet de contexte de configuration.</param>
      <param name="section" vsli:raw="Section XML node.">Nœud XML de section.</param>
      <returns vsli:raw="The created section handler object.">Objet gestionnaire de section créé.</returns>
    </member>
    <member name="T:System.Configuration.IConfigurationSystem">
      <summary vsli:raw="Provides standard configuration methods.">Fournit des méthodes de configuration standard.</summary>
    </member>
    <member name="M:System.Configuration.IConfigurationSystem.GetConfig(System.String)">
      <summary vsli:raw="Gets the specified configuration.">Obtient la configuration spécifiée.</summary>
      <param name="configKey" vsli:raw="The configuration key.">Clé de configuration.</param>
      <returns vsli:raw="The object representing the configuration.">Objet représentant la configuration.</returns>
    </member>
    <member name="M:System.Configuration.IConfigurationSystem.Init">
      <summary vsli:raw="Used for initialization.">Utilisé pour l’initialisation.</summary>
    </member>
    <member name="T:System.Configuration.IdnElement">
      <summary vsli:raw="Provides the configuration setting for International Domain Name (IDN) processing in the &lt;see cref=&quot;T:System.Uri&quot; /&gt; class.">Fournit le paramètre de configuration pour le traitement des noms de domaines internationaux (IDN, International Domain Name) dans la classe <see cref="T:System.Uri" />.</summary>
    </member>
    <member name="M:System.Configuration.IdnElement.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.IdnElement&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.IdnElement" />.</summary>
    </member>
    <member name="P:System.Configuration.IdnElement.Enabled">
      <summary vsli:raw="Gets or sets the value of the &lt;see cref=&quot;T:System.Configuration.IdnElement&quot; /&gt; configuration setting.">Obtient ou définit la valeur du paramètre de configuration <see cref="T:System.Configuration.IdnElement" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.UriIdnScope&quot; /&gt; that contains the current configuration setting for IDN processing.">
        <see cref="T:System.UriIdnScope" /> qui contient le paramètre de configuration actuel pour le traitement des IDN.</returns>
    </member>
    <member name="T:System.Configuration.IgnoreSection">
      <summary vsli:raw="Provides a wrapper type definition for configuration sections that are not handled by the &lt;see cref=&quot;N:System.Configuration&quot; /&gt; types.">Fournit une définition de type wrapper pour les sections de configuration qui ne sont pas gérées par les types <see cref="N:System.Configuration" />.</summary>
    </member>
    <member name="M:System.Configuration.IgnoreSection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.IgnoreSection&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.IgnoreSection" />.</summary>
    </member>
    <member name="T:System.Configuration.IgnoreSectionHandler">
      <summary vsli:raw="Provides a legacy section-handler definition for configuration sections that are not handled by the &lt;see cref=&quot;N:System.Configuration&quot; /&gt; types.">Fournit une définition de gestionnaire de section héritée (legacy) pour les sections de configuration qui ne sont pas gérées par les types <see cref="N:System.Configuration" />.</summary>
    </member>
    <member name="M:System.Configuration.IgnoreSectionHandler.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.IgnoreSectionHandler&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.IgnoreSectionHandler" />.</summary>
    </member>
    <member name="M:System.Configuration.IgnoreSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <summary vsli:raw="Creates a new configuration handler and adds the specified configuration object to the section-handler collection.">Crée un nouveau gestionnaire de configuration et ajoute l'objet de configuration spécifié à la collection de gestionnaires de section.</summary>
      <param name="parent" vsli:raw="The configuration settings in a corresponding parent configuration section.">Paramètres de configuration d'une section de configuration parente correspondante.</param>
      <param name="configContext" vsli:raw="The virtual path for which the configuration section handler computes configuration values. Normally this parameter is reserved and is &lt;see langword=&quot;null&quot; /&gt;.">Le chemin d'accès virtuel du gestionnaire de section de configuration calcule les valeurs de configuration. Normalement, ce paramètre est réservé et est <see langword="null" />.</param>
      <param name="section" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; that contains the configuration information to be handled. Provides direct access to the XML contents of the configuration section.">
        <see cref="T:System.Xml.XmlNode" /> qui contient les informations de configuration à gérer. Permet d'accéder directement au contenu XML de la section de configuration.</param>
      <returns vsli:raw="The created configuration handler object.">Objet gestionnaire de configuration créé.</returns>
    </member>
    <member name="T:System.Configuration.InfiniteIntConverter">
      <summary vsli:raw="Converts between a string and the standard infinite or integer value.">Effectue une conversion entre une chaîne et la valeur infinie ou entière standard.</summary>
    </member>
    <member name="M:System.Configuration.InfiniteIntConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.InfiniteIntConverter&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.InfiniteIntConverter" />.</summary>
    </member>
    <member name="M:System.Configuration.InfiniteIntConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; to an &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">Convertit <see cref="T:System.String" /> en <see cref="T:System.Int32" />.</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; object used for type conversions.">Objet <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilisé pour les conversions de type.</param>
      <param name="ci" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; object used during conversion.">Objet <see cref="T:System.Globalization.CultureInfo" /> utilisé pendant la conversion.</param>
      <param name="data" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; object to convert.">Objet <see cref="T:System.String" /> à convertir.</param>
      <returns vsli:raw="The &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;, if the &lt;paramref name=&quot;data&quot; /&gt; parameter is the &lt;see cref=&quot;T:System.String&quot; /&gt; &quot;infinite&quot;; otherwise, the &lt;see cref=&quot;T:System.Int32&quot; /&gt; representing the &lt;paramref name=&quot;data&quot; /&gt; parameter integer value.">
        <see cref="F:System.Int32.MaxValue" />, si le paramètre <paramref name="data" /> est la <see cref="T:System.String" /> « infini » ; sinon, <see cref="T:System.Int32" /> représentant la valeur entière du paramètre <paramref name="data" />.</returns>
    </member>
    <member name="M:System.Configuration.InfiniteIntConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Converts an &lt;see cref=&quot;T:System.Int32&quot; /&gt;.to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convertit <see cref="T:System.Int32" /> en <see cref="T:System.String" />.</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; object used for type conversions.">Objet <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilisé pour les conversions de type.</param>
      <param name="ci" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; object used during conversion.">Objet <see cref="T:System.Globalization.CultureInfo" /> utilisé pendant la conversion.</param>
      <param name="value" vsli:raw="The value to convert to.">Valeur vers laquelle effectuer la conversion.</param>
      <param name="type" vsli:raw="The type to convert to.">Type vers lequel effectuer la conversion.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; &quot;infinite&quot; if the &lt;paramref name=&quot;value&quot; /&gt; is &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;; otherwise, the &lt;see cref=&quot;T:System.String&quot; /&gt; representing the &lt;paramref name=&quot;value&quot; /&gt; parameter.">La <see cref="T:System.String" /> « infini » si <paramref name="value" /> est <see cref="F:System.Int32.MaxValue" /> ; sinon, la <see cref="T:System.String" /> qui représente le paramètre <paramref name="value" />.</returns>
    </member>
    <member name="T:System.Configuration.InfiniteTimeSpanConverter">
      <summary vsli:raw="Converts between a string and the standard infinite &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">Effectue la conversion entre une chaîne et la valeur <see cref="T:System.TimeSpan" /> infinie standard.</summary>
    </member>
    <member name="M:System.Configuration.InfiniteTimeSpanConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.InfiniteTimeSpanConverter&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.InfiniteTimeSpanConverter" />.</summary>
    </member>
    <member name="M:System.Configuration.InfiniteTimeSpanConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">Convertit une <see cref="T:System.String" /> en une <see cref="T:System.TimeSpan" />.</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; object used for type conversions.">Objet <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilisé pour les conversions de type.</param>
      <param name="ci" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; object used during conversion.">Objet <see cref="T:System.Globalization.CultureInfo" /> utilisé pendant la conversion.</param>
      <param name="data" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; object to convert.">Objet <see cref="T:System.String" /> à convertir.</param>
      <returns vsli:raw="The &lt;see cref=&quot;F:System.TimeSpan.MaxValue&quot;&gt;TimeSpan.MaxValue&lt;/see&gt;, if the &lt;paramref name=&quot;data&quot; /&gt; parameter is the &lt;see cref=&quot;T:System.String&quot; /&gt; infinite; otherwise, the &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; representing the &lt;paramref name=&quot;data&quot; /&gt; parameter in minutes.">
        <see cref="F:System.TimeSpan.MaxValue" />, si le paramètre <paramref name="data" /> est la <see cref="T:System.String" /> infinie ; sinon, <see cref="T:System.TimeSpan" /> représentant le paramètre <paramref name="data" /> en minutes.</returns>
    </member>
    <member name="M:System.Configuration.InfiniteTimeSpanConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convertit une <see cref="T:System.TimeSpan" /> en une <see cref="T:System.String" />.</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; object used for type conversions.">Objet <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilisé pour les conversions de type.</param>
      <param name="ci" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; used during object conversion.">
        <see cref="T:System.Globalization.CultureInfo" /> utilisé pendant la conversion des objets.</param>
      <param name="value" vsli:raw="The value to convert.">Valeur à convertir.</param>
      <param name="type" vsli:raw="The conversion type.">Type de conversion.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; &quot;infinite&quot;, if the &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see cref=&quot;F:System.TimeSpan.MaxValue&quot;&gt;TimeSpan.MaxValue&lt;/see&gt;; otherwise, the &lt;see cref=&quot;T:System.String&quot; /&gt; representing the &lt;paramref name=&quot;value&quot; /&gt; parameter in minutes.">
        <see cref="T:System.String" /> « infini », si le paramètre <paramref name="value" /> est <see cref="F:System.TimeSpan.MaxValue" /> ; sinon, la <see cref="T:System.String" /> représentant le paramètre <paramref name="value" /> en minutes.</returns>
    </member>
    <member name="T:System.Configuration.IntegerValidator">
      <summary vsli:raw="Provides validation of an &lt;see cref=&quot;T:System.Int32&quot; /&gt; value.">Fournit la validation d'une valeur <see cref="T:System.Int32" />.</summary>
    </member>
    <member name="M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.IntegerValidator&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.IntegerValidator" />.</summary>
      <param name="minValue" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; object that specifies the minimum value.">Objet <see cref="T:System.Int32" /> qui spécifie la valeur minimale.</param>
      <param name="maxValue" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; object that specifies the maximum value.">Objet <see cref="T:System.Int32" /> qui spécifie la valeur maximale.</param>
    </member>
    <member name="M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.IntegerValidator&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.IntegerValidator" />.</summary>
      <param name="minValue" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; object that specifies the minimum value.">Objet <see cref="T:System.Int32" /> qui spécifie la valeur minimale.</param>
      <param name="maxValue" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; object that specifies the maximum value.">Objet <see cref="T:System.Int32" /> qui spécifie la valeur maximale.</param>
      <param name="rangeIsExclusive" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that the validation range is exclusive. Inclusive means the value to be validated must be within the specified range; exclusive means that it must be below the minimum or above the maximum.">
        <see langword="true" /> pour spécifier que la plage de validations est exclusive. Incluse signifie que la valeur à valider doit être comprise dans la plage spécifiée ; exclusive signifie qu'elle doit être strictement inférieure (sous le minimum) ou strictement supérieure (au-dessus du maximum).</param>
    </member>
    <member name="M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.IntegerValidator&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.IntegerValidator" />.</summary>
      <param name="minValue" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; object that specifies the minimum length of the integer value.">Objet <see cref="T:System.Int32" /> qui spécifie la longueur minimale de la valeur entière.</param>
      <param name="maxValue" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; object that specifies the maximum length of the integer value.">Objet <see cref="T:System.Int32" /> qui spécifie la longueur maximale de la valeur entière.</param>
      <param name="rangeIsExclusive" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the validation range is exclusive.">Valeur <see cref="T:System.Boolean" /> qui spécifie si la plage de validation est exclusive.</param>
      <param name="resolution" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; object that specifies a value that must be matched.">Objet <see cref="T:System.Int32" /> qui spécifie une valeur qui doit être respectée.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;resolution&quot; /&gt; is less than &lt;see langword=&quot;0&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;minValue&quot; /&gt; is greater than &lt;paramref name=&quot;maxValue&quot; /&gt;.">
        <paramref name="resolution" /> est inférieur à <see langword="0" />.  

ou - 
<paramref name="minValue" /> est supérieur à <paramref name="maxValue" />.</exception>
    </member>
    <member name="M:System.Configuration.IntegerValidator.CanValidate(System.Type)">
      <summary vsli:raw="Determines whether the type of the object can be validated.">Détermine si le type de l'objet peut être validé.</summary>
      <param name="type" vsli:raw="The type of the object.">Type de l'objet.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter matches an &lt;see cref=&quot;T:System.Int32&quot; /&gt; value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le paramètre <paramref name="type" /> correspond à une valeur <see cref="T:System.Int32" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.IntegerValidator.Validate(System.Object)">
      <summary vsli:raw="Determines whether the value of an object is valid.">Détermine si la valeur d’un objet est valide.</summary>
      <param name="value" vsli:raw="The value to be validated.">La valeur à valider.</param>
    </member>
    <member name="T:System.Configuration.IntegerValidatorAttribute">
      <summary vsli:raw="Declaratively instructs .NET to perform integer validation on a configuration property. This class cannot be inherited.">Ordonne de manière déclarative au .NET Framework d'effectuer la validation des entiers sur une propriété de configuration. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.IntegerValidatorAttribute.#ctor">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Configuration.IntegerValidatorAttribute&quot; /&gt; class.">Crée une instance de la classe <see cref="T:System.Configuration.IntegerValidatorAttribute" />.</summary>
    </member>
    <member name="P:System.Configuration.IntegerValidatorAttribute.ExcludeRange">
      <summary vsli:raw="Gets or sets a value that indicates whether to include or exclude the integers in the range defined by the &lt;see cref=&quot;P:System.Configuration.IntegerValidatorAttribute.MinValue&quot; /&gt; and &lt;see cref=&quot;P:System.Configuration.IntegerValidatorAttribute.MaxValue&quot; /&gt; property values.">Obtient ou définit une valeur qui indique s'il faut inclure ou exclure les entiers dans la plage définie par les valeurs des propriétés <see cref="P:System.Configuration.IntegerValidatorAttribute.MinValue" /> et <see cref="P:System.Configuration.IntegerValidatorAttribute.MaxValue" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value must be excluded; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la valeur doit être exclue ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.IntegerValidatorAttribute.MaxValue">
      <summary vsli:raw="Gets or sets the maximum value allowed for the property.">Obtient ou définit la valeur maximale autorisée pour la propriété.</summary>
      <returns vsli:raw="An integer that indicates the allowed maximum value.">Entier qui indique la valeur maximale autorisée.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The selected value is less than &lt;see cref=&quot;P:System.Configuration.IntegerValidatorAttribute.MinValue&quot; /&gt;.">La valeur sélectionnée est inférieure à <see cref="P:System.Configuration.IntegerValidatorAttribute.MinValue" />.</exception>
    </member>
    <member name="P:System.Configuration.IntegerValidatorAttribute.MinValue">
      <summary vsli:raw="Gets or sets the minimum value allowed for the property.">Obtient ou définit la valeur minimale autorisée pour la propriété.</summary>
      <returns vsli:raw="An integer that indicates the allowed minimum value.">Entier qui indique la valeur minimale autorisée.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The selected value is greater than &lt;see cref=&quot;P:System.Configuration.IntegerValidatorAttribute.MaxValue&quot; /&gt;.">La valeur sélectionnée est supérieure à <see cref="P:System.Configuration.IntegerValidatorAttribute.MaxValue" />.</exception>
    </member>
    <member name="P:System.Configuration.IntegerValidatorAttribute.ValidatorInstance">
      <summary vsli:raw="Gets an instance of the &lt;see cref=&quot;T:System.Configuration.IntegerValidator&quot; /&gt; class.">Obtient une instance de la classe <see cref="T:System.Configuration.IntegerValidator" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorBase&quot; /&gt; validator instance.">Instance du validateur <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</returns>
    </member>
    <member name="T:System.Configuration.Internal.DelegatingConfigHost">
      <summary vsli:raw="Delegates all members of the &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigHost&quot; /&gt; interface to another instance of a host.">Délégue tous les membres de l'interface <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> à une autre instance d'un hôte.</summary>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.Internal.DelegatingConfigHost&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.Internal.DelegatingConfigHost" />.</summary>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.CreateConfigurationContext(System.String,System.String)">
      <summary vsli:raw="Creates a new configuration context.">Crée un nouveau contexte de configuration.</summary>
      <param name="configPath" vsli:raw="A string representing the path to a configuration file.">Chaîne représentant le chemin d'accès à un fichier de configuration.</param>
      <param name="locationSubPath" vsli:raw="A string representing a location subpath.">Chaîne représentant un sous-chemin d'emplacement.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Object&quot; /&gt; representing a new configuration context.">
        <see cref="T:System.Object" /> représentant un nouveau contexte de configuration.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.CreateDeprecatedConfigContext(System.String)">
      <summary vsli:raw="Creates a deprecated configuration context.">Crée un contexte de configuration déconseillé.</summary>
      <param name="configPath" vsli:raw="A string representing the path to a configuration file.">Chaîne représentant le chemin d'accès à un fichier de configuration.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Object&quot; /&gt; representing a deprecated configuration context.">
        <see cref="T:System.Object" /> représentant un contexte de configuration déconseillé.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.DecryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)">
      <summary vsli:raw="Decrypts an encrypted configuration section.">Déchiffre une section de configuration chiffrée.</summary>
      <param name="encryptedXml" vsli:raw="An encrypted section of a configuration file.">Section chiffrée d'un fichier de configuration.</param>
      <param name="protectionProvider" vsli:raw="An object containing the providers that encrypt and decrypt protected configuration data.">Objet <see cref="T:System.Configuration.ProtectedConfigurationProvider" />.</param>
      <param name="protectedConfigSection" vsli:raw="An object that provides programatic access to the &lt;c&gt;configProtectedData&lt;/c&gt; configuration section.">Objet <see cref="T:System.Configuration.ProtectedConfigurationSection" />.</param>
      <returns vsli:raw="A string representing a decrypted configuration section.">Chaîne représentant une section de configuration déchiffrée.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.DeleteStream(System.String)">
      <summary vsli:raw="Deletes the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a configuration file.">Supprime l'objet <see cref="T:System.IO.Stream" /> effectuant des tâches d'E/S sur un fichier de configuration.</summary>
      <param name="streamName" vsli:raw="The name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a configuration file.">Nom d'un objet <see cref="T:System.IO.Stream" /> effectuant des tâches d'E/S sur un fichier de configuration.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.EncryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)">
      <summary vsli:raw="Encrypts a section of a configuration object.">Chiffre une section d'un objet de configuration.</summary>
      <param name="clearTextXml" vsli:raw="A section of the configuration that is not encrypted.">Section de la configuration qui n'est pas chiffrée.</param>
      <param name="protectionProvider" vsli:raw="An object containing the providers that encrypt and decrypt protected configuration data.">Objet <see cref="T:System.Configuration.ProtectedConfigurationProvider" />.</param>
      <param name="protectedConfigSection" vsli:raw="An object that provides programatic access to the &lt;c&gt;configProtectedData&lt;/c&gt; configuration section.">Objet <see cref="T:System.Configuration.ProtectedConfigurationSection" />.</param>
      <returns vsli:raw="A string representing an encrypted section of the configuration object.">Chaîne représentant une section chiffrée de l'objet de configuration.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetConfigPathFromLocationSubPath(System.String,System.String)">
      <summary vsli:raw="Returns a configuration path based on a location subpath.">Retourne un chemin d'accès de configuration basé sur un sous-chemin d'emplacement.</summary>
      <param name="configPath" vsli:raw="A string representing the path to a configuration file.">Chaîne représentant le chemin d'accès à un fichier de configuration.</param>
      <param name="locationSubPath" vsli:raw="A string representing a location subpath.">Chaîne représentant un sous-chemin d'emplacement.</param>
      <returns vsli:raw="A string representing a configuration path.">Chaîne représentant un chemin d'accès de configuration.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetConfigType(System.String,System.Boolean)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Type&quot; /&gt; representing the type of the configuration.">Retourne un <see cref="T:System.Type" /> représentant le type de la configuration.</summary>
      <param name="typeName" vsli:raw="A string representing the configuration type.">Chaîne représentant le type de configuration.</param>
      <param name="throwOnError" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an exception should be thrown if an error is encountered; &lt;see langword=&quot;false&quot; /&gt; if an exception should not be thrown if an error is encountered.">
        <see langword="true" /> si une exception doit être levée en cas d'erreur ; <see langword="false" /> si une exception ne doit pas être levée en cas d'erreur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; representing the type of the configuration.">
        <see cref="T:System.Type" /> représentant le type de la configuration.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetConfigTypeName(System.Type)">
      <summary vsli:raw="Returns a string representing the type name of the configuration object.">Retourne une chaîne représentant le nom de type de l'objet de configuration.</summary>
      <param name="t" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; object.">Objet <see cref="T:System.Type" />.</param>
      <returns vsli:raw="A string representing the type name of the configuration object.">Chaîne représentant le nom de type de l'objet de configuration.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetRestrictedPermissions(System.Configuration.Internal.IInternalConfigRecord,System.Security.PermissionSet@,System.Boolean@)">
      <summary vsli:raw="Sets the specified permission set if available within the host object.">Définit le jeu d'autorisations spécifié s'il est disponible dans l'objet hôte.</summary>
      <param name="configRecord" vsli:raw="An &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigRecord&quot; /&gt; object.">Objet <see cref="T:System.Configuration.Internal.IInternalConfigRecord" />.</param>
      <param name="permissionSet" vsli:raw="A &lt;see cref=&quot;T:System.Security.PermissionSet&quot; /&gt; object.">Objet <see cref="T:System.Security.PermissionSet" />.</param>
      <param name="isHostReady" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the host has finished initialization; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'hôte a terminé l'initialisation ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetStreamName(System.String)">
      <summary vsli:raw="Returns the name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a configuration file.">Retourne le nom d'un objet <see cref="T:System.IO.Stream" /> effectuant des tâches d'E/S sur un fichier de configuration.</summary>
      <param name="configPath" vsli:raw="A string representing the path to a configuration file.">Chaîne représentant le chemin d'accès à un fichier de configuration.</param>
      <returns vsli:raw="A string representing the name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a configuration file.">Chaîne représentant le nom d'un objet <see cref="T:System.IO.Stream" /> effectuant des tâches d'E/S sur un fichier de configuration.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetStreamNameForConfigSource(System.String,System.String)">
      <summary vsli:raw="Returns the name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a configuration source.">Retourne le nom d'un objet <see cref="T:System.IO.Stream" /> effectuant des tâches d'E/S sur une source de configuration.</summary>
      <param name="streamName" vsli:raw="The name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a configuration file.">Nom d'un objet <see cref="T:System.IO.Stream" /> effectuant des tâches d'E/S sur un fichier de configuration.</param>
      <param name="configSource" vsli:raw="A string representing the configuration source.">Chaîne représentant la source de configuration.</param>
      <returns vsli:raw="A string representing the name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a configuration source.">Chaîne représentant le nom d'un objet <see cref="T:System.IO.Stream" /> effectuant des tâches d'E/S sur une source de configuration.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetStreamVersion(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;P:System.Diagnostics.FileVersionInfo.FileVersion&quot; /&gt; object representing the version of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a configuration file.">Retourne un objet <see cref="P:System.Diagnostics.FileVersionInfo.FileVersion" /> représentant la version d'un objet <see cref="T:System.IO.Stream" /> effectuant des tâches d'E/S sur un fichier de configuration.</summary>
      <param name="streamName" vsli:raw="The name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a configuration file.">Nom d'un objet <see cref="T:System.IO.Stream" /> effectuant des tâches d'E/S sur un fichier de configuration.</param>
      <returns vsli:raw="A &lt;see cref=&quot;P:System.Diagnostics.FileVersionInfo.FileVersion&quot; /&gt; object representing the version of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a configuration file.">Objet <see cref="P:System.Diagnostics.FileVersionInfo.FileVersion" /> représentant la version d'un objet <see cref="T:System.IO.Stream" /> effectuant des tâches d'E/S sur un fichier de configuration.</returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.HasLocalConfig" />
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.HasRoamingConfig" />
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.Host">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigHost&quot; /&gt; object.">Obtient ou définit l'objet <see cref="T:System.Configuration.Internal.IInternalConfigHost" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigHost&quot; /&gt; object.">Objet <see cref="T:System.Configuration.Internal.IInternalConfigHost" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.Impersonate">
      <summary vsli:raw="Instructs the host to impersonate and returns an &lt;see cref=&quot;T:System.IDisposable&quot; /&gt; object required internally by .NET.">Demande à l'hôte d'effectuer un emprunt d'identité et retourne un objet <see cref="T:System.IDisposable" /> requis en interne par le .NET Framework.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IDisposable&quot; /&gt; value.">Valeur <see cref="T:System.IDisposable" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.Init(System.Configuration.Internal.IInternalConfigRoot,System.Object[])">
      <summary vsli:raw="Initializes the configuration host.">Initialise l'hôte de configuration.</summary>
      <param name="configRoot" vsli:raw="An &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigRoot&quot; /&gt; object.">Objet <see cref="T:System.Configuration.Internal.IInternalConfigRoot" />.</param>
      <param name="hostInitParams" vsli:raw="A parameter object containing the values used for initializing the configuration host.">Objet paramètre contenant les valeurs utilisées pour initialiser l'hôte de configuration.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.InitForConfiguration(System.String@,System.String@,System.String@,System.Configuration.Internal.IInternalConfigRoot,System.Object[])">
      <summary vsli:raw="Initializes the host for configuration.">Initialise l'hôte pour la configuration.</summary>
      <param name="locationSubPath" vsli:raw="A string representing a location subpath (passed by reference).">Chaîne représentant un sous-chemin d'emplacement (passé par référence).</param>
      <param name="configPath" vsli:raw="A string representing the path to a configuration file.">Chaîne représentant le chemin d'accès à un fichier de configuration.</param>
      <param name="locationConfigPath" vsli:raw="The location configuration path.">Chemin d'accès de configuration de l'emplacement.</param>
      <param name="configRoot" vsli:raw="The configuration root element.">Élément racine de configuration.</param>
      <param name="hostInitConfigurationParams" vsli:raw="A parameter object representing the parameters used to initialize the host.">Objet paramètre représentant les paramètres utilisés pour initialiser l'hôte.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsAboveApplication(System.String)">
      <summary vsli:raw="Returns a value indicating whether the configuration is above the application configuration in the configuration hierarchy.">Retourne une valeur indiquant si la configuration se trouve au-dessus de la configuration de l'application dans la hiérarchie de configuration.</summary>
      <param name="configPath" vsli:raw="A string representing the path to a configuration file.">Chaîne représentant le chemin d'accès à un fichier de configuration.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration is above the application configuration in the configuration hierarchy; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la configuration se trouve au-dessus de la configuration de l'application dans la hiérarchie de configuration ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.IsAppConfigHttp" />
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsConfigRecordRequired(System.String)">
      <summary vsli:raw="Returns a value indicating whether a configuration record is required for the host configuration initialization.">Retourne une valeur indiquant si un enregistrement de configuration est requis pour l'initialisation de la configuration d'hôte.</summary>
      <param name="configPath" vsli:raw="A string representing the path to a configuration file.">Chaîne représentant le chemin d'accès à un fichier de configuration.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a configuration record is required for the host configuration initialization; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si un enregistrement de configuration est requis pour l'initialisation de la configuration d'hôte ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition)">
      <summary vsli:raw="Restricts or allows definitions in the host configuration.">Restreint ou autorise des définitions dans la configuration d'hôte.</summary>
      <param name="configPath" vsli:raw="A string representing the path to a configuration file.">Chaîne représentant le chemin d'accès à un fichier de configuration.</param>
      <param name="allowDefinition" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationAllowDefinition&quot; /&gt; object.">Objet <see cref="T:System.Configuration.ConfigurationAllowDefinition" />.</param>
      <param name="allowExeDefinition" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationAllowExeDefinition&quot; /&gt; object.">Objet <see cref="T:System.Configuration.ConfigurationAllowExeDefinition" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the grant or restriction of definitions in the host configuration was successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'autorisation ou la restriction des définitions dans la configuration d'hôte ont réussi ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsFile(System.String)">
      <summary vsli:raw="Returns a value indicating whether the file path used by a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object to read a configuration file is a valid path.">Retourne une valeur indiquant si le chemin d'accès utilisé par un objet <see cref="T:System.IO.Stream" /> pour lire un fichier de configuration est un chemin d'accès valide.</summary>
      <param name="streamName" vsli:raw="The name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a configuration file.">Nom d'un objet <see cref="T:System.IO.Stream" /> effectuant des tâches d'E/S sur un fichier de configuration.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the path used by a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object to read a configuration file is a valid path; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le chemin d'accès utilisé par un objet <see cref="T:System.IO.Stream" /> pour lire un fichier de configuration est un chemin d'accès valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsFullTrustSectionWithoutAptcaAllowed(System.Configuration.Internal.IInternalConfigRecord)">
      <summary vsli:raw="Returns a value indicating whether a configuration section requires a fully trusted code access security level and does not allow the &lt;see cref=&quot;T:System.Security.AllowPartiallyTrustedCallersAttribute&quot; /&gt; attribute to disable implicit link demands.">Retourne une valeur indiquant si une section de configuration requiert un niveau de sécurité d'accès du code d'un niveau de confiance suffisant et ne permet pas à l'attribut <see cref="T:System.Security.AllowPartiallyTrustedCallersAttribute" /> de désactiver des demandes de liaison implicites.</summary>
      <param name="configRecord" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigRecord&quot; /&gt; object.">Objet <see cref="T:System.Configuration.Internal.IInternalConfigRecord" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration section requires a fully trusted code access security level and does not allow the &lt;see cref=&quot;T:System.Security.AllowPartiallyTrustedCallersAttribute&quot; /&gt; attribute to disable implicit link demands; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la section de configuration requiert un niveau de sécurité d'accès du code d'un niveau de confiance suffisant et ne permet pas à l'attribut <see cref="T:System.Security.AllowPartiallyTrustedCallersAttribute" /> de désactiver des demandes de liaison implicites ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsInitDelayed(System.Configuration.Internal.IInternalConfigRecord)">
      <summary vsli:raw="Returns a value indicating whether the initialization of a configuration object is considered delayed.">Retourne une valeur indiquant si l'initialisation d'un objet de configuration est considérée comme retardée.</summary>
      <param name="configRecord" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigRecord&quot; /&gt; object.">Objet <see cref="T:System.Configuration.Internal.IInternalConfigRecord" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the initialization of a configuration object is considered delayed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'initialisation d'un objet de configuration est considérée comme retardée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsLocationApplicable(System.String)">
      <summary vsli:raw="Returns a value indicating whether the configuration object supports a location tag.">Retourne une valeur indiquant si l'objet de configuration prend en charge une balise d'emplacement.</summary>
      <param name="configPath" vsli:raw="A string representing the path to a configuration file.">Chaîne représentant le chemin d'accès à un fichier de configuration.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration object supports a location tag; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet de configuration prend en charge une balise d'emplacement ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.IsRemote">
      <summary vsli:raw="Gets a value indicating whether the configuration is remote.">Obtient une valeur indiquant si la configuration est distante.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration is remote; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la configuration est distante ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsSecondaryRoot(System.String)">
      <summary vsli:raw="Returns a value indicating whether a configuration path is to a configuration node whose contents should be treated as a root.">Retourne une valeur indiquant si un chemin d'accès de configuration pointe vers un nœud de configuration dont le contenu doit être traité en tant que racine.</summary>
      <param name="configPath" vsli:raw="A string representing the path to a configuration file.">Chaîne représentant le chemin d'accès à un fichier de configuration.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration path is to a configuration node whose contents should be treated as a root; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le chemin d'accès de configuration pointe vers un nœud de configuration dont le contenu doit être traité en tant que racine ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsTrustedConfigPath(System.String)">
      <summary vsli:raw="Returns a value indicating whether the configuration path is trusted.">Retourne une valeur indiquant si le chemin d'accès de configuration est approuvé.</summary>
      <param name="configPath" vsli:raw="A string representing the path to a configuration file.">Chaîne représentant le chemin d'accès à un fichier de configuration.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration path is trusted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le chemin d'accès de configuration est approuvé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.OpenStreamForRead(System.String)">
      <summary vsli:raw="Opens a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object to read a configuration file.">Ouvre un objet <see cref="T:System.IO.Stream" /> pour lire un fichier de configuration.</summary>
      <param name="streamName" vsli:raw="The name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a configuration file.">Nom d'un objet <see cref="T:System.IO.Stream" /> effectuant des tâches d'E/S sur un fichier de configuration.</param>
      <returns vsli:raw="The object specified by &lt;paramref name=&quot;streamName&quot; /&gt;.">Objet spécifié par <paramref name="streamName" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.OpenStreamForRead(System.String,System.Boolean)">
      <summary vsli:raw="Opens a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object to read a configuration file.">Ouvre un objet <see cref="T:System.IO.Stream" /> pour lire un fichier de configuration.</summary>
      <param name="streamName" vsli:raw="The name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a configuration file.">Nom d'un objet <see cref="T:System.IO.Stream" /> effectuant des tâches d'E/S sur un fichier de configuration.</param>
      <param name="assertPermissions" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to assert permissions; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour déclarer des autorisations ; sinon, <see langword="false" />.</param>
      <returns vsli:raw="The object specified by &lt;paramref name=&quot;streamName&quot; /&gt;.">Objet spécifié par <paramref name="streamName" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.OpenStreamForWrite(System.String,System.String,System.Object@)">
      <summary vsli:raw="Opens a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object for writing to a configuration file or for writing to a temporary file used to build a configuration file. Allows a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object to be designated as a template for copying file attributes.">Ouvre un objet <see cref="T:System.IO.Stream" /> afin d'écrire dans un fichier de configuration ou dans un fichier temporaire utilisé pour générer un fichier de configuration. Permet de désigner un objet <see cref="T:System.IO.Stream" /> comme modèle pour copier des attributs de fichier.</summary>
      <param name="streamName" vsli:raw="The name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a configuration file.">Nom d'un objet <see cref="T:System.IO.Stream" /> effectuant des tâches d'E/S sur un fichier de configuration.</param>
      <param name="templateStreamName" vsli:raw="The name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object from which file attributes are to be copied as a template.">Nom d'un objet <see cref="T:System.IO.Stream" /> dont les attributs de fichier doivent être copiés comme modèle.</param>
      <param name="writeContext" vsli:raw="The write context of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object (passed by reference).">Contexte d'écriture de l'objet <see cref="T:System.IO.Stream" /> (passé par référence).</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object.">Objet <see cref="T:System.IO.Stream" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.OpenStreamForWrite(System.String,System.String,System.Object@,System.Boolean)">
      <summary vsli:raw="Opens a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object for writing to a configuration file. Allows a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object to be designated as a template for copying file attributes.">Ouvre un objet <see cref="T:System.IO.Stream" /> pour écrire dans un fichier de configuration. Permet de désigner un objet <see cref="T:System.IO.Stream" /> comme modèle pour copier des attributs de fichier.</summary>
      <param name="streamName" vsli:raw="The name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a configuration file.">Nom d'un objet <see cref="T:System.IO.Stream" /> effectuant des tâches d'E/S sur un fichier de configuration.</param>
      <param name="templateStreamName" vsli:raw="The name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object from which file attributes are to be copied as a template.">Nom d'un objet <see cref="T:System.IO.Stream" /> dont les attributs de fichier doivent être copiés comme modèle.</param>
      <param name="writeContext" vsli:raw="The write context of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file (passed by reference).">Contexte d'écriture de l'objet <see cref="T:System.IO.Stream" /> qui effectue les tâches d'E/S sur le fichier de configuration (passé par référence).</param>
      <param name="assertPermissions" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to assert permissions; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour déclarer des autorisations ; sinon, <see langword="false" />.</param>
      <returns vsli:raw="The object specified by the &lt;paramref name=&quot;streamName&quot; /&gt; parameter.">Objet spécifié par le paramètre <paramref name="streamName" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.PrefetchAll(System.String,System.String)">
      <summary vsli:raw="Returns a value indicating whether the entire configuration file could be read by a designated &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object.">Retourne une valeur indiquant si le fichier de configuration peut être entièrement lu par un objet <see cref="T:System.IO.Stream" /> désigné.</summary>
      <param name="configPath" vsli:raw="A string representing the path to a configuration file.">Chaîne représentant le chemin d'accès à un fichier de configuration.</param>
      <param name="streamName" vsli:raw="The name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a configuration file.">Nom d'un objet <see cref="T:System.IO.Stream" /> effectuant des tâches d'E/S sur un fichier de configuration.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the entire configuration file could be read by the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object designated by &lt;paramref name=&quot;streamName&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le fichier de configuration peut être entièrement lu par l'objet <see cref="T:System.IO.Stream" /> désigné par <paramref name="streamName" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.PrefetchSection(System.String,System.String)">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigHost&quot; /&gt; object to read a designated section of its associated configuration file.">Commande l'objet <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> de lire une section désignée de son fichier de configuration associé.</summary>
      <param name="sectionGroupName" vsli:raw="A string representing the name of a section group in the configuration file.">Chaîne représentant le nom d'un groupe de sections dans le fichier de configuration.</param>
      <param name="sectionName" vsli:raw="A string representing the name of a section in the configuration file.">Chaîne représentant le nom d'une section dans le fichier de configuration.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a section of the configuration file designated by the &lt;paramref name=&quot;sectionGroupName&quot; /&gt; and &lt;paramref name=&quot;sectionName&quot; /&gt; parameters can be read by a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si une section du fichier de configuration désignée par les paramètres <paramref name="sectionGroupName" /> et <paramref name="sectionName" /> peut être lue par un objet <see cref="T:System.IO.Stream" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.RefreshConfigPaths" />
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.RequireCompleteInit(System.Configuration.Internal.IInternalConfigRecord)">
      <summary vsli:raw="Indicates that a new configuration record requires a complete initialization.">Indique qu'un nouvel enregistrement de configuration requiert une initialisation complète.</summary>
      <param name="configRecord" vsli:raw="An &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigRecord&quot; /&gt; object.">Objet <see cref="T:System.Configuration.Internal.IInternalConfigRecord" />.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.StartMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)">
      <summary vsli:raw="Instructs the host to monitor an associated &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object for changes in a configuration file.">Commande l'hôte de surveiller un objet <see cref="T:System.IO.Stream" /> associé en vue de détecter des modifications dans un fichier de configuration.</summary>
      <param name="streamName" vsli:raw="The name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a configuration file.">Nom d'un objet <see cref="T:System.IO.Stream" /> effectuant des tâches d'E/S sur un fichier de configuration.</param>
      <param name="callback" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.Internal.StreamChangeCallback&quot; /&gt; object to receive the returned data representing the changes in the configuration file.">Objet <see cref="T:System.Configuration.Internal.StreamChangeCallback" /> devant recevoir les données retournées représentant les modifications dans le fichier de configuration.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; instance containing changed configuration settings.">Instance de <see cref="T:System.Object" /> contenant les paramètres de configuration modifiés.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.StopMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)">
      <summary vsli:raw="Instructs the host object to stop monitoring an associated &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object for changes in a configuration file.">Commande l'objet hôte de cesser de surveiller un objet <see cref="T:System.IO.Stream" /> associé en vue de détecter des modifications dans un fichier de configuration.</summary>
      <param name="streamName" vsli:raw="The name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a configuration file.">Nom d'un objet <see cref="T:System.IO.Stream" /> effectuant des tâches d'E/S sur un fichier de configuration.</param>
      <param name="callback" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.Internal.StreamChangeCallback&quot; /&gt; object.">Objet <see cref="T:System.Configuration.Internal.StreamChangeCallback" />.</param>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.SupportsChangeNotifications">
      <summary vsli:raw="Gets a value indicating whether the host configuration supports change notifications.">Obtient une valeur indiquant si la configuration d'hôte prend en charge les notifications de modifications.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the host supports change notifications; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'hôte prend en charge les notifications ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.SupportsLocation">
      <summary vsli:raw="Gets a value indicating whether the host configuration supports location tags.">Obtient une valeur indiquant si la configuration d'hôte prend en charge les balises d'emplacement.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the host supports location tags; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'hôte prend en charge les balises d'emplacement ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.SupportsPath">
      <summary vsli:raw="Gets a value indicating whether the host configuration has path support.">Obtient une valeur indiquant si la configuration d'hôte prend en charge les chemins d'accès.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the host configuration has path support; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la configuration d'hôte prend en charge les chemins d'accès ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.SupportsRefresh">
      <summary vsli:raw="Gets a value indicating whether the host configuration supports refresh.">Obtient une valeur indiquant si la configuration d'hôte prend en charge l'actualisation.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the host configuration supports refresh; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la configuration d'hôte prend en charge l'actualisation ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.VerifyDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition,System.Configuration.Internal.IConfigErrorInfo)">
      <summary vsli:raw="Verifies that a configuration definition is allowed for a configuration record.">Vérifie qu'une définition de configuration est autorisée pour un enregistrement de configuration.</summary>
      <param name="configPath" vsli:raw="A string representing the path to a configuration file.">Chaîne représentant le chemin d'accès à un fichier de configuration.</param>
      <param name="allowDefinition" vsli:raw="An &lt;see cref=&quot;P:System.Configuration.SectionInformation.AllowDefinition&quot; /&gt; object.">Objet <see cref="P:System.Configuration.SectionInformation.AllowDefinition" />.</param>
      <param name="allowExeDefinition" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConfigurationAllowExeDefinition&quot; /&gt; object.">Objet <see cref="T:System.Configuration.ConfigurationAllowExeDefinition" />.</param>
      <param name="errorInfo" vsli:raw="An &lt;see cref=&quot;T:System.Configuration.Internal.IConfigErrorInfo&quot; /&gt; object.">Objet <see cref="T:System.Configuration.Internal.IConfigErrorInfo" />.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.WriteCompleted(System.String,System.Boolean,System.Object)">
      <summary vsli:raw="Indicates that all writing to the configuration file has completed.">Indique que les écritures dans le fichier de configuration sont achevées.</summary>
      <param name="streamName" vsli:raw="The name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a configuration file.">Nom d'un objet <see cref="T:System.IO.Stream" /> effectuant des tâches d'E/S sur un fichier de configuration.</param>
      <param name="success" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if writing to the configuration file completed successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'écriture dans le fichier de configuration a été correctement effectuée ; sinon, <see langword="false" />.</param>
      <param name="writeContext" vsli:raw="The write context of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">Contexte d'écriture de l'objet <see cref="T:System.IO.Stream" /> qui effectue les tâches d'E/S sur le fichier de configuration.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.WriteCompleted(System.String,System.Boolean,System.Object,System.Boolean)">
      <summary vsli:raw="Indicates that all writing to the configuration file has completed and specifies whether permissions should be asserted.">Indique que les écritures dans le fichier de configuration sont achevées et spécifie si des autorisations doivent être déclarées.</summary>
      <param name="streamName" vsli:raw="The name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a configuration file.">Nom d'un objet <see cref="T:System.IO.Stream" /> effectuant des tâches d'E/S sur un fichier de configuration.</param>
      <param name="success" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that writing was completed successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour indiquer que l'écriture a été correctement effectuée ; sinon, <see langword="false" />.</param>
      <param name="writeContext" vsli:raw="The write context of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">Contexte d'écriture de l'objet <see cref="T:System.IO.Stream" /> qui effectue les tâches d'E/S sur le fichier de configuration.</param>
      <param name="assertPermissions" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to assert permissions; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour déclarer des autorisations ; sinon, <see langword="false" />.</param>
    </member>
    <member name="T:System.Configuration.Internal.IConfigErrorInfo">
      <summary vsli:raw="Defines an interface used by .NET to support creating error configuration records.">Définit une interface utilisée par le .NET Framework pour prendre en charge la création d'enregistrements de configuration d'erreur.</summary>
    </member>
    <member name="P:System.Configuration.Internal.IConfigErrorInfo.Filename">
      <summary vsli:raw="Gets a string specifying the file name related to the configuration details.">Obtient une chaîne spécifiant le nom de fichier associé aux détails de configuration.</summary>
      <returns vsli:raw="A string specifying a filename.">Chaîne spécifiant un nom de fichier.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigErrorInfo.LineNumber">
      <summary vsli:raw="Gets an integer specifying the line number related to the configuration details.">Obtient un entier spécifiant le numéro de ligne associé aux détails de configuration.</summary>
      <returns vsli:raw="An integer specifying a line number.">Entier spécifiant un numéro de ligne.</returns>
    </member>
    <member name="T:System.Configuration.Internal.IConfigSystem">
      <summary vsli:raw="Defines an interface used by .NET to support the initialization of configuration properties.">Définit une interface utilisée par le .NET Framework pour prendre en charge l'initialisation de propriétés de configuration.</summary>
    </member>
    <member name="P:System.Configuration.Internal.IConfigSystem.Host">
      <summary vsli:raw="Gets the configuration host.">Obtient l'hôte de configuration.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigHost&quot; /&gt; object that is used by .NET to initialize application configuration properties.">Objet <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> qui est utilisé par le .NET Framework pour initialiser les propriétés de configuration de l'application.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IConfigSystem.Init(System.Type,System.Object[])">
      <summary vsli:raw="Initializes a configuration object.">Initialise un objet de configuration.</summary>
      <param name="typeConfigHost" vsli:raw="The type of configuration host.">Type de l'hôte de configuration.</param>
      <param name="hostInitParams" vsli:raw="An array of configuration host parameters.">Tableau des paramètres de l'hôte de configuration.</param>
    </member>
    <member name="P:System.Configuration.Internal.IConfigSystem.Root">
      <summary vsli:raw="Gets the root of the configuration hierarchy.">Obtient la racine de la hiérarchie de configuration.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigRoot&quot; /&gt; object.">Objet <see cref="T:System.Configuration.Internal.IInternalConfigRoot" />.</returns>
    </member>
    <member name="T:System.Configuration.Internal.IConfigurationManagerHelper">
      <summary vsli:raw="Defines an interface used by .NET to support configuration management.">Définit une interface utilisée par le .NET Framework pour prendre en charge la gestion de la configuration.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IConfigurationManagerHelper.EnsureNetConfigLoaded">
      <summary vsli:raw="Ensures that the networking configuration is loaded.">Garantit que la configuration réseau est chargée.</summary>
    </member>
    <member name="T:System.Configuration.Internal.IConfigurationManagerInternal">
      <summary vsli:raw="Defines an interface used by .NET to initialize configuration properties.">Définit une interface utilisée par le .NET Framework pour initialiser des propriétés de configuration.</summary>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ApplicationConfigUri">
      <summary vsli:raw="Gets the configuration file name related to the application path.">Obtient le nom de fichier de configuration associé au chemin d'accès de l'application.</summary>
      <returns vsli:raw="A string value representing a configuration file name.">Valeur de chaîne représentant un nom de fichier de configuration.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeLocalConfigDirectory">
      <summary vsli:raw="Gets the local configuration directory of the application based on the entry assembly.">Obtient le répertoire de configuration local de l'application en fonction de l'assembly d'entrée.</summary>
      <returns vsli:raw="A string representing the local configuration directory.">Chaîne représentant le répertoire de configuration local.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeLocalConfigPath">
      <summary vsli:raw="Gets the local configuration path of the application based on the entry assembly.">Obtient le chemin d'accès de configuration local de l'application en fonction de l'assembly d'entrée.</summary>
      <returns vsli:raw="A string value representing the local configuration path of the application.">Valeur de chaîne représentant le chemin d'accès de configuration local de l'application.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeProductName">
      <summary vsli:raw="Gets the product name of the application based on the entry assembly.">Obtient le nom de produit de l'application en fonction de l'assembly d'entrée.</summary>
      <returns vsli:raw="A string value representing the product name of the application.">Valeur de chaîne représentant le nom de produit de l'application.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeProductVersion">
      <summary vsli:raw="Gets the product version of the application based on the entry assembly.">Obtient la version de produit de l'application en fonction de l'assembly d'entrée.</summary>
      <returns vsli:raw="A string value representing the product version of the application.">Valeur de chaîne représentant la version de produit de l'application.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeRoamingConfigDirectory">
      <summary vsli:raw="Gets the roaming configuration directory of the application based on the entry assembly.">Obtient le répertoire de configuration itinérant de l'application en fonction de l'assembly d'entrée.</summary>
      <returns vsli:raw="A string value representing the roaming configuration directory of the application.">Valeur de chaîne représentant le répertoire de configuration itinérant de l'application.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeRoamingConfigPath">
      <summary vsli:raw="Gets the roaming user's configuration path based on the application's entry assembly.">Obtient le chemin d'accès de configuration de l'utilisateur itinérant basé sur l'assembly d'entrée de l'application.</summary>
      <returns vsli:raw="A string value representing the roaming user's configuration path.">Valeur de chaîne représentant le chemin d'accès de configuration de l'utilisateur itinérant.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.MachineConfigPath">
      <summary vsli:raw="Gets the configuration path for the Machine.config file.">Obtient le chemin d'accès de configuration pour le fichier Machine.config.</summary>
      <returns vsli:raw="A string value representing the path of the Machine.config file.">Valeur de chaîne représentant le chemin d'accès au fichier Machine.config.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.SetConfigurationSystemInProgress">
      <summary vsli:raw="Gets a value representing the configuration system's status.">Obtient une valeur représentant l'état du système de configuration.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration system is in the process of being initialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le système de configuration est en cours d'initialisation ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.SupportsUserConfig">
      <summary vsli:raw="Gets a value that specifies whether user configuration settings are supported.">Obtient une valeur qui spécifie si les paramètres de configuration utilisateur sont pris en charge.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration system supports user configuration settings; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le système de configuration prend en charge des paramètres de configuration utilisateur ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.UserConfigFilename">
      <summary vsli:raw="Gets the name of the file used to store user configuration settings.">Obtient le nom du fichier utilisé pour stocker des paramètres de configuration utilisateur.</summary>
      <returns vsli:raw="A string specifying the name of the file used to store user configuration.">Chaîne spécifiant le nom du fichier utilisée pour stocker la configuration utilisateur.</returns>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigClientHost">
      <summary vsli:raw="Defines interfaces that allow the internal .NET infrastructure to customize configuration.">Définit les interfaces qui permettent à l'infrastructure .NET Framework interne de personnaliser la configuration.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigClientHost.GetExeConfigPath">
      <summary vsli:raw="Returns the path to the application configuration file.">Retourne le chemin d'accès au fichier de configuration de l'application.</summary>
      <returns vsli:raw="A string representing the path to the application configuration file.">Chaîne représentant le chemin d'accès au fichier de configuration de l'application.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigClientHost.GetLocalUserConfigPath">
      <summary vsli:raw="Returns a string representing the path to the known local user configuration file.">Retourne une chaîne représentant le chemin d'accès au fichier de configuration de l'utilisateur local connu.</summary>
      <returns vsli:raw="A string representing the path to the known local user configuration file.">Chaîne représentant le chemin d'accès au fichier de configuration de l'utilisateur local connu.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigClientHost.GetRoamingUserConfigPath">
      <summary vsli:raw="Returns a string representing the path to the known roaming user configuration file.">Retourne une chaîne représentant le chemin d'accès au fichier de configuration de l'utilisateur itinérant connu.</summary>
      <returns vsli:raw="A string representing the path to the known roaming user configuration file.">Chaîne représentant le chemin d'accès au fichier de configuration de l'utilisateur itinérant connu.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigClientHost.IsExeConfig(System.String)">
      <summary vsli:raw="Returns a value indicating whether a configuration file path is the same as a currently known application configuration file path.">Retourne une valeur indiquant si un chemin d'accès au fichier de configuration est identique au chemin d'accès au fichier de configuration d'une application connue.</summary>
      <param name="configPath" vsli:raw="A string representing the path to the application configuration file.">Chaîne représentant le chemin d'accès au fichier de configuration de l'application.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a string representing a configuration path is the same as a path to the application configuration file; &lt;see langword=&quot;false&quot; /&gt; if a string representing a configuration path is not the same as a path to the application configuration file.">
        <see langword="true" /> si une chaîne représentant un chemin d'accès de configuration est identique au chemin d'accès au fichier de configuration de l'application ; <see langword="false" /> si une chaîne représentant un chemin d'accès de configuration n'est pas identique au chemin d'accès au fichier de configuration de l'application.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigClientHost.IsLocalUserConfig(System.String)">
      <summary vsli:raw="Returns a value indicating whether a configuration file path is the same as the configuration file path for the currently known local user.">Retourne une valeur indiquant si un chemin d'accès au fichier de configuration est identique au chemin d'accès au fichier de configuration pour l'utilisateur local actuellement connu.</summary>
      <param name="configPath" vsli:raw="A string representing the path to the application configuration file.">Chaîne représentant le chemin d'accès au fichier de configuration de l'application.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a string representing a configuration path is the same as a path to a known local user configuration file; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si une chaîne représentant un chemin d'accès de configuration est identique au chemin d'accès au fichier de configuration d'un utilisateur local connu ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigClientHost.IsRoamingUserConfig(System.String)">
      <summary vsli:raw="Returns a value indicating whether a configuration file path is the same as the configuration file path for the currently known roaming user.">Retourne une valeur indiquant si un chemin d'accès au fichier de configuration est identique au chemin d'accès au fichier de configuration pour l'utilisateur distant actuellement connu.</summary>
      <param name="configPath" vsli:raw="A string representing the path to an application configuration file.">Chaîne représentant le chemin d'accès à un fichier de configuration de l'application.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a string representing a configuration path is the same as a path to a known roaming user configuration file; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si une chaîne représentant un chemin d'accès de configuration est identique au chemin d'accès au fichier de configuration d'un utilisateur distant connu ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigConfigurationFactory">
      <summary vsli:raw="Defines the interfaces used by the internal design time API to create a &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">Définit les interfaces utilisées par l'API au moment du design interne pour créer un objet <see cref="T:System.Configuration.Configuration" />.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigConfigurationFactory.Create(System.Type,System.Object[])">
      <summary vsli:raw="Creates and initializes a &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">Crée et initialise un objet <see cref="T:System.Configuration.Configuration" />.</summary>
      <param name="typeConfigHost" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object to be created.">
        <see cref="T:System.Type" /> de l'objet <see cref="T:System.Configuration.Configuration" /> à créer.</param>
      <param name="hostInitConfigurationParams" vsli:raw="A parameter array of &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the parameters to be applied to the created &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">Tableau de paramètres de <see cref="T:System.Object" /> qui contient les paramètres à appliquer à l'objet <see cref="T:System.Configuration.Configuration" /> créé.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">Objet <see cref="T:System.Configuration.Configuration" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigConfigurationFactory.NormalizeLocationSubPath(System.String,System.Configuration.Internal.IConfigErrorInfo)">
      <summary vsli:raw="Normalizes a location subpath of a path to a configuration file.">Normalise un sous-chemin d'emplacement d'un chemin d'accès à un fichier de configuration.</summary>
      <param name="subPath" vsli:raw="A string representing the path to the configuration file.">Chaîne représentant le chemin d'accès au fichier de configuration.</param>
      <param name="errorInfo" vsli:raw="An instance of &lt;see cref=&quot;T:System.Configuration.Internal.IConfigErrorInfo&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">Instance de <see cref="T:System.Configuration.Internal.IConfigErrorInfo" /> ou <see langword="null" />.</param>
      <returns vsli:raw="A normalized subpath string.">Chaîne de sous-chemin normalisée.</returns>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigHost">
      <summary vsli:raw="Defines interfaces used by internal .NET structures to initialize application configuration properties.">Définit les interfaces utilisées par les structures .NET internes pour initialiser les propriétés de configuration de l'application.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.CreateConfigurationContext(System.String,System.String)">
      <summary vsli:raw="Creates and returns a context object for a &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; of an application configuration.">Crée et retourne un objet de contexte pour un <see cref="T:System.Configuration.ConfigurationElement" /> d'une configuration de l'application.</summary>
      <param name="configPath" vsli:raw="A string representing the path of the application configuration file.">Chaîne représentant le chemin d'accès au fichier de configuration de l'application.</param>
      <param name="locationSubPath" vsli:raw="A string representing a subpath location of the configuration element.">Chaîne représentant un emplacement de sous-chemin de l'élément de configuration.</param>
      <returns vsli:raw="A context object for a &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object of an application configuration.">Objet de contexte pour un objet <see cref="T:System.Configuration.ConfigurationElement" /> d'une configuration de l'application.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.CreateDeprecatedConfigContext(System.String)">
      <summary vsli:raw="Creates and returns a deprecated context object of the application configuration.">Crée et retourne un objet de contexte déconseillé de la configuration de l'application.</summary>
      <param name="configPath" vsli:raw="A string representing a path to an application configuration file.">Chaîne représentant un chemin d'accès à un fichier de configuration de l'application.</param>
      <returns vsli:raw="A deprecated context object of the application configuration.">Objet de contexte déconseillé de la configuration de l'application.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.DecryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)">
      <summary vsli:raw="Decrypts an encrypted configuration section and returns it as a string.">Déchiffre une section de configuration chiffrée et la retourne en tant que chaîne.</summary>
      <param name="encryptedXml" vsli:raw="An encrypted XML string representing a configuration section.">Chaîne XML chiffrée représentant une section de configuration.</param>
      <param name="protectionProvider" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationProvider&quot; /&gt; object.">Objet <see cref="T:System.Configuration.ProtectedConfigurationProvider" />.</param>
      <param name="protectedConfigSection" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationSection&quot; /&gt; object.">Objet <see cref="T:System.Configuration.ProtectedConfigurationSection" />.</param>
      <returns vsli:raw="A decrypted configuration section as a string.">Section de configuration déchiffrée en tant que chaîne.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.DeleteStream(System.String)">
      <summary vsli:raw="Deletes the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the application configuration file.">Supprime l'objet <see cref="T:System.IO.Stream" /> effectuant des tâches d'E/S sur le fichier de configuration de l'application.</summary>
      <param name="streamName" vsli:raw="A string representing the name of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">Chaîne représentant le nom de l'objet <see cref="T:System.IO.Stream" /> qui effectue les tâches d'E/S sur le fichier de configuration.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.EncryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)">
      <summary vsli:raw="Encrypts a configuration section and returns it as a string.">Chiffre une section de configuration et la retourne en tant que chaîne.</summary>
      <param name="clearTextXml" vsli:raw="An XML string representing a configuration section to encrypt.">Chaîne XML représentant une section de configuration à chiffrer.</param>
      <param name="protectionProvider" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationProvider&quot; /&gt; object.">Objet <see cref="T:System.Configuration.ProtectedConfigurationProvider" />.</param>
      <param name="protectedConfigSection" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationSection&quot; /&gt; object.">Objet <see cref="T:System.Configuration.ProtectedConfigurationSection" />.</param>
      <returns vsli:raw="An encrypted configuration section represented as a string.">Section de configuration chiffrée représentée en tant que chaîne.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetConfigPathFromLocationSubPath(System.String,System.String)">
      <summary vsli:raw="Returns the complete path to an application configuration file based on the location subpath.">Retourne le chemin d'accès complet à un fichier de configuration de l'application basé sur le sous-chemin d'emplacement.</summary>
      <param name="configPath" vsli:raw="A string representing the path of the application configuration file.">Chaîne représentant le chemin d'accès au fichier de configuration de l'application.</param>
      <param name="locationSubPath" vsli:raw="The subpath location of the configuration file.">Emplacement du sous-chemin du fichier de configuration.</param>
      <returns vsli:raw="A string representing the complete path to an application configuration file.">Chaîne représentant le chemin d'accès complet à un fichier de configuration de l'application.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetConfigType(System.String,System.Boolean)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Type&quot; /&gt; object representing the type of the configuration object.">Retourne un objet <see cref="T:System.Type" /> représentant le type de l'objet de configuration.</summary>
      <param name="typeName" vsli:raw="The type name.">Nom de type</param>
      <param name="throwOnError" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to throw an exception if an error occurs; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour lever une exception si une erreur se produit ; sinon, <see langword="false" /></param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; object representing the type of the configuration object.">Objet <see cref="T:System.Type" /> représentant le type de l'objet de configuration.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetConfigTypeName(System.Type)">
      <summary vsli:raw="Returns a string representing a type name from the &lt;see cref=&quot;T:System.Type&quot; /&gt; object representing the type of the configuration.">Retourne une chaîne représentant un nom de type de l'objet <see cref="T:System.Type" /> représentant le type de la configuration.</summary>
      <param name="t" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; object.">Objet <see cref="T:System.Type" />.</param>
      <returns vsli:raw="A string representing the type name from a &lt;see cref=&quot;T:System.Type&quot; /&gt; object representing the type of the configuration.">Chaîne représentant le nom de type d'un objet <see cref="T:System.Type" /> représentant le type de la configuration.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetRestrictedPermissions(System.Configuration.Internal.IInternalConfigRecord,System.Security.PermissionSet@,System.Boolean@)">
      <summary vsli:raw="Associates the configuration with a &lt;see cref=&quot;T:System.Security.PermissionSet&quot; /&gt; object.">Associe la configuration à un objet <see cref="T:System.Security.PermissionSet" />.</summary>
      <param name="configRecord" vsli:raw="An &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigRecord&quot; /&gt; object.">Objet <see cref="T:System.Configuration.Internal.IInternalConfigRecord" />.</param>
      <param name="permissionSet" vsli:raw="The &lt;see cref=&quot;T:System.Security.PermissionSet&quot; /&gt; object to associate with the configuration.">Objet <see cref="T:System.Security.PermissionSet" /> à associer à la configuration.</param>
      <param name="isHostReady" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate the configuration host is has completed building associated permissions; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour indiquer que l'hôte de configuration a terminé de générer des autorisations associées ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetStreamName(System.String)">
      <summary vsli:raw="Returns a string representing the configuration file name associated with the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">Retourne une chaîne représentant le nom du fichier de configuration associé à l'objet <see cref="T:System.IO.Stream" /> effectuant des tâches d'E/S sur le fichier de configuration.</summary>
      <param name="configPath" vsli:raw="A string representing the path of the application configuration file.">Chaîne représentant le chemin d'accès au fichier de configuration de l'application.</param>
      <returns vsli:raw="A string representing the configuration file name associated with the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; I/O tasks on the configuration file.">Chaîne représentant le nom de fichier de configuration associé aux tâches d'E/S <see cref="T:System.IO.Stream" /> sur le fichier de configuration.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetStreamNameForConfigSource(System.String,System.String)">
      <summary vsli:raw="Returns a string representing the configuration file name associated with the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a remote configuration file.">Retourne une chaîne représentant le nom du fichier de configuration associé à l'objet <see cref="T:System.IO.Stream" /> effectuant des tâches d'E/S sur le fichier de configuration distant.</summary>
      <param name="streamName" vsli:raw="A string representing the configuration file name associated with the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">Chaîne représentant le nom du fichier de configuration associé à l'objet <see cref="T:System.IO.Stream" /> effectuant des tâches d'E/S sur le fichier de configuration.</param>
      <param name="configSource" vsli:raw="A string representing a path to a remote configuration file.">Chaîne représentant le chemin d'accès à un fichier de configuration distant.</param>
      <returns vsli:raw="A string representing the configuration file name associated with the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">Chaîne représentant le nom du fichier de configuration associé à l'objet <see cref="T:System.IO.Stream" /> effectuant des tâches d'E/S sur le fichier de configuration.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetStreamVersion(System.String)">
      <summary vsli:raw="Returns the version of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object associated with configuration file.">Retourne la version de l'objet <see cref="T:System.IO.Stream" /> associé au fichier de configuration.</summary>
      <param name="streamName" vsli:raw="A string representing the name of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">Chaîne représentant le nom de l'objet <see cref="T:System.IO.Stream" /> qui effectue les tâches d'E/S sur le fichier de configuration.</param>
      <returns vsli:raw="The version of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object associated with configuration file.">Version de l'objet <see cref="T:System.IO.Stream" /> associé au fichier de configuration.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.Impersonate">
      <summary vsli:raw="Instructs the host to impersonate and returns an &lt;see cref=&quot;T:System.IDisposable&quot; /&gt; object required by the internal .NET structure.">Commande à l'hôte d'emprunter l'identité et retourne un objet <see cref="T:System.IDisposable" /> requis par la structure .NET interne.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IDisposable&quot; /&gt; value.">Valeur <see cref="T:System.IDisposable" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.Init(System.Configuration.Internal.IInternalConfigRoot,System.Object[])">
      <summary vsli:raw="Initializes a configuration host.">Initialise un hôte de configuration.</summary>
      <param name="configRoot" vsli:raw="The configuration root object.">Objet racine de configuration.</param>
      <param name="hostInitParams" vsli:raw="The parameter object containing the values used for initializing the configuration host.">Objet paramètre contenant les valeurs utilisées pour initialiser l'hôte de configuration.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.InitForConfiguration(System.String@,System.String@,System.String@,System.Configuration.Internal.IInternalConfigRoot,System.Object[])">
      <summary vsli:raw="Initializes a configuration object.">Initialise un objet de configuration.</summary>
      <param name="locationSubPath" vsli:raw="The subpath location of the configuration file.">Emplacement du sous-chemin du fichier de configuration.</param>
      <param name="configPath" vsli:raw="A string representing the path of the application configuration file.">Chaîne représentant le chemin d'accès au fichier de configuration de l'application.</param>
      <param name="locationConfigPath" vsli:raw="A string representing the location of a configuration path.">Chaîne représentant l'emplacement d'un chemin d'accès de configuration.</param>
      <param name="configRoot" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigRoot&quot; /&gt; object.">Objet <see cref="T:System.Configuration.Internal.IInternalConfigRoot" />.</param>
      <param name="hostInitConfigurationParams" vsli:raw="The parameter object containing the values used for initializing the configuration host.">Objet paramètre contenant les valeurs utilisées pour initialiser l'hôte de configuration.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsAboveApplication(System.String)">
      <summary vsli:raw="Returns a value indicating whether the configuration file is located at a higher level in the configuration hierarchy than the application configuration.">Retourne une valeur indiquant si le fichier de configuration se trouve à un niveau plus élevé que la configuration de l'application dans la hiérarchie de configuration.</summary>
      <param name="configPath" vsli:raw="A string representing the path of the application configuration file.">Chaîne représentant le chemin d'accès au fichier de configuration de l'application.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; the configuration file is located at a higher level in the configuration hierarchy than the application configuration; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le fichier de configuration se trouve à un niveau plus élevé que la configuration de l'application dans la hiérarchie de configuration ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsConfigRecordRequired(System.String)">
      <summary vsli:raw="Returns a value indicating whether a child record is required for a child configuration path.">Retourne une valeur indiquant si un enregistrement enfant est requis pour un chemin d'accès de configuration enfant.</summary>
      <param name="configPath" vsli:raw="A string representing the path of the application configuration file.">Chaîne représentant le chemin d'accès au fichier de configuration de l'application.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if child record is required for a child configuration path; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'enregistrement enfant est requis pour un chemin d'accès de configuration enfant ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition)">
      <summary vsli:raw="Determines if a different &lt;see cref=&quot;T:System.Type&quot; /&gt; definition is allowable for an application configuration object.">Détermine si une définition de <see cref="T:System.Type" /> différente est autorisée pour un objet de configuration de l'application.</summary>
      <param name="configPath" vsli:raw="A string representing the path of the application configuration file.">Chaîne représentant le chemin d'accès au fichier de configuration de l'application.</param>
      <param name="allowDefinition" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConfigurationAllowDefinition&quot; /&gt; object.">Objet <see cref="T:System.Configuration.ConfigurationAllowDefinition" />.</param>
      <param name="allowExeDefinition" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConfigurationAllowExeDefinition&quot; /&gt; object.">Objet <see cref="T:System.Configuration.ConfigurationAllowExeDefinition" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a different &lt;see cref=&quot;T:System.Type&quot; /&gt; definition is allowable for an application configuration object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si une définition de <see cref="T:System.Type" /> différente est autorisée pour un objet de configuration de l'application ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsFile(System.String)">
      <summary vsli:raw="Returns a value indicating whether the file path used by a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object to read a configuration file is a valid path.">Retourne une valeur indiquant si le chemin d'accès utilisé par un objet <see cref="T:System.IO.Stream" /> pour lire un fichier de configuration est un chemin d'accès valide.</summary>
      <param name="streamName" vsli:raw="A string representing the name of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">Chaîne représentant le nom de l'objet <see cref="T:System.IO.Stream" /> qui effectue les tâches d'E/S sur le fichier de configuration.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the path used by a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object to read a configuration file is a valid path; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le chemin d'accès utilisé par un objet <see cref="T:System.IO.Stream" /> pour lire un fichier de configuration est un chemin d'accès valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsFullTrustSectionWithoutAptcaAllowed(System.Configuration.Internal.IInternalConfigRecord)">
      <summary vsli:raw="Returns a value indicating whether a configuration section requires a fully trusted code access security level and does not allow the &lt;see cref=&quot;T:System.Security.AllowPartiallyTrustedCallersAttribute&quot; /&gt; attribute to disable implicit link demands.">Retourne une valeur indiquant si une section de configuration requiert un niveau de sécurité d'accès du code d'un niveau de confiance suffisant et ne permet pas à l'attribut <see cref="T:System.Security.AllowPartiallyTrustedCallersAttribute" /> de désactiver des demandes de liaison implicites.</summary>
      <param name="configRecord" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigRecord&quot; /&gt; object.">Objet <see cref="T:System.Configuration.Internal.IInternalConfigRecord" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration section requires a fully trusted code access security level and does not allow the &lt;see cref=&quot;T:System.Security.AllowPartiallyTrustedCallersAttribute&quot; /&gt; attribute to disable implicit link demands; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la section de configuration requiert un niveau de sécurité d'accès du code d'un niveau de confiance suffisant et ne permet pas à l'attribut <see cref="T:System.Security.AllowPartiallyTrustedCallersAttribute" /> de désactiver des demandes de liaison implicites ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsInitDelayed(System.Configuration.Internal.IInternalConfigRecord)">
      <summary vsli:raw="Returns a value indicating whether the initialization of a configuration object is considered delayed.">Retourne une valeur indiquant si l'initialisation d'un objet de configuration est considérée comme retardée.</summary>
      <param name="configRecord" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigRecord&quot; /&gt; object.">Objet <see cref="T:System.Configuration.Internal.IInternalConfigRecord" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the initialization of a configuration object is considered delayed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'initialisation d'un objet de configuration est considérée comme retardée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsLocationApplicable(System.String)">
      <summary vsli:raw="Returns a value indicating whether the configuration object supports a location tag.">Retourne une valeur indiquant si l'objet de configuration prend en charge une balise d'emplacement.</summary>
      <param name="configPath" vsli:raw="A string representing the path of the application configuration file.">Chaîne représentant le chemin d'accès au fichier de configuration de l'application.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration object supports a location tag; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet de configuration prend en charge une balise d'emplacement ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigHost.IsRemote">
      <summary vsli:raw="Returns a value indicating whether the configuration is remote.">Retourne une valeur indiquant si la configuration est distante.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration is remote; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la configuration est distante ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsSecondaryRoot(System.String)">
      <summary vsli:raw="Returns a value indicating whether a configuration path is to a configuration node whose contents should be treated as a root.">Retourne une valeur indiquant si un chemin d'accès de configuration pointe vers un nœud de configuration dont le contenu doit être traité en tant que racine.</summary>
      <param name="configPath" vsli:raw="A string representing the path of the application configuration file.">Chaîne représentant le chemin d'accès au fichier de configuration de l'application.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration path is to a configuration node whose contents should be treated as a root; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le chemin d'accès de configuration pointe vers un nœud de configuration dont le contenu doit être traité en tant que racine ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsTrustedConfigPath(System.String)">
      <summary vsli:raw="Returns a value indicating whether the configuration path is trusted.">Retourne une valeur indiquant si le chemin d'accès de configuration est approuvé.</summary>
      <param name="configPath" vsli:raw="A string representing the path of the application configuration file.">Chaîne représentant le chemin d'accès au fichier de configuration de l'application.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration path is trusted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le chemin d'accès de configuration est approuvé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.OpenStreamForRead(System.String)">
      <summary vsli:raw="Opens a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; to read a configuration file.">Ouvre un <see cref="T:System.IO.Stream" /> pour lire un fichier de configuration.</summary>
      <param name="streamName" vsli:raw="A string representing the name of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">Chaîne représentant le nom de l'objet <see cref="T:System.IO.Stream" /> qui effectue les tâches d'E/S sur le fichier de configuration.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object.">Objet <see cref="T:System.IO.Stream" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.OpenStreamForRead(System.String,System.Boolean)">
      <summary vsli:raw="Opens a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object to read a configuration file.">Ouvre un objet <see cref="T:System.IO.Stream" /> pour lire un fichier de configuration.</summary>
      <param name="streamName" vsli:raw="A string representing the name of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">Chaîne représentant le nom de l'objet <see cref="T:System.IO.Stream" /> qui effectue les tâches d'E/S sur le fichier de configuration.</param>
      <param name="assertPermissions" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to assert permissions; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour déclarer des autorisations ; sinon, <see langword="false" />.</param>
      <returns vsli:raw="The object specified by &lt;paramref name=&quot;streamName&quot; /&gt;.">Objet spécifié par <paramref name="streamName" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.OpenStreamForWrite(System.String,System.String,System.Object@)">
      <summary vsli:raw="Opens a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object for writing to a configuration file or for writing to a temporary file used to build a configuration file. Allows a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object to be designated as a template for copying file attributes.">Ouvre un objet <see cref="T:System.IO.Stream" /> afin d'écrire dans un fichier de configuration ou dans un fichier temporaire utilisé pour générer un fichier de configuration. Permet de désigner un objet <see cref="T:System.IO.Stream" /> comme modèle pour copier des attributs de fichier.</summary>
      <param name="streamName" vsli:raw="A string representing the name of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">Chaîne représentant le nom de l'objet <see cref="T:System.IO.Stream" /> qui effectue les tâches d'E/S sur le fichier de configuration.</param>
      <param name="templateStreamName" vsli:raw="The name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object from which file attributes are to be copied as a template.">Nom d'un objet <see cref="T:System.IO.Stream" /> dont les attributs de fichier doivent être copiés comme modèle.</param>
      <param name="writeContext" vsli:raw="The write context of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object.">Contexte d'écriture de l'objet <see cref="T:System.IO.Stream" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object.">Objet <see cref="T:System.IO.Stream" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.OpenStreamForWrite(System.String,System.String,System.Object@,System.Boolean)">
      <summary vsli:raw="Opens a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object for writing to a configuration file. Allows a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object to be designated as a template for copying file attributes.">Ouvre un objet <see cref="T:System.IO.Stream" /> pour écrire dans un fichier de configuration. Permet de désigner un objet <see cref="T:System.IO.Stream" /> comme modèle pour copier des attributs de fichier.</summary>
      <param name="streamName" vsli:raw="A string representing the name of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">Chaîne représentant le nom de l'objet <see cref="T:System.IO.Stream" /> qui effectue les tâches d'E/S sur le fichier de configuration.</param>
      <param name="templateStreamName" vsli:raw="The name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; from which file attributes are to be copied as a template.">Nom d'un <see cref="T:System.IO.Stream" /> dont les attributs de fichier doivent être copiés comme modèle.</param>
      <param name="writeContext" vsli:raw="The write context of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">Contexte d'écriture de l'objet <see cref="T:System.IO.Stream" /> qui effectue les tâches d'E/S sur le fichier de configuration.</param>
      <param name="assertPermissions" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to assert permissions; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour déclarer des autorisations ; sinon, <see langword="false" />.</param>
      <returns vsli:raw="The object specified by &lt;paramref name=&quot;streamName&quot; /&gt;.">Objet spécifié par <paramref name="streamName" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.PrefetchAll(System.String,System.String)">
      <summary vsli:raw="Returns a value that indicates whether the entire configuration file could be read by a designated &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object.">Retourne une valeur qui indique si le fichier de configuration peut être entièrement lu par un objet <see cref="T:System.IO.Stream" /> désigné.</summary>
      <param name="configPath" vsli:raw="A string representing the path of the application configuration file.">Chaîne représentant le chemin d'accès au fichier de configuration de l'application.</param>
      <param name="streamName" vsli:raw="A string representing the name of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">Chaîne représentant le nom de l'objet <see cref="T:System.IO.Stream" /> qui effectue les tâches d'E/S sur le fichier de configuration.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the entire configuration file could be read by the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object designated by &lt;paramref name=&quot;streamName&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le fichier de configuration peut être entièrement lu par l'objet <see cref="T:System.IO.Stream" /> désigné par <paramref name="streamName" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.PrefetchSection(System.String,System.String)">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigHost&quot; /&gt; object to read a designated section of its associated configuration file.">Commande l'objet <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> de lire une section désignée de son fichier de configuration associé.</summary>
      <param name="sectionGroupName" vsli:raw="A string representing the identifying name of a configuration file section group.">Chaîne représentant le nom d'identification d'un groupe de sections du fichier de configuration.</param>
      <param name="sectionName" vsli:raw="A string representing the identifying name of a configuration file section.">Chaîne représentant le nom d'identification d'une section du fichier de configuration.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a section of the configuration file designated by &lt;paramref name=&quot;sectionGroupName&quot; /&gt; and &lt;paramref name=&quot;sectionName&quot; /&gt; could be read by a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si une section du fichier de configuration désignée par <paramref name="sectionGroupName" /> et <paramref name="sectionName" /> peut être lue par un objet <see cref="T:System.IO.Stream" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.RequireCompleteInit(System.Configuration.Internal.IInternalConfigRecord)">
      <summary vsli:raw="Indicates a new configuration record requires a complete initialization.">Indique qu'un nouvel enregistrement de configuration requiert une initialisation complète.</summary>
      <param name="configRecord" vsli:raw="An &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigRecord&quot; /&gt; object.">Objet <see cref="T:System.Configuration.Internal.IInternalConfigRecord" />.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.StartMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigHost&quot; /&gt; object to monitor an associated &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object for changes in a configuration file.">Commande l'objet <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> de surveiller un objet <see cref="T:System.IO.Stream" /> associé en vue de détecter des modifications dans un fichier de configuration.</summary>
      <param name="streamName" vsli:raw="A string representing the name of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">Chaîne représentant le nom de l'objet <see cref="T:System.IO.Stream" /> qui effectue les tâches d'E/S sur le fichier de configuration.</param>
      <param name="callback" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.Internal.StreamChangeCallback&quot; /&gt; object to receive the returned data representing the changes in the configuration file.">Objet <see cref="T:System.Configuration.Internal.StreamChangeCallback" /> devant recevoir les données retournées représentant les modifications dans le fichier de configuration.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; containing changed configuration settings.">
        <see cref="T:System.Object" /> contenant les paramètres de configuration modifiés.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.StopMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)">
      <summary vsli:raw="Instructs the  &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigHost&quot; /&gt; object to stop monitoring an associated &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object for changes in a configuration file.">Demande à l’objet <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> d’arrêter de surveiller un objet <see cref="T:System.IO.Stream" /> associé en vue de détecter des changements dans un fichier de configuration.</summary>
      <param name="streamName" vsli:raw="A string representing the name of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">Chaîne représentant le nom de l'objet <see cref="T:System.IO.Stream" /> qui effectue les tâches d'E/S sur le fichier de configuration.</param>
      <param name="callback" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.Internal.StreamChangeCallback&quot; /&gt; object.">Objet <see cref="T:System.Configuration.Internal.StreamChangeCallback" />.</param>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigHost.SupportsChangeNotifications">
      <summary vsli:raw="Returns a value indicating whether the host configuration supports change notification.">Retourne une valeur indiquant si la configuration d'hôte prend en charge la notification de modifications.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration supports change notification; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la configuration prend en charge la notification de modifications ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigHost.SupportsLocation">
      <summary vsli:raw="Returns a value indicating whether the host configuration supports location tags.">Retourne une valeur indiquant si la configuration d'hôte prend en charge les balises d'emplacement.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration supports location tags; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la configuration prend en charge les balises d'emplacement ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigHost.SupportsPath">
      <summary vsli:raw="Returns a value indicating whether the host configuration supports path tags.">Retourne une valeur indiquant si la configuration d'hôte prend en charge les balises de chemin d'accès.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration supports path tags; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la configuration prend en charge les balises de chemin d'accès ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigHost.SupportsRefresh">
      <summary vsli:raw="Returns a value indicating whether the host configuration supports configuration refresh.">Retourne une valeur indiquant si la configuration d'hôte prend en charge l'actualisation de la configuration.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration supports configuration refresh; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la configuration prend en charge l'actualisation de la configuration ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.VerifyDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition,System.Configuration.Internal.IConfigErrorInfo)">
      <summary vsli:raw="Verifies that a configuration definition is allowed for a configuration record.">Vérifie qu'une définition de configuration est autorisée pour un enregistrement de configuration.</summary>
      <param name="configPath" vsli:raw="A string representing the path of the application configuration file.">Chaîne représentant le chemin d'accès au fichier de configuration de l'application.</param>
      <param name="allowDefinition" vsli:raw="A &lt;see cref=&quot;P:System.Configuration.SectionInformation.AllowDefinition&quot; /&gt; object.">Objet <see cref="P:System.Configuration.SectionInformation.AllowDefinition" />.</param>
      <param name="allowExeDefinition" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConfigurationAllowExeDefinition&quot; /&gt; object.">Objet <see cref="T:System.Configuration.ConfigurationAllowExeDefinition" />.</param>
      <param name="errorInfo" vsli:raw="An &lt;see cref=&quot;T:System.Configuration.Internal.IConfigErrorInfo&quot; /&gt; object.">Objet <see cref="T:System.Configuration.Internal.IConfigErrorInfo" />.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.WriteCompleted(System.String,System.Boolean,System.Object)">
      <summary vsli:raw="Indicates that all writing to the configuration file has completed.">Indique que les écritures dans le fichier de configuration sont achevées.</summary>
      <param name="streamName" vsli:raw="A string representing the name of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">Chaîne représentant le nom de l'objet <see cref="T:System.IO.Stream" /> qui effectue les tâches d'E/S sur le fichier de configuration.</param>
      <param name="success" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the write to the configuration file was completed successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'écriture dans le fichier de configuration a été effectuée avec succès ; sinon, <see langword="false" />.</param>
      <param name="writeContext" vsli:raw="The write context of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">Contexte d'écriture de l'objet <see cref="T:System.IO.Stream" /> qui effectue les tâches d'E/S sur le fichier de configuration.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.WriteCompleted(System.String,System.Boolean,System.Object,System.Boolean)">
      <summary vsli:raw="Indicates that all writing to the configuration file has completed and specifies whether permissions should be asserted.">Indique que les écritures dans le fichier de configuration sont achevées et spécifie si des autorisations doivent être déclarées.</summary>
      <param name="streamName" vsli:raw="A string representing the name of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">Chaîne représentant le nom de l'objet <see cref="T:System.IO.Stream" /> qui effectue les tâches d'E/S sur le fichier de configuration.</param>
      <param name="success" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate the write was completed successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour indiquer que l'écriture a été correctement effectuée ; sinon, <see langword="false" />.</param>
      <param name="writeContext" vsli:raw="The write context of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">Contexte d'écriture de l'objet <see cref="T:System.IO.Stream" /> qui effectue les tâches d'E/S sur le fichier de configuration.</param>
      <param name="assertPermissions" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to assert permissions; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour déclarer des autorisations ; sinon, <see langword="false" />.</param>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigRecord">
      <summary vsli:raw="Defines interfaces used by internal .NET structures to support creation of new configuration records.">Définit les interfaces utilisées par les structures .NET internes pour prendre en charge la création de nouveaux enregistrements de configuration.</summary>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigRecord.ConfigPath">
      <summary vsli:raw="Gets a string representing a configuration file path.">Obtient une chaîne représentant un chemin d'accès au fichier de configuration.</summary>
      <returns vsli:raw="A string representing a configuration file path.">Chaîne représentant un chemin d'accès au fichier de configuration.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRecord.GetLkgSection(System.String)">
      <summary vsli:raw="Returns an object representing a section of a configuration from the last-known-good (LKG) configuration.">Retourne un objet représentant une section d'une configuration de la dernière configuration correcte connue.</summary>
      <param name="configKey" vsli:raw="A string representing a key to a configuration section.">Chaîne représentant une clé d'une section de configuration.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; instance representing the section of the last-known-good configuration specified by &lt;paramref name=&quot;configKey&quot; /&gt;.">Instance de <see cref="T:System.Object" /> représentant la section de la dernière configuration correcte connue spécifiée par <paramref name="configKey" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRecord.GetSection(System.String)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Object&quot; /&gt; instance representing a section of a configuration file.">Retourne une instance de <see cref="T:System.Object" /> représentant une section d'un fichier de configuration.</summary>
      <param name="configKey" vsli:raw="A string representing a key to a configuration section.">Chaîne représentant une clé d'une section de configuration.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; instance representing a section of a configuration file.">Instance de <see cref="T:System.Object" /> représentant une section d'un fichier de configuration.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigRecord.HasInitErrors">
      <summary vsli:raw="Returns a value indicating whether an error occurred during initialization of a configuration object.">Retourne une valeur indiquant si une erreur s'est produite lors de l'initialisation d'un objet de configuration.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an error occurred during initialization of a configuration object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si une erreur s'est produite lors de l'initialisation d'un objet de configuration ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRecord.RefreshSection(System.String)">
      <summary vsli:raw="Causes a specified section of the configuration object to be reinitialized.">Entraîne la réinitialisation d'une section spécifiée de l'objet de configuration.</summary>
      <param name="configKey" vsli:raw="A string representing a key to a configuration section that is to be refreshed.">Chaîne représentant une clé d'une section de configuration devant être actualisée.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRecord.Remove">
      <summary vsli:raw="Removes a configuration record.">Supprime un enregistrement de configuration.</summary>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigRecord.StreamName">
      <summary vsli:raw="Returns the name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">Retourne le nom d'un objet <see cref="T:System.IO.Stream" /> effectuant des tâches d'E/S sur le fichier de configuration.</summary>
      <returns vsli:raw="A string representing the name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">Chaîne représentant le nom d'un objet <see cref="T:System.IO.Stream" /> qui effectue les tâches d'E/S sur le fichier de configuration.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRecord.ThrowIfInitErrors">
      <summary vsli:raw="Grants the configuration object the permission to throw an exception if an error occurs during initialization.">Accorde à l'objet de configuration l'autorisation de lever une exception si une erreur se produit pendant l'initialisation.</summary>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigRoot">
      <summary vsli:raw="Defines interfaces used by internal .NET structures to support a configuration root object.">Définit les interfaces utilisées par les structures .NET internes pour prendre en charge un objet racine de configuration.</summary>
    </member>
    <member name="E:System.Configuration.Internal.IInternalConfigRoot.ConfigChanged">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Configuration.Internal.IInternalConfigRoot.ConfigChanged&quot; /&gt; event of an &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigRoot&quot; /&gt; object.">Représente la méthode qui gère l'événement <see cref="E:System.Configuration.Internal.IInternalConfigRoot.ConfigChanged" /> d'un objet <see cref="T:System.Configuration.Internal.IInternalConfigRoot" />.</summary>
    </member>
    <member name="E:System.Configuration.Internal.IInternalConfigRoot.ConfigRemoved">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Configuration.Internal.IInternalConfigRoot.ConfigRemoved&quot; /&gt; event of a &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigRoot&quot; /&gt; object.">Représente la méthode qui gère l'événement <see cref="E:System.Configuration.Internal.IInternalConfigRoot.ConfigRemoved" /> d'un objet <see cref="T:System.Configuration.Internal.IInternalConfigRoot" />.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRoot.GetConfigRecord(System.String)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigRecord&quot; /&gt; object representing a configuration specified by a configuration path.">Retourne un objet <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> représentant une configuration spécifiée par un chemin d'accès de configuration.</summary>
      <param name="configPath" vsli:raw="A string representing the path to a configuration file.">Chaîne représentant le chemin d'accès à un fichier de configuration.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigRecord&quot; /&gt; object representing a configuration specified by &lt;paramref name=&quot;configPath&quot; /&gt;.">Objet <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> représentant une configuration spécifiée par <paramref name="configPath" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRoot.GetSection(System.String,System.String)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Object&quot; /&gt; representing the data in a section of a configuration file.">Retourne un <see cref="T:System.Object" /> représentant les données dans une section d'un fichier de configuration.</summary>
      <param name="section" vsli:raw="A string representing a section of a configuration file.">Chaîne représentant une section d'un fichier de configuration.</param>
      <param name="configPath" vsli:raw="A string representing the path to a configuration file.">Chaîne représentant le chemin d'accès à un fichier de configuration.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; representing the data in a section of a configuration file.">
        <see cref="T:System.Object" /> représentant les données dans une section d'un fichier de configuration.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRoot.GetUniqueConfigPath(System.String)">
      <summary vsli:raw="Returns a value representing the file path of the nearest configuration ancestor that has configuration data.">Retourne une valeur représentant le chemin d'accès du fichier de l'ancêtre de configuration le plus proche qui possède des données de configuration.</summary>
      <param name="configPath" vsli:raw="The path of configuration file.">Chemin d'accès du fichier de configuration.</param>
      <returns vsli:raw="A string representing the file path of the nearest configuration ancestor that has configuration data.">Chaîne représentant le chemin du fichier de l’ancêtre de configuration le plus proche qui a des données de configuration.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRoot.GetUniqueConfigRecord(System.String)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigRecord&quot; /&gt; object representing a unique configuration record for given configuration path.">Retourne un objet <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> représentant un enregistrement de configuration unique pour un chemin d'accès de configuration donné.</summary>
      <param name="configPath" vsli:raw="The path of the configuration file.">Chemin d'accès du fichier de configuration.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigRecord&quot; /&gt; object representing a unique configuration record for a given configuration path.">Objet <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> représentant un enregistrement de configuration unique pour un chemin d'accès de configuration donné.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRoot.Init(System.Configuration.Internal.IInternalConfigHost,System.Boolean)">
      <summary vsli:raw="Initializes a configuration object.">Initialise un objet de configuration.</summary>
      <param name="host" vsli:raw="An &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigHost&quot; /&gt; object.">Objet <see cref="T:System.Configuration.Internal.IInternalConfigHost" />.</param>
      <param name="isDesignTime" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if design time; &lt;see langword=&quot;false&quot; /&gt; if run time.">
        <see langword="true" /> au moment du design ; <see langword="false" /> au moment de l'exécution.</param>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigRoot.IsDesignTime">
      <summary vsli:raw="Returns a value indicating whether the configuration is a design-time configuration.">Retourne une valeur indiquant si la configuration est une configuration au moment du design.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration is a design-time configuration; &lt;see langword=&quot;false&quot; /&gt; if the configuration is not a design-time configuration.">
        <see langword="true" /> si la configuration est une configuration au moment du design ; <see langword="false" /> si la configuration n'est pas une configuration au moment du design.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRoot.RemoveConfig(System.String)">
      <summary vsli:raw="Finds and removes a configuration record and all its children for a given configuration path.">Recherche et supprime un enregistrement de configuration et tous ses enfants pour un chemin d'accès de configuration donné.</summary>
      <param name="configPath" vsli:raw="The path of the configuration file.">Chemin d'accès du fichier de configuration.</param>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigSettingsFactory">
      <summary vsli:raw="Defines an interface used by the configuration system to set the &lt;see cref=&quot;T:System.Configuration.ConfigurationSettings&quot; /&gt; class.">Définit une interface utilisée par le système de configuration pour définir la classe <see cref="T:System.Configuration.ConfigurationSettings" />.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigSettingsFactory.CompleteInit">
      <summary vsli:raw="Indicates that initialization of the configuration system has completed.">Indique que l'initialisation du système de configuration est terminée.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigSettingsFactory.SetConfigurationSystem(System.Configuration.Internal.IInternalConfigSystem,System.Boolean)">
      <summary vsli:raw="Provides hierarchical configuration settings and extensions specific to ASP.NET to the configuration system.">Fournit au système de configuration des extensions et des paramètres de configuration hiérarchiques spécifiques à ASP.NET.</summary>
      <param name="internalConfigSystem" vsli:raw="An &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigSystem&quot; /&gt; object used by the &lt;see cref=&quot;T:System.Configuration.ConfigurationSettings&quot; /&gt; class.">Objet <see cref="T:System.Configuration.Internal.IInternalConfigSystem" /> utilisé par la classe <see cref="T:System.Configuration.ConfigurationSettings" />.</param>
      <param name="initComplete" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the initialization process of the configuration system is complete; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le processus d'initialisation du système de configuration est terminé ; sinon <see langword="false" />.</param>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigSystem">
      <summary vsli:raw="Defines an interface used by .NET to initialize application configuration properties.">Définit une interface utilisée par le .NET Framework pour initialiser des propriétés de configuration de l'application.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigSystem.GetSection(System.String)">
      <summary vsli:raw="Returns the configuration object based on the specified key.">Retourne l'objet de configuration en fonction de la clé spécifiée.</summary>
      <param name="configKey" vsli:raw="The configuration key value.">Valeur de la clé de configuration.</param>
      <returns vsli:raw="A configuration object.">Objet de configuration.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigSystem.RefreshConfig(System.String)">
      <summary vsli:raw="Refreshes the configuration system based on the specified section name.">Actualise le système de configuration en fonction du nom de section spécifié.</summary>
      <param name="sectionName" vsli:raw="The name of the configuration section.">Nom de la section de configuration.</param>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigSystem.SupportsUserConfig">
      <summary vsli:raw="Gets a value indicating whether the user configuration is supported.">Obtient une valeur indiquant si la configuration utilisateur est prise en charge.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the user configuration is supported; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la configuration utilisateur est prise en charge ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Configuration.Internal.InternalConfigEventArgs">
      <summary vsli:raw="Defines a class that allows the .NET infrastructure to specify event arguments for configuration events.">Définit une classe qui permet à l'infrastructure .NET Framework de spécifier des arguments d'événement pour les événements de configuration.</summary>
    </member>
    <member name="M:System.Configuration.Internal.InternalConfigEventArgs.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.Internal.InternalConfigEventArgs&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.Internal.InternalConfigEventArgs" />.</summary>
      <param name="configPath" vsli:raw="A configuration path.">Chemin d'accès de configuration.</param>
    </member>
    <member name="P:System.Configuration.Internal.InternalConfigEventArgs.ConfigPath">
      <summary vsli:raw="Gets or sets the configuration path related to the &lt;see cref=&quot;T:System.Configuration.Internal.InternalConfigEventArgs&quot; /&gt; object.">Obtient ou définit le chemin d'accès de configuration lié à l'objet <see cref="T:System.Configuration.Internal.InternalConfigEventArgs" />.</summary>
      <returns vsli:raw="A string value specifying the configuration path.">Valeur de chaîne spécifiant le chemin d'accès de configuration.</returns>
    </member>
    <member name="T:System.Configuration.Internal.InternalConfigEventHandler">
      <summary vsli:raw="Defines a class used by the .NET infrastructure to support configuration events.">Définit une classe utilisée par l'infrastructure .NET Framework pour prendre en charge des événements de configuration.</summary>
      <param name="sender" vsli:raw="The source object of the event.">Objet source de l'événement.</param>
      <param name="e" vsli:raw="A configuration event argument.">Argument d'événement de configuration.</param>
    </member>
    <member name="T:System.Configuration.Internal.StreamChangeCallback">
      <summary vsli:raw="Represents a method for hosts to call when a monitored stream has changed.">Représente une méthode que les hôtes doivent appeler lorsqu'un flux de données surveillé a changé.</summary>
      <param name="streamName" vsli:raw="The name of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">Nom de l'objet <see cref="T:System.IO.Stream" /> effectuant des tâches d'E/S sur le fichier de configuration.</param>
    </member>
    <member name="T:System.Configuration.IPersistComponentSettings">
      <summary vsli:raw="Defines standard functionality for controls or libraries that store and retrieve application settings.">Définit les fonctionnalités standard pour les contrôles ou les bibliothèques qui stockent et récupèrent des paramètres d'application.</summary>
    </member>
    <member name="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings">
      <summary vsli:raw="Reads the control's application settings into their corresponding properties and updates the control's state.">Lit les paramètres d'application du contrôle dans leurs propriétés correspondantes et met à jour l'état du contrôle.</summary>
    </member>
    <member name="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings">
      <summary vsli:raw="Resets the control's application settings properties to their default values.">Restaure les valeurs par défaut des propriétés de paramètres d'application du contrôle.</summary>
    </member>
    <member name="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings">
      <summary vsli:raw="Persists the control's application settings properties.">Rend persistantes les propriétés de paramètres d'application du contrôle.</summary>
    </member>
    <member name="P:System.Configuration.IPersistComponentSettings.SaveSettings">
      <summary vsli:raw="Gets or sets a value indicating whether the control should automatically persist its application settings properties.">Obtient ou définit une valeur indiquant si le contrôle doit rendre ses données de configuration automatiquement persistantes.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the control should automatically persist its state; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le contrôle doit rendre son état automatiquement persistant ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.IPersistComponentSettings.SettingsKey">
      <summary vsli:raw="Gets or sets the value of the application settings key for the current instance of the control.">Obtient ou définit la valeur de la clé de paramètres d'application pour l'instance actuelle du contrôle.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the settings key for the current instance of the control.">
        <see cref="T:System.String" /> contenant la clé de paramètres pour l'instance actuelle du contrôle.</returns>
    </member>
    <member name="T:System.Configuration.IriParsingElement">
      <summary vsli:raw="Provides the configuration setting for International Resource Identifier (IRI) processing in the &lt;see cref=&quot;T:System.Uri&quot; /&gt; class.">Fournit le paramètre de configuration pour le traitement des identifiants de ressources internationaux (IRI, International Resource Identifier) dans la classe <see cref="T:System.Uri" />.</summary>
    </member>
    <member name="M:System.Configuration.IriParsingElement.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.IriParsingElement&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.IriParsingElement" />.</summary>
    </member>
    <member name="P:System.Configuration.IriParsingElement.Enabled">
      <summary vsli:raw="Gets or sets the value of the &lt;see cref=&quot;T:System.Configuration.IriParsingElement&quot; /&gt; configuration setting.">Obtient ou définit la valeur du paramètre de configuration <see cref="T:System.Configuration.IriParsingElement" />.</summary>
      <returns vsli:raw="A Boolean that indicates if International Resource Identifier (IRI) processing is enabled.">Booléen qui indique si le traitement des IRI (International Resource Identifier) est activé.</returns>
    </member>
    <member name="T:System.Configuration.ISettingsProviderService">
      <summary vsli:raw="Provides an interface for defining an alternate application settings provider.">Fournit une interface pour définir un autre fournisseur de paramètres d’application.</summary>
    </member>
    <member name="M:System.Configuration.ISettingsProviderService.GetSettingsProvider(System.Configuration.SettingsProperty)">
      <summary vsli:raw="Returns the settings provider compatible with the specified settings property.">Retourne le fournisseur de paramètres compatible avec la propriété de paramètres spécifiée.</summary>
      <param name="property" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; that requires serialization.">
        <see cref="T:System.Configuration.SettingsProperty" /> qui nécessite une sérialisation.</param>
      <returns vsli:raw="If found, the &lt;see cref=&quot;T:System.Configuration.SettingsProvider&quot; /&gt; that can persist the specified settings property; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">S’il existe, <see cref="T:System.Configuration.SettingsProvider" /> qui peut rendre persistante la propriété de paramètres spécifiée ; sinon, <see langword="null" />.</returns>
    </member>
    <member name="T:System.Configuration.KeyValueConfigurationCollection">
      <summary vsli:raw="Contains a collection of &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt; objects.">Contient une collection d'objets <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</summary>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationCollection&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.KeyValueConfigurationCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.Add(System.Configuration.KeyValueConfigurationElement)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt; object to the collection based on the supplied parameters.">Ajoute un objet <see cref="T:System.Configuration.KeyValueConfigurationElement" /> à la collection en fonction des paramètres fournis.</summary>
      <param name="keyValue" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt;.">
        <see cref="T:System.Configuration.KeyValueConfigurationElement" />
      </param>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.Add(System.String,System.String)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt; object to the collection based on the supplied parameters.">Ajoute un objet <see cref="T:System.Configuration.KeyValueConfigurationElement" /> à la collection en fonction des paramètres fournis.</summary>
      <param name="key" vsli:raw="A string specifying the key.">Chaîne spécifiant la clé.</param>
      <param name="value" vsli:raw="A string specifying the value.">Chaîne spécifiant la valeur.</param>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationCollection.AllKeys">
      <summary vsli:raw="Gets the keys to all items contained in the &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationCollection&quot; /&gt; collection.">Obtient les clés de tous les éléments contenues dans la collection <see cref="T:System.Configuration.KeyValueConfigurationCollection" />.</summary>
      <returns vsli:raw="A string array.">Tableau de chaînes.</returns>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.Clear">
      <summary vsli:raw="Clears the &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationCollection&quot; /&gt; collection.">Efface la collection <see cref="T:System.Configuration.KeyValueConfigurationCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.CreateNewElement">
      <summary vsli:raw="When overridden in a derived class, the &lt;see cref=&quot;M:System.Configuration.KeyValueConfigurationCollection.CreateNewElement&quot; /&gt; method creates a new &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt; object.">En cas de substitution dans une classe dérivée, la méthode <see cref="M:System.Configuration.KeyValueConfigurationCollection.CreateNewElement" /> crée un objet <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</summary>
      <returns vsli:raw="A newly created &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt;.">
        <see cref="T:System.Configuration.KeyValueConfigurationElement" /> qui vient d'être créé.</returns>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.GetElementKey(System.Configuration.ConfigurationElement)">
      <summary vsli:raw="Gets the element key for a specified configuration element when overridden in a derived class.">Obtient la clé d'élément pour un élément de configuration spécifié en cas de substitution dans une classe dérivée.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt; to which the key should be returned.">
        <see cref="T:System.Configuration.KeyValueConfigurationElement" /> auquel la clé doit être retournée.</param>
      <returns vsli:raw="An object that acts as the key for the specified &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt;.">Objet qui fait office de clé pour le <see cref="T:System.Configuration.KeyValueConfigurationElement" /> spécifié.</returns>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt; object based on the supplied parameter.">Obtient l'objet <see cref="T:System.Configuration.KeyValueConfigurationElement" /> en fonction du paramètre fourni.</summary>
      <param name="key" vsli:raw="The key of the &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt; contained in the collection.">Clé du <see cref="T:System.Configuration.KeyValueConfigurationElement" /> contenu dans la collection.</param>
      <returns vsli:raw="A configuration element, or &lt;see langword=&quot;null&quot; /&gt; if the key does not exist in the collection.">Élément de configuration ou <see langword="null" /> si la clé n'existe pas dans la collection.</returns>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationCollection.Properties">
      <summary vsli:raw="Gets a collection of configuration properties.">Obtient une collection de propriétés de configuration.</summary>
      <returns vsli:raw="A collection of configuration properties.">Collection de propriétés de configuration.</returns>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.Remove(System.String)">
      <summary vsli:raw="Removes a &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt; object from the collection.">Supprime un objet <see cref="T:System.Configuration.KeyValueConfigurationElement" /> de la collection.</summary>
      <param name="key" vsli:raw="A string specifying the &lt;paramref name=&quot;key&quot; /&gt;.">Chaîne spécifiant la <paramref name="key" />.</param>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationCollection.ThrowOnDuplicate">
      <summary vsli:raw="Gets a value indicating whether an attempt to add a duplicate &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt; object to the &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationCollection&quot; /&gt; collection will cause an exception to be thrown.">Obtient une valeur indiquant si une tentative d'ajout d'un objet <see cref="T:System.Configuration.KeyValueConfigurationElement" /> dupliqué à la collection <see cref="T:System.Configuration.KeyValueConfigurationCollection" /> provoquera la levée d'une exception.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an attempt to add a duplicate &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt; to the &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationCollection&quot; /&gt; will cause an exception to be thrown; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si une tentative d'ajout d'un <see cref="T:System.Configuration.KeyValueConfigurationElement" /> dupliqué au <see cref="T:System.Configuration.KeyValueConfigurationCollection" /> provoquera la levée d'une exception ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Configuration.KeyValueConfigurationElement">
      <summary vsli:raw="Represents a configuration element that contains a key/value pair.">Représente un élément de configuration qui contient une paire clé/valeur.</summary>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationElement.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt; class based on the supplied parameters.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.KeyValueConfigurationElement" /> en fonction des paramètres fournis.</summary>
      <param name="key" vsli:raw="The key of the &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt;.">Clé de <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</param>
      <param name="value" vsli:raw="The value of the &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt;.">Valeur de <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</param>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationElement.Init">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt; object to its initial state.">Rétablit l’état initial de l’objet <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</summary>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationElement.Key">
      <summary vsli:raw="Gets the key of the &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt; object.">Obtient la clé de l’objet <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</summary>
      <returns vsli:raw="The key of the &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt;.">Clé de <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</returns>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationElement.Properties">
      <summary vsli:raw="Gets the collection of properties.">Obtient la collection de propriétés.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationPropertyCollection&quot; /&gt; of properties for the element.">
        <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> de propriétés de l'élément.</returns>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationElement.Value">
      <summary vsli:raw="Gets or sets the value of the &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt; object.">Obtient ou définit la valeur de l'objet <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</summary>
      <returns vsli:raw="The value of the &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt;.">Valeur de <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</returns>
    </member>
    <member name="T:System.Configuration.LocalFileSettingsProvider">
      <summary vsli:raw="Provides persistence for application settings classes.">Fournit la persistance pour les classes de paramètres d'application.</summary>
    </member>
    <member name="M:System.Configuration.LocalFileSettingsProvider.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.LocalFileSettingsProvider&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.LocalFileSettingsProvider" />.</summary>
    </member>
    <member name="P:System.Configuration.LocalFileSettingsProvider.ApplicationName">
      <summary vsli:raw="Gets or sets the name of the currently running application.">Obtient ou définit le nom de l'application en cours d'exécution.</summary>
      <returns vsli:raw="A string that contains the application's display name.">Chaîne qui contient le nom complet de l'application</returns>
    </member>
    <member name="M:System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)">
      <summary vsli:raw="Returns the value of the named settings property for the previous version of the same application.">Retourne la valeur de la propriété de paramètres nommée pour la version antérieure de la même application.</summary>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsContext&quot; /&gt; that describes where the application settings property is used.">
        <see cref="T:System.Configuration.SettingsContext" /> qui décrit où est utilisée la propriété de paramètres d'application.</param>
      <param name="property" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; whose value is to be returned.">
        <see cref="T:System.Configuration.SettingsProperty" /> dont la valeur doit être retournée.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValue&quot; /&gt; representing the application setting if found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Configuration.SettingsPropertyValue" /> représentant le paramètre d'application s'il est trouvé ; sinon, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Configuration.LocalFileSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
      <summary vsli:raw="Returns the collection of setting property values for the specified application instance and settings property group.">Retourne la collection de valeurs de propriétés de définition pour l'instance d'application et le groupe de propriétés de paramètres spécifiés.</summary>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsContext&quot; /&gt; describing the current application usage.">
        <see cref="T:System.Configuration.SettingsContext" /> décrivant l'utilisation de l'application actuelle.</param>
      <param name="properties" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsPropertyCollection&quot; /&gt; containing the settings property group whose values are to be retrieved.">
        <see cref="T:System.Configuration.SettingsPropertyCollection" /> contenant le groupe de propriétés de paramètres dont les valeurs seront récupérées.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValueCollection&quot; /&gt; containing the values for the specified settings property group.">
        <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> contenant les valeurs pour le groupe de propriétés de paramètres spécifié.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="A user-scoped setting was encountered but the current configuration only supports application-scoped settings.">Un paramètre de portée utilisateur a été rencontré, mais la configuration actuelle prend en charge uniquement les paramètres de portée application.</exception>
    </member>
    <member name="M:System.Configuration.LocalFileSettingsProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary vsli:raw="Initializes the provider.">Initialise le fournisseur.</summary>
      <param name="name" vsli:raw="The friendly name of the provider.">Nom convivial du fournisseur.</param>
      <param name="values" vsli:raw="A collection of the name/value pairs representing the provider-specific attributes specified in the configuration for this provider.">Collection des paires nom/valeur qui représentent les attributs spécifiques au fournisseur spécifiés dans la configuration pour ce fournisseur.</param>
    </member>
    <member name="M:System.Configuration.LocalFileSettingsProvider.Reset(System.Configuration.SettingsContext)">
      <summary vsli:raw="Resets all application settings properties associated with the specified application to their default values.">Restaure les valeurs par défaut de toutes les propriétés de paramètres d'application associées à l'application spécifiée.</summary>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsContext&quot; /&gt; describing the current application usage.">
        <see cref="T:System.Configuration.SettingsContext" /> décrivant l'utilisation de l'application actuelle.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="A user-scoped setting was encountered but the current configuration only supports application-scoped settings.">Un paramètre de portée utilisateur a été rencontré, mais la configuration actuelle prend en charge uniquement les paramètres de portée application.</exception>
    </member>
    <member name="M:System.Configuration.LocalFileSettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)">
      <summary vsli:raw="Sets the values of the specified group of property settings.">Définit les valeurs du groupe de paramètres de propriétés spécifié.</summary>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsContext&quot; /&gt; describing the current application usage.">
        <see cref="T:System.Configuration.SettingsContext" /> décrivant l'utilisation de l'application actuelle.</param>
      <param name="values" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValueCollection&quot; /&gt; representing the group of property settings to set.">
        <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> représentant le groupe de paramètres de propriétés à définir.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="A user-scoped setting was encountered but the current configuration only supports application-scoped settings.  &#xA;  &#xA; -or-  &#xA;  &#xA; There was a general failure saving the settings to the configuration file.">Un paramètre de portée utilisateur a été rencontré, mais la configuration actuelle prend en charge uniquement les paramètres de portée application.  

ou -  

 Une défaillance générale s'est produite lors de l'enregistrement des paramètres dans le fichier de configuration.</exception>
    </member>
    <member name="M:System.Configuration.LocalFileSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
      <summary vsli:raw="Attempts to migrate previous user-scoped settings from a previous version of the same application.">Tentatives de migrer des paramètres de portée utilisateur antérieurs à partir d'une version antérieure de la même application.</summary>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsContext&quot; /&gt; describing the current application usage.">
        <see cref="T:System.Configuration.SettingsContext" /> décrivant l'utilisation de l'application actuelle.</param>
      <param name="properties" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsPropertyCollection&quot; /&gt; containing the settings property group whose values are to be retrieved.">
        <see cref="T:System.Configuration.SettingsPropertyCollection" /> contenant le groupe de propriétés de paramètres dont les valeurs seront récupérées.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="A user-scoped setting was encountered but the current configuration only supports application-scoped settings.  &#xA;  &#xA; -or-  &#xA;  &#xA; The previous version of the configuration file could not be accessed.">Un paramètre de portée utilisateur a été rencontré, mais la configuration actuelle prend en charge uniquement les paramètres de portée application.  

ou -  

 Impossible d'accéder à la version antérieure du fichier de configuration.</exception>
    </member>
    <member name="T:System.Configuration.LongValidator">
      <summary vsli:raw="Provides validation of an &lt;see cref=&quot;T:System.Int64&quot; /&gt; value.">Fournit la validation d'une valeur <see cref="T:System.Int64" />.</summary>
    </member>
    <member name="M:System.Configuration.LongValidator.#ctor(System.Int64,System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.LongValidator&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.LongValidator" />.</summary>
      <param name="minValue" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; value that specifies the minimum length of the &lt;see langword=&quot;long&quot; /&gt; value.">Valeur <see cref="T:System.Int64" /> qui spécifie la longueur minimale de la valeur <see langword="long" />.</param>
      <param name="maxValue" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; value that specifies the maximum length of the &lt;see langword=&quot;long&quot; /&gt; value.">Valeur <see cref="T:System.Int64" /> qui spécifie la longueur maximale de la valeur <see langword="long" />.</param>
    </member>
    <member name="M:System.Configuration.LongValidator.#ctor(System.Int64,System.Int64,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.LongValidator&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.LongValidator" />.</summary>
      <param name="minValue" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; value that specifies the minimum length of the &lt;see langword=&quot;long&quot; /&gt; value.">Valeur <see cref="T:System.Int64" /> qui spécifie la longueur minimale de la valeur <see langword="long" />.</param>
      <param name="maxValue" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; value that specifies the maximum length of the &lt;see langword=&quot;long&quot; /&gt; value.">Valeur <see cref="T:System.Int64" /> qui spécifie la longueur maximale de la valeur <see langword="long" />.</param>
      <param name="rangeIsExclusive" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the validation range is exclusive.">Valeur <see cref="T:System.Boolean" /> qui spécifie si la plage de validation est exclusive.</param>
    </member>
    <member name="M:System.Configuration.LongValidator.#ctor(System.Int64,System.Int64,System.Boolean,System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.LongValidator&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.LongValidator" />.</summary>
      <param name="minValue" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; value that specifies the minimum length of the &lt;see langword=&quot;long&quot; /&gt; value.">Valeur <see cref="T:System.Int64" /> qui spécifie la longueur minimale de la valeur <see langword="long" />.</param>
      <param name="maxValue" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; value that specifies the maximum length of the &lt;see langword=&quot;long&quot; /&gt; value.">Valeur <see cref="T:System.Int64" /> qui spécifie la longueur maximale de la valeur <see langword="long" />.</param>
      <param name="rangeIsExclusive" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the validation range is exclusive.">Valeur <see cref="T:System.Boolean" /> qui spécifie si la plage de validation est exclusive.</param>
      <param name="resolution" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; value that specifies a specific value that must be matched.">Valeur <see cref="T:System.Int64" /> spécifiant une valeur spécifique qui doit être respectée.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;resolution&quot; /&gt; is equal to or less than &lt;see langword=&quot;0&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;maxValue&quot; /&gt; is less than &lt;paramref name=&quot;minValue&quot; /&gt;.">
        <paramref name="resolution" /> est inférieur ou égal à <see langword="0" />.  

ou - 
<paramref name="maxValue" /> est inférieur à <paramref name="minValue" />.</exception>
    </member>
    <member name="M:System.Configuration.LongValidator.CanValidate(System.Type)">
      <summary vsli:raw="Determines whether the type of the object can be validated.">Détermine si le type de l'objet peut être validé.</summary>
      <param name="type" vsli:raw="The type of object.">Type d'objet.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter matches an &lt;see cref=&quot;T:System.Int64&quot; /&gt; value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le paramètre <paramref name="type" /> correspond à une valeur <see cref="T:System.Int64" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.LongValidator.Validate(System.Object)">
      <summary vsli:raw="Determines whether the value of an object is valid.">Détermine si la valeur d’un objet est valide.</summary>
      <param name="value" vsli:raw="The value of an object.">Valeur d’un objet.</param>
    </member>
    <member name="T:System.Configuration.LongValidatorAttribute">
      <summary vsli:raw="Declaratively instructs .NET to perform long-integer validation on a configuration property. This class cannot be inherited.">Ordonne de manière déclarative au .NET Framework d'effectuer la validation des entiers longs sur une propriété de configuration. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.LongValidatorAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.LongValidatorAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.LongValidatorAttribute" />.</summary>
    </member>
    <member name="P:System.Configuration.LongValidatorAttribute.ExcludeRange">
      <summary vsli:raw="Gets or sets a value that indicates whether to include or exclude the integers in the range defined by the &lt;see cref=&quot;P:System.Configuration.LongValidatorAttribute.MinValue&quot; /&gt; and &lt;see cref=&quot;P:System.Configuration.LongValidatorAttribute.MaxValue&quot; /&gt; property values.">Obtient ou définit une valeur qui indique s'il faut inclure ou exclure les entiers dans la plage définie par les valeurs des propriétés <see cref="P:System.Configuration.LongValidatorAttribute.MinValue" /> et <see cref="P:System.Configuration.LongValidatorAttribute.MaxValue" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value must be excluded; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la valeur doit être exclue ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.LongValidatorAttribute.MaxValue">
      <summary vsli:raw="Gets or sets the maximum value allowed for the property.">Obtient ou définit la valeur maximale autorisée pour la propriété.</summary>
      <returns vsli:raw="A long integer that indicates the allowed maximum value.">Entier long qui indique la valeur maximale autorisée.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The selected value is less than &lt;see cref=&quot;P:System.Configuration.LongValidatorAttribute.MinValue&quot; /&gt;.">La valeur sélectionnée est inférieure à <see cref="P:System.Configuration.LongValidatorAttribute.MinValue" />.</exception>
    </member>
    <member name="P:System.Configuration.LongValidatorAttribute.MinValue">
      <summary vsli:raw="Gets or sets the minimum value allowed for the property.">Obtient ou définit la valeur minimale autorisée pour la propriété.</summary>
      <returns vsli:raw="An integer that indicates the allowed minimum value.">Entier qui indique la valeur minimale autorisée.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The selected value is greater than &lt;see cref=&quot;P:System.Configuration.LongValidatorAttribute.MaxValue&quot; /&gt;.">La valeur sélectionnée est supérieure à <see cref="P:System.Configuration.LongValidatorAttribute.MaxValue" />.</exception>
    </member>
    <member name="P:System.Configuration.LongValidatorAttribute.ValidatorInstance">
      <summary vsli:raw="Gets an instance of the &lt;see cref=&quot;T:System.Configuration.LongValidator&quot; /&gt; class.">Obtient une instance de la classe <see cref="T:System.Configuration.LongValidator" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorBase&quot; /&gt; validator instance.">Instance du validateur <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</returns>
    </member>
    <member name="T:System.Configuration.NameValueConfigurationCollection">
      <summary vsli:raw="Contains a collection of &lt;see cref=&quot;T:System.Configuration.NameValueConfigurationElement&quot; /&gt; objects. This class cannot be inherited.">Contient une collection d'objets <see cref="T:System.Configuration.NameValueConfigurationElement" />. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.NameValueConfigurationCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.NameValueConfigurationCollection&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.NameValueConfigurationCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.NameValueConfigurationCollection.Add(System.Configuration.NameValueConfigurationElement)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Configuration.NameValueConfigurationElement&quot; /&gt; object to the collection.">Ajoute un objet <see cref="T:System.Configuration.NameValueConfigurationElement" /> à la collection.</summary>
      <param name="nameValue" vsli:raw="A  &lt;see cref=&quot;T:System.Configuration.NameValueConfigurationElement&quot; /&gt; object.">Objet <see cref="T:System.Configuration.NameValueConfigurationElement" />.</param>
    </member>
    <member name="P:System.Configuration.NameValueConfigurationCollection.AllKeys">
      <summary vsli:raw="Gets the keys to all items contained in the &lt;see cref=&quot;T:System.Configuration.NameValueConfigurationCollection&quot; /&gt;.">Obtient les clés de tous les éléments contenus dans <see cref="T:System.Configuration.NameValueConfigurationCollection" />.</summary>
      <returns vsli:raw="A string array.">Tableau de chaînes.</returns>
    </member>
    <member name="M:System.Configuration.NameValueConfigurationCollection.Clear">
      <summary vsli:raw="Clears the &lt;see cref=&quot;T:System.Configuration.NameValueConfigurationCollection&quot; /&gt;.">Efface la <see cref="T:System.Configuration.NameValueConfigurationCollection" />.</summary>
    </member>
    <member name="P:System.Configuration.NameValueConfigurationCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Configuration.NameValueConfigurationElement&quot; /&gt; object based on the supplied parameter.">Obtient ou définit l'objet <see cref="T:System.Configuration.NameValueConfigurationElement" /> selon le paramètre fourni.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.NameValueConfigurationElement&quot; /&gt; contained in the collection.">Nom du <see cref="T:System.Configuration.NameValueConfigurationElement" /> contenu dans la collection.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.NameValueConfigurationElement&quot; /&gt; object.">Objet <see cref="T:System.Configuration.NameValueConfigurationElement" />.</returns>
    </member>
    <member name="M:System.Configuration.NameValueConfigurationCollection.Remove(System.Configuration.NameValueConfigurationElement)">
      <summary vsli:raw="Removes a &lt;see cref=&quot;T:System.Configuration.NameValueConfigurationElement&quot; /&gt; object from the collection based on the provided parameter.">Supprime un objet <see cref="T:System.Configuration.NameValueConfigurationElement" /> de la collection selon le paramètre fourni.</summary>
      <param name="nameValue" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.NameValueConfigurationElement&quot; /&gt; object.">Objet <see cref="T:System.Configuration.NameValueConfigurationElement" />.</param>
    </member>
    <member name="M:System.Configuration.NameValueConfigurationCollection.Remove(System.String)">
      <summary vsli:raw="Removes a &lt;see cref=&quot;T:System.Configuration.NameValueConfigurationElement&quot; /&gt; object from the collection based on the provided parameter.">Supprime un objet <see cref="T:System.Configuration.NameValueConfigurationElement" /> de la collection selon le paramètre fourni.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.NameValueConfigurationElement&quot; /&gt; object.">Nom de l'objet <see cref="T:System.Configuration.NameValueConfigurationElement" />.</param>
    </member>
    <member name="T:System.Configuration.NameValueConfigurationElement">
      <summary vsli:raw="A configuration element that contains a &lt;see cref=&quot;T:System.String&quot; /&gt; name and &lt;see cref=&quot;T:System.String&quot; /&gt; value. This class cannot be inherited.">Élément de configuration qui contient un nom <see cref="T:System.String" /> et une valeur <see cref="T:System.String" />. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.NameValueConfigurationElement.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.NameValueConfigurationElement&quot; /&gt; class based on supplied parameters.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.NameValueConfigurationElement" /> en fonction des paramètres fournis.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.NameValueConfigurationElement&quot; /&gt; object.">Nom de l'objet <see cref="T:System.Configuration.NameValueConfigurationElement" />.</param>
      <param name="value" vsli:raw="The value of the &lt;see cref=&quot;T:System.Configuration.NameValueConfigurationElement&quot; /&gt; object.">Valeur de l’objet <see cref="T:System.Configuration.NameValueConfigurationElement" />.</param>
    </member>
    <member name="P:System.Configuration.NameValueConfigurationElement.Name">
      <summary vsli:raw="Gets the name of the &lt;see cref=&quot;T:System.Configuration.NameValueConfigurationElement&quot; /&gt; object.">Obtient le nom de l’objet <see cref="T:System.Configuration.NameValueConfigurationElement" />.</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.NameValueConfigurationElement&quot; /&gt; object.">Nom de l'objet <see cref="T:System.Configuration.NameValueConfigurationElement" />.</returns>
    </member>
    <member name="P:System.Configuration.NameValueConfigurationElement.Value">
      <summary vsli:raw="Gets or sets the value of the &lt;see cref=&quot;T:System.Configuration.NameValueConfigurationElement&quot; /&gt; object.">Obtient ou définit la valeur de l'objet <see cref="T:System.Configuration.NameValueConfigurationElement" />.</summary>
      <returns vsli:raw="The value of the &lt;see cref=&quot;T:System.Configuration.NameValueConfigurationElement&quot; /&gt; object.">Valeur de l’objet <see cref="T:System.Configuration.NameValueConfigurationElement" />.</returns>
    </member>
    <member name="T:System.Configuration.NameValueFileSectionHandler">
      <summary vsli:raw="Provides access to a configuration file. This type supports the .NET configuration infrastructure and is not intended to be used directly from your code.">Permet d'accéder à un fichier de configuration. Ce type prend en charge l'infrastructure de la configuration .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.</summary>
    </member>
    <member name="M:System.Configuration.NameValueFileSectionHandler.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.NameValueFileSectionHandler&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.NameValueFileSectionHandler" />.</summary>
    </member>
    <member name="M:System.Configuration.NameValueFileSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <summary vsli:raw="Creates a new configuration handler and adds it to the section-handler collection based on the specified parameters.">Crée un gestionnaire de configuration et l’ajoute à la collection de gestionnaires de section en fonction des paramètres spécifiés.</summary>
      <param name="parent" vsli:raw="The parent object.">Objet parent.</param>
      <param name="configContext" vsli:raw="The configuration context object.">Objet de contexte de configuration.</param>
      <param name="section" vsli:raw="The section XML node.">Nœud XML de section.</param>
      <returns vsli:raw="A configuration object.">Objet de configuration.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The file specified in the &lt;see langword=&quot;file&quot; /&gt; attribute of &lt;paramref name=&quot;section&quot; /&gt; exists but cannot be loaded.  &#xA;  &#xA;-or-&#xA;  &#xA; The &lt;see langword=&quot;name&quot; /&gt; attribute of &lt;paramref name=&quot;section&quot; /&gt; does not match the root element of the file specified in the &lt;see langword=&quot;file&quot; /&gt; attribute.">Le fichier spécifié dans l'attribut de <see langword="file" /> de <paramref name="section" /> existe mais ne peut pas être chargé.  
ou 
L'attribut <see langword="name" /> de <paramref name="section" /> ne correspond pas à l'élément racine du fichier spécifié dans l'attribut de <see langword="file" />.</exception>
    </member>
    <member name="T:System.Configuration.NameValueSectionHandler">
      <summary vsli:raw="Provides name/value-pair configuration information from a configuration section.">Fournit les informations de configuration des paires nom/valeur d’une section de configuration.</summary>
    </member>
    <member name="M:System.Configuration.NameValueSectionHandler.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.NameValueSectionHandler&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.NameValueSectionHandler" />.</summary>
    </member>
    <member name="M:System.Configuration.NameValueSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <summary vsli:raw="Creates a new configuration handler and adds it to the section-handler collection based on the specified parameters.">Crée un gestionnaire de configuration et l’ajoute à la collection de gestionnaires de section en fonction des paramètres spécifiés.</summary>
      <param name="parent" vsli:raw="Parent object.">Objet parent.</param>
      <param name="context" vsli:raw="Configuration context object.">Objet de contexte de configuration.</param>
      <param name="section" vsli:raw="Section XML node.">Nœud XML de section.</param>
      <returns vsli:raw="A configuration object.">Objet de configuration.</returns>
    </member>
    <member name="P:System.Configuration.NameValueSectionHandler.KeyAttributeName">
      <summary vsli:raw="Gets the XML attribute name to use as the key in a key/value pair.">Obtient le nom de l’attribut XML à utiliser comme clé dans une paire clé/valeur.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; value containing the name of the key attribute.">Valeur <see cref="T:System.String" /> contenant le nom de l'attribut clé.</returns>
    </member>
    <member name="P:System.Configuration.NameValueSectionHandler.ValueAttributeName">
      <summary vsli:raw="Gets the XML attribute name to use as the value in a key/value pair.">Obtient le nom de l’attribut XML à utiliser comme valeur dans une paire clé/valeur.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; value containing the name of the value attribute.">Valeur <see cref="T:System.String" /> contenant le nom de l'attribut value.</returns>
    </member>
    <member name="T:System.Configuration.NoSettingsVersionUpgradeAttribute">
      <summary vsli:raw="Specifies that a settings provider should disable any logic that gets invoked when an application upgrade is detected. This class cannot be inherited.">Spécifie qu’un fournisseur de paramètres doit désactiver toute logique appelée quand une mise à niveau d’application est détectée. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.NoSettingsVersionUpgradeAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.NoSettingsVersionUpgradeAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.NoSettingsVersionUpgradeAttribute" />.</summary>
    </member>
    <member name="T:System.Configuration.OverrideMode">
      <summary vsli:raw="Specifies the override behavior of a configuration element for configuration elements in child directories.">Spécifie le comportement de substitution d'un élément de configuration pour les éléments de configuration situés dans les répertoires enfants.</summary>
    </member>
    <member name="F:System.Configuration.OverrideMode.Allow">
      <summary vsli:raw="The configuration setting of the element or group can be overridden by configuration settings that are in child directories.">Le paramètre de configuration de l'élément ou du groupe peut être substitué par les paramètres de configuration qui se trouvent dans les répertoires enfants.</summary>
    </member>
    <member name="F:System.Configuration.OverrideMode.Deny">
      <summary vsli:raw="The configuration setting of the element or group cannot be overridden by configuration settings that are in child directories.">Le paramètre de configuration de l'élément ou du groupe ne peut pas être substitué par les paramètres de configuration qui se trouvent dans les répertoires enfants.</summary>
    </member>
    <member name="F:System.Configuration.OverrideMode.Inherit">
      <summary vsli:raw="The configuration setting of the element or group will be overridden by configuration settings that are in child directories if explicitly allowed by a parent element of the current configuration element or group. Permission to override is specified by using the &lt;see langword=&quot;OverrideMode&quot; /&gt; attribute.">Le paramètre de configuration de l'élément ou du groupe sera substitué par les paramètres de configuration qui se trouvent dans les répertoires enfants si un élément parent de l'élément ou du groupe de configuration actuel en a donné l'autorisation explicite. L'autorisation de substituer est spécifiée à l'aide de l'attribut <see langword="OverrideMode" />.</summary>
    </member>
    <member name="T:System.Configuration.PositiveTimeSpanValidator">
      <summary vsli:raw="Provides validation of a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; object. This class cannot be inherited.">Fournit la validation d’un objet <see cref="T:System.TimeSpan" />. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.PositiveTimeSpanValidator.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.PositiveTimeSpanValidator&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.PositiveTimeSpanValidator" />.</summary>
    </member>
    <member name="M:System.Configuration.PositiveTimeSpanValidator.CanValidate(System.Type)">
      <summary vsli:raw="Determines whether the object type can be validated.">Détermine si le type d’objet peut être validé.</summary>
      <param name="type" vsli:raw="The object type.">Type d'objet.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter matches a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le paramètre <paramref name="type" /> correspond à un objet <see cref="T:System.TimeSpan" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.PositiveTimeSpanValidator.Validate(System.Object)">
      <summary vsli:raw="Determines whether the value of an object is valid.">Détermine si la valeur d’un objet est valide.</summary>
      <param name="value" vsli:raw="The value of an object.">Valeur d’un objet.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; cannot be resolved as a positive &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">
        <paramref name="value" /> ne peut pas être résolu en tant que valeur <see cref="T:System.TimeSpan" /> positive.</exception>
    </member>
    <member name="T:System.Configuration.PositiveTimeSpanValidatorAttribute">
      <summary vsli:raw="Declaratively instructs .NET to perform time validation on a configuration property. This class cannot be inherited.">Demande de façon déclarative au .NET Framework d’effectuer la validation temporelle sur une propriété de configuration. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.PositiveTimeSpanValidatorAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.PositiveTimeSpanValidatorAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.PositiveTimeSpanValidatorAttribute" />.</summary>
    </member>
    <member name="P:System.Configuration.PositiveTimeSpanValidatorAttribute.ValidatorInstance">
      <summary vsli:raw="Gets an instance of the &lt;see cref=&quot;T:System.Configuration.PositiveTimeSpanValidator&quot; /&gt; class.">Obtient une instance de la classe <see cref="T:System.Configuration.PositiveTimeSpanValidator" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorBase&quot; /&gt; validator instance.">Instance du validateur <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</returns>
    </member>
    <member name="T:System.Configuration.PropertyInformation">
      <summary vsli:raw="Contains meta-information on an individual property within the configuration. This type cannot be inherited.">Contient des méta-informations sur une propriété individuelle de la configuration. Ce type ne peut pas être hérité.</summary>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Converter">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; object related to the configuration attribute.">Obtient l'objet <see cref="T:System.ComponentModel.TypeConverter" /> associé à l'attribut de configuration.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; object.">Objet <see cref="T:System.ComponentModel.TypeConverter" />.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.DefaultValue">
      <summary vsli:raw="Gets an object containing the default value related to a configuration attribute.">Obtient un objet contenant la valeur par défaut associée à un attribut de configuration.</summary>
      <returns vsli:raw="An object containing the default value of the configuration attribute.">Objet contenant la valeur par défaut de l'attribut de configuration.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Description">
      <summary vsli:raw="Gets the description of the object that corresponds to a configuration attribute.">Obtient la description de l'objet qui correspond à un attribut de configuration.</summary>
      <returns vsli:raw="The description of the configuration attribute.">Description de l'attribut de configuration.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.IsKey">
      <summary vsli:raw="Gets a value specifying whether the configuration attribute is a key.">Obtient une valeur spécifiant si l'attribut de configuration est une clé.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration attribute is a key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'attribut de configuration est une clé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.IsLocked">
      <summary vsli:raw="Gets a value specifying whether the configuration attribute is locked.">Obtient une valeur spécifiant si l'attribut de configuration est verrouillé.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Configuration.PropertyInformation&quot; /&gt; object is locked; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet <see cref="T:System.Configuration.PropertyInformation" /> est verrouillé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.IsModified">
      <summary vsli:raw="Gets a value specifying whether the configuration attribute has been modified.">Obtient une valeur indiquant si l'attribut de configuration a été modifié.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Configuration.PropertyInformation&quot; /&gt; object has been modified; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet <see cref="T:System.Configuration.PropertyInformation" /> a été modifié ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.IsRequired">
      <summary vsli:raw="Gets a value specifying whether the configuration attribute is required.">Obtient une valeur spécifiant si l'attribut de configuration est requis.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Configuration.PropertyInformation&quot; /&gt; object is required; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet <see cref="T:System.Configuration.PropertyInformation" /> est requis ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.LineNumber">
      <summary vsli:raw="Gets the line number in the configuration file related to the configuration attribute.">Obtient le numéro de ligne dans le fichier de configuration associé à l'attribut de configuration.</summary>
      <returns vsli:raw="A line number of the configuration file.">Numéro de ligne du fichier de configuration.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Name">
      <summary vsli:raw="Gets the name of the object that corresponds to a configuration attribute.">Obtient le nom de l'objet qui correspond à un attribut de configuration.</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.PropertyInformation&quot; /&gt; object.">Nom de l'objet <see cref="T:System.Configuration.PropertyInformation" />.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Source">
      <summary vsli:raw="Gets the source file that corresponds to a configuration attribute.">Obtient le fichier source qui correspond à un attribut de configuration.</summary>
      <returns vsli:raw="The source file of the &lt;see cref=&quot;T:System.Configuration.PropertyInformation&quot; /&gt; object.">Fichier source de l'objet <see cref="T:System.Configuration.PropertyInformation" />.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Type">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object that corresponds to a configuration attribute.">Obtient le <see cref="T:System.Type" /> de l'objet qui correspond à un attribut de configuration.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the &lt;see cref=&quot;T:System.Configuration.PropertyInformation&quot; /&gt; object.">
        <see cref="T:System.Type" /> de l'objet <see cref="T:System.Configuration.PropertyInformation" />.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Validator">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorBase&quot; /&gt; object related to the configuration attribute.">Obtient un objet <see cref="T:System.Configuration.ConfigurationValidatorBase" /> associé à l'attribut de configuration.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorBase&quot; /&gt; object.">Objet <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Value">
      <summary vsli:raw="Gets or sets an object containing the value related to a configuration attribute.">Obtient ou définit un objet contenant la valeur associée à un attribut de configuration.</summary>
      <returns vsli:raw="An object containing the value for the &lt;see cref=&quot;T:System.Configuration.PropertyInformation&quot; /&gt; object.">Objet contenant la valeur de l'objet <see cref="T:System.Configuration.PropertyInformation" />.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.ValueOrigin">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Configuration.PropertyValueOrigin&quot; /&gt; object related to the configuration attribute.">Obtient un objet <see cref="T:System.Configuration.PropertyValueOrigin" /> associé à l'attribut de configuration.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.PropertyValueOrigin&quot; /&gt; object.">Objet <see cref="T:System.Configuration.PropertyValueOrigin" />.</returns>
    </member>
    <member name="T:System.Configuration.PropertyInformationCollection">
      <summary vsli:raw="Contains a collection of &lt;see cref=&quot;T:System.Configuration.PropertyInformation&quot; /&gt; objects. This class cannot be inherited.">Contient une collection d'objets <see cref="T:System.Configuration.PropertyInformation" />. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.PropertyInformationCollection.CopyTo(System.Configuration.PropertyInformation[],System.Int32)">
      <summary vsli:raw="Copies the entire &lt;see cref=&quot;T:System.Configuration.PropertyInformationCollection&quot; /&gt; collection to a compatible one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified index of the target array.">Copie la totalité de la collection <see cref="T:System.Configuration.PropertyInformationCollection" /> dans un <see cref="T:System.Array" /> compatible unidimensionnel, à partir de l'index spécifié du tableau cible.</summary>
      <param name="array" vsli:raw="A one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from the &lt;see cref=&quot;T:System.Configuration.PropertyInformationCollection&quot; /&gt; collection. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">
        <see cref="T:System.Array" /> unidimensionnel constituant la destination des éléments copiés à partir de la collection <see cref="T:System.Configuration.PropertyInformationCollection" />. <see cref="T:System.Array" /> doit avoir une indexation de base zéro.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Index de base zéro dans l'<paramref name="array" /> à partir duquel la copie commence.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;see cref=&quot;P:System.Array.Length&quot; /&gt; property of &lt;paramref name=&quot;array&quot; /&gt; is less than &lt;see cref=&quot;P:System.Collections.Specialized.NameObjectCollectionBase.Count&quot; /&gt; + &lt;paramref name=&quot;index&quot; /&gt;.">La valeur de la propriété <see cref="P:System.Array.Length" /> de <paramref name="array" /> est inférieure à <see cref="P:System.Collections.Specialized.NameObjectCollectionBase.Count" /> + <paramref name="index" />.</exception>
    </member>
    <member name="M:System.Configuration.PropertyInformationCollection.GetEnumerator">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object, which is used to iterate through this &lt;see cref=&quot;T:System.Configuration.PropertyInformationCollection&quot; /&gt; collection.">Obtient un objet <see cref="T:System.Collections.IEnumerator" />, qui est utilisé pour itérer au sein de cette collection <see cref="T:System.Configuration.PropertyInformationCollection" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object, which is used to iterate through this &lt;see cref=&quot;T:System.Configuration.PropertyInformationCollection&quot; /&gt;.">Objet <see cref="T:System.Collections.IEnumerator" /> qui est utilisé pour itérer au sein de ce <see cref="T:System.Configuration.PropertyInformationCollection" />.</returns>
    </member>
    <member name="M:System.Configuration.PropertyInformationCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Remplit un objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> avec les données nécessaires pour sérialiser l'instance de <see cref="T:System.Configuration.PropertyInformationCollection" />.</summary>
      <param name="info">Objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> qui contient les informations nécessaires à la sérialisation de l'instance de <see cref="T:System.Configuration.PropertyInformationCollection" />.</param>
      <param name="context">Objet <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui contient la source et la destination du flux sérialisé associé à l'instance de <see cref="T:System.Configuration.PropertyInformationCollection" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> est <see langword="null" />.</exception>
    </member>
    <member name="P:System.Configuration.PropertyInformationCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Configuration.PropertyInformation&quot; /&gt; object in the collection, based on the specified property name.">Obtient l'objet <see cref="T:System.Configuration.PropertyInformation" /> de la collection, à partir du nom de propriété spécifié.</summary>
      <param name="propertyName" vsli:raw="The name of the configuration attribute contained in the &lt;see cref=&quot;T:System.Configuration.PropertyInformationCollection&quot; /&gt; object.">Nom de l’attribut de configuration contenu dans l’objet <see cref="T:System.Configuration.PropertyInformationCollection" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.PropertyInformation&quot; /&gt; object.">Objet <see cref="T:System.Configuration.PropertyInformation" />.</returns>
    </member>
    <member name="T:System.Configuration.PropertyValueOrigin">
      <summary vsli:raw="Specifies the level in the configuration hierarchy where a configuration property value originated.">Spécifie le niveau dans la hiérarchie de configuration d’où provient une valeur de propriété de configuration.</summary>
    </member>
    <member name="F:System.Configuration.PropertyValueOrigin.Default">
      <summary vsli:raw="The configuration property value originates from the &lt;see cref=&quot;P:System.Configuration.ConfigurationProperty.DefaultValue&quot; /&gt; property.">La valeur de la propriété de configuration provient de la propriété <see cref="P:System.Configuration.ConfigurationProperty.DefaultValue" />.</summary>
    </member>
    <member name="F:System.Configuration.PropertyValueOrigin.Inherited">
      <summary vsli:raw="The configuration property value is inherited from a parent level in the configuration.">La valeur de la propriété de configuration est héritée d’un niveau parent dans la configuration.</summary>
    </member>
    <member name="F:System.Configuration.PropertyValueOrigin.SetHere">
      <summary vsli:raw="The configuration property value is defined at the current level of the hierarchy.">La valeur de la propriété de configuration est définie au niveau actuel de la hiérarchie.</summary>
    </member>
    <member name="T:System.Configuration.ProtectedConfiguration">
      <summary vsli:raw="Provides access to the protected-configuration providers for the current application's configuration file.">Permet d’accéder aux fournisseurs de configuration protégée pour le fichier de configuration de l’application actuelle.</summary>
    </member>
    <member name="F:System.Configuration.ProtectedConfiguration.DataProtectionProviderName">
      <summary vsli:raw="The name of the data protection provider.">Nom du fournisseur de protection des données.</summary>
    </member>
    <member name="P:System.Configuration.ProtectedConfiguration.DefaultProvider">
      <summary vsli:raw="Gets the name of the default protected-configuration provider.">Obtient le nom du fournisseur de configuration protégée par défaut.</summary>
      <returns vsli:raw="The name of the default protected-configuration provider.">Nom du fournisseur de configuration protégée par défaut.</returns>
    </member>
    <member name="F:System.Configuration.ProtectedConfiguration.ProtectedDataSectionName">
      <summary vsli:raw="The name of the protected data section.">Nom de la section de données protégées.</summary>
    </member>
    <member name="P:System.Configuration.ProtectedConfiguration.Providers">
      <summary vsli:raw="Gets a collection of the installed protected-configuration providers.">Obtient une collection de fournisseurs de configuration protégée installés.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationProviderCollection&quot; /&gt; collection of installed &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationProvider&quot; /&gt; objects.">Collection <see cref="T:System.Configuration.ProtectedConfigurationProviderCollection" /> d'objets <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> installés.</returns>
    </member>
    <member name="F:System.Configuration.ProtectedConfiguration.RsaProviderName">
      <summary vsli:raw="The name of the RSA provider.">Nom du fournisseur RSA.</summary>
    </member>
    <member name="T:System.Configuration.ProtectedConfigurationProvider">
      <summary vsli:raw="The base class to create providers for encrypting and decrypting protected configuration data.">Constitue la classe de base permettant de créer des fournisseurs pour le chiffrement et le déchiffrement des données de configuration protégée.</summary>
    </member>
    <member name="M:System.Configuration.ProtectedConfigurationProvider.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationProvider&quot; /&gt; class using default settings.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> en utilisant les paramètres par défaut.</summary>
    </member>
    <member name="M:System.Configuration.ProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)">
      <summary vsli:raw="Decrypts the passed &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object from a configuration file.">Déchiffre l’objet <see cref="T:System.Xml.XmlNode" /> passé à partir d’un fichier de configuration.</summary>
      <param name="encryptedNode" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object to decrypt.">Objet <see cref="T:System.Xml.XmlNode" /> à déchiffrer.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object containing decrypted data.">Objet <see cref="T:System.Xml.XmlNode" /> contenant des données déchiffrées.</returns>
    </member>
    <member name="M:System.Configuration.ProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)">
      <summary vsli:raw="Encrypts the passed &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object from a configuration file.">Chiffre l’objet <see cref="T:System.Xml.XmlNode" /> passé à partir d’un fichier de configuration.</summary>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object to encrypt.">Objet <see cref="T:System.Xml.XmlNode" /> à chiffrer.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object containing encrypted data.">Objet <see cref="T:System.Xml.XmlNode" /> contenant des données chiffrées.</returns>
    </member>
    <member name="T:System.Configuration.ProtectedConfigurationProviderCollection">
      <summary vsli:raw="Provides a collection of &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationProvider&quot; /&gt; objects.">Fournit une collection d’objets <see cref="T:System.Configuration.ProtectedConfigurationProvider" />.</summary>
    </member>
    <member name="M:System.Configuration.ProtectedConfigurationProviderCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationProviderCollection&quot; /&gt; class using default settings.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ProtectedConfigurationProviderCollection" /> en utilisant les paramètres par défaut.</summary>
    </member>
    <member name="M:System.Configuration.ProtectedConfigurationProviderCollection.Add(System.Configuration.Provider.ProviderBase)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationProvider&quot; /&gt; object to the collection.">Ajoute un objet <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> à la collection.</summary>
      <param name="provider" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationProvider&quot; /&gt; object to add to the collection.">Objet <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> à ajouter à la collection.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;provider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="provider" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;provider&quot; /&gt; is not a &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationProvider&quot; /&gt; object.">
        <paramref name="provider" /> n’est pas un objet <see cref="T:System.Configuration.ProtectedConfigurationProvider" />.</exception>
      <exception cref="T:System.Configuration.ConfigurationException" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationProvider&quot; /&gt; object to add already exists in the collection.  &#xA;  &#xA;-or-&#xA;  &#xA; The collection is read-only.">L’objet <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> à ajouter existe déjà dans la collection.  

ou - 
La collection est en lecture seule.</exception>
    </member>
    <member name="P:System.Configuration.ProtectedConfigurationProviderCollection.Item(System.String)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationProvider&quot; /&gt; object in the collection with the specified name.">Obtient un objet <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> de la collection portant le nom spécifié.</summary>
      <param name="name" vsli:raw="The name of a &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationProvider&quot; /&gt; object in the collection.">Nom d’un objet <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> de la collection.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationProvider&quot; /&gt; object with the specified name, or &lt;see langword=&quot;null&quot; /&gt; if there is no object with that name.">Objet <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> portant le nom spécifié, ou <see langword="null" /> s'il n'y a aucun objet portant ce nom.</returns>
    </member>
    <member name="T:System.Configuration.ProtectedConfigurationSection">
      <summary vsli:raw="Provides programmatic access to the &lt;see langword=&quot;configProtectedData&quot; /&gt; configuration section. This class cannot be inherited.">Fournit l’accès par programmation à la section de configuration <see langword="configProtectedData" />. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.ProtectedConfigurationSection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationSection&quot; /&gt; class using default settings.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ProtectedConfigurationSection" /> en utilisant les paramètres par défaut.</summary>
    </member>
    <member name="P:System.Configuration.ProtectedConfigurationSection.DefaultProvider">
      <summary vsli:raw="Gets or sets the name of the default &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationProvider&quot; /&gt; object in the &lt;see cref=&quot;P:System.Configuration.ProtectedConfigurationSection.Providers&quot; /&gt; collection property.">Obtient ou définit le nom de l’objet <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> par défaut dans la propriété de collection <see cref="P:System.Configuration.ProtectedConfigurationSection.Providers" />.</summary>
      <returns vsli:raw="The name of the default &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationProvider&quot; /&gt; object in the &lt;see cref=&quot;P:System.Configuration.ProtectedConfigurationSection.Providers&quot; /&gt; collection property.">Nom de l'objet <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> par défaut dans la propriété de la collection <see cref="P:System.Configuration.ProtectedConfigurationSection.Providers" />.</returns>
    </member>
    <member name="P:System.Configuration.ProtectedConfigurationSection.Providers">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Configuration.ProviderSettingsCollection&quot; /&gt; collection of all the &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationProvider&quot; /&gt; objects in all participating configuration files.">Obtient une collection <see cref="T:System.Configuration.ProviderSettingsCollection" /> de tous les objets <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> dans tous les fichiers de configuration concernés.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ProviderSettingsCollection&quot; /&gt; collection of all the &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationProvider&quot; /&gt; objects in all participating configuration files.">Collection <see cref="T:System.Configuration.ProviderSettingsCollection" /> de tous les objets <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> dans tous les fichiers de configuration concernés.</returns>
    </member>
    <member name="T:System.Configuration.ProtectedProviderSettings">
      <summary vsli:raw="Represents a group of configuration elements that configure the providers for the &lt;see langword=&quot;&amp;lt;configProtectedData&amp;gt;&quot; /&gt; configuration section.">Représente un groupe d’éléments de configuration qui configurent les fournisseurs pour la section de configuration <see langword="&lt;configProtectedData&gt;" />.</summary>
    </member>
    <member name="M:System.Configuration.ProtectedProviderSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ProtectedProviderSettings&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ProtectedProviderSettings" />.</summary>
    </member>
    <member name="P:System.Configuration.ProtectedProviderSettings.Properties">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Configuration.ConfigurationPropertyCollection&quot; /&gt; collection that represents the properties of the providers for the protected configuration data.">Obtient une collection <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> qui représente les propriétés des fournisseurs des données de configuration protégées.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConfigurationPropertyCollection&quot; /&gt; that represents the properties of the providers for the protected configuration data.">
        <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> qui représente les propriétés des fournisseurs des données de configuration protégées.</returns>
    </member>
    <member name="P:System.Configuration.ProtectedProviderSettings.Providers">
      <summary vsli:raw="Gets a collection of &lt;see cref=&quot;T:System.Configuration.ProviderSettings&quot; /&gt; objects that represent the properties of the providers for the protected configuration data.">Obtient une collection d’objets <see cref="T:System.Configuration.ProviderSettings" /> qui représentent les propriétés des fournisseurs des données de configuration protégées.</summary>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Configuration.ProviderSettings&quot; /&gt; objects that represent the properties of the providers for the protected configuration data.">Collection d'objets <see cref="T:System.Configuration.ProviderSettings" /> qui représentent les propriétés des fournisseurs des données de configuration protégées.</returns>
    </member>
    <member name="T:System.Configuration.Provider.ProviderBase">
      <summary vsli:raw="Provides a base implementation for the extensible provider model.">Fournit une implémentation de base pour le modèle de fournisseur extensible.</summary>
    </member>
    <member name="M:System.Configuration.Provider.ProviderBase.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.Provider.ProviderBase&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.Provider.ProviderBase" />.</summary>
    </member>
    <member name="P:System.Configuration.Provider.ProviderBase.Description">
      <summary vsli:raw="Gets a brief, friendly description suitable for display in administrative tools or other user interfaces (UIs).">Obtient une description brève et conviviale qui peut s'afficher dans les outils d'administration ou d'autres interfaces utilisateur.</summary>
      <returns vsli:raw="A brief, friendly description suitable for display in administrative tools or other UIs.">Description brève et conviviale qui peut s'afficher dans les outils d'administration ou d'autres interfaces utilisateur.</returns>
    </member>
    <member name="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary vsli:raw="Initializes the configuration builder.">Initialise le générateur de configuration.</summary>
      <param name="name" vsli:raw="The friendly name of the provider.">Nom convivial du fournisseur.</param>
      <param name="config" vsli:raw="A collection of the name/value pairs representing the provider-specific attributes specified in the configuration for this provider.">Collection des paires nom/valeur qui représentent les attributs spécifiques au fournisseur spécifiés dans la configuration pour ce fournisseur.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The name of the provider is &lt;see langword=&quot;null&quot; /&gt;.">Le nom du fournisseur est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The name of the provider has a length of zero.">La longueur du nom du fournisseur est égale à zéro.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt is made to call &lt;see cref=&quot;M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)&quot; /&gt; on a provider after the provider has already been initialized.">Tentative d’appel de <see cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" /> sur un fournisseur après que celui-ci a déjà été initialisé.</exception>
    </member>
    <member name="P:System.Configuration.Provider.ProviderBase.Name">
      <summary vsli:raw="Gets the friendly name used to refer to the provider during configuration.">Obtient le nom convivial qui référence le fournisseur au cours de la configuration.</summary>
      <returns vsli:raw="The friendly name used to refer to the provider during configuration.">Nom convivial qui référence le fournisseur au cours de la configuration.</returns>
    </member>
    <member name="T:System.Configuration.Provider.ProviderCollection">
      <summary vsli:raw="Represents a collection of provider objects that inherit from &lt;see cref=&quot;T:System.Configuration.Provider.ProviderBase&quot; /&gt;.">Représente une collection des objets fournisseur qui héritent de <see cref="T:System.Configuration.Provider.ProviderBase" />.</summary>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.Provider.ProviderCollection&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.Provider.ProviderCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.Add(System.Configuration.Provider.ProviderBase)">
      <summary vsli:raw="Adds a provider to the collection.">Ajoute un fournisseur à la collection.</summary>
      <param name="provider" vsli:raw="The provider to be added.">Fournisseur à ajouter.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">La collection est en lecture seule.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;provider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="provider" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Configuration.Provider.ProviderBase.Name&quot; /&gt; of &lt;paramref name=&quot;provider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; The length of the &lt;see cref=&quot;P:System.Configuration.Provider.ProviderBase.Name&quot; /&gt; of &lt;paramref name=&quot;provider&quot; /&gt; is less than 1.">Le <see cref="P:System.Configuration.Provider.ProviderBase.Name" /> du <paramref name="provider" /> est <see langword="null" />.  

ou - 
La longueur du <see cref="P:System.Configuration.Provider.ProviderBase.Name" /> de <paramref name="provider" /> est inférieure à 1.</exception>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.Clear">
      <summary vsli:raw="Removes all items from the collection.">Supprime tous les éléments de la collection.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is set to read-only.">La collection est définie en lecture seule.</exception>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.CopyTo(System.Configuration.Provider.ProviderBase[],System.Int32)">
      <summary vsli:raw="Copies the contents of the collection to the given array starting at the specified index.">Copie le contenu de la collection dans le tableau donné en commençant à l'index spécifié.</summary>
      <param name="array" vsli:raw="The array to copy the elements of the collection to.">Tableau dans lequel copier les éléments de la collection.</param>
      <param name="index" vsli:raw="The index of the collection item at which to start the copying process.">Index de l'élément de collection à partir duquel commencer la copie.</param>
    </member>
    <member name="P:System.Configuration.Provider.ProviderCollection.Count">
      <summary vsli:raw="Gets the number of providers in the collection.">Obtient le nombre de fournisseurs contenus dans la collection.</summary>
      <returns vsli:raw="The number of providers in the collection.">Nombre de fournisseurs contenus dans la collection.</returns>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.GetEnumerator">
      <summary vsli:raw="Returns an object that implements the &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; interface to iterate through the collection.">Retourne un objet qui implémente l'interface <see cref="T:System.Collections.IEnumerator" /> à itérer au sein de la collection.</summary>
      <returns vsli:raw="An object that implements &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; to iterate through the collection.">Objet qui implémente <see cref="T:System.Collections.IEnumerator" /> à itérer au sein de la collection.</returns>
    </member>
    <member name="P:System.Configuration.Provider.ProviderCollection.IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the collection is synchronized (thread safe).">Obtient une valeur indiquant si l’accès à la collection est synchronisé (thread-safe).</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; in all cases.">
        <see langword="false" /> dans tous les cas.</returns>
    </member>
    <member name="P:System.Configuration.Provider.ProviderCollection.Item(System.String)">
      <summary vsli:raw="Gets the provider with the specified name.">Obtient le fournisseur avec le nom spécifié.</summary>
      <param name="name" vsli:raw="The key by which the provider is identified.">Clé grâce à laquelle le fournisseur est identifié.</param>
      <returns vsli:raw="The provider with the specified name.">Fournisseur portant le nom spécifié.</returns>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.Remove(System.String)">
      <summary vsli:raw="Removes a provider from the collection.">Supprime un fournisseur de la collection.</summary>
      <param name="name" vsli:raw="The name of the provider to be removed.">Nom du fournisseur à supprimer.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection has been set to read-only.">La collection a été définie en lecture seule.</exception>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.SetReadOnly">
      <summary vsli:raw="Sets the collection to be read-only.">Met la collection en lecture seule.</summary>
    </member>
    <member name="P:System.Configuration.Provider.ProviderCollection.SyncRoot">
      <summary vsli:raw="Gets the current object.">Obtient l'objet en cours.</summary>
      <returns vsli:raw="The current object.">Objet actif.</returns>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Configuration.Provider.ProviderCollection&quot; /&gt; to an array, starting at a particular array index.">Copie les éléments d'<see cref="T:System.Configuration.Provider.ProviderCollection" /> dans un tableau, en commençant au niveau d'un index de tableau particulier.</summary>
      <param name="array" vsli:raw="The array to copy the elements of the collection to.">Tableau dans lequel copier les éléments de la collection.</param>
      <param name="index" vsli:raw="The index of the array at which to start copying provider instances from the collection.">Index du tableau dans lequel commencer la copie des instances de fournisseur de la collection.</param>
    </member>
    <member name="T:System.Configuration.Provider.ProviderException">
      <summary vsli:raw="The exception that is thrown when a configuration provider error has occurred. This exception class is also used by providers to throw exceptions when internal errors occur within the provider that do not map to other pre-existing exception classes.">Exception levée lorsqu'une erreur de fournisseur de configuration s'est produite. Cette classe d'exception est également utilisée par les fournisseurs pour lever des exceptions lorsque des erreurs internes se produisent dans le fournisseur qui ne sont pas mappées à d'autres classes d'exception préexistantes.</summary>
    </member>
    <member name="M:System.Configuration.Provider.ProviderException.#ctor">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Configuration.Provider.ProviderException&quot; /&gt; class.">Crée une instance de la classe <see cref="T:System.Configuration.Provider.ProviderException" />.</summary>
    </member>
    <member name="M:System.Configuration.Provider.ProviderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Configuration.Provider.ProviderException&quot; /&gt; class.">Crée une instance de la classe <see cref="T:System.Configuration.Provider.ProviderException" />.</summary>
      <param name="info" vsli:raw="The object that holds the information to deserialize.">Objet qui contient les informations à désérialiser.</param>
      <param name="context" vsli:raw="Contextual information about the source or destination.">Informations contextuelles sur la source ou la destination.</param>
    </member>
    <member name="M:System.Configuration.Provider.ProviderException.#ctor(System.String)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Configuration.Provider.ProviderException&quot; /&gt; class.">Crée une instance de la classe <see cref="T:System.Configuration.Provider.ProviderException" />.</summary>
      <param name="message" vsli:raw="A message describing why this &lt;see cref=&quot;T:System.Configuration.Provider.ProviderException&quot; /&gt; was thrown.">Message qui décrit pourquoi <see cref="T:System.Configuration.Provider.ProviderException" /> a été levé.</param>
    </member>
    <member name="M:System.Configuration.Provider.ProviderException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Configuration.Provider.ProviderException&quot; /&gt; class.">Crée une instance de la classe <see cref="T:System.Configuration.Provider.ProviderException" />.</summary>
      <param name="message" vsli:raw="A message describing why this &lt;see cref=&quot;T:System.Configuration.Provider.ProviderException&quot; /&gt; was thrown.">Message qui décrit pourquoi <see cref="T:System.Configuration.Provider.ProviderException" /> a été levé.</param>
      <param name="innerException" vsli:raw="The exception that caused this &lt;see cref=&quot;T:System.Configuration.Provider.ProviderException&quot; /&gt; to be thrown.">Exception qui a provoqué la levée de cette exception <see cref="T:System.Configuration.Provider.ProviderException" />.</param>
    </member>
    <member name="T:System.Configuration.ProviderSettings">
      <summary vsli:raw="Represents the configuration elements associated with a provider.">Représente les éléments de configuration associés à un fournisseur.</summary>
    </member>
    <member name="M:System.Configuration.ProviderSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ProviderSettings&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ProviderSettings" />.</summary>
    </member>
    <member name="M:System.Configuration.ProviderSettings.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ProviderSettings&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ProviderSettings" />.</summary>
      <param name="name" vsli:raw="The name of the provider to configure settings for.">Le nom du fournisseur pour lequel configurer des paramètres.</param>
      <param name="type" vsli:raw="The type of the provider to configure settings for.">Le type du fournisseur pour lequel configurer des paramètres.</param>
    </member>
    <member name="P:System.Configuration.ProviderSettings.Name">
      <summary vsli:raw="Gets or sets the name of the provider configured by this class.">Obtient ou définit le nom du fournisseur configuré par cette classe.</summary>
      <returns vsli:raw="The name of the provider.">Nom du fournisseur.</returns>
    </member>
    <member name="P:System.Configuration.ProviderSettings.Parameters">
      <summary vsli:raw="Gets a collection of user-defined parameters for the provider.">Obtient une collection de paramètres définis par l'utilisateur pour le fournisseur.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Specialized.NameValueCollection&quot; /&gt; of parameters for the provider.">
        <see cref="T:System.Collections.Specialized.NameValueCollection" /> de paramètres pour le fournisseur.</returns>
    </member>
    <member name="P:System.Configuration.ProviderSettings.Type">
      <summary vsli:raw="Gets or sets the type of the provider configured by this class.">Obtient ou définit le type du fournisseur configuré par cette classe.</summary>
      <returns vsli:raw="The fully qualified namespace and class name for the type of provider configured by this &lt;see cref=&quot;T:System.Configuration.ProviderSettings&quot; /&gt; instance.">Le nom de la classe et l'espace de noms qualifiés complets pour le type de fournisseur configuré par cette instance de <see cref="T:System.Configuration.ProviderSettings" />.</returns>
    </member>
    <member name="T:System.Configuration.ProviderSettingsCollection">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Configuration.ProviderSettings&quot; /&gt; objects.">Représente une collection d'objets <see cref="T:System.Configuration.ProviderSettings" />.</summary>
    </member>
    <member name="M:System.Configuration.ProviderSettingsCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ProviderSettingsCollection&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ProviderSettingsCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.ProviderSettingsCollection.Add(System.Configuration.ProviderSettings)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Configuration.ProviderSettings&quot; /&gt; object to the collection.">Ajoute un objet <see cref="T:System.Configuration.ProviderSettings" /> à la collection.</summary>
      <param name="provider" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ProviderSettings&quot; /&gt; object to add.">Objet <see cref="T:System.Configuration.ProviderSettings" /> à ajouter.</param>
    </member>
    <member name="M:System.Configuration.ProviderSettingsCollection.Clear">
      <summary vsli:raw="Clears the collection.">Efface la collection.</summary>
    </member>
    <member name="P:System.Configuration.ProviderSettingsCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets a value at the specified index in the &lt;see cref=&quot;T:System.Configuration.ProviderSettingsCollection&quot; /&gt; collection.">Obtient ou définit une valeur à l’index spécifié dans la collection <see cref="T:System.Configuration.ProviderSettingsCollection" />.</summary>
      <param name="index" vsli:raw="The index of the &lt;see cref=&quot;T:System.Configuration.ProviderSettings&quot; /&gt; to return.">Index du <see cref="T:System.Configuration.ProviderSettings" /> à retourner.</param>
      <returns vsli:raw="The specified &lt;see cref=&quot;T:System.Configuration.ProviderSettings&quot; /&gt;.">
        <see cref="T:System.Configuration.ProviderSettings" /> spécifié.</returns>
    </member>
    <member name="P:System.Configuration.ProviderSettingsCollection.Item(System.String)">
      <summary vsli:raw="Gets an item from the collection.">Obtient un élément de la collection.</summary>
      <param name="key" vsli:raw="A string reference to the &lt;see cref=&quot;T:System.Configuration.ProviderSettings&quot; /&gt; object within the collection.">Référence de chaîne à l’objet <see cref="T:System.Configuration.ProviderSettings" /> dans la collection.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ProviderSettings&quot; /&gt; object contained in the collection.">Objet <see cref="T:System.Configuration.ProviderSettings" /> contenu dans la collection.</returns>
    </member>
    <member name="M:System.Configuration.ProviderSettingsCollection.Remove(System.String)">
      <summary vsli:raw="Removes an element from the collection.">Supprime un élément de la collection.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.ProviderSettings&quot; /&gt; object to remove.">Nom de l’objet <see cref="T:System.Configuration.ProviderSettings" /> à supprimer.</param>
    </member>
    <member name="T:System.Configuration.RegexStringValidator">
      <summary vsli:raw="Provides validation of a string based on the rules provided by a regular expression.">Fournit la validation d'une chaîne selon les règles fournies par une expression régulière.</summary>
    </member>
    <member name="M:System.Configuration.RegexStringValidator.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.RegexStringValidator&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.RegexStringValidator" />.</summary>
      <param name="regex" vsli:raw="A string that specifies a regular expression.">Chaîne qui spécifie une expression régulière.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;regex&quot; /&gt; is null or an empty string (&quot;&quot;).">
        <paramref name="regex" /> est null ou une chaîne vide ("").</exception>
    </member>
    <member name="M:System.Configuration.RegexStringValidator.CanValidate(System.Type)">
      <summary vsli:raw="Determines whether the type of the object can be validated.">Détermine si le type de l'objet peut être validé.</summary>
      <param name="type" vsli:raw="The type of object.">Type d'objet.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter matches a string; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le paramètre <paramref name="type" /> correspond à une chaîne ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.RegexStringValidator.Validate(System.Object)">
      <summary vsli:raw="Determines whether the value of an object is valid.">Détermine si la valeur d’un objet est valide.</summary>
      <param name="value" vsli:raw="The value of an object.">Valeur d’un objet.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; does not conform to the parameters of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; class.">
        <paramref name="value" /> n'est pas conforme aux paramètres de la classe <see cref="T:System.Text.RegularExpressions.Regex" />.</exception>
    </member>
    <member name="T:System.Configuration.RegexStringValidatorAttribute">
      <summary vsli:raw="Declaratively instructs .NET to perform string validation on a configuration property using a regular expression. This class cannot be inherited.">Demande de façon déclarative au .NET Framework d’effectuer la validation de chaîne sur une propriété de configuration à l’aide d’une expression régulière. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.RegexStringValidatorAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.RegexStringValidatorAttribute&quot; /&gt; object.">Initialise une nouvelle instance de l'objet <see cref="T:System.Configuration.RegexStringValidatorAttribute" />.</summary>
      <param name="regex" vsli:raw="The string to use for regular expression validation.">Chaîne à utiliser pour la validation d’expressions régulières.</param>
    </member>
    <member name="P:System.Configuration.RegexStringValidatorAttribute.Regex">
      <summary vsli:raw="Gets the string used to perform regular-expression validation.">Obtient la chaîne utilisée pour effectuer la validation d’expressions régulières.</summary>
      <returns vsli:raw="The string containing the regular expression used to filter the string assigned to the decorated configuration-element property.">Chaîne contenant l'expression régulière utilisée pour filtrer la chaîne assignée à la propriété décorée de l'élément de configuration.</returns>
    </member>
    <member name="P:System.Configuration.RegexStringValidatorAttribute.ValidatorInstance">
      <summary vsli:raw="Gets an instance of the &lt;see cref=&quot;T:System.Configuration.RegexStringValidator&quot; /&gt; class.">Obtient une instance de la classe <see cref="T:System.Configuration.RegexStringValidator" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorBase&quot; /&gt; validator instance.">Instance du validateur <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</returns>
    </member>
    <member name="T:System.Configuration.RsaProtectedConfigurationProvider">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationProvider&quot; /&gt; instance that uses RSA encryption to encrypt and decrypt configuration data.">Fournit une instance <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> qui utilise le chiffrement RSA pour chiffrer et déchiffrer les données de configuration.</summary>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.RsaProtectedConfigurationProvider&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.RsaProtectedConfigurationProvider" />.</summary>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.AddKey(System.Int32,System.Boolean)">
      <summary vsli:raw="Adds a key to the RSA key container.">Ajoute une clé au conteneur de clé RSA.</summary>
      <param name="keySize" vsli:raw="The size of the key to add.">Taille de la clé à ajouter.</param>
      <param name="exportable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the key is exportable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour indiquer que la clé est exportable ; sinon, <see langword="false" />.</param>
    </member>
    <member name="P:System.Configuration.RsaProtectedConfigurationProvider.CspProviderName">
      <summary vsli:raw="Gets the name of the Windows cryptography API (crypto API) cryptographic service provider (CSP).">Obtient le nom du fournisseur de services de chiffrement (CPS) d'API de chiffrement Windows.</summary>
      <returns vsli:raw="The name of the CryptoAPI cryptographic service provider.">Nom du fournisseur de services de chiffrement CryptoAPI.</returns>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)">
      <summary vsli:raw="Decrypts the XML node passed to it.">Déchiffre le nœud XML qui lui est passé.</summary>
      <param name="encryptedNode" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; to decrypt.">
        <see cref="T:System.Xml.XmlNode" /> à déchiffrer.</param>
      <returns vsli:raw="The decrypted XML node.">Nœud XML déchiffré.</returns>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.DeleteKey">
      <summary vsli:raw="Removes a key from the RSA key container.">Supprime une clé du conteneur de clé RSA.</summary>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)">
      <summary vsli:raw="Encrypts the XML node passed to it.">Chiffre le nœud XML qui lui est passé.</summary>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; to encrypt.">
        <see cref="T:System.Xml.XmlNode" /> à chiffrer.</param>
      <returns vsli:raw="An encrypted &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object.">Objet <see cref="T:System.Xml.XmlNode" /> chiffré.</returns>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.ExportKey(System.String,System.Boolean)">
      <summary vsli:raw="Exports an RSA key from the key container.">Exporte une clé RSA à partir du conteneur de clé.</summary>
      <param name="xmlFileName" vsli:raw="The file name and path to export the key to.">Nom et chemin d'accès du fichier vers lequel exporter la clé.</param>
      <param name="includePrivateParameters" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that private parameters are exported; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour indiquer que des paramètres privés sont exportés ; sinon, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is a zero-length string, contains only white space, or contains one or more invalid characters as defined by &lt;see cref=&quot;F:System.IO.Path.InvalidPathChars&quot; /&gt;.">
        <paramref name="path" /> est une chaîne de longueur nulle, contient seulement un espace, ou contient un ou plusieurs caractères non valides définis par <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="path" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The specified path, file name, or both exceed the system-defined maximum length.">Le chemin et/ou le nom de fichier spécifiés dépassent la longueur maximale définie par le système.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The specified path is invalid, such as being on an unmapped drive.">Le chemin spécifié n’est pas valide, par exemple si l’emplacement est un lecteur non mappé.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="An error occurred while opening the file.">Une erreur s’est produite lors de l’ouverture du fichier.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; specified a file that is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; This operation is not supported on the current platform.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;path&quot; /&gt; specified a directory.  &#xA;  &#xA; -or-  &#xA;  &#xA; The caller does not have the required permission.">
        <paramref name="path" /> a spécifié un fichier qui est en lecture seule.  
ou 
Cette opération n'est pas prise en charge sur la plateforme actuelle.  
ou 
 <paramref name="path" /> a spécifié un répertoire.  

ou - 
L'appelant n'a pas l'autorisation requise.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file specified in &lt;paramref name=&quot;path&quot; /&gt; was not found.">Le fichier spécifié dans <paramref name="path" /> est introuvable.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is in an invalid format.">
        <paramref name="path" /> a un format non valide.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">L'appelant n'a pas l'autorisation requise.</exception>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.ImportKey(System.String,System.Boolean)">
      <summary vsli:raw="Imports an RSA key into the key container.">Importe une clé RSA dans le conteneur de clé.</summary>
      <param name="xmlFileName" vsli:raw="The file name and path to import the key from.">Nom et chemin d'accès du fichier à partir duquel importer la clé.</param>
      <param name="exportable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the key is exportable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour indiquer que la clé est exportable ; sinon, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is a zero-length string, contains only white space, or contains one or more invalid characters as defined by &lt;see cref=&quot;F:System.IO.Path.InvalidPathChars&quot; /&gt;.">
        <paramref name="path" /> est une chaîne de longueur nulle, contient seulement un espace, ou contient un ou plusieurs caractères non valides définis par <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="path" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The specified path, file name, or both exceed the system-defined maximum length.">Le chemin et/ou le nom de fichier spécifiés dépassent la longueur maximale définie par le système.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The specified path is invalid, such as being on an unmapped drive.">Le chemin spécifié n’est pas valide, par exemple si l’emplacement est un lecteur non mappé.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="An error occurred while opening the file.">Une erreur s’est produite lors de l’ouverture du fichier.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; specified a file that is write-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; This operation is not supported on the current platform.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;path&quot; /&gt; specified a directory.  &#xA;  &#xA; -or-  &#xA;  &#xA; The caller does not have the required permission.">
        <paramref name="path" /> a spécifié un fichier qui est en écriture seule.  
ou 
Cette opération n'est pas prise en charge sur la plateforme actuelle.  
ou 
 <paramref name="path" /> a spécifié un répertoire.  

ou - 
L'appelant n'a pas l'autorisation requise.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file specified in &lt;paramref name=&quot;path&quot; /&gt; was not found.">Le fichier spécifié dans <paramref name="path" /> est introuvable.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is in an invalid format.">
        <paramref name="path" /> a un format non valide.</exception>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Initialise le fournisseur avec les paramètres par défaut.</summary>
      <param name="name">Nom du fournisseur à utiliser pour l'objet.</param>
      <param name="configurationValues">Collection <see cref="T:System.Collections.Specialized.NameValueCollection" /> de valeurs à utiliser lors de l'initialisation de l'objet.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="configurationValues" /> comprend une ou plusieurs valeurs non reconnues.</exception>
    </member>
    <member name="P:System.Configuration.RsaProtectedConfigurationProvider.KeyContainerName">
      <summary vsli:raw="Gets the name of the key container.">Obtient le nom du conteneur de clé.</summary>
      <returns vsli:raw="The name of the key container.">Nom du conteneur de clé.</returns>
    </member>
    <member name="P:System.Configuration.RsaProtectedConfigurationProvider.RsaPublicKey">
      <summary vsli:raw="Gets the public key used by the provider.">Obtient la clé publique utilisée par le fournisseur.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Security.Cryptography.RSAParameters&quot; /&gt; object that contains the public key used by the provider.">Objet <see cref="T:System.Security.Cryptography.RSAParameters" /> qui contient la clé publique utilisée par le fournisseur.</returns>
    </member>
    <member name="P:System.Configuration.RsaProtectedConfigurationProvider.UseFIPS">
      <summary vsli:raw="Gets a value indicating whether the provider uses FIPS.">Obtient une valeur indiquant si le fournisseur utilise FIPS.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the provider uses FIPS; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le fournisseur utilise FIPS ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.RsaProtectedConfigurationProvider.UseMachineContainer">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Configuration.RsaProtectedConfigurationProvider&quot; /&gt; object is using the machine key container.">Obtient une valeur indiquant si l'objet <see cref="T:System.Configuration.RsaProtectedConfigurationProvider" /> utilise le conteneur de clé d'ordinateur.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Configuration.RsaProtectedConfigurationProvider&quot; /&gt; object is using the machine key container; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet <see cref="T:System.Configuration.RsaProtectedConfigurationProvider" /> utilise le conteneur de clé d'ordinateur ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.RsaProtectedConfigurationProvider.UseOAEP">
      <summary vsli:raw="Gets a value that indicates whether the provider is using Optimal Asymmetric Encryption Padding (OAEP) key exchange data.">Obtient une valeur indiquant si le fournisseur utilise des données d'échange de clé OAEP (Optimal Asymmetric Encryption Padding).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Configuration.RsaProtectedConfigurationProvider&quot; /&gt; object is using Optimal Asymmetric Encryption Padding (OAEP) key exchange data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet <see cref="T:System.Configuration.RsaProtectedConfigurationProvider" /> utilise des données d'échange de clé OAEP (Optimal Asymmetric Encryption Padding) ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Configuration.SchemeSettingElement">
      <summary vsli:raw="Represents an element in a &lt;see cref=&quot;T:System.Configuration.SchemeSettingElementCollection&quot; /&gt; class.">Représente un élément dans une classe <see cref="T:System.Configuration.SchemeSettingElementCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.SchemeSettingElement.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SchemeSettingElement&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SchemeSettingElement" />.</summary>
    </member>
    <member name="P:System.Configuration.SchemeSettingElement.GenericUriParserOptions">
      <summary vsli:raw="Gets the value of the GenericUriParserOptions entry from a &lt;see cref=&quot;T:System.Configuration.SchemeSettingElement&quot; /&gt; instance.">Obtient la valeur de l’entrée GenericUriParserOptions à partir d’une instance de <see cref="T:System.Configuration.SchemeSettingElement" />.</summary>
      <returns vsli:raw="The value of GenericUriParserOptions entry.">Valeur de l'entrée GenericUriParserOptions.</returns>
    </member>
    <member name="P:System.Configuration.SchemeSettingElement.Name">
      <summary vsli:raw="Gets the value of the Name entry from a &lt;see cref=&quot;T:System.Configuration.SchemeSettingElement&quot; /&gt; instance.">Obtient la valeur de l’entrée Name à partir d’une instance de <see cref="T:System.Configuration.SchemeSettingElement" />.</summary>
      <returns vsli:raw="The protocol used by this schema setting.">Protocole utilisé par ce paramètre de schéma.</returns>
    </member>
    <member name="T:System.Configuration.SchemeSettingElementCollection">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Configuration.SchemeSettingElement&quot; /&gt; objects.">Représente une collection d'objets <see cref="T:System.Configuration.SchemeSettingElement" />.</summary>
    </member>
    <member name="M:System.Configuration.SchemeSettingElementCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SchemeSettingElementCollection&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SchemeSettingElementCollection" />.</summary>
    </member>
    <member name="P:System.Configuration.SchemeSettingElementCollection.CollectionType">
      <summary vsli:raw="Gets the default collection type of &lt;see cref=&quot;T:System.Configuration.SchemeSettingElementCollection&quot; /&gt;.">Obtient le type de collection par défaut de <see cref="T:System.Configuration.SchemeSettingElementCollection" />.</summary>
      <returns vsli:raw="The default collection type of &lt;see cref=&quot;T:System.Configuration.SchemeSettingElementCollection&quot; /&gt;.">Type de collection par défaut de <see cref="T:System.Configuration.SchemeSettingElementCollection" />.</returns>
    </member>
    <member name="M:System.Configuration.SchemeSettingElementCollection.IndexOf(System.Configuration.SchemeSettingElement)">
      <summary vsli:raw="The index of the specified &lt;see cref=&quot;T:System.Configuration.SchemeSettingElement&quot; /&gt;.">Index du <see cref="T:System.Configuration.SchemeSettingElement" /> spécifié.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.SchemeSettingElement&quot; /&gt; for the specified index location.">
        <see cref="T:System.Configuration.SchemeSettingElement" /> pour l'emplacement d'index spécifié.</param>
      <returns vsli:raw="The index of the specified &lt;see cref=&quot;T:System.Configuration.SchemeSettingElement&quot; /&gt;; otherwise, -1.">Index du <see cref="T:System.Configuration.SchemeSettingElement" /> spécifié ; sinon, -1.</returns>
    </member>
    <member name="P:System.Configuration.SchemeSettingElementCollection.Item(System.Int32)">
      <summary vsli:raw="Gets an item at the specified index in the &lt;see cref=&quot;T:System.Configuration.SchemeSettingElementCollection&quot; /&gt; collection.">Obtient un élément au niveau de l'index spécifié dans la collection <see cref="T:System.Configuration.SchemeSettingElementCollection" />.</summary>
      <param name="index" vsli:raw="The index of the &lt;see cref=&quot;T:System.Configuration.SchemeSettingElement&quot; /&gt; to return.">Index du <see cref="T:System.Configuration.SchemeSettingElement" /> à retourner.</param>
      <returns vsli:raw="The specified &lt;see cref=&quot;T:System.Configuration.SchemeSettingElement&quot; /&gt;.">
        <see cref="T:System.Configuration.SchemeSettingElement" /> spécifié.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The &lt;paramref name=&quot;index&quot; /&gt; parameter is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The item specified by the parameter is &lt;see langword=&quot;null&quot; /&gt; or has been removed.">Le paramètre <paramref name="index" /> est inférieur à zéro.  
ou 
L'élément spécifié par le paramètre est <see langword="null" /> ou a été supprimé.</exception>
    </member>
    <member name="P:System.Configuration.SchemeSettingElementCollection.Item(System.String)">
      <summary vsli:raw="Gets an item from the &lt;see cref=&quot;T:System.Configuration.SchemeSettingElementCollection&quot; /&gt; collection.">Obtient un élément de la collection <see cref="T:System.Configuration.SchemeSettingElementCollection" />.</summary>
      <param name="name" vsli:raw="A string reference to the &lt;see cref=&quot;T:System.Configuration.SchemeSettingElement&quot; /&gt; object within the collection.">Référence de chaîne à l’objet <see cref="T:System.Configuration.SchemeSettingElement" /> dans la collection.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SchemeSettingElement&quot; /&gt; object contained in the collection.">Objet <see cref="T:System.Configuration.SchemeSettingElement" /> contenu dans la collection.</returns>
    </member>
    <member name="T:System.Configuration.SectionInformation">
      <summary vsli:raw="Contains metadata about an individual section within the configuration hierarchy. This class cannot be inherited.">Contient les métadonnées concernant une section individuelle dans la hiérarchie de configuration. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="P:System.Configuration.SectionInformation.AllowDefinition">
      <summary vsli:raw="Gets or sets a value that indicates where in the configuration file hierarchy the associated configuration section can be defined.">Obtient ou définit une valeur qui indique à quel niveau de la hiérarchie des fichiers de configuration la section de configuration associée peut être définie.</summary>
      <returns vsli:raw="A value that indicates where in the configuration file hierarchy the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object can be declared.">Valeur qui indique à quel niveau de la hiérarchie des fichiers de configuration l'objet <see cref="T:System.Configuration.ConfigurationSection" /> associé peut être déclaré.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The selected value conflicts with a value that is already defined.">La valeur sélectionnée est en conflit avec une valeur déjà définie.</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.AllowExeDefinition">
      <summary vsli:raw="Gets or sets a value that indicates where in the configuration file hierarchy the associated configuration section can be declared.">Obtient ou définit une valeur qui indique à quel niveau de la hiérarchie des fichiers de configuration la section de configuration associée peut être déclarée.</summary>
      <returns vsli:raw="A value that indicates where in the configuration file hierarchy the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object can be declared for .exe files.">Valeur qui indique à quel niveau de la hiérarchie des fichiers de configuration l'objet <see cref="T:System.Configuration.ConfigurationSection" /> associé peut être déclaré pour les fichiers .exe.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The selected value conflicts with a value that is already defined.">La valeur sélectionnée est en conflit avec une valeur déjà définie.</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.AllowLocation">
      <summary vsli:raw="Gets or sets a value that indicates whether the configuration section allows the &lt;see langword=&quot;location&quot; /&gt; attribute.">Obtient ou définit une valeur qui indique si la section de configuration autorise l'attribut <see langword="location" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see langword=&quot;location&quot; /&gt; attribute is allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si l'attribut <see langword="location" /> est autorisé ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The selected value conflicts with a value that is already defined.">La valeur sélectionnée est en conflit avec une valeur déjà définie.</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.AllowOverride">
      <summary vsli:raw="Gets or sets a value that indicates whether the associated configuration section can be overridden by lower-level configuration files.">Obtient ou définit une valeur qui indique si la section de configuration associée peut être substituée par des fichiers de configuration de niveau inférieur.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the section can be overridden; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la section peut être substituée ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.ConfigSource">
      <summary vsli:raw="Gets or sets the name of the include file in which the associated configuration section is defined, if such a file exists.">Obtient ou définit le nom du fichier Include dans lequel la section de configuration associée est définie, si ce fichier existe.</summary>
      <returns vsli:raw="The name of the include file in which the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; is defined, if such a file exists; otherwise, an empty string (&quot;&quot;).">Nom du fichier Include dans lequel le <see cref="T:System.Configuration.ConfigurationSection" /> associé est défini, si ce fichier existe ; sinon, une chaîne vide ("").</returns>
    </member>
    <member name="M:System.Configuration.SectionInformation.ForceDeclaration">
      <summary vsli:raw="Forces the associated configuration section to appear in the configuration file.">Force l'affichage de la section de configuration associée dans le fichier de configuration.</summary>
    </member>
    <member name="M:System.Configuration.SectionInformation.ForceDeclaration(System.Boolean)">
      <summary vsli:raw="Forces the associated configuration section to appear in the configuration file, or removes an existing section from the configuration file.">Force l'affichage de la section de configuration associée dans le fichier de configuration ou supprime une section existante du fichier de configuration.</summary>
      <param name="force" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the associated section should be written in the configuration file; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la section associée doit être écrite dans le fichier de configuration ; sinon, <see langword="false" />.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="&lt;paramref name=&quot;force&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt; and the associated section cannot be exported to the child configuration file, or it is undeclared.">
        <paramref name="force" /> a la valeur <see langword="true" /> et la section associée ne peut pas être exportée vers le fichier de configuration enfant, ou elle n'est pas déclarée.</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.ForceSave">
      <summary vsli:raw="Gets or sets a value that indicates whether the associated configuration section will be saved even if it has not been modified.">Obtient ou définit une valeur qui indique si la section de configuration associée est enregistrée même si elle n'est pas modifiée.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object will be saved even if it has not been modified; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA;Note: If the configuration file is saved (even if there are no modifications), ASP.NET restarts the application1.exe.config.">
        <see langword="true" /> si l'objet <see cref="T:System.Configuration.ConfigurationSection" /> associé est enregistré même s'il n'est pas modifié ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.  
   
 Si le fichier de configuration est enregistré (même en l'absence de modifications), ASP.NET redémarre l'application.</returns>
    </member>
    <member name="M:System.Configuration.SectionInformation.GetParentSection">
      <summary vsli:raw="Gets the configuration section that contains the configuration section associated with this object.">Obtient la section de configuration qui contient la section de configuration associée à cet objet.</summary>
      <returns vsli:raw="The configuration section that contains the &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; that is associated with this &lt;see cref=&quot;T:System.Configuration.SectionInformation&quot; /&gt; object.">Section de configuration qui contient <see cref="T:System.Configuration.ConfigurationSection" /> associé à cet objet <see cref="T:System.Configuration.SectionInformation" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The method is invoked from a parent section.">La méthode est appelée à partir d'une section parente.</exception>
    </member>
    <member name="M:System.Configuration.SectionInformation.GetRawXml">
      <summary vsli:raw="Returns an XML node object that represents the associated configuration-section object.">Retourne un objet nœud XML qui représente l'objet de la section de configuration associée.</summary>
      <returns vsli:raw="The XML representation for this configuration section.">Représentation XML pour cette section de configuration.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This configuration object is locked and cannot be edited.">Cet objet de configuration est verrouillé et ne peut pas être modifié.</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.InheritInChildApplications">
      <summary vsli:raw="Gets or sets a value that indicates whether the settings that are specified in the associated configuration section are inherited by applications that reside in a subdirectory of the relevant application.">Obtient ou définit une valeur qui indique si les paramètres spécifiés dans la section de configuration associée sont hérités par des applications qui résident dans un sous-répertoire de l'application correspondante.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the settings specified in this &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object are inherited by child applications; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si les paramètres spécifiés dans cet objet <see cref="T:System.Configuration.ConfigurationSection" /> sont hérités par les applications enfants ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.IsDeclarationRequired">
      <summary vsli:raw="Gets a value that indicates whether the configuration section must be declared in the configuration file.">Obtient une valeur qui indique si la section de configuration doit être déclarée dans le fichier de configuration.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object must be declared in the configuration file; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet <see cref="T:System.Configuration.ConfigurationSection" /> associé doit être déclaré dans le fichier de configuration ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.IsDeclared">
      <summary vsli:raw="Gets a value that indicates whether the associated configuration section is declared in the configuration file.">Obtient une valeur qui indique si la section de configuration associée est déclarée dans le fichier de configuration.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; is declared in the configuration file; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si ce <see cref="T:System.Configuration.ConfigurationSection" /> est déclaré dans le fichier de configuration ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.IsLocked">
      <summary vsli:raw="Gets a value that indicates whether the associated configuration section is locked.">Obtient une valeur qui indique si la section de configuration associée est verrouillée.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the section is locked; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la section est verrouillée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.IsProtected">
      <summary vsli:raw="Gets a value that indicates whether the associated configuration section is protected.">Obtient une valeur qui indique si la section de configuration associée est protégée.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; is protected; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si ce <see cref="T:System.Configuration.ConfigurationSection" /> est protégé ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.Name">
      <summary vsli:raw="Gets the name of the associated configuration section.">Obtient le nom de la section de configuration associée.</summary>
      <returns vsli:raw="The complete name of the configuration section.">Nom complet de la section de configuration.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.OverrideMode">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Configuration.OverrideMode&quot; /&gt; enumeration value that specifies whether the associated configuration section can be overridden by child configuration files.">Obtient ou définit la valeur d'énumération <see cref="T:System.Configuration.OverrideMode" /> qui spécifie si la section de configuration associée peut être substituée par les fichiers de configuration enfants.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Configuration.OverrideMode&quot; /&gt; enumeration values.">Une des valeurs d'énumération <see cref="T:System.Configuration.OverrideMode" />.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="An attempt was made to change both the &lt;see cref=&quot;P:System.Configuration.SectionInformation.AllowOverride&quot; /&gt; and &lt;see cref=&quot;P:System.Configuration.SectionInformation.OverrideMode&quot; /&gt; properties, which is not supported for compatibility reasons.">Une tentative a été faite pour modifier à la fois les propriétés <see cref="P:System.Configuration.SectionInformation.AllowOverride" /> et <see cref="P:System.Configuration.SectionInformation.OverrideMode" />, qui ne sont pas prises en charge pour des raisons de compatibilité.</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.OverrideModeDefault">
      <summary vsli:raw="Gets or sets a value that specifies the default override behavior of a configuration section by child configuration files.">Obtient ou définit une valeur qui spécifie le comportement de substitution par défaut d'une section de configuration par les fichiers de configuration enfants.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Configuration.OverrideMode&quot; /&gt; enumeration values.">Une des valeurs d'énumération <see cref="T:System.Configuration.OverrideMode" />.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The override behavior is specified in a parent configuration section.">Le comportement de substitution est spécifié dans une section de configuration parente.</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.OverrideModeEffective">
      <summary vsli:raw="Gets the override behavior of a configuration section that is in turn based on whether child configuration files can lock the configuration section.">Obtient le comportement de substitution d'une section de configuration qui est à son tour basée sur la capacité des fichiers de configuration enfants à verrouiller la section de configuration.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Configuration.OverrideMode&quot; /&gt; enumeration values.">Une des valeurs d'énumération <see cref="T:System.Configuration.OverrideMode" />.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.ProtectionProvider">
      <summary vsli:raw="Gets the protected configuration provider for the associated configuration section.">Obtient le fournisseur de configuration protégée pour la section de configuration associée.</summary>
      <returns vsli:raw="The protected configuration provider for this &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object.">Fournisseur de configuration protégée pour cet objet <see cref="T:System.Configuration.ConfigurationSection" />.</returns>
    </member>
    <member name="M:System.Configuration.SectionInformation.ProtectSection(System.String)">
      <summary vsli:raw="Marks a configuration section for protection.">Marque une section de configuration pour la protection.</summary>
      <param name="protectionProvider" vsli:raw="The name of the protection provider to use.">Nom du fournisseur de protection à utiliser.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Configuration.SectionInformation.AllowLocation&quot; /&gt; property is set to &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; The target section is already a protected data section.">La propriété <see cref="P:System.Configuration.SectionInformation.AllowLocation" /> a la valeur <see langword="false" />.  

ou - 
La section cible est déjà une section de données protégée.</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.RequirePermission">
      <summary vsli:raw="Gets a value that indicates whether the associated configuration section requires access permissions.">Obtient une valeur qui indique si la section de configuration associée requiert des autorisations d'accès.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see langword=&quot;requirePermission&quot; /&gt; attribute is set to &lt;see langword=&quot;true&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si l'attribut <see langword="requirePermission" /> a la valeur <see langword="true" /> ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The selected value conflicts with a value that is already defined.">La valeur sélectionnée est en conflit avec une valeur déjà définie.</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.RestartOnExternalChanges">
      <summary vsli:raw="Gets or sets a value that specifies whether a change in an external configuration include file requires an application restart.">Obtient ou définit une valeur qui spécifie si la modification d'un fichier Include de configuration externe requiert un redémarrage de l'application.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a change in an external configuration include file requires an application restart; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si une modification dans un fichier Include de configuration externe requiert le redémarrage de l'application ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The selected value conflicts with a value that is already defined.">La valeur sélectionnée est en conflit avec une valeur déjà définie.</exception>
    </member>
    <member name="M:System.Configuration.SectionInformation.RevertToParent">
      <summary vsli:raw="Causes the associated configuration section to inherit all its values from the parent section.">Fait que toutes les valeurs de la section de configuration associée sont héritées de la section parente.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This method cannot be called outside editing mode.">Cette méthode ne peut pas être appelée en dehors du mode édition.</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.SectionName">
      <summary vsli:raw="Gets the name of the associated configuration section.">Obtient le nom de la section de configuration associée.</summary>
      <returns vsli:raw="The name of the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object.">Nom de l'objet <see cref="T:System.Configuration.ConfigurationSection" /> associé.</returns>
    </member>
    <member name="M:System.Configuration.SectionInformation.SetRawXml(System.String)">
      <summary vsli:raw="Sets the object to an XML representation of the associated configuration section within the configuration file.">Affecte à l'objet une valeur de représentation XML de la section de configuration associée dans le fichier de configuration.</summary>
      <param name="rawXml" vsli:raw="The XML to use.">XML à utiliser.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;rawXml&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="rawXml" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.Type">
      <summary vsli:raw="Gets or sets the section class name.">Obtient ou définit le nom de la classe de la section.</summary>
      <returns vsli:raw="The name of the class that is associated with this &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; section.">Nom de la classe associée à cette section <see cref="T:System.Configuration.ConfigurationSection" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The selected value is &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;).">La valeur sélectionnée est <see langword="null" /> ou une chaîne vide ("").</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The selected value conflicts with a value that is already defined.">La valeur sélectionnée est en conflit avec une valeur déjà définie.</exception>
    </member>
    <member name="M:System.Configuration.SectionInformation.UnprotectSection">
      <summary vsli:raw="Removes the protected configuration encryption from the associated configuration section.">Supprime le chiffrement de la configuration protégée de la section de configuration associée.</summary>
    </member>
    <member name="T:System.Configuration.SettingAttribute">
      <summary vsli:raw="Represents a custom settings attribute used to associate settings information with a settings property.">Représente un attribut de paramètres personnalisés utilisé pour associer des informations de paramètres à une propriété de paramètres.</summary>
    </member>
    <member name="M:System.Configuration.SettingAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingAttribute" />.</summary>
    </member>
    <member name="T:System.Configuration.SettingChangingEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Configuration.ApplicationSettingsBase.SettingChanging&quot; /&gt; event.">Fournit des données pour l'événement <see cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingChangingEventArgs.#ctor(System.String,System.String,System.String,System.Object,System.Boolean)">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Configuration.SettingChangingEventArgs&quot; /&gt; class.">Initialise une instance de la classe <see cref="T:System.Configuration.SettingChangingEventArgs" />.</summary>
      <param name="settingName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the name of the application setting.">
        <see cref="T:System.String" /> contenant le nom du paramètre d'application.</param>
      <param name="settingClass" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing a category description of the setting. Often this parameter is set to the application settings group name.">
        <see cref="T:System.String" /> contenant une description de catégorie du paramètre. Ce paramètre a souvent pour valeur le nom du groupe de paramètres d'application.</param>
      <param name="settingKey" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the application settings key.">
        <see cref="T:System.String" /> contenant la clé de paramètres d'application.</param>
      <param name="newValue" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the new value to be assigned to the application settings property.">
        <see cref="T:System.Object" /> qui contient la nouvelle valeur à assigner à la propriété de paramètres d'application.</param>
      <param name="cancel" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to cancel the event; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour annuler l'événement ; sinon, <see langword="false" />.</param>
    </member>
    <member name="P:System.Configuration.SettingChangingEventArgs.NewValue">
      <summary vsli:raw="Gets the new value being assigned to the application settings property.">Obtient la nouvelle valeur qui est assignée à la propriété de paramètres d'application.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the new value to be assigned to the application settings property.">
        <see cref="T:System.Object" /> qui contient la nouvelle valeur à assigner à la propriété de paramètres d'application.</returns>
    </member>
    <member name="P:System.Configuration.SettingChangingEventArgs.SettingClass">
      <summary vsli:raw="Gets the application settings property category.">Obtient la catégorie de propriété de paramètres d'application.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing a category description of the setting. Typically, this parameter is set to the application settings group name.">
        <see cref="T:System.String" /> contenant une description de catégorie du paramètre. En général, ce paramètre a pour valeur le nom du groupe de paramètres d'application.</returns>
    </member>
    <member name="P:System.Configuration.SettingChangingEventArgs.SettingKey">
      <summary vsli:raw="Gets the application settings key associated with the property.">Obtient la clé de paramètres d'application associée à la propriété.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the application settings key.">
        <see cref="T:System.String" /> contenant la clé de paramètres d'application.</returns>
    </member>
    <member name="P:System.Configuration.SettingChangingEventArgs.SettingName">
      <summary vsli:raw="Gets the name of the application setting associated with the application settings property.">Obtient le nom du paramètre d'application associé à la propriété de paramètres d'application.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the name of the application setting.">
        <see cref="T:System.String" /> contenant le nom du paramètre d'application.</returns>
    </member>
    <member name="T:System.Configuration.SettingChangingEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Configuration.ApplicationSettingsBase.SettingChanging&quot; /&gt; event.">Représente la méthode qui gérera l'événement <see cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" />.</summary>
      <param name="sender" vsli:raw="The source of the event, typically an application settings wrapper class derived from the &lt;see cref=&quot;T:System.Configuration.ApplicationSettingsBase&quot; /&gt; class.">Source de l’événement, généralement une classe wrapper de paramètres d’application dérivée de la classe <see cref="T:System.Configuration.ApplicationSettingsBase" />.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingChangingEventArgs&quot; /&gt; containing the data for the event.">
        <see cref="T:System.Configuration.SettingChangingEventArgs" /> contenant les données de l’événement.</param>
    </member>
    <member name="T:System.Configuration.SettingElement">
      <summary vsli:raw="Represents a simplified configuration element used for updating elements in the configuration. This class cannot be inherited.">Représente un élément de configuration simplifié utilisé pour mettre à jour des éléments dans la configuration. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.SettingElement.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingElement" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingElement.#ctor(System.String,System.Configuration.SettingsSerializeAs)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; class based on supplied parameters.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingElement" /> en fonction des paramètres fournis.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; object.">Nom de l'objet <see cref="T:System.Configuration.SettingElement" />.</param>
      <param name="serializeAs" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsSerializeAs&quot; /&gt; object. This object is an enumeration used as the serialization scheme to store configuration settings.">Objet <see cref="T:System.Configuration.SettingsSerializeAs" />. Cet objet est une énumération utilisée comme méthode de sérialisation pour stocker des paramètres de configuration.</param>
    </member>
    <member name="M:System.Configuration.SettingElement.Equals(System.Object)">
      <summary vsli:raw="Compares the current &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; instance to the specified object.">Compare l’instance de <see cref="T:System.Configuration.SettingElement" /> actuelle à l’objet spécifié.</summary>
      <param name="settings" vsli:raw="The object to compare with.">Objet avec lequel comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; instance is equal to the specified object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l’instance de <see cref="T:System.Configuration.SettingElement" /> est égale à l’objet spécifié ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.SettingElement.GetHashCode">
      <summary vsli:raw="Gets a unique value representing the &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; current instance.">Obtient une valeur unique représentant l’instance actuelle de <see cref="T:System.Configuration.SettingElement" />.</summary>
      <returns vsli:raw="A unique value representing the &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; current instance.">Valeur unique représentant l’instance actuelle de <see cref="T:System.Configuration.SettingElement" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingElement.Name">
      <summary vsli:raw="Gets or sets the name of the &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; object.">Obtient ou définit le nom de l'objet <see cref="T:System.Configuration.SettingElement" />.</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; object.">Nom de l'objet <see cref="T:System.Configuration.SettingElement" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingElement.SerializeAs">
      <summary vsli:raw="Gets or sets the serialization mechanism used to persist the values of the &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; object.">Obtient ou définit le mécanisme de sérialisation utilisé pour rendre persistantes les valeurs de l'objet <see cref="T:System.Configuration.SettingElement" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsSerializeAs&quot; /&gt; object.">Objet <see cref="T:System.Configuration.SettingsSerializeAs" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingElement.Value">
      <summary vsli:raw="Gets or sets the value of a &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; object by using a &lt;see cref=&quot;T:System.Configuration.SettingValueElement&quot; /&gt; object.">Obtient ou définit la valeur d'un objet <see cref="T:System.Configuration.SettingElement" /> en utilisant un objet <see cref="T:System.Configuration.SettingValueElement" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingValueElement&quot; /&gt; object containing the value of the &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; object.">Objet <see cref="T:System.Configuration.SettingValueElement" /> contenant la valeur de l'objet <see cref="T:System.Configuration.SettingElement" /> spécifié.</returns>
    </member>
    <member name="T:System.Configuration.SettingElementCollection">
      <summary vsli:raw="Contains a collection of &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; objects. This class cannot be inherited.">Contient une collection d'objets <see cref="T:System.Configuration.SettingElement" />. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.SettingElementCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingElementCollection&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingElementCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingElementCollection.Add(System.Configuration.SettingElement)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; object to the collection.">Ajoute un objet <see cref="T:System.Configuration.SettingElement" /> à la collection.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; object to add to the collection.">Objet <see cref="T:System.Configuration.SettingElement" /> à ajouter à la collection.</param>
    </member>
    <member name="M:System.Configuration.SettingElementCollection.Clear">
      <summary vsli:raw="Removes all &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; objects from the collection.">Supprime tous les objets <see cref="T:System.Configuration.SettingElement" /> de la collection.</summary>
    </member>
    <member name="P:System.Configuration.SettingElementCollection.CollectionType">
      <summary vsli:raw="Gets the type of the configuration collection.">Obtient le type de la collection de configurations.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollectionType&quot; /&gt; object of the collection.">Objet <see cref="T:System.Configuration.ConfigurationElementCollectionType" /> de la collection.</returns>
    </member>
    <member name="M:System.Configuration.SettingElementCollection.Get(System.String)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; object from the collection.">Obtient un objet <see cref="T:System.Configuration.SettingElement" /> à partir de la collection.</summary>
      <param name="elementKey" vsli:raw="A string value representing the &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; object in the collection.">Valeur de chaîne représentant l’objet <see cref="T:System.Configuration.SettingElement" /> dans la collection.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; object.">Objet <see cref="T:System.Configuration.SettingElement" />.</returns>
    </member>
    <member name="M:System.Configuration.SettingElementCollection.Remove(System.Configuration.SettingElement)">
      <summary vsli:raw="Removes a &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; object from the collection.">Supprime un objet <see cref="T:System.Configuration.SettingElement" /> de la collection.</summary>
      <param name="element" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; object.">Objet <see cref="T:System.Configuration.SettingElement" />.</param>
    </member>
    <member name="T:System.Configuration.SettingsAttributeDictionary">
      <summary vsli:raw="Represents a collection of key/value pairs used to describe a configuration object as well as a &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">Représente une collection de paires clé/valeur utilisées pour décrire un objet de configuration ainsi qu’un objet <see cref="T:System.Configuration.SettingsProperty" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsAttributeDictionary.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsAttributeDictionary&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingsAttributeDictionary" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsAttributeDictionary.#ctor(System.Configuration.SettingsAttributeDictionary)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsAttributeDictionary&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingsAttributeDictionary" />.</summary>
      <param name="attributes" vsli:raw="A collection of key/value pairs that are related to configuration settings.">Collection de paires clé/valeur associées aux paramètres de configuration.</param>
    </member>
    <member name="T:System.Configuration.SettingsBase">
      <summary vsli:raw="Provides the base class used to support user property settings.">Fournit la classe de base utilisée pour prendre en charge les paramètres de propriété d'utilisateur.</summary>
    </member>
    <member name="M:System.Configuration.SettingsBase.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsBase&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingsBase" />.</summary>
    </member>
    <member name="P:System.Configuration.SettingsBase.Context">
      <summary vsli:raw="Gets the associated settings context.">Obtient le contexte de paramètres associé.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsContext&quot; /&gt; associated with the settings instance.">
        <see cref="T:System.Configuration.SettingsContext" /> associé à l'instance de paramètres.</returns>
    </member>
    <member name="M:System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)">
      <summary vsli:raw="Initializes internal properties used by &lt;see cref=&quot;T:System.Configuration.SettingsBase&quot; /&gt; object.">Initialise les propriétés internes utilisées par l'objet <see cref="T:System.Configuration.SettingsBase" />.</summary>
      <param name="context" vsli:raw="The settings context related to the settings properties.">Contexte de paramètres associé aux propriétés de paramètres.</param>
      <param name="properties" vsli:raw="The settings properties that will be accessible from the &lt;see cref=&quot;T:System.Configuration.SettingsBase&quot; /&gt; instance.">Propriétés de paramètres qui seront accessibles à partir de l'instance de <see cref="T:System.Configuration.SettingsBase" />.</param>
      <param name="providers" vsli:raw="The initialized providers that should be used when loading and saving property values.">Fournisseurs initialisés qui doivent être utilisés lors du chargement et de l'enregistrement des valeurs de propriété.</param>
    </member>
    <member name="P:System.Configuration.SettingsBase.IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the object is synchronized (thread safe).">Obtient une valeur indiquant si l'accès à l'objet est synchronisé (thread-safe).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Configuration.SettingsBase&quot; /&gt; is synchronized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'accès à <see cref="T:System.Configuration.SettingsBase" /> est synchronisé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsBase.Item(System.String)">
      <summary vsli:raw="Gets or sets the value of the specified settings property.">Obtient ou définit la valeur de la propriété de paramètres spécifiée.</summary>
      <param name="propertyName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the name of the property to access.">
        <see cref="T:System.String" /> contenant le nom de la propriété à accéder.</param>
      <returns vsli:raw="If found, the value of the named settings property.">Si elle est trouvée, valeur de la propriété de paramètres nommée.</returns>
      <exception cref="T:System.Configuration.SettingsPropertyNotFoundException" vsli:raw="There are no properties associated with the current object, or the specified property could not be found.">Il n'y a pas de propriété associée à l'objet actuel ou la propriété spécifiée est introuvable.</exception>
      <exception cref="T:System.Configuration.SettingsPropertyIsReadOnlyException" vsli:raw="An attempt was made to set a read-only property.">Une tentative de définition de propriété en lecture seule a été effectuée.</exception>
      <exception cref="T:System.Configuration.SettingsPropertyWrongTypeException" vsli:raw="The value supplied is of a type incompatible with the settings property, during a set operation.">La valeur fournie est d'un type incompatible avec la propriété de paramètres, durant une opération de définition.</exception>
    </member>
    <member name="P:System.Configuration.SettingsBase.Properties">
      <summary vsli:raw="Gets the collection of settings properties.">Obtient la collection des propriétés de paramètres.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsPropertyCollection&quot; /&gt; collection containing all the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; objects.">Collection <see cref="T:System.Configuration.SettingsPropertyCollection" /> contenant tous les objets <see cref="T:System.Configuration.SettingsProperty" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsBase.PropertyValues">
      <summary vsli:raw="Gets a collection of settings property values.">Obtient une collection de valeurs de propriété de paramètres.</summary>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValue&quot; /&gt; objects representing the actual data values for the properties managed by the &lt;see cref=&quot;T:System.Configuration.SettingsBase&quot; /&gt; instance.">Collection d'objets <see cref="T:System.Configuration.SettingsPropertyValue" /> représentant les valeurs de données réelles des propriétés managées par l'instance de <see cref="T:System.Configuration.SettingsBase" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsBase.Providers">
      <summary vsli:raw="Gets a collection of settings providers.">Obtient une collection de fournisseurs de paramètres.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsProviderCollection&quot; /&gt; containing &lt;see cref=&quot;T:System.Configuration.SettingsProvider&quot; /&gt; objects.">
        <see cref="T:System.Configuration.SettingsProviderCollection" /> contenant des objets <see cref="T:System.Configuration.SettingsProvider" />.</returns>
    </member>
    <member name="M:System.Configuration.SettingsBase.Save">
      <summary vsli:raw="Stores the current values of the settings properties.">Stocke les valeurs actuelles des propriétés de paramètres.</summary>
    </member>
    <member name="M:System.Configuration.SettingsBase.Synchronized(System.Configuration.SettingsBase)">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Configuration.SettingsBase&quot; /&gt; class that is synchronized (thread safe).">Fournit une classe <see cref="T:System.Configuration.SettingsBase" /> qui est synchronisée (thread-safe).</summary>
      <param name="settingsBase" vsli:raw="The class used to support user property settings.">Classe utilisée pour prendre en charge les paramètres de propriété d'utilisateur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsBase&quot; /&gt; class that is synchronized.">Classe <see cref="T:System.Configuration.SettingsBase" /> qui est synchronisée.</returns>
    </member>
    <member name="T:System.Configuration.SettingsContext">
      <summary vsli:raw="Provides contextual information that the provider can use when persisting settings.">Fournit des informations contextuelles que le fournisseur peut utiliser quand il rend des paramètres persistants.</summary>
    </member>
    <member name="M:System.Configuration.SettingsContext.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsContext&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingsContext" />.</summary>
    </member>
    <member name="T:System.Configuration.SettingsDescriptionAttribute">
      <summary vsli:raw="Provides a string that describes an individual configuration property. This class cannot be inherited.">Fournit une chaîne qui décrit une propriété de configuration individuelle. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.SettingsDescriptionAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Configuration.SettingsDescriptionAttribute&quot; /&gt; class.">Initialise une instance de la classe <see cref="T:System.Configuration.SettingsDescriptionAttribute" />.</summary>
      <param name="description" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; used as descriptive text.">Le <see cref="T:System.String" /> utilisé comme texte descriptif.</param>
    </member>
    <member name="P:System.Configuration.SettingsDescriptionAttribute.Description">
      <summary vsli:raw="Gets the descriptive text for the associated configuration property.">Obtient le texte descriptif pour la propriété de configuration associée.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the descriptive text for the associated configuration property.">
        <see cref="T:System.String" /> contenant le texte descriptif de la propriété de configuration associée.</returns>
    </member>
    <member name="T:System.Configuration.SettingsGroupDescriptionAttribute">
      <summary vsli:raw="Provides a string that describes an application settings property group. This class cannot be inherited.">Fournit une chaîne qui décrit un groupe de propriétés de paramètres d’application. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.SettingsGroupDescriptionAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsGroupDescriptionAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingsGroupDescriptionAttribute" />.</summary>
      <param name="description" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the descriptive text for the application settings group.">
        <see cref="T:System.String" /> contenant le texte descriptif du groupe de paramètres d’application.</param>
    </member>
    <member name="P:System.Configuration.SettingsGroupDescriptionAttribute.Description">
      <summary vsli:raw="The descriptive text for the application settings properties group.">Texte descriptif du groupe de propriétés de paramètres d’application.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the descriptive text for the application settings group.">
        <see cref="T:System.String" /> contenant le texte descriptif du groupe de paramètres d’application.</returns>
    </member>
    <member name="T:System.Configuration.SettingsGroupNameAttribute">
      <summary vsli:raw="Specifies a name for application settings property group. This class cannot be inherited.">Spécifie un nom pour le groupe de propriétés de paramètres d’application. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.SettingsGroupNameAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsGroupNameAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingsGroupNameAttribute" />.</summary>
      <param name="groupName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the name of the application settings property group.">
        <see cref="T:System.String" /> contenant le nom du groupe de propriétés de paramètres d’application.</param>
    </member>
    <member name="P:System.Configuration.SettingsGroupNameAttribute.GroupName">
      <summary vsli:raw="Gets the name of the application settings property group.">Obtient le nom du groupe de propriétés de paramètres d’application.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the name of the application settings property group.">
        <see cref="T:System.String" /> contenant le nom du groupe de propriétés de paramètres d’application.</returns>
    </member>
    <member name="T:System.Configuration.SettingsLoadedEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Configuration.ApplicationSettingsBase.SettingsLoaded&quot; /&gt; event.">Fournit des données pour l'événement <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsLoadedEventArgs.#ctor(System.Configuration.SettingsProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsLoadedEventArgs&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingsLoadedEventArgs" />.</summary>
      <param name="provider" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsProvider&quot; /&gt; object from which settings are loaded.">Objet <see cref="T:System.Configuration.SettingsProvider" /> à partir duquel les paramètres sont chargés.</param>
    </member>
    <member name="P:System.Configuration.SettingsLoadedEventArgs.Provider">
      <summary vsli:raw="Gets the settings provider used to store configuration settings.">Obtient le fournisseur de paramètres utilisé pour stocker des paramètres de configuration.</summary>
      <returns vsli:raw="A settings provider.">Un fournisseur de paramètres.</returns>
    </member>
    <member name="T:System.Configuration.SettingsLoadedEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Configuration.ApplicationSettingsBase.SettingsLoaded&quot; /&gt; event.">Représente la méthode qui gérera l'événement <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" />.</summary>
      <param name="sender" vsli:raw="The source of the event, typically the settings class.">Source de l’événement, généralement la classe de paramètres.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsLoadedEventArgs&quot; /&gt; object that contains the event data.">Objet <see cref="T:System.Configuration.SettingsLoadedEventArgs" /> qui contient les données d'événement.</param>
    </member>
    <member name="T:System.Configuration.SettingsManageability">
      <summary vsli:raw="Provides values to indicate which services should be made available to application settings.">Fournit des valeurs pour indiquer quels services doivent être mis à la disposition des paramètres d’application.</summary>
    </member>
    <member name="F:System.Configuration.SettingsManageability.Roaming">
      <summary vsli:raw="Enables application settings to be stored in roaming user profiles. For more information about roaming user profiles, see Isolated Storage and Roaming.">Permet aux paramètres d’application d’être stockés dans des profils utilisateur itinérants. Pour plus d’informations sur les profils utilisateur itinérants, consultez Stockage et profil itinérant isolé.</summary>
    </member>
    <member name="T:System.Configuration.SettingsManageabilityAttribute">
      <summary vsli:raw="Specifies special services for application settings properties. This class cannot be inherited.">Spécifie des services spéciaux pour les propriétés de paramètres d’application. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.SettingsManageabilityAttribute.#ctor(System.Configuration.SettingsManageability)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsManageabilityAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingsManageabilityAttribute" />.</summary>
      <param name="manageability" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsManageability&quot; /&gt; value that enumerates the services being requested.">Valeur <see cref="T:System.Configuration.SettingsManageability" /> qui énumère les services demandés.</param>
    </member>
    <member name="P:System.Configuration.SettingsManageabilityAttribute.Manageability">
      <summary vsli:raw="Gets the set of special services that have been requested.">Obtient le jeu de services spéciaux qui ont été demandés.</summary>
      <returns vsli:raw="A value that results from using the logical &lt;see langword=&quot;OR&quot; /&gt; operator to combine all the &lt;see cref=&quot;T:System.Configuration.SettingsManageability&quot; /&gt; enumeration values corresponding to the requested services.">Valeur qui résulte de l'utilisation de l'opérateur logique <see langword="OR" /> pour combiner toutes les valeurs d'énumération <see cref="T:System.Configuration.SettingsManageability" /> correspondant aux services demandés.</returns>
    </member>
    <member name="T:System.Configuration.SettingsProperty">
      <summary vsli:raw="Used internally as the class that represents metadata about an individual configuration property.">Utilisé en interne comme la classe qui représente les métadonnées relatives à une propriété de configuration individuelle.</summary>
    </member>
    <member name="M:System.Configuration.SettingsProperty.#ctor(System.Configuration.SettingsProperty)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; class, based on the supplied parameter.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingsProperty" /> en fonction du paramètre fourni.</summary>
      <param name="propertyToCopy" vsli:raw="Specifies a copy of an existing &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">Spécifie la copie d'un objet <see cref="T:System.Configuration.SettingsProperty" /> existant.</param>
    </member>
    <member name="M:System.Configuration.SettingsProperty.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; class. based on the supplied parameter.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingsProperty" />. selon le paramètre fourni.</summary>
      <param name="name" vsli:raw="Specifies the name of an existing &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">Spécifie le nom d'un objet <see cref="T:System.Configuration.SettingsProperty" /> existant.</param>
    </member>
    <member name="M:System.Configuration.SettingsProperty.#ctor(System.String,System.Type,System.Configuration.SettingsProvider,System.Boolean,System.Object,System.Configuration.SettingsSerializeAs,System.Configuration.SettingsAttributeDictionary,System.Boolean,System.Boolean)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; class based on the supplied parameters.">Crée une instance de la classe <see cref="T:System.Configuration.SettingsProperty" /> à partir des paramètres fournis.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">Nom de l'objet <see cref="T:System.Configuration.SettingsProperty" />.</param>
      <param name="propertyType" vsli:raw="The type of &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">Type d'objet <see cref="T:System.Configuration.SettingsProperty" />.</param>
      <param name="provider" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsProvider&quot; /&gt; object to use for persistence.">Objet <see cref="T:System.Configuration.SettingsProvider" /> utilisé pour la persistance.</param>
      <param name="isReadOnly" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value specifying whether the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object is read-only.">Valeur <see cref="T:System.Boolean" /> indiquant si l'objet <see cref="T:System.Configuration.SettingsProperty" /> est en lecture seule.</param>
      <param name="defaultValue" vsli:raw="The default value of the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">Valeur par défaut de l'objet <see cref="T:System.Configuration.SettingsProperty" />.</param>
      <param name="serializeAs" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsSerializeAs&quot; /&gt; object. This object is an enumeration used to set the serialization scheme for storing application settings.">Objet <see cref="T:System.Configuration.SettingsSerializeAs" />. Cet objet est une énumération utilisée pour définir la méthode de sérialisation permettant de stocker des paramètres d'application.</param>
      <param name="attributes" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsAttributeDictionary&quot; /&gt; object.">Objet <see cref="T:System.Configuration.SettingsAttributeDictionary" />.</param>
      <param name="throwOnErrorDeserializing" vsli:raw="A Boolean value specifying whether an error will be thrown when the property is unsuccessfully deserialized.">Valeur Boolean spécifiant si une erreur sera levée lorsque la propriété ne sera pas correctement désérialisée.</param>
      <param name="throwOnErrorSerializing" vsli:raw="A Boolean value specifying whether an error will be thrown when the property is unsuccessfully serialized.">Valeur Boolean spécifiant si une erreur sera levée lorsque la propriété ne sera pas correctement sérialisée.</param>
    </member>
    <member name="P:System.Configuration.SettingsProperty.Attributes">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Configuration.SettingsAttributeDictionary&quot; /&gt; object containing the attributes of the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">Obtient un objet <see cref="T:System.Configuration.SettingsAttributeDictionary" /> contenant les attributs de l'objet <see cref="T:System.Configuration.SettingsProperty" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsAttributeDictionary&quot; /&gt; object.">Objet <see cref="T:System.Configuration.SettingsAttributeDictionary" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.DefaultValue">
      <summary vsli:raw="Gets or sets the default value of the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">Obtient ou définit la valeur par défaut de l'objet <see cref="T:System.Configuration.SettingsProperty" />.</summary>
      <returns vsli:raw="An object containing the default value of the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">Objet contenant la valeur par défaut de l'objet <see cref="T:System.Configuration.SettingsProperty" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.IsReadOnly">
      <summary vsli:raw="Gets or sets a value specifying whether a &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object is read-only.">Obtient ou définit une valeur indiquant si un objet <see cref="T:System.Configuration.SettingsProperty" /> est en lecture seule.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Configuration.SettingsProperty" /> est en lecture seule ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.Name">
      <summary vsli:raw="Gets or sets the name of the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt;.">Obtient ou définit le nom de l'objet <see cref="T:System.Configuration.SettingsProperty" />.</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt;.">Nom du <see cref="T:System.Configuration.SettingsProperty" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.PropertyType">
      <summary vsli:raw="Gets or sets the type for the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt;.">Obtient ou définit le type de <see cref="T:System.Configuration.SettingsProperty" />.</summary>
      <returns vsli:raw="The type for the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt;.">Type de l'objet <see cref="T:System.Configuration.SettingsProperty" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.Provider">
      <summary vsli:raw="Gets or sets the provider for the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt;.">Obtient ou définit le fournisseur pour <see cref="T:System.Configuration.SettingsProperty" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsProvider&quot; /&gt; object.">Objet <see cref="T:System.Configuration.SettingsProvider" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.SerializeAs">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Configuration.SettingsSerializeAs&quot; /&gt; object for the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt;.">Obtient ou définit un objet <see cref="T:System.Configuration.SettingsSerializeAs" /> pour <see cref="T:System.Configuration.SettingsProperty" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsSerializeAs&quot; /&gt; object.">Objet <see cref="T:System.Configuration.SettingsSerializeAs" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.ThrowOnErrorDeserializing">
      <summary vsli:raw="Gets or sets a value specifying whether an error will be thrown when the property is unsuccessfully deserialized.">Obtient ou définit une valeur spécifiant si une erreur sera levée lorsque la propriété ne sera pas correctement désérialisée.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the error will be thrown when the property is unsuccessfully deserialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'erreur est levée lorsque la propriété n'est pas correctement désérialisée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.ThrowOnErrorSerializing">
      <summary vsli:raw="Gets or sets a value specifying whether an error will be thrown when the property is unsuccessfully serialized.">Obtient ou définit une valeur spécifiant si une erreur sera levée lorsque la propriété ne sera pas correctement sérialisée.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the error will be thrown when the property is unsuccessfully serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'erreur est levée lorsque la propriété n'est pas correctement sérialisée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Configuration.SettingsPropertyCollection">
      <summary vsli:raw="Contains a collection of &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; objects.">Contient une collection d'objets <see cref="T:System.Configuration.SettingsProperty" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyCollection&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingsPropertyCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.Add(System.Configuration.SettingsProperty)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object to the collection.">Ajoute un objet <see cref="T:System.Configuration.SettingsProperty" /> à la collection.</summary>
      <param name="property" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">Objet <see cref="T:System.Configuration.SettingsProperty" />.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">La collection est en lecture seule.</exception>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.Clear">
      <summary vsli:raw="Removes all &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; objects from the collection.">Supprime tous les objets <see cref="T:System.Configuration.SettingsProperty" /> de la collection.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">La collection est en lecture seule.</exception>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.Clone">
      <summary vsli:raw="Creates a copy of the existing collection.">Crée une copie de la collection existante.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsPropertyCollection&quot; /&gt; class.">Classe <see cref="T:System.Configuration.SettingsPropertyCollection" />.</returns>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies this &lt;see cref=&quot;T:System.Configuration.SettingsPropertyCollection&quot; /&gt; object to an array.">Copie cet objet <see cref="T:System.Configuration.SettingsPropertyCollection" /> dans un tableau.</summary>
      <param name="array" vsli:raw="The array to copy the object to.">Tableau dans lequel copier l'objet.</param>
      <param name="index" vsli:raw="The index at which to begin copying.">Index où commence la copie.</param>
    </member>
    <member name="P:System.Configuration.SettingsPropertyCollection.Count">
      <summary vsli:raw="Gets a value that specifies the number of &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; objects in the collection.">Obtient une valeur qui indique le nombre d'objets <see cref="T:System.Configuration.SettingsProperty" /> dans la collection.</summary>
      <returns vsli:raw="The number of &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; objects in the collection.">Nombre d’objets <see cref="T:System.Configuration.SettingsProperty" /> dans la collection.</returns>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.GetEnumerator">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object as it applies to the collection.">Obtient l'objet <see cref="T:System.Collections.IEnumerator" /> tel qu'il s'applique à la collection.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object as it applies to the collection.">Objet <see cref="T:System.Collections.IEnumerator" /> tel qu'il s'applique à la collection.</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyCollection.IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether access to the collection is synchronized (thread safe).">Obtient une valeur qui indique si l'accès à la collection est synchronisé (thread-safe).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyCollection&quot; /&gt; is synchronized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'accès à <see cref="T:System.Configuration.SettingsPropertyCollection" /> est synchronisé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyCollection.Item(System.String)">
      <summary vsli:raw="Gets the collection item with the specified name.">Obtient l'élément de collection portant le nom spécifié.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">Nom de l'objet <see cref="T:System.Configuration.SettingsProperty" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object with the specified &lt;paramref name=&quot;name&quot; /&gt;.">Objet <see cref="T:System.Configuration.SettingsProperty" /> avec le <paramref name="name" /> spécifié.</returns>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.OnAdd(System.Configuration.SettingsProperty)">
      <summary vsli:raw="Performs additional, custom processing when adding to the contents of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyCollection&quot; /&gt; instance.">Effectue un traitement personnalisé supplémentaire lors de l'ajout au contenu de l'instance de <see cref="T:System.Configuration.SettingsPropertyCollection" />.</summary>
      <param name="property" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">Objet <see cref="T:System.Configuration.SettingsProperty" />.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.OnAddComplete(System.Configuration.SettingsProperty)">
      <summary vsli:raw="Performs additional, custom processing after adding to the contents of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyCollection&quot; /&gt; instance.">Effectue un traitement personnalisé supplémentaire après l'ajout au contenu de l'instance de <see cref="T:System.Configuration.SettingsPropertyCollection" />.</summary>
      <param name="property" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">Objet <see cref="T:System.Configuration.SettingsProperty" />.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.OnClear">
      <summary vsli:raw="Performs additional, custom processing when clearing the contents of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyCollection&quot; /&gt; instance.">Effectue un traitement personnalisé supplémentaire lors de l'effacement du contenu de l'instance de <see cref="T:System.Configuration.SettingsPropertyCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.OnClearComplete">
      <summary vsli:raw="Performs additional, custom processing after clearing the contents of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyCollection&quot; /&gt; instance.">Effectue un traitement personnalisé supplémentaire après l'effacement du contenu de l'instance de <see cref="T:System.Configuration.SettingsPropertyCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.OnRemove(System.Configuration.SettingsProperty)">
      <summary vsli:raw="Performs additional, custom processing when removing the contents of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyCollection&quot; /&gt; instance.">Effectue un traitement personnalisé supplémentaire lors de la suppression du contenu de l'instance de <see cref="T:System.Configuration.SettingsPropertyCollection" />.</summary>
      <param name="property" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">Objet <see cref="T:System.Configuration.SettingsProperty" />.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.OnRemoveComplete(System.Configuration.SettingsProperty)">
      <summary vsli:raw="Performs additional, custom processing after removing the contents of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyCollection&quot; /&gt; instance.">Effectue un traitement personnalisé supplémentaire après la suppression du contenu de l'instance de <see cref="T:System.Configuration.SettingsPropertyCollection" />.</summary>
      <param name="property" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">Objet <see cref="T:System.Configuration.SettingsProperty" />.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.Remove(System.String)">
      <summary vsli:raw="Removes a &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object from the collection.">Supprime un objet <see cref="T:System.Configuration.SettingsProperty" /> de la collection.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">Nom de l'objet <see cref="T:System.Configuration.SettingsProperty" />.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">La collection est en lecture seule.</exception>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.SetReadOnly">
      <summary vsli:raw="Sets the collection to be read-only.">Met la collection en lecture seule.</summary>
    </member>
    <member name="P:System.Configuration.SettingsPropertyCollection.SyncRoot">
      <summary vsli:raw="Gets the object to synchronize access to the collection.">Obtient l'objet utilisé pour synchroniser l'accès à la collection.</summary>
      <returns vsli:raw="The object to synchronize access to the collection.">Objet utilisé pour synchroniser l'accès à la collection.</returns>
    </member>
    <member name="T:System.Configuration.SettingsPropertyIsReadOnlyException">
      <summary vsli:raw="Provides an exception for read-only &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; objects.">Fournit une exception pour les objets <see cref="T:System.Configuration.SettingsProperty" /> en lecture seule.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyIsReadOnlyException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyIsReadOnlyException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingsPropertyIsReadOnlyException" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyIsReadOnlyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyIsReadOnlyException&quot; /&gt; class based on the supplied parameters.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingsPropertyIsReadOnlyException" /> en fonction des paramètres fournis.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that holds the serialized object data about the exception being thrown.">Objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> qui contient les données d’objet sérialisées relatives à l’exception levée.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; object that contains contextual information about the source or destination of the serialized stream.">Objet <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui contient des informations contextuelles sur la source ou la destination du flux sérialisé.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyIsReadOnlyException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyIsReadOnlyException&quot; /&gt; class based on a supplied parameter.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingsPropertyIsReadOnlyException" /> en fonction d'un paramètre fourni.</summary>
      <param name="message" vsli:raw="A string containing an exception message.">Chaîne contenant un message d'exception.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyIsReadOnlyException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyIsReadOnlyException&quot; /&gt; class based on supplied parameters.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingsPropertyIsReadOnlyException" /> en fonction des paramètres fournis.</summary>
      <param name="message" vsli:raw="A string containing an exception message.">Chaîne contenant un message d'exception.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception.">Exception ayant provoqué l'exception actuelle.</param>
    </member>
    <member name="T:System.Configuration.SettingsPropertyNotFoundException">
      <summary vsli:raw="Provides an exception for &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; objects that are not found.">Fournit une exception pour les objets <see cref="T:System.Configuration.SettingsProperty" /> qui sont introuvables.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyNotFoundException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyNotFoundException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingsPropertyNotFoundException" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyNotFoundException&quot; /&gt; class, based on supplied parameters.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingsPropertyNotFoundException" /> en fonction des paramètres fournis.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that holds the serialized object data about the exception being thrown.">Objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> qui contient les données d’objet sérialisées relatives à l’exception levée.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; object that contains contextual information about the source or destination of the serialized stream.">Objet <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui contient des informations contextuelles sur la source ou la destination du flux sérialisé.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyNotFoundException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyNotFoundException&quot; /&gt; class, based on a supplied parameter.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingsPropertyNotFoundException" /> en fonction d’un paramètre fourni.</summary>
      <param name="message" vsli:raw="A string containing an exception message.">Chaîne contenant un message d'exception.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyNotFoundException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyNotFoundException&quot; /&gt; class, based on supplied parameters.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingsPropertyNotFoundException" /> en fonction des paramètres fournis.</summary>
      <param name="message" vsli:raw="A string containing an exception message.">Chaîne contenant un message d'exception.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception.">Exception ayant provoqué l'exception actuelle.</param>
    </member>
    <member name="T:System.Configuration.SettingsPropertyValue">
      <summary vsli:raw="Contains the value of a settings property that can be loaded and stored by an instance of &lt;see cref=&quot;T:System.Configuration.SettingsBase&quot; /&gt;.">Contient la valeur d'une propriété de paramètres qui peut être chargée et stockée par une instance de <see cref="T:System.Configuration.SettingsBase" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValue.#ctor(System.Configuration.SettingsProperty)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValue&quot; /&gt; class, based on supplied parameters.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingsPropertyValue" /> en fonction des paramètres fournis.</summary>
      <param name="property" vsli:raw="Specifies a &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">Spécifie un objet <see cref="T:System.Configuration.SettingsProperty" />.</param>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValue.Deserialized">
      <summary vsli:raw="Gets or sets whether the value of a &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object has been deserialized.">Obtient ou définit si la valeur d'un objet <see cref="T:System.Configuration.SettingsProperty" /> a été désérialisée.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of a &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object has been deserialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la valeur d'un objet <see cref="T:System.Configuration.SettingsProperty" /> a été désérialisée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValue.IsDirty">
      <summary vsli:raw="Gets or sets whether the value of a &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object has changed.">Obtient ou définit si la valeur d'un objet <see cref="T:System.Configuration.SettingsProperty" /> a changé.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of a &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object has changed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la valeur d'un objet <see cref="T:System.Configuration.SettingsProperty" /> a changé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValue.Name">
      <summary vsli:raw="Gets the name of the property from the associated &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">Obtient le nom de la propriété dans l'objet <see cref="T:System.Configuration.SettingsProperty" /> associé.</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">Nom de l'objet <see cref="T:System.Configuration.SettingsProperty" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValue.Property">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">Obtient l'objet <see cref="T:System.Configuration.SettingsProperty" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object that describes the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValue&quot; /&gt; object.">L'objet <see cref="T:System.Configuration.SettingsProperty" /> qui décrit l'objet <see cref="T:System.Configuration.SettingsPropertyValue" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValue.PropertyValue">
      <summary vsli:raw="Gets or sets the value of the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">Obtient ou définit la valeur de l'objet <see cref="T:System.Configuration.SettingsProperty" />.</summary>
      <returns vsli:raw="The value of the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object. When this value is set, the &lt;see cref=&quot;P:System.Configuration.SettingsPropertyValue.IsDirty&quot; /&gt; property is set to &lt;see langword=&quot;true&quot; /&gt; and &lt;see cref=&quot;P:System.Configuration.SettingsPropertyValue.UsingDefaultValue&quot; /&gt; is set to &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; When a value is first accessed from the &lt;see cref=&quot;P:System.Configuration.SettingsPropertyValue.PropertyValue&quot; /&gt; property, and if the value was initially stored into the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValue&quot; /&gt; object as a serialized representation using the &lt;see cref=&quot;P:System.Configuration.SettingsPropertyValue.SerializedValue&quot; /&gt; property, the &lt;see cref=&quot;P:System.Configuration.SettingsPropertyValue.PropertyValue&quot; /&gt; property will trigger deserialization of the underlying value.  As a side effect, the &lt;see cref=&quot;P:System.Configuration.SettingsPropertyValue.Deserialized&quot; /&gt; property will be set to &lt;see langword=&quot;true&quot; /&gt;.  &#xA;  &#xA; If this chain of events occurs in ASP.NET, and if an error occurs during the deserialization process, the error is logged using the health-monitoring feature of ASP.NET. By default, this means that deserialization errors will show up in the Application Event Log when running under ASP.NET. If this process occurs outside of ASP.NET, and if an error occurs during deserialization, the error is suppressed, and the remainder of the logic during deserialization occurs. If there is no serialized value to deserialize when the deserialization is attempted, then &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValue&quot; /&gt; object will instead attempt to return a default value if one was configured as defined on the associated &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; instance. In this case, if the &lt;see cref=&quot;P:System.Configuration.SettingsProperty.DefaultValue&quot; /&gt; property was set to either &lt;see langword=&quot;null&quot; /&gt;, or to the string &quot;[null]&quot;, then the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValue&quot; /&gt; object will initialize the &lt;see cref=&quot;P:System.Configuration.SettingsPropertyValue.PropertyValue&quot; /&gt; property to either &lt;see langword=&quot;null&quot; /&gt; for reference types, or to the default value for the associated value type.  On the other hand, if &lt;see cref=&quot;P:System.Configuration.SettingsProperty.DefaultValue&quot; /&gt; property holds a valid object reference or string value (other than &quot;[null]&quot;), then the &lt;see cref=&quot;P:System.Configuration.SettingsProperty.DefaultValue&quot; /&gt; property is returned instead.  &#xA;  &#xA; If there is no serialized value to deserialize when the deserialization is attempted, and no default value was specified, then an empty string will be returned for string types. For all other types, a default instance will be returned by calling &lt;see cref=&quot;M:System.Activator.CreateInstance(System.Type)&quot; /&gt; - for reference types this means an attempt will be made to create an object instance using the parameterless constructor.  If this attempt fails, then &lt;see langword=&quot;null&quot; /&gt; is returned.">Valeur de l’objet <see cref="T:System.Configuration.SettingsProperty" />. Lorsque cette valeur est définie, la propriété <see cref="P:System.Configuration.SettingsPropertyValue.IsDirty" /> a la valeur <see langword="true" /> et la propriété <see cref="P:System.Configuration.SettingsPropertyValue.UsingDefaultValue" /> a la valeur <see langword="false" />.  
Lorsqu'une valeur fait d'abord l'objet d'un accès à partir de la propriété <see cref="P:System.Configuration.SettingsPropertyValue.PropertyValue" /> et qu'elle a été stockée initialement dans l'objet <see cref="T:System.Configuration.SettingsPropertyValue" /> comme une représentation sérialisée à l'aide de la propriété <see cref="P:System.Configuration.SettingsPropertyValue.SerializedValue" />, la propriété <see cref="P:System.Configuration.SettingsPropertyValue.PropertyValue" /> déclenche la désérialisation de la valeur sous-jacente.  Comme effet secondaire, la propriété <see cref="P:System.Configuration.SettingsPropertyValue.Deserialized" /> aura la valeur <see langword="true" />.  
Si cette chaîne d'événements se produit dans ASP.NET, et si une erreur se produit pendant le processus de désérialisation, l'erreur est enregistrée à l'aide de la fonctionnalité de contrôle d'intégrité d'ASP.NET. Par défaut, cela signifie que les erreurs de désérialisation apparaîtront dans le Journal des événements de l'application lors de l'exécution sous ASP.NET. Si ce processus se produit en dehors d'ASP.NET, et si une erreur se produit pendant la désérialisation, l'erreur est supprimée, et le reste de la logique pendant la désérialisation se produit. S'il n'existe aucune valeur sérialisée à désérialiser lorsque la désérialisation est tentée, l'objet <see cref="T:System.Configuration.SettingsPropertyValue" /> tente de retourner une valeur par défaut s'il en existe une qui a été configurée comme définie sur l'instance de <see cref="T:System.Configuration.SettingsProperty" /> associée. Dans ce cas, si la propriété <see cref="P:System.Configuration.SettingsProperty.DefaultValue" /> a pour valeur <see langword="null" /> ou la chaîne "[null]", l'objet <see cref="T:System.Configuration.SettingsPropertyValue" /> affecte à la propriété <see cref="P:System.Configuration.SettingsPropertyValue.PropertyValue" /> la valeur <see langword="null" /> pour les types référence ou la valeur par défaut pour le type valeur associé.  En revanche, si la propriété <see cref="P:System.Configuration.SettingsProperty.DefaultValue" /> a une référence d'objet ou une valeur de chaîne (autre que "[null]") valides, la propriété retournée est <see cref="P:System.Configuration.SettingsProperty.DefaultValue" />.  
S'il n'existe aucune valeur sérialisée à désérialiser lorsque la désérialisation est tentée et qu'aucune valeur par défaut n'a été spécifiée, une chaîne vide est retournée pour les types de chaînes. Pour tous les autres types, une instance par défaut est retournée <see cref="M:System.Activator.CreateInstance(System.Type)" /> en appelant-pour les types de référence, cela signifie qu’une tentative de création d’une instance d’objet à l’aide du constructeur sans paramètre est effectuée.  Si cette tentative échoue, la valeur <see langword="null" /> est retournée.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="While attempting to use the default value from the &lt;see cref=&quot;P:System.Configuration.SettingsProperty.DefaultValue&quot; /&gt; property, an error occurred.  Either the attempt to convert &lt;see cref=&quot;P:System.Configuration.SettingsProperty.DefaultValue&quot; /&gt; property to a valid type failed, or the resulting value was not compatible with the type defined by &lt;see cref=&quot;P:System.Configuration.SettingsProperty.PropertyType&quot; /&gt;.">Lors de la tentative d'utilisation de la valeur par défaut de la propriété <see cref="P:System.Configuration.SettingsProperty.DefaultValue" />, une erreur s'est produite.  Soit la tentative de conversion de la propriété <see cref="P:System.Configuration.SettingsProperty.DefaultValue" /> en type valide a échoué, soit la valeur résultante n'était pas compatible avec le type défini par <see cref="P:System.Configuration.SettingsProperty.PropertyType" />.</exception>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValue.SerializedValue">
      <summary vsli:raw="Gets or sets the serialized value of the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">Obtient ou définit la valeur sérialisée de l'objet <see cref="T:System.Configuration.SettingsProperty" />.</summary>
      <returns vsli:raw="The serialized value of a &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">Valeur sérialisée d'un objet <see cref="T:System.Configuration.SettingsProperty" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The serialization options for the property indicated the use of a string type converter, but a type converter was not available.">Les options de sérialisation de la propriété prévoyaient l'utilisation d'un convertisseur de type de chaîne, mais aucun convertisseur de type n'était disponible.</exception>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValue.UsingDefaultValue">
      <summary vsli:raw="Gets a Boolean value specifying whether the value of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValue&quot; /&gt; object is the default value as defined by the &lt;see cref=&quot;P:System.Configuration.SettingsProperty.DefaultValue&quot; /&gt; property value on the associated &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">Obtient une valeur Boolean spécifiant si la valeur de l'objet <see cref="T:System.Configuration.SettingsPropertyValue" /> est la valeur par défaut telle que la définit la valeur de la propriété <see cref="P:System.Configuration.SettingsProperty.DefaultValue" /> sur l'objet <see cref="T:System.Configuration.SettingsProperty" /> associé.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object is the default value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la valeur de l'objet <see cref="T:System.Configuration.SettingsProperty" /> est la valeur par défaut ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Configuration.SettingsPropertyValueCollection">
      <summary vsli:raw="Contains a collection of settings property values that map &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; objects to &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValue&quot; /&gt; objects.">Contient une collection de valeurs de propriétés de paramètres qui mappent des objets <see cref="T:System.Configuration.SettingsProperty" /> à des objets <see cref="T:System.Configuration.SettingsPropertyValue" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValueCollection&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingsPropertyValueCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.Add(System.Configuration.SettingsPropertyValue)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValue&quot; /&gt; object to the collection.">Ajoute un objet <see cref="T:System.Configuration.SettingsPropertyValue" /> à la collection.</summary>
      <param name="property" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValue&quot; /&gt; object.">Objet <see cref="T:System.Configuration.SettingsPropertyValue" />.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="An attempt was made to add an item to the collection, but the collection was marked as read-only.">Une tentative a été faite pour ajouter un élément à la collection, mais cette dernière était marquée en lecture seule.</exception>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.Clear">
      <summary vsli:raw="Removes all &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValue&quot; /&gt; objects from the collection.">Supprime tous les objets <see cref="T:System.Configuration.SettingsPropertyValue" /> de la collection.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.Clone">
      <summary vsli:raw="Creates a copy of the existing collection.">Crée une copie de la collection existante.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValueCollection&quot; /&gt; class.">Classe <see cref="T:System.Configuration.SettingsPropertyValueCollection" />.</returns>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies this &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValueCollection&quot; /&gt; collection to an array.">Copie cette collection <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> dans un tableau.</summary>
      <param name="array" vsli:raw="The array to copy the collection to.">Tableau dans lequel copier la collection.</param>
      <param name="index" vsli:raw="The index at which to begin copying.">Index où commence la copie.</param>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValueCollection.Count">
      <summary vsli:raw="Gets a value that specifies the number of &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValue&quot; /&gt; objects in the collection.">Obtient une valeur qui indique le nombre d'objets <see cref="T:System.Configuration.SettingsPropertyValue" /> dans la collection.</summary>
      <returns vsli:raw="The number of &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValue&quot; /&gt; objects in the collection.">Nombre d’objets <see cref="T:System.Configuration.SettingsPropertyValue" /> dans la collection.</returns>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.GetEnumerator">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object as it applies to the collection.">Obtient l'objet <see cref="T:System.Collections.IEnumerator" /> tel qu'il s'applique à la collection.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object as it applies to the collection.">Objet <see cref="T:System.Collections.IEnumerator" /> tel qu'il s'applique à la collection.</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValueCollection.IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether access to the collection is synchronized (thread safe).">Obtient une valeur qui indique si l'accès à la collection est synchronisé (thread safe).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValueCollection&quot; /&gt; collection is synchronized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'accès à la collection <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> est synchronisé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValueCollection.Item(System.String)">
      <summary vsli:raw="Gets an item from the collection.">Obtient un élément de la collection.</summary>
      <param name="name" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValue&quot; /&gt; object.">Objet <see cref="T:System.Configuration.SettingsPropertyValue" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValue&quot; /&gt; object with the specified &lt;paramref name=&quot;name&quot; /&gt;.">Objet <see cref="T:System.Configuration.SettingsPropertyValue" /> avec le <paramref name="name" /> spécifié.</returns>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.Remove(System.String)">
      <summary vsli:raw="Removes a &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValue&quot; /&gt; object from the collection.">Supprime un objet <see cref="T:System.Configuration.SettingsPropertyValue" /> de la collection.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValue&quot; /&gt; object.">Nom de l'objet <see cref="T:System.Configuration.SettingsPropertyValue" />.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="An attempt was made to remove an item from the collection, but the collection was marked as read-only.">Une tentative a été faite pour supprimer un élément de la collection, mais cette dernière était marquée en lecture seule.</exception>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.SetReadOnly">
      <summary vsli:raw="Sets the collection to be read-only.">Met la collection en lecture seule.</summary>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValueCollection.SyncRoot">
      <summary vsli:raw="Gets the object to synchronize access to the collection.">Obtient l'objet utilisé pour synchroniser l'accès à la collection.</summary>
      <returns vsli:raw="The object to synchronize access to the collection.">Objet utilisé pour synchroniser l'accès à la collection.</returns>
    </member>
    <member name="T:System.Configuration.SettingsPropertyWrongTypeException">
      <summary vsli:raw="Provides an exception that is thrown when an invalid type is used with a &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">Fournit une exception qui est levée lorsqu'un type non valide est utilisé avec un objet <see cref="T:System.Configuration.SettingsProperty" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyWrongTypeException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyWrongTypeException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingsPropertyWrongTypeException" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyWrongTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyWrongTypeException&quot; /&gt; class based on the supplied parameters.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingsPropertyWrongTypeException" /> en fonction des paramètres fournis.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that holds the serialized object data about the exception being thrown.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> qui contient les données d'objet sérialisées concernant l'exception levée.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains contextual information about the source or destination of the serialized stream.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui contient des informations contextuelles sur la source ou la destination du flux sérialisé.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyWrongTypeException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyWrongTypeException&quot; /&gt; class based on the supplied parameter.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingsPropertyWrongTypeException" /> en fonction du paramètre fourni.</summary>
      <param name="message" vsli:raw="A string containing an exception message.">Chaîne contenant un message d'exception.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyWrongTypeException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyWrongTypeException&quot; /&gt; class based on the supplied parameters.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingsPropertyWrongTypeException" /> en fonction des paramètres fournis.</summary>
      <param name="message" vsli:raw="A string containing an exception message.">Chaîne contenant un message d'exception.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception.">Exception ayant provoqué l'exception actuelle.</param>
    </member>
    <member name="T:System.Configuration.SettingsProvider">
      <summary vsli:raw="Acts as a base class for deriving custom settings providers in the application settings architecture.">Agit comme classe de base pour la dérivation de fournisseurs de paramètres personnalisés dans l'architecture de paramètres d'application.</summary>
    </member>
    <member name="M:System.Configuration.SettingsProvider.#ctor">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Configuration.SettingsProvider&quot; /&gt; class.">Initialise une instance de la classe <see cref="T:System.Configuration.SettingsProvider" />.</summary>
    </member>
    <member name="P:System.Configuration.SettingsProvider.ApplicationName">
      <summary vsli:raw="Gets or sets the name of the currently running application.">Obtient ou définit le nom de l'application en cours d'exécution.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the application's shortened name, which does not contain a full path or extension, for example, &lt;c&gt;SimpleAppSettings&lt;/c&gt;.">Qui contient le nom abrégé de l’application, qui ne contient pas de chemin d’accès complet ou d’extension, par exemple, <c>SimpleAppSettings.</c><see cref="T:System.String" /></returns>
    </member>
    <member name="M:System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
      <summary vsli:raw="Returns the collection of settings property values for the specified application instance and settings property group.">Retourne la collection de valeurs de propriétés de paramètres pour l'instance d'application et le groupe de propriétés de paramètres spécifiés.</summary>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsContext&quot; /&gt; describing the current application use.">
        <see cref="T:System.Configuration.SettingsContext" /> décrivant l'utilisation de l'application actuelle.</param>
      <param name="collection" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsPropertyCollection&quot; /&gt; containing the settings property group whose values are to be retrieved.">
        <see cref="T:System.Configuration.SettingsPropertyCollection" /> contenant le groupe de propriétés de paramètres dont les valeurs seront récupérées.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValueCollection&quot; /&gt; containing the values for the specified settings property group.">
        <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> contenant les valeurs pour le groupe de propriétés de paramètres spécifié.</returns>
    </member>
    <member name="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)">
      <summary vsli:raw="Sets the values of the specified group of property settings.">Définit les valeurs du groupe de paramètres de propriétés spécifié.</summary>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsContext&quot; /&gt; describing the current application usage.">
        <see cref="T:System.Configuration.SettingsContext" /> décrivant l'utilisation de l'application actuelle.</param>
      <param name="collection" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValueCollection&quot; /&gt; representing the group of property settings to set.">
        <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> représentant le groupe de paramètres de propriétés à définir.</param>
    </member>
    <member name="T:System.Configuration.SettingsProviderAttribute">
      <summary vsli:raw="Specifies the settings provider used to provide storage for the current application settings class or property. This class cannot be inherited.">Spécifie le fournisseur de paramètres utilisé pour fournir le stockage pour la propriété ou la classe de paramètres d’application actuelle. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.SettingsProviderAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Configuration.SettingsProviderAttribute&quot; /&gt; class.">Initialise une instance de la classe <see cref="T:System.Configuration.SettingsProviderAttribute" />.</summary>
      <param name="providerTypeName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the name of the settings provider.">
        <see cref="T:System.String" /> contenant le nom du fournisseur de paramètres.</param>
    </member>
    <member name="M:System.Configuration.SettingsProviderAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsProviderAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingsProviderAttribute" />.</summary>
      <param name="providerType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; containing the settings provider type.">
        <see cref="T:System.Type" /> contenant le type de fournisseur de paramètres.</param>
    </member>
    <member name="P:System.Configuration.SettingsProviderAttribute.ProviderTypeName">
      <summary vsli:raw="Gets the type name of the settings provider.">Obtient le nom de type du fournisseur de paramètres.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the name of the settings provider.">
        <see cref="T:System.String" /> contenant le nom du fournisseur de paramètres.</returns>
    </member>
    <member name="T:System.Configuration.SettingsProviderCollection">
      <summary vsli:raw="Represents a collection of application settings providers.">Représente une collection de fournisseurs de paramètres d'application.</summary>
    </member>
    <member name="M:System.Configuration.SettingsProviderCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsProviderCollection&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingsProviderCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsProviderCollection.Add(System.Configuration.Provider.ProviderBase)">
      <summary vsli:raw="Adds a new settings provider to the collection.">Ajoute un nouveau fournisseur de paramètres à la collection.</summary>
      <param name="provider" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.Provider.ProviderBase&quot; /&gt; to add to the collection.">
        <see cref="T:System.Configuration.Provider.ProviderBase" /> à ajouter à la collection.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;provider&quot; /&gt; parameter is not of type &lt;see cref=&quot;T:System.Configuration.SettingsProvider&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.Configuration.Provider.ProviderBase.Name&quot; /&gt; property of the provider parameter is null or an empty string.  &#xA;  &#xA; -or-  &#xA;  &#xA; A settings provider with the same &lt;see cref=&quot;P:System.Configuration.Provider.ProviderBase.Name&quot; /&gt; already exists in the collection.">Le paramètre <paramref name="provider" /> n'est pas du type <see cref="T:System.Configuration.SettingsProvider" />.  
ou 
La propriété <see cref="P:System.Configuration.Provider.ProviderBase.Name" /> du paramètre provider est null ou représente une chaîne vide.  

ou - 
Un fournisseur de paramètres avec le même <see cref="P:System.Configuration.Provider.ProviderBase.Name" /> existe déjà dans la collection.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">La collection est en lecture seule.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;provider&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="provider" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Configuration.SettingsProviderCollection.Item(System.String)">
      <summary vsli:raw="Gets the settings provider in the collection that matches the specified name.">Obtient le fournisseur de paramètres dans la collection qui correspond au nom spécifié.</summary>
      <param name="name" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the friendly name of the settings provider.">
        <see cref="T:System.String" /> contenant le nom convivial du fournisseur de paramètres.</param>
      <returns vsli:raw="If found, the &lt;see cref=&quot;T:System.Configuration.SettingsProvider&quot; /&gt; whose name matches that specified by the name parameter; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">S'il est trouvé, <see cref="T:System.Configuration.SettingsProvider" /> dont le nom correspond à celui spécifié par le paramètre de nom ; sinon, <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="name" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only when setting this value.">La collection est en lecture seule lors de la définition de cette valeur.</exception>
    </member>
    <member name="T:System.Configuration.SettingsSavingEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Configuration.ApplicationSettingsBase.SettingsSaving&quot; /&gt; event.">Représente la méthode qui gérera l'événement <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" />.</summary>
      <param name="sender" vsli:raw="The source of the event, typically a data container or data-bound collection.">Source de l’événement, en général un conteneur de données ou une collection liée aux données.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CancelEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.ComponentModel.CancelEventArgs" /> qui contient les données d'événement.</param>
    </member>
    <member name="T:System.Configuration.SettingsSerializeAs">
      <summary vsli:raw="Determines the serialization scheme used to store application settings.">Détermine le modèle de sérialisation utilisé pour stocker des paramètres d'application.</summary>
    </member>
    <member name="F:System.Configuration.SettingsSerializeAs.Binary">
      <summary vsli:raw="The settings property is serialized using binary object serialization.">La propriété de paramètres est sérialisée à l'aide de la sérialisation d'objet binaire.</summary>
    </member>
    <member name="F:System.Configuration.SettingsSerializeAs.ProviderSpecific">
      <summary vsli:raw="The settings provider has implicit knowledge of the property or its type and picks an appropriate serialization mechanism. Often used for custom serialization.">Le fournisseur de paramètres a une connaissance implicite de la propriété ou de son type et sélectionne un mécanisme de sérialisation approprié. Souvent utilisé pour la sérialisation personnalisée.</summary>
    </member>
    <member name="F:System.Configuration.SettingsSerializeAs.String">
      <summary vsli:raw="The settings property is serialized as plain text.">La propriété de paramètres est sérialisée comme texte brut.</summary>
    </member>
    <member name="F:System.Configuration.SettingsSerializeAs.Xml">
      <summary vsli:raw="The settings property is serialized as XML using XML serialization.">La propriété de paramètres est sérialisée comme code XML à l'aide de la sérialisation XML.</summary>
    </member>
    <member name="T:System.Configuration.SettingsSerializeAsAttribute">
      <summary vsli:raw="Specifies the serialization mechanism that the settings provider should use. This class cannot be inherited.">Spécifie le mécanisme de sérialisation que le fournisseur de paramètres doit utiliser. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.SettingsSerializeAsAttribute.#ctor(System.Configuration.SettingsSerializeAs)">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Configuration.SettingsSerializeAsAttribute&quot; /&gt; class.">Initialise une instance de la classe <see cref="T:System.Configuration.SettingsSerializeAsAttribute" />.</summary>
      <param name="serializeAs" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsSerializeAs&quot; /&gt; enumerated value that specifies the serialization scheme.">Valeur énumérée <see cref="T:System.Configuration.SettingsSerializeAs" /> qui spécifie la méthode de sérialisation.</param>
    </member>
    <member name="P:System.Configuration.SettingsSerializeAsAttribute.SerializeAs">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Configuration.SettingsSerializeAs&quot; /&gt; enumeration value that specifies the serialization scheme.">Obtient la valeur d’énumération <see cref="T:System.Configuration.SettingsSerializeAs" /> qui spécifie la méthode de sérialisation.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsSerializeAs&quot; /&gt; enumerated value that specifies the serialization scheme.">Valeur énumérée <see cref="T:System.Configuration.SettingsSerializeAs" /> qui spécifie la méthode de sérialisation.</returns>
    </member>
    <member name="T:System.Configuration.SettingValueElement">
      <summary vsli:raw="Contains the XML representing the serialized value of the setting. This class cannot be inherited.">Contient le code XML représentant la valeur sérialisée du paramètre. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.SettingValueElement.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingValueElement&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingValueElement" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingValueElement.Equals(System.Object)">
      <summary vsli:raw="Compares the current &lt;see cref=&quot;T:System.Configuration.SettingValueElement&quot; /&gt; instance to the specified object.">Compare l’instance de <see cref="T:System.Configuration.SettingValueElement" /> actuelle à l’objet spécifié.</summary>
      <param name="settingValue" vsli:raw="The object to compare.">Objet à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Configuration.SettingValueElement&quot; /&gt; instance is equal to the specified object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l’instance de <see cref="T:System.Configuration.SettingValueElement" /> est égale à l’objet spécifié ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.SettingValueElement.GetHashCode">
      <summary vsli:raw="Gets a unique value representing the &lt;see cref=&quot;T:System.Configuration.SettingValueElement&quot; /&gt; current instance.">Obtient une valeur unique représentant l’instance actuelle de <see cref="T:System.Configuration.SettingValueElement" />.</summary>
      <returns vsli:raw="A unique value representing the &lt;see cref=&quot;T:System.Configuration.SettingValueElement&quot; /&gt; current instance.">Valeur unique représentant l’instance actuelle de <see cref="T:System.Configuration.SettingValueElement" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingValueElement.ValueXml">
      <summary vsli:raw="Gets or sets the value of a &lt;see cref=&quot;T:System.Configuration.SettingValueElement&quot; /&gt; object by using an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object.">Obtient ou définit la valeur d’un objet <see cref="T:System.Configuration.SettingValueElement" /> en utilisant un objet <see cref="T:System.Xml.XmlNode" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object containing the value of a &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt;.">Objet <see cref="T:System.Xml.XmlNode" /> contenant la valeur d'un <see cref="T:System.Configuration.SettingElement" />.</returns>
    </member>
    <member name="T:System.Configuration.SingleTagSectionHandler">
      <summary vsli:raw="Handles configuration sections that are represented by a single XML tag in the .config file.">Gère des sections de configuration qui sont représentées par une balise XML unique dans le fichier .config.</summary>
    </member>
    <member name="M:System.Configuration.SingleTagSectionHandler.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SingleTagSectionHandler&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SingleTagSectionHandler" />.</summary>
    </member>
    <member name="M:System.Configuration.SingleTagSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <summary vsli:raw="Used internally to create a new instance of this object.">Utilisé en interne pour créer une instance de cet objet.</summary>
      <param name="parent" vsli:raw="The parent of this object.">Parent de cet objet.</param>
      <param name="context" vsli:raw="The context of this object.">Contexte de cet objet.</param>
      <param name="section" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object in the configuration.">Objet <see cref="T:System.Xml.XmlNode" /> de la configuration.</param>
      <returns vsli:raw="The created object handler.">Gestionnaire d’objets créé.</returns>
    </member>
    <member name="T:System.Configuration.SpecialSetting">
      <summary vsli:raw="Specifies the special setting category of a application settings property.">Spécifie la catégorie de paramètre spéciale d’une propriété de paramètres d’application.</summary>
    </member>
    <member name="F:System.Configuration.SpecialSetting.ConnectionString">
      <summary vsli:raw="The configuration property represents a connection string, typically for a data store or network resource.">La propriété de configuration représente une chaîne de connexion, en général pour un magasin de données ou une ressource réseau.</summary>
    </member>
    <member name="F:System.Configuration.SpecialSetting.WebServiceUrl">
      <summary vsli:raw="The configuration property represents a Uniform Resource Locator (URL) to a Web service.">La propriété de configuration représente la URL (Uniform Resource Locator) d’un service web.</summary>
    </member>
    <member name="T:System.Configuration.SpecialSettingAttribute">
      <summary vsli:raw="Indicates that an application settings property has a special significance. This class cannot be inherited.">Indique qu’une propriété de paramètres d’application a une signification spéciale. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.SpecialSettingAttribute.#ctor(System.Configuration.SpecialSetting)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SpecialSettingAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SpecialSettingAttribute" />.</summary>
      <param name="specialSetting" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SpecialSetting&quot; /&gt; enumeration value defining the category of the application settings property.">Valeur d'énumération <see cref="T:System.Configuration.SpecialSetting" /> définissant la catégorie de la propriété de paramètres d'application.</param>
    </member>
    <member name="P:System.Configuration.SpecialSettingAttribute.SpecialSetting">
      <summary vsli:raw="Gets the value describing the special setting category of the application settings property.">Obtient la valeur décrivant la catégorie de paramètre spéciale de la propriété de paramètres d’application.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SpecialSetting&quot; /&gt; enumeration value defining the category of the application settings property.">Valeur d'énumération <see cref="T:System.Configuration.SpecialSetting" /> définissant la catégorie de la propriété de paramètres d'application.</returns>
    </member>
    <member name="T:System.Configuration.StringValidator">
      <summary vsli:raw="Provides validation of a string.">Fournit la validation d'une chaîne.</summary>
    </member>
    <member name="M:System.Configuration.StringValidator.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.StringValidator&quot; /&gt; class, based on a supplied parameter.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.StringValidator" /> en fonction d’un paramètre fourni.</summary>
      <param name="minLength" vsli:raw="An integer that specifies the minimum length of the string value.">Entier qui spécifie la longueur minimale de la valeur de chaîne.</param>
    </member>
    <member name="M:System.Configuration.StringValidator.#ctor(System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.StringValidator&quot; /&gt; class, based on supplied parameters.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.StringValidator" /> en fonction des paramètres fournis.</summary>
      <param name="minLength" vsli:raw="An integer that specifies the minimum length of the string value.">Entier qui spécifie la longueur minimale de la valeur de chaîne.</param>
      <param name="maxLength" vsli:raw="An integer that specifies the maximum length of the string value.">Entier qui spécifie la longueur maximale de la valeur de chaîne.</param>
    </member>
    <member name="M:System.Configuration.StringValidator.#ctor(System.Int32,System.Int32,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.StringValidator&quot; /&gt; class, based on supplied parameters.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.StringValidator" /> en fonction des paramètres fournis.</summary>
      <param name="minLength" vsli:raw="An integer that specifies the minimum length of the string value.">Entier qui spécifie la longueur minimale de la valeur de chaîne.</param>
      <param name="maxLength" vsli:raw="An integer that specifies the maximum length of the string value.">Entier qui spécifie la longueur maximale de la valeur de chaîne.</param>
      <param name="invalidCharacters" vsli:raw="A string that represents invalid characters.">Chaîne qui représente des caractères non valides.</param>
    </member>
    <member name="M:System.Configuration.StringValidator.CanValidate(System.Type)">
      <summary vsli:raw="Determines whether an object can be validated based on type.">Détermine si un objet peut être validé en fonction du type.</summary>
      <param name="type" vsli:raw="The object type.">Type d'objet.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter matches a string; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le paramètre <paramref name="type" /> correspond à une chaîne ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.StringValidator.Validate(System.Object)">
      <summary vsli:raw="Determines whether the value of an object is valid.">Détermine si la valeur d’un objet est valide.</summary>
      <param name="value" vsli:raw="The object value.">Valeur de l’objet.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is less than &lt;paramref name=&quot;minValue&quot; /&gt; or greater than &lt;paramref name=&quot;maxValue&quot; /&gt; as defined in the constructor.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;value&quot; /&gt; contains invalid characters.">
        <paramref name="value" /> est inférieur à <paramref name="minValue" /> ou supérieur à <paramref name="maxValue" /> tel que défini dans le constructeur.  

ou - 
<paramref name="value" /> contient des caractères non valides.</exception>
    </member>
    <member name="T:System.Configuration.StringValidatorAttribute">
      <summary vsli:raw="Declaratively instructs .NET to perform string validation on a configuration property. This class cannot be inherited.">Ordonne de manière déclarative au .NET Framework d'effectuer la validation des chaînes sur une propriété de configuration. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.StringValidatorAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.StringValidatorAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.StringValidatorAttribute" />.</summary>
    </member>
    <member name="P:System.Configuration.StringValidatorAttribute.InvalidCharacters">
      <summary vsli:raw="Gets or sets the invalid characters for the property.">Obtient ou définit les caractères non valides pour la propriété.</summary>
      <returns vsli:raw="The string that contains the set of characters that are not allowed for the property.">Chaîne qui contient le jeu des caractères qui ne sont pas autorisés pour la propriété.</returns>
    </member>
    <member name="P:System.Configuration.StringValidatorAttribute.MaxLength">
      <summary vsli:raw="Gets or sets the maximum length allowed for the string to assign to the property.">Obtient ou définit la longueur maximale autorisée pour la chaîne à assigner à la propriété.</summary>
      <returns vsli:raw="An integer that indicates the maximum allowed length for the string to assign to the property.">Entier qui indique la longueur maximale autorisée pour la chaîne à assigner à la propriété.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The selected value is less than &lt;see cref=&quot;P:System.Configuration.StringValidatorAttribute.MinLength&quot; /&gt;.">La valeur sélectionnée est inférieure à <see cref="P:System.Configuration.StringValidatorAttribute.MinLength" />.</exception>
    </member>
    <member name="P:System.Configuration.StringValidatorAttribute.MinLength">
      <summary vsli:raw="Gets or sets the minimum allowed value for the string to assign to the property.">Obtient ou définit la longueur minimale autorisée pour la chaîne à assigner à la propriété.</summary>
      <returns vsli:raw="An integer that indicates the allowed minimum length for the string to assign to the property.">Entier qui indique la longueur minimale autorisée pour la chaîne à assigner à la propriété.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The selected value is greater than &lt;see cref=&quot;P:System.Configuration.StringValidatorAttribute.MaxLength&quot; /&gt;.">La valeur sélectionnée est supérieure à <see cref="P:System.Configuration.StringValidatorAttribute.MaxLength" />.</exception>
    </member>
    <member name="P:System.Configuration.StringValidatorAttribute.ValidatorInstance">
      <summary vsli:raw="Gets an instance of the &lt;see cref=&quot;T:System.Configuration.StringValidator&quot; /&gt; class.">Obtient une instance de la classe <see cref="T:System.Configuration.StringValidator" />.</summary>
      <returns vsli:raw="A current &lt;see cref=&quot;T:System.Configuration.StringValidator&quot; /&gt; settings in a &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorBase&quot; /&gt; validator instance.">Paramètres d'un <see cref="T:System.Configuration.StringValidator" /> actuel dans une instance de validateur <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</returns>
    </member>
    <member name="T:System.Configuration.SubclassTypeValidator">
      <summary vsli:raw="Validates that an object is a derived class of a specified type.">Vérifie qu'un objet est une classe dérivée d'un type spécifié.</summary>
    </member>
    <member name="M:System.Configuration.SubclassTypeValidator.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SubclassTypeValidator&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SubclassTypeValidator" />.</summary>
      <param name="baseClass" vsli:raw="The base class to validate against.">Classe de base par rapport à laquelle effectuer la validation.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;baseClass&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="baseClass" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Configuration.SubclassTypeValidator.CanValidate(System.Type)">
      <summary vsli:raw="Determines whether an object can be validated based on type.">Détermine si un objet peut être validé en fonction du type.</summary>
      <param name="type" vsli:raw="The object type.">Type d'objet.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter matches a type that can be validated; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le paramètre <paramref name="type" /> correspond à un type qui peut être validé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.SubclassTypeValidator.Validate(System.Object)">
      <summary vsli:raw="Determines whether the value of an object is valid.">Détermine si la valeur d’un objet est valide.</summary>
      <param name="value" vsli:raw="The object value.">Valeur de l’objet.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is not of a &lt;see cref=&quot;T:System.Type&quot; /&gt; that can be derived from &lt;paramref name=&quot;baseClass&quot; /&gt; as defined in the constructor.">
        <paramref name="value" /> n'appartient pas à un <see cref="T:System.Type" /> qui peut être dérivé de <paramref name="baseClass" /> comme défini dans le constructeur.</exception>
    </member>
    <member name="T:System.Configuration.SubclassTypeValidatorAttribute">
      <summary vsli:raw="Declaratively instructs .NET to perform validation on a configuration property. This class cannot be inherited.">Demande de façon déclarative au .NET Framework d’effectuer la validation sur une propriété de configuration. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.SubclassTypeValidatorAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SubclassTypeValidatorAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SubclassTypeValidatorAttribute" />.</summary>
      <param name="baseClass" vsli:raw="The base class type.">Type de classe de base.</param>
    </member>
    <member name="P:System.Configuration.SubclassTypeValidatorAttribute.BaseClass">
      <summary vsli:raw="Gets the base type of the object being validated.">Obtient le type de base de l’objet en cours de validation.</summary>
      <returns vsli:raw="The base type of the object being validated.">Type de base de l'objet en cours de validation.</returns>
    </member>
    <member name="P:System.Configuration.SubclassTypeValidatorAttribute.ValidatorInstance">
      <summary vsli:raw="Gets the validator attribute instance.">Obtient l’instance d’attribut du validateur.</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorBase&quot; /&gt; instance.">Instance <see cref="T:System.Configuration.ConfigurationValidatorBase" /> actuelle.</returns>
    </member>
    <member name="T:System.Configuration.TimeSpanMinutesConverter">
      <summary vsli:raw="Converts a time span expressed in minutes.">Convertit un intervalle de temps exprimé en minutes.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanMinutesConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.TimeSpanMinutesConverter&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.TimeSpanMinutesConverter" />.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanMinutesConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">Convertit une <see cref="T:System.String" /> en une <see cref="T:System.TimeSpan" />.</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; object used for type conversions.">Objet <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilisé pour les conversions de type.</param>
      <param name="ci" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; object used during conversion.">Objet <see cref="T:System.Globalization.CultureInfo" /> utilisé pendant la conversion.</param>
      <param name="data" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; object to convert.">Objet <see cref="T:System.String" /> à convertir.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; representing the &lt;paramref name=&quot;data&quot; /&gt; parameter in minutes.">
        <see cref="T:System.TimeSpan" /> représentant le paramètre <paramref name="data" /> en minutes.</returns>
    </member>
    <member name="M:System.Configuration.TimeSpanMinutesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convertit une <see cref="T:System.TimeSpan" /> en une <see cref="T:System.String" />.</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; object used for type conversions.">Objet <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilisé pour les conversions de type.</param>
      <param name="ci" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; object used during conversion.">Objet <see cref="T:System.Globalization.CultureInfo" /> utilisé pendant la conversion.</param>
      <param name="value" vsli:raw="The value to convert to.">Valeur vers laquelle effectuer la conversion.</param>
      <param name="type" vsli:raw="The type to convert to.">Type vers lequel effectuer la conversion.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; representing the &lt;paramref name=&quot;value&quot; /&gt; parameter in minutes.">
        <see cref="T:System.String" /> représentant le paramètre <paramref name="value" /> en minutes.</returns>
    </member>
    <member name="T:System.Configuration.TimeSpanMinutesOrInfiniteConverter">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; expressed in minutes or as a standard infinite time span.">Convertit un <see cref="T:System.TimeSpan" /> exprimé en minutes ou comme un intervalle de temps infini standard.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanMinutesOrInfiniteConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.TimeSpanMinutesOrInfiniteConverter&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.TimeSpanMinutesOrInfiniteConverter" />.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanMinutesOrInfiniteConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">Convertit une <see cref="T:System.String" /> en une <see cref="T:System.TimeSpan" />.</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; object used for type conversions.">Objet <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilisé pour les conversions de type.</param>
      <param name="ci" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; object used during conversion.">Objet <see cref="T:System.Globalization.CultureInfo" /> utilisé pendant la conversion.</param>
      <param name="data" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; object to convert.">Objet <see cref="T:System.String" /> à convertir.</param>
      <returns vsli:raw="The &lt;see cref=&quot;F:System.TimeSpan.MaxValue&quot;&gt;TimeSpan.MaxValue&lt;/see&gt;, if the &lt;paramref name=&quot;data&quot; /&gt; parameter is the &lt;see cref=&quot;T:System.String&quot; /&gt; &quot;infinite&quot;; otherwise, the &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; representing the &lt;paramref name=&quot;data&quot; /&gt; parameter in minutes.">
        <see cref="F:System.TimeSpan.MaxValue" />, si le paramètre <paramref name="data" /> est la <see cref="T:System.String" /> « infini » ; sinon, <see cref="T:System.TimeSpan" /> représentant le paramètre <paramref name="data" /> en minutes.</returns>
    </member>
    <member name="M:System.Configuration.TimeSpanMinutesOrInfiniteConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convertit une <see cref="T:System.TimeSpan" /> en une <see cref="T:System.String" />.</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; object used for type conversions.">Objet <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilisé pour les conversions de type.</param>
      <param name="ci" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; object used during conversion.">Objet <see cref="T:System.Globalization.CultureInfo" /> utilisé pendant la conversion.</param>
      <param name="value" vsli:raw="The value to convert.">Valeur à convertir.</param>
      <param name="type" vsli:raw="The conversion type.">Type de conversion.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; &quot;infinite&quot;, if the &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see cref=&quot;F:System.TimeSpan.MaxValue&quot;&gt;TimeSpan.MaxValue&lt;/see&gt;; otherwise, the &lt;see cref=&quot;T:System.String&quot; /&gt; representing the &lt;paramref name=&quot;value&quot; /&gt; parameter in minutes.">
        <see cref="T:System.String" /> « infini », si le paramètre <paramref name="value" /> est <see cref="F:System.TimeSpan.MaxValue" /> ; sinon, la <see cref="T:System.String" /> représentant le paramètre <paramref name="value" /> en minutes.</returns>
    </member>
    <member name="T:System.Configuration.TimeSpanSecondsConverter">
      <summary vsli:raw="Converts a time span expressed in seconds.">Convertit un intervalle de temps exprimé en secondes.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanSecondsConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.TimeSpanSecondsConverter&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.TimeSpanSecondsConverter" />.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanSecondsConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">Convertit une <see cref="T:System.String" /> en une <see cref="T:System.TimeSpan" />.</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; object used for type conversions.">Objet <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilisé pour les conversions de type.</param>
      <param name="ci" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; object used during conversion.">Objet <see cref="T:System.Globalization.CultureInfo" /> utilisé pendant la conversion.</param>
      <param name="data" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; object to convert.">Objet <see cref="T:System.String" /> à convertir.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; representing the &lt;paramref name=&quot;data&quot; /&gt; parameter in seconds.">
        <see cref="T:System.TimeSpan" /> représentant le paramètre <paramref name="data" /> en secondes.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;data&quot; /&gt; cannot be parsed as an integer value.">
        <paramref name="data" /> ne peut pas être analysé en tant que valeur entière.</exception>
    </member>
    <member name="M:System.Configuration.TimeSpanSecondsConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convertit une <see cref="T:System.TimeSpan" /> en une <see cref="T:System.String" />.</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; object used for type conversions.">Objet <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilisé pour les conversions de type.</param>
      <param name="ci" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; object used during conversion.">Objet <see cref="T:System.Globalization.CultureInfo" /> utilisé pendant la conversion.</param>
      <param name="value" vsli:raw="The value to convert to.">Valeur vers laquelle effectuer la conversion.</param>
      <param name="type" vsli:raw="The type to convert to.">Type vers lequel effectuer la conversion.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the &lt;paramref name=&quot;value&quot; /&gt; parameter in minutes.">
        <see cref="T:System.String" /> qui représente le paramètre <paramref name="value" /> en minutes.</returns>
    </member>
    <member name="T:System.Configuration.TimeSpanSecondsOrInfiniteConverter">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; expressed in seconds or as a standard infinite time span.">Convertit un <see cref="T:System.TimeSpan" /> exprimé en secondes ou comme un intervalle de temps infini standard.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanSecondsOrInfiniteConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.TimeSpanSecondsOrInfiniteConverter&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.TimeSpanSecondsOrInfiniteConverter" />.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanSecondsOrInfiniteConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">Convertit une <see cref="T:System.String" /> en une <see cref="T:System.TimeSpan" />.</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; object used for type conversions.">Objet <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilisé pour les conversions de type.</param>
      <param name="ci" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; object used during conversion.">Objet <see cref="T:System.Globalization.CultureInfo" /> utilisé pendant la conversion.</param>
      <param name="data" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; object to convert.">Objet <see cref="T:System.String" /> à convertir.</param>
      <returns vsli:raw="The &lt;see cref=&quot;F:System.TimeSpan.MaxValue&quot;&gt;TimeSpan.MaxValue&lt;/see&gt;, if the &lt;paramref name=&quot;data&quot; /&gt; parameter is the &lt;see cref=&quot;T:System.String&quot; /&gt; &quot;infinite&quot;; otherwise, the &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; representing the &lt;paramref name=&quot;data&quot; /&gt; parameter in seconds.">
        <see cref="F:System.TimeSpan.MaxValue" />, si le paramètre <paramref name="data" /> est la <see cref="T:System.String" /> « infini » ; sinon, <see cref="T:System.TimeSpan" /> représentant le paramètre <paramref name="data" /> en secondes.</returns>
    </member>
    <member name="M:System.Configuration.TimeSpanSecondsOrInfiniteConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; to a. &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convertit un <see cref="T:System.TimeSpan" /> en <see cref="T:System.String" />.</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; object used for type conversions.">Objet <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilisé pour les conversions de type.</param>
      <param name="ci" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; object used during conversion.">Objet <see cref="T:System.Globalization.CultureInfo" /> utilisé pendant la conversion.</param>
      <param name="value" vsli:raw="The value to convert.">Valeur à convertir.</param>
      <param name="type" vsli:raw="The conversion type.">Type de conversion.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; &quot;infinite&quot;, if the &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see cref=&quot;F:System.TimeSpan.MaxValue&quot;&gt;TimeSpan.MaxValue&lt;/see&gt;; otherwise, the &lt;see cref=&quot;T:System.String&quot; /&gt; representing the &lt;paramref name=&quot;value&quot; /&gt; parameter in seconds.">
        <see cref="T:System.String" /> « infini », si le paramètre <paramref name="value" /> est <see cref="F:System.TimeSpan.MaxValue" /> ; sinon, la <see cref="T:System.String" /> représentant le paramètre <paramref name="value" /> en secondes.</returns>
    </member>
    <member name="T:System.Configuration.TimeSpanValidator">
      <summary vsli:raw="Provides validation of a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; object.">Fournit la validation d’un objet <see cref="T:System.TimeSpan" />.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanValidator.#ctor(System.TimeSpan,System.TimeSpan)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.TimeSpanValidator&quot; /&gt; class, based on supplied parameters.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.TimeSpanValidator" /> en fonction des paramètres fournis.</summary>
      <param name="minValue" vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; object that specifies the minimum time allowed to pass validation.">Objet <see cref="T:System.TimeSpan" /> qui spécifie la durée minimale autorisée pour être validé.</param>
      <param name="maxValue" vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; object that specifies the maximum time allowed to pass validation.">Objet <see cref="T:System.TimeSpan" /> qui spécifie la durée maximale autorisée pour être validé.</param>
    </member>
    <member name="M:System.Configuration.TimeSpanValidator.#ctor(System.TimeSpan,System.TimeSpan,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.TimeSpanValidator&quot; /&gt; class, based on supplied parameters.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.TimeSpanValidator" /> en fonction des paramètres fournis.</summary>
      <param name="minValue" vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; object that specifies the minimum time allowed to pass validation.">Objet <see cref="T:System.TimeSpan" /> qui spécifie la durée minimale autorisée pour être validé.</param>
      <param name="maxValue" vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; object that specifies the maximum time allowed to pass validation.">Objet <see cref="T:System.TimeSpan" /> qui spécifie la durée maximale autorisée pour être validé.</param>
      <param name="rangeIsExclusive" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the validation range is exclusive.">Valeur <see cref="T:System.Boolean" /> qui spécifie si la plage de validation est exclusive.</param>
    </member>
    <member name="M:System.Configuration.TimeSpanValidator.#ctor(System.TimeSpan,System.TimeSpan,System.Boolean,System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.TimeSpanValidator&quot; /&gt; class, based on supplied parameters.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.TimeSpanValidator" /> en fonction des paramètres fournis.</summary>
      <param name="minValue" vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; object that specifies the minimum time allowed to pass validation.">Objet <see cref="T:System.TimeSpan" /> qui spécifie la durée minimale autorisée pour être validé.</param>
      <param name="maxValue" vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; object that specifies the maximum time allowed to pass validation.">Objet <see cref="T:System.TimeSpan" /> qui spécifie la durée maximale autorisée pour être validé.</param>
      <param name="rangeIsExclusive" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the validation range is exclusive.">Valeur <see cref="T:System.Boolean" /> qui spécifie si la plage de validation est exclusive.</param>
      <param name="resolutionInSeconds" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; value that specifies a number of seconds.">Valeur <see cref="T:System.Int64" /> qui spécifie un nombre de secondes.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;resolutionInSeconds&quot; /&gt; is less than &lt;see langword=&quot;0&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;minValue&quot; /&gt; is greater than &lt;paramref name=&quot;maxValue&quot; /&gt;.">
        <paramref name="resolutionInSeconds" /> est inférieur à <see langword="0" />.  
ou 
 <paramref name="minValue" /> est supérieur à <paramref name="maxValue" />.</exception>
    </member>
    <member name="M:System.Configuration.TimeSpanValidator.CanValidate(System.Type)">
      <summary vsli:raw="Determines whether the type of the object can be validated.">Détermine si le type de l'objet peut être validé.</summary>
      <param name="type" vsli:raw="The type of the object.">Type de l'objet.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter matches a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le paramètre <paramref name="type" /> respecte une valeur <see cref="T:System.TimeSpan" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.TimeSpanValidator.Validate(System.Object)">
      <summary vsli:raw="Determines whether the value of an object is valid.">Détermine si la valeur d’un objet est valide.</summary>
      <param name="value" vsli:raw="The value of an object.">Valeur d’un objet.</param>
    </member>
    <member name="T:System.Configuration.TimeSpanValidatorAttribute">
      <summary vsli:raw="Declaratively instructs .NET to perform time validation on a configuration property. This class cannot be inherited.">Demande de façon déclarative au .NET Framework d’effectuer la validation temporelle sur une propriété de configuration. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanValidatorAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.TimeSpanValidatorAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.TimeSpanValidatorAttribute" />.</summary>
    </member>
    <member name="P:System.Configuration.TimeSpanValidatorAttribute.ExcludeRange">
      <summary vsli:raw="Gets or sets a value that indicates whether to include or exclude the integers in the range as defined by &lt;see cref=&quot;P:System.Configuration.TimeSpanValidatorAttribute.MinValueString&quot; /&gt; and &lt;see cref=&quot;P:System.Configuration.TimeSpanValidatorAttribute.MaxValueString&quot; /&gt;.">Obtient ou définit une valeur qui indique s'il faut inclure ou exclure les entiers dans la plage telle qu'elle est définie par <see cref="P:System.Configuration.TimeSpanValidatorAttribute.MinValueString" /> et <see cref="P:System.Configuration.TimeSpanValidatorAttribute.MaxValueString" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value must be excluded; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la valeur doit être exclue ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.TimeSpanValidatorAttribute.MaxValue">
      <summary vsli:raw="Gets the absolute maximum &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">Obtient la valeur <see cref="T:System.TimeSpan" /> absolue maximale.</summary>
      <returns vsli:raw="The allowed maximum &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">Valeur <see cref="T:System.TimeSpan" /> maximale autorisée.</returns>
    </member>
    <member name="P:System.Configuration.TimeSpanValidatorAttribute.MaxValueString">
      <summary vsli:raw="Gets or sets the relative maximum &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">Obtient ou définit la valeur <see cref="T:System.TimeSpan" /> maximale relative.</summary>
      <returns vsli:raw="The allowed maximum &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">Valeur <see cref="T:System.TimeSpan" /> maximale autorisée.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The selected value represents less than &lt;see cref=&quot;P:System.Configuration.TimeSpanValidatorAttribute.MinValue&quot; /&gt;.">La valeur sélectionnée est inférieure à <see cref="P:System.Configuration.TimeSpanValidatorAttribute.MinValue" />.</exception>
    </member>
    <member name="P:System.Configuration.TimeSpanValidatorAttribute.MinValue">
      <summary vsli:raw="Gets the absolute minimum &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">Obtient la valeur <see cref="T:System.TimeSpan" /> absolue minimale.</summary>
      <returns vsli:raw="The allowed minimum &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">Valeur <see cref="T:System.TimeSpan" /> minimale autorisée.</returns>
    </member>
    <member name="P:System.Configuration.TimeSpanValidatorAttribute.MinValueString">
      <summary vsli:raw="Gets or sets the relative minimum &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">Obtient ou définit la valeur <see cref="T:System.TimeSpan" /> minimale relative.</summary>
      <returns vsli:raw="The minimum allowed &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">Valeur <see cref="T:System.TimeSpan" /> minimale autorisée.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The selected value represents more than &lt;see cref=&quot;P:System.Configuration.TimeSpanValidatorAttribute.MaxValue&quot; /&gt;.">La valeur sélectionnée représente une valeur supérieure à <see cref="P:System.Configuration.TimeSpanValidatorAttribute.MaxValue" />.</exception>
    </member>
    <member name="F:System.Configuration.TimeSpanValidatorAttribute.TimeSpanMaxValue">
      <summary vsli:raw="Gets the absolute maximum value allowed.">Obtient la valeur absolue maximale autorisée.</summary>
    </member>
    <member name="F:System.Configuration.TimeSpanValidatorAttribute.TimeSpanMinValue">
      <summary vsli:raw="Gets the absolute minimum value allowed.">Obtient la valeur absolue minimale autorisée.</summary>
    </member>
    <member name="P:System.Configuration.TimeSpanValidatorAttribute.ValidatorInstance">
      <summary vsli:raw="Gets an instance of the &lt;see cref=&quot;T:System.Configuration.TimeSpanValidator&quot; /&gt; class.">Obtient une instance de la classe <see cref="T:System.Configuration.TimeSpanValidator" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorBase&quot; /&gt; validator instance.">Instance du validateur <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</returns>
    </member>
    <member name="T:System.Configuration.TypeNameConverter">
      <summary vsli:raw="Converts between type and string values. This class cannot be inherited.">Effectue une conversion entre les valeurs de type et de chaîne. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.TypeNameConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.TypeNameConverter&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.TypeNameConverter" />.</summary>
    </member>
    <member name="M:System.Configuration.TypeNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; object to a &lt;see cref=&quot;T:System.Type&quot; /&gt; object.">Convertit un objet <see cref="T:System.String" /> en un objet <see cref="T:System.Type" />.</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; object used for type conversions.">Objet <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilisé pour les conversions de type.</param>
      <param name="ci" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; object used during conversion.">Objet <see cref="T:System.Globalization.CultureInfo" /> utilisé pendant la conversion.</param>
      <param name="data" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; object to convert.">Objet <see cref="T:System.String" /> à convertir.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the &lt;paramref name=&quot;data&quot; /&gt; parameter.">
        <see cref="T:System.Type" /> qui représente le paramètre <paramref name="data" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; value cannot be resolved.">La valeur <see cref="T:System.Type" /> ne peut pas être résolue.</exception>
    </member>
    <member name="M:System.Configuration.TypeNameConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Type&quot; /&gt; object to a &lt;see cref=&quot;T:System.String&quot; /&gt; object.">Convertit un objet <see cref="T:System.Type" /> en objet <see cref="T:System.String" />.</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; object used for type conversions.">Objet <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilisé pour les conversions de type.</param>
      <param name="ci" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; object used during conversion.">Objet <see cref="T:System.Globalization.CultureInfo" /> utilisé pendant la conversion.</param>
      <param name="value" vsli:raw="The value to convert to.">Valeur vers laquelle effectuer la conversion.</param>
      <param name="type" vsli:raw="The type to convert to.">Type vers lequel effectuer la conversion.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the &lt;paramref name=&quot;value&quot; /&gt; parameter.">
        <see cref="T:System.String" /> qui représente le paramètre <paramref name="value" />.</returns>
    </member>
    <member name="T:System.Configuration.UriSection">
      <summary vsli:raw="Represents the Uri section within a configuration file.">Représente la section Uri dans un fichier de configuration.</summary>
    </member>
    <member name="M:System.Configuration.UriSection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.UriSection&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.UriSection" />.</summary>
    </member>
    <member name="P:System.Configuration.UriSection.Idn">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Configuration.IdnElement&quot; /&gt; object that contains the configuration setting for International Domain Name (IDN) processing in the &lt;see cref=&quot;T:System.Uri&quot; /&gt; class.">Obtient un objet <see cref="T:System.Configuration.IdnElement" /> qui contient le paramètre de configuration du traitement des noms de domaines internationaux (IDN, International Domain Name) dans la classe <see cref="T:System.Uri" />.</summary>
      <returns vsli:raw="The configuration setting for International Domain Name (IDN) processing in the &lt;see cref=&quot;T:System.Uri&quot; /&gt; class.">Paramètre de configuration pour le traitement des IDN (International Domain Name) dans la classe <see cref="T:System.Uri" />.</returns>
    </member>
    <member name="P:System.Configuration.UriSection.IriParsing">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Configuration.IriParsingElement&quot; /&gt; object that contains the configuration setting for International Resource Identifiers (IRI) parsing in the &lt;see cref=&quot;T:System.Uri&quot; /&gt; class.">Obtient un objet <see cref="T:System.Configuration.IriParsingElement" /> qui contient le paramètre de configuration pour l’analyse des IRI (International Resource Identifiers) dans la classe <see cref="T:System.Uri" />.</summary>
      <returns vsli:raw="The configuration setting for International Resource Identifiers (IRI) parsing in the &lt;see cref=&quot;T:System.Uri&quot; /&gt; class.">Paramètre de configuration pour l'analyse des IRI (International Resource Identifiers) dans la classe <see cref="T:System.Uri" />.</returns>
    </member>
    <member name="P:System.Configuration.UriSection.SchemeSettings">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Configuration.SchemeSettingElementCollection&quot; /&gt; object that contains the configuration settings for scheme parsing in the &lt;see cref=&quot;T:System.Uri&quot; /&gt; class.">Obtient un objet <see cref="T:System.Configuration.SchemeSettingElementCollection" /> qui contient les paramètres de configuration pour l’analyse du modèle dans la classe <see cref="T:System.Uri" />.</summary>
      <returns vsli:raw="The configuration settings for scheme parsing in the &lt;see cref=&quot;T:System.Uri&quot; /&gt; class.">Paramètres de configuration pour l'analyse du modèle dans la classe <see cref="T:System.Uri" />.</returns>
    </member>
    <member name="T:System.Configuration.UserScopedSettingAttribute">
      <summary vsli:raw="Specifies that an application settings group or property contains distinct values for each user of an application. This class cannot be inherited.">Spécifie qu’une propriété ou un groupe de paramètres d’application contient des valeurs distinctes pour chaque utilisateur d’une application. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.UserScopedSettingAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.UserScopedSettingAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.UserScopedSettingAttribute" />.</summary>
    </member>
    <member name="T:System.Configuration.UserSettingsGroup">
      <summary vsli:raw="Represents a grouping of related user settings sections within a configuration file. This class cannot be inherited.">Représente un regroupement de sections de paramètres utilisateur connexes dans un fichier de configuration. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.UserSettingsGroup.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.UserSettingsGroup&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.UserSettingsGroup" />.</summary>
    </member>
    <member name="T:System.Configuration.ValidatorCallback">
      <summary vsli:raw="Represents a method to be called after the validation of an object.">Représente une méthode à appeler après la validation d’un objet.</summary>
      <param name="value" vsli:raw="The callback method.">Méthode de rappel.</param>
      <param name="o">Méthode de rappel.</param>
    </member>
    <member name="T:System.Configuration.WhiteSpaceTrimStringConverter">
      <summary vsli:raw="Converts a string to its canonical format.">Convertit une chaîne au format canonique.</summary>
    </member>
    <member name="M:System.Configuration.WhiteSpaceTrimStringConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.WhiteSpaceTrimStringConverter&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.WhiteSpaceTrimStringConverter" />.</summary>
    </member>
    <member name="M:System.Configuration.WhiteSpaceTrimStringConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; to canonical form.">Convertit un <see cref="T:System.String" /> au format canonique.</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; object used for type conversions.">Objet <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilisé pour les conversions de type.</param>
      <param name="ci" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; object used during conversion.">Objet <see cref="T:System.Globalization.CultureInfo" /> utilisé pendant la conversion.</param>
      <param name="data" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; object to convert.">Objet <see cref="T:System.String" /> à convertir.</param>
      <returns vsli:raw="An object representing the converted value.">Objet représentant la valeur convertie.</returns>
    </member>
    <member name="M:System.Configuration.WhiteSpaceTrimStringConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; to canonical form.">Convertit un <see cref="T:System.String" /> au format canonique.</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; object used for type conversions.">Objet <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilisé pour les conversions de type.</param>
      <param name="ci" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; object used during conversion.">Objet <see cref="T:System.Globalization.CultureInfo" /> utilisé pendant la conversion.</param>
      <param name="value" vsli:raw="The value to convert to.">Valeur vers laquelle effectuer la conversion.</param>
      <param name="type" vsli:raw="The type to convert to.">Type vers lequel effectuer la conversion.</param>
      <returns vsli:raw="An object representing the converted value.">Objet représentant la valeur convertie.</returns>
    </member>
    <member name="T:System.Drawing.Configuration.SystemDrawingSection">
      <summary vsli:raw="Represents the configuration section used by classes in the &lt;see cref=&quot;N:System.Drawing&quot; /&gt; namespace.">Représente la section de configuration utilisée par les classes dans l'espace de noms <see cref="N:System.Drawing" />.</summary>
    </member>
    <member name="M:System.Drawing.Configuration.SystemDrawingSection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Configuration.SystemDrawingSection&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Configuration.SystemDrawingSection" />.</summary>
    </member>
    <member name="P:System.Drawing.Configuration.SystemDrawingSection.BitmapSuffix">
      <summary vsli:raw="Gets or sets the suffix to append to a file name indicated by a &lt;see cref=&quot;T:System.Drawing.ToolboxBitmapAttribute&quot; /&gt; when an assembly is declared with a &lt;see cref=&quot;T:System.Drawing.BitmapSuffixInSameAssemblyAttribute&quot; /&gt; or a &lt;see cref=&quot;T:System.Drawing.BitmapSuffixInSatelliteAssemblyAttribute&quot; /&gt;.">Obtient ou définit le suffixe à ajouter au nom d'un fichier indiqué par un <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> lorsqu'un assembly est déclaré avec un <see cref="T:System.Drawing.BitmapSuffixInSameAssemblyAttribute" /> ou un <see cref="T:System.Drawing.BitmapSuffixInSatelliteAssemblyAttribute" />.</summary>
      <returns vsli:raw="The bitmap suffix.">Suffixe de bitmap.</returns>
    </member>
    <member name="T:System.UriIdnScope">
      <summary vsli:raw="Provides the possible values for the configuration setting of the &lt;see cref=&quot;T:System.Configuration.IdnElement&quot; /&gt; in the &lt;see cref=&quot;N:System.Configuration&quot; /&gt; namespace.">Fournit les valeurs possibles pour le paramètre de configuration de <see cref="T:System.Configuration.IdnElement" /> dans l'espace de noms <see cref="N:System.Configuration" />.</summary>
    </member>
    <member name="F:System.UriIdnScope.All">
      <summary vsli:raw="This value will convert any Unicode domain names to their Punycode equivalents (IDN names).">Cette valeur convertit tous les noms de domaine Unicode en leurs équivalents Punycode (noms IDN).</summary>
    </member>
    <member name="F:System.UriIdnScope.AllExceptIntranet">
      <summary vsli:raw="This value will convert all external Unicode domain names to use the Punycode equivalents (IDN names). In this case to handle international names on the local Intranet, the DNS servers that are used for the Intranet should support Unicode names.">Cette valeur convertit tous les noms de domaine Unicode externes pour utiliser leurs équivalents Punycode (noms IDN). Dans ce cas, pour gérer des noms internationaux sur l'Intranet local, les serveurs DNS utilisés pour l'Intranet doivent prendre en charge les noms Unicode.</summary>
    </member>
    <member name="F:System.UriIdnScope.None">
      <summary vsli:raw="Don't convert any Unicode domain names to use Punycode.">Cette valeur ne convertit aucun nom de domaine Unicode pour utiliser Punycode. Il s'agit de la valeur par défaut cohérente avec le comportement du .NET Framework 2.0.</summary>
    </member>
  </members>
</doc>