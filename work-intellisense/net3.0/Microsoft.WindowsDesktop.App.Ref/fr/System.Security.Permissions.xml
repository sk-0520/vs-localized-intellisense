<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Security.Permissions</name>
  </assembly>
  <members>
    <member name="T:System.ApplicationIdentity">
      <summary>Fournit la capacité d'identifier de manière unique une application activée par manifeste. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.ApplicationIdentity.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ApplicationIdentity" />.</summary>
      <param name="applicationIdentityFullName">Nom complet de l'application.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="applicationIdentityFullName" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.ApplicationIdentity.CodeBase">
      <summary>Obtient l'emplacement du manifeste de déploiement sous la forme d'une URL.</summary>
      <returns>l'URL du manifeste de déploiement.</returns>
    </member>
    <member name="P:System.ApplicationIdentity.FullName">
      <summary>Obtient le nom complet de l'application.</summary>
      <returns>Nom complet de l'application.</returns>
    </member>
    <member name="M:System.ApplicationIdentity.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Remplit un objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> avec les données nécessaires pour sérialiser l'objet cible.</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> à remplir de données.</param>
      <param name="context">Structure <see cref="T:System.Runtime.Serialization.StreamingContext" /> pour la sérialisation.</param>
    </member>
    <member name="M:System.ApplicationIdentity.ToString">
      <summary>Retourne le nom complet de l'application activée par manifeste.</summary>
      <returns>Nom complet de l'application activée par manifeste.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationPermission">
      <summary>Fournit une structure d'autorisations qui permet aux méthodes ou aux classes d'accéder aux fichiers de configuration.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationPermission" />.</summary>
      <param name="state">Niveau d'autorisation à accorder.</param>
      <exception cref="T:System.ArgumentException">La valeur de <paramref name="state" /> n'est ni <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> ni <see cref="F:System.Security.Permissions.PermissionState.None" />.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.Copy">
      <summary>Retourne un nouvel objet <see cref="T:System.Configuration.ConfigurationPermission" /> ayant le même niveau d'autorisation.</summary>
      <returns>Nouveau <see cref="T:System.Configuration.ConfigurationPermission" /> ayant le même niveau d'autorisation.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.FromXml(System.Security.SecurityElement)">
      <summary>Lit la valeur de l'état d'autorisation dans XML.</summary>
      <param name="securityElement">Élément de configuration dans lequel l'état d'autorisation est lu.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">L'attribut <see langword="unrestricted" /> du <paramref name="securityElement" /> donné n'est ni <see langword="true" /> ni <see langword="false" />.

ou -

Le <see cref="P:System.Security.SecurityElement.Tag" /> du <paramref name="securityElement" /> donné n'est pas égal à "IPermission".
ou
L’attribut <see langword="class" /> du <paramref name="securityElement " /> donné est <see langword="null" /> ou n’est pas le nom de type de <see cref="T:System.Configuration.ConfigurationPermission" />.

ou -

L'attribut <see langword="version" /> du <paramref name="securityElement" /> donné n'est pas égal à 1.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.Intersect(System.Security.IPermission)">
      <summary>Retourne l'intersection logique entre l'objet <see cref="T:System.Configuration.ConfigurationPermission" /> et un objet donné qui implémente l'interface <see cref="T:System.Security.IPermission" />.</summary>
      <param name="target">Objet contenant les autorisations avec lesquelles exécuter l'intersection.</param>
      <returns>Intersection logique entre le <see cref="T:System.Configuration.ConfigurationPermission" /> et un objet donné qui implémente <see cref="T:System.Security.IPermission" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> n'est pas de type <see cref="T:System.Configuration.ConfigurationPermission" />.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Compare l'objet <see cref="T:System.Configuration.ConfigurationPermission" /> avec un objet qui implémente l'interface <see cref="T:System.Security.IPermission" />.</summary>
      <param name="target">Objet avec lequel effectuer la comparaison.</param>
      <returns>
        <see langword="true" /> si l'état d'autorisation est Equal ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> n'est pas de type <see cref="T:System.Configuration.ConfigurationPermission" />.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.IsUnrestricted">
      <summary>Indique si l'état d'autorisation de l'objet <see cref="T:System.Configuration.ConfigurationPermission" /> est la valeur <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> de l'énumération <see cref="T:System.Security.Permissions.PermissionState" />.</summary>
      <returns>
        <see langword="true" /> si l'état d'autorisation du <see cref="T:System.Configuration.ConfigurationPermission" /> est la valeur <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> de <see cref="T:System.Security.Permissions.PermissionState" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.ToXml">
      <summary>Retourne un objet <see cref="T:System.Security.SecurityElement" /> dont les valeurs d'attribut sont basées sur l'objet <see cref="T:System.Configuration.ConfigurationPermission" /> actuel.</summary>
      <returns>Un <see cref="T:System.Security.SecurityElement" /> dont les valeurs d'attribut sont basées sur le <see cref="T:System.Configuration.ConfigurationPermission" /> actuel.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.Union(System.Security.IPermission)">
      <summary>Retourne l'union logique de l'objet <see cref="T:System.Configuration.ConfigurationPermission" /> et un objet qui implémente l'interface <see cref="T:System.Security.IPermission" />.</summary>
      <param name="target">Objet avec lequel effectuer l'opération d'union.</param>
      <returns>Union logique du <see cref="T:System.Configuration.ConfigurationPermission" /> et un objet qui implémente <see cref="T:System.Security.IPermission" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> n'est pas de type <see cref="T:System.Configuration.ConfigurationPermission" />.</exception>
    </member>
    <member name="T:System.Configuration.ConfigurationPermissionAttribute">
      <summary>Crée un objet <see cref="T:System.Configuration.ConfigurationPermission" /> qui accorde ou refuse l’autorisation cible marquée pour accéder aux sections des fichiers de configuration.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationPermissionAttribute" />.</summary>
      <param name="action">Action de sécurité représentée par un membre d’énumération de <see cref="T:System.Security.Permissions.SecurityAction" />. Détermine l’état d’autorisation de l’attribut.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationPermissionAttribute.CreatePermission">
      <summary>Crée et retourne un objet qui implémente l’interface <see cref="T:System.Security.IPermission" />.</summary>
      <returns>Objet qui implémente <see cref="T:System.Security.IPermission" />.</returns>
    </member>
    <member name="T:System.Data.Common.DBDataPermission">
      <summary>Permet à un fournisseur de données .NET Framework de garantir à un utilisateur un niveau de sécurité adéquat pour l'accès aux données.</summary>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.#ctor">
      <summary>Initialise une nouvelle instance d'une classe <see langword="DBDataPermission" />.</summary>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.#ctor(System.Data.Common.DBDataPermission)">
      <summary>Initialise une nouvelle instance d'une classe <see langword="DBDataPermission" /> à l'aide d'une classe <see langword="DBDataPermission" /> existante.</summary>
      <param name="permission">
        <see langword="DBDataPermission" /> existante utilisée pour créer une nouvelle <see langword="DBDataPermission" />.</param>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.#ctor(System.Data.Common.DBDataPermissionAttribute)">
      <summary>Initialise une nouvelle instance d'une classe <see langword="DBDataPermission" /> avec l'attribut <see langword="DBDataPermissionAttribute" /> spécifié.</summary>
      <param name="permissionAttribute">Action de sécurité associée à un attribut de sécurité personnalisé.</param>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initialise une nouvelle instance d'une classe <see langword="DBDataPermission" /> avec la valeur <see cref="T:System.Security.Permissions.PermissionState" /> spécifiée.</summary>
      <param name="state">Une des valeurs de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)">
      <summary>Initialise une nouvelle instance d'une classe <see langword="DBDataPermission" /> avec la valeur <see cref="T:System.Security.Permissions.PermissionState" /> spécifiée et une valeur indiquant si un mot de passe vide est autorisé.</summary>
      <param name="state">Une des valeurs de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <param name="allowBlankPassword">
        <see langword="true" /> pour indiquer qu’un mot de passe vide est autorisé ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)">
      <summary>Ajoute l'accès à l'état existant de <see langword="DBDataPermission" /> pour la chaîne de connexion spécifiée.</summary>
      <param name="connectionString">Chaîne de connexion autorisée.</param>
      <param name="restrictions">Chaîne qui identifie les paramètres de chaîne de connexion qui sont autorisés ou interdits.</param>
      <param name="behavior">Une des propriétés <see cref="T:System.Data.KeyRestrictionBehavior" />.</param>
    </member>
    <member name="P:System.Data.Common.DBDataPermission.AllowBlankPassword">
      <summary>Obtient une valeur indiquant si un mot de passe vide est autorisé.</summary>
      <returns>
        <see langword="true" /> si un mot de passe vide est autorisé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.Clear">
      <summary>Supprime toutes les autorisations ajoutées précédemment à l'aide de la méthode <see cref="M:System.Data.Common.DBDataPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)" />.</summary>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.Copy">
      <summary>Crée et retourne une copie identique de l'objet d'autorisation en cours.</summary>
      <returns>Copie de l’objet d’autorisation actuel.</returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.CreateInstance">
      <summary>Crée une instance de la classe <see langword="DBDataPermission" />.</summary>
      <returns>Nouvel objet <see langword="DBDataPermission" />.</returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruit un objet de sécurité avec un état spécifié à partir d’un encodage XML.</summary>
      <param name="securityElement">Encodage XML à utiliser pour reconstruire l’objet de sécurité.</param>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.Intersect(System.Security.IPermission)">
      <summary>Retourne un nouvel objet d'autorisation représentant l'intersection entre l'objet d'autorisation en cours et l'objet d'autorisation spécifié.</summary>
      <param name="target">Objet d'autorisation pour lequel il existera une intersection avec l'objet d'autorisation en cours. Il doit être du même type que l'objet d'autorisation en cours.</param>
      <returns>Nouvel objet d'autorisation qui représente l'intersection entre l'objet d'autorisation en cours et l'objet d'autorisation spécifié. Ce nouvel objet d'autorisation est une référence null (<see langword="Nothing" /> en Visual Basic), si l'intersection est vide.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="target" /> n'est pas une référence null (<see langword="Nothing" /> en Visual Basic) et n'est pas une instance de la même classe que l'objet d'autorisation en cours.</exception>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Retourne une valeur indiquant si l'objet d'autorisation en cours est un sous-ensemble de l'objet d'autorisation spécifié.</summary>
      <param name="target">Objet d'autorisation à tester pour établir s'il s'agit d'un sous-ensemble. Cet objet doit être du même type que l'objet d'autorisation en cours.</param>
      <returns>
        <see langword="true" /> si l'objet d'autorisation en cours est un sous-ensemble de l'objet d'autorisation spécifié ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="target" /> est un objet qui n'est pas du même type que l'objet d'autorisation en cours.</exception>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.IsUnrestricted">
      <summary>Retourne une valeur indiquant si l'autorisation peut être représentée comme non restreinte sans connaître les sémantiques d'autorisation.</summary>
      <returns>
        <see langword="true" /> si l'autorisation peut être représentée comme non restreinte.</returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.ToXml">
      <summary>Crée un codage XML de l’objet de sécurité et de son état actuel.</summary>
      <returns>Encodage XML de l’objet de sécurité, y compris les informations d’état éventuelles.</returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.Union(System.Security.IPermission)">
      <summary>Retourne un nouvel objet d'autorisation qui représente l'union entre l'objet d'autorisation en cours et l'objet d'autorisation spécifié.</summary>
      <param name="target">Objet d'autorisation à combiner avec l'objet d'autorisation en cours. Il doit être du même type que l'objet d'autorisation en cours.</param>
      <returns>Nouvel objet d'autorisation qui représente l'union entre l'objet d'autorisation en cours et l'objet d'autorisation spécifié.</returns>
      <exception cref="T:System.ArgumentException">L'objet <paramref name="target" /> n'est pas du même type que l'objet d'autorisation en cours.</exception>
    </member>
    <member name="T:System.Data.Common.DBDataPermissionAttribute">
      <summary>Associe une action de sécurité à un attribut de sécurité personnalisé.</summary>
    </member>
    <member name="M:System.Data.Common.DBDataPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initialise une nouvelle instance de l'objet <see cref="T:System.Data.Common.DBDataPermissionAttribute" />.</summary>
      <param name="action">Une des valeurs d'action de sécurité qui représente une action qui peut être effectuée à l'aide de la sécurité déclarative.</param>
    </member>
    <member name="P:System.Data.Common.DBDataPermissionAttribute.AllowBlankPassword">
      <summary>Obtient ou définit une valeur indiquant si un mot de passe vide est autorisé.</summary>
      <returns>
        <see langword="true" /> si un mot de passe vide est autorisé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DBDataPermissionAttribute.ConnectionString">
      <summary>Obtient ou définit une chaîne de connexion autorisée.</summary>
      <returns>Chaîne de connexion autorisée.</returns>
    </member>
    <member name="P:System.Data.Common.DBDataPermissionAttribute.KeyRestrictionBehavior">
      <summary>Indique si la liste des paramètres de chaîne de connexion identifiés par la propriété <see cref="P:System.Data.Common.DBDataPermissionAttribute.KeyRestrictions" /> répertorie les seuls paramètres de chaîne de connexion autorisés.</summary>
      <returns>Une des valeurs de <see cref="T:System.Data.KeyRestrictionBehavior" />.</returns>
    </member>
    <member name="P:System.Data.Common.DBDataPermissionAttribute.KeyRestrictions">
      <summary>Obtient ou définit les paramètres de chaîne de connexion autorisés ou interdits.</summary>
      <returns>Un ou plusieurs paramètres de chaîne de connexion autorisés ou interdits.</returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermissionAttribute.ShouldSerializeConnectionString">
      <summary>Indique si l'attribut doit sérialiser la chaîne de connexion.</summary>
      <returns>
        <see langword="true" /> si l'attribut doit sérialiser la chaîne de connexion ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermissionAttribute.ShouldSerializeKeyRestrictions">
      <summary>Identifie si l'attribut doit sérialiser le jeu de restrictions clés.</summary>
      <returns>
        <see langword="true" /> si l'attribut doit sérialiser le jeu de restrictions clés ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Data.Odbc.OdbcPermission">
      <summary>Permet au fournisseur de données .NET Framework pour ODBC de garantir à l'utilisateur un niveau de sécurité suffisant pour l'accès à une source de données ODBC. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermission.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.Odbc.OdbcPermission" />.</summary>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.Odbc.OdbcPermission" /> avec l’une des valeurs <see cref="T:System.Security.Permissions.PermissionState" />.</summary>
      <param name="state">Une des valeurs de l'objet <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.Odbc.OdbcPermission" />.</summary>
      <param name="state">Une des valeurs de <see langword="System.Security.Permissions.PermissionState" />.</param>
      <param name="allowBlankPassword">Indique si un mot de passe vide est autorisé.</param>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)">
      <summary>Ajoute l'accès à l'état existant de l'autorisation pour la chaîne de connexion spécifiée.</summary>
      <param name="connectionString">Chaîne de connexion autorisée.</param>
      <param name="restrictions">Chaîne qui identifie les paramètres de chaîne de connexion qui sont autorisés ou interdits.</param>
      <param name="behavior">Une des valeurs de <see cref="T:System.Data.KeyRestrictionBehavior" />.</param>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermission.Copy">
      <summary>Retourne <see cref="T:System.Data.Odbc.OdbcPermission" /> en tant que <see cref="T:System.Security.IPermission" />.</summary>
      <returns>Copie de l’objet d’autorisation actuel.</returns>
    </member>
    <member name="T:System.Data.Odbc.OdbcPermissionAttribute">
      <summary>Associe une action de sécurité à un attribut de sécurité personnalisé.</summary>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.Odbc.OdbcPermissionAttribute" /> avec l’une des valeurs <see cref="T:System.Security.Permissions.SecurityAction" />.</summary>
      <param name="action">Une des valeurs <see cref="T:System.Security.Permissions.SecurityAction" /> représentant une action qui peut être effectuée à l’aide de la sécurité déclarative.</param>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermissionAttribute.CreatePermission">
      <summary>Retourne un objet <see cref="T:System.Data.Odbc.OdbcPermission" /> configuré en fonction des propriétés des attributs.</summary>
      <returns>Objet <see cref="T:System.Data.Odbc.OdbcPermission" />.</returns>
    </member>
    <member name="T:System.Data.OleDb.OleDbPermission">
      <summary>Permet au fournisseur de données .NET Framework pour OLE DB de garantir à un utilisateur un niveau de sécurité suffisant pour l'accès à une source de données OLE DB.</summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermission.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.OleDb.OleDbPermission" />.</summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.OleDb.OleDbPermission" />.</summary>
      <param name="state">Une des valeurs de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.OleDb.OleDbPermission" />.</summary>
      <param name="state">Une des valeurs de l'objet <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <param name="allowBlankPassword">Indique si un mot de passe vide est autorisé.</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermission.Copy">
      <summary>Retourne <see cref="T:System.Data.OleDb.OleDbPermission" /> en tant que <see cref="T:System.Security.IPermission" />.</summary>
      <returns>Copie de l’objet d’autorisation actuel.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbPermission.Provider">
      <summary>Cette propriété a été marquée comme obsolète. La définition de cette propriété n'aura aucun effet.</summary>
      <returns>Cette propriété a été marquée comme obsolète. La définition de cette propriété n'aura aucun effet.</returns>
    </member>
    <member name="T:System.Data.OleDb.OleDbPermissionAttribute">
      <summary>Associe une action de sécurité à un attribut de sécurité personnalisé.</summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.OleDb.OleDbPermissionAttribute" />.</summary>
      <param name="action">Une des valeurs <see cref="T:System.Security.Permissions.SecurityAction" /> représentant une action qui peut être effectuée à l’aide de la sécurité déclarative.</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermissionAttribute.CreatePermission">
      <summary>Retourne un objet <see cref="T:System.Data.OleDb.OleDbPermission" /> configuré en fonction des propriétés des attributs.</summary>
      <returns>Objet <see cref="T:System.Data.OleDb.OleDbPermission" />.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbPermissionAttribute.Provider">
      <summary>Obtient ou définit une chaîne, délimitée par des virgules, qui contient la liste des fournisseurs pris en charge.</summary>
      <returns>Liste, délimitée par des virgules, des fournisseurs autorisés par la stratégie de sécurité.</returns>
    </member>
    <member name="T:System.Data.OracleClient.OraclePermission">
      <summary>Permet au fournisseur de données .NET Framework pour Oracle de garantir qu'un utilisateur est doté d'un niveau de sécurité adéquat pour l'accès à une base de données Oracle.</summary>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.OracleClient.OraclePermission" /> avec l’une des valeurs <see cref="T:System.Security.Permissions.PermissionState" />.</summary>
      <param name="state">Une des valeurs de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)">
      <summary>Crée un nouveau jeu d'autorisations.</summary>
      <param name="connectionString">Chaîne de connexion</param>
      <param name="restrictions">Restrictions clés.</param>
      <param name="behavior">Une des énumérations <see cref="T:System.Data.KeyRestrictionBehavior" />.</param>
    </member>
    <member name="P:System.Data.OracleClient.OraclePermission.AllowBlankPassword">
      <summary>Obtient une valeur indiquant si un mot de passe vide est autorisé.</summary>
      <returns>
        <see langword="true" /> si un mot de passe vide est autorisé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.Copy">
      <summary>En cas d’implémentation par une classe dérivée, crée et retourne une copie identique de l’objet d’autorisation actuel.</summary>
      <returns>Copie de l’objet d’autorisation actuel.</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.FromXml(System.Security.SecurityElement)">
      <summary>En cas de substitution dans une classe dérivée, reconstruit un objet de sécurité avec un état spécifié à partir d'un encodage XML.</summary>
      <param name="securityElement">Expression <see cref="T:System.Security.SecurityElement" />.</param>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.Intersect(System.Security.IPermission)">
      <summary>Lors de l'implémentation par une classe dérivée, crée et retourne une autorisation qui est l'intersection de l'autorisation en cours et de l'autorisation spécifiée.</summary>
      <param name="target">Autorisation à croiser avec l’autorisation actuelle. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>Nouvelle autorisation qui représente l’intersection entre l’autorisation actuelle et l’autorisation spécifiée. Cette nouvelle autorisation est <see langword="null" /> si l’intersection est vide.</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Lors de l'implémentation par une classe dérivée, détermine si l'autorisation en cours est un sous-ensemble de l'autorisation spécifiée.</summary>
      <param name="target">Autorisation qui doit être testée pour la relation de sous-ensemble. Cette autorisation doit être du même type que l’autorisation actuelle.</param>
      <returns>
        <see langword="true" /> si l’autorisation actuelle est un sous-ensemble de l’autorisation spécifiée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.IsUnrestricted">
      <summary>Retourne une valeur indiquant si l'autorisation peut être représentée comme non restreinte sans connaître les sémantiques d'autorisation.</summary>
      <returns>
        <see langword="true" /> si l'autorisation peut être représentée comme non restreinte.</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.ToXml">
      <summary>Crée un codage XML de l’objet de sécurité et de son état actuel.</summary>
      <returns>Encodage XML de l’objet de sécurité, y compris les informations d’état éventuelles.</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.Union(System.Security.IPermission)">
      <summary>Crée une autorisation qui est l’union de l’autorisation actuelle et de l’autorisation spécifiée.</summary>
      <param name="target">Autorisation à combiner avec l’autorisation actuelle. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>Nouvelle autorisation qui représente l’union de l’autorisation actuelle et de l’autorisation spécifiée.</returns>
    </member>
    <member name="T:System.Data.OracleClient.OraclePermissionAttribute">
      <summary>Associe une action de sécurité à un attribut de sécurité personnalisé.</summary>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.OracleClient.OraclePermissionAttribute" />.</summary>
      <param name="action">Une des valeurs <see cref="T:System.Security.Permissions.SecurityAction" /> représentant une action qui peut être effectuée à l’aide de la sécurité déclarative.</param>
    </member>
    <member name="P:System.Data.OracleClient.OraclePermissionAttribute.AllowBlankPassword">
      <summary>Obtient ou définit une valeur indiquant si un mot de passe vide est autorisé.</summary>
      <returns>
        <see langword="true" /> si un mot de passe vide est autorisé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.OracleClient.OraclePermissionAttribute.ConnectionString">
      <summary>Obtient ou définit une chaîne de connexion autorisée.</summary>
      <returns>Chaîne de connexion autorisée.</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermissionAttribute.CreatePermission">
      <summary>Retourne un objet <see cref="T:System.Data.OracleClient.OraclePermission" /> configuré en fonction des propriétés des attributs.</summary>
      <returns>Objet <see cref="T:System.Data.OracleClient.OraclePermission" />.</returns>
    </member>
    <member name="P:System.Data.OracleClient.OraclePermissionAttribute.KeyRestrictionBehavior">
      <summary>Indique si la liste des paramètres de chaîne de connexion identifiés par la propriété <see cref="P:System.Data.OracleClient.OraclePermissionAttribute.KeyRestrictions" /> répertorie les seuls paramètres de chaîne de connexion autorisés.</summary>
      <returns>Une des valeurs de l'objet <see cref="P:System.Data.OracleClient.OraclePermissionAttribute.KeyRestrictionBehavior" />.</returns>
    </member>
    <member name="P:System.Data.OracleClient.OraclePermissionAttribute.KeyRestrictions">
      <summary>Obtient ou définit les paramètres de chaîne de connexion autorisés ou interdits.</summary>
      <returns>Un ou plusieurs paramètres de chaîne de connexion autorisés ou interdits.</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermissionAttribute.ShouldSerializeConnectionString">
      <summary>Indique si l'attribut doit sérialiser la chaîne de connexion.</summary>
      <returns>
        <see langword="true" /> si l'attribut doit sérialiser la chaîne de connexion ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermissionAttribute.ShouldSerializeKeyRestrictions">
      <summary>Identifie si l'attribut doit sérialiser le jeu de restrictions clés.</summary>
      <returns>
        <see langword="true" /> si l'attribut doit sérialiser le jeu de restrictions clés ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Data.SqlClient.SqlClientPermission">
      <summary>Permet au fournisseur de données .NET Framework pour SQL Server de garantir à l'utilisateur un niveau de sécurité suffisant pour l'accès à une source de données.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermission.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlClient.SqlClientPermission" />.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlClient.SqlClientPermission" />.</summary>
      <param name="state">Une des valeurs de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlClient.SqlClientPermission" />.</summary>
      <param name="state">Une des valeurs de l'objet <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <param name="allowBlankPassword">Indique si un mot de passe vide est autorisé.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)">
      <summary>Ajoute une nouvelle chaîne de connexion et un ensemble de mots clés restreints à l'objet <see cref="T:System.Data.SqlClient.SqlClientPermission" />.</summary>
      <param name="connectionString">Chaîne de connexion</param>
      <param name="restrictions">Restrictions clés.</param>
      <param name="behavior">Une des énumérations <see cref="T:System.Data.KeyRestrictionBehavior" />.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermission.Copy">
      <summary>Retourne <see cref="T:System.Data.SqlClient.SqlClientPermission" /> en tant que <see cref="T:System.Security.IPermission" />.</summary>
      <returns>Copie de l’objet d’autorisation actuel.</returns>
    </member>
    <member name="T:System.Data.SqlClient.SqlClientPermissionAttribute">
      <summary>Associe une action de sécurité à un attribut de sécurité personnalisé.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlClient.SqlClientPermissionAttribute" />.</summary>
      <param name="action">Une des valeurs <see cref="T:System.Security.Permissions.SecurityAction" /> représentant une action qui peut être effectuée à l’aide de la sécurité déclarative.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermissionAttribute.CreatePermission">
      <summary>Retourne un objet <see cref="T:System.Data.SqlClient.SqlClientPermission" /> configuré en fonction des propriétés des attributs.</summary>
      <returns>Objet <see cref="T:System.Data.SqlClient.SqlClientPermission" />.</returns>
    </member>
    <member name="T:System.Diagnostics.EventLogPermission">
      <summary>Contrôle les autorisations d'accès du code pour le journal des événements.</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogPermission.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.EventLogPermission" />.</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogPermission.#ctor(System.Diagnostics.EventLogPermissionAccess,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.EventLogPermission" /> avec les niveaux d'accès spécifiés et le nom de l'ordinateur à utiliser.</summary>
      <param name="permissionAccess">L'une des valeurs d'énumération qui spécifie une niveau d'accès.</param>
      <param name="machineName">Nom de l'ordinateur à utiliser pour lire ou écrire les événements.</param>
    </member>
    <member name="M:System.Diagnostics.EventLogPermission.#ctor(System.Diagnostics.EventLogPermissionEntry[])">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.EventLogPermission" /> avec les entrées d'autorisation spécifiées.</summary>
      <param name="permissionAccessEntries">Tableau d’objets qui représentent des entrées d’autorisation. Cette valeur est affectée à la propriété <see cref="P:System.Diagnostics.EventLogPermission.PermissionEntries" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="permissionAccessEntries" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.EventLogPermission" /> avec l'état d'autorisation spécifié.</summary>
      <param name="state">L'une des valeurs d'énumération qui spécifie l'état d'autorisation (accès complet ou aucun accès à ces ressources).</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="state" /> n’est pas une valeur valide d’<see cref="T:System.Security.Permissions.PermissionState" />.</exception>
    </member>
    <member name="P:System.Diagnostics.EventLogPermission.PermissionEntries">
      <summary>Obtient la collection d'entrées d'autorisation pour cette demande d'autorisation.</summary>
      <returns>Collection qui contient les entrées d'autorisation pour cette demande d'autorisation.</returns>
    </member>
    <member name="T:System.Diagnostics.EventLogPermissionAccess">
      <summary>Définit les niveaux d'accès employés par les classes d'autorisation <see cref="T:System.Diagnostics.EventLog" />.</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogPermissionAccess.Administer">
      <summary>
        <see cref="T:System.Diagnostics.EventLog" /> peut créer une source d'événements, lire les journaux existants, supprimer les sources ou les journaux d'événements, donner suite aux entrées, effacer un journal des événements, écouter les événements ou accéder à une collection regroupant tous les journaux des événements.</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogPermissionAccess.Audit">
      <summary>
        <see cref="T:System.Diagnostics.EventLog" /> peut lire les journaux existants, supprimer les sources ou les journaux des événements, donner suite aux entrées, supprimer un journal des événements, écouter les événements ou accéder à une collection regroupant tous les journaux des événements. <see langword="Note" /> Ce membre est maintenant obsolète ; utilisez <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /> à la place.</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogPermissionAccess.Browse">
      <summary>
        <see cref="T:System.Diagnostics.EventLog" /> peut lire des journaux existants. <see langword="Note" /> Ce membre est maintenant obsolète ; utilisez <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /> à la place.</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogPermissionAccess.Instrument">
      <summary>
        <see cref="T:System.Diagnostics.EventLog" /> peut lire ou écrire dans des journaux existants et créer des sources et des journaux des événements. <see langword="Note" /> Ce membre est maintenant obsolète ; utilisez <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /> à la place.</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogPermissionAccess.None">
      <summary>
        <see cref="T:System.Diagnostics.EventLog" /> ne possède aucune autorisation.</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogPermissionAccess.Write">
      <summary>
        <see cref="T:System.Diagnostics.EventLog" /> peut écrire dans des journaux existants et créer des sources et des journaux des événements.</summary>
    </member>
    <member name="T:System.Diagnostics.EventLogPermissionAttribute">
      <summary>Permet les vérifications déclaratives des autorisations d’accès pour la journalisation des événements.</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.EventLogPermissionAttribute" />.</summary>
      <param name="action">Une des valeurs de l'objet <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionAttribute.CreatePermission">
      <summary>Crée l'autorisation basée sur la propriété <see cref="P:System.Diagnostics.EventLogPermissionAttribute.MachineName" /> et sur les niveaux d'accès demandés, définis par le biais de la propriété <see cref="P:System.Diagnostics.EventLogPermissionAttribute.PermissionAccess" /> sur l'attribut.</summary>
      <returns>
        <see cref="T:System.Security.IPermission" /> qui représente l'autorisation créée.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogPermissionAttribute.MachineName">
      <summary>Obtient ou définit le nom de l'ordinateur à utiliser pour la lecture des événements.</summary>
      <returns>Nom de l'ordinateur à utiliser pour lire les événements. La valeur par défaut est ".".</returns>
      <exception cref="T:System.ArgumentException">Le nom d'ordinateur est non valide.</exception>
    </member>
    <member name="P:System.Diagnostics.EventLogPermissionAttribute.PermissionAccess">
      <summary>Obtient ou définit les niveaux d'accès utilisés dans la demande d'autorisation.</summary>
      <returns>Combinaison d'opérations de bits des valeurs <see cref="T:System.Diagnostics.EventLogPermissionAccess" />. La valeur par défaut est <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" />.</returns>
    </member>
    <member name="T:System.Diagnostics.EventLogPermissionEntry">
      <summary>Définit la plus petite unité d'une autorisation de sécurité d'accès du code définie pour un <see cref="T:System.Diagnostics.EventLog" />.</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntry.#ctor(System.Diagnostics.EventLogPermissionAccess,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.EventLogPermissionEntry" />.</summary>
      <param name="permissionAccess">Combinaison d'opérations de bits des valeurs <see cref="T:System.Diagnostics.EventLogPermissionAccess" />. Cette valeur est affectée à la propriété <see cref="P:System.Diagnostics.EventLogPermissionEntry.PermissionAccess" />.</param>
      <param name="machineName">Nom de l'ordinateur à utiliser pour lire ou écrire les événements. Cette valeur est affectée à la propriété <see cref="P:System.Diagnostics.EventLogPermissionEntry.MachineName" />.</param>
      <exception cref="T:System.ArgumentException">Le nom d'ordinateur est non valide.</exception>
    </member>
    <member name="P:System.Diagnostics.EventLogPermissionEntry.MachineName">
      <summary>Obtient le nom de l'ordinateur à utiliser pour lire ou écrire les événements.</summary>
      <returns>Nom de l'ordinateur à utiliser pour lire ou écrire les événements.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogPermissionEntry.PermissionAccess">
      <summary>Obtient les niveaux d'accès d'autorisation utilisés dans la demande d'autorisations.</summary>
      <returns>Combinaison d'opérations de bits des valeurs <see cref="T:System.Diagnostics.EventLogPermissionAccess" />.</returns>
    </member>
    <member name="T:System.Diagnostics.EventLogPermissionEntryCollection">
      <summary>Contient une collection fortement typée d’objets <see cref="T:System.Diagnostics.EventLogPermissionEntry" />.</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.Add(System.Diagnostics.EventLogPermissionEntry)">
      <summary>Ajoute un <see cref="T:System.Diagnostics.EventLogPermissionEntry" /> spécifié à cette collection.</summary>
      <param name="value">
        <see cref="T:System.Diagnostics.EventLogPermissionEntry" /> à ajouter.</param>
      <returns>Index de base zéro du <see cref="T:System.Diagnostics.EventLogPermissionEntry" /> ajouté.</returns>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.AddRange(System.Diagnostics.EventLogPermissionEntry[])">
      <summary>Ajoute un ensemble d'entrées d'autorisation spécifiées à cette collection.</summary>
      <param name="value">Tableau d'objets de type <see cref="T:System.Diagnostics.EventLogPermissionEntry" /> qui contient les entrées d'autorisation à ajouter.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.AddRange(System.Diagnostics.EventLogPermissionEntryCollection)">
      <summary>Ajoute un ensemble d'entrées d'autorisation spécifiées à cette collection.</summary>
      <param name="value">
        <see cref="T:System.Diagnostics.EventLogPermissionEntryCollection" /> qui contient les entrées d'autorisation à ajouter.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.Contains(System.Diagnostics.EventLogPermissionEntry)">
      <summary>Détermine si cette collection contient un <see cref="T:System.Diagnostics.EventLogPermissionEntry" /> spécifié.</summary>
      <param name="value">
        <see cref="T:System.Diagnostics.EventLogPermissionEntry" /> à rechercher.</param>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Diagnostics.EventLogPermissionEntry" /> spécifié appartient à cette collection ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.CopyTo(System.Diagnostics.EventLogPermissionEntry[],System.Int32)">
      <summary>Copie les entrées d'autorisation de cette collection vers un tableau, en commençant à un index spécifique du tableau.</summary>
      <param name="array">Tableau de type <see cref="T:System.Diagnostics.EventLogPermissionEntry" /> qui reçoit les entrées d'autorisation de cette collection.</param>
      <param name="index">Index de base zéro à partir duquel commencer la copie des entrées d'autorisation.</param>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.IndexOf(System.Diagnostics.EventLogPermissionEntry)">
      <summary>Détermine l'index d'une entrée d'autorisation spécifiée dans cette collection.</summary>
      <param name="value">Entrée d'autorisation à rechercher.</param>
      <returns>Index de base zéro de l'entrée d'autorisation spécifiée, ou -1 si l'entrée d'autorisation est introuvable dans la collection.</returns>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.Insert(System.Int32,System.Diagnostics.EventLogPermissionEntry)">
      <summary>Insère une entrée d'autorisation dans cette collection à un index spécifié.</summary>
      <param name="index">Index de base zéro de la collection au niveau duquel insérer l'entrée d'autorisation.</param>
      <param name="value">Entrée d'autorisation à insérer dans cette collection.</param>
    </member>
    <member name="P:System.Diagnostics.EventLogPermissionEntryCollection.Item(System.Int32)">
      <summary>Obtient ou définit l'objet à l'index spécifié.</summary>
      <param name="index">Index de base zéro dans la collection.</param>
      <returns>
        <see cref="T:System.Diagnostics.EventLogPermissionEntry" /> existant à l'index spécifié.</returns>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.OnClear">
      <summary>Exécute des processus personnalisés supplémentaires après l'effacement du contenu de la collection.</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.OnInsert(System.Int32,System.Object)">
      <summary>Exécute les processus personnalisés supplémentaires avant l'insertion d'une nouvelle entrée d'autorisation dans la collection.</summary>
      <param name="index">Index de base zéro au niveau duquel insérer <paramref name="value" />.</param>
      <param name="value">Nouvelle valeur de l'entrée d'autorisation à la position <paramref name="index" />.</param>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.OnRemove(System.Int32,System.Object)">
      <summary>Exécute les processus personnalisés supplémentaires lors de la suppression d'une nouvelle entrée d'autorisation de la collection.</summary>
      <param name="index">Index de base zéro au niveau duquel <paramref name="value" /> peut être trouvé.</param>
      <param name="value">Entrée d'autorisation à supprimer de <paramref name="index" />.</param>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.OnSet(System.Int32,System.Object,System.Object)">
      <summary>Exécute des processus personnalisés supplémentaires avant la définition d'une valeur dans la collection.</summary>
      <param name="index">Index de base zéro au niveau duquel <paramref name="oldValue" /> peut être trouvé.</param>
      <param name="oldValue">Valeur à remplacer par <paramref name="newValue" />.</param>
      <param name="newValue">Nouvelle valeur de l'entrée d'autorisation à la position <paramref name="index" />.</param>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.Remove(System.Diagnostics.EventLogPermissionEntry)">
      <summary>Supprime de cette collection une entrée d'autorisation spécifiée.</summary>
      <param name="value">Entrée d'autorisation à supprimer.</param>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterPermission">
      <summary>Permet de contrôler les autorisations d'accès du code pour <see cref="T:System.Diagnostics.PerformanceCounter" />.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermission.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.PerformanceCounterPermission" />.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermission.#ctor(System.Diagnostics.PerformanceCounterPermissionAccess,System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.PerformanceCounterPermission" /> avec les niveaux d'accès spécifiés, le nom de l'ordinateur à utiliser et la catégorie associée au compteur de performance.</summary>
      <param name="permissionAccess">Une des valeurs de l'objet <see cref="T:System.Diagnostics.PerformanceCounterPermissionAccess" />.</param>
      <param name="machineName">Serveur sur lequel réside le compteur de performance et la catégorie qui lui est associée.</param>
      <param name="categoryName">Nom de la catégorie de compteur de performance (objet de performance) à laquelle le compteur de performance est associé.</param>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermission.#ctor(System.Diagnostics.PerformanceCounterPermissionEntry[])">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.PerformanceCounterPermission" /> avec les entrées de niveau d'accès d'autorisation spécifiées.</summary>
      <param name="permissionAccessEntries">Tableau d'objets <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" />. Cette valeur est affectée à la propriété <see cref="P:System.Diagnostics.PerformanceCounterPermission.PermissionEntries" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="permissionAccessEntries" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.PerformanceCounterPermission" /> avec l'état d'autorisation spécifié.</summary>
      <param name="state">Une des valeurs de l'objet <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="state" /> n’est pas une valeur valide d’<see cref="T:System.Security.Permissions.PermissionState" />.</exception>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterPermission.PermissionEntries">
      <summary>Obtient la collection d'entrées d'autorisation pour cette demande d'autorisation.</summary>
      <returns>
        <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntryCollection" /> qui contient les entrées d'autorisation pour cette demande d'autorisation.</returns>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterPermissionAccess">
      <summary>Définit les niveaux d'accès employés par les classes d'autorisation <see cref="T:System.Diagnostics.PerformanceCounter" />.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterPermissionAccess.Administer">
      <summary>
        <see cref="T:System.Diagnostics.PerformanceCounter" /> peut lire, écrire et créer des catégories.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterPermissionAccess.Browse">
      <summary>
        <see cref="T:System.Diagnostics.PerformanceCounter" /> peut lire des catégories.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterPermissionAccess.Instrument">
      <summary>
        <see cref="T:System.Diagnostics.PerformanceCounter" /> peut lire et écrire des catégories.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterPermissionAccess.None">
      <summary>
        <see cref="T:System.Diagnostics.PerformanceCounter" /> ne possède aucune autorisation.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read">
      <summary>
        <see cref="T:System.Diagnostics.PerformanceCounter" /> peut lire des catégories.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write">
      <summary>
        <see cref="T:System.Diagnostics.PerformanceCounter" /> peut écrire des catégories.</summary>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterPermissionAttribute">
      <summary>Permet de vérifier les autorisations de compteurs de performance déclaratives.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.PerformanceCounterPermissionAttribute" />.</summary>
      <param name="action">Une des valeurs de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterPermissionAttribute.CategoryName">
      <summary>Obtient ou définit le nom de la catégorie de compteur de performance.</summary>
      <returns>Nom de la catégorie de compteur de performance (objet de performance).</returns>
      <exception cref="T:System.ArgumentNullException">La valeur est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionAttribute.CreatePermission">
      <summary>Crée l'autorisation en fonction des niveaux d'accès demandés définis à l'aide de la propriété <see cref="P:System.Diagnostics.PerformanceCounterPermissionAttribute.PermissionAccess" /> de l'attribut.</summary>
      <returns>
        <see cref="T:System.Security.IPermission" /> qui représente l'autorisation créée.</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterPermissionAttribute.MachineName">
      <summary>Obtient ou définit le nom de l'ordinateur pour le compteur de performance.</summary>
      <returns>Serveur sur lequel réside la catégorie du compteur de performance.</returns>
      <exception cref="T:System.ArgumentException">Le format <see cref="P:System.Diagnostics.PerformanceCounterPermissionAttribute.MachineName" /> n'est pas valide.</exception>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterPermissionAttribute.PermissionAccess">
      <summary>Obtient ou définit les niveaux d'accès utilisés dans la demande d'autorisation.</summary>
      <returns>Combinaison d'opérations de bits des valeurs <see cref="T:System.Diagnostics.PerformanceCounterPermissionAccess" />. La valeur par défaut est <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" />.</returns>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterPermissionEntry">
      <summary>Définit la plus petite unité d'une autorisation de sécurité d'accès du code définie pour <see cref="T:System.Diagnostics.PerformanceCounter" />.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntry.#ctor(System.Diagnostics.PerformanceCounterPermissionAccess,System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" />.</summary>
      <param name="permissionAccess">Combinaison d'opérations de bits des valeurs <see cref="T:System.Diagnostics.PerformanceCounterPermissionAccess" />. Cette valeur est affectée à la propriété <see cref="P:System.Diagnostics.PerformanceCounterPermissionEntry.PermissionAccess" />.</param>
      <param name="machineName">Serveur sur lequel réside la catégorie du compteur de performance.</param>
      <param name="categoryName">Nom de la catégorie de compteurs de performance (objet de performance) à laquelle ce compteur de performance est associé.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryName" /> est <see langword="null" />.  

ou - 
<paramref name="machineName" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="permissionAccess" /> n’est pas une valeur de <see cref="T:System.Diagnostics.PerformanceCounterPermissionAccess" /> valide.  

ou - 
<paramref name="machineName" /> n'est pas un nom d'ordinateur valide.</exception>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterPermissionEntry.CategoryName">
      <summary>Obtient le nom de la catégorie de compteur de performance (objet de performance).</summary>
      <returns>Nom de la catégorie de compteur de performance (objet de performance).</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterPermissionEntry.MachineName">
      <summary>Obtient le nom du serveur sur lequel réside la catégorie du compteur de performance.</summary>
      <returns>Nom du serveur sur lequel réside la catégorie.</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterPermissionEntry.PermissionAccess">
      <summary>Obtient le niveau d'accès d'autorisation de l'entrée.</summary>
      <returns>Combinaison d'opérations de bits des valeurs <see cref="T:System.Diagnostics.PerformanceCounterPermissionAccess" />.</returns>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterPermissionEntryCollection">
      <summary>Contient une collection fortement typée d’objets <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" />.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Add(System.Diagnostics.PerformanceCounterPermissionEntry)">
      <summary>Ajoute un <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> spécifié à cette collection.</summary>
      <param name="value">Objet <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> à ajouter.</param>
      <returns>Index de base zéro de l'objet <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> ajouté.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.AddRange(System.Diagnostics.PerformanceCounterPermissionEntry[])">
      <summary>Ajoute un ensemble d'entrées d'autorisation spécifiées à cette collection.</summary>
      <param name="value">Tableau d'objets de type <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> qui contient les entrées d'autorisation à ajouter.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.AddRange(System.Diagnostics.PerformanceCounterPermissionEntryCollection)">
      <summary>Ajoute un ensemble d'entrées d'autorisation spécifiées à cette collection.</summary>
      <param name="value">
        <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntryCollection" /> qui contient les entrées d'autorisation à ajouter.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Contains(System.Diagnostics.PerformanceCounterPermissionEntry)">
      <summary>Détermine si cette collection contient un objet <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> spécifié.</summary>
      <param name="value">Objet <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> à rechercher.</param>
      <returns>
        <see langword="true" /> si l'objet <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> spécifié appartient à cette collection ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.CopyTo(System.Diagnostics.PerformanceCounterPermissionEntry[],System.Int32)">
      <summary>Copie les entrées d'autorisation de cette collection vers un tableau, en commençant à un index spécifique du tableau.</summary>
      <param name="array">Tableau de type <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> qui reçoit les entrées d'autorisation de cette collection.</param>
      <param name="index">Index de base zéro à partir duquel commencer la copie des entrées d'autorisation.</param>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.IndexOf(System.Diagnostics.PerformanceCounterPermissionEntry)">
      <summary>Détermine l'index d'une entrée d'autorisation spécifiée dans cette collection.</summary>
      <param name="value">Entrée d'autorisation à rechercher.</param>
      <returns>Index de base zéro de l'entrée d'autorisation spécifiée, ou -1 si l'entrée d'autorisation est introuvable dans la collection.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Insert(System.Int32,System.Diagnostics.PerformanceCounterPermissionEntry)">
      <summary>Insère une entrée d'autorisation dans cette collection à un index spécifié.</summary>
      <param name="index">Index de base zéro de la collection au niveau duquel insérer l'entrée d'autorisation.</param>
      <param name="value">Entrée d'autorisation à insérer dans cette collection.</param>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Item(System.Int32)">
      <summary>Obtient ou définit l'objet à l'index spécifié.</summary>
      <param name="index">Index de base zéro dans la collection.</param>
      <returns>Objet <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> qui existe à l'index spécifié.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.OnClear">
      <summary>Exécute des processus personnalisés supplémentaires après l'effacement du contenu de la collection.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.OnInsert(System.Int32,System.Object)">
      <summary>Exécute les processus personnalisés supplémentaires avant l'insertion d'une nouvelle entrée d'autorisation dans la collection.</summary>
      <param name="index">Index de base zéro au niveau duquel insérer <paramref name="value" />.</param>
      <param name="value">Nouvelle valeur de l'entrée d'autorisation à la position <paramref name="index" />.</param>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.OnRemove(System.Int32,System.Object)">
      <summary>Exécute les processus personnalisés supplémentaires lors de la suppression d'une nouvelle entrée d'autorisation de la collection.</summary>
      <param name="index">Index de base zéro au niveau duquel <paramref name="value" /> peut être trouvé.</param>
      <param name="value">Entrée d'autorisation à supprimer de <paramref name="index" />.</param>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.OnSet(System.Int32,System.Object,System.Object)">
      <summary>Exécute des processus personnalisés supplémentaires avant la définition d'une valeur dans la collection.</summary>
      <param name="index">Index de base zéro au niveau duquel <paramref name="oldValue" /> peut être trouvé.</param>
      <param name="oldValue">Valeur à remplacer par <paramref name="newValue" />.</param>
      <param name="newValue">Nouvelle valeur de l'entrée d'autorisation à la position <paramref name="index" />.</param>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Remove(System.Diagnostics.PerformanceCounterPermissionEntry)">
      <summary>Supprime de cette collection une entrée d'autorisation spécifiée.</summary>
      <param name="value">Entrée d'autorisation à supprimer.</param>
    </member>
    <member name="T:System.Drawing.Printing.PrintingPermission">
      <summary>Contrôle l'accès aux imprimantes. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.#ctor(System.Drawing.Printing.PrintingPermissionLevel)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Printing.PrintingPermission" /> avec le niveau d'accès aux imprimantes spécifié.</summary>
      <param name="printingLevel">Une des valeurs de l'objet <see cref="T:System.Drawing.Printing.PrintingPermissionLevel" />.</param>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Printing.PrintingPermission" /> avec un accès complètement restreint ou sans restriction, selon ce qui est spécifié.</summary>
      <param name="state">Une des valeurs de l'objet <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> n’est pas un <see cref="T:System.Security.Permissions.PermissionState" /> valide.</exception>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.Copy">
      <summary>Crée et retourne une copie identique de l'objet d'autorisation en cours.</summary>
      <returns>Copie de l’objet d’autorisation actuel.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruit un objet de sécurité avec un état spécifié à partir d’un encodage XML.</summary>
      <param name="element">Encodage XML à utiliser pour reconstruire l'objet de sécurité.</param>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.Intersect(System.Security.IPermission)">
      <summary>Crée et retourne une autorisation qui est l'intersection entre l'objet d'autorisation en cours et l'objet d'autorisation cible.</summary>
      <param name="target">Objet d'autorisation du même type que l'objet d'autorisation en cours.</param>
      <returns>Nouvel objet d'autorisation qui représente l'intersection entre l'objet en cours et la cible spécifiée. Cet objet est <see langword="null" /> si l’intersection est vide.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> est un objet qui n'est pas du même type que l'objet d'autorisation en cours.</exception>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Détermine si l'objet d'autorisation en cours est un sous-ensemble de l'autorisation spécifiée.</summary>
      <param name="target">Objet d'autorisation à tester pour établir s'il s'agit d'un sous-ensemble. Cet objet doit être du même type que l'objet d'autorisation en cours.</param>
      <returns>
        <see langword="true" /> si l'objet d'autorisation en cours est un sous-ensemble de <paramref name="target" /> ; sinon <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> est un objet qui n'est pas du même type que l'objet d'autorisation en cours.</exception>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.IsUnrestricted">
      <summary>Obtient une valeur indiquant si l'autorisation est sans restriction.</summary>
      <returns>
        <see langword="true" /> si l'autorisation ne comporte aucune restriction ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintingPermission.Level">
      <summary>Obtient ou définit le niveau d'accès aux imprimantes pour le code.</summary>
      <returns>Une des valeurs de <see cref="T:System.Drawing.Printing.PrintingPermissionLevel" />.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.ToXml">
      <summary>Crée un codage XML de l’objet de sécurité et de son état actuel.</summary>
      <returns>Encodage XML de l’objet de sécurité, y compris les informations d’état éventuelles.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.Union(System.Security.IPermission)">
      <summary>Crée une autorisation qui combine l'objet d'autorisation et l'objet d'autorisation cible.</summary>
      <param name="target">Objet d'autorisation du même type que l'objet d'autorisation en cours.</param>
      <returns>Nouvel objet d'autorisation qui représente l'union entre l'objet d'autorisation en cours et l'objet d'autorisation spécifié.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> est un objet qui n'est pas du même type que l'objet d'autorisation en cours.</exception>
    </member>
    <member name="T:System.Drawing.Printing.PrintingPermissionAttribute">
      <summary>Permet les vérifications déclaratives des autorisations d'accès aux imprimantes.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Printing.PrintingPermissionAttribute" />.</summary>
      <param name="action">Une des valeurs de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermissionAttribute.CreatePermission">
      <summary>Crée l'autorisation en fonction des niveaux d'accès demandés, tels qu'ils ont été définis par le biais de la propriété <see cref="P:System.Drawing.Printing.PrintingPermissionAttribute.Level" /> sur l'attribut.</summary>
      <returns>
        <see cref="T:System.Security.IPermission" /> qui représente l'autorisation créée.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintingPermissionAttribute.Level">
      <summary>Obtient ou définit le type d'impression autorisé.</summary>
      <returns>Une des valeurs de <see cref="T:System.Drawing.Printing.PrintingPermissionLevel" />.</returns>
      <exception cref="T:System.ArgumentException">La valeur ne fait pas partie des valeurs <see cref="T:System.Drawing.Printing.PrintingPermissionLevel" />.</exception>
    </member>
    <member name="T:System.Drawing.Printing.PrintingPermissionLevel">
      <summary>Spécifie le type d'impression permis au code.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting">
      <summary>Fournit un accès complet à toutes les imprimantes.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting">
      <summary>Fournit une impression par programmation sur l'imprimante par défaut, ainsi qu'une impression sécurisée par le biais d'une boîte de dialogue dont l'accès est semi-restreint. <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" /> est un sous-ensemble de <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting" />.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintingPermissionLevel.NoPrinting">
      <summary>Interdit l'accès aux imprimantes. <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.NoPrinting" /> est un sous-ensemble de <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting" />.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting">
      <summary>Fournit une impression uniquement à partir d'une boîte de dialogue à accès restreint. <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting" /> est un sous-ensemble de <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" />.</summary>
    </member>
    <member name="T:System.Net.DnsPermission">
      <summary>Contrôle les droits d’accès aux serveurs DNS (Domain Name System) du réseau.</summary>
    </member>
    <member name="M:System.Net.DnsPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Crée une instance de la classe <see cref="T:System.Net.DnsPermission" /> qui autorise un accès illimité au serveur DNS ou interdit l’accès à celui-ci.</summary>
      <param name="state">Une des valeurs de l'objet <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> n’est pas une valeur de <see cref="T:System.Security.Permissions.PermissionState" /> valide.</exception>
    </member>
    <member name="M:System.Net.DnsPermission.Copy">
      <summary>Crée une copie identique de l’instance d’autorisation actuelle.</summary>
      <returns>Nouvelle instance de la classe <see cref="T:System.Net.DnsPermission" /> qui est une copie identique de l’instance actuelle.</returns>
    </member>
    <member name="M:System.Net.DnsPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruit une instance de <see cref="T:System.Net.DnsPermission" /> à partir d’un encodage XML.</summary>
      <param name="securityElement">Encodage XML à utiliser pour reconstruire l’instance de <see cref="T:System.Net.DnsPermission" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" /> n’est pas un élément <see cref="T:System.Net.DnsPermission" />.</exception>
    </member>
    <member name="M:System.Net.DnsPermission.Intersect(System.Security.IPermission)">
      <summary>Crée une instance d’autorisation qui est l’intersection entre l’instance d’autorisation actuelle et l’instance d’autorisation spécifiée.</summary>
      <param name="target">Instance de <see cref="T:System.Net.DnsPermission" /> avec laquelle l’instance actuelle doit entrer en intersection.</param>
      <returns>Instance de <see cref="T:System.Net.DnsPermission" /> qui représente l’intersection entre l’instance de <see cref="T:System.Net.DnsPermission" /> actuelle et l’instance de <see cref="T:System.Net.DnsPermission" /> spécifiée, ou <see langword="null" /> si l’intersection est vide. Si l’instance actuelle et le paramètre <paramref name="target" /> sont tous deux non limités, cette méthode retourne une nouvelle instance de <see cref="T:System.Net.DnsPermission" /> non limitée ; sinon, elle retourne <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> n’est ni <see cref="T:System.Net.DnsPermission" />, ni <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.DnsPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Détermine si l’instance d’autorisation actuelle est un sous-ensemble de l’instance d’autorisation spécifiée.</summary>
      <param name="target">Deuxième instance de <see cref="T:System.Net.DnsPermission" /> dont la relation du sous-ensemble doit être testée.</param>
      <returns>
        <see langword="false" /> si l’instance actuelle est non limitée et <paramref name="target" /> est soit <see langword="null" />, soit non limité ; sinon, <see langword="true" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> n’est ni <see cref="T:System.Net.DnsPermission" />, ni <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.DnsPermission.IsUnrestricted">
      <summary>Vérifie l’état d’autorisation général de l’objet.</summary>
      <returns>
        <see langword="true" /> si l’instance de <see cref="T:System.Net.DnsPermission" /> a été créée avec <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.DnsPermission.ToXml">
      <summary>Crée un encodage XML d’une instance de <see cref="T:System.Net.DnsPermission" /> et de son état actuel.</summary>
      <returns>Instance de <see cref="T:System.Security.SecurityElement" /> qui contient une représentation encodée XML de l’objet de sécurité, informations d’état comprises.</returns>
    </member>
    <member name="M:System.Net.DnsPermission.Union(System.Security.IPermission)">
      <summary>Crée une instance d’autorisation qui est l’union entre l’instance d’autorisation actuelle et l’instance d’autorisation spécifiée.</summary>
      <param name="target">Instance de <see cref="T:System.Net.DnsPermission" /> à combiner avec l’instance actuelle.</param>
      <returns>Instance de <see cref="T:System.Net.DnsPermission" /> qui représente l’union entre l’instance de <see cref="T:System.Net.DnsPermission" /> actuelle et l’instance de <see cref="T:System.Net.DnsPermission" /> spécifiée. Si <paramref name="target" /> est <see langword="null" />, cette méthode retourne une copie de l’instance actuelle. Si l’instance actuelle ou le paramètre <paramref name="target" /> est non limité, cette méthode retourne une instance de <see cref="T:System.Net.DnsPermission" /> non limitée ; sinon, elle retourne une instance de <see cref="T:System.Net.DnsPermission" /> qui est limitée.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> n’est ni <see cref="T:System.Net.DnsPermission" />, ni <see langword="null" />.</exception>
    </member>
    <member name="T:System.Net.DnsPermissionAttribute">
      <summary>Spécifie l'autorisation de demander des informations auprès de serveurs de noms de domaines.</summary>
    </member>
    <member name="M:System.Net.DnsPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.DnsPermissionAttribute" /> avec la valeur <see cref="T:System.Security.Permissions.SecurityAction" /> spécifiée.</summary>
      <param name="action">Une des valeurs de l'objet <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="action" /> n’est pas une valeur <see cref="T:System.Security.Permissions.SecurityAction" /> valide.</exception>
    </member>
    <member name="M:System.Net.DnsPermissionAttribute.CreatePermission">
      <summary>Crée et retourne une instance de la classe <see cref="T:System.Net.DnsPermission" />.</summary>
      <returns>
        <see cref="T:System.Net.DnsPermission" /> qui correspond à la déclaration de sécurité.</returns>
    </member>
    <member name="T:System.Net.EndpointPermission">
      <summary>Définit un point de terminaison autorisé par une instance de <see cref="T:System.Net.SocketPermission" />.</summary>
    </member>
    <member name="M:System.Net.EndpointPermission.Equals(System.Object)">
      <summary>Détermine si l'objet <see langword="Object" /> spécifié est égal à l'objet <see langword="Object" /> actuel.</summary>
      <param name="obj">
        <see cref="T:System.Object" /> à comparer avec l'objet <see langword="Object" /> actuel.</param>
      <returns>
        <see langword="true" /> si le <see langword="Object" /> spécifié est égal au <see langword="Object" /> actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.EndpointPermission.GetHashCode">
      <summary>Sert de fonction de hachage pour un type particulier.</summary>
      <returns>Code de hachage du <see cref="T:System.Object" /> actuel.</returns>
    </member>
    <member name="P:System.Net.EndpointPermission.Hostname">
      <summary>Obtient le nom d’hôte DNS ou l’adresse IP du serveur qui est associé à ce point de terminaison.</summary>
      <returns>Chaîne qui contient le nom d'hôte DNS ou l'adresse IP du serveur.</returns>
    </member>
    <member name="P:System.Net.EndpointPermission.Port">
      <summary>Obtient le numéro de port réseau qui est associé à ce point de terminaison.</summary>
      <returns>Numéro de port réseau qui est associé à cette demande, ou <see cref="F:System.Net.SocketPermission.AllPorts" />.</returns>
    </member>
    <member name="P:System.Net.EndpointPermission.Transport">
      <summary>Obtient le type de transport associé à ce point de terminaison.</summary>
      <returns>Une des valeurs de <see cref="T:System.Net.TransportType" />.</returns>
    </member>
    <member name="T:System.Net.Mail.SmtpAccess">
      <summary>Spécifie le niveau d’accès autorisé à un serveur SMTP (Simple Mail Transport Protocol).</summary>
    </member>
    <member name="F:System.Net.Mail.SmtpAccess.Connect">
      <summary>Connexion à un hôte SMTP sur le port par défaut (port 25).</summary>
    </member>
    <member name="F:System.Net.Mail.SmtpAccess.ConnectToUnrestrictedPort">
      <summary>Connexion à un hôte SMTP sur tout port.</summary>
    </member>
    <member name="F:System.Net.Mail.SmtpAccess.None">
      <summary>Aucun accès à un hôte SMTP.</summary>
    </member>
    <member name="T:System.Net.Mail.SmtpPermission">
      <summary>Contrôle l'accès aux serveurs SMTP (Simple Mail Transport Protocol).</summary>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.#ctor(System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Mail.SmtpPermission" /> avec l'état spécifié.</summary>
      <param name="unrestricted">
        <see langword="true" /> si la nouvelle autorisation est sans restriction ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.#ctor(System.Net.Mail.SmtpAccess)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Mail.SmtpPermission" /> à l'aide du niveau d'accès spécifié.</summary>
      <param name="access">Une des valeurs de l'objet <see cref="T:System.Net.Mail.SmtpAccess" />.</param>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Mail.SmtpPermission" /> avec la valeur de l'état d'autorisation spécifiée.</summary>
      <param name="state">Une des valeurs de l'objet <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="P:System.Net.Mail.SmtpPermission.Access">
      <summary>Obtient le niveau d'accès aux serveurs SMTP contrôlé par l'autorisation.</summary>
      <returns>Une des valeurs de l'objet <see cref="T:System.Net.Mail.SmtpAccess" />.</returns>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.AddPermission(System.Net.Mail.SmtpAccess)">
      <summary>Ajoute la valeur de niveau d'accès spécifiée à l'autorisation.</summary>
      <param name="access">Une des valeurs de <see cref="T:System.Net.Mail.SmtpAccess" />.</param>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.Copy">
      <summary>Crée et retourne une copie identique de l’autorisation actuelle.</summary>
      <returns>
        <see cref="T:System.Net.Mail.SmtpPermission" /> qui est identique à l'autorisation en cours.</returns>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.FromXml(System.Security.SecurityElement)">
      <summary>Définit l'état de l'autorisation à l'aide de l'encodage XML spécifié.</summary>
      <param name="securityElement">Encodage XML à utiliser pour définir l'état de l'autorisation en cours.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" /> ne décrit pas un objet <see cref="T:System.Net.Mail.SmtpPermission" />.  

ou - 
<paramref name="securityElement" /> ne contient pas les informations d'état requises pour reconstruire l'autorisation.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.Intersect(System.Security.IPermission)">
      <summary>Crée et retourne une autorisation qui constitue l’intersection entre l’autorisation actuelle et l’autorisation spécifiée.</summary>
      <param name="target">
        <see cref="T:System.Security.IPermission" /> à intersecter avec l'autorisation en cours. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>
        <see cref="T:System.Net.Mail.SmtpPermission" /> qui représente l'intersection entre l'autorisation en cours et l'autorisation spécifiée. Retourne <see langword="null" /> si l'intersection est vide ou si <paramref name="target" /> est <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> n'est pas <see cref="T:System.Net.Mail.SmtpPermission" />.</exception>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Retourne une valeur indiquant si l'autorisation actuelle est un sous-ensemble de l'autorisation spécifiée.</summary>
      <param name="target">
        <see cref="T:System.Security.IPermission" /> qui doit être testé pour la relation de sous-ensemble. Cette autorisation doit être du même type que l’autorisation actuelle.</param>
      <returns>
        <see langword="true" /> si l’autorisation actuelle est un sous-ensemble de l’autorisation spécifiée ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> n'est pas <see cref="T:System.Net.Mail.SmtpPermission" />.</exception>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.IsUnrestricted">
      <summary>Retourne une valeur qui indique si l’autorisation actuelle est illimitée.</summary>
      <returns>
        <see langword="true" /> si l’autorisation actuelle est illimitée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.ToXml">
      <summary>Crée un encodage XML de l'état de l'autorisation.</summary>
      <returns>
        <see cref="T:System.Security.SecurityElement" /> qui contient un encodage XML de l'autorisation en cours.</returns>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.Union(System.Security.IPermission)">
      <summary>Crée une autorisation qui est l’union de l’autorisation actuelle et de l’autorisation spécifiée.</summary>
      <param name="target">
        <see cref="T:System.Security.IPermission" /> à combiner à l'autorisation en cours.</param>
      <returns>Nouvelle <see cref="T:System.Net.Mail.SmtpPermission" /> qui représente l'union entre l'autorisation en cours et l'autorisation spécifiée.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> n'est pas <see cref="T:System.Net.Mail.SmtpPermission" />.</exception>
    </member>
    <member name="T:System.Net.Mail.SmtpPermissionAttribute">
      <summary>Contrôle l'accès aux serveurs SMTP (Simple Mail Transport Protocol).</summary>
    </member>
    <member name="M:System.Net.Mail.SmtpPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Mail.SmtpPermissionAttribute" />.</summary>
      <param name="action">Une des valeurs <see cref="T:System.Security.Permissions.SecurityAction" /> qui spécifie le comportement d'autorisation.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="action" /> n’est pas un <see cref="T:System.Security.Permissions.SecurityAction" /> valide.</exception>
    </member>
    <member name="P:System.Net.Mail.SmtpPermissionAttribute.Access">
      <summary>Obtient ou définit le niveau d'accès aux serveurs SMTP contrôlés par l'attribut.</summary>
      <returns>Valeur <see cref="T:System.String" />. Les valeurs valides sont "Connect" et "None".</returns>
    </member>
    <member name="M:System.Net.Mail.SmtpPermissionAttribute.CreatePermission">
      <summary>Crée un objet d'autorisation qui peut être stocké avec <see cref="T:System.Security.Permissions.SecurityAction" /> dans les métadonnées d'un assembly.</summary>
      <returns>Instance de <see cref="T:System.Net.Mail.SmtpPermission" />.</returns>
    </member>
    <member name="T:System.Net.NetworkAccess">
      <summary>Spécifie les autorisations d'accès au réseau.</summary>
    </member>
    <member name="F:System.Net.NetworkAccess.Accept">
      <summary>Indique que l'application est autorisée à accepter les connexions provenant d'Internet sur une ressource locale. Notez qu'il s'agit d'une protection pour l'hôte local qui utilise Accept pour accorder l'accès à une ressource locale (adresse/port). Au moment où un socket tente d'établir une liaison à cette ressource locale, un contrôle d'autorisation est effectué afin de vérifier s'il existe un Accept sur cette ressource.</summary>
    </member>
    <member name="F:System.Net.NetworkAccess.Connect">
      <summary>Indique que l'application est autorisée à se connecter à des ressources spécifiques sur Internet. Notez que, dans le cas d'une ressource hôte distante, aucun contrôle n'est effectué pour vérifier s'il existe des autorisations Connect. Cela est dû au fait que le port d'un hôte distant se connectant est inconnu et qu'aucune autorisation adéquate ne peut être créée à l'avance. L'application est chargée de vérifier les autorisations de l'hôte distant tentant de se connecter à un socket à l'écoute.</summary>
    </member>
    <member name="T:System.Net.NetworkInformation.NetworkInformationAccess">
      <summary>Spécifie l’autorisation d’accéder aux informations relatives aux interfaces réseau et aux statistiques de trafic.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.NetworkInformationAccess.None">
      <summary>Aucun accès aux informations réseau.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping">
      <summary>Accès par commande Ping aux informations réseau.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.NetworkInformationAccess.Read">
      <summary>Accès en lecture aux informations réseau.</summary>
    </member>
    <member name="T:System.Net.NetworkInformation.NetworkInformationPermission">
      <summary>Contrôle l'accès aux informations réseau et aux statistiques de trafic pour l'ordinateur local. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.#ctor(System.Net.NetworkInformation.NetworkInformationAccess)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" /> avec la valeur <see cref="T:System.Net.NetworkInformation.NetworkInformationAccess" /> spécifiée.</summary>
      <param name="access">Une des valeurs de l'objet <see cref="T:System.Net.NetworkInformation.NetworkInformationAccess" />.</param>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" /> avec le <see cref="T:System.Security.Permissions.PermissionState" /> spécifié.</summary>
      <param name="state">Une des valeurs de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="P:System.Net.NetworkInformation.NetworkInformationPermission.Access">
      <summary>Obtient le niveau d'accès aux informations réseau contrôlé par cette autorisation.</summary>
      <returns>Une des valeurs de <see cref="T:System.Net.NetworkInformation.NetworkInformationAccess" />.</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.AddPermission(System.Net.NetworkInformation.NetworkInformationAccess)">
      <summary>Ajoute la valeur spécifiée à cette autorisation.</summary>
      <param name="access">Une des valeurs de <see cref="T:System.Net.NetworkInformation.NetworkInformationAccess" />.</param>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.Copy">
      <summary>Crée et retourne une copie identique de cette autorisation.</summary>
      <returns>
        <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" /> qui est identique à l'autorisation en cours.</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.FromXml(System.Security.SecurityElement)">
      <summary>Définit l'état de cette autorisation à l'aide de l'encodage XML spécifié.</summary>
      <param name="securityElement">
        <see cref="T:System.Security.SecurityElement" /> qui contient l'encodage XML à utiliser pour définir l'état de l'autorisation actuelle.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" /> n'est pas un encodage d'autorisation.  

ou - 
<paramref name="securityElement" /> n'est pas un encodage d'un <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" />.  

ou 
 <paramref name="securityElement" /> a des valeurs <see cref="T:System.Net.NetworkInformation.NetworkInformationAccess" /> non valides.</exception>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.Intersect(System.Security.IPermission)">
      <summary>Crée et retourne une autorisation qui est l'intersection entre l'autorisation actuelle et l'autorisation spécifiée.</summary>
      <param name="target">
        <see cref="T:System.Security.IPermission" /> à intersecter avec l'autorisation en cours. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>
        <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" /> qui représente l'intersection entre l'autorisation en cours et l'autorisation spécifiée. Cette nouvelle autorisation est <see langword="null" /> si l'intersection est vide ou si <paramref name="target" /> est <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> n’est pas un <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" />.</exception>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Détermine si l'autorisation en cours est un sous-ensemble de l'autorisation spécifiée.</summary>
      <param name="target">
        <see cref="T:System.Security.IPermission" /> qui doit être testé pour la relation de sous-ensemble. Cette autorisation doit être du même type que l'autorisation en cours.</param>
      <returns>
        <see langword="true" /> si l'autorisation en cours est un sous-ensemble de l'autorisation spécifiée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.IsUnrestricted">
      <summary>Retourne une valeur indiquant si l'autorisation en cours est sans restriction.</summary>
      <returns>
        <see langword="true" /> si l'autorisation en cours est illimitée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.ToXml">
      <summary>Crée un encodage XML de l'état de cette autorisation.</summary>
      <returns>
        <see cref="T:System.Security.SecurityElement" /> qui contient l'encodage XML de l'autorisation en cours.</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.Union(System.Security.IPermission)">
      <summary>Crée une autorisation qui est l'union entre cette autorisation et l'autorisation spécifiée.</summary>
      <param name="target">Autorisation <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" /> à combiner avec l'autorisation en cours.</param>
      <returns>Nouvelle autorisation qui représente l’union de l’autorisation actuelle et de l’autorisation spécifiée.</returns>
    </member>
    <member name="T:System.Net.NetworkInformation.NetworkInformationPermissionAttribute">
      <summary>Permet d’appliquer les actions de sécurité de <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" /> au code à l’aide de la sécurité déclarative.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.NetworkInformation.NetworkInformationPermissionAttribute" />.</summary>
      <param name="action">Valeur <see cref="T:System.Security.Permissions.SecurityAction" /> qui spécifie le comportement d'autorisation.</param>
    </member>
    <member name="P:System.Net.NetworkInformation.NetworkInformationPermissionAttribute.Access">
      <summary>Obtient ou définit le niveau d'accès aux informations réseau.</summary>
      <returns>Chaîne qui spécifie le niveau d'accès.</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermissionAttribute.CreatePermission">
      <summary>Crée et retourne un nouvel objet <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" />.</summary>
      <returns>
        <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" /> qui correspond à cet attribut.</returns>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission">
      <summary>Spécifie les valeurs qui définissent ou sont utilisées dans les autorisations d'objet <see cref="N:System.Net.PeerToPeer.Collaboration" />.</summary>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initialise une nouvelle instance de l'objet <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" />. La première valeur <see cref="T:System.Security.Permissions.PermissionState" /> de cette instance est passée lorsque le constructeur est appelé.</summary>
      <param name="state">Une des valeurs dans l’énumération <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Copy">
      <summary>Crée et retourne une copie du <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" />actuel.</summary>
      <returns>Un <see cref="T:System.Object" /> qui contient une copie de l'instance actuelle de <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" />.</returns>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.FromXml(System.Security.SecurityElement)">
      <summary>Représente le modèle d’objet XML pour l’encodage des objets de sécurité.</summary>
      <param name="e">Encodage XML à utiliser pour reconstruire l’autorisation.</param>
      <exception cref="T:System.ArgumentException">Le paramètre n’est pas un élément d’autorisation valide.  

Le paramètre ne contient pas de type ou de classe valide.  

Le numéro de version du paramètre n’est pas pris en charge.</exception>
      <exception cref="T:System.ArgumentNullException">Le paramètre est une référence <see langword="null" /> (<see langword="Nothing" /> en Visual Basic).</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect(System.Security.IPermission)">
      <summary>Crée et retourne un jeu d'autorisations qui est l'intersection entre le <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> en cours et l'autorisation <paramref name="target" /> spécifiée.</summary>
      <param name="target">Autorisation sur <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect(System.Security.IPermission)" /> avec l'autorisation en cours. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>Nouvelle autorisation qui représente l'intersection entre le <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> en cours et l'autorisation <paramref name="target" /> spécifiée. Cette nouvelle autorisation est une référence <see langword="null" /> (<see langword="Nothing" /> en Visual Basic), si l'intersection est vide.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre cible n'est pas une référence <see langword="null" /> (<see langword="Nothing" /> en Visual Basic) et n'est pas une instance de la même classe que l'autorisation en cours.</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Détermine si le <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> actuel est un sous-ensemble de l'autorisation <paramref name="target" /> spécifiée.</summary>
      <param name="target">Autorisation qui doit être testée pour la relation de sous-ensemble. Cette autorisation doit être du même type que l’autorisation actuelle.</param>
      <returns>
        <see langword="true" /> si l'autorisation <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> en cours est un sous-ensemble de l'autorisation spécifiée ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre est une référence <see langword="null" /> (<see langword="Nothing" /> en Visual Basic).</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsUnrestricted">
      <summary>Retourne une valeur qui spécifie si le <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> actuel est illimité.</summary>
      <returns>
        <see langword="true" /> si l’autorisation actuelle est illimitée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.ToXml">
      <summary>Crée un encodage XML du <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> et de son état actuel.</summary>
      <returns>Codage XML de l’autorisation, y compris les informations d’état éventuelles.</returns>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(System.Security.IPermission)">
      <summary>Crée une autorisation qui est l'union entre du <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> actuel et de l'autorisation <paramref name="target" /> spécifiée.</summary>
      <param name="target">Autorisation à combiner avec l’autorisation actuelle. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>Nouvelle autorisation qui représente le <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(System.Security.IPermission)" /> du <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> en cours et l'autorisation spécifiée.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre est une référence <see langword="null" /> (<see langword="Nothing" /> en Visual Basic).</exception>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute">
      <summary>Permet d’appliquer les actions de sécurité de <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> au code à l’aide de la sécurité déclarative. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute" /> avec le <see cref="T:System.Security.Permissions.SecurityAction" /> spécifié.</summary>
      <param name="action">Spécifie une valeur <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute.CreatePermission">
      <summary>Crée et retourne un nouveau <see cref="T:System.Security.IPermission" />.</summary>
      <returns>Nouvel objet <see cref="T:System.Security.IPermission" />.</returns>
    </member>
    <member name="T:System.Net.PeerToPeer.PnrpPermission">
      <summary>Spécifie les valeurs utilisées dans les autorisations d'objet <see cref="N:System.Net.PeerToPeer" />.</summary>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> avec l’état d’autorisation initial fourni.</summary>
      <param name="state">Une des valeurs dans l’énumération <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.Copy">
      <summary>Crée et retourne une copie identique de l'objet <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> en cours.</summary>
      <returns>Objet avec une interface IPermission, dont l'instance contient une copie de l'instance actuelle de <see cref="T:System.Net.PeerToPeer.PnrpPermission" />.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre n’est pas un élément <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> valide.  

Le numéro de version du paramètre n’est pas pris en charge.</exception>
      <exception cref="T:System.ArgumentNullException">Le paramètre est une référence <see langword="null" /> (<see langword="Nothing" /> en Visual Basic).</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruit un objet de sécurité avec un état spécifié à partir d’un encodage XML.</summary>
      <param name="e">Encodage XML à utiliser pour reconstruire l’autorisation.</param>
      <exception cref="T:System.ArgumentException">Le paramètre n’est pas un élément <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> valide.  

Le numéro de version du paramètre n’est pas pris en charge.</exception>
      <exception cref="T:System.ArgumentNullException">Le paramètre est une référence <see langword="null" /> (<see langword="Nothing" /> en Visual Basic).</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)">
      <summary>Crée et retourne une autorisation qui est l'intersection entre le <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> en cours et l'autorisation  spécifiée.</summary>
      <param name="target">Autorisation sur <see cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" /> avec l'autorisation en cours. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>Nouvelle autorisation qui représente l'intersection entre le <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> en cours et l'autorisation  spécifiée. Cette nouvelle autorisation est une référence <see langword="null" /> (<see langword="Nothing" /> en Visual Basic), si l'intersection est vide.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre cible n'est pas une référence <see langword="null" /> (<see langword="Nothing" /> en Visual Basic) et n'est pas une instance de la même classe que l'autorisation en cours.</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Détermine si le <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> actuel est un sous-ensemble de l'autorisation spécifiée.</summary>
      <param name="target">Autorisation qui doit être testée pour la relation de sous-ensemble. Cette autorisation doit être du même type que l'autorisation en cours.</param>
      <returns>
        <see langword="true" /> si l'autorisation <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> en cours est un sous-ensemble de l'autorisation spécifiée ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre cible n'est pas une référence <see langword="null" /> (<see langword="Nothing" /> en Visual Basic) et n'est pas une instance de la même classe que l'autorisation en cours.</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted">
      <summary>Retourne une valeur qui spécifie si le <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> actuel est illimité.</summary>
      <returns>
        <see langword="true" /> si l’autorisation actuelle est illimitée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.ToXml">
      <summary>Crée un encodage XML du <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> et de son état actuel.</summary>
      <returns>Objet <see cref="T:System.Security.SecurityElement" /> contenant l'encodage XML de l'autorisation, y compris des informations d'état.</returns>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)">
      <summary>Crée une autorisation qui est l'union entre le <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> actuel et l'autorisation spécifiée.</summary>
      <param name="target">Autorisation à combiner avec l’autorisation actuelle. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>Nouvelle autorisation qui représente le <see cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" /> du <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> en cours et l'autorisation spécifiée.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="target" /> n'est pas valide.</exception>
    </member>
    <member name="T:System.Net.PeerToPeer.PnrpPermissionAttribute">
      <summary>Permet d’appliquer les actions de sécurité de <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> au code à l’aide de la sécurité déclarative.</summary>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" /> avec le <see cref="T:System.Security.Permissions.SecurityAction" /> spécifié.</summary>
      <param name="action">Une des valeurs de l'objet <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermissionAttribute.CreatePermission">
      <summary>Crée et retourne un nouveau <see cref="T:System.Security.IPermission" />.</summary>
      <returns>Nouvel objet <see cref="T:System.Security.IPermission" />.</returns>
    </member>
    <member name="T:System.Net.PeerToPeer.PnrpScope">
      <summary>Spécifie les différentes portées d'un nuage PNRP.</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.PnrpScope.All">
      <summary>Toutes les adresses IP sont autorisées à s'inscrire auprès du <see cref="T:System.Net.PeerToPeer.Cloud" /> PNRP. Il n'y a aucune différence entre n'importe quelle portée et toutes les portées.</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.PnrpScope.Global">
      <summary>La portée est globale ; toutes les adresses IP valides sont autorisées à s'inscrire auprès du <see cref="T:System.Net.PeerToPeer.Cloud" /> PNRP.</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.PnrpScope.LinkLocal">
      <summary>La portée est de lien local ; seules les adresses IP définies pour le sous-réseau de zone locale sont autorisées à s'inscrire auprès du <see cref="T:System.Net.PeerToPeer.Cloud" /> PNRP.</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.PnrpScope.SiteLocal">
      <summary>La portée est de site local ; seules les adresses IP définies pour le site sont autorisées à s'inscrire auprès du PNRP.</summary>
    </member>
    <member name="T:System.Net.SocketPermission">
      <summary>Contrôle les droits d'établissement ou d'acceptation de connexions à une adresse de transport.</summary>
    </member>
    <member name="M:System.Net.SocketPermission.#ctor(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.SocketPermission" /> pour l'adresse de transport donnée avec l'autorisation spécifiée.</summary>
      <param name="access">Une des valeurs de <see cref="T:System.Net.NetworkAccess" />.</param>
      <param name="transport">Une des valeurs de l'objet <see cref="T:System.Net.TransportType" />.</param>
      <param name="hostName">Nom d'hôte de l'adresse de transport.</param>
      <param name="portNumber">Numéro de port de l'adresse de transport.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hostName" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.SocketPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.SocketPermission" /> qui autorise un accès illimité à <see cref="T:System.Net.Sockets.Socket" /> ou interdit tout accès à <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <param name="state">Une des valeurs de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="P:System.Net.SocketPermission.AcceptList">
      <summary>Obtient une liste d'instances de <see cref="T:System.Net.EndpointPermission" /> identifiant les points de terminaison qui peuvent être acceptés selon cette instance d'autorisation.</summary>
      <returns>Instance implémentant l'interface <see cref="T:System.Collections.IEnumerator" /> contenant des instances de <see cref="T:System.Net.EndpointPermission" />.</returns>
    </member>
    <member name="M:System.Net.SocketPermission.AddPermission(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
      <summary>Ajoute une autorisation au jeu d'autorisations pour une adresse de transport.</summary>
      <param name="access">Une des valeurs de l'objet <see cref="T:System.Net.NetworkAccess" />.</param>
      <param name="transport">Une des valeurs de <see cref="T:System.Net.TransportType" />.</param>
      <param name="hostName">Nom d'hôte de l'adresse de transport.</param>
      <param name="portNumber">Numéro de port de l'adresse de transport.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hostName" /> est <see langword="null" />.</exception>
    </member>
    <member name="F:System.Net.SocketPermission.AllPorts">
      <summary>Définit une constante représentant tous les ports.</summary>
    </member>
    <member name="P:System.Net.SocketPermission.ConnectList">
      <summary>Obtient une liste d'instances de <see cref="T:System.Net.EndpointPermission" /> identifiant les points de terminaison auxquels vous pouvez vous connecter selon cette instance d'autorisation.</summary>
      <returns>Instance implémentant l'interface <see cref="T:System.Collections.IEnumerator" /> contenant des instances de <see cref="T:System.Net.EndpointPermission" />.</returns>
    </member>
    <member name="M:System.Net.SocketPermission.Copy">
      <summary>Crée une copie d'une instance <see cref="T:System.Net.SocketPermission" />.</summary>
      <returns>Nouvelle instance de la classe <see cref="T:System.Net.SocketPermission" /> qui est une copie de l'instance en cours.</returns>
    </member>
    <member name="M:System.Net.SocketPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruit une instance de <see cref="T:System.Net.SocketPermission" /> pour un encodage XML.</summary>
      <param name="securityElement">Encodage XML utilisé pour reconstruire l'instance de <see cref="T:System.Net.SocketPermission" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" /> n'est pas un élément d'autorisation pour ce type.</exception>
    </member>
    <member name="M:System.Net.SocketPermission.Intersect(System.Security.IPermission)">
      <summary>Retourne l'intersection logique entre deux instances de <see cref="T:System.Net.SocketPermission" />.</summary>
      <param name="target">Instance de <see cref="T:System.Net.SocketPermission" /> avec laquelle l’instance actuelle doit entrer en intersection.</param>
      <returns>Instance de <see cref="T:System.Net.SocketPermission" /> qui représente l'intersection de deux instances de <see cref="T:System.Net.SocketPermission" />. Si l'intersection est vide, la méthode retourne <see langword="null" />. Si le paramètre <paramref name="target" /> est une référence null, la méthode retourne <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="target" /> n'est pas un <see cref="T:System.Net.SocketPermission" />.</exception>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Net.DnsPermission" /> n'est pas accordé à l'appelant de la méthode.</exception>
    </member>
    <member name="M:System.Net.SocketPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Détermine si l'autorisation actuelle est un sous-ensemble de l'autorisation spécifiée.</summary>
      <param name="target">
        <see cref="T:System.Net.SocketPermission" /> qui doit être testé pour la relation de sous-ensemble.</param>
      <returns>Si <paramref name="target" /> est <see langword="null" />, cette méthode retourne <see langword="true" /> si l'instance en cours ne définit aucune autorisation ; sinon, <see langword="false" />. Si <paramref name="target" /> n'est pas <see langword="null" />, cette méthode retourne <see langword="true" /> si l'instance en cours définit un sous-ensemble d'autorisations <paramref name="target" /> ; sinon <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> n’est pas un <see cref="T:System.Net.Sockets.SocketException" />.</exception>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Net.DnsPermission" /> n'est pas accordé à l'appelant de la méthode.</exception>
    </member>
    <member name="M:System.Net.SocketPermission.IsUnrestricted">
      <summary>Vérifie l’état d’autorisation général de l’objet.</summary>
      <returns>
        <see langword="true" /> si l'instance de <see cref="T:System.Net.SocketPermission" /> est créée avec la valeur <see langword="Unrestricted" /> à partir de <see cref="T:System.Security.Permissions.PermissionState" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.SocketPermission.ToXml">
      <summary>Crée un encodage XML d’une instance de <see cref="T:System.Net.SocketPermission" /> et de son état actuel.</summary>
      <returns>Instance de <see cref="T:System.Security.SecurityElement" /> contenant une représentation encodée XML de l'instance de <see cref="T:System.Net.SocketPermission" />, informations d'état comprises</returns>
    </member>
    <member name="M:System.Net.SocketPermission.Union(System.Security.IPermission)">
      <summary>Retourne l'union logique entre deux instances de <see cref="T:System.Net.SocketPermission" />.</summary>
      <param name="target">Instance de <see cref="T:System.Net.SocketPermission" /> à combiner avec l’instance actuelle.</param>
      <returns>Instance de <see cref="T:System.Net.SocketPermission" /> qui représente l'union de deux instances de <see cref="T:System.Net.SocketPermission" />. Si le paramètre <paramref name="target" /> est <see langword="null" />, il retourne une copie de l'instance en cours.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> n’est pas un <see cref="T:System.Net.SocketPermission" />.</exception>
    </member>
    <member name="T:System.Net.SocketPermissionAttribute">
      <summary>Spécifie des actions de sécurité pour contrôler des connexions <see cref="T:System.Net.Sockets.Socket" />. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Net.SocketPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.SocketPermissionAttribute" /> avec la valeur <see cref="T:System.Security.Permissions.SecurityAction" /> spécifiée.</summary>
      <param name="action">Une des valeurs de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="action" /> n’est pas une valeur de <see cref="T:System.Security.Permissions.SecurityAction" /> valide.</exception>
    </member>
    <member name="P:System.Net.SocketPermissionAttribute.Access">
      <summary>Obtient ou définit la méthode d'accès réseau qui est autorisée par <see cref="T:System.Net.SocketPermissionAttribute" />.</summary>
      <returns>Chaîne qui contient la méthode d'accès réseau autorisée par cette instance de <see cref="T:System.Net.SocketPermissionAttribute" />. Les valeurs valides sont "Accept" et "Connect".</returns>
      <exception cref="T:System.ArgumentException">La propriété <see cref="P:System.Net.SocketPermissionAttribute.Access" /> n'est pas <see langword="null" /> lorsque vous tentez de définir la valeur. Pour spécifier plusieurs méthodes d'accès, utilisez une instruction de déclaration attribute supplémentaire.</exception>
    </member>
    <member name="M:System.Net.SocketPermissionAttribute.CreatePermission">
      <summary>Crée et retourne une instance de la classe <see cref="T:System.Net.SocketPermission" />.</summary>
      <returns>Instance de la classe <see cref="T:System.Net.SocketPermission" /> qui correspond à la déclaration de sécurité.</returns>
      <exception cref="T:System.ArgumentException">Une ou plusieurs propriétés <see cref="P:System.Net.SocketPermissionAttribute.Access" />, <see cref="P:System.Net.SocketPermissionAttribute.Host" />, <see cref="P:System.Net.SocketPermissionAttribute.Transport" /> ou <see cref="P:System.Net.SocketPermissionAttribute.Port" /> de l'instance en cours est <see langword="null" />.</exception>
    </member>
    <member name="P:System.Net.SocketPermissionAttribute.Host">
      <summary>Obtient ou définit le nom d'hôte DNS ou l'adresse IP qui est spécifié par <see cref="T:System.Net.SocketPermissionAttribute" />.</summary>
      <returns>Chaîne qui contient le nom d'hôte DNS ou l'adresse IP associé à cette instance de <see cref="T:System.Net.SocketPermissionAttribute" />.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Net.SocketPermissionAttribute.Host" /> n'est pas <see langword="null" /> lorsque vous tentez de définir la valeur. Pour spécifier plusieurs hôtes, utilisez une instruction de déclaration attribute supplémentaire.</exception>
    </member>
    <member name="P:System.Net.SocketPermissionAttribute.Port">
      <summary>Obtient ou définit le numéro de port qui est associé à <see cref="T:System.Net.SocketPermissionAttribute" />.</summary>
      <returns>Chaîne qui contient le numéro de port associé à cette instance de <see cref="T:System.Net.SocketPermissionAttribute" />.</returns>
      <exception cref="T:System.ArgumentException">La propriété <see cref="P:System.Net.SocketPermissionAttribute.Port" /> est <see langword="null" /> lorsque vous tentez de définir la valeur. Pour spécifier plusieurs ports, utilisez une instruction de déclaration attribute supplémentaire.</exception>
    </member>
    <member name="P:System.Net.SocketPermissionAttribute.Transport">
      <summary>Obtient ou définit le <see cref="T:System.Net.TransportType" /> qui est spécifié par <see cref="T:System.Net.SocketPermissionAttribute" />.</summary>
      <returns>Chaîne qui contient le <see cref="T:System.Net.TransportType" /> associé à <see cref="T:System.Net.SocketPermissionAttribute" />.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Net.SocketPermissionAttribute.Transport" /> n'est pas <see langword="null" /> lorsque vous tentez de définir la valeur. Pour spécifier plusieurs types de transport, utilisez une instruction de déclaration attribute supplémentaire.</exception>
    </member>
    <member name="T:System.Net.TransportType">
      <summary>Définit les types de transport pour les classes <see cref="T:System.Net.SocketPermission" /> et <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.TransportType.All">
      <summary>Tous les types de transport.</summary>
    </member>
    <member name="F:System.Net.TransportType.Connectionless">
      <summary>Il s’agit d’un type de transport sans connexion, tel que UDP. Spécifier cette valeur équivaut à spécifier <see cref="F:System.Net.TransportType.Udp" />.</summary>
    </member>
    <member name="F:System.Net.TransportType.ConnectionOriented">
      <summary>Il s’agit d’un type de transport orienté connexion, tel que TCP. Spécifier cette valeur équivaut à spécifier <see cref="F:System.Net.TransportType.Tcp" />.</summary>
    </member>
    <member name="F:System.Net.TransportType.Tcp">
      <summary>Transport TCP.</summary>
    </member>
    <member name="F:System.Net.TransportType.Udp">
      <summary>Transport UDP.</summary>
    </member>
    <member name="T:System.Net.WebPermission">
      <summary>Contrôle les droits d'accès à des ressources Internet HTTP.</summary>
    </member>
    <member name="M:System.Net.WebPermission.#ctor">
      <summary>Crée une instance de la classe <see cref="T:System.Net.WebPermission" />.</summary>
    </member>
    <member name="M:System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.WebPermission" /> avec les droits d'accès spécifiés pour l'URI spécifié.</summary>
      <param name="access">Valeur NetworkAccess qui indique le type d'accès à accorder à l'URI spécifié. <see cref="F:System.Net.NetworkAccess.Accept" /> indique que l'application est autorisée à accepter les connexions provenant d'Internet sur une ressource locale. <see cref="F:System.Net.NetworkAccess.Connect" /> indique que l'application est autorisée à se connecter à des ressources spécifiques sur Internet.</param>
      <param name="uriString">Chaîne d'URI à laquelle des droits d'accès sont accordés.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uriString" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.WebPermission" /> avec les droits d'accès spécifiés pour l'expression régulière d'URI spécifiée.</summary>
      <param name="access">Valeur <see cref="T:System.Net.NetworkAccess" /> qui indique le type d'accès à accorder à l'URI spécifié. <see cref="F:System.Net.NetworkAccess.Accept" /> indique que l'application est autorisée à accepter les connexions provenant d'Internet sur une ressource locale. <see cref="F:System.Net.NetworkAccess.Connect" /> indique que l'application est autorisée à se connecter à des ressources spécifiques sur Internet.</param>
      <param name="uriRegex">Expression régulière qui décrit l'URI auquel un accès doit être accordé.</param>
    </member>
    <member name="M:System.Net.WebPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Crée une nouvelle instance de la classe <see cref="T:System.Net.WebPermission" /> qui fait aboutir ou échouer toutes les demandes.</summary>
      <param name="state">Valeur <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="P:System.Net.WebPermission.AcceptList">
      <summary>Cette propriété retourne une énumération d'une autorisation d'acceptation unique détenue par <see cref="T:System.Net.WebPermission" />. Les types d'objets pouvant être contenus dans l'énumération retournée sont <see cref="T:System.String" /> et <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
      <returns>Interface <see cref="T:System.Collections.IEnumerator" /> qui contient des autorisations d'acceptation.</returns>
    </member>
    <member name="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)">
      <summary>Ajoute la chaîne d'URI spécifiée avec les droits d'accès spécifiés au <see cref="T:System.Net.WebPermission" /> actuel.</summary>
      <param name="access">
        <see cref="T:System.Net.NetworkAccess" /> qui spécifie les droits d'accès accordés à l'URI.</param>
      <param name="uriString">Chaîne qui décrit l'URI auquel des droits d'accès sont accordés.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uriString" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)">
      <summary>Ajoute l'URI spécifié avec les droits d'accès spécifiés au <see cref="T:System.Net.WebPermission" /> en cours.</summary>
      <param name="access">NetworkAccess qui spécifie les droits d'accès accordés à l'URI.</param>
      <param name="uriRegex">Expression régulière qui décrit l'ensemble d'URI auquel des droits d'accès sont accordés.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="uriRegex" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Net.WebPermission.ConnectList">
      <summary>Cette propriété retourne une énumération d'une autorisation de connexion unique détenue par <see cref="T:System.Net.WebPermission" />. Les types d'objets pouvant être contenus dans l'énumération retournée sont <see cref="T:System.String" /> et <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
      <returns>Interface <see cref="T:System.Collections.IEnumerator" /> qui contient des autorisations de connexion.</returns>
    </member>
    <member name="M:System.Net.WebPermission.Copy">
      <summary>Crée une copie de <see cref="T:System.Net.WebPermission" />.</summary>
      <returns>Nouvelle instance de la classe <see cref="T:System.Net.WebPermission" /> ayant les mêmes valeurs que la classe d'origine.</returns>
    </member>
    <member name="M:System.Net.WebPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruit <see cref="T:System.Net.WebPermission" /> à partir d'un encodage XML.</summary>
      <param name="securityElement">Encodage XML à partir duquel reconstruire <see cref="T:System.Net.WebPermission" />.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="securityElement" /> est <see langword="null." />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" /> n'est pas un élément d'autorisation pour ce type.</exception>
    </member>
    <member name="M:System.Net.WebPermission.Intersect(System.Security.IPermission)">
      <summary>Retourne l'intersection logique de deux instances de <see cref="T:System.Net.WebPermission" />.</summary>
      <param name="target">
        <see cref="T:System.Net.WebPermission" /> à comparer à l'instance actuelle.</param>
      <returns>Nouveau <see cref="T:System.Net.WebPermission" /> qui représente l'intersection de l'instance en cours et du paramètre <paramref name="target" />. Si l'intersection est vide, la méthode retourne <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> n'est pas <see langword="null" /> ou du type <see cref="T:System.Net.WebPermission" />.</exception>
    </member>
    <member name="M:System.Net.WebPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Détermine si le <see cref="T:System.Net.WebPermission" /> actuel est un sous-ensemble de l'objet spécifié.</summary>
      <param name="target">
        <see cref="T:System.Net.WebPermission" /> à comparer à l'objet <see cref="T:System.Net.WebPermission" /> actuel.</param>
      <returns>
        <see langword="true" /> si l'instance en cours est un sous-ensemble du paramètre <paramref name="target" /> ; sinon <see langword="false" />. Si la cible est <see langword="null" />, la méthode retourne <see langword="true" /> pour une autorisation actuelle vide qui n'est pas sans restriction et <see langword="false" /> dans les autres cas.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre cible n'est pas une instance de <see cref="T:System.Net.WebPermission" />.</exception>
      <exception cref="T:System.NotSupportedException">L'instance en cours contient un droit d'accès encodé Regex et l'instance cible ne comporte pas exactement le même droit d'accès.</exception>
    </member>
    <member name="M:System.Net.WebPermission.IsUnrestricted">
      <summary>Vérifie l'état d'autorisation global de <see cref="T:System.Net.WebPermission" />.</summary>
      <returns>
        <see langword="true" /> si <see cref="T:System.Net.WebPermission" /> a été créé avec <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /><see cref="T:System.Security.Permissions.PermissionState" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.WebPermission.ToXml">
      <summary>Crée un encodage XML d'un <see cref="T:System.Net.WebPermission" /> et son état actuel.</summary>
      <returns>
        <see cref="T:System.Security.SecurityElement" /> qui contient une représentation encodée XML de <see cref="T:System.Net.WebPermission" /> incluant notamment des informations d'état.</returns>
    </member>
    <member name="M:System.Net.WebPermission.Union(System.Security.IPermission)">
      <summary>Retourne l'union logique entre deux instances de la classe <see cref="T:System.Net.WebPermission" />.</summary>
      <param name="target">
        <see cref="T:System.Net.WebPermission" /> à combiner au <see cref="T:System.Net.WebPermission" /> actuel.</param>
      <returns>
        <see cref="T:System.Net.WebPermission" /> qui représente l'union de l'instance en cours et du paramètre <paramref name="target" />. Si <see langword="WebPermission" /> est <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />, la méthode retourne un <see cref="T:System.Net.WebPermission" /> qui est <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Si la cible est <see langword="null" />, la méthode retourne une copie du <see cref="T:System.Net.WebPermission" /> actuel.</returns>
      <exception cref="T:System.ArgumentException">target n'est pas <see langword="null" /> ou du type <see cref="T:System.Net.WebPermission" />.</exception>
    </member>
    <member name="T:System.Net.WebPermissionAttribute">
      <summary>Spécifie une autorisation d'accès à des ressources Internet. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Net.WebPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.WebPermissionAttribute" /> avec une valeur qui spécifie les actions de sécurité pouvant être effectuées sur cette classe.</summary>
      <param name="action">Une des valeurs de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="action" /> n’est pas une valeur de <see cref="T:System.Security.Permissions.SecurityAction" /> valide.</exception>
    </member>
    <member name="P:System.Net.WebPermissionAttribute.Accept">
      <summary>Obtient ou définit la chaîne d'URI acceptée par le <see cref="T:System.Net.WebPermissionAttribute" /> actuel.</summary>
      <returns>Chaîne contenant l'URI accepté par le <see cref="T:System.Net.WebPermissionAttribute" /> actuel.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Net.WebPermissionAttribute.Accept" /> n'est pas <see langword="null" /> lorsque vous tentez de définir la valeur. Si vous souhaitez spécifier plusieurs URI d'acceptation, utilisez une instruction de déclaration attribute supplémentaire.</exception>
    </member>
    <member name="P:System.Net.WebPermissionAttribute.AcceptPattern">
      <summary>Obtient ou définit un modèle d'expression régulière qui décrit l'URI accepté par le <see cref="T:System.Net.WebPermissionAttribute" /> actuel.</summary>
      <returns>Chaîne contenant un modèle d'expression régulière qui décrit l'URI accepté par le <see cref="T:System.Net.WebPermissionAttribute" /> actuel. Cette chaîne doit avoir une séquence d'échappement conforme aux règles d'encodage d'une chaîne de constructeur <see cref="T:System.Text.RegularExpressions.Regex" />.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Net.WebPermissionAttribute.AcceptPattern" /> n'est pas <see langword="null" /> lorsque vous tentez de définir la valeur. Si vous souhaitez spécifier plusieurs URI d'acceptation, utilisez une instruction de déclaration attribute supplémentaire.</exception>
    </member>
    <member name="P:System.Net.WebPermissionAttribute.Connect">
      <summary>Obtient ou définit la chaîne de connexion d'URI contrôlée par le <see cref="T:System.Net.WebPermissionAttribute" /> actuel.</summary>
      <returns>Chaîne contenant la connexion URI contrôlée par le <see cref="T:System.Net.WebPermissionAttribute" /> actuel.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Net.WebPermissionAttribute.Connect" /> n'est pas <see langword="null" /> lorsque vous tentez de définir la valeur. Si vous souhaitez spécifier plusieurs URI de connexion, utilisez une instruction de déclaration attribute supplémentaire.</exception>
    </member>
    <member name="P:System.Net.WebPermissionAttribute.ConnectPattern">
      <summary>Obtient ou définit un modèle d'expression régulière qui décrit la connexion URI contrôlée par le <see cref="T:System.Net.WebPermissionAttribute" /> actuel.</summary>
      <returns>Chaîne contenant un modèle d'expression régulière qui décrit la connexion URI contrôlée par <see cref="T:System.Net.WebPermissionAttribute" />.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Net.WebPermissionAttribute.ConnectPattern" /> n'est pas <see langword="null" /> lorsque vous tentez de définir la valeur. Si vous souhaitez spécifier plusieurs URI de connexion, utilisez une instruction de déclaration attribute supplémentaire.</exception>
    </member>
    <member name="M:System.Net.WebPermissionAttribute.CreatePermission">
      <summary>Crée et retourne une instance de la classe <see cref="T:System.Net.WebPermission" />.</summary>
      <returns>
        <see cref="T:System.Net.WebPermission" /> correspondant à la déclaration de sécurité.</returns>
    </member>
    <member name="T:System.Security.CodeAccessPermission">
      <summary>Définit la structure sous-jacente de toutes les autorisations d’accès au code.</summary>
    </member>
    <member name="M:System.Security.CodeAccessPermission.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.CodeAccessPermission" />.</summary>
    </member>
    <member name="M:System.Security.CodeAccessPermission.Assert">
      <summary>Déclare que le code appelant peut accéder à la ressource protégée par une demande d’autorisation via le code qui appelle cette méthode, même si les appelants situés plus haut dans la pile n’ont pas reçu l’autorisation d’accéder à la ressource. L’utilisation de <see cref="M:System.Security.CodeAccessPermission.Assert" /> peut créer des problèmes de sécurité.</summary>
      <exception cref="T:System.Security.SecurityException">Le code appelant n’a pas <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Assertion" />.  

ou - 
Il existe déjà un <see cref="M:System.Security.CodeAccessPermission.Assert" /> actif pour l’image actuelle.</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.Copy">
      <summary>En cas d’implémentation par une classe dérivée, crée et retourne une copie identique de l’objet d’autorisation actuel.</summary>
      <returns>Copie de l’objet d’autorisation actuel.</returns>
    </member>
    <member name="M:System.Security.CodeAccessPermission.Demand">
      <summary>Au moment de l'exécution, force <see cref="T:System.Security.SecurityException" /> si tous les appelants qui sont plus hauts dans la pile des appels n'ont pas reçu l'autorisation spécifiée par l'instance actuelle.</summary>
      <exception cref="T:System.Security.SecurityException">Un appelant qui est plus haut dans la pile des appels n'a pas reçu l'autorisation spécifiée par l'instance actuelle.  
ou 
Un appelant qui est plus haut dans la pile des appels a appelé <see cref="M:System.Security.CodeAccessPermission.Deny" /> sur l'objet d'autorisation en cours.</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.Deny">
      <summary>Empêche les appelants situés plus haut dans la pile des appels d'utiliser le code qui appelle cette méthode pour accéder à la ressource spécifiée par l'instance actuelle.</summary>
      <exception cref="T:System.Security.SecurityException">Il existe déjà un <see cref="M:System.Security.CodeAccessPermission.Deny" /> actif pour l’image actuelle.</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.Equals(System.Object)">
      <summary>Détermine si l'objet <see cref="T:System.Security.CodeAccessPermission" /> spécifié est égal à <see cref="T:System.Security.CodeAccessPermission" /> en cours.</summary>
      <param name="obj">Objet <see cref="T:System.Security.CodeAccessPermission" /> à comparer au <see cref="T:System.Security.CodeAccessPermission" /> actuel.</param>
      <returns>
        <see langword="true" /> si <see cref="T:System.Security.CodeAccessPermission" /> qui est spécifié est égal à l'objet <see cref="T:System.Security.CodeAccessPermission" /> actuel ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.CodeAccessPermission.FromXml(System.Security.SecurityElement)">
      <summary>En cas de substitution dans une classe dérivée, reconstruit un objet de sécurité avec un état spécifié à partir d'un encodage XML.</summary>
      <param name="elem">Encodage XML à utiliser pour reconstruire l’objet de sécurité.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="elem" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="elem" /> ne contient pas l'encodage XML pour une instance du même type que l'instance actuelle.  
ou 
Le numéro de version du paramètre <paramref name="elem" /> n’est pas pris en charge.</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.GetHashCode">
      <summary>Obtient un code de hachage pour l’objet <see cref="T:System.Security.CodeAccessPermission" /> qui peut être utilisé dans des structures de données et des algorithmes de hachage, comme une table de hachage.</summary>
      <returns>Code de hachage pour l’objet <see cref="T:System.Security.CodeAccessPermission" /> actuel.</returns>
    </member>
    <member name="M:System.Security.CodeAccessPermission.Intersect(System.Security.IPermission)">
      <summary>Lors de l'implémentation par une classe dérivée, crée et retourne une autorisation qui est l'intersection de l'autorisation en cours et de l'autorisation spécifiée.</summary>
      <param name="target">Autorisation à croiser avec l’autorisation actuelle. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>Nouvelle autorisation qui représente l’intersection entre l’autorisation actuelle et l’autorisation spécifiée. Cette nouvelle autorisation est <see langword="null" /> si l’intersection est vide.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="target" /> n'est pas <see langword="null" /> et n'est pas une instance de la même classe que l'autorisation en cours.</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Lors de l'implémentation par une classe dérivée, détermine si l'autorisation en cours est un sous-ensemble de l'autorisation spécifiée.</summary>
      <param name="target">Autorisation qui doit être testée pour la relation de sous-ensemble. Cette autorisation doit être du même type que l’autorisation actuelle.</param>
      <returns>
        <see langword="true" /> si l’autorisation actuelle est un sous-ensemble de l’autorisation spécifiée ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="target" /> n’a pas la valeur <see langword="null" /> et n’est pas du même type que l’autorisation actuelle.</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.PermitOnly">
      <summary>Empêche les appelants situés plus haut dans la pile des appels d'utiliser le code qui appelle cette méthode pour accéder à toutes les ressources sauf celle spécifiée par l'instance actuelle.</summary>
      <exception cref="T:System.Security.SecurityException">Il existe déjà un <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> actif pour l’image actuelle.</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.RevertAll">
      <summary>Provoque la suppression et la désactivation de toutes les précédentes substitutions pour le frame en cours.</summary>
      <exception cref="T:System.InvalidOperationException">Il n'existe aucun <see cref="M:System.Security.CodeAccessPermission.Assert" />, <see cref="M:System.Security.CodeAccessPermission.Deny" /> ou <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> précédent pour le frame en cours.</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.RevertAssert">
      <summary>Provoque la suppression et la désactivation du <see cref="M:System.Security.CodeAccessPermission.Assert" /> précédent pour le frame en cours.</summary>
      <exception cref="T:System.InvalidOperationException">Il n’existe pas d’<see cref="M:System.Security.CodeAccessPermission.Assert" /> antérieur pour le frame actuel.</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.RevertDeny">
      <summary>Provoque la suppression et la désactivation du <see cref="M:System.Security.CodeAccessPermission.Deny" /> précédent pour le frame en cours.</summary>
      <exception cref="T:System.InvalidOperationException">Il n’existe pas d’<see cref="M:System.Security.CodeAccessPermission.Deny" /> antérieur pour le frame actuel.</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.RevertPermitOnly">
      <summary>Provoque la suppression et la désactivation du <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> précédent pour le frame en cours.</summary>
      <exception cref="T:System.InvalidOperationException">Il n’existe pas d’<see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> antérieur pour le frame actuel.</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.ToString">
      <summary>Crée et retourne la représentation de chaîne de l'objet d'autorisation en cours.</summary>
      <returns>Représentation de chaîne de l'objet d'autorisation en cours.</returns>
    </member>
    <member name="M:System.Security.CodeAccessPermission.ToXml">
      <summary>En cas de substitution dans une classe dérivée, crée un encodage XML de l’objet de sécurité et de son état actuel.</summary>
      <returns>Encodage XML de l’objet de sécurité, y compris les informations d’état éventuelles.</returns>
    </member>
    <member name="M:System.Security.CodeAccessPermission.Union(System.Security.IPermission)">
      <summary>Lors de son remplacement dans une classe dérivée, crée une autorisation qui est l’union de l’autorisation actuelle et de l’autorisation spécifiée.</summary>
      <param name="other">Autorisation à combiner avec l’autorisation actuelle. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>Nouvelle autorisation qui représente l’union de l’autorisation actuelle et de l’autorisation spécifiée.</returns>
      <exception cref="T:System.NotSupportedException">Le paramètre <paramref name="other" /> n'est pas <see langword="null" />. Cette méthode est uniquement prise en charge à ce niveau lorsqu'elle est passée <see langword="null" />.</exception>
    </member>
    <member name="T:System.Security.HostProtectionException">
      <summary>Exception levée lorsqu'une ressource hôte refusée est détectée.</summary>
    </member>
    <member name="M:System.Security.HostProtectionException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.HostProtectionException" /> avec des valeurs par défaut.</summary>
    </member>
    <member name="M:System.Security.HostProtectionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.HostProtectionException" /> avec les informations de sérialisation et le contexte de diffusion en continu fournis.</summary>
      <param name="info">Objet qui contient les données sérialisées de l'objet.</param>
      <param name="context">Informations contextuelles sur la source ou la destination.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.HostProtectionException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.HostProtectionException" /> avec un message d'erreur spécifié.</summary>
      <param name="message">Message décrivant l'erreur.</param>
    </member>
    <member name="M:System.Security.HostProtectionException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.HostProtectionException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message d'erreur qui explique la raison de l'exception.</param>
      <param name="e">Exception ayant provoqué l'exception actuelle. Si le paramètre <c>innerException</c> n’est pas <see langword="null" />, l’exception actuelle est levée dans un bloc <see langword="catch" /> qui gère l’exception interne.</param>
    </member>
    <member name="M:System.Security.HostProtectionException.#ctor(System.String,System.Security.Permissions.HostProtectionResource,System.Security.Permissions.HostProtectionResource)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.HostProtectionException" /> avec un message d'erreur spécifié, les ressources hôte protégées et les ressources hôte qui ont causé la levée de l'exception.</summary>
      <param name="message">Message d'erreur qui explique la raison de l'exception.</param>
      <param name="protectedResources">Combinaison de bits de valeurs d'énumération qui spécifie les ressources hôtes inaccessibles au code partiellement fiable.</param>
      <param name="demandedResources">Combinaison de bits de valeurs d'énumération qui spécifie les ressources hôtes demandées.</param>
    </member>
    <member name="P:System.Security.HostProtectionException.DemandedResources">
      <summary>Obtient ou définit les ressources de protection hôte demandées qui ont provoqué la levée de l'exception.</summary>
      <returns>Combinaison d'opérations de bits des valeurs <see cref="T:System.Security.Permissions.HostProtectionResource" /> identifiant les ressources de protection provoquant la levée de l'exception. La valeur par défaut est <see cref="F:System.Security.Permissions.HostProtectionResource.None" />.</returns>
    </member>
    <member name="P:System.Security.HostProtectionException.ProtectedResources">
      <summary>Obtient ou définit les ressources de protection hôte qui sont inaccessibles au code de niveau de confiance partiel.</summary>
      <returns>Combinaison d'opérations de bits des valeurs <see cref="T:System.Security.Permissions.HostProtectionResource" /> identifiant les catégories de protection hôte inaccessibles. La valeur par défaut est <see cref="F:System.Security.Permissions.HostProtectionResource.None" />.</returns>
    </member>
    <member name="M:System.Security.HostProtectionException.ToString">
      <summary>Retourne une représentation sous forme de chaîne de l'exception de protection hôte en cours.</summary>
      <returns>Représentation sous forme de chaîne du <see cref="T:System.Security.HostProtectionException" /> actuel.</returns>
    </member>
    <member name="T:System.Security.HostSecurityManager">
      <summary>Autorise le contrôle et la personnalisation du comportement de sécurité pour les domaines d'application.</summary>
    </member>
    <member name="M:System.Security.HostSecurityManager.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.HostSecurityManager" />.</summary>
    </member>
    <member name="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)">
      <summary>Détermine si une application doit être exécutée.</summary>
      <param name="applicationEvidence">Preuve pour l'application à activer.</param>
      <param name="activatorEvidence">Éventuellement, preuve pour le domaine d'application d'activation.</param>
      <param name="context">Contexte d'approbation.</param>
      <returns>Objet qui contient des informations d'approbation sur l'application.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="applicationEvidence" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Un objet <see cref="T:System.Runtime.Hosting.ActivationArguments" /> est introuvable dans la preuve de l'application.  
ou 
La propriété <see cref="P:System.Runtime.Hosting.ActivationArguments.ActivationContext" /> dans les arguments d'activation est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Le jeu d'autorisations <see cref="T:System.Security.Policy.ApplicationTrust" /> ne contient pas le jeu de demandes minimum spécifié par <see cref="T:System.ActivationContext" />.</exception>
    </member>
    <member name="P:System.Security.HostSecurityManager.DomainPolicy">
      <summary>En cas de remplacement dans une classe dérivée, récupère la stratégie de sécurité du domaine d’application actuel.</summary>
      <returns>La stratégie de sécurité du domaine d’application actuel. La valeur par défaut est <see langword="null" />.</returns>
      <exception cref="T:System.NotSupportedException">Cette méthode utilise la stratégie de sécurité d’accès du code (CAS), qui est obsolète dans .NET Framework 4. Pour activer la stratégie de sécurité d’accès du code (CAS) pour la compatibilité avec les versions antérieures de .NET Framework, utilisez l’élément &lt;legacyCasPolicy&gt;.</exception>
    </member>
    <member name="P:System.Security.HostSecurityManager.Flags">
      <summary>Obtient l'indicateur représentant les composants de stratégie de sécurité pris en considération par l'hôte.</summary>
      <returns>Une des valeurs d'énumération qui spécifie les composants de stratégie de sécurité. La valeur par défaut est <see cref="F:System.Security.HostSecurityManagerOptions.AllFlags" />.</returns>
    </member>
    <member name="M:System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)">
      <summary>Demande un type de preuve spécifique pour le domaine d'application.</summary>
      <param name="evidenceType">Type de preuve.</param>
      <returns>Preuve de domaine d'application demandée.</returns>
    </member>
    <member name="M:System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)">
      <summary>Demande un type de preuve spécifique pour l'assembly.</summary>
      <param name="evidenceType">Type de preuve.</param>
      <param name="assembly">Assembly cible.</param>
      <returns>Preuve d'assembly demandée.</returns>
    </member>
    <member name="M:System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes">
      <summary>Détermine les types de preuves que l'hôte peut fournir pour le domaine d'application, en cas de besoin.</summary>
      <returns>Tableau de types de preuves.</returns>
    </member>
    <member name="M:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)">
      <summary>Détermine les types de preuves que l'hôte peut fournir pour l'assembly, en cas de besoin.</summary>
      <param name="assembly">Assembly cible.</param>
      <returns>Tableau de types de preuves.</returns>
    </member>
    <member name="M:System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)">
      <summary>Fournit la preuve du domaine d'application pour un assembly en cours de chargement.</summary>
      <param name="inputEvidence">Preuve supplémentaire à ajouter aux preuves de <see cref="T:System.AppDomain" />.</param>
      <returns>Preuve à utiliser pour <see cref="T:System.AppDomain" />.</returns>
    </member>
    <member name="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)">
      <summary>Fournit la preuve de l'assembly pour un assembly en cours de chargement.</summary>
      <param name="loadedAssembly">Assembly chargé.</param>
      <param name="inputEvidence">Preuve supplémentaire à ajouter aux preuves d'assembly.</param>
      <returns>Preuve à utiliser pour l'assembly.</returns>
    </member>
    <member name="M:System.Security.HostSecurityManager.ResolvePolicy(System.Security.Policy.Evidence)">
      <summary>Détermine les autorisations à accorder au code en fonction de la preuve spécifiée.</summary>
      <param name="evidence">Ensemble de preuves utilisé pour évaluer la stratégie.</param>
      <returns>Jeu d'autorisations qui peuvent être accordées par le système de sécurité.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="evidence" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="T:System.Security.HostSecurityManagerOptions">
      <summary>Spécifie les composants de stratégie de sécurité que le gestionnaire de sécurité hôte doit utiliser.</summary>
    </member>
    <member name="F:System.Security.HostSecurityManagerOptions.AllFlags">
      <summary>Utilisez tous les composants de stratégie de sécurité.</summary>
    </member>
    <member name="F:System.Security.HostSecurityManagerOptions.HostAppDomainEvidence">
      <summary>Utilisez la preuve du domaine d'application.</summary>
    </member>
    <member name="F:System.Security.HostSecurityManagerOptions.HostAssemblyEvidence">
      <summary>Utilisez la preuve de l'assembly.</summary>
    </member>
    <member name="F:System.Security.HostSecurityManagerOptions.HostDetermineApplicationTrust">
      <summary>Routez d'abord les appels à la méthode <see cref="M:System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)" /> vers la méthode <see cref="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)" />.</summary>
    </member>
    <member name="F:System.Security.HostSecurityManagerOptions.HostPolicyLevel">
      <summary>Utilisez le niveau de stratégie spécifié dans la propriété <see cref="P:System.Security.HostSecurityManager.DomainPolicy" />.</summary>
    </member>
    <member name="F:System.Security.HostSecurityManagerOptions.HostResolvePolicy">
      <summary>Utilisez la méthode <see cref="M:System.Security.HostSecurityManager.ResolvePolicy(System.Security.Policy.Evidence)" /> pour résoudre la preuve de l'application.</summary>
    </member>
    <member name="F:System.Security.HostSecurityManagerOptions.None">
      <summary>N'utilisez aucun des composants de stratégie de sécurité.</summary>
    </member>
    <member name="T:System.Security.IEvidenceFactory">
      <summary>Obtient le <see cref="T:System.Security.Policy.Evidence" /> d'un objet.</summary>
    </member>
    <member name="P:System.Security.IEvidenceFactory.Evidence">
      <summary>Obtient <see cref="T:System.Security.Policy.Evidence" />, qui vérifie l'identité de l'objet en cours.</summary>
      <returns>
        <see cref="T:System.Security.Policy.Evidence" /> de l'identité de l'objet en cours.</returns>
    </member>
    <member name="T:System.Security.ISecurityPolicyEncodable">
      <summary>Prend en charge les méthodes qui convertissent l'état de l'objet d'autorisation vers et à partir d'une représentation XML de l'élément.</summary>
    </member>
    <member name="M:System.Security.ISecurityPolicyEncodable.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>Reconstruit un objet de sécurité avec un état spécifié à partir d’un encodage XML.</summary>
      <param name="e">Encodage XML à utiliser pour reconstruire l’objet de sécurité.</param>
      <param name="level">Le contexte relatif au niveau de stratégie pour résoudre les références aux jeux d'autorisations dotés d'un nom.</param>
    </member>
    <member name="M:System.Security.ISecurityPolicyEncodable.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>Crée un codage XML de l’objet de sécurité et de son état actuel.</summary>
      <param name="level">Le contexte relatif au niveau de stratégie pour résoudre les références aux jeux d'autorisations dotés d'un nom.</param>
      <returns>L'élément racine de la représentation XML de l'objet de stratégie.</returns>
    </member>
    <member name="T:System.Security.NamedPermissionSet">
      <summary>Définit un jeu d'autorisations auquel sont associés un nom et une description. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.NamedPermissionSet.#ctor(System.Security.NamedPermissionSet)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.NamedPermissionSet" /> à partir d'un autre jeu d'autorisations nommé.</summary>
      <param name="permSet">Jeu d'autorisations nommé à partir duquel créer la nouvelle instance.</param>
    </member>
    <member name="M:System.Security.NamedPermissionSet.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.NamedPermissionSet" /> avec le nom spécifié.</summary>
      <param name="name">Nom du nouveau jeu d'autorisations nommé.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="name" /> est <see langword="null" /> ou une chaîne vide ("").</exception>
    </member>
    <member name="M:System.Security.NamedPermissionSet.#ctor(System.String,System.Security.Permissions.PermissionState)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.NamedPermissionSet" /> avec le nom spécifié, dans un état sans restriction ou complètement restreint.</summary>
      <param name="name">Nom du nouveau jeu d'autorisations nommé.</param>
      <param name="state">Une des valeurs de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="name" /> est <see langword="null" /> ou une chaîne vide ("").</exception>
    </member>
    <member name="M:System.Security.NamedPermissionSet.#ctor(System.String,System.Security.PermissionSet)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.NamedPermissionSet" /> avec le nom spécifié à partir d'un jeu d'autorisations.</summary>
      <param name="name">Nom du jeu d'autorisations nommé.</param>
      <param name="permSet">Jeu d'autorisations d'où provient la valeur du nouveau jeu d'autorisations nommé.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="name" /> est <see langword="null" /> ou une chaîne vide ("").</exception>
    </member>
    <member name="M:System.Security.NamedPermissionSet.Copy">
      <summary>Crée une copie de jeu d'autorisations à partir d'un jeu d'autorisations nommé.</summary>
      <returns>Jeu d'autorisations qui est une copie des autorisations contenues dans le jeu d'autorisations nommé.</returns>
    </member>
    <member name="M:System.Security.NamedPermissionSet.Copy(System.String)">
      <summary>Crée une copie du jeu d'autorisations nommé avec les mêmes autorisations mais un nom différent.</summary>
      <param name="name">Nom du nouveau jeu d'autorisations nommé.</param>
      <returns>Copie du jeu d'autorisations nommé avec un nouveau nom.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="name" /> est <see langword="null" /> ou une chaîne vide ("").</exception>
    </member>
    <member name="P:System.Security.NamedPermissionSet.Description">
      <summary>Obtient ou définit le texte de description du jeu d'autorisations nommé en cours.</summary>
      <returns>Texte décrivant le jeu d'autorisations nommé.</returns>
    </member>
    <member name="M:System.Security.NamedPermissionSet.Equals(System.Object)">
      <summary>Détermine si l’objet <see cref="T:System.Security.NamedPermissionSet" /> spécifié est égal au <see cref="T:System.Security.NamedPermissionSet" /> actuel.</summary>
      <param name="o">Objet <see cref="T:System.Security.NamedPermissionSet" /> à comparer au <see cref="T:System.Security.NamedPermissionSet" /> actuel.</param>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Security.NamedPermissionSet" /> spécifié est égal à l’objet <see cref="T:System.Security.NamedPermissionSet" /> actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.NamedPermissionSet.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruit un jeu d'autorisations nommé avec un état spécifié à partir d'un encodage XML.</summary>
      <param name="et">Élément de sécurité contenant la représentation XML du jeu d'autorisations nommé.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="et" /> n'est pas une représentation valide d'un jeu d'autorisations nommé.</exception>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="et" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.NamedPermissionSet.GetHashCode">
      <summary>Obtient un code de hachage pour l’objet <see cref="T:System.Security.NamedPermissionSet" /> qui peut être utilisé dans des structures de données et des algorithmes de hachage, comme une table de hachage.</summary>
      <returns>Code de hachage pour l’objet <see cref="T:System.Security.NamedPermissionSet" /> actuel.</returns>
    </member>
    <member name="P:System.Security.NamedPermissionSet.Name">
      <summary>Obtient ou définit le nom du jeu d'autorisations nommé en cours.</summary>
      <returns>Nom du jeu d'autorisations nommé.</returns>
      <exception cref="T:System.ArgumentException">Le nom est <see langword="null" /> ou une chaîne vide ("").</exception>
    </member>
    <member name="M:System.Security.NamedPermissionSet.ToXml">
      <summary>Crée une description d'élément XML pour le jeu d'autorisations nommé.</summary>
      <returns>Représentation XML du jeu d'autorisations nommé.</returns>
    </member>
    <member name="T:System.Security.Permissions.DataProtectionPermission">
      <summary>Contrôle la possibilité d'accéder à des données chiffrées et à la mémoire. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.#ctor(System.Security.Permissions.DataProtectionPermissionFlags)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.DataProtectionPermission" /> avec les indicateurs d'autorisation spécifiés.</summary>
      <param name="flag">Combinaison d'opérations de bits des valeurs <see cref="T:System.Security.Permissions.DataProtectionPermissionFlags" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="flag" /> n'est pas une combinaison de valeurs <see cref="T:System.Security.Permissions.DataProtectionPermissionFlags" /> valide.</exception>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.DataProtectionPermission" /> avec l'état d'autorisation spécifié.</summary>
      <param name="state">Une des valeurs de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> n’est pas une valeur de <see cref="T:System.Security.Permissions.PermissionState" /> valide.</exception>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.Copy">
      <summary>Crée et retourne une copie identique de l’autorisation actuelle.</summary>
      <returns>Copie de l’autorisation actuelle.</returns>
    </member>
    <member name="P:System.Security.Permissions.DataProtectionPermission.Flags">
      <summary>Obtient ou définit les indicateurs de protection des données et de la mémoire.</summary>
      <returns>Combinaison d'opérations de bits des valeurs <see cref="T:System.Security.Permissions.DataProtectionPermissionFlags" />.</returns>
      <exception cref="T:System.ArgumentException">La valeur spécifiée n'est pas une combinaison valide de valeurs <see cref="T:System.Security.Permissions.DataProtectionPermissionFlags" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruit une autorisation avec un état spécifique à partir d'un encodage XML.</summary>
      <param name="securityElement">
        <see cref="T:System.Security.SecurityElement" /> contenant l'encodage XML utilisé pour reconstruire l'autorisation.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" /> n'est pas un élément d'autorisation valide.  
ou 
Le numéro de version de <paramref name="securityElement" /> n'est pas pris en charge.</exception>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.Intersect(System.Security.IPermission)">
      <summary>Crée et retourne une autorisation qui constitue l’intersection entre l’autorisation actuelle et l’autorisation spécifiée.</summary>
      <param name="target">Autorisation à croiser avec l’autorisation actuelle. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>Nouvelle autorisation qui représente l’intersection entre l’autorisation actuelle et l’autorisation spécifiée. Cette nouvelle autorisation est <see langword="null" /> si l’intersection est vide.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> n'a pas la valeur <see langword="null" /> et ne spécifie pas d'autorisation de même type que celui de l'autorisation en cours.</exception>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Détermine si l’autorisation actuelle est un sous-ensemble de l’autorisation spécifiée.</summary>
      <param name="target">Autorisation à tester pour la relation de sous-ensemble. Cette autorisation doit être du même type que l’autorisation actuelle.</param>
      <returns>
        <see langword="true" /> si l’autorisation actuelle est un sous-ensemble de l’autorisation spécifiée ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> n'a pas la valeur <see langword="null" /> et ne spécifie pas d'autorisation de même type que celui de l'autorisation en cours.</exception>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.IsUnrestricted">
      <summary>Retourne une valeur qui indique si l’autorisation actuelle est illimitée.</summary>
      <returns>
        <see langword="true" /> si l’autorisation actuelle est illimitée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.ToXml">
      <summary>Crée un encodage XML de l’autorisation et de son état actuel.</summary>
      <returns>Encodage XML de l’autorisation, informations d’état comprises.</returns>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.Union(System.Security.IPermission)">
      <summary>Crée une autorisation qui est l’union de l’autorisation actuelle et de l’autorisation spécifiée.</summary>
      <param name="target">Autorisation à combiner avec l’autorisation actuelle. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>Nouvelle autorisation qui représente l’union de l’autorisation actuelle et de l’autorisation spécifiée.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> n'a pas la valeur <see langword="null" /> et ne spécifie pas d'autorisation de même type que celui de l'autorisation en cours.</exception>
    </member>
    <member name="T:System.Security.Permissions.DataProtectionPermissionAttribute">
      <summary>Permet d’appliquer les actions de sécurité de <see cref="T:System.Security.Permissions.DataProtectionPermission" /> au code à l’aide de la sécurité déclarative. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.DataProtectionPermissionAttribute" /> avec le <see cref="T:System.Security.Permissions.SecurityAction" /> spécifié.</summary>
      <param name="action">Une des valeurs de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermissionAttribute.CreatePermission">
      <summary>Crée et retourne un nouveau <see cref="T:System.Security.Permissions.DataProtectionPermission" />.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.DataProtectionPermission" /> qui correspond à l'attribut.</returns>
    </member>
    <member name="P:System.Security.Permissions.DataProtectionPermissionAttribute.Flags">
      <summary>Obtient ou définit les autorisations relatives à la protection de données.</summary>
      <returns>Combinaison d'opérations de bits des valeurs <see cref="T:System.Security.Permissions.DataProtectionPermissionFlags" />. La valeur par défaut est <see cref="F:System.Security.Permissions.DataProtectionPermissionFlags.NoFlags" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.DataProtectionPermissionAttribute.ProtectData">
      <summary>Obtient ou définit une valeur qui indique si les données peuvent être chiffrées à l'aide de la classe <see cref="T:System.Security.Cryptography.ProtectedData" />.</summary>
      <returns>
        <see langword="true" /> si les données peuvent être chiffrées ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.DataProtectionPermissionAttribute.ProtectMemory">
      <summary>Obtient ou définit une valeur qui indique si la mémoire peut être chiffrée à l'aide de la classe <see cref="T:System.Security.Cryptography.ProtectedMemory" />.</summary>
      <returns>
        <see langword="true" /> si la mémoire peut être chiffrée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.DataProtectionPermissionAttribute.UnprotectData">
      <summary>Obtient ou définit une valeur qui indique si les données peuvent être déchiffrées à l'aide de la classe <see cref="T:System.Security.Cryptography.ProtectedData" />.</summary>
      <returns>
        <see langword="true" /> si les données peuvent être déchiffrées ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.DataProtectionPermissionAttribute.UnprotectMemory">
      <summary>Obtient ou définit une valeur qui indique si la mémoire peut être déchiffrée à l'aide de la classe <see cref="T:System.Security.Cryptography.ProtectedMemory" />.</summary>
      <returns>
        <see langword="true" /> si la mémoire peut être déchiffrée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Security.Permissions.DataProtectionPermissionFlags">
      <summary>Spécifie les autorisations d'accès pour le chiffrement des données et de la mémoire.</summary>
    </member>
    <member name="F:System.Security.Permissions.DataProtectionPermissionFlags.AllFlags">
      <summary>Possibilité de chiffrer et de déchiffrer des données et de la mémoire.</summary>
    </member>
    <member name="F:System.Security.Permissions.DataProtectionPermissionFlags.NoFlags">
      <summary>Aucune possibilité de protection.</summary>
    </member>
    <member name="F:System.Security.Permissions.DataProtectionPermissionFlags.ProtectData">
      <summary>Possibilité de chiffrer des données.</summary>
    </member>
    <member name="F:System.Security.Permissions.DataProtectionPermissionFlags.ProtectMemory">
      <summary>Possibilité de chiffrer la mémoire.</summary>
    </member>
    <member name="F:System.Security.Permissions.DataProtectionPermissionFlags.UnprotectData">
      <summary>Possibilité de déchiffrer des données.</summary>
    </member>
    <member name="F:System.Security.Permissions.DataProtectionPermissionFlags.UnprotectMemory">
      <summary>Possibilité de déchiffrer la mémoire.</summary>
    </member>
    <member name="T:System.Security.Permissions.EnvironmentPermission">
      <summary>Contrôle l'accès aux variables du système et de l'environnement utilisateur. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.#ctor(System.Security.Permissions.EnvironmentPermissionAccess,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.EnvironmentPermission" /> avec l'accès spécifié aux variables d'environnement définies.</summary>
      <param name="flag">Une des valeurs de <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" />.</param>
      <param name="pathList">Une liste des variables d'environnement (séparées par des points-virgules) à laquelle l'accès est accordé.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="pathList" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="flag" /> n’est pas une valeur valide d’<see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.EnvironmentPermission" /> avec l'état d'autorisation spécifié (restreint ou sans restriction).</summary>
      <param name="state">Une des valeurs de l'objet <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="state" /> n’est pas une valeur valide d’<see cref="T:System.Security.Permissions.PermissionState" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.AddPathList(System.Security.Permissions.EnvironmentPermissionAccess,System.String)">
      <summary>Ajoute, pour les variables d’environnement spécifiées, l’accès à l’état existant de l’autorisation.</summary>
      <param name="flag">Une des valeurs de l'objet <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" />.</param>
      <param name="pathList">Liste des variables d’environnement (séparées par des points-virgules).</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="pathList" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="flag" /> n’est pas une valeur valide d’<see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.Copy">
      <summary>Crée et retourne une copie identique de l’autorisation actuelle.</summary>
      <returns>Copie de l’autorisation actuelle.</returns>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruit une autorisation avec un état spécifié à partir d’un encodage XML.</summary>
      <param name="esd">Encodage XML à utiliser pour reconstruire l’autorisation.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="esd" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="esd" /> n’est pas un élément d’autorisation valide.  

ou - 
Le numéro de version du paramètre <paramref name="esd" /> n’est pas valide.</exception>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.GetPathList(System.Security.Permissions.EnvironmentPermissionAccess)">
      <summary>Obtient toutes les variables d'environnement avec la valeur <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> spécifiée.</summary>
      <param name="flag">Une des valeurs de <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> représentant un seul type d'accès aux variables d'environnement.</param>
      <returns>Liste de variables d'environnement (séparées par des points-virgules) pour l'indicateur sélectionné.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="flag" /> n’est pas une valeur valide de <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" />.  
ou 
 <paramref name="flag" /> a la valeur <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.AllAccess" />, qui représente plusieurs types d'accès aux variables d'environnement, ou <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.NoAccess" />, qui ne représente aucun type d'accès aux variables d'environnement.</exception>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.Intersect(System.Security.IPermission)">
      <summary>Crée et retourne une autorisation qui constitue l’intersection entre l’autorisation actuelle et l’autorisation spécifiée.</summary>
      <param name="target">Autorisation à croiser avec l’autorisation actuelle. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>Nouvelle autorisation qui représente l’intersection entre l’autorisation actuelle et l’autorisation spécifiée. Cette nouvelle autorisation est <see langword="null" /> si l’intersection est vide.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="target" /> n’a pas la valeur <see langword="null" /> et n’est pas du même type que l’autorisation actuelle.</exception>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Détermine si l’autorisation actuelle est un sous-ensemble de l’autorisation spécifiée.</summary>
      <param name="target">Autorisation qui doit être testée pour la relation de sous-ensemble. Cette autorisation doit être du même type que l’autorisation actuelle.</param>
      <returns>
        <see langword="true" /> si l’autorisation actuelle est un sous-ensemble de l’autorisation spécifiée ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="target" /> n’a pas la valeur <see langword="null" /> et n’est pas du même type que l’autorisation actuelle.</exception>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.IsUnrestricted">
      <summary>Retourne une valeur qui indique si l’autorisation actuelle est illimitée.</summary>
      <returns>
        <see langword="true" /> si l’autorisation actuelle est illimitée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.SetPathList(System.Security.Permissions.EnvironmentPermissionAccess,System.String)">
      <summary>Définit l'accès spécifié aux variables d'environnement définies par rapport à l'état existant de l'autorisation.</summary>
      <param name="flag">Une des valeurs de <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" />.</param>
      <param name="pathList">Liste des variables d’environnement (séparées par des points-virgules).</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="pathList" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="flag" /> n’est pas une valeur valide d’<see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.ToXml">
      <summary>Crée un encodage XML de l’autorisation et de son état actuel.</summary>
      <returns>Codage XML de l’autorisation, y compris les informations d’état éventuelles.</returns>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.Union(System.Security.IPermission)">
      <summary>Crée une autorisation qui est l’union de l’autorisation actuelle et de l’autorisation spécifiée.</summary>
      <param name="other">Autorisation à combiner avec l’autorisation actuelle. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>Nouvelle autorisation qui représente l’union de l’autorisation actuelle et de l’autorisation spécifiée.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="other" /> n’a pas la valeur <see langword="null" /> et n’est pas du même type que l’autorisation actuelle.</exception>
    </member>
    <member name="T:System.Security.Permissions.EnvironmentPermissionAccess">
      <summary>Spécifie l'accès aux variables d'environnement.</summary>
    </member>
    <member name="F:System.Security.Permissions.EnvironmentPermissionAccess.AllAccess">
      <summary>Accès <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /> et <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Write" /> aux variables d'environnement. <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.AllAccess" /> représente plusieurs valeurs de <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> et lève une exception <see cref="T:System.ArgumentException" /> lorsqu'il est utilisé en tant que paramètre <paramref name="flag" /> pour la méthode <see cref="M:System.Security.Permissions.EnvironmentPermission.GetPathList(System.Security.Permissions.EnvironmentPermissionAccess)" />, qui attend une seule valeur.</summary>
    </member>
    <member name="F:System.Security.Permissions.EnvironmentPermissionAccess.NoAccess">
      <summary>Aucun accès aux variables d'environnement. <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.NoAccess" /> ne représente aucune valeur valide de <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> et lève une exception <see cref="T:System.ArgumentException" /> lorsqu'il est utilisé en tant que paramètre pour <see cref="M:System.Security.Permissions.EnvironmentPermission.GetPathList(System.Security.Permissions.EnvironmentPermissionAccess)" />, qui attend une seule valeur.</summary>
    </member>
    <member name="F:System.Security.Permissions.EnvironmentPermissionAccess.Read">
      <summary>Seul l'accès en lecture aux variables d'environnement est spécifié. La modification, la suppression et la création de variables d'environnement ne sont pas comprises dans ce niveau d'accès.</summary>
    </member>
    <member name="F:System.Security.Permissions.EnvironmentPermissionAccess.Write">
      <summary>Seul l'accès en écriture aux variables d'environnement est spécifié. L'accès en écriture inclut la création et la suppression de variables d'environnement ainsi que la modification de valeurs existantes. La lecture de variables d'environnement n'est pas comprise dans ce niveau d'accès.</summary>
    </member>
    <member name="T:System.Security.Permissions.EnvironmentPermissionAttribute">
      <summary>Permet d’appliquer les actions de sécurité de <see cref="T:System.Security.Permissions.EnvironmentPermission" /> au code à l’aide de la sécurité déclarative. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.EnvironmentPermissionAttribute" /> avec le <see cref="T:System.Security.Permissions.SecurityAction" /> spécifié.</summary>
      <param name="action">Une des valeurs de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="action" /> n’est pas une valeur valide d’<see cref="T:System.Security.Permissions.SecurityAction" />.</exception>
    </member>
    <member name="P:System.Security.Permissions.EnvironmentPermissionAttribute.All">
      <summary>Définit l'accès complet pour les variables d'environnement spécifiées par la valeur de la chaîne.</summary>
      <returns>Liste de variables d'environnement pour l'accès complet.</returns>
      <exception cref="T:System.NotSupportedException">La méthode get n'est pas prise en charge pour cette propriété.</exception>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermissionAttribute.CreatePermission">
      <summary>Crée et retourne un nouveau <see cref="T:System.Security.Permissions.EnvironmentPermission" />.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.EnvironmentPermission" /> qui correspond à cet attribut.</returns>
    </member>
    <member name="P:System.Security.Permissions.EnvironmentPermissionAttribute.Read">
      <summary>Obtient ou définit l'accès en lecture pour les variables d'environnement spécifiées par la valeur de chaîne.</summary>
      <returns>Liste de variables d'environnement pour l'accès en lecture.</returns>
    </member>
    <member name="P:System.Security.Permissions.EnvironmentPermissionAttribute.Write">
      <summary>Obtient ou définit l'accès en écriture pour les variables d'environnement spécifiées par la valeur de chaîne.</summary>
      <returns>Liste de variables d'environnement pour l'accès en écriture.</returns>
    </member>
    <member name="T:System.Security.Permissions.FileDialogPermission">
      <summary>Contrôle la capacité à accéder aux fichiers ou aux dossiers par l’intermédiaire d’une boîte de dialogue Fichier. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.#ctor(System.Security.Permissions.FileDialogPermissionAccess)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.FileDialogPermission" /> avec l’accès spécifié.</summary>
      <param name="access">Combinaison d'opérations de bits des valeurs <see cref="T:System.Security.Permissions.FileDialogPermissionAccess" />.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="access" /> n'est pas une combinaison valide des valeurs <see cref="T:System.Security.Permissions.FileDialogPermissionAccess" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.FileDialogPermission" /> avec une autorisation d’accès restreinte ou non restreinte, selon ce qui est défini.</summary>
      <param name="state">Une des valeurs <see cref="T:System.Security.Permissions.PermissionState" /> (<see langword="Unrestricted" /> ou <see langword="None" />).</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="state" /> n’est pas une valeur valide d’<see cref="T:System.Security.Permissions.PermissionState" />.</exception>
    </member>
    <member name="P:System.Security.Permissions.FileDialogPermission.Access">
      <summary>Obtient ou définit l’accès autorisé aux fichiers.</summary>
      <returns>Accès autorisé aux fichiers.</returns>
      <exception cref="T:System.ArgumentException">Une tentative est effectuée pour définir le paramètre <paramref name="access" /> sur une valeur qui n’est pas une combinaison valide de valeurs <see cref="T:System.Security.Permissions.FileDialogPermissionAccess" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.Copy">
      <summary>Crée et retourne une copie identique de l’autorisation actuelle.</summary>
      <returns>Copie de l’autorisation actuelle.</returns>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruit une autorisation avec un état spécifié à partir d’un encodage XML.</summary>
      <param name="esd">Encodage XML utilisé pour reconstruire l’autorisation.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="esd" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="esd" /> n’est pas un élément d’autorisation valide.  
ou 
Le numéro de version du paramètre <paramref name="esd" /> n’est pas pris en charge.</exception>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.Intersect(System.Security.IPermission)">
      <summary>Crée et retourne une autorisation qui constitue l’intersection entre l’autorisation actuelle et l’autorisation spécifiée.</summary>
      <param name="target">Autorisation à croiser avec l’autorisation actuelle. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>Nouvelle autorisation qui représente l’intersection entre l’autorisation actuelle et l’autorisation spécifiée. Cette nouvelle autorisation est <see langword="null" /> si l’intersection est vide.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="target" /> n’a pas la valeur <see langword="null" /> et n’est pas du même type que l’autorisation actuelle.</exception>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Détermine si l’autorisation actuelle est un sous-ensemble de l’autorisation spécifiée.</summary>
      <param name="target">Autorisation qui doit être testée pour la relation de sous-ensemble. Cette autorisation doit être du même type que l’autorisation actuelle.</param>
      <returns>
        <see langword="true" /> si l’autorisation actuelle est un sous-ensemble de l’autorisation spécifiée ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="target" /> n’a pas la valeur <see langword="null" /> et n’est pas du même type que l’autorisation actuelle.</exception>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.IsUnrestricted">
      <summary>Retourne une valeur qui indique si l’autorisation actuelle est illimitée.</summary>
      <returns>
        <see langword="true" /> si l’autorisation actuelle est illimitée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.ToXml">
      <summary>Crée un encodage XML de l’autorisation et de son état actuel.</summary>
      <returns>Encodage XML de l’autorisation, informations d’état comprises.</returns>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.Union(System.Security.IPermission)">
      <summary>Crée une autorisation qui est l’union de l’autorisation actuelle et de l’autorisation spécifiée.</summary>
      <param name="target">Autorisation à combiner avec l’autorisation actuelle. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>Nouvelle autorisation qui représente l’union de l’autorisation actuelle et de l’autorisation spécifiée.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="target" /> n’a pas la valeur <see langword="null" /> et n’est pas du même type que l’autorisation actuelle.</exception>
    </member>
    <member name="T:System.Security.Permissions.FileDialogPermissionAccess">
      <summary>Spécifie le type d’accès aux fichiers autorisé via les boîtes de dialogue Fichier.</summary>
    </member>
    <member name="F:System.Security.Permissions.FileDialogPermissionAccess.None">
      <summary>Aucun accès aux fichiers via les boîtes de dialogue Fichier.</summary>
    </member>
    <member name="F:System.Security.Permissions.FileDialogPermissionAccess.Open">
      <summary>Ouverture possible des fichiers via les boîtes de dialogue Fichier.</summary>
    </member>
    <member name="F:System.Security.Permissions.FileDialogPermissionAccess.OpenSave">
      <summary>Ouverture et enregistrement possibles des fichiers via les boîtes de dialogue Fichier.</summary>
    </member>
    <member name="F:System.Security.Permissions.FileDialogPermissionAccess.Save">
      <summary>Enregistrement possible des fichiers via les boîtes de dialogue Fichier.</summary>
    </member>
    <member name="T:System.Security.Permissions.FileDialogPermissionAttribute">
      <summary>Permet d’appliquer les actions de sécurité de <see cref="T:System.Security.Permissions.FileDialogPermission" /> au code à l’aide de la sécurité déclarative. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.FileDialogPermissionAttribute" /> avec le <see cref="T:System.Security.Permissions.SecurityAction" /> spécifié.</summary>
      <param name="action">Une des valeurs de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermissionAttribute.CreatePermission">
      <summary>Crée et retourne un nouveau <see cref="T:System.Security.Permissions.FileDialogPermission" />.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.FileDialogPermission" /> qui correspond à cet attribut.</returns>
    </member>
    <member name="P:System.Security.Permissions.FileDialogPermissionAttribute.Open">
      <summary>Obtient ou définit une valeur indiquant si l'autorisation d'ouverture des fichiers par l'intermédiaire de la boîte de dialogue Fichier est déclarée.</summary>
      <returns>
        <see langword="true" /> si l'autorisation d'ouverture des fichiers par l'intermédiaire de la boîte de dialogue Fichier est déclarée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.FileDialogPermissionAttribute.Save">
      <summary>Obtient ou définit une valeur indiquant si l'autorisation d'enregistrer des fichiers par l'intermédiaire de la boîte de dialogue Fichier est déclarée.</summary>
      <returns>
        <see langword="true" /> si l'autorisation d'enregistrer des fichiers par l'intermédiaire de la boîte de dialogue Fichier est déclarée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Security.Permissions.FileIOPermission">
      <summary>Contrôle la possibilité d’accéder aux fichiers et dossiers. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.FileIOPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.FileIOPermission" /> avec l’accès spécifié au fichier ou répertoire désigné et les droits d’accès spécifiés aux informations de contrôle de fichier.</summary>
      <param name="access">Combinaison d'opérations de bits des valeurs d'énumération <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.</param>
      <param name="actions">Combinaison d'opérations de bits des valeurs d'énumération <see cref="T:System.Security.AccessControl.AccessControlActions" />.</param>
      <param name="path">Chemin absolu du fichier ou du répertoire.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="access" /> n’est pas une valeur valide d’<see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.  

ou - 
Le paramètre <paramref name="path" /> n’est pas une chaîne valide.  

ou 
Le paramètre <paramref name="path" /> ne spécifie pas le chemin absolu au fichier ou répertoire.</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.FileIOPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String[])">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.FileIOPermission" /> avec l’accès spécifié aux fichiers et répertoire désignés, et les droits d’accès spécifiés aux informations de contrôle de fichier.</summary>
      <param name="access">Combinaison d'opérations de bits des valeurs d'énumération <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.</param>
      <param name="actions">Combinaison d'opérations de bits des valeurs d'énumération <see cref="T:System.Security.AccessControl.AccessControlActions" />.</param>
      <param name="pathList">Tableau contenant les chemins absolus des fichiers et répertoires.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="access" /> n’est pas une valeur valide d’<see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.  

ou - 
Une entrée dans le tableau <paramref name="pathList" /> n’est pas une chaîne valide.</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.FileIOPermissionAccess,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.FileIOPermission" /> avec l’accès spécifié au fichier ou au répertoire désigné.</summary>
      <param name="access">Combinaison d'opérations de bits des valeurs d'énumération <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.</param>
      <param name="path">Chemin absolu du fichier ou du répertoire.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="access" /> n’est pas une valeur valide d’<see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.  

ou - 
Le paramètre <paramref name="path" /> n’est pas une chaîne valide.  

ou 
Le paramètre <paramref name="path" /> ne spécifie pas le chemin absolu au fichier ou répertoire.</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.FileIOPermissionAccess,System.String[])">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.FileIOPermission" /> avec l’accès spécifié aux fichiers ou répertoires désignés.</summary>
      <param name="access">Combinaison d'opérations de bits des valeurs d'énumération <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.</param>
      <param name="pathList">Tableau contenant les chemins absolus des fichiers et répertoires.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="access" /> n’est pas une valeur valide d’<see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.  

ou - 
Une entrée dans le tableau <paramref name="pathList" /> n’est pas une chaîne valide.</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.FileIOPermission" /> avec une autorisation d’accès totale ou nulle, selon ce qui est défini.</summary>
      <param name="state">Une des valeurs d'énumération <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="state" /> n’est pas une valeur valide d’<see cref="T:System.Security.Permissions.PermissionState" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.AddPathList(System.Security.Permissions.FileIOPermissionAccess,System.String)">
      <summary>Ajoute l’accès pour le fichier ou répertoire spécifié à l’état existant de l’autorisation.</summary>
      <param name="access">Combinaison d'opérations de bits des valeurs <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.</param>
      <param name="path">Chemin d’un fichier ou répertoire.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="access" /> n’est pas une valeur valide d’<see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.  

ou - 
Le paramètre <paramref name="path" /> n’est pas une chaîne valide.  

ou - 
Le paramètre <paramref name="path" /> ne spécifiait pas le chemin d’accès absolu au fichier ou répertoire.</exception>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="path" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Le format du paramètre <paramref name="path" /> est non valide.</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.AddPathList(System.Security.Permissions.FileIOPermissionAccess,System.String[])">
      <summary>Ajoute l’accès aux fichiers et répertoires spécifiés à l’état existant de l’autorisation.</summary>
      <param name="access">Combinaison d'opérations de bits des valeurs <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.</param>
      <param name="pathList">Tableau contenant les chemins absolus des fichiers et répertoires.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="access" /> n’est pas une valeur valide d’<see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.  

ou - 
Une entrée comprise dans le tableau <paramref name="pathList" /> n’est pas valide.</exception>
      <exception cref="T:System.NotSupportedException">Le format d’une entrée comprise dans le tableau <paramref name="pathList" /> n’est pas valide.</exception>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="pathList" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermission.AllFiles">
      <summary>Obtient ou définit l’accès autorisé pour tous les fichiers.</summary>
      <returns>Ensemble d’indicateurs d’E/S de fichier pour tous les fichiers.</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermission.AllLocalFiles">
      <summary>Obtient ou définit l’accès autorisé pour tous les fichiers locaux.</summary>
      <returns>Ensemble d’indicateurs d’E/S de fichier pour tous les fichiers locaux.</returns>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.Copy">
      <summary>Crée et retourne une copie identique de l’autorisation actuelle.</summary>
      <returns>Copie de l’autorisation actuelle.</returns>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.Equals(System.Object)">
      <summary>Détermine si l’objet <see cref="T:System.Security.Permissions.FileIOPermission" /> spécifié est égal au <see cref="T:System.Security.Permissions.FileIOPermission" /> actuel.</summary>
      <param name="o">Objet <see cref="T:System.Security.Permissions.FileIOPermission" /> à comparer au <see cref="T:System.Security.Permissions.FileIOPermission" /> actuel.</param>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Security.Permissions.FileIOPermission" /> spécifié est égal à l’objet <see cref="T:System.Security.Permissions.FileIOPermission" /> actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruit une autorisation avec un état spécifié à partir d’un encodage XML.</summary>
      <param name="esd">Encodage XML utilisé pour reconstruire l’autorisation.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="esd" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="esd" /> n’est pas un élément d’autorisation valide.  

ou - 
Le numéro de version du paramètre <paramref name="esd" /> n’est pas compatible.</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.GetHashCode">
      <summary>Obtient un code de hachage pour l’objet <see cref="T:System.Security.Permissions.FileIOPermission" /> qui peut être utilisé dans des structures de données et des algorithmes de hachage, comme une table de hachage.</summary>
      <returns>Code de hachage pour l’objet <see cref="T:System.Security.Permissions.FileIOPermission" /> actuel.</returns>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.GetPathList(System.Security.Permissions.FileIOPermissionAccess)">
      <summary>Obtient tous les fichiers et répertoires avec le <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> spécifié.</summary>
      <param name="access">L’une des valeurs <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> représentant un seul type d’accès aux fichiers.</param>
      <returns>Tableau contenant les chemins des fichiers et répertoires auxquels l’accès spécifié par le paramètre <paramref name="access" /> est accordé.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="access" /> n’est pas une valeur valide de <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.  

ou - 
<paramref name="access" /> a la valeur <see cref="F:System.Security.Permissions.FileIOPermissionAccess.AllAccess" />, qui représente un ou plusieurs types d’accès aux fichiers, ou <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />, qui ne représente aucun type d’accès aux fichiers.</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.Intersect(System.Security.IPermission)">
      <summary>Crée et retourne une autorisation qui constitue l’intersection entre l’autorisation actuelle et l’autorisation spécifiée.</summary>
      <param name="target">Autorisation à croiser avec l’autorisation actuelle. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>Nouvelle autorisation qui représente l’intersection entre l’autorisation actuelle et l’autorisation spécifiée. Cette nouvelle autorisation est <see langword="null" /> si l’intersection est vide.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="target" /> n’a pas la valeur <see langword="null" /> et n’est pas du même type que l’autorisation actuelle.</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Détermine si l’autorisation actuelle est un sous-ensemble de l’autorisation spécifiée.</summary>
      <param name="target">Autorisation qui doit être testée pour la relation de sous-ensemble. Cette autorisation doit être du même type que l’autorisation actuelle.</param>
      <returns>
        <see langword="true" /> si l’autorisation actuelle est un sous-ensemble de l’autorisation spécifiée ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="target" /> n’a pas la valeur <see langword="null" /> et n’est pas du même type que l’autorisation actuelle.</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.IsUnrestricted">
      <summary>Retourne une valeur qui indique si l’autorisation actuelle est illimitée.</summary>
      <returns>
        <see langword="true" /> si l’autorisation actuelle est illimitée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.SetPathList(System.Security.Permissions.FileIOPermissionAccess,System.String)">
      <summary>Définit l’accès spécifié au fichier ou répertoire spécifié, en remplaçant l’état existant de l’autorisation.</summary>
      <param name="access">Combinaison d'opérations de bits des valeurs <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.</param>
      <param name="path">Chemin absolu du fichier ou du répertoire.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="access" /> n’est pas une valeur valide d’<see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.  
ou 
Le paramètre <paramref name="path" /> n’est pas une chaîne valide.  

ou - 
Le paramètre <paramref name="path" /> ne spécifiait pas le chemin d’accès absolu au fichier ou répertoire.</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.SetPathList(System.Security.Permissions.FileIOPermissionAccess,System.String[])">
      <summary>Définit l’accès spécifié sur les fichiers et répertoires spécifiés, en remplaçant l’état actuel de l’accès spécifié par le nouvel ensemble de chemins.</summary>
      <param name="access">Combinaison d'opérations de bits des valeurs <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.</param>
      <param name="pathList">Tableau contenant les chemins absolus des fichiers et répertoires.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="access" /> n’est pas une valeur valide d’<see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.  

ou - 
Une entrée du paramètre <paramref name="pathList" /> n’est pas une chaîne valide.</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.ToXml">
      <summary>Crée un encodage XML de l’autorisation et de son état actuel.</summary>
      <returns>Codage XML de l’autorisation, y compris les informations d’état éventuelles.</returns>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.Union(System.Security.IPermission)">
      <summary>Crée une autorisation qui est l’union de l’autorisation actuelle et de l’autorisation spécifiée.</summary>
      <param name="other">Autorisation à combiner avec l’autorisation actuelle. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>Nouvelle autorisation qui représente l’union de l’autorisation actuelle et de l’autorisation spécifiée.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="other" /> n’a pas la valeur <see langword="null" /> et n’est pas du même type que l’autorisation actuelle.</exception>
    </member>
    <member name="T:System.Security.Permissions.FileIOPermissionAccess">
      <summary>Spécifie le type d'accès de fichier demandé.</summary>
    </member>
    <member name="F:System.Security.Permissions.FileIOPermissionAccess.AllAccess">
      <summary>
        <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /> et <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> accèdent à un fichier ou un répertoire. <see cref="F:System.Security.Permissions.FileIOPermissionAccess.AllAccess" /> représente plusieurs valeurs de <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> et lève une exception <see cref="T:System.ArgumentException" /> lorsqu'il est utilisé en tant que paramètre <paramref name="access" /> pour la méthode <see cref="M:System.Security.Permissions.FileIOPermission.GetPathList(System.Security.Permissions.FileIOPermissionAccess)" />, qui attend une seule valeur.</summary>
    </member>
    <member name="F:System.Security.Permissions.FileIOPermissionAccess.Append">
      <summary>Accès en vue d'ajouter des informations à un fichier ou à un répertoire. L'accès <see langword="FileIOPermissionAccess.Append" /> comprend la possibilité de créer un fichier ou un répertoire. Pour créer des fichiers, le code doit également disposer des deux<see langword="Append" /> et de <see langword="Write" /> ou <see langword="Read" /> accès.</summary>
    </member>
    <member name="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess">
      <summary>Aucun accès à un fichier ou un répertoire. <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" /> ne représente aucune valeur valide de <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> et lève une exception <see cref="T:System.ArgumentException" /> lorsqu'il est utilisé en tant que paramètre pour <see cref="M:System.Security.Permissions.FileIOPermission.GetPathList(System.Security.Permissions.FileIOPermissionAccess)" />, qui attend une seule valeur.</summary>
    </member>
    <member name="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery">
      <summary>Accès aux informations du chemin d'accès lui-même. Ainsi, les informations sensibles du chemin d'accès sont protégées, telles que les noms des utilisateurs ou les informations relatives à la structure des répertoires, révélée dans le chemin d'accès. Cette valeur n'accorde pas d'accès aux fichiers ou dossiers représentés par le chemin.
Pour des raisons de performances, <see langword="PathDiscovery" /> doit uniquement être octroyé aux répertoires, pas aux fichiers. Par exemple, l’autorisation <see langword="PathDiscovery" /> doit être octroyée aux chemins d’accès tels que C:\test et C:\test\\, non C:\test\example.txt.</summary>
    </member>
    <member name="F:System.Security.Permissions.FileIOPermissionAccess.Read">
      <summary>Accès en vue de lire un fichier ou un répertoire.</summary>
    </member>
    <member name="F:System.Security.Permissions.FileIOPermissionAccess.Write">
      <summary>Accès en vue d'écrire dans un fichier ou un répertoire ou de le supprimer. L'accès <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /> offre notamment la possibilité de supprimer et de remplacer des fichiers ou des répertoires.</summary>
    </member>
    <member name="T:System.Security.Permissions.FileIOPermissionAttribute">
      <summary>Permet d’appliquer les actions de sécurité de <see cref="T:System.Security.Permissions.FileIOPermission" /> au code à l’aide de la sécurité déclarative. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.FileIOPermissionAttribute" /> avec le <see cref="T:System.Security.Permissions.SecurityAction" /> spécifié.</summary>
      <param name="action">Une des valeurs de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="action" /> n’est pas une valeur <see cref="T:System.Security.Permissions.SecurityAction" /> valide.</exception>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.All">
      <summary>Obtient ou définit l'accès complet pour le fichier ou le répertoire spécifié par la valeur de chaîne.</summary>
      <returns>Chemin d'accès absolu du fichier ou du répertoire en accès complet.</returns>
      <exception cref="T:System.NotSupportedException">La méthode get n'est pas prise en charge pour cette propriété.</exception>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.AllFiles">
      <summary>Obtient ou définit l’accès autorisé pour tous les fichiers.</summary>
      <returns>Combinaison d'opérations de bits des valeurs <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> qui représentent les autorisations de tous les fichiers. La valeur par défaut est <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.AllLocalFiles">
      <summary>Obtient ou définit l’accès autorisé pour tous les fichiers locaux.</summary>
      <returns>Combinaison d'opérations de bits des valeurs <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> qui représentent les autorisations de tous les fichiers locaux. La valeur par défaut est <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.Append">
      <summary>Obtient ou définit l'accès en ajout pour le fichier ou le répertoire spécifié par la valeur de chaîne.</summary>
      <returns>Chemin d'accès absolu du fichier ou du répertoire pour l'accès en ajout.</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.ChangeAccessControl">
      <summary>Obtient ou définit le fichier ou le répertoire dans lequel les informations de contrôle d'accès peuvent être modifiées.</summary>
      <returns>Chemin d'accès absolu du fichier ou du répertoire dans lequel les informations de contrôle d'accès peuvent être modifiées.</returns>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermissionAttribute.CreatePermission">
      <summary>Crée et retourne un nouveau <see cref="T:System.Security.Permissions.FileIOPermission" />.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.FileIOPermission" /> qui correspond à cet attribut.</returns>
      <exception cref="T:System.ArgumentException">Les informations relatives au chemin d'accès d'un fichier ou d'un répertoire dont l'accès est sécurisé contiennent des caractères ou des spécificateurs de caractères génériques non valides.</exception>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.PathDiscovery">
      <summary>Obtient ou définit le fichier ou le répertoire pour lequel accorder l'autorisation de découverte du chemin d'accès.</summary>
      <returns>Chemin absolu du fichier ou du répertoire.</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.Read">
      <summary>Obtient ou définit l'accès en lecture pour le fichier ou le répertoire spécifié par la valeur de chaîne.</summary>
      <returns>Chemin d'accès absolu du fichier ou du répertoire pour l'accès en lecture.</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.ViewAccessControl">
      <summary>Obtient ou définit le fichier ou le répertoire dans lequel les informations de contrôle d'accès peuvent être affichées.</summary>
      <returns>Chemin d'accès absolu du fichier ou du répertoire dans lequel les informations de contrôle d'accès peuvent être affichées.</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.ViewAndModify">
      <summary>Obtient ou définit le fichier ou répertoire dans lequel les données de fichier peuvent être affichées et modifiées.</summary>
      <returns>Chemin d'accès absolu du fichier ou du répertoire dans lequel les données de fichier peuvent être affichées et modifiées.</returns>
      <exception cref="T:System.NotSupportedException">L'accesseur <see langword="get" /> est appelé. L'accesseur n'est fourni que pour des raisons de compatibilité avec le compilateur C#.</exception>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.Write">
      <summary>Obtient ou définit l'accès en écriture pour le fichier ou le répertoire spécifié par la valeur de chaîne.</summary>
      <returns>Chemin d'accès absolu du fichier ou du répertoire pour l'accès en écriture.</returns>
    </member>
    <member name="T:System.Security.Permissions.GacIdentityPermission">
      <summary>Définit l'autorisation d'identité pour les fichiers venant du Global Assembly Cache. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermission.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.GacIdentityPermission" />.</summary>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.GacIdentityPermission" /> avec un <see cref="T:System.Security.Permissions.PermissionState" /> complètement restreint.</summary>
      <param name="state">Une des valeurs de l'objet <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> n’est pas une valeur de <see cref="T:System.Security.Permissions.PermissionState" /> valide.</exception>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermission.Copy">
      <summary>Crée et retourne une copie identique de l’autorisation actuelle.</summary>
      <returns>Copie de l’autorisation actuelle.</returns>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermission.FromXml(System.Security.SecurityElement)">
      <summary>Crée une autorisation à partir d'un encodage XML.</summary>
      <param name="securityElement">
        <see cref="T:System.Security.SecurityElement" /> contenant l'encodage XML utilisé pour créer l'autorisation.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" /> n'est pas un élément d'autorisation valide.  

ou - 
Le numéro de version de <paramref name="securityElement" /> n'est pas pris en charge.</exception>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermission.Intersect(System.Security.IPermission)">
      <summary>Crée et retourne une autorisation qui constitue l’intersection entre l’autorisation actuelle et l’autorisation spécifiée.</summary>
      <param name="target">Autorisation à croiser avec l’autorisation actuelle. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>Nouvelle autorisation qui représente l'intersection entre l'autorisation en cours et l'autorisation spécifiée. La nouvelle autorisation est <see langword="null" /> si l'intersection est vide.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> n'a pas la valeur <see langword="null" /> et n'est pas du même type que l'autorisation en cours.</exception>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Détermine si l'autorisation en cours est un sous-ensemble de l'autorisation spécifiée.</summary>
      <param name="target">Objet d'autorisation à vérifier pour la relation de sous-ensemble. L'autorisation doit être du même type que l'autorisation en cours.</param>
      <returns>
        <see langword="true" /> si l’autorisation actuelle est un sous-ensemble de l’autorisation spécifiée ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> n'a pas la valeur <see langword="null" /> et n'est pas du même type que l'autorisation en cours.</exception>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermission.ToXml">
      <summary>Crée un encodage XML de l’autorisation et de son état actuel.</summary>
      <returns>
        <see cref="T:System.Security.SecurityElement" /> représentant l'encodage XML de l'autorisation, y compris les informations d'état.</returns>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermission.Union(System.Security.IPermission)">
      <summary>Crée et retourne une autorisation qui est l'union entre l'autorisation en cours et l'autorisation spécifiée.</summary>
      <param name="target">Autorisation à combiner avec l’autorisation actuelle. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>Nouvelle autorisation qui représente l’union de l’autorisation actuelle et de l’autorisation spécifiée.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> n'a pas la valeur <see langword="null" /> et n'est pas du même type que l'autorisation en cours.</exception>
    </member>
    <member name="T:System.Security.Permissions.GacIdentityPermissionAttribute">
      <summary>Permet d’appliquer les actions de sécurité de <see cref="T:System.Security.Permissions.GacIdentityPermission" /> au code à l’aide de la sécurité déclarative. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.GacIdentityPermissionAttribute" /> avec la valeur <see cref="T:System.Security.Permissions.SecurityAction" /> spécifiée.</summary>
      <param name="action">Une des valeurs de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="action" /> n'est pas une valeur <see cref="T:System.Security.Permissions.SecurityAction" /> valide.</exception>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermissionAttribute.CreatePermission">
      <summary>Crée un objet <see cref="T:System.Security.Permissions.GacIdentityPermission" />.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.GacIdentityPermission" /> qui correspond à cet attribut.</returns>
    </member>
    <member name="T:System.Security.Permissions.HostProtectionAttribute">
      <summary>Autorise l'utilisation d'actions de sécurité déclarative pour déterminer les exigences de protection de l'hôte. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Permissions.HostProtectionAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.HostProtectionAttribute" /> avec des valeurs par défaut.</summary>
    </member>
    <member name="M:System.Security.Permissions.HostProtectionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.HostProtectionAttribute" /> avec la valeur <see cref="T:System.Security.Permissions.SecurityAction" /> spécifiée.</summary>
      <param name="action">Une des valeurs de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="action" /> n’est pas un <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.HostProtectionAttribute.CreatePermission">
      <summary>Crée et retourne une nouvelle autorisation de protection d'hôte.</summary>
      <returns>
        <see cref="T:System.Security.IPermission" /> qui correspond à l'attribut actuel.</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.ExternalProcessMgmt">
      <summary>Obtient ou définit une valeur qui indique si la gestion du processus externe est exposée.</summary>
      <returns>
        <see langword="true" /> si la gestion du processus externe est exposée ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.ExternalThreading">
      <summary>Obtient ou définit une valeur qui indique si les threads externes sont exposés.</summary>
      <returns>
        <see langword="true" /> si les threads externes sont exposés ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.MayLeakOnAbort">
      <summary>Obtient ou définit une valeur qui indique si les ressources peuvent avoir une fuite de mémoire si l'opération est arrêtée.</summary>
      <returns>
        <see langword="true" /> si les ressources peuvent avoir une fuite de mémoire lors d'un arrêt ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.Resources">
      <summary>Obtient ou définit des indicateurs qui spécifient des catégories de fonctionnalités potentiellement dangereuses pour l'hôte.</summary>
      <returns>Combinaison d'opérations de bits des valeurs <see cref="T:System.Security.Permissions.HostProtectionResource" />. La valeur par défaut est <see cref="F:System.Security.Permissions.HostProtectionResource.None" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.SecurityInfrastructure">
      <summary>Obtient ou définit une valeur qui indique si l'infrastructure de sécurité est exposée.</summary>
      <returns>
        <see langword="true" /> si l'infrastructure de sécurité est exposée ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.SelfAffectingProcessMgmt">
      <summary>Obtient ou définit une valeur qui indique si la gestion du processus à affectation automatique est exposée.</summary>
      <returns>
        <see langword="true" /> si la gestion du processus à affectation automatique est exposée ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.SelfAffectingThreading">
      <summary>Obtient ou définit une valeur qui indique si les threads à affectation automatique sont exposés.</summary>
      <returns>
        <see langword="true" /> si les threads à affectation automatique sont exposés ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.SharedState">
      <summary>Obtient ou définit une valeur qui indique si l'état partagé est exposé.</summary>
      <returns>
        <see langword="true" /> si l'état partagé est exposé ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.Synchronization">
      <summary>Obtient ou définit une valeur qui indique si la synchronisation est exposée.</summary>
      <returns>
        <see langword="true" /> si la synchronisation est exposée ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.UI">
      <summary>Obtient ou définit une valeur qui indique si l'interface utilisateur est exposée.</summary>
      <returns>
        <see langword="true" /> si l'interface utilisateur est exposée ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="T:System.Security.Permissions.HostProtectionResource">
      <summary>Spécifie des catégories de fonctionnalités qui présentent des risques pour l'hôte si elles sont appelées par une méthode ou une classe.</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.All">
      <summary>Expose toutes les ressources hôte.</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.ExternalProcessMgmt">
      <summary>Risque de créer ou de détruire d'autres processus.</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.ExternalThreading">
      <summary>Crée ou manipule d'autres threads que le sien, ce qui présente un risque pour l'hôte.</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.MayLeakOnAbort">
      <summary>Peut provoquer une fuite de ressource sur une terminaison en l'absence de protection par un handle sécurisé ou un autre moyen d'assurer la libération de ressources.</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.None">
      <summary>N'expose pas de ressources hôte.</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.SecurityInfrastructure">
      <summary>Expose l'infrastructure de sécurité.</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.SelfAffectingProcessMgmt">
      <summary>Risque de sortir du processus en cours et d'arrêter le serveur.</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.SelfAffectingThreading">
      <summary>Manipule des threads de manière à n'affecter que le code utilisateur.</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.SharedState">
      <summary>Expose un état qui peut être partagé entre threads.</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.Synchronization">
      <summary>Expose la synchronisation.</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.UI">
      <summary>Expose l'interface utilisateur.</summary>
    </member>
    <member name="T:System.Security.Permissions.IsolatedStorageContainment">
      <summary>Spécifie l'utilisation autorisée du stockage isolé.</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.AdministerIsolatedStorageByUser">
      <summary>Possibilités d'administration illimitées pour le magasin de données de l'utilisateur. Permet la consultation et la suppression de l'ensemble du magasin de données de l'utilisateur, mais pas l'accès en lecture autre que l'identité de domaine/assembly propre à cet utilisateur.</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.ApplicationIsolationByMachine">
      <summary>Le stockage est isolé d'abord par l'ordinateur puis par l'application. Propose un magasin de données pour l'application qui est accessible dans n'importe quel contexte de domaine. Le compartimentage de données par application nécessite une confiance supplémentaire car cela fournit potentiellement un « tunnel » entre applications qui pourrait compromettre l'isolation des données d'applications, en particulier les sites Web.</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.ApplicationIsolationByRoamingUser">
      <summary>Le stockage est isolé d'abord par l'utilisateur puis par les preuves d'applications. Le Stockage est itinérant si un profil d'utilisateur itinérant Windows est activé. Propose un magasin de données pour l'application qui est accessible dans n'importe quel contexte de domaine. Le compartimentage de données par application nécessite une confiance supplémentaire car cela fournit potentiellement un « tunnel » entre applications qui pourrait compromettre l'isolation des données d'applications, en particulier les sites Web.</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.ApplicationIsolationByUser">
      <summary>Le stockage est isolé d'abord par l'utilisateur puis par l'application. Le stockage est également isolé par ordinateur. Propose un magasin de données pour l'application qui est accessible dans n'importe quel contexte de domaine. Le compartimentage de données par application nécessite une confiance supplémentaire car cela fournit potentiellement un « tunnel » entre applications qui pourrait compromettre l'isolation des données d'applications, en particulier les sites Web.</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.AssemblyIsolationByMachine">
      <summary>Le stockage est isolé d'abord par l'ordinateur puis par l'assembly de code. Propose un magasin de données pour l'assembly qui est accessible dans n'importe quel contexte de domaine. Le compartimentage de données par assembly nécessite une confiance supplémentaire car cela fournit potentiellement un « tunnel » entre applications qui pourrait compromettre l'isolation des données d'applications, en particulier les sites Web.</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.AssemblyIsolationByRoamingUser">
      <summary>Le stockage est isolé d'abord par l'utilisateur puis par les preuves d'assemblys. Le Stockage est itinérant si un profil d'utilisateur itinérant Windows est activé. Propose un magasin de données pour l'assembly qui est accessible dans n'importe quel contexte de domaine. Le compartimentage de données par assembly nécessite une confiance supplémentaire car cela fournit potentiellement un « tunnel » entre applications qui pourrait compromettre l'isolation des données d'applications, en particulier les sites Web.</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.AssemblyIsolationByUser">
      <summary>Le stockage est isolé d'abord par l'utilisateur puis par l'assembly de code. Le stockage est également isolé par ordinateur. Propose un magasin de données pour l'assembly qui est accessible dans n'importe quel contexte de domaine. Le compartimentage de données par assembly nécessite une confiance supplémentaire car cela fournit potentiellement un « tunnel » entre applications qui pourrait compromettre l'isolation des données d'applications, en particulier les sites Web.</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.DomainIsolationByMachine">
      <summary>Le stockage est isolé d'abord par ordinateur, puis par domaine et par assembly. Les données peuvent faire l'objet d'un accès uniquement dans le contexte d'une même application et lorsqu'elles sont exécutées sur le même ordinateur. Ce mécanisme est utile lorsqu'un assembly tiers souhaite conserver un magasin de données privé.</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.DomainIsolationByRoamingUser">
      <summary>Le stockage est isolé d'abord par utilisateur, puis par domaine et par assembly. Le Stockage est itinérant si un profil d'utilisateur itinérant Windows est activé. Les données peuvent faire l'objet d'un accès uniquement dans le contexte d'une même application et lorsqu'elles sont exécutées par le même utilisateur. Ce mécanisme est utile lorsqu'un assembly tiers souhaite conserver un magasin de données privé.</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.DomainIsolationByUser">
      <summary>Le stockage est isolé d'abord par utilisateur, puis par domaine et par assembly. Le stockage est également isolé par ordinateur. Les données peuvent faire l'objet d'un accès uniquement dans le contexte d'une même application et lorsqu'elles sont exécutées par le même utilisateur. Ce mécanisme est utile lorsqu'un assembly tiers souhaite conserver un magasin de données privé.</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.None">
      <summary>L'utilisation du stockage isolé n'est pas autorisée.</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.UnrestrictedIsolatedStorage">
      <summary>L'utilisation du stockage isolé est autorisée sans restriction. Le code dispose d'un accès complet à toute partie du magasin utilisateur, quelle que soit l'identité du domaine ou de l'assembly. Cette utilisation du stockage isolé comprend la possibilité d'énumérer le contenu du magasin de données en stockage isolé.</summary>
    </member>
    <member name="T:System.Security.Permissions.IsolatedStorageFilePermission">
      <summary>Spécifie l'utilisation autorisée d'un système de fichiers virtuel privé. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStorageFilePermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.IsolatedStorageFilePermission" /> avec autorisation restreinte ou non spécifiée.</summary>
      <param name="state">Une des valeurs de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="state" /> n’est pas une valeur valide d’<see cref="T:System.Security.Permissions.PermissionState" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStorageFilePermission.Copy">
      <summary>Crée et retourne une copie identique de l’autorisation actuelle.</summary>
      <returns>Copie de l’autorisation actuelle.</returns>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStorageFilePermission.Intersect(System.Security.IPermission)">
      <summary>Crée et retourne une autorisation qui constitue l’intersection entre l’autorisation actuelle et l’autorisation spécifiée.</summary>
      <param name="target">Autorisation avec laquelle l'objet d'autorisation en cours fera une intersection. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>Nouvelle autorisation qui représente l’intersection entre l’autorisation actuelle et l’autorisation spécifiée. Cette nouvelle autorisation est <see langword="null" /> si l’intersection est vide.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="target" /> n’a pas la valeur <see langword="null" /> et n’est pas du même type que l’autorisation actuelle.</exception>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStorageFilePermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Détermine si l’autorisation actuelle est un sous-ensemble de l’autorisation spécifiée.</summary>
      <param name="target">Autorisation qui doit être testée pour la relation de sous-ensemble. Cette autorisation doit être du même type que l’autorisation actuelle.</param>
      <returns>
        <see langword="true" /> si l’autorisation actuelle est un sous-ensemble de l’autorisation spécifiée ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="target" /> n’a pas la valeur <see langword="null" /> et n’est pas du même type que l’autorisation actuelle.</exception>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStorageFilePermission.ToXml">
      <summary>Crée un encodage XML de l’autorisation et de son état actuel.</summary>
      <returns>Codage XML de l’autorisation, y compris les informations d’état éventuelles.</returns>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStorageFilePermission.Union(System.Security.IPermission)">
      <summary>Crée une autorisation qui est l’union de l’autorisation actuelle et de l’autorisation spécifiée.</summary>
      <param name="target">Autorisation à combiner avec l’autorisation actuelle. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>Nouvelle autorisation qui représente l’union de l’autorisation actuelle et de l’autorisation spécifiée.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="target" /> n’a pas la valeur <see langword="null" /> et n’est pas du même type que l’autorisation actuelle.</exception>
    </member>
    <member name="T:System.Security.Permissions.IsolatedStorageFilePermissionAttribute">
      <summary>Permet d’appliquer les actions de sécurité de <see cref="T:System.Security.Permissions.IsolatedStorageFilePermission" /> au code à l’aide de la sécurité déclarative. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStorageFilePermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.IsolatedStorageFilePermissionAttribute" /> avec le <see cref="T:System.Security.Permissions.SecurityAction" /> spécifié.</summary>
      <param name="action">Une des valeurs de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStorageFilePermissionAttribute.CreatePermission">
      <summary>Crée et retourne un nouveau <see cref="T:System.Security.Permissions.IsolatedStorageFilePermission" />.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.IsolatedStorageFilePermission" /> qui correspond à cet attribut.</returns>
    </member>
    <member name="T:System.Security.Permissions.IsolatedStoragePermission">
      <summary>Représente un accès aux fonctionnalités génériques de stockage isolé.</summary>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStoragePermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.IsolatedStoragePermission" /> avec l'état d'autorisation spécifié (restreint ou sans restriction).</summary>
      <param name="state">Une des valeurs de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="state" /> n’est pas une valeur valide d’<see cref="T:System.Security.Permissions.PermissionState" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStoragePermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruit une autorisation avec un état spécifié à partir d’un encodage XML.</summary>
      <param name="esd">Encodage XML à utiliser pour reconstruire l’autorisation.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="esd" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="esd" /> n’est pas un élément d’autorisation valide.  
ou 
Le numéro de version du paramètre <paramref name="esd" /> n'est pas valide.</exception>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStoragePermission.IsUnrestricted">
      <summary>Retourne une valeur indiquant si l'autorisation en cours est sans restriction.</summary>
      <returns>
        <see langword="true" /> si l’autorisation actuelle est illimitée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStoragePermission.ToXml">
      <summary>Crée un encodage XML de l’autorisation et de son état actuel.</summary>
      <returns>Codage XML de l’autorisation, y compris les informations d’état éventuelles.</returns>
    </member>
    <member name="P:System.Security.Permissions.IsolatedStoragePermission.UsageAllowed">
      <summary>Obtient ou définit le type de relation contenant-contenu du stockage isolé autorisé.</summary>
      <returns>Une des valeurs de <see cref="T:System.Security.Permissions.IsolatedStorageContainment" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.IsolatedStoragePermission.UserQuota">
      <summary>Obtient ou définit le quota par rapport à la taille globale du magasin total de chaque utilisateur.</summary>
      <returns>Taille, en octets, de la ressource allouée à l'utilisateur.</returns>
    </member>
    <member name="T:System.Security.Permissions.IsolatedStoragePermissionAttribute">
      <summary>Permet d’appliquer les actions de sécurité de <see cref="T:System.Security.Permissions.IsolatedStoragePermission" /> au code à l’aide de la sécurité déclarative.</summary>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStoragePermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.IsolatedStoragePermissionAttribute" /> avec le <see cref="T:System.Security.Permissions.SecurityAction" /> spécifié.</summary>
      <param name="action">Une des valeurs de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="P:System.Security.Permissions.IsolatedStoragePermissionAttribute.UsageAllowed">
      <summary>Obtient ou définit le niveau de stockage isolé qui doit être déclaré.</summary>
      <returns>Une des valeurs de <see cref="T:System.Security.Permissions.IsolatedStorageContainment" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.IsolatedStoragePermissionAttribute.UserQuota">
      <summary>Obtient ou définit la taille maximale du quota de stockage utilisateur.</summary>
      <returns>Taille maximale du quota de stockage utilisateur en octets.</returns>
    </member>
    <member name="T:System.Security.Permissions.IUnrestrictedPermission">
      <summary>Permet à une autorisation d'exposer un état sans restriction.</summary>
    </member>
    <member name="M:System.Security.Permissions.IUnrestrictedPermission.IsUnrestricted">
      <summary>Retourne une valeur indiquant si l'accès à la ressource protégée par l'autorisation est permis.</summary>
      <returns>
        <see langword="true" /> si l'utilisation sans restriction de la ressource protégée par l'autorisation est autorisée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Security.Permissions.KeyContainerPermission">
      <summary>Contrôle la capacité à accéder à un conteneur de clé. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.KeyContainerPermissionFlags)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.KeyContainerPermission" /> avec l’accès spécifié.</summary>
      <param name="flags">Combinaison d'opérations de bits des valeurs <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="flags" /> n'est pas une combinaison de valeurs <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" /> valide.</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.KeyContainerPermissionFlags,System.Security.Permissions.KeyContainerPermissionAccessEntry[])">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.KeyContainerPermission" /> avec l'accès global spécifié et les droits d'accès au conteneur de clé spécifique.</summary>
      <param name="flags">Combinaison d'opérations de bits des valeurs <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" />.</param>
      <param name="accessList">Tableau d'objets <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> qui identifient des droits d'accès au conteneur de clé spécifique.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="flags" /> n'est pas une combinaison de valeurs <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" /> valide.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="accessList" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.KeyContainerPermission" /> avec l'autorisation spécifiée (accès restreint ou illimité).</summary>
      <param name="state">Une des valeurs de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> n’est pas une valeur de <see cref="T:System.Security.Permissions.PermissionState" /> valide.</exception>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermission.AccessEntries">
      <summary>Obtient la collection d’objets <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> associée à l’autorisation actuelle.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection" /> contenant les objets <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> de ce <see cref="T:System.Security.Permissions.KeyContainerPermission" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.Copy">
      <summary>Crée et retourne une copie identique de l’autorisation actuelle.</summary>
      <returns>Copie de l’autorisation actuelle.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermission.Flags">
      <summary>Obtient les indicateurs d'autorisation qui s'appliquent à tous les conteneurs de clé associés à l'autorisation.</summary>
      <returns>Combinaison d'opérations de bits des valeurs <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruit une autorisation avec un état spécifié à partir d’un encodage XML.</summary>
      <param name="securityElement">
        <see cref="T:System.Security.SecurityElement" /> contenant l'encodage XML utilisé pour reconstruire l'autorisation.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" /> n'est pas un élément d'autorisation valide.  
ou 
Le numéro de version de <paramref name="securityElement" /> n'est pas pris en charge.</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.Intersect(System.Security.IPermission)">
      <summary>Crée et retourne une autorisation qui constitue l’intersection entre l’autorisation actuelle et l’autorisation spécifiée.</summary>
      <param name="target">Autorisation à croiser avec l’autorisation actuelle. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>Nouvelle autorisation qui représente l’intersection entre l’autorisation actuelle et l’autorisation spécifiée. Cette nouvelle autorisation est <see langword="null" /> si l’intersection est vide.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> n'a pas la valeur <see langword="null" /> et ne spécifie pas d'autorisation de même type que celui de l'autorisation en cours.</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Détermine si l’autorisation actuelle est un sous-ensemble de l’autorisation spécifiée.</summary>
      <param name="target">Autorisation à tester pour la relation de sous-ensemble. Cette autorisation doit être du même type que l’autorisation actuelle.</param>
      <returns>
        <see langword="true" /> si l’autorisation actuelle est un sous-ensemble de l’autorisation spécifiée ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> n'a pas la valeur <see langword="null" /> et ne spécifie pas d'autorisation de même type que celui de l'autorisation en cours.</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.IsUnrestricted">
      <summary>Détermine si l'autorisation actuelle est illimitée.</summary>
      <returns>
        <see langword="true" /> si l’autorisation actuelle est illimitée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.ToXml">
      <summary>Crée un encodage XML de l’autorisation et de son état actuel.</summary>
      <returns>
        <see cref="T:System.Security.SecurityElement" /> contenant le codage XML de l'autorisation, y compris des informations d'état.</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.Union(System.Security.IPermission)">
      <summary>Crée une autorisation qui est l’union de l’autorisation actuelle et de l’autorisation spécifiée.</summary>
      <param name="target">Autorisation à combiner avec l’autorisation actuelle. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>Nouvelle autorisation qui représente l’union de l’autorisation actuelle et de l’autorisation spécifiée.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> n'a pas la valeur <see langword="null" /> et ne spécifie pas d'autorisation de même type que celui de l'autorisation en cours.</exception>
    </member>
    <member name="T:System.Security.Permissions.KeyContainerPermissionAccessEntry">
      <summary>Spécifie les droits d'accès de conteneurs de clé spécifiques. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.Security.Cryptography.CspParameters,System.Security.Permissions.KeyContainerPermissionFlags)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> à l'aide des autorisations d'accès et des paramètres du fournisseur de services de chiffrement (CSP) spécifiés.</summary>
      <param name="parameters">Objet <see cref="T:System.Security.Cryptography.CspParameters" /> qui contient les paramètres du fournisseur de services de chiffrement (CSP).</param>
      <param name="flags">Combinaison d'opérations de bits des valeurs <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" />.</param>
      <exception cref="T:System.ArgumentException">L'entrée résultante aurait un accès illimité.</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.String,System.Security.Permissions.KeyContainerPermissionFlags)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> avec les autorisations d'accès et le nom du conteneur de clé spécifiés.</summary>
      <param name="keyContainerName">Nom du conteneur de clé.</param>
      <param name="flags">Combinaison d'opérations de bits des valeurs <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" />.</param>
      <exception cref="T:System.ArgumentException">L'entrée résultante aurait un accès illimité.</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.String,System.String,System.Int32,System.String,System.Int32,System.Security.Permissions.KeyContainerPermissionFlags)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> avec les valeurs de propriété spécifiées.</summary>
      <param name="keyStore">Nom du magasin de la clé.</param>
      <param name="providerName">Nom du fournisseur.</param>
      <param name="providerType">Code du type de fournisseur. Consultez la propriété <see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType" /> pour en connaître les valeurs.</param>
      <param name="keyContainerName">Nom du conteneur de clé.</param>
      <param name="keySpec">Spécification de la clé. Consultez la propriété <see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec" /> pour en connaître les valeurs.</param>
      <param name="flags">Combinaison d'opérations de bits des valeurs <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" />.</param>
      <exception cref="T:System.ArgumentException">L'entrée résultante aurait un accès illimité.</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntry.Equals(System.Object)">
      <summary>Détermine si l'objet <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> spécifié est égal à l'instance en cours.</summary>
      <param name="o">Objet <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> à comparer à l’instance actuelle.</param>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> spécifié est égal à l’objet <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.Flags">
      <summary>Obtient ou définit les autorisations appliquées au conteneur de clé.</summary>
      <returns>Combinaison d'opérations de bits des valeurs <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" />. La valeur par défaut est <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.NoFlags" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntry.GetHashCode">
      <summary>Obtient pour l'instance en cours un code de hachage qui convient aux algorithmes de hachage et aux structures de données, par exemple une table de hachage.</summary>
      <returns>Code de hachage pour l’objet <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> actuel.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyContainerName">
      <summary>Obtient ou définit le nom du conteneur de clé.</summary>
      <returns>Nom du conteneur de clé.</returns>
      <exception cref="T:System.ArgumentException">L'entrée résultante aurait un accès illimité.</exception>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec">
      <summary>Obtient ou définit la spécification de la clé.</summary>
      <returns>Une des valeurs AT_ définies dans le fichier d'en-tête Wincrypt.h.</returns>
      <exception cref="T:System.ArgumentException">L'entrée résultante aurait un accès illimité.</exception>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyStore">
      <summary>Obtient ou définit le nom du magasin de la clé.</summary>
      <returns>Nom du magasin de la clé.</returns>
      <exception cref="T:System.ArgumentException">L'entrée résultante aurait un accès illimité.</exception>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderName">
      <summary>Obtient ou définit le nom du fournisseur.</summary>
      <returns>Nom du fournisseur.</returns>
      <exception cref="T:System.ArgumentException">L'entrée résultante aurait un accès illimité.</exception>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType">
      <summary>Obtient ou définit le type de fournisseur.</summary>
      <returns>Une des valeurs PROV_ définies dans le fichier d'en-tête Wincrypt.h.</returns>
      <exception cref="T:System.ArgumentException">L'entrée résultante aurait un accès illimité.</exception>
    </member>
    <member name="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection">
      <summary>Représente une collection d'objets <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" />. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.#ctor" />
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Add(System.Security.Permissions.KeyContainerPermissionAccessEntry)">
      <summary>Ajoute un objet <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> à la collection.</summary>
      <param name="accessEntry">Objet <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> à ajouter.</param>
      <returns>Index au niveau duquel le nouvel élément a été inséré.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="accessEntry" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Clear">
      <summary>Supprime tous les objets <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> de la collection.</summary>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.CopyTo(System.Array,System.Int32)">
      <param name="array" />
      <param name="index" />
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.CopyTo(System.Security.Permissions.KeyContainerPermissionAccessEntry[],System.Int32)">
      <summary>Copie les éléments de la collection vers un tableau compatible, à une dimension, en commençant à l'index spécifié du tableau cible.</summary>
      <param name="array">Tableau <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> unidimensionnel qui constitue la destination des éléments copiés à partir de la collection actuelle.</param>
      <param name="index">Dans le <paramref name="array" />, index auquel commence la copie.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à la limite inférieure d’<paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> est multidimensionnel.  

ou - 
Le nombre d'éléments de la collection est supérieur à la quantité d'espace disponible entre <paramref name="index" /> et la fin du <paramref name="array" /> de destination.</exception>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Count">
      <summary>Obtient le nombre d’éléments de la collection.</summary>
      <returns>Nombre d’objets <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> dans la collection.</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.GetEnumerator">
      <summary>Retourne un objet <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator" /> qui peut être utilisé pour itérer au sein des objets de la collection.</summary>
      <returns>Objet <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator" /> pouvant être utilisé pour itérer au sein de la collection.</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.IndexOf(System.Security.Permissions.KeyContainerPermissionAccessEntry)">
      <summary>Obtient l'index dans la collection de l'objet <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> spécifié, s'il existe dans la collection.</summary>
      <param name="accessEntry">Objet <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> à rechercher.</param>
      <returns>Index de l’objet <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> spécifié dans la collection, ou -1 si aucune correspondance n’est trouvée.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.IsSynchronized">
      <summary>Obtient une valeur indiquant si la collection est synchronisée (thread-safe).</summary>
      <returns>
        <see langword="false" /> dans tous les cas.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Item(System.Int32)">
      <summary>Obtient l'élément situé à l'index spécifié dans la collection.</summary>
      <param name="index">Index de base zéro de l'élément auquel accéder.</param>
      <returns>Objet <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> à l’index spécifié dans la collection.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est supérieur ou égal au nombre de la collection.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="index" /> est un nombre négatif.</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Remove(System.Security.Permissions.KeyContainerPermissionAccessEntry)">
      <summary>Supprime l'objet <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> spécifié de la collection.</summary>
      <param name="accessEntry">Objet <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> à supprimer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="accessEntry" /> est <see langword="null" />.</exception>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.SyncRoot">
      <summary>Obtient un objet qui peut être utilisé pour synchroniser l’accès à la collection.</summary>
      <returns>Objet permettant de synchroniser l’accès à la collection.</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Retourne un objet <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator" /> qui peut être utilisé pour itérer au sein des objets de la collection.</summary>
      <returns>Objet <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator" /> pouvant être utilisé pour itérer au sein de la collection.</returns>
    </member>
    <member name="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
      <summary>Représente l'énumérateur des objets <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> d'une <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection" />.</summary>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.#ctor" />
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current">
      <summary>Obtient l'entrée en cours dans la collection.</summary>
      <returns>Objet <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> en cours dans la collection.</returns>
      <exception cref="T:System.InvalidOperationException">L'accès à la propriété <see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current" /> a lieu avant l'appel à la méthode <see cref="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext" />. Le curseur se trouve avant le premier objet de la collection.  
ou 
L'accès à la propriété <see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current" /> a lieu après qu'un appel à la méthode <see cref="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext" /> a retourné <see langword="false" />, ce qui indique que le curseur se trouve après le dernier objet de la collection.</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext">
      <summary>Passe à l'élément suivant dans la collection.</summary>
      <returns>
        <see langword="true" /> si l'énumérateur a pu avancer jusqu'à l'élément suivant ; <see langword="false" /> si l'énumérateur a dépassé la fin de la collection.</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset">
      <summary>Rétablit l'énumérateur au début de la collection.</summary>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.System#Collections#IEnumerator#Current">
      <summary>Obtient l’objet actuel dans la collection.</summary>
      <returns>Objet en cours dans la collection.</returns>
    </member>
    <member name="T:System.Security.Permissions.KeyContainerPermissionAttribute">
      <summary>Permet d’appliquer les actions de sécurité de <see cref="T:System.Security.Permissions.KeyContainerPermission" /> au code à l’aide de la sécurité déclarative. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.KeyContainerPermissionAttribute" /> en utilisant l'action de sécurité spécifiée.</summary>
      <param name="action">Une des valeurs de l'objet <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAttribute.CreatePermission">
      <summary>Crée et retourne un nouveau <see cref="T:System.Security.Permissions.KeyContainerPermission" />.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.KeyContainerPermission" /> qui correspond à l'attribut.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAttribute.Flags">
      <summary>Obtient ou définit les autorisations appliquées au conteneur de clé.</summary>
      <returns>Combinaison d'opérations de bits des valeurs <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" />. La valeur par défaut est <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.NoFlags" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAttribute.KeyContainerName">
      <summary>Obtient ou définit le nom du conteneur de clé.</summary>
      <returns>Nom du conteneur de clé.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAttribute.KeySpec">
      <summary>Obtient ou définit la spécification de la clé.</summary>
      <returns>Une des valeurs AT_ définies dans le fichier d'en-tête Wincrypt.h.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAttribute.KeyStore">
      <summary>Obtient ou définit le nom du magasin de la clé.</summary>
      <returns>Nom du magasin de la clé. La valeur par défaut est « * ».</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAttribute.ProviderName">
      <summary>Obtient ou définit le nom du fournisseur.</summary>
      <returns>Nom du fournisseur.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAttribute.ProviderType">
      <summary>Obtient ou définit le type de fournisseur.</summary>
      <returns>Une des valeurs PROV_ définies dans le fichier d'en-tête Wincrypt.h.</returns>
    </member>
    <member name="T:System.Security.Permissions.KeyContainerPermissionFlags">
      <summary>Spécifie le type d'accès au conteneur de clé autorisé.</summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.AllFlags">
      <summary>Crée, déchiffre, supprime et ouvre un conteneur de clé ; exporte et importe une clé ; signe les fichiers à l'aide d'une clé ; affiche et modifie la liste de contrôle d'accès d'un conteneur de clé.</summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.ChangeAcl">
      <summary>Modifie la liste de contrôle d'accès d'un conteneur de clé.</summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.Create">
      <summary>Crée un conteneur de clé.
La création d’un conteneur de clé permet également de créer un fichier sur le disque. Il est très important que n’importe quel conteneur de clé créé soit supprimé lorsqu’il n’est plus en cours d’utilisation.</summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.Decrypt">
      <summary>Déchiffre un conteneur de clé.
Le déchiffrement est une opération nécessitant des privilèges, car elle utilise la clé privée.</summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.Delete">
      <summary>Supprime un conteneur de clé.
La suppression d’un conteneur de clé peut constituer une attaque par déni de service, car elle empêche l’utilisation des fichiers chiffrés ou signés avec la clé. Par conséquent, la suppression est une opération nécessitant des privilèges.</summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.Export">
      <summary>Exporte une clé d'un conteneur de clé.
La capacité d’exporter une clé est potentiellement dangereuse, car elle supprime l’exclusivité de la clé.</summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.Import">
      <summary>Importe une clé dans un conteneur de clé.La capacité d’importer une clé peut être aussi dangereuse que la capacité de supprimer un conteneur, car l’importation d’une clé dans un conteneur de clé nommé remplace la clé existante.</summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.NoFlags">
      <summary>Aucun accès à un conteneur de clé.</summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.Open">
      <summary>Ouvre un conteneur de clé et utilise la clé publique.

<see langword="Open" /> ne donne pas l’autorisation de signer ni de déchiffrer des fichiers à l’aide de la clé privée, mais il autorise un utilisateur à vérifier les signatures de fichiers et de chiffrer des fichiers. Seul le propriétaire de la clé est en mesure de déchiffrer ces fichiers à l’aide de la clé privée.</summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign">
      <summary>Signe un fichier à l'aide d'une clé.
La capacité de signer un fichier est potentiellement dangereuse, car elle peut autoriser un utilisateur à signer un fichier à l’aide de la clé d’un autre utilisateur.</summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.ViewAcl">
      <summary>Affiche la liste de contrôle d'accès d'un conteneur de clé.</summary>
    </member>
    <member name="T:System.Security.Permissions.MediaPermission">
      <summary>
        <see cref="T:System.Security.Permissions.MediaPermission" /> décrit un jeu d’autorisations de sécurité qui contrôle la capacité des médias audio, des supports d’images et des médias vidéo à fonctionner dans une application Windows Presentation Foundation (WPF) de confiance partielle.</summary>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.MediaPermission" />.</summary>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionAudio)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.MediaPermission" /> en spécifiant le niveau d’autorisation audio.</summary>
      <param name="permissionAudio">Valeur énumérée de <see cref="T:System.Security.Permissions.MediaPermissionAudio" />.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionAudio,System.Security.Permissions.MediaPermissionVideo,System.Security.Permissions.MediaPermissionImage)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.MediaPermission" />, en spécifiant les niveaux d’autorisation audio, vidéo et d’image.</summary>
      <param name="permissionAudio">Valeur énumérée de <see cref="T:System.Security.Permissions.MediaPermissionAudio" />.</param>
      <param name="permissionVideo">Valeur énumérée de <see cref="T:System.Security.Permissions.MediaPermissionVideo" />.</param>
      <param name="permissionImage">Valeur énumérée de <see cref="T:System.Security.Permissions.MediaPermissionImage" />.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionImage)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.MediaPermission" />, en spécifiant le niveau d’autorisation d’image.</summary>
      <param name="permissionImage">Valeur énumérée de <see cref="T:System.Security.Permissions.MediaPermissionImage" />.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionVideo)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.MediaPermission" />, en spécifiant le niveau d’autorisation vidéo.</summary>
      <param name="permissionVideo">Valeur énumérée de <see cref="T:System.Security.Permissions.MediaPermissionVideo" />.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.MediaPermission" />, en spécifiant un état d’autorisation.</summary>
      <param name="state">Valeur énumérée de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="P:System.Security.Permissions.MediaPermission.Audio">
      <summary>Obtient la valeur actuelle du niveau d’autorisation audio.</summary>
      <returns>Niveau d’autorisation audio.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.Copy">
      <summary>Crée et retourne une copie identique de l’autorisation actuelle.</summary>
      <returns>Copie de l’autorisation actuelle.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruit une autorisation avec un état spécifié à partir d’un encodage XML.</summary>
      <param name="securityElement">Encodage XML à utiliser pour reconstruire l’autorisation.</param>
    </member>
    <member name="P:System.Security.Permissions.MediaPermission.Image">
      <summary>Obtient la valeur actuelle du niveau d’autorisation d’image.</summary>
      <returns>Niveau d’autorisation d’image.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.Intersect(System.Security.IPermission)">
      <summary>Crée et retourne une autorisation qui constitue l’intersection entre l’autorisation actuelle et l’autorisation spécifiée.</summary>
      <param name="target">Autorisation à croiser avec l’autorisation actuelle. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>L'intersection de deux autorisations est une autorisation qui décrit l'état qu'elles décrivent en commun. Seule une demande qui transmet les deux autorisations d’origine est valide pour l’autorisation croisée.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Détermine si l’autorisation actuelle est un sous-ensemble de l’autorisation spécifiée.</summary>
      <param name="target">Autorisation qui doit être testée pour la relation de sous-ensemble. Cette autorisation doit être du même type que l’autorisation actuelle.</param>
      <returns>
        <see langword="true" /> si l’autorisation actuelle est un sous-ensemble de l’autorisation spécifiée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.IsUnrestricted">
      <summary>Retourne une valeur qui indique si l’autorisation actuelle est illimitée.</summary>
      <returns>
        <see langword="true" /> si les autorisations audio, image et vidéo sont toutes non restreintes ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.ToXml">
      <summary>Crée un encodage XML de l’autorisation et de son état actuel.</summary>
      <returns>Codage XML de l’autorisation, y compris les informations d’état éventuelles.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.Union(System.Security.IPermission)">
      <summary>Crée une autorisation qui est l’union de l’autorisation actuelle et de l’autorisation spécifiée.</summary>
      <param name="target">Autorisation à combiner avec l’autorisation actuelle. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>Nouvelle autorisation qui représente l’union de l’autorisation actuelle et de l’autorisation spécifiée.</returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermission.Video">
      <summary>Obtient la valeur actuelle du niveau d’autorisation sur les vidéos.</summary>
      <returns>Niveau d’autorisation sur le support.</returns>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionAttribute">
      <summary>Permet d’appliquer les actions de sécurité de <see cref="T:System.Security.Permissions.MediaPermission" /> au code à l’aide de la sécurité déclarative.</summary>
    </member>
    <member name="M:System.Security.Permissions.MediaPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initialise une nouvelle instance de <see cref="T:System.Security.Permissions.MediaPermissionAttribute" />.</summary>
      <param name="action">Une des valeurs de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="P:System.Security.Permissions.MediaPermissionAttribute.Audio">
      <summary>Obtient ou définit le niveau d’autorisation audio pour l’élément <see cref="T:System.Security.Permissions.MediaPermissionAttribute" />.</summary>
      <returns>État de l’élément <see cref="T:System.Security.Permissions.MediaPermissionAudio" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermissionAttribute.CreatePermission">
      <summary>Crée et retourne un nouveau <see cref="T:System.Security.Permissions.MediaPermission" />.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.MediaPermission" /> qui correspond à cet attribut.</returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermissionAttribute.Image">
      <summary>Obtient ou définit le niveau d’autorisation d’image pour <see cref="T:System.Security.Permissions.MediaPermissionAttribute" />.</summary>
      <returns>État de l’élément <see cref="T:System.Security.Permissions.MediaPermissionImage" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermissionAttribute.Video">
      <summary>Obtient ou définit le niveau d’autorisation pour le <see cref="T:System.Security.Permissions.MediaPermissionAttribute" />.</summary>
      <returns>État de l’élément <see cref="T:System.Security.Permissions.MediaPermissionVideo" />.</returns>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionAudio">
      <summary>Spécifie le niveau d'autorisation audio.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.AllAudio">
      <summary>Autorisation qui permet une lecture audio non restreinte.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.NoAudio">
      <summary>Autorisation qui refuse toute lecture audio.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.SafeAudio">
      <summary>Autorisation qui permet une lecture audio sûre et limitée, ce qui implique de refuser l'accès en continu au fichier audio.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.SiteOfOriginAudio">
      <summary>Autorisation qui permet uniquement la lecture audio des fichiers localisés sur le site d'origine de l'application.</summary>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionImage">
      <summary>Spécifie le niveau d'autorisation pour les images.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.AllImage">
      <summary>Autorisation qui permet l'affichage non restreint des images.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.NoImage">
      <summary>Autorisation qui refuse l'affichage de toutes les images.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.SafeImage">
      <summary>Autorisation qui permet l'affichage d'images sûr et limité, ce qui implique de refuser l'accès en continu au fichier image.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.SiteOfOriginImage">
      <summary>Autorisation qui permet uniquement l'affichage des images localisées sur le site d'origine de l'application.</summary>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionVideo">
      <summary>Spécifie le niveau d'autorisation vidéo.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.AllVideo">
      <summary>Autorisation qui permet une lecture vidéo non restreinte.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.NoVideo">
      <summary>Autorisation qui refuse toute lecture vidéo.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.SafeVideo">
      <summary>Autorisation qui permet une lecture vidéo sûre et limitée, ce qui implique de refuser l'accès en continu au fichier vidéo.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.SiteOfOriginVideo">
      <summary>Autorisation qui permet uniquement la lecture vidéo des fichiers localisés sur le site d'origine de l'application.</summary>
    </member>
    <member name="T:System.Security.Permissions.PermissionSetAttribute">
      <summary>Autorise les actions de sécurité pour que <see cref="T:System.Security.PermissionSet" /> s'applique au code à l'aide de la sécurité déclarative. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Permissions.PermissionSetAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.PermissionSetAttribute" /> en utilisant l'action de sécurité spécifiée.</summary>
      <param name="action">Une des valeurs d'énumération indiquant une action de sécurité.</param>
    </member>
    <member name="M:System.Security.Permissions.PermissionSetAttribute.CreatePermission">
      <summary>Cette méthode n'est pas utilisée.</summary>
      <returns>Référence Null (<see langword="nothing" /> en Visual Basic) dans tous les cas.</returns>
    </member>
    <member name="M:System.Security.Permissions.PermissionSetAttribute.CreatePermissionSet">
      <summary>Crée et retourne un nouveau jeu d'autorisations en fonction de cet objet d'attribut de jeu d'autorisations.</summary>
      <returns>Nouveau jeu d'autorisations.</returns>
    </member>
    <member name="P:System.Security.Permissions.PermissionSetAttribute.File">
      <summary>Obtient ou définit un fichier contenant la représentation XML d'un jeu d'autorisations personnalisé à déclarer.</summary>
      <returns>Chemin d'accès physique du fichier contenant la représentation XML du jeu d'autorisations.</returns>
    </member>
    <member name="P:System.Security.Permissions.PermissionSetAttribute.Hex">
      <summary>Obtient ou définit la représentation hexadécimale du jeu d'autorisations codé XML.</summary>
      <returns>Représentation hexadécimale du jeu d'autorisations codé XML.</returns>
    </member>
    <member name="P:System.Security.Permissions.PermissionSetAttribute.Name">
      <summary>Obtient ou définit le nom du jeu d'autorisations.</summary>
      <returns>Nom d'un <see cref="T:System.Security.NamedPermissionSet" /> immuable (un des jeux d'autorisations qui font partie de la stratégie par défaut et ne peuvent pas être modifiés).</returns>
    </member>
    <member name="P:System.Security.Permissions.PermissionSetAttribute.UnicodeEncoded">
      <summary>Obtient ou définit une valeur indiquant si le fichier spécifié par <see cref="P:System.Security.Permissions.PermissionSetAttribute.File" /> est codé en Unicode ou en ASCII.</summary>
      <returns>
        <see langword="true" /> si le fichier est codé en Unicode ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.PermissionSetAttribute.XML">
      <summary>Obtient ou définit la représentation XML d'un jeu d'autorisations.</summary>
      <returns>Représentation XML d'un jeu d'autorisations.</returns>
    </member>
    <member name="T:System.Security.Permissions.PrincipalPermission">
      <summary>Autorise les vérifications par rapport à l'entité de sécurité active (consultez <see cref="T:System.Security.Principal.IPrincipal" />) à l'aide des constructions du langage définies pour les actions de sécurité déclarative et impérative. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.PrincipalPermission" /> avec le <see cref="T:System.Security.Permissions.PermissionState" /> spécifié.</summary>
      <param name="state">Une des valeurs de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="state" /> n’est pas une valeur <see cref="T:System.Security.Permissions.PermissionState" /> valide.</exception>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.PrincipalPermission" /> pour les <paramref name="name" /> et <paramref name="role" /> spécifiés.</summary>
      <param name="name">Nom de l'utilisateur de l'objet <see cref="T:System.Security.Principal.IPrincipal" />.</param>
      <param name="role">Rôle de l'utilisateur de l'objet <see cref="T:System.Security.Principal.IPrincipal" /> (par exemple, Administrateur).</param>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.#ctor(System.String,System.String,System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.PrincipalPermission" /> pour les<paramref name="name" /> et <paramref name="role" /> spécifiés, ainsi que l'état d'authentification.</summary>
      <param name="name">Nom de l'utilisateur de l'objet <see cref="T:System.Security.Principal.IPrincipal" />.</param>
      <param name="role">Rôle de l'utilisateur de l'objet <see cref="T:System.Security.Principal.IPrincipal" /> (par exemple, Administrateur).</param>
      <param name="isAuthenticated">
        <see langword="true" /> si l'utilisateur est authentifié ; sinon <see langword="false" />.</param>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.Copy">
      <summary>Crée et retourne une copie identique de l’autorisation actuelle.</summary>
      <returns>Copie de l’autorisation actuelle.</returns>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.Demand">
      <summary>Détermine au moment de l'exécution si l'entité de sécurité en cours correspond à celle qui est spécifiée par l'autorisation en cours.</summary>
      <exception cref="T:System.Security.SecurityException">L'entité de sécurité en cours ne réussit pas la vérification de la sécurité de l'entité spécifiée par l'autorisation en cours.  

ou - 
Le <see cref="T:System.Security.Principal.IPrincipal" /> en cours est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.Equals(System.Object)">
      <summary>Détermine si l’objet <see cref="T:System.Security.Permissions.PrincipalPermission" /> spécifié est égal au <see cref="T:System.Security.Permissions.PrincipalPermission" /> actuel.</summary>
      <param name="o">Objet <see cref="T:System.Security.Permissions.PrincipalPermission" /> à comparer au <see cref="T:System.Security.Permissions.PrincipalPermission" /> actuel.</param>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Security.Permissions.PrincipalPermission" /> spécifié est égal à l’objet <see cref="T:System.Security.Permissions.PrincipalPermission" /> actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruit une autorisation avec un état spécifié à partir d’un encodage XML.</summary>
      <param name="elem">Encodage XML à utiliser pour reconstruire l’autorisation.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="elem" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="elem" /> n’est pas un élément d’autorisation valide.  
ou 
Le numéro de version du paramètre <paramref name="elem" /> n’est pas valide.</exception>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.GetHashCode">
      <summary>Obtient un code de hachage pour l’objet <see cref="T:System.Security.Permissions.PrincipalPermission" /> qui peut être utilisé dans des structures de données et des algorithmes de hachage, comme une table de hachage.</summary>
      <returns>Code de hachage pour l’objet <see cref="T:System.Security.Permissions.PrincipalPermission" /> actuel.</returns>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.Intersect(System.Security.IPermission)">
      <summary>Crée et retourne une autorisation qui constitue l’intersection entre l’autorisation actuelle et l’autorisation spécifiée.</summary>
      <param name="target">Autorisation à croiser avec l’autorisation actuelle. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>Nouvelle autorisation qui représente l’intersection entre l’autorisation actuelle et l’autorisation spécifiée. La nouvelle autorisation sera <see langword="null" /> si l'intersection est vide.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="target" /> n'est pas <see langword="null" /> et n'est pas une instance de la même classe que l'autorisation en cours.</exception>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Détermine si l’autorisation actuelle est un sous-ensemble de l’autorisation spécifiée.</summary>
      <param name="target">Autorisation qui doit être testée pour la relation de sous-ensemble. Cette autorisation doit être du même type que l’autorisation actuelle.</param>
      <returns>
        <see langword="true" /> si l’autorisation actuelle est un sous-ensemble de l’autorisation spécifiée ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="target" /> est un objet qui n'est pas du même type que l'autorisation en cours.</exception>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.IsUnrestricted">
      <summary>Retourne une valeur qui indique si l’autorisation actuelle est illimitée.</summary>
      <returns>
        <see langword="true" /> si l’autorisation actuelle est illimitée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.ToString">
      <summary>Crée et retourne une chaîne représentant l'autorisation en cours.</summary>
      <returns>Représentation de l'autorisation en cours.</returns>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.ToXml">
      <summary>Crée un encodage XML de l’autorisation et de son état actuel.</summary>
      <returns>Codage XML de l’autorisation, y compris les informations d’état éventuelles.</returns>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.Union(System.Security.IPermission)">
      <summary>Crée une autorisation qui est l’union de l’autorisation actuelle et de l’autorisation spécifiée.</summary>
      <param name="other">Autorisation à combiner avec l’autorisation actuelle. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>Nouvelle autorisation qui représente l’union de l’autorisation actuelle et de l’autorisation spécifiée.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="other" /> est un objet qui n'est pas du même type que l'autorisation en cours.</exception>
    </member>
    <member name="T:System.Security.Permissions.PrincipalPermissionAttribute">
      <summary>Permet d’appliquer les actions de sécurité de <see cref="T:System.Security.Permissions.PrincipalPermission" /> au code à l’aide de la sécurité déclarative. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.PrincipalPermissionAttribute" /> avec le <see cref="T:System.Security.Permissions.SecurityAction" /> spécifié.</summary>
      <param name="action">Une des valeurs de l'objet <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="P:System.Security.Permissions.PrincipalPermissionAttribute.Authenticated">
      <summary>Obtient ou définit une valeur indiquant si l'entité de sécurité en cours a été authentifiée par le fournisseur de la sécurité basée sur les rôles sous-jacent.</summary>
      <returns>
        <see langword="true" /> si l'entité de sécurité en cours a été authentifiée ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermissionAttribute.CreatePermission">
      <summary>Crée et retourne un nouveau <see cref="T:System.Security.Permissions.PrincipalPermission" />.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.PrincipalPermission" /> qui correspond à cet attribut.</returns>
    </member>
    <member name="P:System.Security.Permissions.PrincipalPermissionAttribute.Name">
      <summary>Obtient ou définit le nom de l'identité associée à l'entité de sécurité en cours.</summary>
      <returns>Nom à faire correspondre à celui fourni par le fournisseur de la sécurité basée sur les rôles sous-jacents.</returns>
    </member>
    <member name="P:System.Security.Permissions.PrincipalPermissionAttribute.Role">
      <summary>Obtient ou définit l'appartenance à un rôle de sécurité spécifié.</summary>
      <returns>Nom d'un rôle provenant du fournisseur de la sécurité basée sur les rôles sous-jacent.</returns>
    </member>
    <member name="T:System.Security.Permissions.PublisherIdentityPermission">
      <summary>Représente l'identité d'un éditeur de logiciels. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermission.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.PublisherIdentityPermission" /> avec le certificat Authenticode X.509v.3 spécifié.</summary>
      <param name="certificate">Certificat X.509 représentant l'identité de l'éditeur de logiciel.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="certificate" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="certificate" /> n'est pas un certificat valide.</exception>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.PublisherIdentityPermission" /> avec le <see cref="T:System.Security.Permissions.PermissionState" /> spécifié.</summary>
      <param name="state">Une des valeurs de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="state" /> n’est pas une valeur valide d’<see cref="T:System.Security.Permissions.PermissionState" />.</exception>
    </member>
    <member name="P:System.Security.Permissions.PublisherIdentityPermission.Certificate">
      <summary>Obtient ou définit un certificat Authenticode X.509v3 qui représente l’identité de l’éditeur de logiciel.</summary>
      <returns>Certificat X.509 représentant l’identité de l’éditeur de logiciel.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Permissions.PublisherIdentityPermission.Certificate" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Security.Permissions.PublisherIdentityPermission.Certificate" /> n’est pas un certificat valide.</exception>
      <exception cref="T:System.NotSupportedException">La propriété ne peut pas être définie, car l’identité est ambiguë.</exception>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermission.Copy">
      <summary>Crée et retourne une copie identique de l’autorisation actuelle.</summary>
      <returns>Copie de l’autorisation actuelle.</returns>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruit une autorisation avec un état spécifié à partir d'un encodage XML.</summary>
      <param name="esd">Encodage XML à utiliser pour reconstruire l’autorisation.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="esd" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="esd" /> n'est pas un élément d'autorisation valide.  
ou 
Le numéro de version du paramètre <paramref name="esd" /> n’est pas valide.</exception>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermission.Intersect(System.Security.IPermission)">
      <summary>Crée et retourne une autorisation qui est l'intersection entre l'autorisation actuelle et l'autorisation spécifiée.</summary>
      <param name="target">Autorisation à croiser avec l'autorisation en cours. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>Nouvelle autorisation qui représente l'intersection entre l'autorisation en cours et l'autorisation spécifiée. Cette nouvelle autorisation est <see langword="null" /> si l'intersection est vide.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="target" /> n'est pas <see langword="null" /> et n'est pas du même type que l'autorisation en cours.</exception>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Détermine si l'autorisation en cours est un sous-ensemble de l'autorisation spécifiée.</summary>
      <param name="target">Autorisation qui doit être testée pour la relation de sous-ensemble. Cette autorisation doit être du même type que l'autorisation en cours.</param>
      <returns>
        <see langword="true" /> si l'autorisation en cours est un sous-ensemble de l'autorisation spécifiée ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="target" /> n'est pas <see langword="null" /> et n'est pas du même type que l'autorisation en cours.</exception>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermission.ToXml">
      <summary>Crée un encodage XML de l'autorisation et de son état actuel.</summary>
      <returns>Codage XML de l'autorisation, y compris les informations d'état.</returns>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermission.Union(System.Security.IPermission)">
      <summary>Crée une autorisation qui est l’union de l’autorisation actuelle et de l’autorisation spécifiée.</summary>
      <param name="target">Autorisation à combiner avec l’autorisation actuelle. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>Nouvelle autorisation qui représente l’union de l’autorisation actuelle et de l’autorisation spécifiée.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="target" /> n'est pas <see langword="null" /> et n'est pas du même type que l'autorisation en cours.  

ou - 
Les deux autorisations ne sont pas égales.</exception>
    </member>
    <member name="T:System.Security.Permissions.PublisherIdentityPermissionAttribute">
      <summary>Permet d’appliquer les actions de sécurité de <see cref="T:System.Security.Permissions.PublisherIdentityPermission" /> au code à l’aide de la sécurité déclarative. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.PublisherIdentityPermissionAttribute" /> avec le <see cref="T:System.Security.Permissions.SecurityAction" /> spécifié.</summary>
      <param name="action">Une des valeurs de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="P:System.Security.Permissions.PublisherIdentityPermissionAttribute.CertFile">
      <summary>Obtient ou définit un fichier de certification contenant un certificat Authenticode X.509v3.</summary>
      <returns>Chemin d'accès d'un fichier de certificat X.509 (l'extension est généralement .cer).</returns>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermissionAttribute.CreatePermission">
      <summary>Crée et retourne une nouvelle instance de <see cref="T:System.Security.Permissions.PublisherIdentityPermission" />.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.PublisherIdentityPermission" /> qui correspond à cet attribut.</returns>
    </member>
    <member name="P:System.Security.Permissions.PublisherIdentityPermissionAttribute.SignedFile">
      <summary>Obtient ou définit un fichier signé d'où extraire un certificat Authenticode X.509v3.</summary>
      <returns>Chemin d'accès d'un fichier portant la signature Authenticode.</returns>
    </member>
    <member name="P:System.Security.Permissions.PublisherIdentityPermissionAttribute.X509Certificate">
      <summary>Obtient ou définit un certificat Authenticode X.509v3 qui identifie l'éditeur du code appelant.</summary>
      <returns>Représentation hexadécimale du certificat X.509.</returns>
    </member>
    <member name="T:System.Security.Permissions.ReflectionPermission">
      <summary>Contrôle l'accès aux membres et types non publics à travers les API <see cref="N:System.Reflection" />. Contrôle certaines fonctions des API <see cref="N:System.Reflection.Emit" />.</summary>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.ReflectionPermission" /> avec autorisation restreinte ou non spécifiée.</summary>
      <param name="state">Une des valeurs de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="state" /> n’est pas une valeur valide d’<see cref="T:System.Security.Permissions.PermissionState" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.#ctor(System.Security.Permissions.ReflectionPermissionFlag)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.ReflectionPermission" /> avec l’accès spécifié.</summary>
      <param name="flag">Une des valeurs de <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" />.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="flag" /> n’est pas une valeur valide d’<see cref="T:System.Security.Permissions.ReflectionPermissionFlag" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.Copy">
      <summary>Crée et retourne une copie identique de l’autorisation actuelle.</summary>
      <returns>Copie de l’autorisation actuelle.</returns>
    </member>
    <member name="P:System.Security.Permissions.ReflectionPermission.Flags">
      <summary>Obtient ou définit le type de réflexion autorisée pour l'autorisation en cours.</summary>
      <returns>Indicateurs définis pour l'autorisation en cours.</returns>
      <exception cref="T:System.ArgumentException">Une tentative d'affecter une valeur non valide à cette propriété est effectuée. Pour connaître les valeurs valides, consultez <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> .</exception>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruit une autorisation avec un état spécifié à partir d’un encodage XML.</summary>
      <param name="esd">Encodage XML à utiliser pour reconstruire l’autorisation.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="esd" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="esd" /> n’est pas un élément d’autorisation valide.  

ou - 
Le numéro de version du paramètre <paramref name="esd" /> n’est pas valide.</exception>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.Intersect(System.Security.IPermission)">
      <summary>Crée et retourne une autorisation qui constitue l’intersection entre l’autorisation actuelle et l’autorisation spécifiée.</summary>
      <param name="target">Autorisation à croiser avec l’autorisation actuelle. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>Nouvelle autorisation qui représente l’intersection entre l’autorisation actuelle et l’autorisation spécifiée. Cette nouvelle autorisation est <see langword="null" /> si l’intersection est vide.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="target" /> n’a pas la valeur <see langword="null" /> et n’est pas du même type que l’autorisation actuelle.</exception>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Détermine si l’autorisation actuelle est un sous-ensemble de l’autorisation spécifiée.</summary>
      <param name="target">Autorisation qui doit être testée pour la relation de sous-ensemble. Cette autorisation doit être du même type que l’autorisation actuelle.</param>
      <returns>
        <see langword="true" /> si l’autorisation actuelle est un sous-ensemble de l’autorisation spécifiée ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="target" /> n’a pas la valeur <see langword="null" /> et n’est pas du même type que l’autorisation actuelle.</exception>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.IsUnrestricted">
      <summary>Retourne une valeur qui indique si l’autorisation actuelle est illimitée.</summary>
      <returns>
        <see langword="true" /> si l’autorisation actuelle est illimitée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.ToXml">
      <summary>Crée un encodage XML de l’autorisation et de son état actuel.</summary>
      <returns>Codage XML de l’autorisation, y compris les informations d’état éventuelles.</returns>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.Union(System.Security.IPermission)">
      <summary>Crée une autorisation qui est l’union de l’autorisation actuelle et de l’autorisation spécifiée.</summary>
      <param name="other">Autorisation à combiner avec l’autorisation actuelle. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>Nouvelle autorisation qui représente l’union de l’autorisation actuelle et de l’autorisation spécifiée.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="other" /> n’a pas la valeur <see langword="null" /> et n’est pas du même type que l’autorisation actuelle.</exception>
    </member>
    <member name="T:System.Security.Permissions.ReflectionPermissionAttribute">
      <summary>Permet d’appliquer les actions de sécurité de <see cref="T:System.Security.Permissions.ReflectionPermission" /> au code à l’aide de la sécurité déclarative.</summary>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.ReflectionPermissionAttribute" /> avec le <see cref="T:System.Security.Permissions.SecurityAction" /> spécifié.</summary>
      <param name="action">Une des valeurs de l'objet <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermissionAttribute.CreatePermission">
      <summary>Crée et retourne un nouveau <see cref="T:System.Security.Permissions.ReflectionPermission" />.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.ReflectionPermission" /> qui correspond à cet attribut.</returns>
    </member>
    <member name="P:System.Security.Permissions.ReflectionPermissionAttribute.Flags">
      <summary>Obtient ou définit les opérations de réflexion actuellement autorisées.</summary>
      <returns>Une ou plusieurs des valeurs <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> combinées à l'aide d'une opération de bits OR.</returns>
      <exception cref="T:System.ArgumentException">Une tentative d'affecter une valeur non valide à cette propriété est effectuée. Pour connaître les valeurs valides, consultez <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> .</exception>
    </member>
    <member name="P:System.Security.Permissions.ReflectionPermissionAttribute.MemberAccess">
      <summary>Obtient ou définit une valeur indiquant si l'appel d'opérations sur des membres non publics est autorisé.</summary>
      <returns>
        <see langword="true" /> si l'appel d'opérations sur des membres non publics est autorisé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.ReflectionPermissionAttribute.ReflectionEmit">
      <summary>Obtient ou définit une valeur qui indique si utilisation de certaines fonctionnalités dans <see cref="N:System.Reflection.Emit" />, telles que l'émission de symboles de débogage, est autorisée.</summary>
      <returns>
        <see langword="true" /> si l'utilisation des fonctionnalités affectées est autorisée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.ReflectionPermissionAttribute.RestrictedMemberAccess">
      <summary>Obtient ou définit une valeur indiquant si l'appel d'opérations restreint sur des membres non publics est autorisé. L'appel restreint signifie que le jeu d'autorisations de l'assembly qui contient le membre non public appelé doit être égal au jeu d'autorisations, ou à un sous-ensemble du jeu d'autorisations de l'assembly appelant.</summary>
      <returns>
        <see langword="true" /> si l'appel d'opérations restreint sur des membres non publics est autorisé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.ReflectionPermissionAttribute.TypeInformation">
      <summary>Obtient ou définit une valeur indiquant si la réflexion sur des membres qui ne sont pas visibles est autorisée.</summary>
      <returns>
        <see langword="true" /> si la réflexion sur des membres qui ne sont pas visibles est autorisée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Security.Permissions.ReflectionPermissionFlag">
      <summary>Spécifie l'utilisation autorisée des espaces de noms <see cref="N:System.Reflection" /> et <see cref="N:System.Reflection.Emit" />.</summary>
    </member>
    <member name="F:System.Security.Permissions.ReflectionPermissionFlag.AllFlags">
      <summary>
        <see langword="TypeInformation" />, <see langword="MemberAccess" /> et <see langword="ReflectionEmit" /> sont définis. <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.AllFlags" /> n'inclut pas <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess" />.</summary>
    </member>
    <member name="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess">
      <summary>Les opérations d'appel sur tous les membres sont autorisées, quel que soit le jeu d'autorisations. Si cet indicateur n'est pas défini, les opérations d'appel sont autorisées uniquement sur des membres visibles.</summary>
    </member>
    <member name="F:System.Security.Permissions.ReflectionPermissionFlag.NoFlags">
      <summary>L'énumération de types et de membres est autorisée. Les opérations d'appel sont autorisées sur les types et les membres visibles.</summary>
    </member>
    <member name="F:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit">
      <summary>L'émission de symboles de débogage est autorisée. À compter du .NET Framework 2.0 Service Pack 1, cet indicateur n'est plus requis pour émettre du code.</summary>
    </member>
    <member name="F:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess">
      <summary>L'accès membre restreint est fourni pour le code d'un niveau de confiance partiel. Le code d'un niveau de confiance partiel peut accéder à des types et des membres non publics, mais uniquement si le jeu d'autorisations du code d'un niveau de confiance partiel inclut toutes les autorisations dans le jeu d'autorisations de l'assembly qui contient les types et les membres non publics faisant l'objet d'un accès. Cet indicateur est nouveau dans .NET Framework 2,0 SP1.</summary>
    </member>
    <member name="F:System.Security.Permissions.ReflectionPermissionFlag.TypeInformation">
      <summary>Cet indicateur est obsolète. Aucun indicateur n'est nécessaire pour énumérer les types et les membres et pour examiner leurs métadonnées. Utilisez plutôt <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.NoFlags" />.</summary>
    </member>
    <member name="T:System.Security.Permissions.RegistryPermission">
      <summary>Contrôle la capacité à accéder aux variables de Registre. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.RegistryPermission" /> avec autorisation restreinte ou non spécifiée.</summary>
      <param name="state">Une des valeurs de l'objet <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="state" /> n’est pas une valeur valide d’<see cref="T:System.Security.Permissions.PermissionState" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.RegistryPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.RegistryPermission" /> avec l'accès spécifié aux variables du Registre spécifiées et les droits d'accès spécifiés aux informations de contrôle du Registre.</summary>
      <param name="access">Une des valeurs de <see cref="T:System.Security.Permissions.RegistryPermissionAccess" />.</param>
      <param name="control">Combinaison d’opérations au niveau du bit des valeurs <see cref="T:System.Security.AccessControl.AccessControlActions" /> .</param>
      <param name="pathList">Une liste des variables de Registre (séparées par des points-virgules) à laquelle l'accès est accordé.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="access" /> n’est pas une valeur valide d’<see cref="T:System.Security.Permissions.RegistryPermissionAccess" />.  

ou - 
Le paramètre <paramref name="pathList" /> n’est pas une chaîne valide.</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.RegistryPermissionAccess,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.RegistryPermission" /> avec l'accès spécifié aux variables de Registre définies.</summary>
      <param name="access">Une des valeurs de <see cref="T:System.Security.Permissions.RegistryPermissionAccess" />.</param>
      <param name="pathList">Une liste des variables de Registre (séparées par des points-virgules) à laquelle l'accès est accordé.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="access" /> n’est pas une valeur valide d’<see cref="T:System.Security.Permissions.RegistryPermissionAccess" />.  

ou - 
Le paramètre <paramref name="pathList" /> n’est pas une chaîne valide.</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.AddPathList(System.Security.Permissions.RegistryPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)">
      <summary>Ajoute, pour les variables du Registre spécifiées, l’accès à l’état existant de l’autorisation, en spécifiant les actions d’accès aux autorisations du Registre et de contrôle d’accès.</summary>
      <param name="access">Une des valeurs de <see cref="T:System.Security.Permissions.RegistryPermissionAccess" />.</param>
      <param name="actions">Une des valeurs de <see cref="T:System.Security.AccessControl.AccessControlActions" />.</param>
      <param name="pathList">Liste des variables du Registre (séparées par des points-virgules).</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="access" /> n’est pas une valeur valide d’<see cref="T:System.Security.Permissions.RegistryPermissionAccess" />.  
ou 
Le paramètre <paramref name="pathList" /> n’est pas une chaîne valide.</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.AddPathList(System.Security.Permissions.RegistryPermissionAccess,System.String)">
      <summary>Ajoute, pour les variables du Registre spécifiées, l’accès à l’état existant de l’autorisation.</summary>
      <param name="access">Une des valeurs de <see cref="T:System.Security.Permissions.RegistryPermissionAccess" />.</param>
      <param name="pathList">Liste de variables du Registre (séparées par des points-virgules).</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="access" /> n’est pas une valeur valide d’<see cref="T:System.Security.Permissions.RegistryPermissionAccess" />.  

ou - 
Le paramètre <paramref name="pathList" /> n’est pas une chaîne valide.</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.Copy">
      <summary>Crée et retourne une copie identique de l’autorisation actuelle.</summary>
      <returns>Copie de l’autorisation actuelle.</returns>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruit une autorisation avec un état spécifié à partir d’un encodage XML.</summary>
      <param name="elem">Encodage XML à utiliser pour reconstruire l’autorisation.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="elem" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="elem" /> n’est pas un élément d’autorisation valide.  

ou - 
Le numéro de version du paramètre <paramref name="elem" /> n’est pas valide.</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.GetPathList(System.Security.Permissions.RegistryPermissionAccess)">
      <summary>Obtient les chemins d'accès pour toutes les variables de Registre avec le <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> spécifié.</summary>
      <param name="access">Une des valeurs de <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> représentant un seul type d'accès aux variables de Registre.</param>
      <returns>Liste de variables de Registre (séparées par des points-virgules) avec le <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> spécifié.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="access" /> n’est pas une valeur valide de <see cref="T:System.Security.Permissions.RegistryPermissionAccess" />.  

ou - 
<paramref name="access" /> a la valeur <see cref="F:System.Security.Permissions.RegistryPermissionAccess.AllAccess" />, qui représente plusieurs types d'accès aux variables de Registre, ou <see cref="F:System.Security.Permissions.RegistryPermissionAccess.NoAccess" />, qui ne représente aucun type d'accès aux variables de Registre.</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.Intersect(System.Security.IPermission)">
      <summary>Crée et retourne une autorisation qui constitue l’intersection entre l’autorisation actuelle et l’autorisation spécifiée.</summary>
      <param name="target">Autorisation à croiser avec l’autorisation actuelle. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>Nouvelle autorisation qui représente l’intersection entre l’autorisation actuelle et l’autorisation spécifiée. Cette nouvelle autorisation est <see langword="null" /> si l’intersection est vide.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="target" /> n’a pas la valeur <see langword="null" /> et n’est pas du même type que l’autorisation actuelle.</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Détermine si l’autorisation actuelle est un sous-ensemble de l’autorisation spécifiée.</summary>
      <param name="target">Autorisation qui doit être testée pour la relation de sous-ensemble. Cette autorisation doit être du même type que l’autorisation actuelle.</param>
      <returns>
        <see langword="true" /> si l’autorisation actuelle est un sous-ensemble de l’autorisation spécifiée ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="target" /> n’a pas la valeur <see langword="null" /> et n’est pas du même type que l’autorisation actuelle.</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.IsUnrestricted">
      <summary>Retourne une valeur qui indique si l’autorisation actuelle est illimitée.</summary>
      <returns>
        <see langword="true" /> si l’autorisation actuelle est illimitée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.SetPathList(System.Security.Permissions.RegistryPermissionAccess,System.String)">
      <summary>Définit le nouvel accès aux noms des variables de Registre spécifiées par rapport à l'état existant de l'autorisation.</summary>
      <param name="access">Une des valeurs de l'objet <see cref="T:System.Security.Permissions.RegistryPermissionAccess" />.</param>
      <param name="pathList">Liste de variables du Registre (séparées par des points-virgules).</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="access" /> n’est pas une valeur valide d’<see cref="T:System.Security.Permissions.RegistryPermissionAccess" />.  
ou 
Le paramètre <paramref name="pathList" /> n’est pas une chaîne valide.</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.ToXml">
      <summary>Crée un encodage XML de l’autorisation et de son état actuel.</summary>
      <returns>Codage XML de l’autorisation, y compris les informations d’état éventuelles.</returns>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.Union(System.Security.IPermission)">
      <summary>Crée une autorisation qui est l’union de l’autorisation actuelle et de l’autorisation spécifiée.</summary>
      <param name="other">Autorisation à combiner avec l’autorisation actuelle. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>Nouvelle autorisation qui représente l’union de l’autorisation actuelle et de l’autorisation spécifiée.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="other" /> n’a pas la valeur <see langword="null" /> et n’est pas du même type que l’autorisation actuelle.</exception>
    </member>
    <member name="T:System.Security.Permissions.RegistryPermissionAccess">
      <summary>Spécifie l'accès autorisé aux clés et valeurs du Registre.</summary>
    </member>
    <member name="F:System.Security.Permissions.RegistryPermissionAccess.AllAccess">
      <summary>Accès <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" />, <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /> et <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" /> aux variables de Registre. <see cref="F:System.Security.Permissions.RegistryPermissionAccess.AllAccess" /> représente plusieurs valeurs de <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> et lève une exception <see cref="T:System.ArgumentException" /> lorsqu'il est utilisé en tant que paramètre <paramref name="access" /> pour la méthode <see cref="M:System.Security.Permissions.RegistryPermission.GetPathList(System.Security.Permissions.RegistryPermissionAccess)" />, qui attend une seule valeur.</summary>
    </member>
    <member name="F:System.Security.Permissions.RegistryPermissionAccess.Create">
      <summary>Accès en création aux variables du Registre.</summary>
    </member>
    <member name="F:System.Security.Permissions.RegistryPermissionAccess.NoAccess">
      <summary>Accès aux variables du Registre non autorisé. <see cref="F:System.Security.Permissions.RegistryPermissionAccess.NoAccess" /> ne représente aucune valeur valide de <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> et lève une exception <see cref="T:System.ArgumentException" /> lorsqu'il est utilisé en tant que paramètre pour <see cref="M:System.Security.Permissions.RegistryPermission.GetPathList(System.Security.Permissions.RegistryPermissionAccess)" />, qui attend une seule valeur.</summary>
    </member>
    <member name="F:System.Security.Permissions.RegistryPermissionAccess.Read">
      <summary>Accès en lecture aux variables du Registre.</summary>
    </member>
    <member name="F:System.Security.Permissions.RegistryPermissionAccess.Write">
      <summary>Accès en écriture aux variables du Registre.</summary>
    </member>
    <member name="T:System.Security.Permissions.RegistryPermissionAttribute">
      <summary>Permet d’appliquer les actions de sécurité de <see cref="T:System.Security.Permissions.RegistryPermission" /> au code à l’aide de la sécurité déclarative. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.RegistryPermissionAttribute" /> avec le <see cref="T:System.Security.Permissions.SecurityAction" /> spécifié.</summary>
      <param name="action">Une des valeurs de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="action" /> n'est pas un <see cref="T:System.Security.Permissions.SecurityAction" /> valide.</exception>
    </member>
    <member name="P:System.Security.Permissions.RegistryPermissionAttribute.All">
      <summary>Obtient ou définit l'accès total pour les clés de Registre spécifiées.</summary>
      <returns>Une liste de chemins d'accès de clés de Registre séparés par des points-virgules, pour l'accès complet.</returns>
      <exception cref="T:System.NotSupportedException">L'accesseur get est appelé ; il n'est fourni que pour des raisons de compatibilité avec le compilateur C#.</exception>
    </member>
    <member name="P:System.Security.Permissions.RegistryPermissionAttribute.ChangeAccessControl">
      <summary>Obtient ou définit le contrôle d'accès aux modifications pour les clés de Registre spécifiées.</summary>
      <returns>Liste de chemins d'accès de clés de Registre séparés par des points-virgules, pour le contrôle d'accès aux modifications. .</returns>
    </member>
    <member name="P:System.Security.Permissions.RegistryPermissionAttribute.Create">
      <summary>Obtient ou définit l'accès au niveau création pour les clés de Registre spécifiées.</summary>
      <returns>Liste de chemins d'accès de clés de Registre séparés par des points-virgules, pour l'accès au niveau création.</returns>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermissionAttribute.CreatePermission">
      <summary>Crée et retourne un nouveau <see cref="T:System.Security.Permissions.RegistryPermission" />.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.RegistryPermission" /> qui correspond à cet attribut.</returns>
    </member>
    <member name="P:System.Security.Permissions.RegistryPermissionAttribute.Read">
      <summary>Obtient ou définit l'accès en lecture pour les clés de Registre spécifiées.</summary>
      <returns>Liste de chemins d'accès de clés de Registre séparés par des points-virgules, pour l'accès en lecture.</returns>
    </member>
    <member name="P:System.Security.Permissions.RegistryPermissionAttribute.ViewAccessControl">
      <summary>Obtient ou définit le contrôle d'accès à l'affichage pour les clés de Registre spécifiées.</summary>
      <returns>Liste de chemins d'accès de clés de Registre séparés par des points-virgules, pour le contrôle d'accès à l'affichage.</returns>
    </member>
    <member name="P:System.Security.Permissions.RegistryPermissionAttribute.ViewAndModify">
      <summary>Obtient ou définit un jeu spécifique de clés de Registre qui peuvent être affichées et modifiées.</summary>
      <returns>Liste de chemins d'accès de clés de Registre séparés par des points-virgules, pour l'accès en création, en lecture et en écriture.</returns>
      <exception cref="T:System.NotSupportedException">L'accesseur get est appelé ; il n'est fourni que pour des raisons de compatibilité avec le compilateur C#.</exception>
    </member>
    <member name="P:System.Security.Permissions.RegistryPermissionAttribute.Write">
      <summary>Obtient ou définit l'accès en écriture pour les clés de Registre spécifiées.</summary>
      <returns>Liste de chemins d'accès de clés de Registre séparés par des points-virgules, pour l'accès en écriture.</returns>
    </member>
    <member name="T:System.Security.Permissions.ResourcePermissionBase">
      <summary>Permet de contrôler les autorisations de sécurité d'accès du code.</summary>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.ResourcePermissionBase" />.</summary>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.ResourcePermissionBase" /> avec le niveau d'accès aux ressources spécifié à la création.</summary>
      <param name="state">Une des valeurs de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="state" /> n’est pas une valeur valide d’<see cref="T:System.Security.Permissions.PermissionState" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.AddPermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)">
      <summary>Ajoute une entrée à l'autorisation.</summary>
      <param name="entry">
        <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> à ajouter.</param>
      <exception cref="T:System.ArgumentNullException">Le <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> spécifié a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Le nombre d'éléments dans la propriété <see cref="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccessPath" /> est différent du nombre d'éléments dans la propriété <see cref="P:System.Security.Permissions.ResourcePermissionBase.TagNames" />.  

ou - 
<see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> est déjà inclus dans l'autorisation.</exception>
    </member>
    <member name="F:System.Security.Permissions.ResourcePermissionBase.Any">
      <summary>Spécifie le caractère à utiliser pour représenter n'importe quel caractère générique.</summary>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.Clear">
      <summary>Supprime les entrées ajoutées à l'autorisation.</summary>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.Copy">
      <summary>Crée et retourne une copie identique de l'objet d'autorisation en cours.</summary>
      <returns>Copie de l’objet d’autorisation actuel.</returns>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruit un objet de sécurité avec un état spécifié à partir d’un encodage XML.</summary>
      <param name="securityElement">Encodage XML à utiliser pour reconstruire l’objet de sécurité.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="securityElement" /> n'est pas un élément d'autorisation valide.  
ou 
Le numéro de version du paramètre <paramref name="securityElement" /> n’est pas pris en charge.</exception>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="securityElement" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.GetPermissionEntries">
      <summary>Retourne un tableau des objets <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> ajoutés à cette autorisation.</summary>
      <returns>Tableau d'objets <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> qui ont été ajoutés à cette autorisation.</returns>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.Intersect(System.Security.IPermission)">
      <summary>Crée et retourne un objet d'autorisation qui est l'intersection entre l'objet d'autorisation en cours et un objet d'autorisation cible.</summary>
      <param name="target">Objet d'autorisation du même type que l'objet d'autorisation en cours.</param>
      <returns>Nouvel objet d'autorisation qui représente l'intersection entre l'objet en cours et la cible spécifiée. Cet objet est <see langword="null" /> si l’intersection est vide.</returns>
      <exception cref="T:System.ArgumentException">L'objet d'autorisation cible n'est pas du même type que l'objet d'autorisation en cours.</exception>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.IsSubsetOf(System.Security.IPermission)">
      <summary>Détermine si l'objet d'autorisation en cours est un sous-ensemble de l'autorisation spécifiée.</summary>
      <param name="target">Objet d'autorisation à tester pour établir s'il s'agit d'un sous-ensemble.</param>
      <returns>
        <see langword="true" /> si l'objet d'autorisation en cours est un sous-ensemble de l'objet d'autorisation spécifié ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.IsUnrestricted">
      <summary>Obtient une valeur indiquant si l'autorisation est sans restriction.</summary>
      <returns>
        <see langword="true" /> si l'autorisation ne comporte aucune restriction ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="F:System.Security.Permissions.ResourcePermissionBase.Local">
      <summary>Spécifie le caractère à utiliser pour représenter une référence locale.</summary>
    </member>
    <member name="P:System.Security.Permissions.ResourcePermissionBase.PermissionAccessType">
      <summary>Obtient ou définit une valeur d'énumération décrivant les types d'accès que vous donnez à la ressource.</summary>
      <returns>Valeur d'énumération dérivée de <see cref="T:System.Type" /> décrivant les types d'accès que vous donnez à la ressource.</returns>
      <exception cref="T:System.ArgumentNullException">La valeur de la propriété est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La valeur de la propriété n'est pas une valeur d'énumération.</exception>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.RemovePermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)">
      <summary>Supprime une entrée de l'autorisation.</summary>
      <param name="entry">
        <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> à supprimer.</param>
      <exception cref="T:System.ArgumentNullException">Le <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> spécifié a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Le nombre d'éléments dans la propriété <see cref="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccessPath" /> est différent du nombre d'éléments dans la propriété <see cref="P:System.Security.Permissions.ResourcePermissionBase.TagNames" />.  
ou 
<see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> ne fait pas partie de l'autorisation.</exception>
    </member>
    <member name="P:System.Security.Permissions.ResourcePermissionBase.TagNames">
      <summary>Obtient ou définit un tableau de chaînes identifiant la ressource que vous protégez.</summary>
      <returns>Tableau de chaînes identifiant la ressource que vous essayez de protéger.</returns>
      <exception cref="T:System.ArgumentNullException">La valeur de la propriété est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La longueur du tableau est égale à 0.</exception>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.ToXml">
      <summary>Crée et retourne un codage XML de l'objet de sécurité et de son état actuel.</summary>
      <returns>Encodage XML de l’objet de sécurité, y compris les informations d’état éventuelles.</returns>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.Union(System.Security.IPermission)">
      <summary>Crée un objet d'autorisation qui combine l'objet d'autorisation en cours et l'objet d'autorisation cible.</summary>
      <param name="target">Objet d'autorisation à combiner avec l'objet d'autorisation en cours. Il doit être du même type que l'objet d'autorisation en cours.</param>
      <returns>Nouvel objet d'autorisation qui représente l'union entre l'objet d'autorisation en cours et l'objet d'autorisation spécifié.</returns>
      <exception cref="T:System.ArgumentException">L'objet d'autorisation <paramref name="target" /> n'est pas du même type que l'objet d'autorisation en cours.</exception>
    </member>
    <member name="T:System.Security.Permissions.ResourcePermissionBaseEntry">
      <summary>Définit la plus petite unité d'un jeu d'autorisations de sécurité d'accès du code.</summary>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBaseEntry.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" />.</summary>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBaseEntry.#ctor(System.Int32,System.String[])">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> avec l'accès d'autorisation et son chemin d'accès spécifiés.</summary>
      <param name="permissionAccess">Représentation sous forme d'entier de la valeur d'énumération du niveau d'accès d'autorisation. Cette valeur est affectée à la propriété <see cref="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccess" />.</param>
      <param name="permissionAccessPath">Tableau de chaînes identifiant la ressource que vous protégez. Cette valeur est affectée à la propriété <see cref="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccessPath" />.</param>
      <exception cref="T:System.ArgumentNullException">Le <paramref name="permissionAccessPath" /> spécifié a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccess">
      <summary>Obtient la représentation sous forme d'entier de la valeur d'énumération du niveau d'accès.</summary>
      <returns>Valeur d'énumération du niveau d'accès.</returns>
    </member>
    <member name="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccessPath">
      <summary>Obtient un tableau de chaînes identifiant la ressource que vous protégez.</summary>
      <returns>Tableau de chaînes identifiant la ressource que vous protégez.</returns>
    </member>
    <member name="T:System.Security.Permissions.SecurityPermission">
      <summary>Décrit un ensemble d'autorisations de sécurité appliquées au code. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.SecurityPermission" /> avec l'état d'autorisation spécifié (restreint ou sans restriction).</summary>
      <param name="state">Une des valeurs de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="state" /> n’est pas une valeur valide d’<see cref="T:System.Security.Permissions.PermissionState" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.#ctor(System.Security.Permissions.SecurityPermissionFlag)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.SecurityPermission" /> avec l'état initial spécifié des indicateurs.</summary>
      <param name="flag">État initial de l'autorisation, représenté par une combinaison d'opérations de bits OR d'autorisation définis par <see cref="T:System.Security.Permissions.SecurityPermissionFlag" />.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="flag" /> n’est pas une valeur valide d’<see cref="T:System.Security.Permissions.SecurityPermissionFlag" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.Copy">
      <summary>Crée et retourne une copie identique de l’autorisation actuelle.</summary>
      <returns>Copie de l’autorisation actuelle.</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermission.Flags">
      <summary>Obtient ou définit les indicateurs d'autorisation de sécurité.</summary>
      <returns>État de l'autorisation en cours, représenté par une combinaison d'opérations de bits OR d'autorisation définis par <see cref="T:System.Security.Permissions.SecurityPermissionFlag" />.</returns>
      <exception cref="T:System.ArgumentException">Une tentative d'affecter une valeur non valide à cette propriété est effectuée. Pour connaître les valeurs valides, consultez <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /> .</exception>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruit une autorisation avec un état spécifié à partir d’un encodage XML.</summary>
      <param name="esd">Encodage XML à utiliser pour reconstruire l’autorisation.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="esd" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="esd" /> n’est pas un élément d’autorisation valide.  

ou - 
Le numéro de version du paramètre <paramref name="esd" /> n'est pas pris en charge.</exception>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.Intersect(System.Security.IPermission)">
      <summary>Crée et retourne une autorisation qui constitue l’intersection entre l’autorisation actuelle et l’autorisation spécifiée.</summary>
      <param name="target">Autorisation à croiser avec l’autorisation actuelle. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>Nouvel objet d'autorisation qui représente l'intersection entre l'autorisation en cours et l'autorisation spécifiée. Cette nouvelle autorisation est <see langword="null" /> si l’intersection est vide.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="target" /> n’a pas la valeur <see langword="null" /> et n’est pas du même type que l’autorisation actuelle.</exception>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Détermine si l’autorisation actuelle est un sous-ensemble de l’autorisation spécifiée.</summary>
      <param name="target">Autorisation qui doit être testée pour la relation de sous-ensemble. Cette autorisation doit être du même type que l’autorisation actuelle.</param>
      <returns>
        <see langword="true" /> si l’autorisation actuelle est un sous-ensemble de l’autorisation spécifiée ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="target" /> n’a pas la valeur <see langword="null" /> et n’est pas du même type que l’autorisation actuelle.</exception>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.IsUnrestricted">
      <summary>Retourne une valeur qui indique si l’autorisation actuelle est illimitée.</summary>
      <returns>
        <see langword="true" /> si l’autorisation actuelle est illimitée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.ToXml">
      <summary>Crée un encodage XML de l’autorisation et de son état actuel.</summary>
      <returns>Codage XML de l’autorisation, y compris les informations d’état éventuelles.</returns>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.Union(System.Security.IPermission)">
      <summary>Crée une autorisation qui est l’union de l’autorisation actuelle et de l’autorisation spécifiée.</summary>
      <param name="target">Autorisation à combiner avec l’autorisation actuelle. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>Nouvelle autorisation qui représente l’union de l’autorisation actuelle et de l’autorisation spécifiée.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="target" /> n’a pas la valeur <see langword="null" /> et n’est pas du même type que l’autorisation actuelle.</exception>
    </member>
    <member name="T:System.Security.Permissions.SiteIdentityPermission">
      <summary>Définit l'autorisation d'identité pour le site Web d'où vient le code. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.SiteIdentityPermission" /> avec le <see cref="T:System.Security.Permissions.PermissionState" /> spécifié.</summary>
      <param name="state">Une des valeurs de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="state" /> n’est pas une valeur valide d’<see cref="T:System.Security.Permissions.PermissionState" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermission.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.SiteIdentityPermission" /> pour représenter l'identité de site spécifiée.</summary>
      <param name="site">Nom du site ou expression générique.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="site" /> n'est pas une chaîne valide ou ne correspond pas à un nom de site générique valide.</exception>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermission.Copy">
      <summary>Crée et retourne une copie identique de l’autorisation actuelle.</summary>
      <returns>Copie de l’autorisation actuelle.</returns>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruit une autorisation avec un état spécifié à partir d’un encodage XML.</summary>
      <param name="esd">Encodage XML à utiliser pour reconstruire l’autorisation.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="esd" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="esd" /> n’est pas un élément d’autorisation valide.  

ou - 
Le numéro de version du paramètre <paramref name="esd" /> n’est pas valide.</exception>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermission.Intersect(System.Security.IPermission)">
      <summary>Crée et retourne une autorisation qui constitue l’intersection entre l’autorisation actuelle et l’autorisation spécifiée.</summary>
      <param name="target">Autorisation à croiser avec l’autorisation actuelle. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>Nouvelle autorisation qui représente l’intersection entre l’autorisation actuelle et l’autorisation spécifiée. Cette nouvelle autorisation est <see langword="null" /> si l’intersection est vide.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="target" /> n’a pas la valeur <see langword="null" /> et n’est pas du même type que l’autorisation actuelle.</exception>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Détermine si l’autorisation actuelle est un sous-ensemble de l’autorisation spécifiée.</summary>
      <param name="target">Autorisation qui doit être testée pour la relation de sous-ensemble. Cette autorisation doit être du même type que l’autorisation actuelle.</param>
      <returns>
        <see langword="true" /> si l’autorisation actuelle est un sous-ensemble de l’autorisation spécifiée ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="target" /> n’a pas la valeur <see langword="null" /> et n’est pas du même type que l’autorisation actuelle.</exception>
    </member>
    <member name="P:System.Security.Permissions.SiteIdentityPermission.Site">
      <summary>Obtient ou définit le site actuel.</summary>
      <returns>Site actuel.</returns>
      <exception cref="T:System.NotSupportedException">L'identité du site ne peut pas être récupérée, car elle est ambiguë.</exception>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermission.ToXml">
      <summary>Crée un encodage XML de l’autorisation et de son état actuel.</summary>
      <returns>Codage XML de l’autorisation, y compris les informations d’état éventuelles.</returns>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermission.Union(System.Security.IPermission)">
      <summary>Crée une autorisation qui est l’union de l’autorisation actuelle et de l’autorisation spécifiée.</summary>
      <param name="target">Autorisation à combiner avec l’autorisation actuelle. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>Nouvelle autorisation qui représente l’union de l’autorisation actuelle et de l’autorisation spécifiée.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="target" /> n’a pas la valeur <see langword="null" /> et n’est pas du même type que l’autorisation actuelle.  

ou - 
Les autorisations ne sont pas égales et l'une n'est pas un sous-ensemble de l'autre.</exception>
    </member>
    <member name="T:System.Security.Permissions.SiteIdentityPermissionAttribute">
      <summary>Permet d’appliquer les actions de sécurité de <see cref="T:System.Security.Permissions.SiteIdentityPermission" /> au code à l’aide de la sécurité déclarative. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.SiteIdentityPermissionAttribute" /> avec le <see cref="T:System.Security.Permissions.SecurityAction" /> spécifié.</summary>
      <param name="action">Une des valeurs de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermissionAttribute.CreatePermission">
      <summary>Crée et retourne une nouvelle instance de <see cref="T:System.Security.Permissions.SiteIdentityPermission" />.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.SiteIdentityPermission" /> qui correspond à cet attribut.</returns>
    </member>
    <member name="P:System.Security.Permissions.SiteIdentityPermissionAttribute.Site">
      <summary>Obtient ou définit le nom de site du code appelant.</summary>
      <returns>Nom de site à comparer à celui qui est spécifié par le fournisseur de sécurité.</returns>
    </member>
    <member name="T:System.Security.Permissions.StorePermission">
      <summary>Contrôle l'accès aux magasins qui contiennent des certificats X.509. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.StorePermission" /> avec l'autorisation spécifiée (accès totalement restreint ou illimité).</summary>
      <param name="state">Une des valeurs de l'objet <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> n’est pas une valeur de <see cref="T:System.Security.Permissions.PermissionState" /> valide.</exception>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.#ctor(System.Security.Permissions.StorePermissionFlags)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.StorePermission" /> avec l’accès spécifié.</summary>
      <param name="flag">Combinaison d'opérations de bits des valeurs <see cref="T:System.Security.Permissions.StorePermissionFlags" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="flag" /> n'est pas une combinaison valide de valeurs <see cref="T:System.Security.Permissions.StorePermissionFlags" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.Copy">
      <summary>Crée et retourne une copie identique de l’autorisation actuelle.</summary>
      <returns>Copie de l’autorisation actuelle.</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermission.Flags">
      <summary>Obtient ou définit le type d'accès <see cref="T:System.Security.Cryptography.X509Certificates.X509Store" /> accordé par l'autorisation en cours.</summary>
      <returns>Combinaison d'opérations de bits des valeurs <see cref="T:System.Security.Permissions.StorePermissionFlags" />.</returns>
      <exception cref="T:System.ArgumentException">Une tentative d'affecter une valeur non valide à cette propriété est effectuée. Pour connaître les valeurs valides, consultez <see cref="T:System.Security.Permissions.StorePermissionFlags" /> .</exception>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruit une autorisation avec un état spécifié à partir d’un encodage XML.</summary>
      <param name="securityElement">
        <see cref="T:System.Security.SecurityElement" /> contenant l'encodage XML utilisé pour reconstruire l'autorisation.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" /> n'est pas un élément d'autorisation valide.  
ou 
Le numéro de version dans <paramref name="securityElement" /> n'est pas valide.</exception>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.Intersect(System.Security.IPermission)">
      <summary>Crée et retourne une autorisation qui constitue l’intersection entre l’autorisation actuelle et l’autorisation spécifiée.</summary>
      <param name="target">Autorisation à croiser avec l'autorisation en cours. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>Nouvelle autorisation qui représente l’intersection entre l’autorisation actuelle et l’autorisation spécifiée. Cette nouvelle autorisation est <see langword="null" /> si l’intersection est vide.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> n'a pas la valeur <see langword="null" /> et n'est pas du même type que l'autorisation en cours.</exception>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Détermine si l’autorisation actuelle est un sous-ensemble de l’autorisation spécifiée.</summary>
      <param name="target">Autorisation à tester pour la relation de sous-ensemble. Cette autorisation doit être du même type que l'autorisation en cours.</param>
      <returns>
        <see langword="true" /> si l’autorisation actuelle est un sous-ensemble de l’autorisation spécifiée ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> n'a pas la valeur <see langword="null" /> et n'est pas du même type que l'autorisation en cours.</exception>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.IsUnrestricted">
      <summary>Retourne une valeur qui indique si l’autorisation actuelle est illimitée.</summary>
      <returns>
        <see langword="true" /> si l’autorisation actuelle est illimitée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.ToXml">
      <summary>Crée un encodage XML de l’autorisation et de son état actuel.</summary>
      <returns>
        <see cref="T:System.Security.SecurityElement" /> contenant l'encodage XML de l'autorisation, y compris des informations d'état.</returns>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.Union(System.Security.IPermission)">
      <summary>Crée une autorisation qui est l’union de l’autorisation actuelle et de l’autorisation spécifiée.</summary>
      <param name="target">Autorisation à combiner avec l’autorisation actuelle. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>Nouvelle autorisation qui représente l’union de l’autorisation actuelle et de l’autorisation spécifiée.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> n'a pas la valeur <see langword="null" /> et n'est pas du même type que l'autorisation en cours.</exception>
    </member>
    <member name="T:System.Security.Permissions.StorePermissionAttribute">
      <summary>Permet d’appliquer les actions de sécurité de <see cref="T:System.Security.Permissions.StorePermission" /> au code à l’aide de la sécurité déclarative. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Permissions.StorePermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.StorePermissionAttribute" /> en utilisant l'action de sécurité spécifiée.</summary>
      <param name="action">Une des valeurs de l'objet <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.AddToStore">
      <summary>Obtient ou définit une valeur indiquant si le code a l'autorisation de faire des ajouts à un magasin.</summary>
      <returns>
        <see langword="true" /> si les ajouts à un magasin sont autorisés ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.StorePermissionAttribute.CreatePermission">
      <summary>Crée et retourne un nouveau <see cref="T:System.Security.Permissions.StorePermission" />.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.StorePermission" /> qui correspond à l'attribut.</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.CreateStore">
      <summary>Obtient ou définit une valeur indiquant si le code a l'autorisation de créer un magasin.</summary>
      <returns>
        <see langword="true" /> si la création d'un magasin est autorisée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.DeleteStore">
      <summary>Obtient ou définit une valeur indiquant si le code a l'autorisation de supprimer un magasin.</summary>
      <returns>
        <see langword="true" /> si la suppression d'un magasin est autorisée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.EnumerateCertificates">
      <summary>Obtient ou définit une valeur qui indique si le code est autorisé à énumérer les certificats d'un magasin.</summary>
      <returns>
        <see langword="true" /> si l'énumération de certificats est autorisée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.EnumerateStores">
      <summary>Obtient ou définit une valeur qui indique si le code est autorisé à énumérer des magasins.</summary>
      <returns>
        <see langword="true" /> si l'énumération de magasins est autorisée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.Flags">
      <summary>Obtient ou définit les autorisations appliquées au magasin.</summary>
      <returns>Combinaison d'opérations de bits des valeurs <see cref="T:System.Security.Permissions.StorePermissionFlags" />. La valeur par défaut est <see cref="F:System.Security.Permissions.StorePermissionFlags.NoFlags" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.OpenStore">
      <summary>Obtient ou définit une valeur indiquant si le code a l'autorisation d'ouvrir un magasin.</summary>
      <returns>
        <see langword="true" /> si l'ouverture d'un magasin est autorisée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.RemoveFromStore">
      <summary>Obtient ou définit une valeur qui indique si le code est autorisé à supprimer un certificat d'un magasin.</summary>
      <returns>
        <see langword="true" /> si la suppression d'un certificat d'un magasin est autorisée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Security.Permissions.StorePermissionFlags">
      <summary>Spécifie l'accès autorisé aux magasins de certificats X.509.</summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.AddToStore">
      <summary>Possibilité d'ajouter un certificat à un magasin.
Pour des raisons de sécurité, cette capacité doit être octroyée uniquement à un code hautement fiable.</summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.AllFlags">
      <summary>Possibilité d'effectuer toutes les opérations liées aux certificats et aux magasins.</summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.CreateStore">
      <summary>Possibilité de créer un magasin.
De nouveaux magasins sont créés en appelant la méthode <see cref="M:System.Security.Cryptography.X509Certificates.X509Store.Open(System.Security.Cryptography.X509Certificates.OpenFlags)" />.</summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.DeleteStore">
      <summary>Possibilité de supprimer un magasin.
Cette fonctionnalité n’est pas exposée par la classe <see cref="T:System.Security.Cryptography.X509Certificates.X509Store" />.</summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.EnumerateCertificates">
      <summary>Possibilité d'énumérer les certificats d'un magasin.
Pour des raisons de confidentialité, cette capacité doit être octroyée uniquement à un code entièrement fiable.</summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.EnumerateStores">
      <summary>Possibilité d'énumérer les magasins d'un ordinateur.
Cette fonctionnalité n’est pas exposée par la classe <see cref="T:System.Security.Cryptography.X509Certificates.X509Store" />.</summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.NoFlags">
      <summary>Il n'est pas autorisé d'effectuer d'opération sur les certificats ou magasins.</summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.OpenStore">
      <summary>Possibilité d'ouvrir un magasin.
La capacité d’ouvrir un magasin n’inclut pas la possibilité d’énumérer des certificats (laquelle déclenche des problèmes de confidentialité) ou d’ajouter ou de supprimer des certificats (ce qui déclenche des problèmes de sécurité).</summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.RemoveFromStore">
      <summary>Possibilité de supprimer un certificat d'un magasin.
Cette capacité doit être octroyée uniquement à un code hautement fiable, car la suppression d’un certificat peut entraîner un déni de service.</summary>
    </member>
    <member name="T:System.Security.Permissions.StrongNameIdentityPermission">
      <summary>Définit l'autorisation d'identité pour les noms forts. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> avec le <see cref="T:System.Security.Permissions.PermissionState" /> spécifié.</summary>
      <param name="state">Une des valeurs de l'objet <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="state" /> n’est pas une valeur valide d’<see cref="T:System.Security.Permissions.PermissionState" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermission.#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> pour l'identité de nom fort spécifiée.</summary>
      <param name="blob">Clé publique définissant l'espace de noms pour l'identité de nom fort.</param>
      <param name="name">Nom simple faisant partie de l'identité de nom fort. Cela correspond au nom de l'assembly.</param>
      <param name="version">Numéro de version de l'identité.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="blob" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="name" /> est une chaîne vide ("").</exception>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermission.Copy">
      <summary>Crée et retourne une copie identique de l’autorisation actuelle.</summary>
      <returns>Copie de l’autorisation actuelle.</returns>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruit une autorisation avec un état spécifié à partir d’un encodage XML.</summary>
      <param name="e">Encodage XML à utiliser pour reconstruire l’autorisation.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="e" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="e" /> n’est pas un élément d’autorisation valide.  

ou - 
Le numéro de version du paramètre <paramref name="e" /> n’est pas valide.</exception>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermission.Intersect(System.Security.IPermission)">
      <summary>Crée et retourne une autorisation qui constitue l’intersection entre l’autorisation actuelle et l’autorisation spécifiée.</summary>
      <param name="target">Autorisation à croiser avec l’autorisation actuelle. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>Nouvelle autorisation qui représente l'intersection entre l'autorisation actuelle et l'autorisation spécifiée, ou <see langword="null" /> si l'intersection est vide.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="target" /> n’a pas la valeur <see langword="null" /> et n’est pas du même type que l’autorisation actuelle.</exception>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Détermine si l’autorisation actuelle est un sous-ensemble de l’autorisation spécifiée.</summary>
      <param name="target">Autorisation qui doit être testée pour la relation de sous-ensemble. Cette autorisation doit être du même type que l’autorisation actuelle.</param>
      <returns>
        <see langword="true" /> si l’autorisation actuelle est un sous-ensemble de l’autorisation spécifiée ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="target" /> n’a pas la valeur <see langword="null" /> et n’est pas du même type que l’autorisation actuelle.</exception>
    </member>
    <member name="P:System.Security.Permissions.StrongNameIdentityPermission.Name">
      <summary>Obtient ou définit la portion nom simple de l'identité de nom fort.</summary>
      <returns>Nom simple faisant partie de l'identité.</returns>
      <exception cref="T:System.ArgumentException">La valeur est une chaîne vide ("").</exception>
      <exception cref="T:System.NotSupportedException">La valeur de la propriété ne peut pas être récupérée, car elle contient une identité ambiguë.</exception>
    </member>
    <member name="P:System.Security.Permissions.StrongNameIdentityPermission.PublicKey">
      <summary>Obtient ou définit l'objet binaire volumineux (BLOB) de clé publique qui définit l'espace de noms pour l'identité de nom fort.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" /> qui contient la clé publique de l'identité, ou <see langword="null" /> s'il n'existe aucune clé.</returns>
      <exception cref="T:System.ArgumentNullException">La propriété a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">La valeur de la propriété ne peut pas être récupérée, car elle contient une identité ambiguë.</exception>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermission.ToXml">
      <summary>Crée un encodage XML de l’autorisation et de son état actuel.</summary>
      <returns>Codage XML de l’autorisation, y compris les informations d’état éventuelles.</returns>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermission.Union(System.Security.IPermission)">
      <summary>Crée une autorisation qui est l’union de l’autorisation actuelle et de l’autorisation spécifiée.</summary>
      <param name="target">Autorisation à combiner avec l’autorisation actuelle. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>Nouvelle autorisation qui représente l’union de l’autorisation actuelle et de l’autorisation spécifiée.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="target" /> n’a pas la valeur <see langword="null" /> et n’est pas du même type que l’autorisation actuelle.  

ou - 
Les deux autorisations ne sont pas égales et l'une est un sous-ensemble de l'autre.</exception>
    </member>
    <member name="P:System.Security.Permissions.StrongNameIdentityPermission.Version">
      <summary>Obtient ou définit le numéro de version de l'identité.</summary>
      <returns>Version de l'identité.</returns>
      <exception cref="T:System.NotSupportedException">La valeur de la propriété ne peut pas être récupérée, car elle contient une identité ambiguë.</exception>
    </member>
    <member name="T:System.Security.Permissions.StrongNameIdentityPermissionAttribute">
      <summary>Permet d’appliquer les actions de sécurité de <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> au code à l’aide de la sécurité déclarative. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.StrongNameIdentityPermissionAttribute" /> avec le <see cref="T:System.Security.Permissions.SecurityAction" /> spécifié.</summary>
      <param name="action">Une des valeurs de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermissionAttribute.CreatePermission">
      <summary>Crée et retourne un nouveau <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" />.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> qui correspond à cet attribut.</returns>
      <exception cref="T:System.ArgumentException">La méthode a échoué, car la clé est <see langword="null" />.</exception>
    </member>
    <member name="P:System.Security.Permissions.StrongNameIdentityPermissionAttribute.Name">
      <summary>Obtient ou définit le nom de l'identité de nom fort.</summary>
      <returns>Nom à comparer à celui qui est spécifié par le fournisseur de sécurité.</returns>
    </member>
    <member name="P:System.Security.Permissions.StrongNameIdentityPermissionAttribute.PublicKey">
      <summary>Obtient ou définit la valeur de la clé publique de l'identité de nom fort, exprimée sous la forme d'une chaîne hexadécimale.</summary>
      <returns>Valeur de la clé publique de l'identité de nom fort, exprimée sous la forme d'une chaîne hexadécimale.</returns>
    </member>
    <member name="P:System.Security.Permissions.StrongNameIdentityPermissionAttribute.Version">
      <summary>Obtient ou définit la version de l'identité de nom fort.</summary>
      <returns>Numéro de version de l'identité de nom fort.</returns>
    </member>
    <member name="T:System.Security.Permissions.StrongNamePublicKeyBlob">
      <summary>Représente les informations sur la clé publique (appelées Blob) pour un nom fort. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Permissions.StrongNamePublicKeyBlob.#ctor(System.Byte[])">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" /> avec des octets bruts du Blob de la clé publique.</summary>
      <param name="publicKey">Tableau d'octets représentant les données brutes de la clé publique.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="publicKey" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.StrongNamePublicKeyBlob.Equals(System.Object)">
      <summary>Obtient ou définit une valeur indiquant si le Blob de la clé publique en cours est égal au Blob de la clé publique spécifiée.</summary>
      <param name="o">Objet contenant un Blob de clé publique.</param>
      <returns>
        <see langword="true" /> si le Blob de la clé publique de l'objet en cours est égal au Blob de la clé publique du paramètre <paramref name="o" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.StrongNamePublicKeyBlob.GetHashCode">
      <summary>Retourne un code de hachage en fonction de la clé publique.</summary>
      <returns>Code de hachage basé sur la clé publique.</returns>
    </member>
    <member name="M:System.Security.Permissions.StrongNamePublicKeyBlob.ToString">
      <summary>Crée et retourne une chaîne représentant le Blob de la clé publique en cours.</summary>
      <returns>Version hexadécimale du Blob de la clé publique.</returns>
    </member>
    <member name="T:System.Security.Permissions.TypeDescriptorPermission">
      <summary>Définit l'accès en confiance partielle à la classe <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.TypeDescriptorPermission" />.</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> à demander. Seuls <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> et <see cref="F:System.Security.Permissions.PermissionState.None" /> sont valides.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> n'est pas un état d'autorisation valide. Seuls <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> et <see cref="F:System.Security.Permissions.PermissionState.None" /> sont valides.</exception>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.#ctor(System.Security.Permissions.TypeDescriptorPermissionFlags)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.TypeDescriptorPermission" /> avec les indicateurs d'autorisation spécifiés.</summary>
      <param name="flag">Indicateurs d'autorisation à demander.</param>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.Copy">
      <summary>En cas d’implémentation par une classe dérivée, crée et retourne une copie identique de l’objet d’autorisation actuel.</summary>
      <returns>Copie de l’objet d’autorisation actuel.</returns>
    </member>
    <member name="P:System.Security.Permissions.TypeDescriptorPermission.Flags">
      <summary>Obtient ou définit les <see cref="T:System.Security.Permissions.TypeDescriptorPermissionFlags" /> pour le descripteur de type.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.TypeDescriptorPermissionFlags" /> pour le descripteur de type.</returns>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.FromXml(System.Security.SecurityElement)">
      <summary>En cas de substitution dans une classe dérivée, reconstruit un objet de sécurité avec un état spécifié à partir d'un encodage XML.</summary>
      <param name="securityElement">Encodage XML à utiliser pour reconstruire l’objet de sécurité.</param>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.Intersect(System.Security.IPermission)">
      <summary>Lors de l'implémentation par une classe dérivée, crée et retourne une autorisation qui est l'intersection de l'autorisation en cours et de l'autorisation spécifiée.</summary>
      <param name="target">Autorisation à croiser avec l’autorisation actuelle. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>Nouvelle autorisation qui représente l’intersection entre l’autorisation actuelle et l’autorisation spécifiée. Cette nouvelle autorisation est <see langword="null" /> si l’intersection est vide.</returns>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Lors de l'implémentation par une classe dérivée, détermine si l'autorisation en cours est un sous-ensemble de l'autorisation spécifiée.</summary>
      <param name="target">Autorisation qui doit être testée pour la relation de sous-ensemble. Cette autorisation doit être du même type que l’autorisation actuelle.</param>
      <returns>
        <see langword="true" /> si l’autorisation actuelle est un sous-ensemble de l’autorisation spécifiée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.IsUnrestricted">
      <summary>Obtient une valeur qui indique si le descripteur de type peut être appelé à partir de code de niveau de confiance partiel.</summary>
      <returns>
        <see langword="true" /> si la propriété <see cref="P:System.Security.Permissions.TypeDescriptorPermission.Flags" /> a la valeur <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.ToXml">
      <summary>En cas de substitution dans une classe dérivée, crée un encodage XML de l’objet de sécurité et de son état actuel.</summary>
      <returns>Encodage XML de l’objet de sécurité, y compris les informations d’état éventuelles.</returns>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.Union(System.Security.IPermission)">
      <summary>Lors de son remplacement dans une classe dérivée, crée une autorisation qui est l’union de l’autorisation actuelle et de l’autorisation spécifiée.</summary>
      <param name="target">Autorisation à combiner avec l’autorisation actuelle. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>Nouvelle autorisation qui représente l’union de l’autorisation actuelle et de l’autorisation spécifiée.</returns>
    </member>
    <member name="T:System.Security.Permissions.TypeDescriptorPermissionAttribute">
      <summary>Détermine les indicateurs d'autorisation qui s'appliquent à un <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.TypeDescriptorPermissionAttribute" /> avec le <see cref="T:System.Security.Permissions.SecurityAction" /> spécifié.</summary>
      <param name="action">Une des valeurs de l'objet <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermissionAttribute.CreatePermission">
      <summary>En cas de substitution dans une classe dérivée, crée un objet d’autorisation qui peut ensuite être sérialisé au format binaire et stocké de manière permanente avec <see cref="T:System.Security.Permissions.SecurityAction" /> dans les métadonnées d’un assembly.</summary>
      <returns>Objet d’autorisation sérialisable.</returns>
    </member>
    <member name="P:System.Security.Permissions.TypeDescriptorPermissionAttribute.Flags">
      <summary>Obtient ou définit <see cref="T:System.Security.Permissions.TypeDescriptorPermissionFlags" /> pour <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.TypeDescriptorPermissionFlags" /> pour <see cref="T:System.ComponentModel.TypeDescriptor" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.TypeDescriptorPermissionAttribute.RestrictedRegistrationAccess">
      <summary>Obtient ou définit une valeur qui indique si le descripteur de type peut être consulté en confiance partielle.</summary>
      <returns>
        <see langword="true" /> si le descripteur de type peut être consulté en confiance partielle ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Security.Permissions.TypeDescriptorPermissionFlags">
      <summary>Définit les paramètres d'autorisation pour les descripteurs de type.</summary>
    </member>
    <member name="F:System.Security.Permissions.TypeDescriptorPermissionFlags.NoFlags">
      <summary>Aucun indicateur d'autorisation n'est défini pour le descripteur de type.</summary>
    </member>
    <member name="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess">
      <summary>Le descripteur de type peut être appelé à partir de code de niveau de confiance partiel.</summary>
    </member>
    <member name="T:System.Security.Permissions.UIPermission">
      <summary>Contrôle les autorisations relatives aux interfaces utilisateur et au Presse-papiers. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.UIPermission" /> avec un accès complètement restreint ou sans restriction, selon ce qui est spécifié.</summary>
      <param name="state">Une des valeurs de l'énumération.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="state" /> n’est pas une valeur <see cref="T:System.Security.Permissions.PermissionState" /> valide.</exception>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionClipboard)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.UIPermission" /> avec les autorisations pour le Presse-papiers et aucun accès aux fenêtres.</summary>
      <param name="clipboardFlag">Une des valeurs de l'énumération.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="clipboardFlag" /> n'est pas une valeur <see cref="T:System.Security.Permissions.UIPermissionClipboard" /> valide.</exception>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionWindow)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.UIPermission" /> avec les autorisations pour les fenêtres et aucun accès au Presse-papiers.</summary>
      <param name="windowFlag">Une des valeurs de l'énumération.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="windowFlag" /> n'est pas une valeur <see cref="T:System.Security.Permissions.UIPermissionWindow" /> valide.</exception>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionWindow,System.Security.Permissions.UIPermissionClipboard)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.UIPermission" /> avec les autorisations spécifiées pour les fenêtres et le Presse-papiers.</summary>
      <param name="windowFlag">Une des valeurs de l'énumération.</param>
      <param name="clipboardFlag">Une des valeurs de l'énumération.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="windowFlag" /> n'est pas une valeur <see cref="T:System.Security.Permissions.UIPermissionWindow" /> valide.  

ou - 
Le paramètre <paramref name="clipboardFlag" /> n'est pas une valeur <see cref="T:System.Security.Permissions.UIPermissionClipboard" /> valide.</exception>
    </member>
    <member name="P:System.Security.Permissions.UIPermission.Clipboard">
      <summary>Obtient ou définit l’accès au Presse-papiers représenté par l’autorisation.</summary>
      <returns>Une des valeurs de <see cref="T:System.Security.Permissions.UIPermissionClipboard" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.Copy">
      <summary>Crée et retourne une copie identique de l’autorisation actuelle.</summary>
      <returns>Copie de l’autorisation actuelle.</returns>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruit une autorisation avec un état spécifié à partir d’un encodage XML.</summary>
      <param name="esd">Encodage XML utilisé pour reconstruire l’autorisation.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="esd" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="esd" /> n’est pas un élément d’autorisation valide.  
ou 
Le numéro de version du paramètre <paramref name="esd" /> n’est pas valide.</exception>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.Intersect(System.Security.IPermission)">
      <summary>Crée et retourne une autorisation qui constitue l’intersection entre l’autorisation actuelle et l’autorisation spécifiée.</summary>
      <param name="target">Autorisation à croiser avec l’autorisation actuelle. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>Nouvelle autorisation qui représente l’intersection entre l’autorisation actuelle et l’autorisation spécifiée. Cette nouvelle autorisation est <see langword="null" /> si l’intersection est vide.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="target" /> n’a pas la valeur <see langword="null" /> et n’est pas du même type que l’autorisation actuelle.</exception>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Détermine si l’autorisation actuelle est un sous-ensemble de l’autorisation spécifiée.</summary>
      <param name="target">Autorisation à tester pour la relation de sous-ensemble. Cette autorisation doit être du même type que l’autorisation actuelle.</param>
      <returns>
        <see langword="true" /> si l’autorisation actuelle est un sous-ensemble de l’autorisation spécifiée ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="target" /> n’a pas la valeur <see langword="null" /> et n’est pas du même type que l’autorisation actuelle.</exception>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.IsUnrestricted">
      <summary>Retourne une valeur qui indique si l’autorisation actuelle est illimitée.</summary>
      <returns>
        <see langword="true" /> si l’autorisation actuelle est illimitée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.ToXml">
      <summary>Crée un encodage XML de l’autorisation et de son état actuel.</summary>
      <returns>Codage XML de l’autorisation, y compris les informations d’état éventuelles.</returns>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.Union(System.Security.IPermission)">
      <summary>Crée une autorisation qui est l'union entre l'autorisation actuelle et l'autorisation spécifiée.</summary>
      <param name="target">Autorisation à combiner avec l’autorisation actuelle. Elle doit être du même type que l'autorisation en cours.</param>
      <returns>Nouvelle autorisation qui représente l’union de l’autorisation actuelle et de l’autorisation spécifiée.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="target" /> n’a pas la valeur <see langword="null" /> et n’est pas du même type que l’autorisation actuelle.</exception>
    </member>
    <member name="P:System.Security.Permissions.UIPermission.Window">
      <summary>Obtient ou définit l'accès à la fenêtre représenté par l'autorisation.</summary>
      <returns>Une des valeurs de <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</returns>
    </member>
    <member name="T:System.Security.Permissions.UIPermissionAttribute">
      <summary>Permet d’appliquer les actions de sécurité de <see cref="T:System.Security.Permissions.UIPermission" /> au code à l’aide de la sécurité déclarative. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Permissions.UIPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.UIPermissionAttribute" /> avec le <see cref="T:System.Security.Permissions.SecurityAction" /> spécifié.</summary>
      <param name="action">Une des valeurs de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="P:System.Security.Permissions.UIPermissionAttribute.Clipboard">
      <summary>Obtient ou définit le type d'accès autorisé au Presse-papiers.</summary>
      <returns>Une des valeurs de <see cref="T:System.Security.Permissions.UIPermissionClipboard" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.UIPermissionAttribute.CreatePermission">
      <summary>Crée et retourne un nouveau <see cref="T:System.Security.Permissions.UIPermission" />.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.UIPermission" /> qui correspond à cet attribut.</returns>
    </member>
    <member name="P:System.Security.Permissions.UIPermissionAttribute.Window">
      <summary>Obtient ou définit le type d'accès autorisé aux ressources des fenêtres.</summary>
      <returns>Une des valeurs de <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</returns>
    </member>
    <member name="T:System.Security.Permissions.UIPermissionClipboard">
      <summary>Spécifie le type d'accès au Presse-papiers qui est autorisé au code appelant.</summary>
    </member>
    <member name="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard">
      <summary>Le Presse-papiers peut être utilisé sans restriction.</summary>
    </member>
    <member name="F:System.Security.Permissions.UIPermissionClipboard.NoClipboard">
      <summary>Le Presse-papiers ne peut pas être utilisé.</summary>
    </member>
    <member name="F:System.Security.Permissions.UIPermissionClipboard.OwnClipboard">
      <summary>La possibilité de placer des données dans le Presse-papiers (<see langword="Copy" />, <see langword="Cut" />) est sans restriction. Les contrôles intrinsèques qui acceptent <see langword="Paste" />, tels que les zones de texte, peuvent accepter les données du Presse-papiers, mais les contrôles utilisateur qui doivent lire le Presse-papiers par programme ne le peuvent pas.</summary>
    </member>
    <member name="T:System.Security.Permissions.UIPermissionWindow">
      <summary>Spécifie le type de fenêtres que le code est autorisé à utiliser.</summary>
    </member>
    <member name="F:System.Security.Permissions.UIPermissionWindow.AllWindows">
      <summary>Les utilisateurs peuvent utiliser toutes les fenêtres et tous les événements d'entrée d'utilisateur sans restriction.</summary>
    </member>
    <member name="F:System.Security.Permissions.UIPermissionWindow.NoWindows">
      <summary>Les utilisateurs ne peuvent pas utiliser d’événements d’interface utilisateur ou Windows. Aucune interface utilisateur ne peut être utilisée.</summary>
    </member>
    <member name="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows">
      <summary>Les utilisateurs peuvent uniquement utiliser des <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /> pour le dessin et des événements d'entrée d'utilisateur pour l'interface utilisateur dans cette sous-fenêtre. Un <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" />, des contrôles de boîte de dialogue courants et un contrôle affiché par un navigateur sont autant d'exemples de <see cref="T:System.Windows.Forms.MessageBox" />.</summary>
    </member>
    <member name="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows">
      <summary>Les utilisateurs peuvent uniquement utiliser des <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /> et des <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /> pour le dessin et des événements d'entrée d'utilisateur pour l'interface utilisateur dans ces fenêtres de niveau supérieur et ces sous-fenêtres. Pour plus d'informations, consultez la section Notes.</summary>
    </member>
    <member name="T:System.Security.Permissions.UrlIdentityPermission">
      <summary>Définit l'autorisation d'identité pour l'URL d'où vient le code. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.UrlIdentityPermission" /> avec le <see cref="T:System.Security.Permissions.PermissionState" /> spécifié.</summary>
      <param name="state">Une des valeurs de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="state" /> n’est pas une valeur valide d’<see cref="T:System.Security.Permissions.PermissionState" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermission.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.UrlIdentityPermission" /> pour représenter l'identité URL décrite par <paramref name="site" />.</summary>
      <param name="site">URL ou expression avec caractère générique.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="site" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">La longueur du paramètre <paramref name="site" /> est égale à zéro.</exception>
      <exception cref="T:System.ArgumentException">L'URL, le répertoire ou la partie site du paramètre <paramref name="site" /> n'est pas valide.</exception>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermission.Copy">
      <summary>Crée et retourne une copie identique de l’autorisation actuelle.</summary>
      <returns>Copie de l’autorisation actuelle.</returns>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruit une autorisation avec un état spécifié à partir d'un encodage XML.</summary>
      <param name="esd">Encodage XML à utiliser pour reconstruire l’autorisation.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="esd" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="esd" /> n'est pas un élément d'autorisation valide.  
ou 
Le numéro de version du paramètre <paramref name="esd" /> n’est pas valide.</exception>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermission.Intersect(System.Security.IPermission)">
      <summary>Crée et retourne une autorisation qui est l'intersection entre l'autorisation actuelle et l'autorisation spécifiée.</summary>
      <param name="target">Autorisation à croiser avec l'autorisation en cours. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>Nouvelle autorisation qui représente l'intersection entre l'autorisation en cours et l'autorisation spécifiée. Cette nouvelle autorisation est <see langword="null" /> si l'intersection est vide.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="target" /> n'est pas <see langword="null" /> et n'est pas du même type que l'autorisation en cours.  

ou - 
La propriété Url n'est pas une URL valide.</exception>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Détermine si l'autorisation en cours est un sous-ensemble de l'autorisation spécifiée.</summary>
      <param name="target">Autorisation qui doit être testée pour la relation de sous-ensemble. Cette autorisation doit être du même type que l'autorisation en cours.</param>
      <returns>
        <see langword="true" /> si l'autorisation en cours est un sous-ensemble de l'autorisation spécifiée ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="target" /> n'est pas <see langword="null" /> et n'est pas du même type que l'autorisation en cours.  

ou - 
La propriété Url n'est pas une URL valide.</exception>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermission.ToXml">
      <summary>Crée un encodage XML de l'autorisation et de son état actuel.</summary>
      <returns>Codage XML de l'autorisation, y compris les informations d'état.</returns>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermission.Union(System.Security.IPermission)">
      <summary>Crée une autorisation qui est l’union de l’autorisation actuelle et de l’autorisation spécifiée.</summary>
      <param name="target">Autorisation à combiner avec l’autorisation actuelle. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>Nouvelle autorisation qui représente l’union de l’autorisation actuelle et de l’autorisation spécifiée.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="target" /> n'est pas <see langword="null" /> et n'est pas du même type que l'autorisation en cours.  

ou - 
Le paramètre <see cref="P:System.Security.Permissions.UrlIdentityPermission.Url" /> n'est pas une URL valide.  

ou 
Les deux autorisations ne sont pas égales et l'une n'est pas un sous-ensemble de l'autre.</exception>
      <exception cref="T:System.NotSupportedException">L’opération est ambiguë car l’autorisation représente plusieurs identités.</exception>
    </member>
    <member name="P:System.Security.Permissions.UrlIdentityPermission.Url">
      <summary>Obtient ou définit une URL représentant l'identité du code Internet.</summary>
      <returns>URL représentant l'identité du code Internet.</returns>
      <exception cref="T:System.NotSupportedException">L'URL ne peut pas être récupérée, car elle a une identité ambiguë.</exception>
    </member>
    <member name="T:System.Security.Permissions.UrlIdentityPermissionAttribute">
      <summary>Permet d’appliquer les actions de sécurité de <see cref="T:System.Security.Permissions.UrlIdentityPermission" /> au code à l’aide de la sécurité déclarative. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.UrlIdentityPermissionAttribute" /> avec le <see cref="T:System.Security.Permissions.SecurityAction" /> spécifié.</summary>
      <param name="action">Une des valeurs de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermissionAttribute.CreatePermission">
      <summary>Crée et retourne un nouveau <see cref="T:System.Security.Permissions.UrlIdentityPermission" />.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.UrlIdentityPermission" /> qui correspond à cet attribut.</returns>
    </member>
    <member name="P:System.Security.Permissions.UrlIdentityPermissionAttribute.Url">
      <summary>Obtient ou définit l'URL complète du code appelant.</summary>
      <returns>URL à faire correspondre avec l'URL spécifiée par l'hôte.</returns>
    </member>
    <member name="T:System.Security.Permissions.WebBrowserPermission">
      <summary>L’objet <see cref="T:System.Security.Permissions.WebBrowserPermission" /> contrôle la capacité à créer le contrôle WebBrowser.</summary>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.WebBrowserPermission" />.</summary>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.WebBrowserPermission" />, en spécifiant un état d’autorisation.</summary>
      <param name="state">Valeur énumérée de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.WebBrowserPermissionLevel)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.WebBrowserPermission" />, en spécifiant le niveau d’autorisation du navigateur web.</summary>
      <param name="webBrowserPermissionLevel">Valeur énumérée de <see cref="T:System.Security.Permissions.WebBrowserPermissionLevel" />.</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.Copy">
      <summary>Crée et retourne une copie identique de l’autorisation actuelle.</summary>
      <returns>Copie de l’autorisation actuelle.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruit une autorisation avec un état spécifié à partir d’un encodage XML.</summary>
      <param name="securityElement">Encodage XML à utiliser pour reconstruire l’autorisation.</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.Intersect(System.Security.IPermission)">
      <summary>Crée et retourne une autorisation qui constitue l’intersection entre l’autorisation actuelle et l’autorisation spécifiée.</summary>
      <param name="target">Autorisation à croiser avec l’autorisation actuelle. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>L'intersection de deux autorisations est une autorisation qui décrit l'état qu'elles décrivent en commun. Seule une demande qui transmet les deux autorisations d’origine est valide pour l’autorisation croisée.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Détermine si l’autorisation actuelle est un sous-ensemble de l’autorisation spécifiée.</summary>
      <param name="target">Autorisation qui doit être testée pour la relation de sous-ensemble. Cette autorisation doit être du même type que l’autorisation actuelle.</param>
      <returns>
        <see langword="true" /> si l’autorisation actuelle est un sous-ensemble de l’autorisation spécifiée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.IsUnrestricted">
      <summary>Retourne une valeur qui indique si l’autorisation actuelle est illimitée.</summary>
      <returns>
        <see langword="true" /> si la propriété <see cref="P:System.Security.Permissions.WebBrowserPermission.Level" /> a la valeur <see cref="F:System.Security.Permissions.WebBrowserPermissionLevel.Unrestricted" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.WebBrowserPermission.Level">
      <summary>Obtient ou définit la valeur actuelle du niveau d’autorisation du navigateur web.</summary>
      <returns>Valeur actuelle du niveau d’autorisation du navigateur web.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.ToXml">
      <summary>Crée un encodage XML de l’autorisation et de son état actuel.</summary>
      <returns>Codage XML de l’autorisation, y compris les informations d’état éventuelles.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.Union(System.Security.IPermission)">
      <summary>Crée une autorisation qui est l’union de l’autorisation actuelle et de l’autorisation spécifiée.</summary>
      <param name="target">Autorisation à combiner avec l’autorisation actuelle. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>Nouvelle autorisation qui représente l’union de l’autorisation actuelle et de l’autorisation spécifiée.</returns>
    </member>
    <member name="T:System.Security.Permissions.WebBrowserPermissionAttribute">
      <summary>Permet d’appliquer les actions de sécurité de <see cref="T:System.Security.Permissions.WebBrowserPermission" /> au code à l’aide de la sécurité déclarative.</summary>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.WebBrowserPermissionAttribute" /> avec le <see cref="T:System.Security.Permissions.SecurityAction" /> spécifié.</summary>
      <param name="action">Une des valeurs de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermissionAttribute.CreatePermission">
      <summary>Crée et retourne une instance de la classe <see cref="T:System.Security.Permissions.WebBrowserPermission" />.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.WebBrowserPermission" /> correspondant à la déclaration de sécurité.</returns>
    </member>
    <member name="P:System.Security.Permissions.WebBrowserPermissionAttribute.Level">
      <summary>Obtient ou définit le niveau d’autorisation du navigateur web actuel pour <see cref="T:System.Security.Permissions.WebBrowserPermissionAttribute" />.</summary>
      <returns>État du niveau d’autorisation pour le navigateur web actuel.</returns>
    </member>
    <member name="T:System.Security.Permissions.WebBrowserPermissionLevel">
      <summary>Spécifie le niveau d'autorisation pour un navigateur Web.</summary>
    </member>
    <member name="F:System.Security.Permissions.WebBrowserPermissionLevel.None">
      <summary>Un navigateur Web qui ne peut pas naviguer au sein de cadres jusqu'à HTML.</summary>
    </member>
    <member name="F:System.Security.Permissions.WebBrowserPermissionLevel.Safe">
      <summary>Un navigateur Web qui peut naviguer sans risque au sein de cadres jusqu'à HTML mais avec plusieurs restrictions.</summary>
    </member>
    <member name="F:System.Security.Permissions.WebBrowserPermissionLevel.Unrestricted">
      <summary>Un navigateur Web qui peut naviguer sans restrictions.</summary>
    </member>
    <member name="T:System.Security.Permissions.ZoneIdentityPermission">
      <summary>Définit l'autorisation d'identité pour la zone d'où vient le code. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.ZoneIdentityPermission" /> avec le <see cref="T:System.Security.Permissions.PermissionState" /> spécifié.</summary>
      <param name="state">Une des valeurs de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="state" /> n’est pas une valeur valide d’<see cref="T:System.Security.Permissions.PermissionState" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermission.#ctor(System.Security.SecurityZone)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.ZoneIdentityPermission" /> pour représenter l’identité de zone spécifiée.</summary>
      <param name="zone">Identificateur de la zone.</param>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermission.Copy">
      <summary>Crée et retourne une copie identique de l’autorisation actuelle.</summary>
      <returns>Copie de l’autorisation actuelle.</returns>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruit une autorisation avec un état spécifié à partir d’un encodage XML.</summary>
      <param name="esd">Encodage XML à utiliser pour reconstruire l’autorisation.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="esd" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="esd" /> n’est pas un élément d’autorisation valide.  

ou - 
Le numéro de version du paramètre <paramref name="esd" /> n’est pas valide.</exception>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermission.Intersect(System.Security.IPermission)">
      <summary>Crée et retourne une autorisation qui constitue l’intersection entre l’autorisation actuelle et l’autorisation spécifiée.</summary>
      <param name="target">Autorisation à croiser avec l’autorisation actuelle. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>Nouvelle autorisation qui représente l’intersection entre l’autorisation actuelle et l’autorisation spécifiée. Cette nouvelle autorisation est <see langword="null" /> si l’intersection est vide.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="target" /> n’a pas la valeur <see langword="null" /> et n’est pas du même type que l’autorisation actuelle.</exception>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Détermine si l’autorisation actuelle est un sous-ensemble de l’autorisation spécifiée.</summary>
      <param name="target">Autorisation qui doit être testée pour la relation de sous-ensemble. Cette autorisation doit être du même type que l’autorisation actuelle.</param>
      <returns>
        <see langword="true" /> si l’autorisation actuelle est un sous-ensemble de l’autorisation spécifiée ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="target" /> n’a pas la valeur <see langword="null" />, cette autorisation ne représente pas la zone de sécurité <see cref="F:System.Security.SecurityZone.NoZone" /> et l’autorisation spécifiée n’est pas égale à l’autorisation actuelle.</exception>
    </member>
    <member name="P:System.Security.Permissions.ZoneIdentityPermission.SecurityZone">
      <summary>Obtient ou définit la zone représentée par le <see cref="T:System.Security.Permissions.ZoneIdentityPermission" /> en cours.</summary>
      <returns>Une des valeurs de <see cref="T:System.Security.SecurityZone" />.</returns>
      <exception cref="T:System.ArgumentException">La valeur du paramètre n'est pas valide pour <see cref="T:System.Security.SecurityZone" />.</exception>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermission.ToXml">
      <summary>Crée un encodage XML de l’autorisation et de son état actuel.</summary>
      <returns>Codage XML de l’autorisation, y compris les informations d’état éventuelles.</returns>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermission.Union(System.Security.IPermission)">
      <summary>Crée une autorisation qui est l’union de l’autorisation actuelle et de l’autorisation spécifiée.</summary>
      <param name="target">Autorisation à combiner avec l’autorisation actuelle. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>Nouvelle autorisation qui représente l’union de l’autorisation actuelle et de l’autorisation spécifiée.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="target" /> n’a pas la valeur <see langword="null" /> et n’est pas du même type que l’autorisation actuelle.  

ou - 
Les deux autorisations ne sont pas égales et l'autorisation en cours ne représente pas la zone de sécurité <see cref="F:System.Security.SecurityZone.NoZone" />.</exception>
    </member>
    <member name="T:System.Security.Permissions.ZoneIdentityPermissionAttribute">
      <summary>Permet d’appliquer les actions de sécurité de <see cref="T:System.Security.Permissions.ZoneIdentityPermission" /> au code à l’aide de la sécurité déclarative. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.ZoneIdentityPermissionAttribute" /> avec le <see cref="T:System.Security.Permissions.SecurityAction" /> spécifié.</summary>
      <param name="action">Une des valeurs de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermissionAttribute.CreatePermission">
      <summary>Crée et retourne un nouveau <see cref="T:System.Security.Permissions.ZoneIdentityPermission" />.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.ZoneIdentityPermission" /> qui correspond à cet attribut.</returns>
    </member>
    <member name="P:System.Security.Permissions.ZoneIdentityPermissionAttribute.Zone">
      <summary>Obtient ou définit l'appartenance (membership) dans la zone de contenu spécifiée par la valeur de propriété.</summary>
      <returns>Une des valeurs de l'objet <see cref="T:System.Security.SecurityZone" />.</returns>
    </member>
    <member name="T:System.Security.Policy.AllMembershipCondition">
      <summary>Représente une condition d'appartenance qui correspond à tout le code. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Policy.AllMembershipCondition" />.</summary>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary>Détermine si la preuve spécifiée remplit la condition d'appartenance.</summary>
      <param name="evidence">Ensemble de preuves sur lequel le test doit être effectué.</param>
      <returns>Toujours <see langword="true" />.</returns>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.Copy">
      <summary>Crée une copie équivalente de la condition d'appartenance.</summary>
      <returns>Nouvelle copie identique de la condition d'appartenance actuelle.</returns>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.Equals(System.Object)">
      <summary>Détermine si la condition d'appartenance spécifiée est <see cref="T:System.Security.Policy.AllMembershipCondition" />.</summary>
      <param name="o">Objet à comparer à <see cref="T:System.Security.Policy.AllMembershipCondition" />.</param>
      <returns>
        <see langword="true" /> si la condition d'appartenance spécifiée est <see cref="T:System.Security.Policy.AllMembershipCondition" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruit un objet de sécurité avec un état spécifié à partir d’un encodage XML.</summary>
      <param name="e">Encodage XML à utiliser pour reconstruire l’objet de sécurité.</param>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>Reconstruit un objet de sécurité avec un état spécifié à partir d’un encodage XML.</summary>
      <param name="e">Encodage XML à utiliser pour reconstruire l’objet de sécurité.</param>
      <param name="level">Contexte de niveau de stratégie utilisé pour résoudre des références de jeu d'autorisations nommé.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="e" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="e" /> n'est pas un élément de condition d'appartenance valide.</exception>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.GetHashCode">
      <summary>Obtient le code de hachage pour la condition d'appartenance actuelle.</summary>
      <returns>Code de hachage pour la condition d'appartenance actuelle.</returns>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.ToString">
      <summary>Crée et retourne une chaîne représentant la condition d'appartenance.</summary>
      <returns>Représentation de la condition d'appartenance.</returns>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.ToXml">
      <summary>Crée un codage XML de l’objet de sécurité et de son état actuel.</summary>
      <returns>Encodage XML de l’objet de sécurité, y compris les informations d’état éventuelles.</returns>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>Crée un codage XML de l'objet de sécurité et de son état actuel avec le <see cref="T:System.Security.Policy.PolicyLevel" /> spécifié.</summary>
      <param name="level">Contexte de niveau de stratégie utilisé pour résoudre des références de jeu d'autorisations nommé.</param>
      <returns>Encodage XML de l’objet de sécurité, y compris les informations d’état éventuelles.</returns>
    </member>
    <member name="T:System.Security.Policy.ApplicationDirectory">
      <summary>Fournit le répertoire de l'application comme preuve pour une évaluation de stratégie. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectory.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Policy.ApplicationDirectory" />.</summary>
      <param name="name">Chemin d'accès du répertoire de l'application.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="name" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectory.Copy">
      <summary>Crée une nouvelle copie de <see cref="T:System.Security.Policy.ApplicationDirectory" />.</summary>
      <returns>Nouvelle copie identique de <see cref="T:System.Security.Policy.ApplicationDirectory" />.</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationDirectory.Directory">
      <summary>Obtient le chemin d'accès du répertoire de l'application.</summary>
      <returns>Chemin d'accès du répertoire de l'application.</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectory.Equals(System.Object)">
      <summary>Détermine si des instances du même type d'un objet de preuve sont équivalentes.</summary>
      <param name="o">Objet du même type que l'objet de preuve actuel.</param>
      <returns>
        <see langword="true" /> si les deux instances sont équivalentes ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectory.GetHashCode">
      <summary>Obtient le code de hachage du dossier de l'application en cours.</summary>
      <returns>Code de hachage du dossier de l'application en cours.</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectory.ToString">
      <summary>Obtient une chaîne représentant l'état de l'objet de preuve <see cref="T:System.Security.Policy.ApplicationDirectory" />.</summary>
      <returns>Représentation de l'état de l'objet de preuve <see cref="T:System.Security.Policy.ApplicationDirectory" />.</returns>
    </member>
    <member name="T:System.Security.Policy.ApplicationDirectoryMembershipCondition">
      <summary>Détermine si un assembly appartient à un groupe de codes en testant son répertoire d'application. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Policy.ApplicationDirectoryMembershipCondition" />.</summary>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary>Détermine si la condition d'appartenance est remplie par la preuve spécifiée.</summary>
      <param name="evidence">Ensemble de preuves sur lequel le test doit être effectué.</param>
      <returns>
        <see langword="true" /> si la preuve spécifiée remplit la condition d'appartenance ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.Copy">
      <summary>Crée une copie équivalente de la condition d'appartenance.</summary>
      <returns>Nouvelle copie identique de la condition d'appartenance actuelle.</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.Equals(System.Object)">
      <summary>Détermine si la condition d'appartenance spécifiée est <see cref="T:System.Security.Policy.ApplicationDirectoryMembershipCondition" />.</summary>
      <param name="o">Objet à comparer à <see cref="T:System.Security.Policy.ApplicationDirectoryMembershipCondition" />.</param>
      <returns>
        <see langword="true" /> si la condition d'appartenance spécifiée est <see cref="T:System.Security.Policy.ApplicationDirectoryMembershipCondition" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruit un objet de sécurité avec un état spécifié à partir d’un encodage XML.</summary>
      <param name="e">Encodage XML à utiliser pour reconstruire l’objet de sécurité.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="e" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="e" /> n'est pas un élément valide de condition d'appartenance à un répertoire d'application.</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>Reconstruit un objet de sécurité avec un état spécifié à partir d’un encodage XML.</summary>
      <param name="e">Encodage XML à utiliser pour reconstruire l’objet de sécurité.</param>
      <param name="level">Contexte de niveau de stratégie utilisé pour résoudre des références de jeu d'autorisations nommé.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="e" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="e" /> n'est pas un élément valide de condition d'appartenance à un répertoire d'application.</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.GetHashCode">
      <summary>Obtient le code de hachage pour la condition d'appartenance actuelle.</summary>
      <returns>Code de hachage pour la condition d'appartenance actuelle.</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.ToString">
      <summary>Crée et retourne une chaîne représentant la condition d'appartenance.</summary>
      <returns>Chaîne représentant l'état de la condition d'appartenance.</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.ToXml">
      <summary>Crée un codage XML de l’objet de sécurité et de son état actuel.</summary>
      <returns>Encodage XML de l’objet de sécurité, y compris les informations d’état éventuelles.</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>Crée un codage XML de l'objet de sécurité et de son état actuel avec le <see cref="T:System.Security.Policy.PolicyLevel" /> spécifié.</summary>
      <param name="level">Contexte de niveau de stratégie utilisé pour résoudre des références de jeu d'autorisations nommé.</param>
      <returns>Encodage XML de l’objet de sécurité, y compris les informations d’état éventuelles.</returns>
    </member>
    <member name="T:System.Security.Policy.ApplicationTrust">
      <summary>Encapsule des décisions de sécurité à propos d'une application. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrust.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Policy.ApplicationTrust" />.</summary>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrust.#ctor(System.ApplicationIdentity)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Policy.ApplicationTrust" /> avec un <see cref="T:System.ApplicationIdentity" />.</summary>
      <param name="identity">
        <see cref="T:System.ApplicationIdentity" /> qui identifie une application de manière unique.</param>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrust.#ctor(System.Security.PermissionSet,System.Collections.Generic.IEnumerable{System.Security.Policy.StrongName})">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Policy.ApplicationTrust" /> en utilisant le jeu accordé et la collection d'assemblys de confiance totale fournis.</summary>
      <param name="defaultGrantSet">Jeu d'autorisations par défaut accordé à tous les assemblys qui n'ont pas d'attributions spécifiques.</param>
      <param name="fullTrustAssemblies">Tableau des noms forts qui représentent les assemblys à considérer comme entièrement fiables dans un domaine d'application.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fullTrustAssemblies" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="fullTrustAssemblies" /> contient un assembly qui n'a pas de <see cref="T:System.Security.Policy.StrongName" />.</exception>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrust.ApplicationIdentity">
      <summary>Obtient ou définit l'identité de l'application à laquelle appartient l'objet d'approbation.</summary>
      <returns>
        <see cref="T:System.ApplicationIdentity" /> de l'objet d'approbation de l'application.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.ApplicationIdentity" /> ne peut pas être défini, car il a une valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrust.DefaultGrantSet">
      <summary>Obtient ou définit l'instruction de stratégie qui définit le jeu d'autorisations par défaut.</summary>
      <returns>
        <see cref="T:System.Security.Policy.PolicyStatement" /> qui décrit les autorisations accordées par défaut.</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrust.ExtraInfo">
      <summary>Obtient ou définit les informations supplémentaires sur la sécurité de l'application.</summary>
      <returns>Objet contenant des informations supplémentaires sur la sécurité de l'application.</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrust.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruit à partir d'un codage XML un objet <see cref="T:System.Security.Policy.ApplicationTrust" /> à un état donné.</summary>
      <param name="element">Codage XML à utiliser pour reconstruire l'objet <see cref="T:System.Security.Policy.ApplicationTrust" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le codage XML utilisé pour <paramref name="element" /> n'est pas valide.</exception>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrust.FullTrustAssemblies">
      <summary>Obtient la liste des assemblys de confiance totale pour ce niveau de confiance de l'application.</summary>
      <returns>Liste des assemblys de confiance totale.</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun">
      <summary>Obtient ou définit une valeur qui indique si l'application a les autorisations requises et si son exécution est approuvée.</summary>
      <returns>
        <see langword="true" /> si l'exécution de l'application est approuvée ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrust.Persist">
      <summary>Obtient ou définit une valeur qui indique si les informations sur l'approbation de l'application sont persistantes.</summary>
      <returns>
        <see langword="true" /> si les informations sur l'approbation de l'application sont persistantes ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrust.ToXml">
      <summary>Crée un codage XML de l'objet <see cref="T:System.Security.Policy.ApplicationTrust" /> et de son état actuel.</summary>
      <returns>Encodage XML de l’objet de sécurité, y compris les informations d’état éventuelles.</returns>
    </member>
    <member name="T:System.Security.Policy.ApplicationTrustCollection">
      <summary>Représente une collection d'objets <see cref="T:System.Security.Policy.ApplicationTrust" />. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.Add(System.Security.Policy.ApplicationTrust)">
      <summary>Ajoute un élément à la collection.</summary>
      <param name="trust">Objet <see cref="T:System.Security.Policy.ApplicationTrust" /> à ajouter.</param>
      <returns>Index au niveau duquel le nouvel élément a été inséré.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="trust" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La propriété <see cref="P:System.Security.Policy.ApplicationTrust.ApplicationIdentity" /> du <see cref="T:System.Security.Policy.ApplicationTrust" /> spécifiée dans <paramref name="trust" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.AddRange(System.Security.Policy.ApplicationTrust[])">
      <summary>Copie les éléments du tableau <see cref="T:System.Security.Policy.ApplicationTrust" /> spécifié à la fin de la collection.</summary>
      <param name="trusts">Tableau de type <see cref="T:System.Security.Policy.ApplicationTrust" /> contenant les objets à ajouter à la collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="trusts" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La propriété <see cref="P:System.Security.Policy.ApplicationTrust.ApplicationIdentity" /> d'un <see cref="T:System.Security.Policy.ApplicationTrust" /> spécifiée dans <paramref name="trust" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.AddRange(System.Security.Policy.ApplicationTrustCollection)">
      <summary>Copie les éléments du <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> spécifié à la fin de la collection.</summary>
      <param name="trusts">
        <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> contenant les objets à ajouter à la collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="trusts" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La propriété <see cref="P:System.Security.Policy.ApplicationTrust.ApplicationIdentity" /> d'un <see cref="T:System.Security.Policy.ApplicationTrust" /> spécifiée dans <paramref name="trust" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.Clear">
      <summary>Supprime toutes les approbations d'application de la collection.</summary>
      <exception cref="T:System.ArgumentException">La propriété <see cref="P:System.Security.Policy.ApplicationTrust.ApplicationIdentity" /> d'un élément de la collection est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.CopyTo(System.Security.Policy.ApplicationTrust[],System.Int32)">
      <summary>Copie l’ensemble de la collection dans un tableau unidimensionnel compatible, en partant de l’index spécifié du tableau cible.</summary>
      <param name="array">Tableau unidimensionnel de type <see cref="T:System.Security.Policy.ApplicationTrust" />, qui constitue la destination des éléments copiés à partir de la collection actuelle.</param>
      <param name="index">Index de base zéro dans l'<paramref name="array" /> à partir duquel la copie commence.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à la limite inférieure d’<paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> est multidimensionnel.  

ou - 
Le nombre d'éléments de <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> est supérieur à la quantité d'espace disponible entre <paramref name="index" /> et la fin du <paramref name="array" /> de destination.</exception>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrustCollection.Count">
      <summary>Obtient le nombre d'éléments de la collection.</summary>
      <returns>Nombre d'éléments contenus dans la collection.</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.Find(System.ApplicationIdentity,System.Security.Policy.ApplicationVersionMatch)">
      <summary>Obtient les approbations d'application qui, dans la collection, correspondent à l'identité d'application spécifiée.</summary>
      <param name="applicationIdentity">Objet <see cref="T:System.ApplicationIdentity" /> qui décrit l'application à rechercher.</param>
      <param name="versionMatch">Une des valeurs de l'objet <see cref="T:System.Security.Policy.ApplicationVersionMatch" />.</param>
      <returns>
        <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> qui contient tous les objets <see cref="T:System.Security.Policy.ApplicationTrust" /> correspondants.</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.GetEnumerator">
      <summary>Retourne un objet pouvant être utilisé pour itérer sur la collection.</summary>
      <returns>
        <see cref="T:System.Security.Policy.ApplicationTrustEnumerator" /> pouvant être utilisé pour itérer sur la collection.</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrustCollection.IsSynchronized">
      <summary>Obtient une valeur indiquant si l’accès à la collection est synchronisé (thread-safe).</summary>
      <returns>
        <see langword="false" /> dans tous les cas.</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrustCollection.Item(System.Int32)">
      <summary>Obtient l'objet <see cref="T:System.Security.Policy.ApplicationTrust" /> situé à l'index spécifié dans la collection.</summary>
      <param name="index">Index de base zéro de l'objet dans la collection.</param>
      <returns>Objet <see cref="T:System.Security.Policy.ApplicationTrust" /> à l’index spécifié dans la collection.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est supérieur ou égal au nombre d'objets de la collection.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="index" /> est un nombre négatif.</exception>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrustCollection.Item(System.String)">
      <summary>Obtient l'objet <see cref="T:System.Security.Policy.ApplicationTrust" /> pour l'application spécifiée.</summary>
      <param name="appFullName">Nom complet de l'application.</param>
      <returns>Objet <see cref="T:System.Security.Policy.ApplicationTrust" /> de l'application spécifiée ou <see langword="null" /> si l'objet est introuvable.</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.Remove(System.ApplicationIdentity,System.Security.Policy.ApplicationVersionMatch)">
      <summary>Supprime de la collection tous les objets d'approbation d'application qui correspondent aux critères spécifiés.</summary>
      <param name="applicationIdentity">
        <see cref="T:System.ApplicationIdentity" /> de l'objet <see cref="T:System.Security.Policy.ApplicationTrust" /> à supprimer.</param>
      <param name="versionMatch">Une des valeurs de <see cref="T:System.Security.Policy.ApplicationVersionMatch" />.</param>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.Remove(System.Security.Policy.ApplicationTrust)">
      <summary>Supprime de la collection l'approbation d'application spécifiée.</summary>
      <param name="trust">Objet <see cref="T:System.Security.Policy.ApplicationTrust" /> à supprimer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="trust" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La propriété <see cref="P:System.Security.Policy.ApplicationTrust.ApplicationIdentity" /> de l'objet <see cref="T:System.Security.Policy.ApplicationTrust" /> spécifié par <paramref name="trust" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.RemoveRange(System.Security.Policy.ApplicationTrust[])">
      <summary>Supprime de la collection les objets d'approbation de l'application contenus dans le tableau spécifié.</summary>
      <param name="trusts">Tableau unidimensionnel de type <see cref="T:System.Security.Policy.ApplicationTrust" /> qui contient les éléments à supprimer de la collection en cours.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="trusts" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.RemoveRange(System.Security.Policy.ApplicationTrustCollection)">
      <summary>Supprime de la collection les objets d'approbation d'application se trouvant dans la collection spécifiée.</summary>
      <param name="trusts">
        <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> qui contient les éléments à supprimer de la collection en cours.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="trusts" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrustCollection.SyncRoot">
      <summary>Obtient un objet qui peut être utilisé pour synchroniser l’accès à la collection.</summary>
      <returns>Objet utilisé pour synchroniser l'accès à la collection.</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copie les éléments de <see cref="T:System.Collections.ICollection" /> dans le <see cref="T:System.Array" /> spécifié, à l'index <see cref="T:System.Array" /> spécifié.</summary>
      <param name="array">
        <see cref="T:System.Array" /> unidimensionnel qui constitue la destination des éléments copiés à partir de la <see cref="T:System.Collections.ICollection" />. <see cref="T:System.Array" /> doit avoir une indexation de base zéro.</param>
      <param name="index">Index de base zéro dans l'<paramref name="array" /> à partir duquel la copie commence.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à zéro.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> est multidimensionnel.  

ou - 
Le nombre d’éléments dans le <see cref="T:System.Collections.ICollection" /> source est supérieur à la quantité d’espace disponible entre <paramref name="index" /> et la fin du <paramref name="array" /> de destination.</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Retourne un énumérateur qui itère au sein de la collection.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> qui peut être utilisé pour itérer au sein de la collection.</returns>
    </member>
    <member name="T:System.Security.Policy.ApplicationTrustEnumerator">
      <summary>Représente l’énumérateur pour les objets <see cref="T:System.Security.Policy.ApplicationTrust" /> de la collection <see cref="T:System.Security.Policy.ApplicationTrustCollection" />.</summary>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrustEnumerator.Current">
      <summary>Obtient l'objet <see cref="T:System.Security.Policy.ApplicationTrust" /> en cours dans la collection <see cref="T:System.Security.Policy.ApplicationTrustCollection" />.</summary>
      <returns>
        <see cref="T:System.Security.Policy.ApplicationTrust" /> actuel de la <see cref="T:System.Security.Policy.ApplicationTrustCollection" />.</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustEnumerator.MoveNext">
      <summary>Passe à l'élément suivant dans la collection <see cref="T:System.Security.Policy.ApplicationTrustCollection" />.</summary>
      <returns>
        <see langword="true" /> si l'énumérateur a pu avancer jusqu'à l'élément suivant ; <see langword="false" /> si l'énumérateur a dépassé la fin de la collection.</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustEnumerator.Reset">
      <summary>Rétablit l'énumérateur au début de la collection <see cref="T:System.Security.Policy.ApplicationTrustCollection" />.</summary>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrustEnumerator.System#Collections#IEnumerator#Current">
      <summary>Obtient le <see cref="T:System.Object" /> en cours dans la collection <see cref="T:System.Security.Policy.ApplicationTrustCollection" />.</summary>
      <returns>
        <see cref="T:System.Object" /> actuel de la <see cref="T:System.Security.Policy.ApplicationTrustCollection" />.</returns>
    </member>
    <member name="T:System.Security.Policy.ApplicationVersionMatch">
      <summary>Spécifie comment comparer les versions d'une application lors de la localisation des approbations d'une collection.</summary>
    </member>
    <member name="F:System.Security.Policy.ApplicationVersionMatch.MatchAllVersions">
      <summary>Correspondance avec toutes les versions.</summary>
    </member>
    <member name="F:System.Security.Policy.ApplicationVersionMatch.MatchExactVersion">
      <summary>Correspondance avec une version précise.</summary>
    </member>
    <member name="T:System.Security.Policy.CodeConnectAccess">
      <summary>Spécifie l'accès aux ressources réseau accordé au code.</summary>
    </member>
    <member name="M:System.Security.Policy.CodeConnectAccess.#ctor(System.String,System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Policy.CodeConnectAccess" />.</summary>
      <param name="allowScheme">Modèle URI représenté par l'instance actuelle.</param>
      <param name="allowPort">Port représenté par l'instance actuelle.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="allowScheme" /> est <see langword="null" />.  

ou - 
Le <paramref name="allowScheme" /> est une chaîne vide ("").  

ou - 
<paramref name="allowScheme" /> contient des caractères qui ne sont pas autorisés dans les modèles.  

ou - 
<paramref name="allowPort" /> est inférieur à 0.  


ou 
 <paramref name="allowPort" /> est supérieur à 65 535.</exception>
    </member>
    <member name="F:System.Security.Policy.CodeConnectAccess.AnyScheme">
      <summary>Contient la valeur de chaîne qui représente le modèle générique.</summary>
    </member>
    <member name="M:System.Security.Policy.CodeConnectAccess.CreateAnySchemeAccess(System.Int32)">
      <summary>Retourne une instance de <see cref="T:System.Security.Policy.CodeConnectAccess" /> qui représente l'accès au port spécifié à l'aide de n'importe quel modèle.</summary>
      <param name="allowPort">Port représenté par l'instance retournée.</param>
      <returns>Instance de <see cref="T:System.Security.Policy.CodeConnectAccess" /> pour le port spécifié.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="allowPort" /> est inférieur à 0.  

ou - 
<paramref name="allowPort" /> est supérieur à 65 535.</exception>
    </member>
    <member name="M:System.Security.Policy.CodeConnectAccess.CreateOriginSchemeAccess(System.Int32)">
      <summary>Retourne une instance de <see cref="T:System.Security.Policy.CodeConnectAccess" /> qui représente l'accès au port spécifié à l'aide du modèle de code d'origine.</summary>
      <param name="allowPort">Port représenté par l'instance retournée.</param>
      <returns>Instance de <see cref="T:System.Security.Policy.CodeConnectAccess" /> pour le port spécifié.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="allowPort" /> est inférieur à 0.  

ou - 
<paramref name="allowPort" /> est supérieur à 65 535.</exception>
    </member>
    <member name="F:System.Security.Policy.CodeConnectAccess.DefaultPort">
      <summary>Contient la valeur utilisée pour représenter le port par défaut.</summary>
    </member>
    <member name="M:System.Security.Policy.CodeConnectAccess.Equals(System.Object)">
      <summary>Retourne une valeur qui indique si deux objets <see cref="T:System.Security.Policy.CodeConnectAccess" /> représentent le même modèle et le même port.</summary>
      <param name="o">Objet à comparer à l'objet <see cref="T:System.Security.Policy.CodeConnectAccess" /> actuel.</param>
      <returns>
        <see langword="true" /> si les deux objets représentent le même modèle et le même port ; <see langword="false" /> dans le cas contraire.</returns>
    </member>
    <member name="M:System.Security.Policy.CodeConnectAccess.GetHashCode">
      <summary>Sert de fonction de hachage pour un type particulier.</summary>
      <returns>Code de hachage du <see cref="T:System.Object" /> actuel.</returns>
    </member>
    <member name="F:System.Security.Policy.CodeConnectAccess.OriginPort">
      <summary>Contient la valeur utilisée pour représenter la valeur de port dans l'URI dont provient le code.</summary>
    </member>
    <member name="F:System.Security.Policy.CodeConnectAccess.OriginScheme">
      <summary>Contient la valeur utilisée pour représenter le modèle dans l'URL dont provient le code.</summary>
    </member>
    <member name="P:System.Security.Policy.CodeConnectAccess.Port">
      <summary>Obtient le port représenté par l'instance actuelle.</summary>
      <returns>Valeur <see cref="T:System.Int32" /> qui identifie un port d'ordinateur utilisé conjointement avec la propriété <see cref="P:System.Security.Policy.CodeConnectAccess.Scheme" />.</returns>
    </member>
    <member name="P:System.Security.Policy.CodeConnectAccess.Scheme">
      <summary>Obtient le modèle URI représenté par l'instance actuelle.</summary>
      <returns>
        <see cref="T:System.String" /> qui identifie un modèle URI, converti en minuscules.</returns>
    </member>
    <member name="T:System.Security.Policy.CodeGroup">
      <summary>Représente la classe de base abstraite dont toutes les implémentations de groupes de codes doivent dériver.</summary>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)">
      <summary>Initialise une nouvelle instance de <see cref="T:System.Security.Policy.CodeGroup" />.</summary>
      <param name="membershipCondition">Condition d'appartenance qui teste les preuves pour déterminer si ce groupe de codes applique une stratégie.</param>
      <param name="policy">Instruction de stratégie pour le groupe de codes sous la forme d'un jeu d'autorisations et d'attributs pour attribuer du code correspondant à la condition d'appartenance.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="membershipCondition" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le type du paramètre <paramref name="membershipCondition" /> n'est pas valide.  

ou - 
Le type du paramètre <paramref name="policy" /> n'est pas valide.</exception>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.AddChild(System.Security.Policy.CodeGroup)">
      <summary>Ajoute un groupe de codes enfant au groupe de codes actuel.</summary>
      <param name="group">Groupe de codes à ajouter en tant qu'enfant. Ce nouveau groupe de codes enfant est ajouté à la fin de la liste.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="group" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="group" /> n'est pas un groupe de codes valide.</exception>
    </member>
    <member name="P:System.Security.Policy.CodeGroup.AttributeString">
      <summary>Obtient une chaîne représentant les attributs de l'instruction de stratégie pour le groupe de codes.</summary>
      <returns>Chaîne représentant les attributs de l'instruction de stratégie pour le groupe de codes.</returns>
    </member>
    <member name="P:System.Security.Policy.CodeGroup.Children">
      <summary>Obtient ou définit une liste triée des groupes de codes enfants d'un groupe de codes.</summary>
      <returns>Liste de groupes de codes enfants.</returns>
      <exception cref="T:System.ArgumentNullException">Une tentative d'affecter <see langword="null" /> à cette propriété est effectuée.</exception>
      <exception cref="T:System.ArgumentException">Une tentative d'affectation de valeur à la propriété a lieu avec une liste d'enfants qui ne sont pas des objets <see cref="T:System.Security.Policy.CodeGroup" />.</exception>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.Copy">
      <summary>En cas de substitution dans une classe dérivée, effectue une copie complète du groupe de codes actuel.</summary>
      <returns>Copie équivalente du groupe de codes actuel, incluant ses conditions d'appartenance et ses groupes de codes enfants.</returns>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>En cas de substitution dans une classe dérivée, sérialise des propriétés et un état interne spécifique à un groupe de codes dérivé et ajoute la sérialisation au <see cref="T:System.Security.SecurityElement" /> spécifié.</summary>
      <param name="element">Codage XML auquel ajouter la sérialisation.</param>
      <param name="level">Niveau de stratégie dans lequel le groupe de codes existe.</param>
    </member>
    <member name="P:System.Security.Policy.CodeGroup.Description">
      <summary>Obtient ou définit la description du groupe de codes.</summary>
      <returns>Description du groupe de codes.</returns>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.Equals(System.Object)">
      <summary>Détermine si le groupe de codes spécifié est équivalent au groupe de codes actuel.</summary>
      <param name="o">Groupe de codes à comparer avec le groupe de codes actuel.</param>
      <returns>
        <see langword="true" /> si le groupe de codes spécifié est équivalent au groupe de codes actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.Equals(System.Security.Policy.CodeGroup,System.Boolean)">
      <summary>Détermine si le groupe de codes spécifié est équivalent au groupe de codes actuel, en vérifiant également les groupes de codes enfants, si cela est spécifié.</summary>
      <param name="cg">Groupe de codes à comparer avec le groupe de codes actuel.</param>
      <param name="compareChildren">
        <see langword="true" /> pour comparer des groupes de codes enfants, également ; sinon, <see langword="false" />.</param>
      <returns>
        <see langword="true" /> si le groupe de codes spécifié est équivalent au groupe de codes actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruit un objet de sécurité avec un état donné à partir d'un codage XML.</summary>
      <param name="e">Encodage XML à utiliser pour reconstruire l’objet de sécurité.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="e" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>Reconstruit un objet de sécurité avec un état et un niveau de stratégie donnés à partir d'un codage XML.</summary>
      <param name="e">Encodage XML à utiliser pour reconstruire l’objet de sécurité.</param>
      <param name="level">Niveau de stratégie dans lequel le groupe de codes existe.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="e" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.GetHashCode">
      <summary>Obtient le code de hachage du groupe de codes actuel.</summary>
      <returns>Code de hachage du groupe de codes actuel.</returns>
    </member>
    <member name="P:System.Security.Policy.CodeGroup.MembershipCondition">
      <summary>Obtient ou définit la condition d'appartenance du groupe de codes.</summary>
      <returns>Condition d'appartenance qui détermine à quelle preuve le groupe de codes est applicable.</returns>
      <exception cref="T:System.ArgumentNullException">Une tentative d'affecter <see langword="null" /> à ce paramètre est effectuée.</exception>
    </member>
    <member name="P:System.Security.Policy.CodeGroup.MergeLogic">
      <summary>En cas de substitution dans une classe dérivée, obtient la logique de fusion pour le groupe de codes.</summary>
      <returns>Description de la logique de fusion pour le groupe de codes.</returns>
    </member>
    <member name="P:System.Security.Policy.CodeGroup.Name">
      <summary>Obtient ou définit le nom du groupe de codes.</summary>
      <returns>Nom du groupe de codes.</returns>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>En cas de substitution dans une classe dérivée, reconstruit des propriétés et un état interne spécifique à un groupe de codes dérivé du <see cref="T:System.Security.SecurityElement" /> spécifié.</summary>
      <param name="e">Encodage XML à utiliser pour reconstruire l’objet de sécurité.</param>
      <param name="level">Niveau de stratégie dans lequel le groupe de codes existe.</param>
    </member>
    <member name="P:System.Security.Policy.CodeGroup.PermissionSetName">
      <summary>Obtient le nom du jeu d'autorisations nommé pour le groupe de codes.</summary>
      <returns>Nom d'un jeu d'autorisations nommé du niveau de stratégie.</returns>
    </member>
    <member name="P:System.Security.Policy.CodeGroup.PolicyStatement">
      <summary>Obtient ou définit l'instruction de stratégie associée au groupe de codes.</summary>
      <returns>Instruction de stratégie pour le groupe de codes.</returns>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.RemoveChild(System.Security.Policy.CodeGroup)">
      <summary>Supprime le groupe de codes enfants spécifié.</summary>
      <param name="group">Groupe de codes à supprimer en tant qu'enfant.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="group" /> n'est pas un groupe de codes enfant immédiat du groupe de codes actuel.</exception>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.Resolve(System.Security.Policy.Evidence)">
      <summary>En cas de substitution dans une classe dérivée, résout la stratégie du groupe de codes et de ses descendants pour un jeu de preuves.</summary>
      <param name="evidence">Preuve pour l'assembly.</param>
      <returns>Instruction de stratégie comprenant les autorisations accordées par le groupe de codes avec des attributs facultatifs ou <see langword="null" /> si le groupe de codes ne s'applique pas (la condition d'appartenance ne correspond pas à la preuve spécifiée).</returns>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
      <summary>En cas de substitution dans une classe dérivée, résout des groupes de codes correspondants.</summary>
      <param name="evidence">Preuve pour l'assembly.</param>
      <returns>
        <see cref="T:System.Security.Policy.CodeGroup" /> qui est la racine de l'arborescence des groupes de codes correspondants.</returns>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.ToXml">
      <summary>Crée un codage XML de l’objet de sécurité et de son état actuel.</summary>
      <returns>Encodage XML de l’objet de sécurité, y compris les informations d’état éventuelles.</returns>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>Crée un codage XML de l'objet de sécurité, de son état actuel et du niveau de stratégie dans lequel le code existe.</summary>
      <param name="level">Niveau de stratégie dans lequel le groupe de codes existe.</param>
      <returns>Encodage XML de l’objet de sécurité, y compris les informations d’état éventuelles.</returns>
    </member>
    <member name="T:System.Security.Policy.Evidence">
      <summary>Définit l'ensemble d'informations qui constitue une entrée pour les décisions de stratégie de sécurité. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Policy.Evidence.#ctor">
      <summary>Initialise une nouvelle instance vide de la classe <see cref="T:System.Security.Policy.Evidence" />.</summary>
    </member>
    <member name="M:System.Security.Policy.Evidence.#ctor(System.Object[],System.Object[])">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Policy.Evidence" /> à partir de plusieurs ensembles de preuves d'hôte et d'assembly.</summary>
      <param name="hostEvidence">Preuve d'hôte à partir de laquelle la nouvelle instance doit être créée.</param>
      <param name="assemblyEvidence">Preuve d'assembly à partir de laquelle la nouvelle instance doit être créée.</param>
    </member>
    <member name="M:System.Security.Policy.Evidence.#ctor(System.Security.Policy.Evidence)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Policy.Evidence" /> à partir d'une copie partielle d'une instance existante.</summary>
      <param name="evidence">Instance <see cref="T:System.Security.Policy.Evidence" /> à partir de laquelle la nouvelle instance doit être créée. Cette instance n'est pas une copie complète.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="evidence" /> n'est pas une instance valide de <see cref="T:System.Security.Policy.Evidence" />.</exception>
    </member>
    <member name="M:System.Security.Policy.Evidence.#ctor(System.Security.Policy.EvidenceBase[],System.Security.Policy.EvidenceBase[])">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Policy.Evidence" /> à partir de plusieurs ensembles de preuves d'hôte et d'assembly.</summary>
      <param name="hostEvidence">Preuve d'hôte à partir de laquelle la nouvelle instance doit être créée.</param>
      <param name="assemblyEvidence">Preuve d'assembly à partir de laquelle la nouvelle instance doit être créée.</param>
    </member>
    <member name="M:System.Security.Policy.Evidence.AddAssembly(System.Object)">
      <summary>Ajoute la preuve d'assembly spécifiée à l'ensemble de preuves.</summary>
      <param name="id">Tout objet de preuve.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="id" /> n'est pas sérialisable.</exception>
    </member>
    <member name="M:System.Security.Policy.Evidence.AddAssemblyEvidence``1(``0)">
      <summary>Ajoute un objet de preuve du type spécifié à la liste des preuves fournie par l'assembly.</summary>
      <param name="evidence">Preuve d'assembly à ajouter.</param>
      <typeparam name="T">Type de l'objet dans <paramref name="evidence" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="evidence" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Une preuve de type <paramref name="T" /> apparaît déjà dans la liste.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="evidence" /> n'est pas sérialisable.</exception>
    </member>
    <member name="M:System.Security.Policy.Evidence.AddHost(System.Object)">
      <summary>Ajoute la preuve spécifiée fournie par l'hôte à l'ensemble de preuves.</summary>
      <param name="id">Tout objet de preuve.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="id" /> n'est pas sérialisable.</exception>
    </member>
    <member name="M:System.Security.Policy.Evidence.AddHostEvidence``1(``0)">
      <summary>Ajoute la preuve d'hôte du type spécifié à la collection de preuves d'hôte.</summary>
      <param name="evidence">Preuve d'hôte à ajouter.</param>
      <typeparam name="T">Type de l'objet dans <paramref name="evidence" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="evidence" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Une preuve de type <paramref name="T" /> apparaît déjà dans la liste.</exception>
    </member>
    <member name="M:System.Security.Policy.Evidence.Clear">
      <summary>Supprime la preuve d'hôte et d'assembly de l'ensemble de preuves.</summary>
    </member>
    <member name="M:System.Security.Policy.Evidence.Clone">
      <summary>Retourne une copie de cet objet de preuve.</summary>
      <returns>Copie de cet objet de preuve.</returns>
    </member>
    <member name="M:System.Security.Policy.Evidence.CopyTo(System.Array,System.Int32)">
      <summary>Copie des objets de preuve dans <see cref="T:System.Array" />.</summary>
      <param name="array">Tableau cible vers lequel les objets de preuve doivent être copiés.</param>
      <param name="index">Position de base zéro dans le tableau vers lequel commencer à copier des objets de preuve.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est en dehors de la plage du tableau cible.</exception>
    </member>
    <member name="P:System.Security.Policy.Evidence.Count">
      <summary>Obtient le nombre d'objets de preuve présents dans l'ensemble de preuves.</summary>
      <returns>Nombre d'objets de preuve présents dans l'ensemble de preuves.</returns>
    </member>
    <member name="M:System.Security.Policy.Evidence.GetAssemblyEnumerator">
      <summary>Énumère les preuves fournies par l'assembly.</summary>
      <returns>Énumérateur pour les preuves ajoutées par la méthode <see cref="M:System.Security.Policy.Evidence.AddAssembly(System.Object)" />.</returns>
    </member>
    <member name="M:System.Security.Policy.Evidence.GetAssemblyEvidence``1">
      <summary>Obtient la preuve d'assembly du type spécifié à partir de la collection.</summary>
      <typeparam name="T">Type de la preuve à obtenir.</typeparam>
      <returns>Preuve de type <paramref name="T" /> dans la collection de preuves d'assembly.</returns>
    </member>
    <member name="M:System.Security.Policy.Evidence.GetEnumerator">
      <summary>Énumère toutes les preuves figurant dans l'ensemble, c'est-à-dire celles fournies par l'hôte comme celles fournies par l'assembly.</summary>
      <returns>Énumérateur pour les preuves ajoutées par la méthode <see cref="M:System.Security.Policy.Evidence.AddHost(System.Object)" /> et la méthode <see cref="M:System.Security.Policy.Evidence.AddAssembly(System.Object)" />.</returns>
    </member>
    <member name="M:System.Security.Policy.Evidence.GetHostEnumerator">
      <summary>Énumère les preuves fournies par l'hôte.</summary>
      <returns>Énumérateur pour les preuves ajoutées par la méthode <see cref="M:System.Security.Policy.Evidence.AddHost(System.Object)" />.</returns>
    </member>
    <member name="M:System.Security.Policy.Evidence.GetHostEvidence``1">
      <summary>Obtient la preuve d'hôte du type spécifié à partir de la collection.</summary>
      <typeparam name="T">Type de la preuve à obtenir.</typeparam>
      <returns>Preuve de type <paramref name="T" /> dans la collection de preuves d'hôte.</returns>
    </member>
    <member name="P:System.Security.Policy.Evidence.IsReadOnly">
      <summary>Obtient une valeur indiquant si l'ensemble de preuves est en lecture seule.</summary>
      <returns>Toujours <see langword="false" />, car les ensembles de preuves en lecture seule ne sont pas pris en charge.</returns>
    </member>
    <member name="P:System.Security.Policy.Evidence.IsSynchronized">
      <summary>Obtient une valeur indiquant si l'ensemble de preuves est thread-safe.</summary>
      <returns>Toujours <see langword="false" /> parce que les ensembles de preuves thread-safe ne sont pas pris en charge.</returns>
    </member>
    <member name="P:System.Security.Policy.Evidence.Locked">
      <summary>Obtient ou définit une valeur indiquant si la preuve est verrouillée.</summary>
      <returns>
        <see langword="true" /> si la preuve est verrouillée ; sinon <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.Evidence.Merge(System.Security.Policy.Evidence)">
      <summary>Fusionne l'ensemble de preuves spécifié dans l'ensemble de preuves actuel.</summary>
      <param name="evidence">Ensemble de preuves à fusionner dans l'ensemble de preuves actuel.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="evidence" /> n'est pas une instance valide de <see cref="T:System.Security.Policy.Evidence" />.</exception>
      <exception cref="T:System.Security.SecurityException">
        <see cref="P:System.Security.Policy.Evidence.Locked" /> est <see langword="true" />, le code qui appelle cette méthode n'a pas <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /> et le paramètre <paramref name="evidence" /> a une liste d'hôtes qui n'est pas vide.</exception>
    </member>
    <member name="M:System.Security.Policy.Evidence.RemoveType(System.Type)">
      <summary>Supprime la preuve d'un type donné des énumérations d'hôtes et d'assemblys.</summary>
      <param name="t">Type de la preuve à supprimer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="t" /> a la valeur null.</exception>
    </member>
    <member name="P:System.Security.Policy.Evidence.SyncRoot">
      <summary>Obtient la racine de synchronisation.</summary>
      <returns>Toujours <see langword="this" /> (<see langword="Me" /> en Visual Basic), car la synchronisation des ensembles de preuves n'est pas prise en charge.</returns>
    </member>
    <member name="T:System.Security.Policy.EvidenceBase">
      <summary>Fournit une classe de base dont doivent dériver tous les objets à utiliser en tant que preuves.</summary>
    </member>
    <member name="M:System.Security.Policy.EvidenceBase.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Policy.EvidenceBase" />.</summary>
      <exception cref="T:System.InvalidOperationException">Un objet à utiliser comme preuve n'est pas sérialisable.</exception>
    </member>
    <member name="M:System.Security.Policy.EvidenceBase.Clone">
      <summary>Crée un objet qui est une copie complète de l'instance actuelle.</summary>
      <returns>Copie de cet objet de preuve.</returns>
    </member>
    <member name="T:System.Security.Policy.FileCodeGroup">
      <summary>Accorde des autorisations de manipulation de fichiers situés dans les assemblys de code vers des assemblys de code qui correspondent à la condition d'appartenance. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Policy.FileCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Permissions.FileIOPermissionAccess)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Policy.FileCodeGroup" />.</summary>
      <param name="membershipCondition">Condition d'appartenance qui teste les preuves pour déterminer si ce groupe de codes applique une stratégie.</param>
      <param name="access">Une des valeurs de <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />. Cette valeur est utilisée pour construire le <see cref="T:System.Security.Permissions.FileIOPermission" /> qui est accordé.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="membershipCondition" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le type du paramètre <paramref name="membershipCondition" /> n'est pas valide.  

ou - 
Le type du paramètre <paramref name="access" /> n'est pas valide.</exception>
    </member>
    <member name="P:System.Security.Policy.FileCodeGroup.AttributeString">
      <summary>Obtient une chaîne représentant les attributs de l'instruction de stratégie pour le groupe de codes.</summary>
      <returns>Toujours <see langword="null" />.</returns>
    </member>
    <member name="M:System.Security.Policy.FileCodeGroup.Copy">
      <summary>Effectue une copie complète du groupe de codes actuel.</summary>
      <returns>Copie équivalente du groupe de codes actuel, incluant ses conditions d'appartenance et ses groupes de codes enfants.</returns>
    </member>
    <member name="M:System.Security.Policy.FileCodeGroup.Equals(System.Object)">
      <summary>Détermine si le groupe de codes spécifié est équivalent au groupe de codes actuel.</summary>
      <param name="o">Groupe de codes à comparer avec le groupe de codes actuel.</param>
      <returns>
        <see langword="true" /> si le groupe de codes spécifié est équivalent au groupe de codes actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.FileCodeGroup.GetHashCode">
      <summary>Obtient le code de hachage du groupe de codes actuel.</summary>
      <returns>Code de hachage du groupe de codes actuel.</returns>
    </member>
    <member name="P:System.Security.Policy.FileCodeGroup.MergeLogic">
      <summary>Obtient la logique de fusion.</summary>
      <returns>Chaîne "Union".</returns>
    </member>
    <member name="P:System.Security.Policy.FileCodeGroup.PermissionSetName">
      <summary>Obtient le nom du jeu d'autorisations nommé pour le groupe de codes.</summary>
      <returns>La concaténation de la chaîne «le même répertoire FileIO-» et le type d’accès.</returns>
    </member>
    <member name="M:System.Security.Policy.FileCodeGroup.Resolve(System.Security.Policy.Evidence)">
      <summary>Résout la stratégie pour le groupe de codes et ses descendants pour un ensemble de preuves.</summary>
      <param name="evidence">Preuve pour l'assembly.</param>
      <returns>Instruction de stratégie comprenant les autorisations accordées par le groupe de codes avec des attributs facultatifs ou <see langword="null" /> si le groupe de codes ne s'applique pas (la condition d'appartenance ne correspond pas à la preuve spécifiée).</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="evidence" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Security.Policy.PolicyException">La stratégie actuelle est <see langword="null" />.  
ou 
Plusieurs groupes de codes (y compris le groupe de codes parent et tous les groupes de codes enfants) sont marqués <see cref="F:System.Security.Policy.PolicyStatementAttribute.Exclusive" />.</exception>
    </member>
    <member name="M:System.Security.Policy.FileCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
      <summary>Résout des groupes de codes correspondants.</summary>
      <param name="evidence">Preuve pour l'assembly.</param>
      <returns>
        <see cref="T:System.Security.Policy.CodeGroup" /> qui est la racine de l'arborescence des groupes de codes correspondants.</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="evidence" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="T:System.Security.Policy.FirstMatchCodeGroup">
      <summary>Permet à une stratégie de sécurité d'être définie par l'union de l'instruction de stratégie d'un groupe de codes et celle du premier groupe de codes enfant qui correspond. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Policy.FirstMatchCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Policy.FirstMatchCodeGroup" />.</summary>
      <param name="membershipCondition">Condition d'appartenance qui teste les preuves pour déterminer si ce groupe de codes applique une stratégie.</param>
      <param name="policy">Instruction de stratégie pour le groupe de codes sous la forme d'un jeu d'autorisations et d'attributs pour attribuer du code correspondant à la condition d'appartenance.</param>
      <exception cref="T:System.ArgumentException">Le type du paramètre <paramref name="membershipCondition" /> n'est pas valide.  

ou - 
Le type du paramètre <paramref name="policy" /> n'est pas valide.</exception>
    </member>
    <member name="M:System.Security.Policy.FirstMatchCodeGroup.Copy">
      <summary>Effectue une copie complète du groupe de codes.</summary>
      <returns>Copie équivalente du groupe de codes, incluant ses conditions d'appartenance et ses groupes de codes enfants.</returns>
    </member>
    <member name="P:System.Security.Policy.FirstMatchCodeGroup.MergeLogic">
      <summary>Obtient la logique de fusion.</summary>
      <returns>Chaîne « Première correspondance ».</returns>
    </member>
    <member name="M:System.Security.Policy.FirstMatchCodeGroup.Resolve(System.Security.Policy.Evidence)">
      <summary>Résout la stratégie pour le groupe de codes et ses descendants pour un ensemble de preuves.</summary>
      <param name="evidence">Preuve pour l'assembly.</param>
      <returns>Instruction de stratégie comprenant les autorisations accordées par le groupe de codes avec des attributs facultatifs ou <see langword="null" /> si le groupe de codes ne s'applique pas (la condition d'appartenance ne correspond pas à la preuve spécifiée).</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="evidence" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Security.Policy.PolicyException">Plusieurs groupes de code (y compris le groupe de codes parent et les groupes de codes enfants) sont marqués <see cref="F:System.Security.Policy.PolicyStatementAttribute.Exclusive" />.</exception>
    </member>
    <member name="M:System.Security.Policy.FirstMatchCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
      <summary>Résout des groupes de codes correspondants.</summary>
      <param name="evidence">Preuve pour l'assembly.</param>
      <returns>
        <see cref="T:System.Security.Policy.CodeGroup" /> qui est la racine de l'arborescence des groupes de codes correspondants.</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="evidence" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="T:System.Security.Policy.GacInstalled">
      <summary>Vérifie si un assembly de code provient du GAC (Global Assembly Cache) et considère cela comme la preuve de l'évaluation de stratégie. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Policy.GacInstalled.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Policy.GacInstalled" />.</summary>
    </member>
    <member name="M:System.Security.Policy.GacInstalled.Copy">
      <summary>Crée une copie équivalente de l'objet en cours.</summary>
      <returns>Copie équivalente de <see cref="T:System.Security.Policy.GacInstalled" />.</returns>
    </member>
    <member name="M:System.Security.Policy.GacInstalled.CreateIdentityPermission(System.Security.Policy.Evidence)">
      <summary>Crée une autorisation d'identité qui correspond à l'objet en cours.</summary>
      <param name="evidence">
        <see cref="T:System.Security.Policy.Evidence" /> à partir duquel l'autorisation d'identité doit être créée.</param>
      <returns>Nouvelle autorisation d'identité qui correspond à l'objet actif.</returns>
    </member>
    <member name="M:System.Security.Policy.GacInstalled.Equals(System.Object)">
      <summary>Indique si l'objet actuel équivaut à l'objet spécifié.</summary>
      <param name="o">Objet à comparer à l'objet actuel.</param>
      <returns>
        <see langword="true" /> si <paramref name="o" /> est un objet <see cref="T:System.Security.Policy.GacInstalled" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.GacInstalled.GetHashCode">
      <summary>Retourne un code de hachage pour l’objet actuel.</summary>
      <returns>Code de hachage pour l'objet actuel.</returns>
    </member>
    <member name="M:System.Security.Policy.GacInstalled.ToString">
      <summary>Retourne une représentation sous forme de chaîne de l’objet actuel.</summary>
      <returns>Représentation sous forme de chaîne de l’objet actuel.</returns>
    </member>
    <member name="T:System.Security.Policy.GacMembershipCondition">
      <summary>Détermine si un assembly appartient à un groupe de codes en vérifiant son appartenance (membership) au Global Assembly Cache. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Policy.GacMembershipCondition" />.</summary>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary>Indique si la preuve spécifiée remplit la condition d'appartenance.</summary>
      <param name="evidence">
        <see cref="T:System.Security.Policy.Evidence" /> sur lequel le test doit être effectué.</param>
      <returns>
        <see langword="true" /> si la preuve spécifiée remplit la condition d'appartenance ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.Copy">
      <summary>Crée une copie équivalente de la condition d'appartenance.</summary>
      <returns>Nouvel objet <see cref="T:System.Security.Policy.GacMembershipCondition" />.</returns>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.Equals(System.Object)">
      <summary>Indique si l'objet actuel équivaut à l'objet spécifié.</summary>
      <param name="o">Objet à comparer à l'objet actuel.</param>
      <returns>
        <see langword="true" /> si <paramref name="o" /> est un <see cref="T:System.Security.Policy.GacMembershipCondition" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary>Utilise l'encodage XML spécifié pour reconstruire un objet de sécurité.</summary>
      <param name="e">
        <see cref="T:System.Security.SecurityElement" /> contenant l'encodage XML à utiliser pour reconstruire l'objet de sécurité.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> n'est pas un élément de condition d'appartenance valide.</exception>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>Utilise l'encodage XML spécifié pour reconstruire un objet de sécurité, à l'aide du niveau de stratégie du contexte spécifié.</summary>
      <param name="e">
        <see cref="T:System.Security.SecurityElement" /> contenant l'encodage XML à utiliser pour reconstruire l'objet de sécurité.</param>
      <param name="level">Contexte <see cref="T:System.Security.Policy.PolicyLevel" /> pour la résolution des références <see cref="T:System.Security.NamedPermissionSet" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> n'est pas un élément de condition d'appartenance valide.</exception>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.GetHashCode">
      <summary>Obtient un code de hachage pour la condition d’appartenance actuelle.</summary>
      <returns>0 (zéro).</returns>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.ToString">
      <summary>Retourne une chaîne représentant la condition d'appartenance.</summary>
      <returns>Chaîne représentant la condition d'appartenance.</returns>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.ToXml">
      <summary>Crée un codage XML de l’objet de sécurité et de son état actuel.</summary>
      <returns>
        <see cref="T:System.Security.SecurityElement" /> contenant l'encodage XML de l'objet de sécurité avec des informations sur son état, le cas échéant.</returns>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>Crée un encodage XML de l'objet de sécurité et de son état actuel, à l'aide du niveau de stratégie du contexte spécifié.</summary>
      <param name="level">Contexte <see cref="T:System.Security.Policy.PolicyLevel" /> pour la résolution des références <see cref="T:System.Security.NamedPermissionSet" />.</param>
      <returns>
        <see cref="T:System.Security.SecurityElement" /> contenant l'encodage XML de l'objet de sécurité avec des informations sur son état, le cas échéant.</returns>
    </member>
    <member name="T:System.Security.Policy.Hash">
      <summary>Fournit une preuve relative à la valeur de hachage pour un assembly. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Policy.Hash.#ctor(System.Reflection.Assembly)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Policy.Hash" />.</summary>
      <param name="assembly">Assembly pour lequel la valeur de hachage doit être calculée.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="assembly" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="assembly" /> n'est pas un objet <see cref="T:System.Reflection.Assembly" /> runtime.</exception>
    </member>
    <member name="M:System.Security.Policy.Hash.CreateMD5(System.Byte[])">
      <summary>Crée un objet <see cref="T:System.Security.Policy.Hash" /> qui contient une valeur de hachage <see cref="T:System.Security.Cryptography.MD5" />.</summary>
      <param name="md5">Tableau d'octets qui contient une valeur de hachage <see cref="T:System.Security.Cryptography.MD5" />.</param>
      <returns>Objet qui contient la valeur de hachage fournie par le paramètre <paramref name="md5" />.</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="md5" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.Hash.CreateSHA1(System.Byte[])">
      <summary>Crée un objet <see cref="T:System.Security.Policy.Hash" /> qui contient une valeur de hachage <see cref="T:System.Security.Cryptography.SHA1" />.</summary>
      <param name="sha1">Tableau d'octets qui contient une valeur de hachage <see cref="T:System.Security.Cryptography.SHA1" />.</param>
      <returns>Objet qui contient la valeur de hachage fournie par le paramètre <paramref name="sha1" />.</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="sha1" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.Hash.CreateSHA256(System.Byte[])">
      <summary>Crée un objet <see cref="T:System.Security.Policy.Hash" /> qui contient une valeur de hachage <see cref="T:System.Security.Cryptography.SHA256" />.</summary>
      <param name="sha256">Tableau d'octets qui contient une valeur de hachage <see cref="T:System.Security.Cryptography.SHA256" />.</param>
      <returns>Objet de hachage qui contient la valeur de hachage fournie par le paramètre <paramref name="sha256" />.</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="sha256" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.Hash.GenerateHash(System.Security.Cryptography.HashAlgorithm)">
      <summary>Calcule la valeur de hachage pour l'assembly à l'aide de l'algorithme de hachage spécifié.</summary>
      <param name="hashAlg">Algorithme de hachage à utiliser pour calculer la valeur de hachage pour l'assembly.</param>
      <returns>Tableau d'octets qui représente la valeur de hachage pour l'assembly.</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="hashAlg" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">La valeur de hachage de l'assembly ne peut pas être générée.</exception>
    </member>
    <member name="M:System.Security.Policy.Hash.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Définit l'objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> avec le nom du paramètre et d'autres informations se rapportant à l'exception.</summary>
      <param name="info">Objet qui contient les données sérialisées de l'objet.</param>
      <param name="context">Informations contextuelles sur la source ou la destination.</param>
    </member>
    <member name="P:System.Security.Policy.Hash.MD5">
      <summary>Obtient la valeur de hachage <see cref="T:System.Security.Cryptography.MD5" /> pour l'assembly.</summary>
      <returns>Tableau d'octets qui représente la valeur de hachage <see cref="T:System.Security.Cryptography.MD5" /> pour l'assembly.</returns>
    </member>
    <member name="P:System.Security.Policy.Hash.SHA1">
      <summary>Obtient la valeur de hachage <see cref="T:System.Security.Cryptography.SHA1" /> pour l'assembly.</summary>
      <returns>Tableau d'octets qui représente la valeur de hachage <see cref="T:System.Security.Cryptography.SHA1" /> pour l'assembly.</returns>
    </member>
    <member name="P:System.Security.Policy.Hash.SHA256">
      <summary>Obtient la valeur de hachage <see cref="T:System.Security.Cryptography.SHA256" /> pour l'assembly.</summary>
      <returns>Tableau d'octets qui représente la valeur de hachage <see cref="T:System.Security.Cryptography.SHA256" /> pour l'assembly.</returns>
    </member>
    <member name="M:System.Security.Policy.Hash.ToString">
      <summary>Retourne une chaîne représentant le <see cref="T:System.Security.Policy.Hash" /> en cours.</summary>
      <returns>Représentation du <see cref="T:System.Security.Policy.Hash" /> en cours.</returns>
    </member>
    <member name="T:System.Security.Policy.HashMembershipCondition">
      <summary>Détermine si un assembly appartient à un groupe de codes en vérifiant sa valeur de hachage. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.#ctor(System.Security.Cryptography.HashAlgorithm,System.Byte[])">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Policy.HashMembershipCondition" /> avec l'algorithme et la valeur de hachage qui déterminent l'appartenance (membership).</summary>
      <param name="hashAlg">Algorithme de hachage à utiliser pour calculer la valeur de hachage pour l'assembly.</param>
      <param name="value">Valeur de hachage à tester.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="hashAlg" /> a la valeur <see langword="null" />.  
ou 
Le paramètre <paramref name="value" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="hashAlg" /> n'est pas un algorithme de hachage valide.</exception>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary>Détermine si la preuve spécifiée remplit la condition d'appartenance.</summary>
      <param name="evidence">Ensemble de preuves sur lequel le test doit être effectué.</param>
      <returns>
        <see langword="true" /> si la preuve spécifiée remplit la condition d'appartenance ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.Copy">
      <summary>Crée une copie équivalente de la condition d'appartenance.</summary>
      <returns>Nouvelle copie identique de la condition d'appartenance actuelle.</returns>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.Equals(System.Object)">
      <summary>Détermine si <see cref="P:System.Security.Policy.HashMembershipCondition.HashValue" /> et <see cref="P:System.Security.Policy.HashMembershipCondition.HashAlgorithm" /> de l'objet spécifié sont équivalents à <see cref="P:System.Security.Policy.HashMembershipCondition.HashValue" /> et <see cref="P:System.Security.Policy.HashMembershipCondition.HashAlgorithm" /> contenus dans le <see cref="T:System.Security.Policy.HashMembershipCondition" /> en cours.</summary>
      <param name="o">Objet à comparer au <see cref="T:System.Security.Policy.HashMembershipCondition" /> en cours.</param>
      <returns>
        <see langword="true" /> si <see cref="P:System.Security.Policy.HashMembershipCondition.HashValue" /> et <see cref="P:System.Security.Policy.HashMembershipCondition.HashAlgorithm" /> de l'objet spécifié sont équivalents à <see cref="P:System.Security.Policy.HashMembershipCondition.HashValue" /> et <see cref="P:System.Security.Policy.HashMembershipCondition.HashAlgorithm" /> contenus dans le <see cref="T:System.Security.Policy.HashMembershipCondition" /> en cours ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruit un objet de sécurité avec un état spécifié à partir d’un encodage XML.</summary>
      <param name="e">Encodage XML à utiliser pour reconstruire l’objet de sécurité.</param>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>Reconstruit un objet de sécurité avec un état spécifié à partir d’un encodage XML.</summary>
      <param name="e">Encodage XML à utiliser pour reconstruire l’objet de sécurité.</param>
      <param name="level">Contexte de niveau de stratégie utilisé pour résoudre des références de jeu d'autorisations nommé.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="e" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="e" /> n'est pas un élément de condition d'appartenance valide.</exception>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.GetHashCode">
      <summary>Obtient le code de hachage pour la condition d'appartenance actuelle.</summary>
      <returns>Code de hachage pour la condition d'appartenance actuelle.</returns>
    </member>
    <member name="P:System.Security.Policy.HashMembershipCondition.HashAlgorithm">
      <summary>Obtient ou définit l'algorithme de hachage à utiliser pour la condition d'appartenance.</summary>
      <returns>Algorithme de hachage à utiliser pour la condition d'appartenance.</returns>
      <exception cref="T:System.ArgumentNullException">Une tentative est effectuée pour attribuer à <see cref="P:System.Security.Policy.HashMembershipCondition.HashAlgorithm" /> la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Security.Policy.HashMembershipCondition.HashValue">
      <summary>Obtient ou définit la valeur de hachage pour laquelle la condition d'appartenance est testée.</summary>
      <returns>Valeur de hachage pour laquelle la condition d'appartenance est testée.</returns>
      <exception cref="T:System.ArgumentNullException">Une tentative est effectuée pour attribuer à <see cref="P:System.Security.Policy.HashMembershipCondition.HashValue" /> la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
      <summary>Est exécuté une fois que le graphique d'objets est complètement désérialisé.</summary>
      <param name="sender">Objet qui a initié le rappel. La fonctionnalité pour ce paramètre n'est pas implémentée actuellement.</param>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Remplit <see cref="T:System.Runtime.Serialization.SerializationInfo" /> avec les données nécessaires pour sérialiser l'objet cible.</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> à remplir de données.</param>
      <param name="context">Destination <see cref="T:System.Runtime.Serialization.StreamingContext" /> de cette sérialisation.</param>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.ToString">
      <summary>Crée et retourne une chaîne représentant la condition d'appartenance.</summary>
      <returns>Chaîne représentant l'état de la condition d'appartenance.</returns>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.ToXml">
      <summary>Crée un codage XML de l’objet de sécurité et de son état actuel.</summary>
      <returns>Encodage XML de l’objet de sécurité, y compris les informations d’état éventuelles.</returns>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>Crée un codage XML de l'objet de sécurité et de son état actuel avec le <see cref="T:System.Security.Policy.PolicyLevel" /> spécifié.</summary>
      <param name="level">Contexte de niveau de stratégie utilisé pour résoudre des références de jeu d'autorisations nommé.</param>
      <returns>Encodage XML de l’objet de sécurité, y compris les informations d’état éventuelles.</returns>
    </member>
    <member name="T:System.Security.Policy.IIdentityPermissionFactory">
      <summary>Définit la méthode qui crée une nouvelle autorisation d'identité.</summary>
    </member>
    <member name="M:System.Security.Policy.IIdentityPermissionFactory.CreateIdentityPermission(System.Security.Policy.Evidence)">
      <summary>Crée une nouvelle autorisation d'identité pour la preuve spécifiée.</summary>
      <param name="evidence">Preuve à partir de laquelle la nouvelle autorisation d'identité doit être créée.</param>
      <returns>Nouvelle autorisation d'identité.</returns>
    </member>
    <member name="T:System.Security.Policy.IMembershipCondition">
      <summary>Définit le test pour déterminer si un assembly de code est un membre d'un groupe de codes.</summary>
    </member>
    <member name="M:System.Security.Policy.IMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary>Détermine si la preuve spécifiée remplit la condition d'appartenance.</summary>
      <param name="evidence">Ensemble de preuves sur lequel le test doit être effectué.</param>
      <returns>
        <see langword="true" /> si la preuve spécifiée remplit la condition d'appartenance ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.IMembershipCondition.Copy">
      <summary>Crée une copie équivalente de la condition d'appartenance.</summary>
      <returns>Nouvelle copie identique de la condition d'appartenance actuelle.</returns>
    </member>
    <member name="M:System.Security.Policy.IMembershipCondition.Equals(System.Object)">
      <summary>Détermine si l'objet <see cref="T:System.Object" /> spécifié est égal à l'objet <see cref="T:System.Object" /> actuel.</summary>
      <param name="obj">
        <see cref="T:System.Object" /> à comparer avec l'objet <see cref="T:System.Object" /> actuel.</param>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Object" /> spécifié est égal au <see cref="T:System.Object" /> actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.IMembershipCondition.ToString">
      <summary>Crée et retourne une chaîne représentant la condition d'appartenance.</summary>
      <returns>Chaîne représentant l'état de la condition d'appartenance actuelle.</returns>
    </member>
    <member name="T:System.Security.Policy.NetCodeGroup">
      <summary>Accorde une autorisation Web au site à partir duquel l'assembly a été téléchargé. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.#ctor(System.Security.Policy.IMembershipCondition)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Policy.NetCodeGroup" />.</summary>
      <param name="membershipCondition">Condition d'appartenance qui teste les preuves pour déterminer si ce groupe de codes applique une stratégie de sécurité d'accès du code.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="membershipCondition" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le type du paramètre <paramref name="membershipCondition" /> n'est pas valide.</exception>
    </member>
    <member name="F:System.Security.Policy.NetCodeGroup.AbsentOriginScheme">
      <summary>Contient une valeur utilisée pour spécifier l'accès de connexion pour du code avec un modèle d'origine inconnu ou non reconnu.</summary>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.AddConnectAccess(System.String,System.Security.Policy.CodeConnectAccess)">
      <summary>Ajoute l'accès de connexion spécifié au groupe de codes actuel.</summary>
      <param name="originScheme">
        <see cref="T:System.String" /> contenant le modèle qui doit correspondre au modèle du code.</param>
      <param name="connectAccess">
        <see cref="T:System.Security.Policy.CodeConnectAccess" /> qui spécifie le modèle et le port que le code peut utiliser pour se connecter à son serveur d'origine.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="originScheme" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="originScheme" /> contient des caractères qui ne sont pas autorisés dans les modèles.  

ou - 
<paramref name="originScheme" /> = <see cref="F:System.Security.Policy.NetCodeGroup.AbsentOriginScheme" /> et <paramref name="connectAccess" /> spécifie <see cref="F:System.Security.Policy.CodeConnectAccess.OriginScheme" /> comme modèle.</exception>
    </member>
    <member name="F:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme">
      <summary>Contient une valeur utilisée pour spécifier tout autre modèle d'origine non spécifié.</summary>
    </member>
    <member name="P:System.Security.Policy.NetCodeGroup.AttributeString">
      <summary>Obtient une chaîne représentant les attributs de l'instruction de stratégie pour le groupe de codes.</summary>
      <returns>Toujours <see langword="null" />.</returns>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.Copy">
      <summary>Effectue une copie complète du groupe de codes actuel.</summary>
      <returns>Copie équivalente du groupe de codes actuel, incluant ses conditions d'appartenance et ses groupes de codes enfants.</returns>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.Equals(System.Object)">
      <summary>Détermine si le groupe de codes spécifié est équivalent au groupe de codes actuel.</summary>
      <param name="o">Objet <see cref="T:System.Security.Policy.NetCodeGroup" /> à comparer avec le groupe de codes actuel.</param>
      <returns>
        <see langword="true" /> si le groupe de codes spécifié est équivalent au groupe de codes actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.GetConnectAccessRules">
      <summary>Obtient les informations d'accès de connexion pour le groupe de codes actuel.</summary>
      <returns>Tableau <see cref="T:System.Collections.DictionaryEntry" /> contenant des informations d'accès de connexion.</returns>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.GetHashCode">
      <summary>Obtient le code de hachage du groupe de codes actuel.</summary>
      <returns>Code de hachage du groupe de codes actuel.</returns>
    </member>
    <member name="P:System.Security.Policy.NetCodeGroup.MergeLogic">
      <summary>Obtient la logique à utiliser pour la fusion des groupes.</summary>
      <returns>Chaîne "Union".</returns>
    </member>
    <member name="P:System.Security.Policy.NetCodeGroup.PermissionSetName">
      <summary>Obtient le nom de <see cref="T:System.Security.NamedPermissionSet" /> pour le groupe de codes.</summary>
      <returns>Toujours la chaîne "Web de site identique".</returns>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.ResetConnectAccess">
      <summary>Supprime toutes les informations d'accès de connexion pour le groupe de codes actuel.</summary>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.Resolve(System.Security.Policy.Evidence)">
      <summary>Résout la stratégie pour le groupe de codes et ses descendants pour un ensemble de preuves.</summary>
      <param name="evidence">
        <see cref="T:System.Security.Policy.Evidence" /> pour l'assembly.</param>
      <returns>
        <see cref="T:System.Security.Policy.PolicyStatement" /> qui comprend les autorisations accordées par le groupe de codes avec des attributs facultatifs ou <see langword="null" /> si le groupe de codes ne s'applique pas (la condition d'appartenance ne correspond pas à la preuve spécifiée).</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="evidence" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Security.Policy.PolicyException">Plusieurs groupes de code (y compris le groupe de codes parent et les groupes de codes enfants) sont marqués <see cref="F:System.Security.Policy.PolicyStatementAttribute.Exclusive" />.</exception>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
      <summary>Résout des groupes de codes correspondants.</summary>
      <param name="evidence">Preuve pour l'assembly.</param>
      <returns>Ensemble complet de groupes de codes qui ont été trouvés par la preuve.</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="evidence" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="T:System.Security.Policy.PermissionRequestEvidence">
      <summary>Définit la preuve qui représente des demandes d'autorisation. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Policy.PermissionRequestEvidence.#ctor(System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Policy.PermissionRequestEvidence" /> avec la demande d'autorisation d'un assembly de code.</summary>
      <param name="request">Autorisations minimales nécessaires à l'exécution du code.</param>
      <param name="optional">Autorisations que le code peut utiliser si elles sont accordées, mais qui ne sont pas requises.</param>
      <param name="denied">Autorisations que le code demande explicitement de ne pas être accordées.</param>
    </member>
    <member name="M:System.Security.Policy.PermissionRequestEvidence.Copy">
      <summary>Crée une copie équivalente du <see cref="T:System.Security.Policy.PermissionRequestEvidence" /> en cours.</summary>
      <returns>Copie équivalente du <see cref="T:System.Security.Policy.PermissionRequestEvidence" /> en cours.</returns>
    </member>
    <member name="P:System.Security.Policy.PermissionRequestEvidence.DeniedPermissions">
      <summary>Obtient les autorisations que le code demande explicitement de ne pas être accordées.</summary>
      <returns>Autorisations que le code demande explicitement de ne pas être accordées.</returns>
    </member>
    <member name="P:System.Security.Policy.PermissionRequestEvidence.OptionalPermissions">
      <summary>Obtient les autorisations que le code peut utiliser si elles sont accordées, mais qui ne sont pas requises.</summary>
      <returns>Autorisations que le code peut utiliser si elles sont accordées, mais qui ne sont pas requises.</returns>
    </member>
    <member name="P:System.Security.Policy.PermissionRequestEvidence.RequestedPermissions">
      <summary>Obtient les autorisations minimales nécessaires à l'exécution du code.</summary>
      <returns>Autorisations minimales nécessaires à l'exécution du code.</returns>
    </member>
    <member name="M:System.Security.Policy.PermissionRequestEvidence.ToString">
      <summary>Obtient une chaîne représentant l'état de <see cref="T:System.Security.Policy.PermissionRequestEvidence" />.</summary>
      <returns>Représentation de l'état de <see cref="T:System.Security.Policy.PermissionRequestEvidence" />.</returns>
    </member>
    <member name="T:System.Security.Policy.PolicyException">
      <summary>Exception levée lorsqu'une stratégie refuse l'exécution du code.</summary>
    </member>
    <member name="M:System.Security.Policy.PolicyException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Policy.PolicyException" /> avec des propriétés par défaut.</summary>
    </member>
    <member name="M:System.Security.Policy.PolicyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Policy.PolicyException" /> avec des données sérialisées.</summary>
      <param name="info">Objet qui contient les données sérialisées de l'objet.</param>
      <param name="context">Informations contextuelles sur la source ou la destination.</param>
    </member>
    <member name="M:System.Security.Policy.PolicyException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Policy.PolicyException" /> avec un message d'erreur spécifié.</summary>
      <param name="message">Message d'erreur qui explique la raison de l'exception.</param>
    </member>
    <member name="M:System.Security.Policy.PolicyException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Policy.PolicyException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message d'erreur qui explique la raison de l'exception.</param>
      <param name="exception">Exception ayant provoqué l'exception actuelle. Si le paramètre <paramref name="exception" /> n'est pas <see langword="null" />, l'exception actuelle est levée dans un bloc <see langword="catch" /> qui gère l'exception interne.</param>
    </member>
    <member name="T:System.Security.Policy.PolicyLevel">
      <summary>Représente les niveaux de la stratégie de sécurité pour le Common Language Runtime. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.AddFullTrustAssembly(System.Security.Policy.StrongName)">
      <summary>Ajoute un <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> correspondant au <see cref="T:System.Security.Policy.StrongName" /> spécifié à la liste d'objets <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> utilisée pour déterminer si un assembly est membre du groupe d'assemblys à ne pas évaluer.</summary>
      <param name="sn">
        <see cref="T:System.Security.Policy.StrongName" /> utilisé pour créer le <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> à ajouter à la liste d'objets <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> qui permettent de déterminer si un assembly est membre du groupe d'assemblys à ne pas évaluer.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="sn" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le <see cref="T:System.Security.Policy.StrongName" /> spécifié par le paramètre <paramref name="sn" /> bénéficie déjà de la confiance totale.</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.AddFullTrustAssembly(System.Security.Policy.StrongNameMembershipCondition)">
      <summary>Ajoute le <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> spécifié à la liste d'objets <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> utilisée pour déterminer si un assembly est membre du groupe d'assemblys à ne pas évaluer.</summary>
      <param name="snMC">
        <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> à ajouter à la liste d'objets <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> utilisée pour déterminer si un assembly est membre du groupe d'assemblys à ne pas évaluer.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="snMC" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> spécifié par le paramètre <paramref name="snMC" /> bénéficie déjà de la confiance totale.</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.AddNamedPermissionSet(System.Security.NamedPermissionSet)">
      <summary>Ajoute un <see cref="T:System.Security.NamedPermissionSet" /> au niveau de stratégie actuel.</summary>
      <param name="permSet">
        <see cref="T:System.Security.NamedPermissionSet" /> à ajouter au niveau de stratégie actuel.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="permSet" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="permSet" /> a le même nom qu'un <see cref="T:System.Security.NamedPermissionSet" /> existant dans <see cref="T:System.Security.Policy.PolicyLevel" />.</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.ChangeNamedPermissionSet(System.String,System.Security.PermissionSet)">
      <summary>Remplace un <see cref="T:System.Security.NamedPermissionSet" /> du niveau de stratégie actuel par le <see cref="T:System.Security.PermissionSet" /> spécifié.</summary>
      <param name="name">Nom du <see cref="T:System.Security.NamedPermissionSet" /> à remplacer.</param>
      <param name="pSet">
        <see cref="T:System.Security.PermissionSet" /> qui remplace le <see cref="T:System.Security.NamedPermissionSet" /> spécifié par le paramètre <paramref name="name" />.</param>
      <returns>Copie du <see cref="T:System.Security.NamedPermissionSet" /> qui a été remplacé.</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="name" /> a la valeur <see langword="null" />.  
ou 
Le paramètre <paramref name="pSet" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="name" /> est égal au nom d'un jeu d'autorisations réservé.  
ou 
Le <see cref="T:System.Security.PermissionSet" /> spécifié par le paramètre <paramref name="pSet" /> est introuvable.</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.CreateAppDomainLevel">
      <summary>Crée un nouveau niveau de stratégie à utiliser au niveau de stratégie du domaine d'application.</summary>
      <returns>Objet <see cref="T:System.Security.Policy.PolicyLevel" /> nouvellement créé.</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruit un objet de sécurité avec un état donné à partir d'un codage XML.</summary>
      <param name="e">Encodage XML à utiliser pour reconstruire l'objet de sécurité.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="e" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le <see cref="T:System.Security.SecurityElement" /> spécifié par le paramètre <paramref name="e" /> est non valide.</exception>
    </member>
    <member name="P:System.Security.Policy.PolicyLevel.FullTrustAssemblies">
      <summary>Obtient une liste d'objets <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> qui permettent de déterminer si un assembly est membre du groupe d'assemblys utilisé pour évaluer la stratégie de sécurité.</summary>
      <returns>Liste d'objets <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> qui permettent de déterminer si un assembly est membre du groupe d'assemblys utilisé pour évaluer la stratégie de sécurité. Il est accordé une confiance totale à ces assemblys au cours de l'évaluation de stratégie des assemblys ne figurant pas dans la liste.</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.GetNamedPermissionSet(System.String)">
      <summary>Retourne le <see cref="T:System.Security.NamedPermissionSet" /> du niveau de stratégie actuel qui porte le nom spécifié.</summary>
      <param name="name">Nom du <see cref="T:System.Security.NamedPermissionSet" /> à rechercher.</param>
      <returns>
        <see cref="T:System.Security.NamedPermissionSet" /> du niveau de stratégie actuel qui porte le nom spécifié, s'il existe ; sinon, <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="name" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Security.Policy.PolicyLevel.Label">
      <summary>Obtient une étiquette descriptive du niveau de stratégie.</summary>
      <returns>Étiquette associée au niveau de stratégie.</returns>
    </member>
    <member name="P:System.Security.Policy.PolicyLevel.NamedPermissionSets">
      <summary>Obtient une liste des jeux d'autorisations nommés définis pour le niveau de stratégie.</summary>
      <returns>Liste des jeux d'autorisations nommés définis pour le niveau de stratégie.</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.Recover">
      <summary>Remplace le fichier de configuration associé à ce <see cref="T:System.Security.Policy.PolicyLevel" /> par la dernière sauvegarde (reflétant l'état de la stratégie avant son dernier enregistrement) et retourne l'état du dernier enregistrement.</summary>
      <exception cref="T:System.Security.Policy.PolicyException">Le niveau de stratégie n'a pas de fichier de configuration valide.</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly(System.Security.Policy.StrongName)">
      <summary>Supprime un assembly de <see cref="T:System.Security.Policy.StrongName" /> spécifié de la liste d'assemblys utilisée par le niveau de stratégie pour évaluer la stratégie.</summary>
      <param name="sn">
        <see cref="T:System.Security.Policy.StrongName" /> de l'assembly à supprimer de la liste d'assemblys utilisée pour évaluer la stratégie.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="sn" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">L'assembly dont le <see cref="T:System.Security.Policy.StrongName" /> est spécifié par le paramètre <paramref name="sn" /> ne bénéficie pas d'une confiance totale.</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly(System.Security.Policy.StrongNameMembershipCondition)">
      <summary>Supprime un assembly de <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> spécifié de la liste d'assemblys utilisée par le niveau de stratégie pour évaluer la stratégie.</summary>
      <param name="snMC">
        <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> de l'assembly à supprimer de la liste d'assemblys utilisée pour évaluer la stratégie.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="snMC" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> spécifié par le paramètre <paramref name="snMC" /> ne bénéficie pas d'une confiance totale.</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet(System.Security.NamedPermissionSet)">
      <summary>Supprime le <see cref="T:System.Security.NamedPermissionSet" /> spécifié du niveau de stratégie actuel.</summary>
      <param name="permSet">
        <see cref="T:System.Security.NamedPermissionSet" /> à supprimer du niveau de stratégie actuel.</param>
      <returns>
        <see cref="T:System.Security.NamedPermissionSet" /> qui a été supprimé.</returns>
      <exception cref="T:System.ArgumentException">Le <see cref="T:System.Security.NamedPermissionSet" /> spécifié par le paramètre <paramref name="permSet" /> est introuvable.</exception>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="permSet" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet(System.String)">
      <summary>Supprime le <see cref="T:System.Security.NamedPermissionSet" /> dont le nom est spécifié du niveau de stratégie actuel.</summary>
      <param name="name">Nom du <see cref="T:System.Security.NamedPermissionSet" /> à supprimer.</param>
      <returns>
        <see cref="T:System.Security.NamedPermissionSet" /> qui a été supprimé.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="name" /> est égal au nom d'un jeu d'autorisations réservé.  
ou 
Impossible de trouver un <see cref="T:System.Security.NamedPermissionSet" /> présentant le nom spécifié.</exception>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="name" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.Reset">
      <summary>Retourne l'état par défaut du niveau de stratégie en cours.</summary>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.Resolve(System.Security.Policy.Evidence)">
      <summary>Résout la stratégie sur la base de la preuve du niveau de stratégie et retourne le <see cref="T:System.Security.Policy.PolicyStatement" /> qui en résulte.</summary>
      <param name="evidence">
        <see cref="T:System.Security.Policy.Evidence" /> utilisé pour résoudre <see cref="T:System.Security.Policy.PolicyLevel" />.</param>
      <returns>
        <see cref="T:System.Security.Policy.PolicyStatement" /> obtenu.</returns>
      <exception cref="T:System.Security.Policy.PolicyException">Le niveau de stratégie contient plusieurs groupes de codes qui correspondent et sont marqués comme exclusifs.</exception>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="evidence" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
      <summary>Résout la stratégie du niveau de stratégie et retourne la racine d'une arborescence de groupes de codes qui correspond à la preuve.</summary>
      <param name="evidence">
        <see cref="T:System.Security.Policy.Evidence" /> utilisé pour résoudre la stratégie.</param>
      <returns>
        <see cref="T:System.Security.Policy.CodeGroup" /> représentant la racine d'une arborescence de groupes de codes qui correspond à la preuve spécifiée.</returns>
      <exception cref="T:System.Security.Policy.PolicyException">Le niveau de stratégie contient plusieurs groupes de codes qui correspondent et sont marqués comme exclusifs.</exception>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="evidence" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Security.Policy.PolicyLevel.RootCodeGroup">
      <summary>Obtient ou définit le groupe de codes racine du niveau de stratégie.</summary>
      <returns>
        <see cref="T:System.Security.Policy.CodeGroup" /> qui est la racine de l'arborescence des groupes de codes du niveau de stratégie.</returns>
      <exception cref="T:System.ArgumentNullException">La valeur de <see cref="P:System.Security.Policy.PolicyLevel.RootCodeGroup" /> est <see langword="null" />.</exception>
    </member>
    <member name="P:System.Security.Policy.PolicyLevel.StoreLocation">
      <summary>Obtient le chemin de l'emplacement de stockage du fichier de stratégie.</summary>
      <returns>Chemin de l'emplacement de stockage du fichier de stratégie ou <see langword="null" /> si <see cref="T:System.Security.Policy.PolicyLevel" /> n'a pas d'emplacement de stockage.</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.ToXml">
      <summary>Crée un codage XML de l’objet de sécurité et de son état actuel.</summary>
      <returns>Encodage XML de l’objet de sécurité, y compris les informations d’état éventuelles.</returns>
    </member>
    <member name="P:System.Security.Policy.PolicyLevel.Type">
      <summary>Obtient le type du niveau de stratégie.</summary>
      <returns>Une des valeurs de l'objet <see cref="T:System.Security.PolicyLevelType" />.</returns>
    </member>
    <member name="T:System.Security.Policy.PolicyStatement">
      <summary>Représente l'instruction d'un <see cref="T:System.Security.Policy.CodeGroup" /> décrivant les autorisations et d'autres informations qui s'appliquent au code présentant un ensemble de preuves particulier. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.#ctor(System.Security.PermissionSet)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Policy.PolicyStatement" /> avec le <see cref="T:System.Security.PermissionSet" /> spécifié.</summary>
      <param name="permSet">
        <see cref="T:System.Security.PermissionSet" /> avec lequel initialiser la nouvelle instance.</param>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.#ctor(System.Security.PermissionSet,System.Security.Policy.PolicyStatementAttribute)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Policy.PolicyStatement" /> avec le <see cref="T:System.Security.PermissionSet" /> et les attributs spécifiés.</summary>
      <param name="permSet">
        <see cref="T:System.Security.PermissionSet" /> avec lequel initialiser la nouvelle instance.</param>
      <param name="attributes">Combinaison d'opérations de bits des valeurs <see cref="T:System.Security.Policy.PolicyStatementAttribute" />.</param>
    </member>
    <member name="P:System.Security.Policy.PolicyStatement.Attributes">
      <summary>Obtient ou définit les attributs de l'instruction de stratégie.</summary>
      <returns>Attributs de l'instruction de stratégie.</returns>
    </member>
    <member name="P:System.Security.Policy.PolicyStatement.AttributeString">
      <summary>Obtient une représentation sous forme de chaîne des attributs de l'instruction de stratégie.</summary>
      <returns>Chaîne de texte représentant les attributs de l'instruction de stratégie.</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.Copy">
      <summary>Crée une copie équivalente de l'instruction de stratégie en cours.</summary>
      <returns>Nouvelle copie de <see cref="T:System.Security.Policy.PolicyStatement" /> avec les mêmes <see cref="P:System.Security.Policy.PolicyStatement.PermissionSet" /> et <see cref="P:System.Security.Policy.PolicyStatement.Attributes" /> que le <see cref="T:System.Security.Policy.PolicyStatement" /> en cours.</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.Equals(System.Object)">
      <summary>Détermine si l’objet <see cref="T:System.Security.Policy.PolicyStatement" /> spécifié est égal au <see cref="T:System.Security.Policy.PolicyStatement" /> actuel.</summary>
      <param name="o">Objet <see cref="T:System.Security.Policy.PolicyStatement" /> à comparer au <see cref="T:System.Security.Policy.PolicyStatement" /> actuel.</param>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Security.Policy.PolicyStatement" /> spécifié est égal à l’objet <see cref="T:System.Security.Policy.PolicyStatement" /> actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruit un objet de sécurité avec un état donné à partir d'un codage XML.</summary>
      <param name="et">Encodage XML à utiliser pour reconstruire l’objet de sécurité.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="et" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="et" /> n'est pas un codage de <see cref="T:System.Security.Policy.PolicyStatement" /> valide.</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>Reconstruit un objet de sécurité avec un état donné à partir d'un codage XML.</summary>
      <param name="et">Encodage XML à utiliser pour reconstruire l’objet de sécurité.</param>
      <param name="level">Contexte de <see cref="T:System.Security.Policy.PolicyLevel" /> pour la recherche de valeurs de <see cref="T:System.Security.NamedPermissionSet" />.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="et" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="et" /> n'est pas un codage de <see cref="T:System.Security.Policy.PolicyStatement" /> valide.</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.GetHashCode">
      <summary>Obtient un code de hachage pour l’objet <see cref="T:System.Security.Policy.PolicyStatement" /> qui peut être utilisé dans des structures de données et des algorithmes de hachage, comme une table de hachage.</summary>
      <returns>Code de hachage pour l’objet <see cref="T:System.Security.Policy.PolicyStatement" /> actuel.</returns>
    </member>
    <member name="P:System.Security.Policy.PolicyStatement.PermissionSet">
      <summary>Obtient ou définit le <see cref="T:System.Security.PermissionSet" /> de l'instruction de stratégie.</summary>
      <returns>
        <see cref="T:System.Security.PermissionSet" /> de l'instruction de stratégie.</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.ToXml">
      <summary>Crée un codage XML de l’objet de sécurité et de son état actuel.</summary>
      <returns>Encodage XML de l’objet de sécurité, y compris les informations d’état éventuelles.</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>Crée un codage XML de l’objet de sécurité et de son état actuel.</summary>
      <param name="level">Contexte de <see cref="T:System.Security.Policy.PolicyLevel" /> pour la recherche de valeurs de <see cref="T:System.Security.NamedPermissionSet" />.</param>
      <returns>Encodage XML de l’objet de sécurité, y compris les informations d’état éventuelles.</returns>
    </member>
    <member name="T:System.Security.Policy.PolicyStatementAttribute">
      <summary>Définit des indicateurs d'attribut spéciaux pour la stratégie de sécurité sur des groupes de codes.</summary>
    </member>
    <member name="F:System.Security.Policy.PolicyStatementAttribute.All">
      <summary>Tous les indicateurs d'attribut sont définis.</summary>
    </member>
    <member name="F:System.Security.Policy.PolicyStatementAttribute.Exclusive">
      <summary>Indicateur de groupe de codes exclusif. Lorsque cet indicateur est défini pour un groupe de codes, seules les autorisations associées à ce groupe de codes sont accordées au code appartenant au groupe de codes. Au maximum, un groupe de codes correspondant à une partie de code donnée peut être défini comme exclusif.</summary>
    </member>
    <member name="F:System.Security.Policy.PolicyStatementAttribute.LevelFinal">
      <summary>Indicateur représentant une instruction de stratégie qui empêche l'évaluation des niveaux de stratégie inférieurs dans le cadre de l'opération de résolution, ce qui permet en fait au niveau de stratégie de substituer les niveaux inférieurs.</summary>
    </member>
    <member name="F:System.Security.Policy.PolicyStatementAttribute.Nothing">
      <summary>Aucun indicateur n'est défini.</summary>
    </member>
    <member name="T:System.Security.Policy.Publisher">
      <summary>Fournit une signature numérique Authenticode X.509v3 d'un assembly de code en tant que preuve pour une évaluation de stratégie. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Policy.Publisher.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Policy.Publisher" /> avec le certificat Authenticode X.509v3 contenant la clé publique de l'éditeur.</summary>
      <param name="cert">
        <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> qui contient la clé publique de l'éditeur de logiciels.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="cert" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Security.Policy.Publisher.Certificate">
      <summary>Obtient le certificat Authenticode X.509v3 de l'éditeur.</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> de l'éditeur.</returns>
    </member>
    <member name="M:System.Security.Policy.Publisher.Copy">
      <summary>Crée une copie équivalente de <see cref="T:System.Security.Policy.Publisher" />.</summary>
      <returns>Nouvelle copie identique de <see cref="T:System.Security.Policy.Publisher" />.</returns>
    </member>
    <member name="M:System.Security.Policy.Publisher.CreateIdentityPermission(System.Security.Policy.Evidence)">
      <summary>Crée une autorisation d'identité qui correspond à l'instance actuelle de la classe <see cref="T:System.Security.Policy.Publisher" />.</summary>
      <param name="evidence">
        <see cref="T:System.Security.Policy.Evidence" /> à partir duquel l'autorisation d'identité doit être créée.</param>
      <returns>
        <see cref="T:System.Security.Permissions.PublisherIdentityPermission" /> pour le <see cref="T:System.Security.Policy.Publisher" /> spécifié.</returns>
    </member>
    <member name="M:System.Security.Policy.Publisher.Equals(System.Object)">
      <summary>Vérifie si le <see cref="T:System.Security.Policy.Publisher" /> en cours et l'objet spécifié sont équivalents.</summary>
      <param name="o">
        <see cref="T:System.Security.Policy.Publisher" /> à vérifier pour savoir s'il est équivalent à l'objet en cours.</param>
      <returns>
        <see langword="true" /> si les deux instances de la classe <see cref="T:System.Security.Policy.Publisher" /> sont égales ; sinon <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="o" /> n'est pas un objet <see cref="T:System.Security.Policy.Publisher" />.</exception>
    </member>
    <member name="M:System.Security.Policy.Publisher.GetHashCode">
      <summary>Obtient le code de hachage du <see cref="P:System.Security.Policy.Publisher.Certificate" /> actuel.</summary>
      <returns>Code de hachage du <see cref="P:System.Security.Policy.Publisher.Certificate" /> actuel.</returns>
    </member>
    <member name="M:System.Security.Policy.Publisher.ToString">
      <summary>Retourne une chaîne représentant le <see cref="T:System.Security.Policy.Publisher" /> en cours.</summary>
      <returns>Représentation du <see cref="T:System.Security.Policy.Publisher" /> en cours.</returns>
    </member>
    <member name="T:System.Security.Policy.PublisherMembershipCondition">
      <summary>Détermine si un assembly appartient à un groupe de codes en vérifiant son certificat Authenticode X.509v3 d'éditeur de logiciels. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Policy.PublisherMembershipCondition" /> avec le certificat Authenticode X.509v3 qui détermine l'appartenance (membership).</summary>
      <param name="certificate">
        <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> qui contient la clé publique de l'éditeur de logiciels.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="certificate" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Security.Policy.PublisherMembershipCondition.Certificate">
      <summary>Obtient ou définit le certificat Authenticode X.509v3 pour lequel la condition d'appartenance se vérifie.</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> pour lequel la condition d'appartenance se vérifie.</returns>
      <exception cref="T:System.ArgumentNullException">La valeur de la propriété est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary>Détermine si la preuve spécifiée remplit la condition d'appartenance.</summary>
      <param name="evidence">
        <see cref="T:System.Security.Policy.Evidence" /> sur lequel le test doit être effectué.</param>
      <returns>
        <see langword="true" /> si la preuve spécifiée remplit la condition d'appartenance ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">La propriété <see cref="P:System.Security.Policy.PublisherMembershipCondition.Certificate" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.Copy">
      <summary>Crée une copie équivalente de la condition d'appartenance.</summary>
      <returns>Nouvelle copie identique de la condition d'appartenance actuelle.</returns>
      <exception cref="T:System.ArgumentNullException">La propriété <see cref="P:System.Security.Policy.PublisherMembershipCondition.Certificate" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.Equals(System.Object)">
      <summary>Détermine si le certificat d'éditeur de l'objet spécifié est équivalent au certificat d'éditeur contenu dans le <see cref="T:System.Security.Policy.PublisherMembershipCondition" /> en cours.</summary>
      <param name="o">Objet à comparer au <see cref="T:System.Security.Policy.PublisherMembershipCondition" /> en cours.</param>
      <returns>
        <see langword="true" /> si le certificat d'éditeur de l'objet spécifié est équivalent au certificat d'éditeur contenu dans le <see cref="T:System.Security.Policy.PublisherMembershipCondition" /> en cours ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">La propriété <see cref="P:System.Security.Policy.PublisherMembershipCondition.Certificate" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruit un objet de sécurité avec un état spécifié à partir d’un encodage XML.</summary>
      <param name="e">Encodage XML à utiliser pour reconstruire l’objet de sécurité.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="e" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="e" /> n'est pas un élément de condition d'appartenance valide.</exception>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>Reconstruit un objet de sécurité avec un état spécifié à partir d’un encodage XML.</summary>
      <param name="e">Encodage XML à utiliser pour reconstruire l’objet de sécurité.</param>
      <param name="level">Contexte <see cref="T:System.Security.Policy.PolicyLevel" />, utilisé pour résoudre des références <see cref="T:System.Security.NamedPermissionSet" />.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="e" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="e" /> n'est pas un élément de condition d'appartenance valide.</exception>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.GetHashCode">
      <summary>Obtient le code de hachage pour la condition d'appartenance actuelle.</summary>
      <returns>Code de hachage pour la condition d'appartenance actuelle.</returns>
      <exception cref="T:System.ArgumentNullException">La propriété <see cref="P:System.Security.Policy.PublisherMembershipCondition.Certificate" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.ToString">
      <summary>Crée et retourne une représentation de type chaîne de <see cref="T:System.Security.Policy.PublisherMembershipCondition" />.</summary>
      <returns>Représentation de <see cref="T:System.Security.Policy.PublisherMembershipCondition" />.</returns>
      <exception cref="T:System.ArgumentNullException">La propriété <see cref="P:System.Security.Policy.PublisherMembershipCondition.Certificate" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.ToXml">
      <summary>Crée un codage XML de l’objet de sécurité et de son état actuel.</summary>
      <returns>Encodage XML de l’objet de sécurité, y compris les informations d’état éventuelles.</returns>
      <exception cref="T:System.ArgumentNullException">La propriété <see cref="P:System.Security.Policy.PublisherMembershipCondition.Certificate" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>Crée un codage XML de l'objet de sécurité et de son état actuel avec le <see cref="T:System.Security.Policy.PolicyLevel" /> spécifié.</summary>
      <param name="level">Contexte <see cref="T:System.Security.Policy.PolicyLevel" />, qui est utilisé pour résoudre des références <see cref="T:System.Security.NamedPermissionSet" />.</param>
      <returns>Encodage XML de l’objet de sécurité, y compris les informations d’état éventuelles.</returns>
      <exception cref="T:System.ArgumentNullException">La propriété <see cref="P:System.Security.Policy.PublisherMembershipCondition.Certificate" /> est <see langword="null" />.</exception>
    </member>
    <member name="T:System.Security.Policy.Site">
      <summary>Fournit le site Web d'origine d'un assembly de code en tant que preuve pour une évaluation de stratégie. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Policy.Site.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Policy.Site" /> avec le site Web d'origine d'un assembly de code.</summary>
      <param name="name">Site Web d'origine pour l'assembly de code associé.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="name" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.Site.Copy">
      <summary>Crée une copie équivalente de l'objet <see cref="T:System.Security.Policy.Site" />.</summary>
      <returns>Nouvel objet qui est identique à l'objet actuel de <see cref="T:System.Security.Policy.Site" />.</returns>
    </member>
    <member name="M:System.Security.Policy.Site.CreateFromUrl(System.String)">
      <summary>Crée un objet <see cref="T:System.Security.Policy.Site" /> à partir de l'URL spécifiée.</summary>
      <param name="url">URL à partir de laquelle créer le nouvel objet <see cref="T:System.Security.Policy.Site" />.</param>
      <returns>Nouvel objet de site.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="url" /> n'est pas une URL valide.  

ou - 
Le paramètre <paramref name="url" /> est un nom de fichier.</exception>
    </member>
    <member name="M:System.Security.Policy.Site.CreateIdentityPermission(System.Security.Policy.Evidence)">
      <summary>Crée une autorisation d'identité qui correspond à l'objet <see cref="T:System.Security.Policy.Site" /> en cours.</summary>
      <param name="evidence">Preuves à partir desquelles l'autorisation d'identité doit être créée.</param>
      <returns>Autorisation d'identité de site pour l'objet actuel de <see cref="T:System.Security.Policy.Site" />.</returns>
    </member>
    <member name="M:System.Security.Policy.Site.Equals(System.Object)">
      <summary>Vérifie si le <see cref="T:System.Security.Policy.Site" /> en cours et l'objet spécifié sont équivalents.</summary>
      <param name="o">Objet à tester pour savoir s'il est équivalent à l'objet actif.</param>
      <returns>
        <see langword="true" /> si les deux instances de la classe <see cref="T:System.Security.Policy.Site" /> sont égales ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.Site.GetHashCode">
      <summary>Retourne le code de hachage du nom de site Web actuel.</summary>
      <returns>Code de hachage du nom de site Web actuel.</returns>
    </member>
    <member name="P:System.Security.Policy.Site.Name">
      <summary>Obtient le site Web d'origine de l'assembly du code.</summary>
      <returns>Nom du site Web d'origine de l'assembly du code.</returns>
    </member>
    <member name="M:System.Security.Policy.Site.ToString">
      <summary>Retourne une chaîne représentant l'objet <see cref="T:System.Security.Policy.Site" /> en cours.</summary>
      <returns>Représentation du site actuel.</returns>
    </member>
    <member name="T:System.Security.Policy.SiteMembershipCondition">
      <summary>Détermine si un assembly appartient à un groupe de codes en vérifiant le site dont il provient. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Policy.SiteMembershipCondition" /> avec le nom du site qui détermine une appartenance.</summary>
      <param name="site">Nom du site ou expression générique.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="site" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="site" /> n’est pas une valeur <see cref="T:System.Security.Policy.Site" /> valide.</exception>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary>Détermine si la preuve spécifiée remplit la condition d'appartenance.</summary>
      <param name="evidence">
        <see cref="T:System.Security.Policy.Evidence" /> sur lequel le test doit être effectué.</param>
      <returns>
        <see langword="true" /> si la preuve spécifiée remplit la condition d'appartenance ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">La propriété <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.Copy">
      <summary>Crée une copie équivalente de la condition d'appartenance.</summary>
      <returns>Nouvelle copie identique de la condition d'appartenance actuelle.</returns>
      <exception cref="T:System.ArgumentException">La propriété <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.Equals(System.Object)">
      <summary>Détermine si le site de l'objet <see cref="T:System.Security.Policy.SiteMembershipCondition" /> spécifié est équivalent au site contenu dans le <see cref="T:System.Security.Policy.SiteMembershipCondition" /> en cours.</summary>
      <param name="o">Objet <see cref="T:System.Security.Policy.SiteMembershipCondition" /> à comparer au <see cref="T:System.Security.Policy.SiteMembershipCondition" /> en cours.</param>
      <returns>
        <see langword="true" /> si le site de l'objet <see cref="T:System.Security.Policy.SiteMembershipCondition" /> spécifié est équivalent au site contenu dans le <see cref="T:System.Security.Policy.SiteMembershipCondition" /> en cours ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">La propriété <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> pour l'objet en cours ou l'objet spécifié est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruit un objet de sécurité avec un état spécifié à partir d’un encodage XML.</summary>
      <param name="e">Encodage XML à utiliser pour reconstruire l’objet de sécurité.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="e" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="e" /> n'est pas un élément de condition d'appartenance valide.</exception>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>Reconstruit un objet de sécurité avec un état spécifié à partir d’un encodage XML.</summary>
      <param name="e">Encodage XML à utiliser pour reconstruire l’objet de sécurité.</param>
      <param name="level">Contexte <see cref="T:System.Security.Policy.PolicyLevel" />, utilisé pour résoudre des références <see cref="T:System.Security.NamedPermissionSet" />.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="e" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="e" /> n'est pas un élément de condition d'appartenance valide.</exception>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.GetHashCode">
      <summary>Obtient le code de hachage pour la condition d'appartenance actuelle.</summary>
      <returns>Code de hachage pour la condition d'appartenance actuelle.</returns>
      <exception cref="T:System.ArgumentException">La propriété <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> est <see langword="null" />.</exception>
    </member>
    <member name="P:System.Security.Policy.SiteMembershipCondition.Site">
      <summary>Obtient ou définit le site pour lequel la condition d'appartenance se vérifie.</summary>
      <returns>Site pour lequel la condition d'appartenance se vérifie.</returns>
      <exception cref="T:System.ArgumentNullException">Une tentative est effectuée pour attribuer à <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Une tentative est effectuée pour affecter un <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> non valide à <see cref="T:System.Security.Policy.Site" />.</exception>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.ToString">
      <summary>Crée et retourne une chaîne représentant la condition d'appartenance.</summary>
      <returns>Chaîne représentant la condition d'appartenance.</returns>
      <exception cref="T:System.ArgumentException">La propriété <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.ToXml">
      <summary>Crée un codage XML de l’objet de sécurité et de son état actuel.</summary>
      <returns>Encodage XML de l’objet de sécurité, y compris les informations d’état éventuelles.</returns>
      <exception cref="T:System.ArgumentException">La propriété <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>Crée un codage XML de l'objet de sécurité et de son état actuel avec le <see cref="T:System.Security.Policy.PolicyLevel" /> spécifié.</summary>
      <param name="level">Contexte <see cref="T:System.Security.Policy.PolicyLevel" />, utilisé pour résoudre des références <see cref="T:System.Security.NamedPermissionSet" />.</param>
      <returns>Encodage XML de l’objet de sécurité, y compris les informations d’état éventuelles.</returns>
      <exception cref="T:System.ArgumentException">La propriété <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> est <see langword="null" />.</exception>
    </member>
    <member name="T:System.Security.Policy.StrongName">
      <summary>Fournit le nom fort d'un assembly de code en tant que preuve pour une évaluation de stratégie. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Policy.StrongName.#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Policy.StrongName" /> avec le nom, la version et le blob de clé publique du nom fort.</summary>
      <param name="blob">
        <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" /> de l'éditeur de logiciels.</param>
      <param name="name">Section de nom simple du nom fort.</param>
      <param name="version">
        <see cref="T:System.Version" /> du nom fort.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="blob" /> a la valeur <see langword="null" />.  
ou 
Le paramètre <paramref name="name" /> a la valeur <see langword="null" />.  
ou 
Le paramètre <paramref name="version" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="name" /> est une chaîne vide ("").</exception>
    </member>
    <member name="M:System.Security.Policy.StrongName.Copy">
      <summary>Crée une copie équivalente du <see cref="T:System.Security.Policy.StrongName" /> en cours.</summary>
      <returns>Nouvelle copie identique du <see cref="T:System.Security.Policy.StrongName" /> en cours.</returns>
    </member>
    <member name="M:System.Security.Policy.StrongName.CreateIdentityPermission(System.Security.Policy.Evidence)">
      <summary>Crée <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> qui correspond au <see cref="T:System.Security.Policy.StrongName" /> en cours.</summary>
      <param name="evidence">
        <see cref="T:System.Security.Policy.Evidence" /> à partir duquel <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> doit être créé.</param>
      <returns>
        <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> pour le <see cref="T:System.Security.Policy.StrongName" /> spécifié.</returns>
    </member>
    <member name="M:System.Security.Policy.StrongName.Equals(System.Object)">
      <summary>Détermine si le nom fort spécifié est équivalent au nom fort actuel.</summary>
      <param name="o">Nom fort à comparer au nom fort actuel.</param>
      <returns>
        <see langword="true" /> si le nom fort spécifié est équivalent au nom fort actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.StrongName.GetHashCode">
      <summary>Obtient le code de hachage du <see cref="T:System.Security.Policy.StrongName" /> actuel.</summary>
      <returns>Code de hachage du <see cref="T:System.Security.Policy.StrongName" /> actuel.</returns>
    </member>
    <member name="P:System.Security.Policy.StrongName.Name">
      <summary>Obtient le nom simple du <see cref="T:System.Security.Policy.StrongName" /> en cours.</summary>
      <returns>Partie du nom simple de <see cref="T:System.Security.Policy.StrongName" />.</returns>
    </member>
    <member name="P:System.Security.Policy.StrongName.PublicKey">
      <summary>Obtient le <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" /> du <see cref="T:System.Security.Policy.StrongName" /> en cours.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" /> du <see cref="T:System.Security.Policy.StrongName" /> en cours.</returns>
    </member>
    <member name="M:System.Security.Policy.StrongName.ToString">
      <summary>Crée une chaîne représentant le <see cref="T:System.Security.Policy.StrongName" /> en cours.</summary>
      <returns>Représentation du <see cref="T:System.Security.Policy.StrongName" /> en cours.</returns>
    </member>
    <member name="P:System.Security.Policy.StrongName.Version">
      <summary>Obtient le <see cref="T:System.Version" /> du <see cref="T:System.Security.Policy.StrongName" /> en cours.</summary>
      <returns>
        <see cref="T:System.Version" /> du <see cref="T:System.Security.Policy.StrongName" /> en cours.</returns>
    </member>
    <member name="T:System.Security.Policy.StrongNameMembershipCondition">
      <summary>Détermine si un assembly appartient à un groupe de codes en vérifiant son nom fort. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> avec le nom, le numéro de version et le blob de clé publique du nom fort déterminant l'appartenance (membership).</summary>
      <param name="blob">Blob de clé publique du nom fort de l'éditeur de logiciels.</param>
      <param name="name">Section de nom simple du nom fort.</param>
      <param name="version">Numéro de version du nom fort.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="blob" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="name" /> a la valeur <see langword="null" />.  
ou 
Le paramètre <paramref name="name" /> est une chaîne vide ("").</exception>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary>Détermine si la preuve spécifiée remplit la condition d'appartenance.</summary>
      <param name="evidence">
        <see cref="T:System.Security.Policy.Evidence" /> sur lequel le test doit être effectué.</param>
      <returns>
        <see langword="true" /> si la preuve spécifiée remplit la condition d'appartenance ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.Copy">
      <summary>Crée une copie équivalente du <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> en cours.</summary>
      <returns>Nouvelle copie identique du <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> en cours.</returns>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.Equals(System.Object)">
      <summary>Détermine si le <see cref="T:System.Security.Policy.StrongName" /> de l'objet spécifié est équivalent au <see cref="T:System.Security.Policy.StrongName" /> contenu dans le <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> en cours.</summary>
      <param name="o">Objet à comparer au <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> en cours.</param>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Security.Policy.StrongName" /> de l'objet spécifié est équivalent au <see cref="T:System.Security.Policy.StrongName" /> contenu dans le <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> en cours ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">La propriété <see cref="P:System.Security.Policy.StrongNameMembershipCondition.PublicKey" /> pour l'objet en cours ou l'objet spécifié est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruit un objet de sécurité avec un état spécifié à partir d’un encodage XML.</summary>
      <param name="e">Encodage XML à utiliser pour reconstruire l’objet de sécurité.</param>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>Reconstruit un objet de sécurité avec un état spécifié à partir d’un encodage XML.</summary>
      <param name="e">Encodage XML à utiliser pour reconstruire l’objet de sécurité.</param>
      <param name="level">Contexte <see cref="T:System.Security.Policy.PolicyLevel" />, utilisé pour résoudre des références <see cref="T:System.Security.NamedPermissionSet" />.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="e" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="e" /> n'est pas un élément de condition d'appartenance valide.</exception>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.GetHashCode">
      <summary>Retourne le code de hachage pour le <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> en cours.</summary>
      <returns>Code de hachage pour le <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> en cours.</returns>
      <exception cref="T:System.ArgumentException">La propriété <see cref="P:System.Security.Policy.StrongNameMembershipCondition.PublicKey" /> est <see langword="null" />.</exception>
    </member>
    <member name="P:System.Security.Policy.StrongNameMembershipCondition.Name">
      <summary>Obtient ou définit le nom simple de <see cref="T:System.Security.Policy.StrongName" /> pour lequel la condition d'appartenance se vérifie.</summary>
      <returns>Nom simple de <see cref="T:System.Security.Policy.StrongName" /> pour lequel la condition d'appartenance se vérifie.</returns>
      <exception cref="T:System.ArgumentException">La valeur est <see langword="null" />.  

ou - 
La valeur est une chaîne vide ("").</exception>
    </member>
    <member name="P:System.Security.Policy.StrongNameMembershipCondition.PublicKey">
      <summary>Obtient ou définit le <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" /> de <see cref="T:System.Security.Policy.StrongName" /> pour lequel la condition d'appartenance se vérifie.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" /> de <see cref="T:System.Security.Policy.StrongName" /> pour lequel la condition d'appartenance se vérifie.</returns>
      <exception cref="T:System.ArgumentNullException">Une tentative est effectuée pour affecter <see langword="null" /> à <see cref="P:System.Security.Policy.StrongNameMembershipCondition.PublicKey" />.</exception>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.ToString">
      <summary>Crée et retourne une chaîne représentant la valeur <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> actuelle.</summary>
      <returns>Représentation du <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> en cours.</returns>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.ToXml">
      <summary>Crée un codage XML de l’objet de sécurité et de son état actuel.</summary>
      <returns>Encodage XML de l’objet de sécurité, y compris les informations d’état éventuelles.</returns>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>Crée un codage XML de l'objet de sécurité et de son état actuel avec le <see cref="T:System.Security.Policy.PolicyLevel" /> spécifié.</summary>
      <param name="level">Contexte <see cref="T:System.Security.Policy.PolicyLevel" />, qui est utilisé pour résoudre des références <see cref="T:System.Security.NamedPermissionSet" />.</param>
      <returns>Encodage XML de l’objet de sécurité, y compris les informations d’état éventuelles.</returns>
    </member>
    <member name="P:System.Security.Policy.StrongNameMembershipCondition.Version">
      <summary>Obtient ou définit le <see cref="T:System.Version" /> de <see cref="T:System.Security.Policy.StrongName" /> pour lequel la condition d'appartenance se vérifie.</summary>
      <returns>
        <see cref="T:System.Version" /> de <see cref="T:System.Security.Policy.StrongName" /> pour lequel la condition d'appartenance se vérifie.</returns>
    </member>
    <member name="T:System.Security.Policy.TrustManagerContext">
      <summary>Représente le contexte du gestionnaire de confiance à prendre en considération lorsque vous prenez la décision d'exécuter une application et lorsque vous installez la sécurité d'un nouveau <see cref="T:System.AppDomain" /> dans lequel exécuter une application.</summary>
    </member>
    <member name="M:System.Security.Policy.TrustManagerContext.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Policy.TrustManagerContext" />.</summary>
    </member>
    <member name="M:System.Security.Policy.TrustManagerContext.#ctor(System.Security.Policy.TrustManagerUIContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Policy.TrustManagerContext" /> à l'aide de l'objet <see cref="T:System.Security.Policy.TrustManagerUIContext" /> spécifié.</summary>
      <param name="uiContext">Une des valeurs <see cref="T:System.Security.Policy.TrustManagerUIContext" /> qui spécifient le type d'interface utilisateur du gestionnaire de confiance à utiliser.</param>
    </member>
    <member name="P:System.Security.Policy.TrustManagerContext.IgnorePersistedDecision">
      <summary>Obtient ou définit une valeur qui indique si le gestionnaire de sécurité de l'application doit ignorer les décisions persistantes et appeler le gestionnaire de confiance.</summary>
      <returns>
        <see langword="true" /> pour appeler le gestionnaire de confiance ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Policy.TrustManagerContext.KeepAlive">
      <summary>Obtient ou définit une valeur qui indique si le gestionnaire de confiance doit mettre en cache l'état de cette application, pour faciliter les demandes ultérieures de détermination de l'approbation de l'application.</summary>
      <returns>
        <see langword="true" /> pour mettre en cache les données d'état ; sinon <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Policy.TrustManagerContext.NoPrompt">
      <summary>Obtient ou définit une valeur qui indique si le gestionnaire de confiance doit inviter l'utilisateur à fournir les décisions d'approbation.</summary>
      <returns>
        <see langword="true" /> pour ne pas inviter l'utilisateur ; <see langword="false" /> pour inviter l'utilisateur. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Policy.TrustManagerContext.Persist">
      <summary>Obtient ou définit une valeur qui indique si la réponse de l'utilisateur à la boîte de dialogue de consentement doit persister.</summary>
      <returns>
        <see langword="true" /> pour mettre en cache les données d'état ; sinon <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.Security.Policy.TrustManagerContext.PreviousApplicationIdentity">
      <summary>Obtient ou définit l'identité de l'application précédente.</summary>
      <returns>Objet <see cref="T:System.ApplicationIdentity" /> représentant l'identité <see cref="T:System.ApplicationIdentity" /> précédente.</returns>
    </member>
    <member name="P:System.Security.Policy.TrustManagerContext.UIContext">
      <summary>Obtient ou définit le type d'interface utilisateur que le gestionnaire de confiance doit afficher.</summary>
      <returns>Une des valeurs de <see cref="T:System.Security.Policy.TrustManagerUIContext" />. La valeur par défaut est <see cref="F:System.Security.Policy.TrustManagerUIContext.Run" />.</returns>
    </member>
    <member name="T:System.Security.Policy.TrustManagerUIContext">
      <summary>Spécifie le type d'interface utilisateur que le gestionnaire de confiance doit utiliser pour les décisions concernant les approbations.</summary>
    </member>
    <member name="F:System.Security.Policy.TrustManagerUIContext.Install">
      <summary>Interface utilisateur d'installation.</summary>
    </member>
    <member name="F:System.Security.Policy.TrustManagerUIContext.Run">
      <summary>Interface utilisateur d'exécution.</summary>
    </member>
    <member name="F:System.Security.Policy.TrustManagerUIContext.Upgrade">
      <summary>Interface utilisateur de mise à niveau.</summary>
    </member>
    <member name="T:System.Security.Policy.UnionCodeGroup">
      <summary>Représente un groupe de codes dont l'instruction de stratégie est l'union de l'instruction de stratégie du groupe de codes actuel et de l'instruction de stratégie de tous ses groupes de codes enfants correspondants. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Policy.UnionCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Policy.UnionCodeGroup" />.</summary>
      <param name="membershipCondition">Condition d'appartenance qui teste les preuves pour déterminer si ce groupe de codes applique une stratégie.</param>
      <param name="policy">Instruction de stratégie pour le groupe de codes sous la forme d'un jeu d'autorisations et d'attributs pour attribuer du code correspondant à la condition d'appartenance.</param>
      <exception cref="T:System.ArgumentException">Le type du paramètre <paramref name="membershipCondition" /> n'est pas valide.  
ou 
Le type du paramètre <paramref name="policy" /> n'est pas valide.</exception>
    </member>
    <member name="M:System.Security.Policy.UnionCodeGroup.Copy">
      <summary>Effectue une copie complète du groupe de codes actuel.</summary>
      <returns>Copie équivalente du groupe de codes actuel, incluant ses conditions d'appartenance et ses groupes de codes enfants.</returns>
    </member>
    <member name="P:System.Security.Policy.UnionCodeGroup.MergeLogic">
      <summary>Obtient la logique de fusion.</summary>
      <returns>Toujours la chaîne « Union ».</returns>
    </member>
    <member name="M:System.Security.Policy.UnionCodeGroup.Resolve(System.Security.Policy.Evidence)">
      <summary>Résout la stratégie pour le groupe de codes et ses descendants pour un ensemble de preuves.</summary>
      <param name="evidence">Preuve pour l'assembly.</param>
      <returns>Instruction de stratégie comprenant les autorisations accordées par le groupe de codes avec des attributs facultatifs ou <see langword="null" /> si le groupe de codes ne s'applique pas (la condition d'appartenance ne correspond pas à la preuve spécifiée).</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="evidence" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Security.Policy.PolicyException">Plusieurs groupes de code (y compris le groupe de codes parent et les groupes de codes enfants) sont marqués <see cref="F:System.Security.Policy.PolicyStatementAttribute.Exclusive" />.</exception>
    </member>
    <member name="M:System.Security.Policy.UnionCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
      <summary>Résout des groupes de codes correspondants.</summary>
      <param name="evidence">Preuve pour l'assembly.</param>
      <returns>Ensemble complet de groupes de codes qui ont été trouvés par la preuve.</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="evidence" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="T:System.Security.Policy.Url">
      <summary>Fournit l'URL d'origine d'un assembly de code en tant que preuve pour une évaluation de stratégie. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Policy.Url.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Policy.Url" /> avec l'URL d'origine d'un assembly de code.</summary>
      <param name="name">URL d'origine pour l'assembly de code associé.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="name" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.Url.Copy">
      <summary>Crée une nouvelle copie de l'objet de preuve.</summary>
      <returns>Nouvelle copie identique de l'objet de preuve.</returns>
    </member>
    <member name="M:System.Security.Policy.Url.CreateIdentityPermission(System.Security.Policy.Evidence)">
      <summary>Crée une autorisation d'identité correspondant à l'instance actuelle de la classe de preuve <see cref="T:System.Security.Policy.Url" />.</summary>
      <param name="evidence">Ensemble de preuves à partir duquel l'autorisation d'identité doit être créée.</param>
      <returns>
        <see cref="T:System.Security.Permissions.UrlIdentityPermission" /> pour la preuve <see cref="T:System.Security.Policy.Url" /> spécifiée.</returns>
    </member>
    <member name="M:System.Security.Policy.Url.Equals(System.Object)">
      <summary>Vérifie si l'objet de preuve <see cref="T:System.Security.Policy.Url" /> en cours et l'objet spécifié sont équivalents.</summary>
      <param name="o">Objet de preuve <see cref="T:System.Security.Policy.Url" /> à vérifier pour savoir s'il est équivalent à l'objet en cours.</param>
      <returns>
        <see langword="true" /> si les deux objets <see cref="T:System.Security.Policy.Url" /> sont égaux ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Policy.Url.GetHashCode">
      <summary>Obtient le code de hachage de l'URL actuelle.</summary>
      <returns>Code de hachage de l'URL actuelle.</returns>
    </member>
    <member name="M:System.Security.Policy.Url.ToString">
      <summary>Retourne une chaîne représentant le <see cref="T:System.Security.Policy.Url" /> en cours.</summary>
      <returns>Représentation du <see cref="T:System.Security.Policy.Url" /> en cours.</returns>
    </member>
    <member name="P:System.Security.Policy.Url.Value">
      <summary>Obtient l'URL d'origine de l'assembly du code.</summary>
      <returns>URL d'origine de l'assembly du code.</returns>
    </member>
    <member name="T:System.Security.Policy.UrlMembershipCondition">
      <summary>Détermine si un assembly appartient à un groupe de codes en testant son URL. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Policy.UrlMembershipCondition" /> avec l'URL qui détermine une appartenance (membership).</summary>
      <param name="url">URL à vérifier.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="url" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="url" /> doit être un URI absolu.</exception>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary>Détermine si la preuve spécifiée remplit la condition d'appartenance.</summary>
      <param name="evidence">Ensemble de preuves sur lequel le test doit être effectué.</param>
      <returns>
        <see langword="true" /> si la preuve spécifiée remplit la condition d'appartenance ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">La propriété <see cref="P:System.Security.Policy.UrlMembershipCondition.Url" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.Copy">
      <summary>Crée une copie équivalente de la condition d'appartenance.</summary>
      <returns>Nouvelle copie identique de la condition d'appartenance actuelle.</returns>
      <exception cref="T:System.ArgumentNullException">La propriété <see cref="P:System.Security.Policy.UrlMembershipCondition.Url" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.Equals(System.Object)">
      <summary>Détermine si l'URL de l'objet spécifié est équivalente à l'URL contenue dans le <see cref="T:System.Security.Policy.UrlMembershipCondition" /> en cours.</summary>
      <param name="o">Objet à comparer au <see cref="T:System.Security.Policy.UrlMembershipCondition" /> en cours.</param>
      <returns>
        <see langword="true" /> si l'URL de l'objet spécifié est équivalente à l'URL contenue dans le <see cref="T:System.Security.Policy.UrlMembershipCondition" /> en cours ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">La propriété <see cref="P:System.Security.Policy.UrlMembershipCondition.Url" /> pour l'objet en cours ou l'objet spécifié est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruit un objet de sécurité avec un état spécifié à partir d’un encodage XML.</summary>
      <param name="e">Encodage XML à utiliser pour reconstruire l’objet de sécurité.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="e" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="e" /> n'est pas un élément de condition d'appartenance valide.</exception>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>Reconstruit un objet de sécurité avec un état spécifié à partir d’un encodage XML.</summary>
      <param name="e">Encodage XML à utiliser pour reconstruire l’objet de sécurité.</param>
      <param name="level">Contexte de niveau de stratégie utilisé pour résoudre des références de jeu d'autorisations nommé.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="e" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="e" /> n'est pas un élément de condition d'appartenance valide.</exception>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.GetHashCode">
      <summary>Obtient le code de hachage pour la condition d'appartenance actuelle.</summary>
      <returns>Code de hachage pour la condition d'appartenance actuelle.</returns>
      <exception cref="T:System.ArgumentNullException">La propriété <see cref="P:System.Security.Policy.UrlMembershipCondition.Url" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.ToString">
      <summary>Crée et retourne une chaîne représentant la condition d'appartenance.</summary>
      <returns>Chaîne représentant l'état de la condition d'appartenance.</returns>
      <exception cref="T:System.ArgumentNullException">La propriété <see cref="P:System.Security.Policy.UrlMembershipCondition.Url" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.ToXml">
      <summary>Crée un codage XML de l’objet de sécurité et de son état actuel.</summary>
      <returns>Encodage XML de l’objet de sécurité, y compris les informations d’état éventuelles.</returns>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>Crée un codage XML de l'objet de sécurité et de son état actuel avec le <see cref="T:System.Security.Policy.PolicyLevel" /> spécifié.</summary>
      <param name="level">Contexte de niveau de stratégie utilisé pour résoudre des références de jeu d'autorisations nommé.</param>
      <returns>Encodage XML de l’objet de sécurité, y compris les informations d’état éventuelles.</returns>
      <exception cref="T:System.ArgumentNullException">La propriété <see cref="P:System.Security.Policy.UrlMembershipCondition.Url" /> est <see langword="null" />.</exception>
    </member>
    <member name="P:System.Security.Policy.UrlMembershipCondition.Url">
      <summary>Obtient ou définit l'URL pour laquelle la condition d'appartenance se vérifie.</summary>
      <returns>URL pour laquelle la condition d'appartenance se vérifie.</returns>
      <exception cref="T:System.ArgumentNullException">Une tentative est effectuée pour attribuer à <see cref="P:System.Security.Policy.UrlMembershipCondition.Url" /> la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La valeur n'est pas une URL absolue.</exception>
    </member>
    <member name="T:System.Security.Policy.Zone">
      <summary>Fournit la zone de sécurité d'un assembly de code en tant que preuve pour une évaluation de stratégie. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Policy.Zone.#ctor(System.Security.SecurityZone)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Policy.Zone" /> avec la zone d'origine d'un assembly de code.</summary>
      <param name="zone">Zone d'origine pour l'assembly de code associé.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="zone" /> n’est pas une valeur <see cref="T:System.Security.SecurityZone" /> valide.</exception>
    </member>
    <member name="M:System.Security.Policy.Zone.Copy">
      <summary>Crée une copie équivalente de l'objet de preuve.</summary>
      <returns>Nouvelle copie identique de l'objet de preuve.</returns>
    </member>
    <member name="M:System.Security.Policy.Zone.CreateFromUrl(System.String)">
      <summary>Crée une nouvelle zone avec l'URL spécifiée.</summary>
      <param name="url">URL à partir de laquelle la zone doit être créée.</param>
      <returns>Nouvelle zone avec l'URL spécifiée.</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="url" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Policy.Zone.CreateIdentityPermission(System.Security.Policy.Evidence)">
      <summary>Crée une autorisation d'identité qui correspond à l'instance actuelle de la classe de preuve <see cref="T:System.Security.Policy.Zone" />.</summary>
      <param name="evidence">Ensemble de preuves à partir duquel l'autorisation d'identité doit être créée.</param>
      <returns>
        <see cref="T:System.Security.Permissions.ZoneIdentityPermission" /> pour la preuve <see cref="T:System.Security.Policy.Zone" /> spécifiée.</returns>
    </member>
    <member name="M:System.Security.Policy.Zone.Equals(System.Object)">
      <summary>Vérifie si l'objet de preuve <see cref="T:System.Security.Policy.Zone" /> en cours et l'objet spécifié sont équivalents.</summary>
      <param name="o">Objet de preuve <see cref="T:System.Security.Policy.Zone" /> à vérifier pour savoir s'il est équivalent à l'objet en cours.</param>
      <returns>
        <see langword="true" /> si les deux objets <see cref="T:System.Security.Policy.Zone" /> sont égaux ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="o" /> n'est pas un objet <see cref="T:System.Security.Policy.Zone" />.</exception>
    </member>
    <member name="M:System.Security.Policy.Zone.GetHashCode">
      <summary>Obtient le code de hachage de la zone en cours.</summary>
      <returns>Code de hachage de la zone en cours.</returns>
    </member>
    <member name="P:System.Security.Policy.Zone.SecurityZone">
      <summary>Obtient la zone d'origine de l'assembly du code.</summary>
      <returns>Zone d'origine de l'assembly du code.</returns>
    </member>
    <member name="M:System.Security.Policy.Zone.ToString">
      <summary>Retourne une chaîne représentant le <see cref="T:System.Security.Policy.Zone" /> en cours.</summary>
      <returns>Représentation du <see cref="T:System.Security.Policy.Zone" /> en cours.</returns>
    </member>
    <member name="T:System.Security.Policy.ZoneMembershipCondition">
      <summary>Détermine si un assembly appartient à un groupe de codes en vérifiant sa zone d'origine. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.#ctor(System.Security.SecurityZone)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Policy.ZoneMembershipCondition" /> avec la zone qui détermine une appartenance (membership).</summary>
      <param name="zone">
        <see cref="T:System.Security.SecurityZone" /> à vérifier.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="zone" /> n’est pas une valeur <see cref="T:System.Security.SecurityZone" /> valide.</exception>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary>Détermine si la preuve spécifiée remplit la condition d'appartenance.</summary>
      <param name="evidence">Ensemble de preuves sur lequel le test doit être effectué.</param>
      <returns>
        <see langword="true" /> si la preuve spécifiée remplit la condition d'appartenance ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">La propriété <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> n'est pas un <see cref="T:System.Security.SecurityZone" /> valide.</exception>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.Copy">
      <summary>Crée une copie équivalente de la condition d'appartenance.</summary>
      <returns>Nouvelle copie identique de la condition d'appartenance actuelle.</returns>
      <exception cref="T:System.ArgumentNullException">La propriété <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> n'est pas un <see cref="T:System.Security.SecurityZone" /> valide.</exception>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.Equals(System.Object)">
      <summary>Détermine si la zone de l'objet spécifié est équivalente à celle contenue dans le <see cref="T:System.Security.Policy.ZoneMembershipCondition" /> en cours.</summary>
      <param name="o">Objet à comparer au <see cref="T:System.Security.Policy.ZoneMembershipCondition" /> en cours.</param>
      <returns>
        <see langword="true" /> si la zone de l'objet spécifié est équivalente à la zone contenue dans le <see cref="T:System.Security.Policy.ZoneMembershipCondition" /> en cours ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">La propriété <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> pour l'objet en cours ou l'objet spécifié est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La propriété <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> pour l'objet en cours ou l'objet spécifié n'est pas un <see cref="T:System.Security.SecurityZone" /> valide.</exception>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruit un objet de sécurité avec un état spécifié à partir d’un encodage XML.</summary>
      <param name="e">Encodage XML à utiliser pour reconstruire l’objet de sécurité.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="e" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="e" /> n'est pas un élément de condition d'appartenance valide.</exception>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>Reconstruit un objet de sécurité avec un état spécifié à partir d’un encodage XML.</summary>
      <param name="e">Encodage XML à utiliser pour reconstruire l’objet de sécurité.</param>
      <param name="level">Contexte de niveau de stratégie utilisé pour résoudre des références de jeu d'autorisations nommé.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="e" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="e" /> n'est pas un élément de condition d'appartenance valide.</exception>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.GetHashCode">
      <summary>Obtient le code de hachage pour la condition d'appartenance actuelle.</summary>
      <returns>Code de hachage pour la condition d'appartenance actuelle.</returns>
      <exception cref="T:System.ArgumentNullException">La propriété <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> n'est pas un <see cref="T:System.Security.SecurityZone" /> valide.</exception>
    </member>
    <member name="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone">
      <summary>Obtient ou définit la zone pour laquelle la condition d'appartenance se vérifie.</summary>
      <returns>Zone pour laquelle la condition d'appartenance se vérifie.</returns>
      <exception cref="T:System.ArgumentNullException">La valeur est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Une tentative est effectuée pour affecter un <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> non valide à <see cref="T:System.Security.SecurityZone" />.</exception>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.ToString">
      <summary>Crée et retourne une chaîne représentant la condition d'appartenance.</summary>
      <returns>Chaîne représentant l'état de la condition d'appartenance.</returns>
      <exception cref="T:System.ArgumentNullException">La propriété <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> n'est pas un <see cref="T:System.Security.SecurityZone" /> valide.</exception>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.ToXml">
      <summary>Crée un codage XML de l’objet de sécurité et de son état actuel.</summary>
      <returns>Encodage XML de l’objet de sécurité, y compris les informations d’état éventuelles.</returns>
      <exception cref="T:System.ArgumentNullException">La propriété <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> n'est pas un <see cref="T:System.Security.SecurityZone" /> valide.</exception>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>Crée un codage XML de l'objet de sécurité et de son état actuel avec le <see cref="T:System.Security.Policy.PolicyLevel" /> spécifié.</summary>
      <param name="level">Contexte de niveau de stratégie utilisé pour résoudre des références de jeu d'autorisations nommé.</param>
      <returns>Encodage XML de l’objet de sécurité, y compris les informations d’état éventuelles.</returns>
      <exception cref="T:System.ArgumentNullException">La propriété <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> n'est pas un <see cref="T:System.Security.SecurityZone" /> valide.</exception>
    </member>
    <member name="T:System.Security.PolicyLevelType">
      <summary>Spécifie le type d'un niveau de stratégie de code managé.</summary>
    </member>
    <member name="F:System.Security.PolicyLevelType.AppDomain">
      <summary>Stratégie de sécurité pour tout le code managé dans une application.</summary>
    </member>
    <member name="F:System.Security.PolicyLevelType.Enterprise">
      <summary>Stratégie de sécurité pour tout le code managé dans une entreprise.</summary>
    </member>
    <member name="F:System.Security.PolicyLevelType.Machine">
      <summary>Stratégie de sécurité pour tout le code managé exécuté sur l'ordinateur.</summary>
    </member>
    <member name="F:System.Security.PolicyLevelType.User">
      <summary>Stratégie de sécurité pour tout le code managé exécuté par l'utilisateur.</summary>
    </member>
    <member name="T:System.Security.SecurityContext">
      <summary>Encapsule et propage toutes les données liées à la sécurité pour les contextes d'exécution transférés entre les threads. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.SecurityContext.Capture">
      <summary>Capture le contexte de sécurité du thread actuel.</summary>
      <returns>Contexte de sécurité du thread actuel.</returns>
    </member>
    <member name="M:System.Security.SecurityContext.CreateCopy">
      <summary>Crée une copie du contexte de sécurité actuel.</summary>
      <returns>Contexte de sécurité du thread actuel.</returns>
      <exception cref="T:System.InvalidOperationException">Le contexte de sécurité actuel a été utilisé précédemment, a été marshalé sur des domaines d'application ou n'a pas été acquis à l'aide de la méthode <see cref="M:System.Security.SecurityContext.Capture" />.</exception>
    </member>
    <member name="M:System.Security.SecurityContext.Dispose">
      <summary>Libère toutes les ressources utilisées par l'instance actuelle de la classe <see cref="T:System.Security.SecurityContext" />.</summary>
    </member>
    <member name="M:System.Security.SecurityContext.IsFlowSuppressed">
      <summary>Détermine si le flux du contexte de sécurité a été supprimé.</summary>
      <returns>
        <see langword="true" /> si le flux a été supprimé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.SecurityContext.IsWindowsIdentityFlowSuppressed">
      <summary>Détermine si le flux de la partie de l'identité Windows du contexte de sécurité actuel a été supprimé.</summary>
      <returns>
        <see langword="true" /> si le flux a été supprimé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.SecurityContext.RestoreFlow">
      <summary>Restaure le flux du contexte de sécurité sur des threads asynchrones.</summary>
      <exception cref="T:System.InvalidOperationException">Le contexte de sécurité est <see langword="null" /> ou une chaîne vide.</exception>
    </member>
    <member name="M:System.Security.SecurityContext.Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)">
      <summary>Exécute la méthode spécifiée dans le contexte de sécurité déterminé sur le thread actuel.</summary>
      <param name="securityContext">Contexte de sécurité à définir.</param>
      <param name="callback">Délégué qui représente la méthode à exécuter dans le contexte de sécurité spécifié.</param>
      <param name="state">Objet à passer à la méthode de rappel.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="securityContext" /> a la valeur <see langword="null" />.  

ou - 
Le <paramref name="securityContext" /> n'a pas été acquis à l'aide d'une opération de capture.  

ou - 
<paramref name="securityContext" /> a déjà été utilisé comme argument pour un appel à la méthode <see cref="M:System.Security.SecurityContext.Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)" />.</exception>
    </member>
    <member name="M:System.Security.SecurityContext.SuppressFlow">
      <summary>Supprime le flux du contexte de sécurité sur des threads asynchrones.</summary>
      <returns>Structure <see cref="T:System.Threading.AsyncFlowControl" /> pour restaurer le flux.</returns>
    </member>
    <member name="M:System.Security.SecurityContext.SuppressFlowWindowsIdentity">
      <summary>Supprime le flux de la partie de l'identité Windows du contexte de sécurité actuel sur les threads asynchrones.</summary>
      <returns>Structure de restauration du flux.</returns>
    </member>
    <member name="T:System.Security.SecurityContextSource">
      <summary>Identifie la source pour le contexte de sécurité.</summary>
    </member>
    <member name="F:System.Security.SecurityContextSource.CurrentAppDomain">
      <summary>Le domaine d'application actuel correspond à la source pour le contexte de sécurité.</summary>
    </member>
    <member name="F:System.Security.SecurityContextSource.CurrentAssembly">
      <summary>L'assembly actuel correspond à la source pour le contexte de sécurité.</summary>
    </member>
    <member name="T:System.Security.SecurityManager">
      <summary>Fournit le point d'accès principal pour les classes en interaction avec le système de sécurité. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="P:System.Security.SecurityManager.CheckExecutionRights">
      <summary>Obtient ou définit une valeur indiquant si le code doit avoir un indicateur <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Execution" /> pour s'exécuter.</summary>
      <returns>
        <see langword="true" /> si le code doit avoir <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Execution" /> pour s'exécuter ; sinon <see langword="false" />.</returns>
      <exception cref="T:System.Security.SecurityException">Le code qui appelle cette méthode ne dispose pas de <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />.</exception>
    </member>
    <member name="M:System.Security.SecurityManager.CurrentThreadRequiresSecurityContextCapture">
      <summary>Détermine si le thread actuel nécessite la capture du contexte de sécurité si son état de sécurité doit être recréé ultérieurement.</summary>
      <returns>
        <see langword="false" /> si la pile ne contient pas de domaines d'application partiellement fiables, pas d'assembly partiellement fiable et pas de <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> actuellement actif ou modificateur <see cref="M:System.Security.CodeAccessPermission.Deny" /> ; <see langword="true" /> si le common language runtime ne peut pas garantir que la pile ne contient aucun de ces éléments.</returns>
    </member>
    <member name="M:System.Security.SecurityManager.GetStandardSandbox(System.Security.Policy.Evidence)">
      <summary>Obtient un jeu d'autorisations qui peut être accordé en toute sécurité à une application qui dispose de la preuve fournie.</summary>
      <param name="evidence">Preuve hôte à associer à un jeu d'autorisations.</param>
      <returns>Jeu d'autorisations qui peut être utilisé comme un jeu accordé pour l'application qui dispose de la preuve fournie.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="evidence" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.SecurityManager.GetZoneAndOrigin(System.Collections.ArrayList@,System.Collections.ArrayList@)">
      <summary>Obtient les jeux d'autorisations accordées à l'identité de zone et à l'identité d'URL pour l'assembly en cours.</summary>
      <param name="zone">Paramètre de sortie qui contient un <see cref="T:System.Collections.ArrayList" /> des objets <see cref="P:System.Security.Permissions.ZoneIdentityPermissionAttribute.Zone" /> accordés.</param>
      <param name="origin">Paramètre de sortie qui contient un <see cref="T:System.Collections.ArrayList" /> des objets <see cref="T:System.Security.Permissions.UrlIdentityPermission" /> accordés.</param>
      <exception cref="T:System.Security.SecurityException">La demande de <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> a échoué.</exception>
    </member>
    <member name="M:System.Security.SecurityManager.IsGranted(System.Security.IPermission)">
      <summary>Détermine si une autorisation est accordée à l'appelant.</summary>
      <param name="perm">Autorisation à tester par rapport aux autorisations attribuées à l'appelant.</param>
      <returns>
        <see langword="true" /> si les autorisations accordées à l'appelant comprennent l'autorisation <paramref name="perm" /> ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.SecurityManager.LoadPolicyLevelFromFile(System.String,System.Security.PolicyLevelType)">
      <summary>Charge un <see cref="T:System.Security.Policy.PolicyLevel" /> à partir du fichier spécifié.</summary>
      <param name="path">Le chemin d’accès physique vers un fichier contenant les informations de stratégie de sécurité.</param>
      <param name="type">Une des valeurs d’énumération qui spécifie le type du niveau de stratégie à charger.</param>
      <returns>Le niveau de stratégie chargé.</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="path" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le fichier indiqué par le paramètre <paramref name="path" /> n’existe pas.</exception>
      <exception cref="T:System.Security.SecurityException">Le code qui appelle cette méthode ne dispose pas de <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />.  
ou 
Le code qui appelle cette méthode ne dispose pas de <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.  
ou 
Le code qui appelle cette méthode ne dispose pas de <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />.  
ou 
Le code qui appelle cette méthode ne dispose pas de <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />.</exception>
      <exception cref="T:System.NotSupportedException">Cette méthode utilise la stratégie de sécurité d’accès du code (CAS), qui est obsolète dans .NET Framework 4. Pour activer la stratégie de sécurité d’accès du code (CAS) pour la compatibilité avec les versions antérieures de .NET Framework, utilisez l’élément &lt;legacyCasPolicy&gt;.</exception>
    </member>
    <member name="M:System.Security.SecurityManager.LoadPolicyLevelFromString(System.String,System.Security.PolicyLevelType)">
      <summary>Charge <see cref="T:System.Security.Policy.PolicyLevel" /> à partir de la chaîne spécifiée.</summary>
      <param name="str">Représentation XML d'un niveau de stratégie de sécurité dans le même format que celui dans lequel il apparaît dans un fichier de configuration.</param>
      <param name="type">Une des valeurs d’énumération qui spécifie le type du niveau de stratégie à charger.</param>
      <returns>Le niveau de stratégie chargé.</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="str" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="str" /> n’est pas valide.</exception>
      <exception cref="T:System.Security.SecurityException">Le code qui appelle cette méthode ne dispose pas de <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />.</exception>
    </member>
    <member name="M:System.Security.SecurityManager.PolicyHierarchy">
      <summary>Fournit un énumérateur pour accéder à la hiérarchie de stratégie de sécurité par niveaux, par exemple les stratégies d'ordinateur et d'utilisateur.</summary>
      <returns>Un énumérateur pour les objets <see cref="T:System.Security.Policy.PolicyLevel" /> qui constituent la hiérarchie de stratégie de sécurité.</returns>
      <exception cref="T:System.NotSupportedException">Cette méthode utilise la stratégie de sécurité d’accès du code (CAS), qui est obsolète dans .NET Framework 4. Pour activer la stratégie de sécurité d’accès du code (CAS) pour la compatibilité avec les versions antérieures de .NET Framework, utilisez l’élément &lt;legacyCasPolicy&gt;.</exception>
      <exception cref="T:System.Security.SecurityException">Le code qui appelle cette méthode ne dispose pas de <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />.</exception>
    </member>
    <member name="M:System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence)">
      <summary>Détermine les autorisations à accorder au code en fonction de la preuve spécifiée.</summary>
      <param name="evidence">Ensemble de preuves utilisé pour évaluer la stratégie.</param>
      <returns>Le jeu d’autorisations qui peuvent être accordées par le système de sécurité.</returns>
      <exception cref="T:System.NotSupportedException">Cette méthode utilise la stratégie de sécurité d’accès du code (CAS), qui est obsolète dans .NET Framework 4. Pour activer la stratégie de sécurité d’accès du code (CAS) pour la compatibilité avec les versions antérieures de .NET Framework, utilisez l’élément &lt;legacyCasPolicy&gt;.</exception>
    </member>
    <member name="M:System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet@)">
      <summary>Détermine les autorisations à accorder au code en fonction de la preuve et des demandes spécifiées.</summary>
      <param name="evidence">Ensemble de preuves utilisé pour évaluer la stratégie.</param>
      <param name="reqdPset">Les autorisations requises que le code doit exécuter.</param>
      <param name="optPset">Les autorisations facultatives qui seront utilisées si elles sont accordées, mais qui ne sont pas requises pour l’exécution du code.</param>
      <param name="denyPset">Les autorisations refusées qui ne doivent jamais être accordées au code même si la stratégie le permet.</param>
      <param name="denied">Paramètre de sortie qui contient le jeu d’autorisations non accordées.</param>
      <returns>Le jeu d’autorisations qui pourraient être accordées par le système de sécurité.</returns>
      <exception cref="T:System.NotSupportedException">Cette méthode utilise la stratégie de sécurité d’accès du code (CAS), qui est obsolète dans .NET Framework 4. Pour activer la stratégie de sécurité d’accès du code (CAS) pour la compatibilité avec les versions antérieures de .NET Framework, utilisez l’élément &lt;legacyCasPolicy&gt;.</exception>
      <exception cref="T:System.Security.Policy.PolicyException">La stratégie ne parvient pas à accorder les autorisations minimales requises spécifiées par le paramètre <paramref name="reqdPset" />.</exception>
    </member>
    <member name="M:System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence[])">
      <summary>Détermine les autorisations à accorder au code en fonction de la preuve spécifiée.</summary>
      <param name="evidences">Tableau d’objets de preuve utilisés pour évaluer la stratégie.</param>
      <returns>Jeu d’autorisations appropriées pour l’ensemble des preuves fournies.</returns>
      <exception cref="T:System.NotSupportedException">Cette méthode utilise la stratégie de sécurité d’accès du code (CAS), qui est obsolète dans .NET Framework 4. Pour activer la stratégie de sécurité d’accès du code (CAS) pour la compatibilité avec les versions antérieures de .NET Framework, utilisez l’élément &lt;legacyCasPolicy&gt;.</exception>
    </member>
    <member name="M:System.Security.SecurityManager.ResolvePolicyGroups(System.Security.Policy.Evidence)">
      <summary>Obtient une collection de groupes de codes correspondant à la preuve spécifiée.</summary>
      <param name="evidence">Ensemble de preuves sur lequel la stratégie est évaluée.</param>
      <returns>Énumération de l’ensemble des groupes de codes correspondant à la preuve.</returns>
      <exception cref="T:System.NotSupportedException">Cette méthode utilise la stratégie de sécurité d’accès du code (CAS), qui est obsolète dans .NET Framework 4. Pour activer la stratégie de sécurité d’accès du code (CAS) pour la compatibilité avec les versions antérieures de .NET Framework, utilisez l’élément &lt;legacyCasPolicy&gt;.</exception>
    </member>
    <member name="M:System.Security.SecurityManager.ResolveSystemPolicy(System.Security.Policy.Evidence)">
      <summary>Détermine les autorisations à accorder au code selon la preuve spécifiée, à l’exclusion de la stratégie pour le niveau <see cref="T:System.AppDomain" />.</summary>
      <param name="evidence">Ensemble de preuves utilisé pour évaluer la stratégie.</param>
      <returns>Le jeu d’autorisations qui peuvent être accordées par le système de sécurité.</returns>
      <exception cref="T:System.NotSupportedException">Cette méthode utilise la stratégie de sécurité d’accès du code (CAS), qui est obsolète dans .NET Framework 4. Pour activer la stratégie de sécurité d’accès du code (CAS) pour la compatibilité avec les versions antérieures de .NET Framework, utilisez l’élément &lt;legacyCasPolicy&gt;.</exception>
    </member>
    <member name="M:System.Security.SecurityManager.SavePolicy">
      <summary>Enregistre l’état de stratégie de sécurité modifié.</summary>
      <exception cref="T:System.NotSupportedException">Cette méthode utilise la stratégie de sécurité d’accès du code (CAS), qui est obsolète dans .NET Framework 4. Pour activer la stratégie de sécurité d’accès du code (CAS) pour la compatibilité avec les versions antérieures de .NET Framework, utilisez l’élément &lt;legacyCasPolicy&gt;.</exception>
      <exception cref="T:System.Security.SecurityException">Le code qui appelle cette méthode ne dispose pas de <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />.</exception>
    </member>
    <member name="M:System.Security.SecurityManager.SavePolicyLevel(System.Security.Policy.PolicyLevel)">
      <summary>Enregistre un niveau de stratégie de sécurité modifié chargé avec <see cref="M:System.Security.SecurityManager.LoadPolicyLevelFromFile(System.String,System.Security.PolicyLevelType)" />.</summary>
      <param name="level">Objet de niveau de stratégie à enregistrer.</param>
      <exception cref="T:System.Security.SecurityException">Le code qui appelle cette méthode ne dispose pas de <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />.</exception>
      <exception cref="T:System.NotSupportedException">Cette méthode utilise la stratégie de sécurité d’accès du code (CAS), qui est obsolète dans .NET Framework 4. Pour activer la stratégie de sécurité d’accès du code (CAS) pour la compatibilité avec les versions antérieures de .NET Framework, utilisez l’élément &lt;legacyCasPolicy&gt;.</exception>
    </member>
    <member name="P:System.Security.SecurityManager.SecurityEnabled">
      <summary>Obtient ou définit une valeur indiquant si la sécurité est activée.</summary>
      <returns>
        <see langword="true" /> si la sécurité est activée ; sinon <see langword="false" />.</returns>
      <exception cref="T:System.Security.SecurityException">Le code qui appelle cette méthode ne dispose pas de <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />.</exception>
    </member>
    <member name="T:System.Security.SecurityState">
      <summary>Fournit une classe de base pour demander l'état de sécurité d'une action à l'objet <see cref="T:System.AppDomainManager" />.</summary>
    </member>
    <member name="M:System.Security.SecurityState.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.SecurityState" />.</summary>
    </member>
    <member name="M:System.Security.SecurityState.EnsureState">
      <summary>En cas de substitution dans une classe dérivée, garantit que l'état représenté par <see cref="T:System.Security.SecurityState" /> est disponible sur l'hôte.</summary>
    </member>
    <member name="M:System.Security.SecurityState.IsStateAvailable">
      <summary>Obtient une valeur qui indique si l'état pour cette implémentation de la classe <see cref="T:System.Security.SecurityState" /> est disponible sur l'hôte actuel.</summary>
      <returns>
        <see langword="true" /> si l'état est disponible ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Security.SecurityZone">
      <summary>Définit les valeurs entières correspondant aux zones de sécurité utilisées par la stratégie de sécurité.</summary>
    </member>
    <member name="F:System.Security.SecurityZone.Internet">
      <summary>La zone Internet est utilisée pour les sites Web de l'Internet qui n'appartiennent pas à une autre zone.</summary>
    </member>
    <member name="F:System.Security.SecurityZone.Intranet">
      <summary>La zone intranet est utilisée pour le contenu situé sur l'intranet d'une société. Les serveurs et les informations étant protégés par le pare-feu de la société, un utilisateur ou une entreprise peut assigner un niveau de confiance plus élevé au contenu figurant sur l'intranet.</summary>
    </member>
    <member name="F:System.Security.SecurityZone.MyComputer">
      <summary>La zone de l'ordinateur local est une zone implicite utilisée pour le contenu résidant sur l'ordinateur de l'utilisateur.</summary>
    </member>
    <member name="F:System.Security.SecurityZone.NoZone">
      <summary>Aucune zone n'est spécifiée.</summary>
    </member>
    <member name="F:System.Security.SecurityZone.Trusted">
      <summary>La zone des sites de confiance est utilisée pour le contenu des sites Web considérés comme étant plus fiables que d'autres sites Internet. Les utilisateurs peuvent se servir de cette zone pour assigner un plus haut niveau de confiance à ces sites et réduire ainsi le nombre de demandes d'authentification. Les URL de ces sites Web de confiance doivent être mappées dans cette zone par l'utilisateur.</summary>
    </member>
    <member name="F:System.Security.SecurityZone.Untrusted">
      <summary>La zone des sites sensibles est utilisée pour les sites Web dont le contenu risque de causer ou a pu causer des problèmes lors de son téléchargement. Les URL de ces sites Web qui ne sont pas dignes de confiance doivent être mappées dans cette zone par l'utilisateur.</summary>
    </member>
    <member name="T:System.Security.XmlSyntaxException">
      <summary>Exception levée en cas d'erreur de syntaxe dans une analyse XML. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.XmlSyntaxException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.XmlSyntaxException" /> avec des propriétés par défaut.</summary>
    </member>
    <member name="M:System.Security.XmlSyntaxException.#ctor(System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.XmlSyntaxException" /> avec le numéro de ligne où l'exception a été détectée.</summary>
      <param name="lineNumber">Numéro de ligne du flux XML où l'erreur de syntaxe XML a été détectée.</param>
    </member>
    <member name="M:System.Security.XmlSyntaxException.#ctor(System.Int32,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.XmlSyntaxException" /> avec un message d'erreur spécifié et le numéro de ligne où l'exception a été détectée.</summary>
      <param name="lineNumber">Numéro de ligne du flux XML où l'erreur de syntaxe XML a été détectée.</param>
      <param name="message">Message d'erreur qui explique la raison de l'exception.</param>
    </member>
    <member name="M:System.Security.XmlSyntaxException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.XmlSyntaxException" /> avec un message d'erreur spécifié.</summary>
      <param name="message">Message d'erreur qui explique la raison de l'exception.</param>
    </member>
    <member name="M:System.Security.XmlSyntaxException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.XmlSyntaxException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message d'erreur qui explique la raison de l'exception.</param>
      <param name="inner">Exception ayant provoqué l'exception actuelle. Si le paramètre <paramref name="inner" /> n'est pas <see langword="null" />, l'exception actuelle est levée dans un bloc <see langword="catch" /> qui gère l'exception interne.</param>
    </member>
    <member name="T:System.ServiceProcess.ServiceControllerPermission">
      <summary>Permet le contrôle des autorisations de Sécurité d'Accès du Code pour des contrôleurs de service.</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermission.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceProcess.ServiceControllerPermission" />.</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceProcess.ServiceControllerPermission" /> avec l'accès spécifié à des ressources.</summary>
      <param name="state">Une des valeurs de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="state" /> n’est pas une valeur valide d’<see cref="T:System.Security.Permissions.PermissionState" />.</exception>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermission.#ctor(System.ServiceProcess.ServiceControllerPermissionAccess,System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceProcess.ServiceControllerPermission" /> avec les niveaux d'accès d'autorisation spécifiés, le nom de l'ordinateur sur lequel le service réside et le nom court qui identifie le service sur le système.</summary>
      <param name="permissionAccess">Une des valeurs de <see cref="T:System.ServiceProcess.ServiceControllerPermissionAccess" />.</param>
      <param name="machineName">Nom de l'ordinateur sur lequel le service réside.</param>
      <param name="serviceName">Nom court qui identifie le service sur le système.</param>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermission.#ctor(System.ServiceProcess.ServiceControllerPermissionEntry[])">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceProcess.ServiceControllerPermission" /> avec les entrées d'autorisation spécifiées.</summary>
      <param name="permissionAccessEntries">Tableau d'objets <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" />. Cette valeur est affectée à la propriété <see cref="P:System.ServiceProcess.ServiceControllerPermission.PermissionEntries" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="permissionAccessEntries" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermission.PermissionEntries">
      <summary>Obtient la collection d'entrées d'autorisation pour cette demande d'autorisation.</summary>
      <returns>
        <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntryCollection" /> qui contient les entrées d'autorisation pour cette demande d'autorisation.</returns>
    </member>
    <member name="T:System.ServiceProcess.ServiceControllerPermissionAccess">
      <summary>Définit les niveaux d'accès employés par les classes d'autorisation <see cref="T:System.ServiceProcess.ServiceController" />.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerPermissionAccess.Browse">
      <summary>
        <see cref="T:System.ServiceProcess.ServiceController" /> peut se connecter aux services existants mais ne peut pas les contrôler.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerPermissionAccess.Control">
      <summary>
        <see cref="T:System.ServiceProcess.ServiceController" /> peut se connecter aux services existants et les contrôler.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerPermissionAccess.None">
      <summary>
        <see cref="T:System.ServiceProcess.ServiceController" /> ne possède aucune autorisation.</summary>
    </member>
    <member name="T:System.ServiceProcess.ServiceControllerPermissionAttribute">
      <summary>Permet des vérifications déclaratives des autorisations du contrôleur de service.</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceProcess.ServiceControllerPermissionAttribute" />.</summary>
      <param name="action">Une des valeurs de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionAttribute.CreatePermission">
      <summary>Crée l'autorisation en fonction des niveaux d'accès demandés définis à l'aide de la propriété <see cref="P:System.ServiceProcess.ServiceControllerPermissionAttribute.PermissionAccess" /> de l'attribut.</summary>
      <returns>
        <see cref="T:System.Security.IPermission" /> qui représente l'autorisation créée.</returns>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionAttribute.MachineName">
      <summary>Obtient ou définit le nom de l'ordinateur sur lequel le service réside.</summary>
      <returns>Nom de l'ordinateur qui exécute le service associé au <see cref="T:System.ServiceProcess.ServiceController" />.</returns>
      <exception cref="T:System.ArgumentException">La syntaxe <see cref="P:System.ServiceProcess.ServiceControllerPermissionAttribute.MachineName" /> n'est pas valide.</exception>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionAttribute.PermissionAccess">
      <summary>Obtient ou définit les niveaux d'accès utilisés dans la demande d'autorisation.</summary>
      <returns>Combinaison d'opérations de bits des valeurs <see cref="T:System.ServiceProcess.ServiceControllerPermissionAccess" />.</returns>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionAttribute.ServiceName">
      <summary>Obtient ou définit le nom court qui identifie le service sur le système.</summary>
      <returns>Nom du service.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.ServiceProcess.ServiceControllerPermissionAttribute.ServiceName" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La syntaxe de la propriété <see cref="P:System.ServiceProcess.ServiceControllerPermissionAttribute.ServiceName" /> n'est pas valide.</exception>
    </member>
    <member name="T:System.ServiceProcess.ServiceControllerPermissionEntry">
      <summary>Définit la plus petite unité d'une autorisation de sécurité d'accès du code définie pour <see cref="T:System.ServiceProcess.ServiceController" />.</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntry.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" />.</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntry.#ctor(System.ServiceProcess.ServiceControllerPermissionAccess,System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> avec les niveaux d'accès d'autorisation spécifiés, le nom de l'ordinateur et un nom court qui identifie le service.</summary>
      <param name="permissionAccess">Une des valeurs de <see cref="T:System.ServiceProcess.ServiceControllerPermissionAccess" />.</param>
      <param name="machineName">Nom de l'ordinateur sur lequel le service réside.</param>
      <param name="serviceName">Nom court qui identifie le service sur le système.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceName" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="machineName" /> n'est pas valide.  

ou - 
<paramref name="serviceName" /> n'est pas valide.</exception>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionEntry.MachineName">
      <summary>Obtient le nom de l'ordinateur sur lequel le service réside.</summary>
      <returns>Nom de l'ordinateur qui exécute le service associé au <see cref="T:System.ServiceProcess.ServiceController" />.</returns>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionEntry.PermissionAccess">
      <summary>Obtient les niveaux d'accès utilisés dans la demande d'autorisation.</summary>
      <returns>Combinaison d'opérations de bits des valeurs <see cref="T:System.ServiceProcess.ServiceControllerPermissionAccess" />.</returns>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionEntry.ServiceName">
      <summary>Obtient le nom court qui identifie le service sur le système.</summary>
      <returns>Nom du service.</returns>
    </member>
    <member name="T:System.ServiceProcess.ServiceControllerPermissionEntryCollection">
      <summary>Contient une collection fortement typée d'objets <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" />.</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Add(System.ServiceProcess.ServiceControllerPermissionEntry)">
      <summary>Ajoute un <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> spécifié à cette collection.</summary>
      <param name="value">Objet <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> à ajouter.</param>
      <returns>Index de base zéro de l'objet <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> ajouté.</returns>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.AddRange(System.ServiceProcess.ServiceControllerPermissionEntry[])">
      <summary>Ajoute un ensemble d'entrées d'autorisation spécifiées à cette collection.</summary>
      <param name="value">Tableau d'objets de type <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> qui contient les entrées d'autorisation à ajouter.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.AddRange(System.ServiceProcess.ServiceControllerPermissionEntryCollection)">
      <summary>Ajoute un ensemble d'entrées d'autorisation spécifiées à cette collection.</summary>
      <param name="value">
        <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntryCollection" /> qui contient les entrées d'autorisation à ajouter.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Contains(System.ServiceProcess.ServiceControllerPermissionEntry)">
      <summary>Détermine si cette collection contient un objet <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> spécifié.</summary>
      <param name="value">Objet <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> à rechercher.</param>
      <returns>
        <see langword="true" /> si l'objet <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> spécifié appartient à cette collection ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.CopyTo(System.ServiceProcess.ServiceControllerPermissionEntry[],System.Int32)">
      <summary>Copie les entrées d'autorisation de cette collection vers un tableau, en commençant à un index spécifique du tableau.</summary>
      <param name="array">Tableau de type <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> qui reçoit les entrées d'autorisation copiées.</param>
      <param name="index">Index de base zéro à partir duquel commencer la copie des entrées d'autorisation.</param>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.IndexOf(System.ServiceProcess.ServiceControllerPermissionEntry)">
      <summary>Détermine l'index d'une entrée d'autorisation spécifiée dans cette collection.</summary>
      <param name="value">Entrée d'autorisation à rechercher.</param>
      <returns>Index de base zéro de l'entrée d'autorisation spécifiée, ou -1 si l'entrée d'autorisation est introuvable dans la collection.</returns>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Insert(System.Int32,System.ServiceProcess.ServiceControllerPermissionEntry)">
      <summary>Insère une entrée d'autorisation dans cette collection à un index spécifié.</summary>
      <param name="index">Index de base zéro de la collection au niveau duquel insérer l'entrée d'autorisation.</param>
      <param name="value">Entrée d'autorisation à insérer dans cette collection.</param>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Item(System.Int32)">
      <summary>Obtient ou définit l'objet à l'index spécifié.</summary>
      <param name="index">Index de base zéro dans la collection.</param>
      <returns>Objet <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> qui existe à l'index spécifié.</returns>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.OnClear">
      <summary>Exécute des processus personnalisés supplémentaires après l'effacement du contenu de la collection.</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.OnInsert(System.Int32,System.Object)">
      <summary>Exécute les processus personnalisés supplémentaires avant l'insertion d'une nouvelle entrée d'autorisation dans la collection.</summary>
      <param name="index">Index de base zéro au niveau duquel insérer <paramref name="value" />.</param>
      <param name="value">Nouvelle valeur de l'entrée d'autorisation à la position <paramref name="index" />.</param>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.OnRemove(System.Int32,System.Object)">
      <summary>Exécute les processus personnalisés supplémentaires lors de la suppression d'une nouvelle entrée d'autorisation de la collection.</summary>
      <param name="index">Index de base zéro au niveau duquel <paramref name="value" /> peut être trouvé.</param>
      <param name="value">Entrée d'autorisation à supprimer de <paramref name="index" />.</param>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.OnSet(System.Int32,System.Object,System.Object)">
      <summary>Exécute des processus personnalisés supplémentaires avant la définition d'une valeur dans la collection.</summary>
      <param name="index">Index de base zéro au niveau duquel <paramref name="oldValue" /> peut être trouvé.</param>
      <param name="oldValue">Valeur à remplacer par <paramref name="newValue" />.</param>
      <param name="newValue">Nouvelle valeur de l'entrée d'autorisation à la position <paramref name="index" />.</param>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Remove(System.ServiceProcess.ServiceControllerPermissionEntry)">
      <summary>Supprime de cette collection une entrée d'autorisation spécifiée.</summary>
      <param name="value">Entrée d'autorisation à supprimer.</param>
    </member>
    <member name="T:System.Transactions.DistributedTransactionPermission">
      <summary>Autorisation qui est demandée par <see cref="N:System.Transactions" /> lorsque la gestion d'une transaction est remontée au MSDTC. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Transactions.DistributedTransactionPermission" />.</summary>
      <param name="state">Une des valeurs de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.Copy">
      <summary>Crée et retourne une copie identique de l’autorisation actuelle.</summary>
      <returns>Copie de l’autorisation actuelle.</returns>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruit une autorisation avec un état spécifié à partir d’un encodage XML.</summary>
      <param name="securityElement">Encodage XML utilisé pour reconstruire l’autorisation.</param>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.Intersect(System.Security.IPermission)">
      <summary>Crée et retourne une autorisation qui constitue l’intersection entre l’autorisation actuelle et l’autorisation spécifiée.</summary>
      <param name="target">Autorisation à croiser avec l’autorisation actuelle. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>Nouvelle autorisation qui représente l’intersection entre l’autorisation actuelle et l’autorisation spécifiée. Cette nouvelle autorisation est <see langword="null" /> si l’intersection est vide.</returns>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Retourne une valeur qui indique si l'autorisation en cours est un sous-ensemble de l'autorisation spécifiée.</summary>
      <param name="target">Autorisation à tester pour la relation de sous-ensemble. Cette autorisation doit être du même type que l’autorisation actuelle.</param>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Security.IPermission" /> actuel est un sous-ensemble du <see cref="T:System.Security.IPermission" /> spécifié ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.IsUnrestricted">
      <summary>Retourne une valeur qui indique si l'accès sans restriction à la ressource protégée par l'autorisation en cours est autorisé.</summary>
      <returns>
        <see langword="true" /> si l'utilisation sans restriction de la ressource protégée par l'autorisation est autorisée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.ToXml">
      <summary>Crée un codage XML de l’objet de sécurité et de son état actuel.</summary>
      <returns>
        <see cref="T:System.Security.SecurityElement" /> contenant l'encodage XML de l'objet de sécurité avec des informations sur son état, le cas échéant.</returns>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.Union(System.Security.IPermission)">
      <summary>Crée une autorisation qui est l’union de l’autorisation actuelle et de l’autorisation spécifiée.</summary>
      <param name="target">Autorisation à combiner avec l’autorisation actuelle. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>
        <see cref="T:System.Security.IPermission" /> qui représente l'union entre l'autorisation en cours et l'autorisation spécifiée.</returns>
    </member>
    <member name="T:System.Transactions.DistributedTransactionPermissionAttribute">
      <summary>Permet d’appliquer les actions de sécurité de <see cref="T:System.Transactions.DistributedTransactionPermission" /> au code à l’aide de la sécurité déclarative. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Transactions.DistributedTransactionPermissionAttribute" /> avec le <see cref="T:System.Security.Permissions.SecurityAction" /> spécifié.</summary>
      <param name="action">Une des valeurs de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermissionAttribute.CreatePermission">
      <summary>Crée un objet d'autorisation qui peut alors être sérialisé en forme binaire et stocké de façon persistante avec <see cref="T:System.Security.Permissions.SecurityAction" /> dans les métadonnées d'un assembly.</summary>
      <returns>Objet d’autorisation sérialisable.</returns>
    </member>
    <member name="P:System.Transactions.DistributedTransactionPermissionAttribute.Unrestricted">
      <summary>Obtient ou définit une valeur indiquant si l'autorisation complète (sans restriction) d'accès à la ressource protégée par l'attribut est déclarée.</summary>
      <returns>
        <see langword="true" /> si l'autorisation complète à la ressource protégée est déclarée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Web.AspNetHostingPermission">
      <summary>Contrôle les autorisations d'accès dans les environnements hébergés par ASP.NET. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.AspNetHostingPermission" /> avec la valeur d'énumération <see cref="T:System.Security.Permissions.PermissionState" /> spécifiée.</summary>
      <param name="state">Valeur d'énumération <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <exception cref="T:System.ArgumentException">Aucune des valeurs d'énumération de <see cref="T:System.Security.Permissions.PermissionState" /> n'est affectée à <paramref name="state" />.</exception>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.#ctor(System.Web.AspNetHostingPermissionLevel)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.AspNetHostingPermission" /> avec le niveau d'autorisation spécifié.</summary>
      <param name="level">Valeur d'énumération de <see cref="T:System.Web.AspNetHostingPermissionLevel" />.</param>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.Copy">
      <summary>En cas d’implémentation par une classe dérivée, crée et retourne une copie identique de l’objet d’autorisation actuel.</summary>
      <returns>Copie de l’objet d’autorisation actuel.</returns>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruit un objet d'autorisation avec un état spécifié à partir d'un codage XML.</summary>
      <param name="securityElement">
        <see cref="T:System.Security.SecurityElement" /> contenant le codage XML à utiliser pour reconstruire l'objet d'autorisation.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La propriété <see cref="P:System.Security.SecurityElement.Tag" /> de <paramref name="securityElement" /> ne correspond pas à l'autorisation IPermission.  

ou - 
La classe <see cref="M:System.Security.SecurityElement.Attribute(System.String)" /> de <paramref name="securityElement" /> est <see langword="null" /> ou représente une chaîne vide ("").</exception>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.Intersect(System.Security.IPermission)">
      <summary>Lors de l'implémentation par une classe dérivée, crée et retourne une autorisation qui est l'intersection de l'autorisation en cours et de l'autorisation spécifiée.</summary>
      <param name="target">Autorisation à combiner avec l’autorisation actuelle. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>
        <see cref="T:System.Security.IPermission" /> qui représente l'intersection entre l'autorisation actuelle et l'autorisation spécifiée ; sinon, <see langword="null" /> si l'intersection est vide.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> n'est pas <see cref="T:System.Web.AspNetHostingPermission" />.</exception>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Retourne une valeur indiquant si l'autorisation actuelle est un sous-ensemble de l'autorisation spécifiée.</summary>
      <param name="target">
        <see cref="T:System.Security.IPermission" /> à combiner à l'autorisation actuelle. Elle doit être du même type que le <see cref="T:System.Security.IPermission" /> actuel.</param>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Security.IPermission" /> actuel est un sous-ensemble du <see cref="T:System.Security.IPermission" /> spécifié ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> n'est pas <see cref="T:System.Web.AspNetHostingPermission" />.</exception>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.IsUnrestricted">
      <summary>Retourne une valeur qui indique si l'accès sans restriction à la ressource protégée par l'autorisation actuelle est accordé.</summary>
      <returns>
        <see langword="true" /> si l'utilisation sans restriction de la ressource protégée par l'autorisation est autorisée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.AspNetHostingPermission.Level">
      <summary>Obtient ou définit le niveau d'autorisation d'hébergement actuel d'une application ASP.NET.</summary>
      <returns>Une des valeurs d'énumération <see cref="T:System.Web.AspNetHostingPermissionLevel" />.</returns>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.ToXml">
      <summary>Crée un codage XML de l'objet d'autorisation et de son état actuel.</summary>
      <returns>
        <see cref="T:System.Security.SecurityElement" /> contenant le codage XML de l'objet d'autorisation avec d'éventuelles informations sur son état.</returns>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.Union(System.Security.IPermission)">
      <summary>Crée une autorisation qui est l’union de l’autorisation actuelle et de l’autorisation spécifiée.</summary>
      <param name="target">Autorisation à combiner avec l’autorisation actuelle. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>
        <see cref="T:System.Security.IPermission" /> qui représente l'union entre l'autorisation en cours et l'autorisation spécifiée.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> n'est pas <see cref="T:System.Web.AspNetHostingPermission" />.</exception>
    </member>
    <member name="T:System.Web.AspNetHostingPermissionAttribute">
      <summary>Permet d’appliquer les actions de sécurité de <see cref="T:System.Web.AspNetHostingPermission" /> au code à l’aide de la sécurité déclarative. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Web.AspNetHostingPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.AspNetHostingPermissionAttribute" />.</summary>
      <param name="action">Une des valeurs d'énumération <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Web.AspNetHostingPermissionAttribute.CreatePermission">
      <summary>Crée un nouveau <see cref="T:System.Web.AspNetHostingPermission" /> avec le niveau d'autorisation précédemment défini par la propriété <see cref="P:System.Web.AspNetHostingPermissionAttribute.Level" />.</summary>
      <returns>
        <see cref="T:System.Security.IPermission" /> qui est le nouveau <see cref="T:System.Web.AspNetHostingPermission" />.</returns>
    </member>
    <member name="P:System.Web.AspNetHostingPermissionAttribute.Level">
      <summary>Obtient ou définit le niveau d'autorisation d'hébergement actuel.</summary>
      <returns>Une des valeurs d'énumération <see cref="T:System.Web.AspNetHostingPermissionLevel" />.</returns>
    </member>
    <member name="T:System.Web.AspNetHostingPermissionLevel">
      <summary>Spécifie le niveau de confiance accordé à une application web ASP.NET.</summary>
    </member>
    <member name="F:System.Web.AspNetHostingPermissionLevel.High">
      <summary>Indique que les fonctionnalités protégées par une demande pour tout niveau inférieur ou égal au niveau de confiance <see langword="High" /> réussiront. Ce niveau est prévu pour les applications en code managé approuvées qui doivent utiliser la plupart des autorisations managées prenant en charge l’accès partiellement approuvé. Il n’accorde pas certaines des autorisations plus élevées (par exemple, la possibilité d’appeler dans du code natif), mais elle offre un moyen d’exécuter des applications de confiance avec des privilèges minimum ou pour fournir un niveau de contraintes pour les applications approuvées. Ce niveau est accordé en configurant au moins le niveau de confiance <see cref="F:System.Web.AspNetHostingPermissionLevel.High" /> dans la section trust d’un fichier de configuration.</summary>
    </member>
    <member name="F:System.Web.AspNetHostingPermissionLevel.Low">
      <summary>Indique que les fonctionnalités protégées par une demande pour tout niveau inférieur ou égal au niveau <see cref="F:System.Web.AspNetHostingPermissionLevel.Low" /> réussiront. Ce niveau est conçu pour permettre un accès en lecture seule aux ressources limitées dans un environnement restreint. Ce niveau est accordé en spécifiant le niveau de confiance <see cref="F:System.Web.AspNetHostingPermissionLevel.Low" /> dans la section trust d’un fichier de configuration.</summary>
    </member>
    <member name="F:System.Web.AspNetHostingPermissionLevel.Medium">
      <summary>Indique que les fonctionnalités protégées par une demande pour tout niveau inférieur ou égal au niveau <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> réussiront. Ce niveau est accordé en configurant au moins le niveau de confiance <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> dans la section trust d’un fichier de configuration.</summary>
    </member>
    <member name="F:System.Web.AspNetHostingPermissionLevel.Minimal">
      <summary>Indique que les fonctionnalités protégées par une demande pour le niveau <see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" /> réussiront. Ce niveau permet l’exécution du code, mais pas d’interagir avec les ressources présentes sur le système. Ce niveau est accordé en configurant au moins le niveau de confiance <see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" /> dans la section trust d’un fichier de configuration.</summary>
    </member>
    <member name="F:System.Web.AspNetHostingPermissionLevel.None">
      <summary>Indique qu’aucune autorisation n’est accordée. Toutes les demandes pour <see cref="T:System.Web.AspNetHostingPermission" /> échouent.</summary>
    </member>
    <member name="F:System.Web.AspNetHostingPermissionLevel.Unrestricted">
      <summary>Indique que toutes les demandes d’autorisation d’utilisation de toutes les fonctionnalités d’une application seront accordées. Cela équivaut à accorder un niveau de confiance <see langword="Full" /> dans la section trust d’un fichier de configuration.</summary>
    </member>
    <member name="T:System.Xaml.Permissions.XamlAccessLevel">
      <summary>Définit le contrôle d'accès aux assemblys et aux types à des fins de chargement XAML.</summary>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessTo(System.Reflection.Assembly)">
      <summary>Retourne une instance de <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> basée sur un assembly demandé par <see cref="T:System.Reflection.Assembly" />.</summary>
      <param name="assembly">Assembly de la demande.</param>
      <returns>Instance de <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />, avec la valeur <paramref name="assembly" /> utilisée comme informations sources pour <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assembly" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessTo(System.Reflection.AssemblyName)">
      <summary>Retourne une instance de <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> basée sur un assembly demandé par <see cref="T:System.Reflection.AssemblyName" />.</summary>
      <param name="assemblyName">Nom de l'assembly pour la demande.</param>
      <returns>Instance de <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />, avec la valeur <paramref name="assemblyName" /> utilisée comme informations sources pour <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="assemblyName" /> n'est pas un nom d'assembly qualifié complet valide.</exception>
    </member>
    <member name="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName">
      <summary>Obtient le <see cref="T:System.Reflection.AssemblyName" /> de l'assembly pour lequel ce <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> détermine des autorisations.</summary>
      <returns>
        <see cref="T:System.Reflection.AssemblyName" /> de l'assembly pour lequel ce <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> détermine des autorisations.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo(System.String)">
      <summary>Retourne une instance de <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> basée sur un type spécifique spécifié par son nom qualifié.</summary>
      <param name="assemblyQualifiedTypeName">Chaîne analysée comme nom de type qualifié d'assembly.</param>
      <returns>Instance de <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />, avec la valeur <paramref name="assemblyQualifiedTypeName" /> utilisée comme informations sources pour <see cref="P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName" /> et <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" /> en fonction de la réflexion sur le type.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyQualifiedTypeName" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="assemblyQualifiedTypeName" /> n'est pas un nom de type qualifié d'assembly valide.  

ou - 
Le nom de l'assembly dans <paramref name="assemblyQualifiedTypeName" /> n'est pas un nom d'assembly valide.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo(System.Type)">
      <summary>Retourne une instance de <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> basée sur un type spécifié par <see cref="T:System.Type" />.</summary>
      <param name="type">
        <see cref="T:System.Type" /> pour lequel demander l'accès.</param>
      <returns>Instance de <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />, avec la valeur <paramref name="type" /> utilisée comme informations sources pour <see cref="P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName" /> et <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" /> en fonction de la réflexion sur le type.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName">
      <summary>Obtient le nom de chaîne non qualifié du type pour lequel ce <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> détermine des autorisations.</summary>
      <returns>Nom de chaîne non qualifié du type pour lequel ce <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> détermine des autorisations.</returns>
    </member>
    <member name="T:System.Xaml.Permissions.XamlLoadPermission">
      <summary>Déclare des autorisations pour le chargement de types à partir des assemblys utilisés par un lecteur ou un writer XAML.</summary>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Collections.Generic.IEnumerable{System.Xaml.Permissions.XamlAccessLevel})">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />, à l'aide d'un jeu énumérable de valeurs <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> spécifiques.</summary>
      <param name="allowedAccess">Jeu énumérable de valeurs <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> spécifiques.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="allowedAccess" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="allowedAccess" /> contient des informations non valides, telles qu'un élément null.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> à l'aide des autorisations existantes.</summary>
      <param name="state">Valeur d'énumération <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Xaml.Permissions.XamlAccessLevel)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> avec une seule valeur <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />.</summary>
      <param name="allowedAccess">Valeur <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> de définition.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="allowedAccess" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess">
      <summary>Obtient la liste de toutes les valeurs <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> que ce <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> représente.</summary>
      <returns>Liste de valeurs <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> en lecture seule, ou <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Copy">
      <summary>Crée et retourne une copie identique de l'objet <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> en cours.</summary>
      <returns>Une copie de l'élément <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> actuel.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Equals(System.Object)">
      <param name="obj" />
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruit un objet de sécurité avec un état spécifié à partir d’un encodage XML.</summary>
      <param name="elem">Encodage XML à utiliser pour reconstruire l’objet de sécurité.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elem" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="elem" /> ne contient pas l'encodage XML pour un <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.  

ou - 
L'attribut de version dans <paramref name="elem" /> n'est pas pris en charge.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.GetHashCode" />
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Includes(System.Xaml.Permissions.XamlAccessLevel)">
      <summary>Retourne si ce <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> inclut un <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> spécifié dans sa liste <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" />.</summary>
      <param name="requestedAccess">
        <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> spécifique à rechercher.</param>
      <returns>
        <see langword="true" /> si <paramref name="requestedAccess" /> existe comme élément dans la liste <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" /> du <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> actuel. Sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestedAccess" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Intersect(System.Security.IPermission)">
      <summary>Crée et retourne un <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> qui représente l'intersection entre le <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> actuel et l'autorisation spécifiée.</summary>
      <param name="target">
        <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> qui fera une intersection avec le <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> actuel. Peut être <see langword="null" />.</param>
      <returns>Nouvelle autorisation qui représente l'intersection entre le <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> actuel et le <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> spécifié. Cette nouvelle autorisation est <see langword="null" /> si l’intersection est vide.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> n'est pas <see langword="null" /> ou n'est pas un <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Détermine si le <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> actuel est un sous-ensemble de l'autorisation spécifiée.</summary>
      <param name="target">Autorisation qui doit être testée pour la relation de sous-ensemble. Peut être <see langword="null" />.</param>
      <returns>
        <see langword="true" /> si l'autorisation <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> en cours est un sous-ensemble de l'autorisation spécifiée ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> n'est pas <see langword="null" /> ou n'est pas un <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted">
      <summary>Retourne si ce <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> dénote des autorisations illimitées.</summary>
      <returns>
        <see langword="true" /> si ce <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> dénote des autorisations illimitées. <see langword="false" /> si ce <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> a des restrictions de niveau d'accès spécifiques dans <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" />, ou n'a pas d'autorisations.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.ToXml">
      <summary>Crée un encodage XML de ce <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> et de son état actuel.</summary>
      <returns>Encodage XML de ce <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />, y compris des informations d'état.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Union(System.Security.IPermission)">
      <summary>Crée une autorisation qui est l'union entre le <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> actuel et l'autorisation spécifiée.</summary>
      <param name="other">
        <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> à combiner au <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> actuel. Peut être <see langword="null" />.</param>
      <returns>Nouveau <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> qui représente l'union du <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> actuel et du <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> spécifié.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="other" /> n'est pas <see langword="null" /> ou n'est pas un <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</exception>
    </member>
  </members>
</doc>