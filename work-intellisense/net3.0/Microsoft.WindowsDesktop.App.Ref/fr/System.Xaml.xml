<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Xaml</name>
  </assembly>
  <members>
    <member name="T:System.Windows.Markup.AcceptedMarkupExtensionExpressionTypeAttribute">
      <summary vsli:raw="Notates types for legacy reporting of XAML markup extension characteristics.">Définit des types pour les rapports hérités relatifs aux caractéristiques d'extension de balisage XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.AcceptedMarkupExtensionExpressionTypeAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.AcceptedMarkupExtensionExpressionTypeAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.AcceptedMarkupExtensionExpressionTypeAttribute" />.</summary>
      <param name="type" vsli:raw="The return type that this attribute reports.">Type de retour signalé par cet attribut.</param>
    </member>
    <member name="P:System.Windows.Markup.AcceptedMarkupExtensionExpressionTypeAttribute.Type">
      <summary vsli:raw="Gets or sets the return type that this attribute reports.">Obtient ou définit le type de retour que cet attribut signale.</summary>
      <returns vsli:raw="The return type that this attribute reports.">Type de retour signalé par cet attribut.</returns>
    </member>
    <member name="T:System.Windows.Markup.AmbientAttribute">
      <summary vsli:raw="Specifies that a property or type should be treated as ambient. The ambient concept relates to how XAML processors determine type owners of members.">Spécifie qu’une propriété ou un type doit être traité comme ambiant. Le concept de caractère ambiant renvoie à la façon dont les processeurs XAML déterminent les propriétaires de types des membres.</summary>
    </member>
    <member name="M:System.Windows.Markup.AmbientAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.AmbientAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.AmbientAttribute" />.</summary>
    </member>
    <member name="T:System.Windows.Markup.ArrayExtension">
      <summary vsli:raw="Implements &lt;see langword=&quot;x:Array&quot; /&gt; support for .NET XAML Services.">Implémente la prise en charge de <see langword="x:Array" /> pour les services XAML .NET Framework.</summary>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ArrayExtension&quot; /&gt; class. This creates an empty array.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.ArrayExtension" />. Un tableau vide est ainsi créé.</summary>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.#ctor(System.Array)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ArrayExtension&quot; /&gt; class based on the provided raw array.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.ArrayExtension" /> selon le tableau brut fourni.</summary>
      <param name="elements" vsli:raw="The array content that populates the created array.">Contenu du tableau qui remplit le tableau créé.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;elements&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="elements" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ArrayExtension&quot; /&gt; class and initializes the type of the array.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.ArrayExtension" /> et initialise le type du tableau.</summary>
      <param name="arrayType" vsli:raw="The object type of the new array.">Type d’objet du nouveau tableau.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;arrayType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="arrayType" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.AddChild(System.Object)">
      <summary vsli:raw="Appends the supplied object to the end of the array.">Ajoute l’objet fourni à la fin du tableau.</summary>
      <param name="value" vsli:raw="The object to add to the end of the array.">Objet à ajouter à la fin du tableau.</param>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.AddText(System.String)">
      <summary vsli:raw="Adds a text node as a new array item.">Ajoute un nœud de texte comme nouvel élément de tableau.</summary>
      <param name="text" vsli:raw="The text to add to the end of the array.">Texte à ajouter à la fin du tableau.</param>
    </member>
    <member name="P:System.Windows.Markup.ArrayExtension.Items">
      <summary vsli:raw="Gets the contents of the array. Settable in XAML through XAML collection syntax.">Obtient le contenu du tableau. Définissable en XAML via la syntaxe de collection XAML.</summary>
      <returns vsli:raw="The array contents.">Contenu du tableau.</returns>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.ProvideValue(System.IServiceProvider)">
      <summary vsli:raw="Returns an array that is sized to the number of objects supplied in the &lt;see cref=&quot;P:System.Windows.Markup.ArrayExtension.Items&quot; /&gt; values.">Retourne un tableau dont la taille correspond au nombre d’objets fournis dans les valeurs <see cref="P:System.Windows.Markup.ArrayExtension.Items" />.</summary>
      <param name="serviceProvider" vsli:raw="An object that can provide services for the markup extension.">Objet qui peut fournir des services pour l’extension de balisage.</param>
      <returns vsli:raw="The created array, or null.">Tableau créé, ou null.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Processed an array that did not provide a valid &lt;see cref=&quot;P:System.Windows.Markup.ArrayExtension.Type&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; There is a type mismatch between the declared &lt;see cref=&quot;P:System.Windows.Markup.ArrayExtension.Type&quot; /&gt; of the array and one or more of its &lt;see cref=&quot;P:System.Windows.Markup.ArrayExtension.Items&quot; /&gt; values.">Un tableau qui ne fournissait pas de <see cref="P:System.Windows.Markup.ArrayExtension.Type" /> valide a été traité.  

ou - 
Il existe une incompatibilité de type entre le <see cref="P:System.Windows.Markup.ArrayExtension.Type" /> déclaré du tableau et une ou plusieurs de ses valeurs <see cref="P:System.Windows.Markup.ArrayExtension.Items" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.ArrayExtension.Type">
      <summary vsli:raw="Gets or sets the type of array to be created when calling &lt;see cref=&quot;M:System.Windows.Markup.ArrayExtension.ProvideValue(System.IServiceProvider)&quot; /&gt;.">Obtient ou définit le type de tableau à créer lors de l’appel de <see cref="M:System.Windows.Markup.ArrayExtension.ProvideValue(System.IServiceProvider)" />.</summary>
      <returns vsli:raw="The type of the array.">Type de tableau.</returns>
    </member>
    <member name="T:System.Windows.Markup.ConstructorArgumentAttribute">
      <summary vsli:raw="Specifies that an object can be initialized by using a non-parameterless constructor syntax, and that a property of the specified name supplies construction information.  This information is primarily for XAML serialization.">Spécifie qu’un objet peut être initialisé au moyen d’une syntaxe de constructeur autre qu’un constructeur sans paramètre, et qu’une propriété du nom spécifié fournit les informations de construction.  Ces informations sont principalement destinées à la sérialisation XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.ConstructorArgumentAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ConstructorArgumentAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.ConstructorArgumentAttribute" />.</summary>
      <param name="argumentName" vsli:raw="The name of the constructor that will initialize the associated property.">Nom du constructeur chargé d’initialiser la propriété associée.</param>
    </member>
    <member name="P:System.Windows.Markup.ConstructorArgumentAttribute.ArgumentName">
      <summary vsli:raw="Gets the name parameter of the constructor that will initialize the associated property.">Obtient le paramètre de nom du constructeur qui initialisera la propriété associée.</summary>
      <returns vsli:raw="The name of the constructor. Assuming CLR backing, this corresponds to the &lt;see cref=&quot;P:System.Reflection.ParameterInfo.Name&quot; /&gt; of the relevant constructor parameter.">Nom du constructeur. En supposant que le stockage CLR est utilisé, il correspond à <see cref="P:System.Reflection.ParameterInfo.Name" /> du paramètre de constructeur approprié.</returns>
    </member>
    <member name="T:System.Windows.Markup.ContentPropertyAttribute">
      <summary vsli:raw="Indicates which property of a type is the XAML content property. A XAML processor uses this information when processing XAML child elements of XAML representations of the attributed type.">Indique quelle propriété d’un type est la propriété de contenu XAML. Un processeur XAML utilise ces informations lors du traitement des éléments enfants XAML des représentations XAML du type attribué.</summary>
    </member>
    <member name="M:System.Windows.Markup.ContentPropertyAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ContentPropertyAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.ContentPropertyAttribute" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.ContentPropertyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ContentPropertyAttribute&quot; /&gt; class, by using the specified name.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.ContentPropertyAttribute" />, en utilisant le nom spécifié.</summary>
      <param name="name" vsli:raw="The property name for the property that is the content property.">Nom de la propriété qui est la propriété de contenu.</param>
    </member>
    <member name="P:System.Windows.Markup.ContentPropertyAttribute.Name">
      <summary vsli:raw="Gets the name of the property that is the content property.">Obtient le nom de la propriété qui correspond à la propriété de contenu.</summary>
      <returns vsli:raw="The name of the property that is the content property.">Nom de la propriété qui correspond à la propriété de contenu.</returns>
    </member>
    <member name="T:System.Windows.Markup.ContentWrapperAttribute">
      <summary vsli:raw="Specifies one or more types on the associated collection type that will be used to wrap foreign content.">Spécifie un ou plusieurs types sur le type de collection associé qui sera utilisé pour encapsuler le contenu étranger.</summary>
    </member>
    <member name="M:System.Windows.Markup.ContentWrapperAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ContentWrapperAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.ContentWrapperAttribute" />.</summary>
      <param name="contentWrapper" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that is declared as a content wrapper for the collection type.">
        <see cref="T:System.Type" /> qui est déclaré comme un wrapper de contenu pour le type de collection.</param>
    </member>
    <member name="P:System.Windows.Markup.ContentWrapperAttribute.ContentWrapper">
      <summary vsli:raw="Gets the type that is declared as a content wrapper for the collection type associated with this attribute.">Obtient le type qui est déclaré comme wrapper de contenu pour le type de collection associé à cet attribut.</summary>
      <returns vsli:raw="The type that is declared as a content wrapper for the collection type.">Type déclaré comme wrapper de contenu pour le type de collection.</returns>
    </member>
    <member name="M:System.Windows.Markup.ContentWrapperAttribute.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Markup.ContentWrapperAttribute&quot; /&gt; is equivalent this &lt;see cref=&quot;T:System.Windows.Markup.ContentWrapperAttribute&quot; /&gt; by comparing the &lt;see cref=&quot;P:System.Windows.Markup.ContentWrapperAttribute.ContentWrapper&quot; /&gt; properties.">Détermine si le <see cref="T:System.Windows.Markup.ContentWrapperAttribute" /> spécifié équivaut à ce <see cref="T:System.Windows.Markup.ContentWrapperAttribute" /> en comparant les propriétés <see cref="P:System.Windows.Markup.ContentWrapperAttribute.ContentWrapper" />.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Markup.ContentWrapperAttribute&quot; /&gt; to compare.">
        <see cref="T:System.Windows.Markup.ContentWrapperAttribute" /> à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Windows.Markup.ContentWrapperAttribute.ContentWrapper&quot; /&gt; properties are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les propriétés <see cref="P:System.Windows.Markup.ContentWrapperAttribute.ContentWrapper" /> sont égales ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.ContentWrapperAttribute.GetHashCode">
      <summary vsli:raw="Gets a hash code for this instance.">Obtient un code de hachage pour cette instance.</summary>
      <returns vsli:raw="An integer hash code.">Code de hachage entier.</returns>
    </member>
    <member name="P:System.Windows.Markup.ContentWrapperAttribute.TypeId">
      <summary vsli:raw="Gets a unique identifier for this attribute.">Obtient un identificateur unique pour cet attribut.</summary>
      <returns vsli:raw="A unique identifier for the attribute.">Identificateur unique de l’attribut.</returns>
    </member>
    <member name="T:System.Windows.Markup.DateTimeValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Convertit des instances de <see cref="T:System.String" /> vers et à partir d'instances de <see cref="T:System.DateTime" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.DateTimeValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.DateTimeValueSerializer&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.DateTimeValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.DateTimeValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be convert to an instance of &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Détermine si le <see cref="T:System.String" /> spécifié peut être converti en instance de <see cref="T:System.DateTime" />.</summary>
      <param name="value" vsli:raw="The string to evaluate for conversion.">Chaîne à évaluer pour la conversion.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informations de contexte utilisées pour la conversion.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value can be converted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la valeur peut être convertie ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.DateTimeValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if the specified object can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Détermine si l’objet spécifié peut être converti en <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to evaluate for conversion.">Objet à évaluer pour la conversion.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informations de contexte utilisées pour la conversion.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="value" /> peut être converti en <see cref="T:System.String" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.DateTimeValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Convertit un <see cref="T:System.String" /> en <see cref="T:System.DateTime" />.</summary>
      <param name="value" vsli:raw="The string to convert into a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Chaîne à convertir en <see cref="T:System.DateTime" />.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informations de contexte utilisées pour la conversion.</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.DateTime&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">Nouvelle instance de <see cref="T:System.DateTime" /> basée sur le <paramref name="value" /> fourni.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.DateTimeValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.DateTime&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convertit une instance de <see cref="T:System.DateTime" /> en <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to convert into a string.">Objet à convertir en chaîne.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informations de contexte utilisées pour la conversion.</param>
      <returns vsli:raw="A string representation of the specified &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Représentation sous forme de chaîne du <see cref="T:System.DateTime" /> spécifié.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is not a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; or is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> n’est pas un <see cref="T:System.DateTime" /> ou est <see langword="null" />.</exception>
    </member>
    <member name="T:System.Windows.Markup.DependsOnAttribute">
      <summary vsli:raw="Indicates that the attributed property is dependent on the value of another property.">Indique que la propriété attribuée dépend de la valeur d'une autre propriété.</summary>
    </member>
    <member name="M:System.Windows.Markup.DependsOnAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.DependsOnAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.DependsOnAttribute" />.</summary>
      <param name="name" vsli:raw="The property that the property associated with this &lt;see cref=&quot;T:System.Windows.Markup.DependsOnAttribute&quot; /&gt; depends on.">Propriété dont la propriété associée à l'attribut <see cref="T:System.Windows.Markup.DependsOnAttribute" /> dépend.</param>
    </member>
    <member name="P:System.Windows.Markup.DependsOnAttribute.Name">
      <summary vsli:raw="Gets the name of the related property declared in this &lt;see cref=&quot;T:System.Windows.Markup.DependsOnAttribute&quot; /&gt;.">Obtient le nom de la propriété associée déclarée dans <see cref="T:System.Windows.Markup.DependsOnAttribute" />.</summary>
      <returns vsli:raw="The name of the related property.">Nom de la propriété associée.</returns>
    </member>
    <member name="P:System.Windows.Markup.DependsOnAttribute.TypeId">
      <summary vsli:raw="Gets a unique identifier for this &lt;see cref=&quot;T:System.Windows.Markup.DependsOnAttribute&quot; /&gt;.">Obtient un identificateur unique pour l'attribut <see cref="T:System.Windows.Markup.DependsOnAttribute" />.</summary>
      <returns vsli:raw="The unique identifier.">L'identificateur unique.</returns>
    </member>
    <member name="T:System.Windows.Markup.DictionaryKeyPropertyAttribute">
      <summary vsli:raw="Specifies a property of the associated class that provides the implicit key value. Implicit keys are used for keys rather than explicit &lt;see langword=&quot;x:Key&quot; /&gt; attributes defined in XAML for an item in &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; collections.">Spécifie une propriété de la classe associée qui fournit la valeur de clé implicite. Les clés implicites sont utilisées pour les clés à la place des attributs <see langword="x:Key" /> explicites qui sont définis en XAML pour un élément dans les collections <see cref="T:System.Collections.IDictionary" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.DictionaryKeyPropertyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.DictionaryKeyPropertyAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.DictionaryKeyPropertyAttribute" />.</summary>
      <param name="name" vsli:raw="The name of the property that provides the implicit key value.">Nom de la propriété qui fournit la valeur de clé implicite.</param>
    </member>
    <member name="P:System.Windows.Markup.DictionaryKeyPropertyAttribute.Name">
      <summary vsli:raw="Gets the name of the property that provides the implicit key value.">Obtient le nom de la propriété qui fournit la valeur de clé implicite.</summary>
      <returns vsli:raw="The name of the property that provides the implicit key value.">Nom de la propriété qui fournit la valeur de clé implicite.</returns>
    </member>
    <member name="T:System.Windows.Markup.IComponentConnector">
      <summary vsli:raw="Provides markup compile and tools support for named XAML elements and for attaching event handlers to them.">Assure la prise en charge de la compilation de balisage et d'outils pour les éléments XAML nommés et l'attachement de gestionnaires d'événements à ces derniers.</summary>
    </member>
    <member name="M:System.Windows.Markup.IComponentConnector.Connect(System.Int32,System.Object)">
      <summary vsli:raw="Attaches events and names to compiled content.">Joint des événements et des noms au contenu compilé.</summary>
      <param name="connectionId" vsli:raw="An identifier token to distinguish calls.">Jeton d’identificateur pour distinguer des appels.</param>
      <param name="target" vsli:raw="The target to connect events and names to.">Cible à laquelle connecter des événements et des noms.</param>
    </member>
    <member name="M:System.Windows.Markup.IComponentConnector.InitializeComponent">
      <summary vsli:raw="Loads the compiled page of a component.">Charge la page compilée d'un composant.</summary>
    </member>
    <member name="T:System.Windows.Markup.INameScope">
      <summary vsli:raw="Defines a contract for how names of elements should be accessed within a particular XAML namescope, and how to enforce uniqueness of names within that XAML namescope.">Définit un contrat pour l'accès aux noms d'éléments dans une portée de nom XAML particulière et pour l'application d'unicité aux noms de cette portée.</summary>
    </member>
    <member name="M:System.Windows.Markup.INameScope.FindName(System.String)">
      <summary vsli:raw="Returns an object that has the provided identifying name.">Retourne un objet qui porte le nom d'identification fourni.</summary>
      <param name="name" vsli:raw="The name identifier for the object being requested.">Identificateur de nom de l'objet demandé.</param>
      <returns vsli:raw="The object, if found. Returns &lt;see langword=&quot;null&quot; /&gt; if no object of that name was found.">Objet demandé, s'il est trouvé. Retourne la valeur <see langword="null" /> si aucun objet portant ce nom n'a été trouvé.</returns>
    </member>
    <member name="M:System.Windows.Markup.INameScope.RegisterName(System.String,System.Object)">
      <summary vsli:raw="Registers the provided name into the current XAML namescope.">Inscrit le nom fourni dans la portée de nom XAML actuelle.</summary>
      <param name="name" vsli:raw="The name to register.">Nom à inscrire.</param>
      <param name="scopedElement" vsli:raw="The specific element that the provided &lt;paramref name=&quot;name&quot; /&gt; refers to.">Élément spécifique auquel le <paramref name="name" /> fourni fait référence.</param>
    </member>
    <member name="M:System.Windows.Markup.INameScope.UnregisterName(System.String)">
      <summary vsli:raw="Unregisters the provided name from the current XAML namescope.">Annule l'inscription du nom fourni dans la portée de nom XAML actuelle.</summary>
      <param name="name" vsli:raw="The name to unregister.">Nom dont l'inscription doit être annulée.</param>
    </member>
    <member name="T:System.Windows.Markup.INameScopeDictionary">
      <summary vsli:raw="Unifies enumerable, collection, and dictionary support that are useful for exposing a dictionary of names in a XAML namescope.">Unifie la prise en charge des objets énumérables, des collections et des dictionnaires qui est utile pour l'exposition d'un dictionnaire de noms dans une portée de nom XAML.</summary>
    </member>
    <member name="T:System.Windows.Markup.IProvideValueTarget">
      <summary vsli:raw="Represents a service that reports situational object-property relationships for markup extension evaluation.">Représente un service qui fait état des relations de propriétés d’objet situationnelles pour l’évaluation de l’extension de balisage.</summary>
    </member>
    <member name="P:System.Windows.Markup.IProvideValueTarget.TargetObject">
      <summary vsli:raw="Gets the target object being reported.">Obtient l’objet cible qui est signalé.</summary>
      <returns vsli:raw="The target object being reported.">Objet cible signalé.</returns>
    </member>
    <member name="P:System.Windows.Markup.IProvideValueTarget.TargetProperty">
      <summary vsli:raw="Gets an identifier for the target property being reported.">Obtient un identificateur pour la propriété cible qui est signalée.</summary>
      <returns vsli:raw="An identifier for the target property being reported.">Identificateur de la propriété cible signalée.</returns>
    </member>
    <member name="T:System.Windows.Markup.IQueryAmbient">
      <summary vsli:raw="Queries for whether a specified property should be treated as ambient in the current scope.">Demande si une propriété ambiante spécifiée doit être traitée comme étant ambiante dans la portée actuelle.</summary>
    </member>
    <member name="M:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)">
      <summary vsli:raw="Queries for whether a specified named property can be considered ambient in the current scope.">Demande si une propriété nommée spécifiée peut être considérée comme ambiante dans la portée actuelle.</summary>
      <param name="propertyName" vsli:raw="The name of the property to check for ambience state.">Nom de la propriété pour laquelle l'état ambiant doit être vérifié.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the requested property can be considered ambient; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la propriété demandée peut être considérée comme ambiante ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Markup.IUriContext">
      <summary vsli:raw="Represents a service that can use application context to resolve a provided relative URI to an absolute URI.">Représente un service qui peut utiliser le contexte de l’application pour résoudre un URI relatif fourni en URI absolu.</summary>
    </member>
    <member name="P:System.Windows.Markup.IUriContext.BaseUri">
      <summary vsli:raw="Gets or sets the base URI of the current application context.">Obtient ou définit l’URI de base du contexte d’application actuel.</summary>
      <returns vsli:raw="The base URI of the application context.">URI de base du contexte d’application.</returns>
    </member>
    <member name="T:System.Windows.Markup.IValueSerializerContext">
      <summary vsli:raw="Defines a context that is provided to a &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt;. The context can be used to enable special cases of serialization or different modes of serialization.">Définit un contexte fourni à un <see cref="T:System.Windows.Markup.ValueSerializer" />. Le contexte peut être utilisé pour activer des cas spéciaux de sérialisation ou différents modes de sérialisation.</summary>
    </member>
    <member name="M:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; for the given property descriptor.">Obtient un <see cref="T:System.Windows.Markup.ValueSerializer" /> pour le descripteur de propriété donné.</summary>
      <param name="descriptor" vsli:raw="The descriptor of the property being converted.">Descripteur de la propriété en cours de conversion.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; capable of serializing the specified property.">
        <see cref="T:System.Windows.Markup.ValueSerializer" /> capable de sérialiser la propriété spécifiée.</returns>
    </member>
    <member name="M:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor(System.Type)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; associated with the specified type.">Obtient le <see cref="T:System.Windows.Markup.ValueSerializer" /> associé au type spécifié.</summary>
      <param name="type" vsli:raw="The type of the value being converted.">Type de la valeur en cours de conversion.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; capable of serializing the specified type.">
        <see cref="T:System.Windows.Markup.ValueSerializer" /> capable de sérialiser le type spécifié.</returns>
    </member>
    <member name="T:System.Windows.Markup.IXamlTypeResolver">
      <summary vsli:raw="Represents a service that resolves from named elements in XAML markup to the appropriate CLR type.">Représente un service qui résout des éléments nommés dans le balisage XAML en type CLR approprié.</summary>
    </member>
    <member name="M:System.Windows.Markup.IXamlTypeResolver.Resolve(System.String)">
      <summary vsli:raw="Resolves a named XAML type to the corresponding CLR &lt;see cref=&quot;T:System.Type&quot; /&gt;.">Résout un type XAML nommé en <see cref="T:System.Type" /> CLR correspondant.</summary>
      <param name="qualifiedTypeName" vsli:raw="The XAML type name to resolve. The type name is optionally qualified by the prefix for a XML namespace. Otherwise the current default XML namespace is assumed.">Nom du type XAML à résoudre. Le nom du type est éventuellement qualifié par le préfixe d'un espace de noms XML. Sinon, l'espace de noms XML par défaut actuel est utilisé.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that &lt;paramref name=&quot;qualifiedTypeName&quot; /&gt; resolves to.">
        <see cref="T:System.Type" /> dans lequel <paramref name="qualifiedTypeName" /> se résout.</returns>
    </member>
    <member name="T:System.Windows.Markup.MarkupExtension">
      <summary vsli:raw="Provides a base class for XAML markup extension implementations that can be supported by .NET XAML Services and other XAML readers and XAML writers.">Fournit une classe de base pour les implémentations d'extensions de balisage XAML qui peuvent être prises en charge par les services XAML du .NET Framework et par d'autres lecteurs et writers XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtension.#ctor">
      <summary vsli:raw="Initializes a new instance of a class derived from &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtension&quot; /&gt;.">Initialise une nouvelle instance d'une classe dérivée de <see cref="T:System.Windows.Markup.MarkupExtension" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
      <summary vsli:raw="When implemented in a derived class, returns an object that is provided as the value of the target property for this markup extension.">En cas d’implémentation dans une classe dérivée, retourne un objet qui est fourni comme valeur de la propriété cible de cette extension de balisage.</summary>
      <param name="serviceProvider" vsli:raw="A service provider helper that can provide services for the markup extension.">Assistance de fournisseur de service qui peut fournir des services pour l’extension de balisage.</param>
      <returns vsli:raw="The object value to set on the property where the extension is applied.">Valeur d’objet à définir sur la propriété où l’extension est appliquée.</returns>
    </member>
    <member name="T:System.Windows.Markup.MarkupExtensionBracketCharactersAttribute">
      <summary vsli:raw="Reports the bracket characters that a markup extension can return.">Indique les caractères de crochet qu’une extension de balisage peut retourner.</summary>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtensionBracketCharactersAttribute.#ctor(System.Char,System.Char)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtensionBracketCharactersAttribute&quot; /&gt; class using the provided characters.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.MarkupExtensionBracketCharactersAttribute" /> à l’aide des caractères fournis.</summary>
      <param name="openingBracket" vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; that defines the opening bracket character.">
        <see cref="T:System.Char" /> définissant le caractère de crochet d’ouverture.</param>
      <param name="closingBracket" vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; that defines the closing bracket character.">
        <see cref="T:System.Char" /> définissant le caractère de crochet de fermeture.</param>
    </member>
    <member name="P:System.Windows.Markup.MarkupExtensionBracketCharactersAttribute.ClosingBracket">
      <summary vsli:raw="Specifies the character to be used as the closing delimiter in a &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtension&quot; /&gt;.">Spécifie le caractère à utiliser comme délimiteur de fermeture dans un <see cref="T:System.Windows.Markup.MarkupExtension" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; representing the character.">
        <see cref="T:System.Char" /> représentant le caractère.</returns>
    </member>
    <member name="P:System.Windows.Markup.MarkupExtensionBracketCharactersAttribute.OpeningBracket">
      <summary vsli:raw="Specifies the character to be used as the opening delimiter in a &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtension&quot; /&gt;.">Spécifie le caractère à utiliser comme délimiteur d’ouverture dans un <see cref="T:System.Windows.Markup.MarkupExtension" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; representing the character.">
        <see cref="T:System.Char" /> représentant le caractère.</returns>
    </member>
    <member name="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute">
      <summary vsli:raw="Reports the type that a markup extension can return.">Signale le type qu'une extension de balisage peut retourner.</summary>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute&quot; /&gt; class using the provided &lt;see cref=&quot;T:System.Type&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute" /> à l'aide du <see cref="T:System.Type" /> fourni.</summary>
      <param name="returnType" vsli:raw="The return type that this attribute reports.">Type de retour signalé par cet attribut.</param>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.#ctor(System.Type,System.Type)">
      <summary vsli:raw="Deprecated; do not use.">Déprécié ; ne pas utiliser.</summary>
      <param name="returnType" vsli:raw="The return type that this  .NET Framework attribute reports.">Type de retour signalé par ce attribut .NET Framework.</param>
      <param name="expressionType" vsli:raw="Deprecated; do not use.">Déprécié ; ne pas utiliser.</param>
    </member>
    <member name="P:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.ExpressionType">
      <summary vsli:raw="Deprecated; do not use.">Déprécié ; ne pas utiliser.</summary>
      <returns vsli:raw="Deprecated; do not use.">Déprécié ; ne pas utiliser.</returns>
    </member>
    <member name="P:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.ReturnType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtension&quot; /&gt; return type that this .NET Framework attribute reports.">Obtient le type de retour <see cref="T:System.Windows.Markup.MarkupExtension" /> que ce attribut .NET Framework signale.</summary>
      <returns vsli:raw="The type-safe return type of the specific &lt;see cref=&quot;M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)&quot; /&gt; implementation of the markup extension where the &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute&quot; /&gt; .NET Framework attribute is applied.">Type de retour de type sécurisé de l’implémentation <see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" /> spécifique de l’extension de balisage où l’ <see cref="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute" /> attribut .NET Framework est appliqué.</returns>
    </member>
    <member name="T:System.Windows.Markup.MemberDefinition">
      <summary vsli:raw="Provides the base class that is used for a markup technique of defining members of a class in declarative XAML.">Fournit la classe de base qui est utilisée par une technique de balisage permettant de définir les membres d'une classe au moyen du langage XAML déclaratif.</summary>
    </member>
    <member name="M:System.Windows.Markup.MemberDefinition.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.MemberDefinition&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.MemberDefinition" />.</summary>
    </member>
    <member name="P:System.Windows.Markup.MemberDefinition.Name">
      <summary vsli:raw="When implemented in a derived class, gets or sets the name of the member to define.">En cas d'implémentation dans une classe dérivée, obtient ou définit le nom du membre à spécifier.</summary>
      <returns vsli:raw="The name of the member to define.">Nom du membre à spécifier.</returns>
    </member>
    <member name="T:System.Windows.Markup.NameReferenceConverter">
      <summary vsli:raw="Provides type conversion to convert a string name into an object reference to the object with that name, or to return the name of an object from the object graph.">Fournit la conversion de type permettant de convertir un nom de chaîne en une référence à l'objet portant ce nom ou de retourner le nom d'un objet à partir du graphique d'objet.</summary>
    </member>
    <member name="M:System.Windows.Markup.NameReferenceConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.NameReferenceConverter&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.NameReferenceConverter" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.NameReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Returns whether this converter can convert an object of one type to another object.">Retourne une valeur indiquant si ce convertisseur peut convertir un objet d'un certain type en un autre objet.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that provides a format context.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</param>
      <param name="sourceType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the type you want to convert from.">
        <see cref="T:System.Type" /> qui représente le type à partir duquel opérer la conversion.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this converter can perform the conversion; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si ce convertisseur peut effectuer la conversion ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.NameReferenceConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Returns a value that indicates whether the converter can convert an object to the specified destination type.">Retourne une valeur qui indique si le convertisseur peut convertir un objet vers le type de destination spécifié.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that provides a format context.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</param>
      <param name="destinationType" vsli:raw="The type to convert to.">Type vers lequel effectuer la conversion.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the converter can perform the conversion; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le convertisseur peut effectuer la conversion ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.NameReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Converts the provided object to another object, using the specified context and culture information.">Convertit l'objet fourni en un autre objet, à l'aide des informations de contexte et de culture spécifiées.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that provides a format context.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</param>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; to use as the current culture.">
        <see cref="T:System.Globalization.CultureInfo" /> à utiliser comme culture actuelle.</param>
      <param name="value" vsli:raw="The reference name string to convert.">Chaîne de nom de référence à convertir.</param>
      <returns vsli:raw="The returned object, which is potentially any object that is type-mapped in the relevant backing assemblies and capable of being declared in XAML with a XAML name reference.">Objet retourné qui peut correspondre à tout objet mappé par type dans les assemblys de stockage appropriés et pouvant être déclaré en XAML avec une référence de nom XAML.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is a null string or empty string.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see cref=&quot;T:System.Xaml.IXamlNameResolver&quot; /&gt; service is missing or invalid.">
        <paramref name="value" /> est une chaîne null ou vide.  
ou 
 Le service <see cref="T:System.Xaml.IXamlNameResolver" /> est absent ou non valide.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;context&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="context" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.NameReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Converts an object to the specified type. This is intended to return XAML reference names for objects in an object graph.">Convertit un objet dans le type spécifié. Cette méthode vise à retourner des noms de référence XAML pour les objets d'un graphique d'objet.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that provides a format context.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</param>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; to use as the current culture.">
        <see cref="T:System.Globalization.CultureInfo" /> à utiliser comme culture actuelle.</param>
      <param name="value" vsli:raw="The object to retrieve the reference name for.">Objet pour lequel le nom de référence doit être récupéré.</param>
      <param name="destinationType" vsli:raw="The type to return. You should always reference the &lt;see cref=&quot;T:System.String&quot; /&gt; type.">Type à retourner. Vous devez toujours référencer le type <see cref="T:System.String" />.</param>
      <returns vsli:raw="The reference name of the input &lt;paramref name=&quot;value&quot; /&gt; object.">Nom de référence de l'objet <paramref name="value" /> d'entrée.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;T:System.Xaml.IXamlNameProvider&quot; /&gt; service is missing or invalid.">Le service <see cref="T:System.Xaml.IXamlNameProvider" /> est absent ou non valide.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;context&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="context" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="T:System.Windows.Markup.NameScopePropertyAttribute">
      <summary vsli:raw="Specifies a property of the associated class that provides the XAML namescope value.">Spécifie une propriété de la classe associée qui fournit la valeur de portée de nom XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.NameScopePropertyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.NameScopePropertyAttribute&quot; /&gt; class with the specified name.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.NameScopePropertyAttribute" /> avec le nom spécifié.</summary>
      <param name="name" vsli:raw="The name of the property on the attributed type that provides the XAML namescope.">Nom de la propriété sur le type attribué qui fournit la portée de nom XAML.</param>
    </member>
    <member name="M:System.Windows.Markup.NameScopePropertyAttribute.#ctor(System.String,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.NameScopePropertyAttribute&quot; /&gt; class with the specified name and type.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.NameScopePropertyAttribute" /> avec le nom et le type spécifiés.</summary>
      <param name="name" vsli:raw="The name of the attachable member that provides the XAML name scope.">Nom du membre pouvant être joint qui fournit la portée de nom XAML.</param>
      <param name="type" vsli:raw="The owner type of the attachable member that provides the XAML name scope.">Type de propriétaire du membre pouvant être joint qui fournit la portée de nom XAML.</param>
    </member>
    <member name="P:System.Windows.Markup.NameScopePropertyAttribute.Name">
      <summary vsli:raw="Gets the name of the property that provides the XAML namescope.">Obtient le nom de la propriété qui fournit la portée de nom XAML.</summary>
      <returns vsli:raw="A string value that is the name of the property that provides the XAML namescope.">Valeur de chaîne qui représente le nom de la propriété qui fournit la portée de nom XAML.</returns>
    </member>
    <member name="P:System.Windows.Markup.NameScopePropertyAttribute.Type">
      <summary vsli:raw="Gets the owner type of the attached property that provides the XAML namescope support.">Obtient le type propriétaire de la propriété jointe qui assure la prise en charge de la portée de nom XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; value that is the owner type of the attached property that provides the XAML namescope support, or &lt;see langword=&quot;null&quot; /&gt;.">Valeur <see cref="T:System.Type" /> qui représente le type propriétaire de la propriété jointe qui assure la prise en charge de la portées de nom XAML, ou <see langword="null" />.</returns>
    </member>
    <member name="T:System.Windows.Markup.NullExtension">
      <summary vsli:raw="Implements a XAML markup extension in order to return a null object, which you can use to explicitly set values to null in XAML.">Implémente une extension de balisage XAML afin de retourner un objet null que vous pouvez utiliser pour affecter explicitement des valeurs Null en XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.NullExtension.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.NullExtension&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.NullExtension" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.NullExtension.ProvideValue(System.IServiceProvider)">
      <summary vsli:raw="Provides &lt;see langword=&quot;null&quot; /&gt; to use as a value as the output of this markup extension.">Fournit <see langword="null" /> à utiliser comme une valeur de sortie de cette extension de balisage.</summary>
      <param name="serviceProvider" vsli:raw="An object that can provide services for the markup extension implementation.">Objet qui peut assurer des services pour l'implémentation de l'extension de balisage.</param>
      <returns vsli:raw="A null reference.">Référence null.</returns>
    </member>
    <member name="T:System.Windows.Markup.PropertyDefinition">
      <summary vsli:raw="Supports a markup technique of defining properties of a class in declarative XAML.">Prend en charge une technique de balisage permettant de définir les propriétés d'une classe dans le langage XAML déclaratif.</summary>
    </member>
    <member name="M:System.Windows.Markup.PropertyDefinition.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.PropertyDefinition&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.PropertyDefinition" />.</summary>
    </member>
    <member name="P:System.Windows.Markup.PropertyDefinition.Attributes">
      <summary vsli:raw="Gets a list of associated CLR attributes.">Obtient une liste des attributs CLR associés.</summary>
      <returns vsli:raw="A list of associated attributes.">Liste des attributs associés.</returns>
    </member>
    <member name="P:System.Windows.Markup.PropertyDefinition.Modifier">
      <summary vsli:raw="Gets or sets the access level of the defined property.">Obtient ou définit le niveau d'accès de la propriété définie.</summary>
      <returns vsli:raw="The access level of the defined property, as a string.">Niveau d'accès de la propriété définie, sous forme de chaîne.</returns>
    </member>
    <member name="P:System.Windows.Markup.PropertyDefinition.Name">
      <summary vsli:raw="Gets or sets the name of the property to define.">Obtient ou définit le nom de la propriété à définir.</summary>
      <returns vsli:raw="The name of the property to define.">Nom de la propriété à définir.</returns>
    </member>
    <member name="P:System.Windows.Markup.PropertyDefinition.Type">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the property to define.">Obtient ou définir le <see cref="T:System.Xaml.XamlType" /> de la propriété à définir.</summary>
      <returns vsli:raw="The XAML type identifier of the property to define.">Identificateur de type XAML de la propriété à définir.</returns>
    </member>
    <member name="T:System.Windows.Markup.Reference">
      <summary vsli:raw="Implements the &lt;c&gt;{x:Reference}&lt;/c&gt; markup extension.">Implémente l’extension de balisage <c>{x:Reference}</c>.</summary>
    </member>
    <member name="M:System.Windows.Markup.Reference.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.Reference&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.Reference" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.Reference.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.Reference&quot; /&gt; class with the &lt;paramref name=&quot;name&quot; /&gt; argument.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.Reference" /> avec l'argument <paramref name="name" />.</summary>
      <param name="name" vsli:raw="The XAML name of the element to reference.">Nom XAML de l'élément à référencer.</param>
    </member>
    <member name="P:System.Windows.Markup.Reference.Name">
      <summary vsli:raw="Gets or sets the XAML name to obtain the reference for.">Obtient ou définit le nom XAML pour lequel la référence doit être obtenue.</summary>
      <returns vsli:raw="The XAML name of the element to obtain the reference for.">Nom XAML de l'élément pour lequel la référence doit être obtenue.</returns>
    </member>
    <member name="M:System.Windows.Markup.Reference.ProvideValue(System.IServiceProvider)">
      <summary vsli:raw="Returns an object that is the value of the target property. For the &lt;see cref=&quot;T:System.Windows.Markup.Reference&quot; /&gt; type, this is the object that the provided &lt;see cref=&quot;P:System.Windows.Markup.Reference.Name&quot; /&gt; references.">Retourne un objet qui est la valeur de la propriété cible. Pour le type <see cref="T:System.Windows.Markup.Reference" />, il s’agit de l’objet auquel le <see cref="P:System.Windows.Markup.Reference.Name" /> fourni fait référence.</summary>
      <param name="serviceProvider" vsli:raw="A class that implements the &lt;see cref=&quot;T:System.Xaml.IXamlNameResolver&quot; /&gt; service.">Classe qui implémente le service <see cref="T:System.Xaml.IXamlNameResolver" />.</param>
      <returns vsli:raw="The value of the target property. This is potentially any object that is type-mapped in the relevant backing assemblies.">Valeur de la propriété cible. Il s’agit potentiellement de tout objet mappé par type dans les assemblys de stockage appropriés.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;serviceProvider&quot; /&gt; value does not implement the &lt;see cref=&quot;T:System.Xaml.IXamlNameResolver&quot; /&gt; service.&#xA;&#xA; -or-&#xA;&#xA; &lt;see cref=&quot;P:System.Windows.Markup.Reference.Name&quot; /&gt; value has not been set through construction or positional usage.">La valeur <paramref name="serviceProvider" /> n’implémente pas le service <see cref="T:System.Xaml.IXamlNameResolver" />.  
ou 
 La valeur <see cref="P:System.Windows.Markup.Reference.Name" /> n’a pas été définie via une utilisation de position ou de construction.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serviceProvider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="serviceProvider" /> est <see langword="null" />.</exception>
    </member>
    <member name="T:System.Windows.Markup.RootNamespaceAttribute">
      <summary vsli:raw="Represents an assembly level attribute that is used to identify the value of the &lt;see langword=&quot;RootNamespace&quot; /&gt; property in a Visual Studio project file.">Représente un attribut de niveau assembly utilisé pour identifier la valeur de la propriété <see langword="RootNamespace" /> dans un fichier projet Visual Studio.</summary>
    </member>
    <member name="M:System.Windows.Markup.RootNamespaceAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.RootNamespaceAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.RootNamespaceAttribute" />.</summary>
      <param name="nameSpace" vsli:raw="The root namespace value.">Valeur de l'espace de noms racine.</param>
    </member>
    <member name="P:System.Windows.Markup.RootNamespaceAttribute.Namespace">
      <summary vsli:raw="Gets the string that corresponds to the value of the &lt;see langword=&quot;RootNamespace&quot; /&gt; property in a Visual Studio project file.">Obtient la chaîne qui correspond à la valeur de la propriété <see langword="RootNamespace" /> dans un fichier projet Visual Studio.</summary>
      <returns vsli:raw="The string that corresponds to the value of the &lt;see langword=&quot;RootNamespace&quot; /&gt; property in a Visual Studio project file.">Chaîne qui correspond à la valeur de la <see langword="RootNamespace" /> propriété dans un fichier projet Visual Studio.</returns>
    </member>
    <member name="T:System.Windows.Markup.RuntimeNamePropertyAttribute">
      <summary vsli:raw="Represents a type-level attribute that reports which property of the type maps to the XAML x:Name attribute.">Représente un attribut de niveau type qui indique quelle propriété du type correspond à l’attribut x:Name XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.RuntimeNamePropertyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.RuntimeNamePropertyAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.RuntimeNamePropertyAttribute" />.</summary>
      <param name="name" vsli:raw="The name of the property to use as the &lt;see langword=&quot;x:Name&quot; /&gt; equivalent of the class.">Nom de la propriété à utiliser en tant qu'équivalent <see langword="x:Name" /> de la classe.</param>
    </member>
    <member name="P:System.Windows.Markup.RuntimeNamePropertyAttribute.Name">
      <summary vsli:raw="Gets the name of the runtime name property that is specified by this &lt;see cref=&quot;T:System.Windows.Markup.RuntimeNamePropertyAttribute&quot; /&gt;.">Obtient le nom de la propriété de nom d'exécution spécifiée par <see cref="T:System.Windows.Markup.RuntimeNamePropertyAttribute" />.</summary>
      <returns vsli:raw="The name of the property.">Nom de la propriété.</returns>
    </member>
    <member name="T:System.Windows.Markup.StaticExtension">
      <summary vsli:raw="Implements a markup extension that returns static field and property references.">Implémente une extension de balisage qui retourne des références de champ statique et de propriété.</summary>
    </member>
    <member name="M:System.Windows.Markup.StaticExtension.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.StaticExtension&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.StaticExtension" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.StaticExtension.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.StaticExtension&quot; /&gt; class using the provided &lt;paramref name=&quot;member&quot; /&gt; string.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.StaticExtension" /> à l'aide de la chaîne <paramref name="member" /> fournie.</summary>
      <param name="member" vsli:raw="A string that identifies the member to make a reference to. This string uses the format &lt;c&gt;prefix:typeName.fieldOrPropertyName&lt;/c&gt;. &lt;c&gt;prefix&lt;/c&gt; is the mapping prefix for a XAML namespace, and is only required to reference static values that are not mapped to the default XAML namespace.">Chaîne qui identifie le membre auquel faire une référence. Cette chaîne utilise le format <c>préfixe:nom-type.nom_champ_ou_propriété</c>. <c>préfixe</c> est le préfixe de mappage pour un espace de noms XAML et est nécessaire seulement pour référencer des valeurs statiques non mappées à l’espace de noms XAML par défaut.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;member&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="member" /> est <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.StaticExtension.Member">
      <summary vsli:raw="Gets or sets a member name string that is used to resolve a static field or property based on the service-provided type resolver.">Obtient ou définit une chaîne de nom de membre utilisée pour résoudre un champ ou une propriété statique selon le programme de résolution de type fourni par le service.</summary>
      <returns vsli:raw="A string that identifies the member to make a reference to.">Chaîne qui identifie le membre auquel faire une référence.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Attempted to set &lt;see cref=&quot;P:System.Windows.Markup.StaticExtension.Member&quot; /&gt; to &lt;see langword=&quot;null&quot; /&gt;.">Tentative d’affectation de la valeur <see langword="null" /> à <see cref="P:System.Windows.Markup.StaticExtension.Member" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.StaticExtension.MemberType">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Type&quot; /&gt; that defines the static member to return.">Obtient ou définit le <see cref="T:System.Type" /> qui définit le membre statique à retourner.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that defines the static member to return.">
        <see cref="T:System.Type" /> qui définit le membre statique à retourner.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Attempted to set &lt;see cref=&quot;P:System.Windows.Markup.StaticExtension.MemberType&quot; /&gt; to &lt;see langword=&quot;null&quot; /&gt;.">Tentative d’affectation de la valeur <see langword="null" /> à <see cref="P:System.Windows.Markup.StaticExtension.MemberType" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.StaticExtension.ProvideValue(System.IServiceProvider)">
      <summary vsli:raw="Returns an object value to set on the property where you apply this extension. For &lt;see cref=&quot;T:System.Windows.Markup.StaticExtension&quot; /&gt;, the return value is the static value that is evaluated for the requested static member.">Retourne une valeur d'objet à définir sur la propriété où vous appliquez cette extension. Pour <see cref="T:System.Windows.Markup.StaticExtension" />, la valeur de retour est la valeur statique qui est évaluée pour le membre statique demandé.</summary>
      <param name="serviceProvider" vsli:raw="An object that can provide services for the markup extension. The service provider is expected to provide a service that implements a type resolver (&lt;see cref=&quot;T:System.Windows.Markup.IXamlTypeResolver&quot; /&gt;).">Objet qui peut fournir des services pour l’extension de balisage. Le fournisseur de services doit fournir un service qui implémente un programme de résolution de type (<see cref="T:System.Windows.Markup.IXamlTypeResolver" />).</param>
      <returns vsli:raw="The static value to set on the property where the extension is applied.">Valeur statique à définir sur la propriété où l'extension est appliquée.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;member&quot; /&gt; value for the extension is &lt;see langword=&quot;null&quot; /&gt; at the time of evaluation.">La valeur <paramref name="member" /> pour l'extension est <see langword="null" /> au moment de l'évaluation.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Some part of the &lt;paramref name=&quot;member&quot; /&gt; string did not parse properly  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;serviceProvider&quot; /&gt; did not provide a service for &lt;see cref=&quot;T:System.Windows.Markup.IXamlTypeResolver&quot; /&gt;  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;member&quot; /&gt; value did not resolve to a static member.">Une partie de la chaîne <paramref name="member" /> n'est pas analysée correctement 

ou - 
<paramref name="serviceProvider" /> n'a pas fourni de service pour <see cref="T:System.Windows.Markup.IXamlTypeResolver" />  

ou - 
La valeur <paramref name="member" /> n'est pas résolue en un membre statique.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serviceProvider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="serviceProvider" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="T:System.Windows.Markup.TrimSurroundingWhitespaceAttribute">
      <summary vsli:raw="Indicates to XAML processors that the whitespace surrounding elements of the type in markup should be trimmed when serializing.">Indique aux processeurs XAML que l'espace blanc qui entoure les éléments du type dans la balise doit être supprimé lors de la sérialisation.</summary>
    </member>
    <member name="M:System.Windows.Markup.TrimSurroundingWhitespaceAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.TrimSurroundingWhitespaceAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.TrimSurroundingWhitespaceAttribute" />.</summary>
    </member>
    <member name="T:System.Windows.Markup.TypeExtension">
      <summary vsli:raw="Implements a markup extension that returns a &lt;see cref=&quot;T:System.Type&quot; /&gt; based on a string input.">Implémente une extension de balisage qui retourne un <see cref="T:System.Type" /> basé sur une entrée de chaîne.</summary>
    </member>
    <member name="M:System.Windows.Markup.TypeExtension.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.TypeExtension&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.TypeExtension" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.TypeExtension.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.TypeExtension&quot; /&gt; class, initializing the &lt;see cref=&quot;P:System.Windows.Markup.TypeExtension.TypeName&quot; /&gt; value based on the provided &lt;paramref name=&quot;typeName&quot; /&gt; string.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.TypeExtension" />, initialisant la valeur <see cref="P:System.Windows.Markup.TypeExtension.TypeName" /> selon la chaîne <paramref name="typeName" /> fournie.</summary>
      <param name="typeName" vsli:raw="A string that identifies the type to make a reference to. This string uses the format &lt;c&gt;prefix:className&lt;/c&gt;. &lt;c&gt;prefix&lt;/c&gt; is the mapping prefix for a XAML namespace, and is only required to reference types that are not mapped to the default XAML namespace.">Chaîne qui identifie le type auquel faire une référence. Cette chaîne utilise le format <c>préfixe:nom_classe</c>. <c>préfixe</c> est le préfixe de mappage pour un espace de noms XAML, nécessaire seulement pour référencer des types non mappés à l’espace de noms XAML par défaut.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Attempted to specify &lt;paramref name=&quot;typeName&quot; /&gt; as &lt;see langword=&quot;null&quot; /&gt;.">Tentative de spécification de <paramref name="typeName" /> comme <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.TypeExtension.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.TypeExtension&quot; /&gt; class, declaring the type directly.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.TypeExtension" />, en déclarant directement le type.</summary>
      <param name="type" vsli:raw="The type to be represented by this &lt;see cref=&quot;T:System.Windows.Markup.TypeExtension&quot; /&gt;.">Le type à représenter par ce <see cref="T:System.Windows.Markup.TypeExtension" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;">
        <paramref name="type" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.TypeExtension.ProvideValue(System.IServiceProvider)">
      <summary vsli:raw="Returns an object that should be set on the property where this extension is applied. For &lt;see cref=&quot;T:System.Windows.Markup.TypeExtension&quot; /&gt; , this is the &lt;see cref=&quot;T:System.Type&quot; /&gt; value as evaluated for the requested type name.">Retourne un objet qui doit être défini sur la propriété où cette extension est appliquée. Pour <see cref="T:System.Windows.Markup.TypeExtension" />, il s'agit de la valeur <see cref="T:System.Type" /> comme évaluée pour le nom de type demandé.</summary>
      <param name="serviceProvider" vsli:raw="Object that can provide services for the markup extension. The provider is expected to provide a service for &lt;see cref=&quot;T:System.Windows.Markup.IXamlTypeResolver&quot; /&gt;.">Objet qui peut fournir des services pour l'extension du balisage. Le fournisseur est supposé fournir un service pour <see cref="T:System.Windows.Markup.IXamlTypeResolver" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to set on the property where the extension is applied.">
        <see cref="T:System.Type" /> à définir sur la propriété où l'extension est appliquée.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;member&quot; /&gt; value for the extension is &lt;see langword=&quot;null&quot; /&gt;.">La valeur <paramref name="member" /> de l'extension est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Some part of the &lt;paramref name=&quot;typeName&quot; /&gt; string did not parse properly.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;serviceProvider&quot; /&gt; did not provide a service for &lt;see cref=&quot;T:System.Windows.Markup.IXamlTypeResolver&quot; /&gt;  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;typeName&quot; /&gt; value did not resolve to a type.">Une partie de la chaîne <paramref name="typeName" /> n'est pas analysée correctement.  

ou - 
<paramref name="serviceProvider" /> n'a pas fourni de service pour <see cref="T:System.Windows.Markup.IXamlTypeResolver" />  

ou - 
La valeur <paramref name="typeName" /> n'est pas résolue en type.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serviceProvider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;">
        <paramref name="serviceProvider" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.TypeExtension.Type">
      <summary vsli:raw="Gets or sets the type information for this extension.">Obtient ou définit les informations de type pour cette extension.</summary>
      <returns vsli:raw="The established type. For runtime purposes, this may be &lt;see langword=&quot;null&quot; /&gt; for get access, but cannot be set to &lt;see langword=&quot;null&quot; /&gt;.">Type établi. À des fins d'exécution, elle peut avoir la valeur <see langword="null" /> pour l'obtention d'accès, mais la valeur <see langword="null" /> ne peut pas lui être attribuée.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Attempted to set to &lt;see langword=&quot;null&quot; /&gt;.">A tenté de définir à <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.TypeExtension.TypeName">
      <summary vsli:raw="Gets or sets the type name represented by this markup extension.">Obtient ou définit le nom de type représenté par cette extension de balisage.</summary>
      <returns vsli:raw="A string that identifies the type. This string uses the format prefix&lt;c&gt;:&lt;/c&gt;className. (prefix is the mapping prefix for an XML namespace and is only required to reference types that are not mapped to the default XML namespace for WPF (&lt;c&gt;http://schemas.microsoft.com/winfx/2006/xaml/presentation&lt;/c&gt;).">Chaîne qui identifie le type. Cette chaîne utilise le format préfixe<c>:</c>className. préfixe est le préfixe de mappage pour un espace de noms XAML et n’est nécessaire que pour faire référence à des types non mappés à l’espace de noms XAML par défaut pour WPF (http://schemas.microsoft.com/winfx/2006/xaml/presentation).</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Attempted to set to &lt;see langword=&quot;null&quot; /&gt;.">Tentative d’affectation de la valeur <see langword="null" /></exception>
    </member>
    <member name="T:System.Windows.Markup.UidPropertyAttribute">
      <summary vsli:raw="Indicates the CLR property of a class that provides the x:Uid Directive value.">Indique la propriété CLR d’une classe qui fournit la valeur de la directive x:Uid.</summary>
    </member>
    <member name="M:System.Windows.Markup.UidPropertyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.UidPropertyAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.UidPropertyAttribute" />.</summary>
      <param name="name" vsli:raw="The name of the property that provides the &lt;see langword=&quot;x:Uid&quot; /&gt; value.">Le nom de la propriété qui fournit la valeur <see langword="x:Uid" />.</param>
    </member>
    <member name="P:System.Windows.Markup.UidPropertyAttribute.Name">
      <summary vsli:raw="Gets the name of the CLR property that represents the x:Uid Directive value.">Obtient le nom de la propriété CLR qui représente la valeur de la directive x:Uid.</summary>
      <returns vsli:raw="The name of the CLR property that represents x:Uid Directive.">Nom de la propriété CLR qui représente la valeur de la directive x:Uid.</returns>
    </member>
    <member name="T:System.Windows.Markup.UsableDuringInitializationAttribute">
      <summary vsli:raw="Indicates whether this type is built top-down during XAML object graph creation.">Indique si ce type est généré de haut en bas lors de la création d’un graphique d’objet XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.UsableDuringInitializationAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.UsableDuringInitializationAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.UsableDuringInitializationAttribute" />.</summary>
      <param name="usable" vsli:raw="Defines whether the associated class is usable during initialization.">Définit si la classe associée est utilisable au cours de l'initialisation.</param>
    </member>
    <member name="P:System.Windows.Markup.UsableDuringInitializationAttribute.Usable">
      <summary vsli:raw="Gets a value that indicates whether the associated class is usable during initialization.">Obtient une valeur qui indique si la classe associée est utilisable au cours de l'initialisation.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the associated class is usable during initialization; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la classe associée est utilisable au cours de l'initialisation ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Markup.ValueSerializer">
      <summary vsli:raw="Abstract class that defines conversion behavior for serialization from an object representation.">Classe abstraite qui définit le comportement de conversion pour la sérialisation d'une représentation d'objet.</summary>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.ValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="When overridden in a derived class, determines whether the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be converted to an instance of the type that the implementation of &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; supports.">En cas de substitution dans une classe dérivée, détermine si le <see cref="T:System.String" /> spécifié peut être converti en instance du type que l’implémentation de <see cref="T:System.Windows.Markup.ValueSerializer" /> prend en charge.</summary>
      <param name="value" vsli:raw="The string to evaluate for conversion.">Chaîne à évaluer pour la conversion.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informations de contexte utilisées pour la conversion.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value can be converted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la valeur peut être convertie ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="When overridden in a derived class, determines whether the specified object can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;.">En cas de remplacement dans une classe dérivée, détermine si l’objet spécifié peut être converti en <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to evaluate for conversion.">Objet à évaluer pour la conversion.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informations de contexte utilisées pour la conversion.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="value" /> peut être converti en <see cref="T:System.String" /> ; sinon, <see langword="false." />.</returns>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="When overridden in a derived class, converts a &lt;see cref=&quot;T:System.String&quot; /&gt; to an instance of the type that the implementation of &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; supports.">En cas de substitution dans une classe dérivée, convertit un <see cref="T:System.String" /> en une instance du type que l’implémentation de <see cref="T:System.Windows.Markup.ValueSerializer" /> prend en charge.</summary>
      <param name="value" vsli:raw="The string to convert.">Chaîne à convertir.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informations de contexte utilisées pour la conversion.</param>
      <returns vsli:raw="A new instance of the type that the implementation of &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; supports based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">Nouvelle instance du type que l’implémentation de <see cref="T:System.Windows.Markup.ValueSerializer" /> prend en charge en fonction du <paramref name="value" /> fourni.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; cannot be converted.">
        <paramref name="value" /> ne peut pas être converti.</exception>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="When overridden in a derived class, converts the specified object to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">En cas de substitution dans une classe dérivée, convertit l’objet spécifié en <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to convert into a string.">Objet à convertir en chaîne.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informations de contexte utilisées pour la conversion.</param>
      <returns vsli:raw="A string representation of the specified object.">Représentation sous forme de chaîne de l’objet spécifié.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; cannot be converted.">
        <paramref name="value" /> ne peut pas être converti.</exception>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetConvertFromException(System.Object)">
      <summary vsli:raw="Returns an exception to throw when a conversion cannot be performed.">Retourne une exception à lever lorsqu'une conversion ne peut pas être effectuée.</summary>
      <param name="value" vsli:raw="The object that could not be converted.">Objet n'ayant pas pu être converti.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Exception&quot; /&gt; object for the exception to throw when a &lt;see langword=&quot;ConvertFrom&quot; /&gt; conversion cannot be performed.">Objet <see cref="T:System.Exception" /> pour l'exception à lever lorsqu'une conversion <see langword="ConvertFrom" /> ne peut pas être effectuée.</returns>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetConvertToException(System.Object,System.Type)">
      <summary vsli:raw="Returns an exception to throw when a conversion cannot be performed.">Retourne une exception à lever lorsqu'une conversion ne peut pas être effectuée.</summary>
      <param name="value" vsli:raw="The object that could not be converted.">Objet n'ayant pas pu être converti.</param>
      <param name="destinationType" vsli:raw="A type that represents the type the conversion was trying to convert to.">Type représentant le type vers lequel la conversion tentait de s'effectuer.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Exception&quot; /&gt; object for the exception to throw when a &lt;see langword=&quot;ConvertTo&quot; /&gt; conversion cannot be performed.">Objet <see cref="T:System.Exception" /> pour l'exception à lever lorsqu'une conversion <see langword="ConvertTo" /> ne peut pas être effectuée.</returns>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; declared for a property, by passing a CLR property descriptor for the property.">Obtient le <see cref="T:System.Windows.Markup.ValueSerializer" /> déclaré pour une propriété, en passant un descripteur de propriété CLR pour la propriété.</summary>
      <param name="descriptor" vsli:raw="The CLR property descriptor for the property to be serialized.">Descripteur de propriété CLR de la propriété à sérialiser.</param>
      <returns vsli:raw="The serializer associated with the specified property. May return &lt;see langword=&quot;null&quot; /&gt;.">Sérialiseur associé à la propriété spécifiée. Peut retourner <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;descriptor&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="descriptor" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.ComponentModel.PropertyDescriptor,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; declared for the specified property, using the specified context.">Obtient le <see cref="T:System.Windows.Markup.ValueSerializer" /> déclaré pour la propriété spécifiée, à l'aide du contexte indiqué.</summary>
      <param name="descriptor" vsli:raw="Descriptor for the property to be serialized.">Descripteur de la propriété à sérialiser.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informations de contexte utilisées pour la conversion.</param>
      <returns vsli:raw="The serializer associated with the specified property.">Sérialiseur associé à la propriété spécifiée.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;descriptor&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="descriptor" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.Type)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; declared for the specified type.">Obtient le <see cref="T:System.Windows.Markup.ValueSerializer" /> déclaré pour le type spécifié.</summary>
      <param name="type" vsli:raw="The type to get the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; for.">Type pour lequel obtenir le <see cref="T:System.Windows.Markup.ValueSerializer" />.</param>
      <returns vsli:raw="The serializer associated with the specified type. May return &lt;see langword=&quot;null&quot; /&gt;.">Sérialiseur associé au type spécifié. Peut retourner <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.Type,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; declared for the specified type, using the specified context.">Obtient le <see cref="T:System.Windows.Markup.ValueSerializer" /> déclaré pour le type spécifié, à l'aide du contexte indiqué.</summary>
      <param name="type" vsli:raw="The type to get the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; for.">Type pour lequel obtenir le <see cref="T:System.Windows.Markup.ValueSerializer" />.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informations de contexte utilisées pour la conversion.</param>
      <returns vsli:raw="The serializer associated with the specified type.">Sérialiseur associé au type spécifié.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.TypeReferences(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Gets an enumeration of the types referenced by the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt;.">Obtient une énumération des types référencés par le <see cref="T:System.Windows.Markup.ValueSerializer" />.</summary>
      <param name="value" vsli:raw="The value being serialized.">Valeur sérialisée.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informations de contexte utilisées pour la conversion.</param>
      <returns vsli:raw="The types converted by this serializer.">Types convertis par ce sérialiseur.</returns>
    </member>
    <member name="T:System.Windows.Markup.ValueSerializerAttribute">
      <summary>Identifie la classe <see cref="T:System.Windows.Markup.ValueSerializer" /> qu'un type ou une propriété doit utiliser lorsqu'ils sont sérialisés.</summary>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializerAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.ValueSerializerAttribute" />, à l'aide d'une chaîne de nom de type qualifié d'assembly.</summary>
      <param name="valueSerializerTypeName">Chaîne de nom de type qualifié d'assembly pour la classe <see cref="T:System.Windows.Markup.ValueSerializer" /> à utiliser.</param>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializerAttribute.#ctor(System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.ValueSerializerAttribute" /> avec le type spécifié.</summary>
      <param name="valueSerializerType">Type qui représente le type de la classe <see cref="T:System.Windows.Markup.ValueSerializer" />.</param>
    </member>
    <member name="P:System.Windows.Markup.ValueSerializerAttribute.ValueSerializerType">
      <summary>Obtient le type de la classe <see cref="T:System.Windows.Markup.ValueSerializer" /> signalée par cet attribut.</summary>
      <returns>Type de <see cref="T:System.Windows.Markup.ValueSerializer" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.ValueSerializerAttribute.ValueSerializerTypeName">
      <summary>Obtient le nom qualifié de l'assembly du type <see cref="T:System.Windows.Markup.ValueSerializer" /> pour le type ou la propriété.</summary>
      <returns>Nom qualifié d'assembly du type.</returns>
    </member>
    <member name="T:System.Windows.Markup.WhitespaceSignificantCollectionAttribute">
      <summary vsli:raw="Indicates that a collection type should be processed as being whitespace significant by a XAML processor.">Indique qu'un type collection doit être traité comme étant un espace blanc significatif par un processeur XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.WhitespaceSignificantCollectionAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.WhitespaceSignificantCollectionAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.WhitespaceSignificantCollectionAttribute" />.</summary>
    </member>
    <member name="T:System.Windows.Markup.XamlDeferLoadAttribute">
      <summary vsli:raw="Indicates that a class or property has a deferred load usage for XAML (such as a template behavior), and reports the class that enables the deferring behavior and its destination/content type.">Indique qu'une classe ou une propriété utilise le chargement différé pour XAML (par exemple, dans un comportement de modèle), et signale la classe qui active le comportement de report et son type de destination/contenu.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlDeferLoadAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XamlDeferLoadAttribute&quot; /&gt; class, using string names of types.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.XamlDeferLoadAttribute" /> à l'aide des noms de chaîne des types.</summary>
      <param name="loaderType" vsli:raw="The string name of the type for the implementation to use for the defer load behavior.">Nom de chaîne du type que l'implémentation doit utiliser pour le comportement de chargement différé.</param>
      <param name="contentType" vsli:raw="The string name of the type for the destination/content type of the defer load behavior.">Nom de chaîne du type de destination/contenu du comportement de chargement différé.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;loaderType&quot; /&gt; or &lt;paramref name=&quot;contentType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="loaderType" /> ou <paramref name="contentType" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlDeferLoadAttribute.#ctor(System.Type,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XamlDeferLoadAttribute&quot; /&gt; class, using CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; values.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.XamlDeferLoadAttribute" /> à l'aide des valeurs <see cref="T:System.Type" /> CLR.</summary>
      <param name="loaderType" vsli:raw="The CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; value for the implementation to use for the defer load behavior.">Valeur <see cref="T:System.Type" /> CLR que l'implémentation doit utiliser pour le comportement de chargement différé.</param>
      <param name="contentType" vsli:raw="The CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; value for the destination/content type of the defer load behavior.">Valeur <see cref="T:System.Type" /> CLR du type de destination/contenu du comportement de chargement différé.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;loaderType&quot; /&gt; or &lt;paramref name=&quot;contentType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="loaderType" /> ou <paramref name="contentType" /> est <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.XamlDeferLoadAttribute.ContentType">
      <summary vsli:raw="Gets the CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; value for the destination/content type of the defer load behavior.">Obtient la valeur <see cref="T:System.Type" /> CLR du type de destination/contenu du comportement de chargement différé.</summary>
      <returns vsli:raw="The CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; value for the destination/content type of the defer load behavior.">Valeur <see cref="T:System.Type" /> CLR du type de destination/contenu du comportement de chargement différé.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlDeferLoadAttribute.ContentTypeName">
      <summary vsli:raw="Gets the string name of the type for the implementation to use for the defer load behavior.">Obtient le nom de chaîne du type que l'implémentation doit utiliser pour le comportement de chargement différé.</summary>
      <returns vsli:raw="The string name of the type for the converter to use for the defer load behavior.">Nom de chaîne du type que le convertisseur doit utiliser pour le comportement de chargement différé.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlDeferLoadAttribute.LoaderType">
      <summary vsli:raw="Gets the CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; value for the implementation to use for the defer load behavior.">Obtient la valeur <see cref="T:System.Type" /> CLR que l'implémentation doit utiliser pour le comportement de chargement différé.</summary>
      <returns vsli:raw="The CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; value for the implementation to use for the defer load behavior.">Valeur <see cref="T:System.Type" /> CLR que l'implémentation doit utiliser pour le comportement de chargement différé.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlDeferLoadAttribute.LoaderTypeName">
      <summary vsli:raw="Gets the string name of the type for the destination/content type of the defer load behavior.">Obtient le nom de chaîne du type de destination/contenu du comportement de chargement différé.</summary>
      <returns vsli:raw="The string name of the type for the destination/content type of the defer load behavior.">Nom de chaîne du type de destination/contenu du comportement de chargement différé.</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlSetMarkupExtensionAttribute">
      <summary vsli:raw="Indicates that a class can use a markup extension to provide a value, and references a handler to use for markup extension set operations.">Indique qu'une classe peut utiliser une extension de balisage pour fournir une valeur et référence un gestionnaire à utiliser pour les opérations ensemblistes d'extension de balisage.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlSetMarkupExtensionAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XamlSetMarkupExtensionAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.XamlSetMarkupExtensionAttribute" />.</summary>
      <param name="xamlSetMarkupExtensionHandler" vsli:raw="The name of the handler to use for markup extension set operations.">Nom du gestionnaire à utiliser pour les opérations ensemblistes d'extension de balisage.</param>
    </member>
    <member name="P:System.Windows.Markup.XamlSetMarkupExtensionAttribute.XamlSetMarkupExtensionHandler">
      <summary vsli:raw="Gets the name of the handler to use for markup extension set operations.">Obtient le nom du gestionnaire à utiliser pour les opérations ensemblistes d'extension de balisage.</summary>
      <returns vsli:raw="The name of the handler to use for markup extension set operations.">Nom du gestionnaire à utiliser pour les opérations ensemblistes d'extension de balisage.</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs">
      <summary vsli:raw="Provides data for callbacks that are invoked when a XAML object writer sets a value using a markup extension.">Fournit des données pour les rappels qui sont effectués lorsqu'un writer d'objet XAML définit une valeur à l'aide d'une extension de balisage.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlSetMarkupExtensionEventArgs.#ctor(System.Xaml.XamlMember,System.Windows.Markup.MarkupExtension,System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs" />.</summary>
      <param name="member" vsli:raw="XAML type system / schema information for the member being set.">Informations de schéma/système de type XAML du membre qui est défini.</param>
      <param name="value" vsli:raw="The markup extension reference to provide for the member being set.">Référence d'extension de balisage à fournir pour le membre qui est défini.</param>
      <param name="serviceProvider" vsli:raw="Service provider information passed to the markup extension.">Informations sur le fournisseur de services passées à l'extension de balisage.</param>
    </member>
    <member name="M:System.Windows.Markup.XamlSetMarkupExtensionEventArgs.CallBase">
      <summary vsli:raw="Provides a way to invoke a callback as defined on a base class of the current acting type.">Permet d'effectuer un rappel tel qu'il est défini sur une classe de base du type actuel.</summary>
    </member>
    <member name="P:System.Windows.Markup.XamlSetMarkupExtensionEventArgs.MarkupExtension">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtension&quot; /&gt; reference that is relevant to this &lt;see cref=&quot;T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs&quot; /&gt;.">Obtient la référence <see cref="T:System.Windows.Markup.MarkupExtension" /> qui est appropriée pour ce <see cref="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs" />.</summary>
      <returns vsli:raw="The markup extension reference that is relevant to this &lt;see cref=&quot;T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs&quot; /&gt;.">Référence d'extension de balisage qui est appropriée pour ce <see cref="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlSetMarkupExtensionEventArgs.ServiceProvider">
      <summary vsli:raw="Gets service provider information that was passed to the markup extension.">Obtient les informations sur le fournisseur de services qui ont été passées à l'extension de balisage.</summary>
      <returns vsli:raw="Service provider information that was passed to the markup extension.">Informations sur le fournisseur de services qui ont été passées à l'extension de balisage.</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlSetTypeConverterAttribute">
      <summary vsli:raw="Indicates that a class can use a type converter to provide a value, and references a handler to use for type converter setting cases.">Indique qu'une classe peut utiliser un convertisseur de type pour fournir une valeur et référence un gestionnaire à utiliser pour le paramétrage du convertisseur de type.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlSetTypeConverterAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XamlSetTypeConverterAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.XamlSetTypeConverterAttribute" />.</summary>
      <param name="xamlSetTypeConverterHandler" vsli:raw="The name of the handler to use for type converter setting operations.">Nom du gestionnaire à utiliser pour les opérations de paramétrage du convertisseur de type.</param>
    </member>
    <member name="P:System.Windows.Markup.XamlSetTypeConverterAttribute.XamlSetTypeConverterHandler">
      <summary vsli:raw="Gets the &lt;paramref name=&quot;xamlSetTypeConverterHandler&quot; /&gt; initialization value (the handler name) specified in the &lt;see cref=&quot;T:System.Windows.Markup.XamlSetTypeConverterAttribute&quot; /&gt;.">Obtient la valeur d'initialisation <paramref name="xamlSetTypeConverterHandler" /> (nom de gestionnaire) spécifiée dans le <see cref="T:System.Windows.Markup.XamlSetTypeConverterAttribute" />.</summary>
      <returns vsli:raw="The &lt;paramref name=&quot;xamlSetTypeConverterHandler&quot; /&gt; value specified in the &lt;see cref=&quot;T:System.Windows.Markup.XamlSetTypeConverterAttribute&quot; /&gt;.">Valeur <paramref name="xamlSetTypeConverterHandler" /> spécifiée dans le <see cref="T:System.Windows.Markup.XamlSetTypeConverterAttribute" />.</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlSetTypeConverterEventArgs">
      <summary vsli:raw="Provides data for callbacks that are invoked when a XAML writer sets a value using a type converter call.">Fournit des données pour les rappels effectués lorsqu'un writer XAML définit une valeur à l'aide d'un appel de convertisseur de type.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlSetTypeConverterEventArgs.#ctor(System.Xaml.XamlMember,System.ComponentModel.TypeConverter,System.Object,System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XamlSetTypeConverterEventArgs&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.XamlSetTypeConverterEventArgs" />.</summary>
      <param name="member" vsli:raw="XAML type system / schema information for the member being set.">Informations de schéma/système de type XAML du membre qui est défini.</param>
      <param name="typeConverter" vsli:raw="The specific type converter instance being invoked.">Instance de convertisseur de type spécifique qui est appelée.</param>
      <param name="value" vsli:raw="The value to provide for the member being set.">Valeur à fournir pour le membre qui est défini.</param>
      <param name="serviceProvider" vsli:raw="Service provider information that can be used by the &lt;paramref name=&quot;typeConverter&quot; /&gt; class.">Informations sur le fournisseur de services qui peuvent être utilisées par la classe <paramref name="typeConverter" />.</param>
      <param name="cultureInfo" vsli:raw="Culture information that can be used by the &lt;paramref name=&quot;typeConverter&quot; /&gt; class when calling &lt;see cref=&quot;M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)&quot; /&gt; and other methods.">Informations de culture qui peuvent être utilisées par la classe <paramref name="typeConverter" /> lors de l'appel de <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" /> et d'autres méthodes.</param>
    </member>
    <member name="M:System.Windows.Markup.XamlSetTypeConverterEventArgs.CallBase">
      <summary vsli:raw="Provides a way to invoke a callback as defined on a base class of the current acting type.">Permet d'effectuer un rappel tel qu'il est défini sur une classe de base du type actuel.</summary>
    </member>
    <member name="P:System.Windows.Markup.XamlSetTypeConverterEventArgs.CultureInfo">
      <summary vsli:raw="Gets &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; information that can be used by the type converter class when calling &lt;see cref=&quot;M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)&quot; /&gt; and other methods.">Obtient des informations <see cref="T:System.Globalization.CultureInfo" /> qui peuvent être utilisées par la classe de convertisseur de type lors de l'appel de <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" /> et d'autres méthodes.</summary>
      <returns vsli:raw="Culture information that can be used by the type converter class.">Informations de culture qui peuvent être utilisées par la classe de convertisseur de type.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlSetTypeConverterEventArgs.ServiceProvider">
      <summary vsli:raw="Gets &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; information that can be used by the type converter class.">Obtient des informations <see cref="T:System.IServiceProvider" /> qui peuvent être utilisées par la classe de convertisseur de type.</summary>
      <returns vsli:raw="Service provider information that can be used by the &lt;paramref name=&quot;typeConverter&quot; /&gt; class.">Informations sur le fournisseur de services qui peuvent être utilisées par la classe <paramref name="typeConverter" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlSetTypeConverterEventArgs.TypeConverter">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; instance that is invoked and provides type conversion behavior.">Obtient l'instance de <see cref="T:System.ComponentModel.TypeConverter" /> qui est appelée et fournit le comportement de conversion de type.</summary>
      <returns vsli:raw="The type converter that provides type conversion behavior.">Convertisseur de type qui fournit le comportement de conversion de type.</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlSetValueEventArgs">
      <summary vsli:raw="Provides data for callbacks that are invoked when a &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; sets certain values.">Fournit des données pour les rappels qui sont effectués lorsqu'un <see cref="T:System.Xaml.XamlObjectWriter" /> définit certaines valeurs.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlSetValueEventArgs.#ctor(System.Xaml.XamlMember,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XamlSetValueEventArgs&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />.</summary>
      <param name="member" vsli:raw="XAML type system / schema information for the member being set.">Informations de schéma/système de type XAML du membre qui est défini.</param>
      <param name="value" vsli:raw="The value to provide for the member.">Valeur à fournir pour le membre.</param>
    </member>
    <member name="M:System.Windows.Markup.XamlSetValueEventArgs.CallBase">
      <summary vsli:raw="When overridden in a derived class, provides a way to invoke a &lt;see langword=&quot;SetValue&quot; /&gt; callback as defined on a base class of the current acting type.">En cas de substitution dans une classe dérivée, permet d'effectuer un rappel <see langword="SetValue" /> tel qu'il est défini sur une classe de base du type actuel.</summary>
    </member>
    <member name="P:System.Windows.Markup.XamlSetValueEventArgs.Handled">
      <summary vsli:raw="Gets or sets a value that determines whether a caller that is using the &lt;see cref=&quot;T:System.Windows.Markup.XamlSetValueEventArgs&quot; /&gt; can use the values without having to call &lt;see cref=&quot;M:System.Windows.Markup.XamlSetValueEventArgs.CallBase&quot; /&gt;.">Obtient ou définit une valeur qui détermine si un appelant utilisant le <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" /> peut employer les valeurs sans avoir à appeler la méthode <see cref="M:System.Windows.Markup.XamlSetValueEventArgs.CallBase" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the values were useful and calling &lt;see cref=&quot;M:System.Windows.Markup.XamlSetValueEventArgs.CallBase&quot; /&gt; is not necessary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les valeurs sont utiles et que l'appel de la méthode <see cref="M:System.Windows.Markup.XamlSetValueEventArgs.CallBase" /> n'est pas nécessaire ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlSetValueEventArgs.Member">
      <summary vsli:raw="Gets XAML type system and XAML schema information for the member being set.">Obtient les informations de schéma XAML et de système de type XAML pour le membre qui est défini.</summary>
      <returns vsli:raw="XAML type system and XAML schema information for the member being set.">Informations de schéma XAML et système de type XAML pour le membre qui est défini.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlSetValueEventArgs.Value">
      <summary vsli:raw="Gets the value to provide for the member being set.">Obtient la valeur à fournir pour le membre qui est défini.</summary>
      <returns vsli:raw="The value to provide for the member being set.">Valeur à fournir pour le membre qui est défini.</returns>
    </member>
    <member name="T:System.Windows.Markup.XData">
      <summary vsli:raw="Represents literal data that can appear as the value for a &lt;see langword=&quot;Value&quot; /&gt; node.">Représente les données littérales qui peuvent s'afficher comme valeur pour un nœud <see langword="Value" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.XData.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XData&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.XData" />.</summary>
    </member>
    <member name="P:System.Windows.Markup.XData.Text">
      <summary vsli:raw="Gets or sets the literal value string that this &lt;see cref=&quot;T:System.Windows.Markup.XData&quot; /&gt; wraps.">Obtient ou définit la chaîne de valeur littérale que ce <see cref="T:System.Windows.Markup.XData" /> encapsule.</summary>
      <returns vsli:raw="The literal value string.">Chaîne de valeur littérale.</returns>
    </member>
    <member name="P:System.Windows.Markup.XData.XmlReader">
      <summary vsli:raw="Gets or sets a reader for the literal data.">Obtient ou définit un lecteur pour les données littérales.</summary>
      <returns vsli:raw="A reader for the literal data.">Lecteur des données littérales.</returns>
    </member>
    <member name="T:System.Windows.Markup.XmlLangPropertyAttribute">
      <summary vsli:raw="Identifies the property to associate with the xml:lang attribute.">Identifie la propriété à associer à l’attribut xml:lang.</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlLangPropertyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XmlLangPropertyAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.XmlLangPropertyAttribute" />.</summary>
      <param name="name" vsli:raw="The property name to associate with the &lt;see langword=&quot;xml:lang&quot; /&gt; attribute.">Nom de la propriété à associer à l'attribut <see langword="xml:lang" />.</param>
    </member>
    <member name="P:System.Windows.Markup.XmlLangPropertyAttribute.Name">
      <summary vsli:raw="Gets the name of the property that is specified in this attribute.">Obtient le nom de la propriété spécifiée dans cet attribut.</summary>
      <returns vsli:raw="The name of the property.">Nom de la propriété.</returns>
    </member>
    <member name="T:System.Windows.Markup.XmlnsCompatibleWithAttribute">
      <summary vsli:raw="Specifies that a XAML namespace can be subsumed by another XAML namespace. Typically, the subsuming XAML namespace is indicated in a previously defined &lt;see cref=&quot;T:System.Windows.Markup.XmlnsDefinitionAttribute&quot; /&gt;.">Spécifie qu'un espace de noms XAML peut être utilisé par un autre espace de noms XAML. En règle générale, l’espace de noms XAML inclus est indiqué dans un <see cref="T:System.Windows.Markup.XmlnsDefinitionAttribute" /> précédemment défini.</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlnsCompatibleWithAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XmlnsCompatibleWithAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.XmlnsCompatibleWithAttribute" />.</summary>
      <param name="oldNamespace" vsli:raw="The reference XAML namespace identifier.">Identificateur de référence de l'espace de noms XAML.</param>
      <param name="newNamespace" vsli:raw="The subsuming XAML namespace identifier.">Identificateur utilisé de l'espace de noms XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;oldNamespace&quot; /&gt; or &lt;paramref name=&quot;newNamespace&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="oldNamespace" /> ou <paramref name="newNamespace" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.XmlnsCompatibleWithAttribute.NewNamespace">
      <summary vsli:raw="Gets the subsuming namespace identifier reported by this attribute.">Obtient l'identificateur de l'espace de noms utilisé signalé par cet attribut.</summary>
      <returns vsli:raw="The subsuming namespace identifier reported in the attribute.">Identificateur de l'espace de noms utilisé signalé dans l'attribut.</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsCompatibleWithAttribute.OldNamespace">
      <summary vsli:raw="Gets the reference namespace identifier reported by this attribute.">Obtient l'identificateur de l'espace de noms de référence signalé par cet attribut.</summary>
      <returns vsli:raw="The reference namespace identifier.">Identificateur de l'espace de noms XAML.</returns>
    </member>
    <member name="T:System.Windows.Markup.XmlnsDefinitionAttribute">
      <summary vsli:raw="Specifies a mapping on a per-assembly basis between a XAML namespace and a CLR namespace, which is then used for type resolution by a XAML object writer or XAML schema context.">Spécifie un mappage par assembly entre un espace de noms XAML et un espace de noms CLR, qui est ensuite utilisé par un writer d’objet XAML ou un contexte de schéma XAML à des fins de résolution de type.</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDefinitionAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XmlnsDefinitionAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.XmlnsDefinitionAttribute" />.</summary>
      <param name="xmlNamespace" vsli:raw="The XAML namespace identifier.">Identificateur d'espace de noms XAML.</param>
      <param name="clrNamespace" vsli:raw="A string that references a CLR namespace name.">Chaîne qui fait référence à un espace de noms CLR.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlNamespace&quot; /&gt; or &lt;paramref name=&quot;clrNamespace&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xmlNamespace" /> ou <paramref name="clrNamespace" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDefinitionAttribute.AssemblyName">
      <summary vsli:raw="Gets or sets the name of the assembly associated with the attribute.">Obtient ou définit le nom de l’assembly associé à l’attribut.</summary>
      <returns vsli:raw="The assembly name.">Nom de l'assembly.</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDefinitionAttribute.ClrNamespace">
      <summary vsli:raw="Gets the string name of the CLR namespace specified in this attribute.">Obtient le nom de chaîne de l’espace de noms CLR spécifié dans cet attribut</summary>
      <returns vsli:raw="The CLR namespace, specified as a string.">Espace de noms CLR, spécifié sous forme de chaîne.</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDefinitionAttribute.XmlNamespace">
      <summary vsli:raw="Gets the XAML namespace identifier specified in this attribute.">Obtient l'identificateur de l'espace de noms XAML spécifié dans cet attribut.</summary>
      <returns vsli:raw="The XAML namespace identifier.">Identificateur d'espace de noms XAML.</returns>
    </member>
    <member name="T:System.Windows.Markup.XmlnsPrefixAttribute">
      <summary vsli:raw="Identifies a recommended prefix to associate with a XAML namespace for XAML usage, when writing elements and attributes in a XAML file (serialization) or when interacting with a design environment that has XAML editing features.">Identifie un préfixe recommandé à associer à un espace de noms XAML pour l'utilisation de XAML, lors de l'écriture d'éléments et d'attributs dans un fichier XAML (sérialisation) ou lors de l'interaction avec un environnement de conception qui comporte des fonctionnalités d'édition XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlnsPrefixAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XmlnsPrefixAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.XmlnsPrefixAttribute" />.</summary>
      <param name="xmlNamespace" vsli:raw="The XAML namespace identifier.">Identificateur d'espace de noms XAML.</param>
      <param name="prefix" vsli:raw="The recommended prefix string.">Chaîne de préfixe recommandé.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlNamespace&quot; /&gt; or &lt;paramref name=&quot;prefix&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xmlNamespace" /> ou <paramref name="prefix" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.XmlnsPrefixAttribute.Prefix">
      <summary vsli:raw="Gets the recommended prefix associated with this attribute.">Obtient le préfixe recommandé associé à cet attribut.</summary>
      <returns vsli:raw="The recommended prefix string.">Chaîne de préfixe recommandé.</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsPrefixAttribute.XmlNamespace">
      <summary vsli:raw="Gets the XAML namespace identifier associated with this attribute.">Obtient l'identificateur d'espace de noms XAML associé à cet attribut.</summary>
      <returns vsli:raw="The XAML namespace identifier.">Identificateur d'espace de noms XAML.</returns>
    </member>
    <member name="T:System.Xaml.AmbientPropertyValue">
      <summary vsli:raw="Reports information about an ambient property, as part of an &lt;see cref=&quot;T:System.Xaml.IAmbientProvider&quot; /&gt; implementation.">Signale les informations relatives à une propriété ambiante, dans le cadre d'une implémentation de <see cref="T:System.Xaml.IAmbientProvider" />.</summary>
    </member>
    <member name="M:System.Xaml.AmbientPropertyValue.#ctor(System.Xaml.XamlMember,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.AmbientPropertyValue&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.AmbientPropertyValue" />.</summary>
      <param name="property" vsli:raw="The identifier that represents the ambient property.">Identificateur qui représente la propriété ambiante.</param>
      <param name="value" vsli:raw="The value to report.">Valeur à signaler.</param>
    </member>
    <member name="P:System.Xaml.AmbientPropertyValue.RetrievedProperty">
      <summary vsli:raw="Gets the XAML type system identifier (&lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;) that represents the ambient property.">Obtient l'identificateur du système de type XAML (<see cref="T:System.Xaml.XamlMember" />) qui représente la propriété ambiante.</summary>
      <returns vsli:raw="The identifier that represents the ambient property.">Identificateur qui représente la propriété ambiante.</returns>
    </member>
    <member name="P:System.Xaml.AmbientPropertyValue.Value">
      <summary vsli:raw="Gets the value of the ambient property.">Obtient la valeur de la propriété ambiante.</summary>
      <returns vsli:raw="The value of the ambient property.">Valeur de la propriété ambiante.</returns>
    </member>
    <member name="T:System.Xaml.AttachableMemberIdentifier">
      <summary vsli:raw="Provides a XAML type system identifier representation for attachable members. The identifier structure parallels the &lt;paramref name=&quot;declaringType&quot; /&gt;&lt;see langword=&quot;.&quot; /&gt;&lt;paramref name=&quot;memberName&quot; /&gt; string form for attachable member usage.">Fournit une représentation de l'identificateur du système de type XAML pour les membres pouvant être attachés. La structure de l'identificateur correspond au format de chaîne <paramref name="declaringType" /><see langword="." /><paramref name="memberName" /> pour l'utilisation de membre pouvant être attaché.</summary>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.#ctor(System.Type,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.AttachableMemberIdentifier" />.</summary>
      <param name="declaringType" vsli:raw="The &lt;paramref name=&quot;declaringType&quot; /&gt; component of the identifier, which should match the name of the declaring &lt;see cref=&quot;P:System.Xaml.XamlMember.Type&quot; /&gt;.">Composant <paramref name="declaringType" /> de l'identificateur, qui doit correspondre au nom du <see cref="P:System.Xaml.XamlMember.Type" /> déclarant.</param>
      <param name="memberName" vsli:raw="The &lt;paramref name=&quot;memberName&quot; /&gt; component of the identifier, which should match the &lt;see cref=&quot;P:System.Xaml.XamlMember.Name&quot; /&gt;.">Composant <paramref name="memberName" /> de l'identificateur, qui doit correspondre au <see cref="P:System.Xaml.XamlMember.Name" />.</param>
    </member>
    <member name="P:System.Xaml.AttachableMemberIdentifier.DeclaringType">
      <summary vsli:raw="Gets or sets the &lt;paramref name=&quot;declaringType&quot; /&gt; component value of the &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">Obtient ou définit la valeur du composant <paramref name="declaringType" /> du <see cref="T:System.Xaml.AttachableMemberIdentifier" />.</summary>
      <returns vsli:raw="The &lt;paramref name=&quot;declaringType&quot; /&gt; component value of the &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">Valeur du composant <paramref name="declaringType" /> du <see cref="T:System.Xaml.AttachableMemberIdentifier" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.Equals(System.Object)">
      <summary vsli:raw="Determines whether this instance of &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; and a specified object have the same value.">Détermine si cette instance de <see cref="T:System.Xaml.AttachableMemberIdentifier" /> et un objet spécifié ont la même valeur.</summary>
      <param name="obj" vsli:raw="The object to compare with the current &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">Objet à comparer au <see cref="T:System.Xaml.AttachableMemberIdentifier" /> actif.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is an &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; and if its value is the same as this instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="obj" /> est un <see cref="T:System.Xaml.AttachableMemberIdentifier" /> et si sa valeur est identique à la valeur de cette instance ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.Equals(System.Xaml.AttachableMemberIdentifier)">
      <summary vsli:raw="Determines whether this instance and another specified &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; object have the same value.">Détermine si cette instance et un autre objet <see cref="T:System.Xaml.AttachableMemberIdentifier" /> spécifié ont la même valeur.</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; to compare with the current &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">
        <see cref="T:System.Xaml.AttachableMemberIdentifier" /> à comparer avec l'objet <see cref="T:System.Xaml.AttachableMemberIdentifier" /> actuel.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the objects have the same value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les objets ont la même valeur ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">Retourne le code de hachage pour ce <see cref="T:System.Xaml.AttachableMemberIdentifier" />.</summary>
      <returns vsli:raw="An integer hash code.">Code de hachage entier.</returns>
    </member>
    <member name="P:System.Xaml.AttachableMemberIdentifier.MemberName">
      <summary vsli:raw="Gets or sets the &lt;paramref name=&quot;memberName&quot; /&gt; component value of the &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">Obtient ou définit la valeur du composant <paramref name="memberName" /> du <see cref="T:System.Xaml.AttachableMemberIdentifier" />.</summary>
      <returns vsli:raw="The &lt;paramref name=&quot;memberName&quot; /&gt; component value of the &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">Valeur du composant <paramref name="memberName" /> du <see cref="T:System.Xaml.AttachableMemberIdentifier" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.op_Equality(System.Xaml.AttachableMemberIdentifier,System.Xaml.AttachableMemberIdentifier)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; objects have the same value.">Détermine si deux objets <see cref="T:System.Xaml.AttachableMemberIdentifier" /> spécifiés ont la même valeur.</summary>
      <param name="left" vsli:raw="An &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.AttachableMemberIdentifier" />, ou <see langword="null" />.</param>
      <param name="right" vsli:raw="An &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.AttachableMemberIdentifier" />, ou <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;left&quot; /&gt; is the same as the value of &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la valeur de <paramref name="left" /> est égale à la valeur de <paramref name="right" /> ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.op_Inequality(System.Xaml.AttachableMemberIdentifier,System.Xaml.AttachableMemberIdentifier)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; objects have different values.">Détermine si deux objets <see cref="T:System.Xaml.AttachableMemberIdentifier" /> spécifiés ont des valeurs différentes.</summary>
      <param name="left" vsli:raw="An &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.AttachableMemberIdentifier" />, ou <see langword="null" />.</param>
      <param name="right" vsli:raw="An &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.AttachableMemberIdentifier" />, ou <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;left&quot; /&gt; differs from the value of &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la valeur de <paramref name="left" /> est différente de la valeur de <paramref name="right" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.ToString">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the current &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">Retourne une <see cref="T:System.String" /> qui représente l'<see cref="T:System.Xaml.AttachableMemberIdentifier" /> actuel.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the current &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">
        <see cref="T:System.String" /> qui représente le <see cref="T:System.Xaml.AttachableMemberIdentifier" /> actuel.</returns>
    </member>
    <member name="T:System.Xaml.AttachablePropertyServices">
      <summary vsli:raw="Provides static helper methods that obtain values and accessor method information from an attachable property and that work with an attached property store.">Fournit des méthodes d'assistance statiques qui obtiennent des valeurs et des informations de méthode d'accesseur d'une propriété pouvant être attachée et qui peuvent être utilisées avec une banque de propriétés jointes.</summary>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.CopyPropertiesTo(System.Object,System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)">
      <summary vsli:raw="Copies all attachable property/value pairs from a specified attachable property store and into a destination array.">Copie toutes les paires propriété/valeur pouvant être attachées issues d'une banque de propriétés pouvant être attachées spécifiée et les enregistre dans un tableau de destination.</summary>
      <param name="instance" vsli:raw="A specific attachable property store that implements &lt;see cref=&quot;T:System.Xaml.IAttachedPropertyStore&quot; /&gt;; or any non-null object to access a static default attachable property store.">Banque de propriétés pouvant être attachées spécifique qui implémente <see cref="T:System.Xaml.IAttachedPropertyStore" />, ou tout objet non null permettant d'accéder à une banque de propriétés pouvant être attachées par défaut statique.</param>
      <param name="array" vsli:raw="The destination array. The array is a generic array, should be passed undimensioned, and should have components of &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; and &lt;see langword=&quot;object&quot; /&gt;.">Tableau de destination. Le tableau est un tableau générique qui doit être passé sans être dimensionné et doit avoir des composants de <see cref="T:System.Xaml.AttachableMemberIdentifier" /> et d'<see langword="object" />.</param>
      <param name="index" vsli:raw="The source index into which to copy.">Index source au niveau duquel effectuer la copie.</param>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.GetAttachedPropertyCount(System.Object)">
      <summary vsli:raw="Returns the count of the attachable property entries that are in the specified store.">Retourne le nombre d'entrées de propriété pouvant être attachée dans la banque spécifié.</summary>
      <param name="instance" vsli:raw="A specific attachable property store that implements &lt;see cref=&quot;T:System.Xaml.IAttachedPropertyStore&quot; /&gt;; or any non-null object to access a static default attachable property store.">Banque de propriétés pouvant être attachées spécifique qui implémente <see cref="T:System.Xaml.IAttachedPropertyStore" />, ou tout objet non null permettant d'accéder à une banque de propriétés pouvant être attachées par défaut statique.</param>
      <returns vsli:raw="The integer count of entries in the store.">Nombre entier d'entrées dans la banque.</returns>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.RemoveProperty(System.Object,System.Xaml.AttachableMemberIdentifier)">
      <summary vsli:raw="Removes the entry for the specified attachable property from the specified store.">Supprime de la banque spécifiée l'entrée de la propriété pouvant être attachée spécifiée.</summary>
      <param name="instance" vsli:raw="A specific attachable property store that implements &lt;see cref=&quot;T:System.Xaml.IAttachedPropertyStore&quot; /&gt;; or any non-null object to access a static default attachable property store.">Banque de propriétés pouvant être attachées spécifique qui implémente <see cref="T:System.Xaml.IAttachedPropertyStore" />, ou tout objet non null permettant d'accéder à une banque de propriétés pouvant être attachées par défaut statique.</param>
      <param name="name" vsli:raw="The identifier for the attachable property entry to remove from the store.">Identificateur de l'entrée de propriété pouvant être attachée à supprimer de la banque.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an attachable property entry for &lt;paramref name=&quot;name&quot; /&gt; was found in the store and removed from it; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si une entrée de propriété pouvant être attachée pour <paramref name="name" /> a été trouvée dans la banque et en a été supprimée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.SetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object)">
      <summary vsli:raw="Sets a value for the specified attachable property in the specified store.">Définit une valeur pour la propriété spécifiée pouvant être attachée dans le magasin spécifié.</summary>
      <param name="instance" vsli:raw="A specific attachable property store that implements &lt;see cref=&quot;T:System.Xaml.IAttachedPropertyStore&quot; /&gt;; or any non-null object to use a static default attachable property store.">Banque de propriétés pouvant être attachées spécifique qui implémente <see cref="T:System.Xaml.IAttachedPropertyStore" /> ; ou tout objet non null pour utiliser une banque de propriétés pouvant être attachées par défaut statique.</param>
      <param name="name" vsli:raw="The identifier of the attachable property entry for which to set a value.">Identificateur de l'entrée de propriété pouvant être attachée pour laquelle définir une valeur.</param>
      <param name="value" vsli:raw="The value to set.">Valeur à définir.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A value could not be set in the store.">Impossible de définir une valeur dans le magasin.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.TryGetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object@)">
      <summary vsli:raw="Attempts to get a value for the specified attachable property in the specified store. Does not throw an exception if the specific attachable property does not exist in the store.">Essaie d'obtenir une valeur pour la propriété pouvant être attachée spécifiée dans la banque spécifiée. Ne lève pas d'exception si la propriété pouvant être attachée spécifique n'existe pas dans la banque.</summary>
      <param name="instance" vsli:raw="A specific attachable property store that implements &lt;see cref=&quot;T:System.Xaml.IAttachedPropertyStore&quot; /&gt;; or any non-null object to use a static default attachable property store.">Banque de propriétés pouvant être attachées spécifique qui implémente <see cref="T:System.Xaml.IAttachedPropertyStore" /> ; ou tout objet non null pour utiliser une banque de propriétés pouvant être attachées par défaut statique.</param>
      <param name="name" vsli:raw="The identifier of the attachable property entry for which to get a value.">Identificateur de l'entrée de propriété pouvant être attachée pour laquelle obtenir une valeur.</param>
      <param name="value" vsli:raw="Out parameter. When this method returns, contains the destination object for the value if &lt;paramref name=&quot;name&quot; /&gt; exists in the store and has a value.">Paramètre de sortie. Cette méthode retourne l'objet de destination pour la valeur si <paramref name="name" /> existe dans la banque et possède une valeur.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an attachable property entry for &lt;paramref name=&quot;name&quot; /&gt; was found in the store and a value was posted to &lt;paramref name=&quot;value&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si une entrée de propriété pouvant être attachée pour <paramref name="name" /> a été trouvée dans la banque et qu'une valeur a été publiée dans <paramref name="value" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.TryGetProperty``1(System.Object,System.Xaml.AttachableMemberIdentifier,``0@)">
      <summary vsli:raw="Attempts to get a value for the specified attachable property in the specified store, returning a generic output form. Does not throw an exception if the specific attachable property does not exist in the store.">Essaie d'obtenir une valeur pour la propriété pouvant être attachée spécifiée dans la banque spécifiée, en retournant un formulaire de sortie générique. Ne lève pas d'exception si la propriété pouvant être attachée spécifique n'existe pas dans la banque.</summary>
      <param name="instance" vsli:raw="A specific attachable property store that implements &lt;see cref=&quot;T:System.Xaml.IAttachedPropertyStore&quot; /&gt;; or any non-null object to access a static default attachable property store.">Banque de propriétés pouvant être attachées spécifique qui implémente <see cref="T:System.Xaml.IAttachedPropertyStore" />, ou tout objet non null permettant d'accéder à une banque de propriétés pouvant être attachées par défaut statique.</param>
      <param name="name" vsli:raw="The identifier of the attachable property entry for which to get a value.">Identificateur de l'entrée de propriété pouvant être attachée pour laquelle obtenir une valeur.</param>
      <param name="value" vsli:raw="Out parameter. When this method returns, contains the destination object for the value if &lt;paramref name=&quot;name&quot; /&gt; exists in the store and has a value.">Paramètre de sortie. Cette méthode retourne l'objet de destination pour la valeur si <paramref name="name" /> existe dans la banque et possède une valeur.</param>
      <typeparam name="T" vsli:raw="The expected type of the output.">Type attendu de la sortie.</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an attachable property entry for &lt;paramref name=&quot;name&quot; /&gt; was found in the store and a value was posted to &lt;paramref name=&quot;value&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si une entrée de propriété pouvant être attachée pour <paramref name="name" /> a été trouvée dans la banque et qu'une valeur a été publiée dans <paramref name="value" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xaml.IAmbientProvider">
      <summary vsli:raw="Represents a service that can return information items about ambient properties or ambient types to type converters and markup extensions.">Représente un service qui peut retourner des informations sur les propriétés ambiantes ou les types ambiants aux convertisseurs de type et aux extensions de balisage.</summary>
    </member>
    <member name="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Boolean,System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])">
      <summary vsli:raw="Returns an enumerable set of ambient property information items for the requested set of types and properties.">Retourne un jeu énumérable d'éléments d'informations de propriété ambiante pour le jeu de types et de propriétés demandé.</summary>
      <param name="ceilingTypes" vsli:raw="Specifies one or more types that should stop the evaluation when they are encountered traversing upward in the object graph. This type holds the desired ambient property. May be &lt;see langword=&quot;null&quot; /&gt;.">Spécifie un ou plusieurs types qui doivent arrêter l'évaluation lorsqu'ils sont rencontrés dans le cadre d'une traversée ascendante du graphique d'objet. Ce type contient la propriété ambiante souhaitée. Peut avoir la valeur <see langword="null" />.</param>
      <param name="searchLiveStackOnly" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to not use a saved context; &lt;see langword=&quot;false&quot; /&gt; to use a saved context. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour ne pas utiliser de contexte enregistré ; <see langword="false" /> pour utiliser un contexte enregistré. La valeur par défaut est <see langword="false" />.</param>
      <param name="types" vsli:raw="Specifies one or more type identifier objects that identify the types to be considered ambient.">Spécifie un ou plusieurs objets d'identificateur de type qui identifient les types à considérer comme ambiants.</param>
      <param name="properties" vsli:raw="Specifies one or more property identifier objects that identify the properties to be considered ambient.">Spécifie un ou plusieurs objets de type identificateur de propriété qui identifient les propriétés à considérer comme ambiantes.</param>
      <returns vsli:raw="An enumerable set of ambient property information items for the requested set of types and properties. The property information for each &lt;see cref=&quot;T:System.Xaml.AmbientPropertyValue&quot; /&gt; that is returned will match one of the input &lt;paramref name=&quot;types&quot; /&gt; or &lt;paramref name=&quot;properties&quot; /&gt;.">Un jeu énumérable d'éléments d'informations de propriété ambiante pour le jeu de types et de propriétés demandé. Les informations de propriété de chaque <see cref="T:System.Xaml.AmbientPropertyValue" /> qui sont retournées correspondront à l'un des <paramref name="types" /> ou <paramref name="properties" /> d'entrée.</returns>
    </member>
    <member name="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])">
      <summary vsli:raw="Returns an enumerable set of ambient property information items for the requested set of properties.">Retourne un jeu énumérable d'éléments d'informations de propriété ambiante pour le jeu de propriétés demandé.</summary>
      <param name="ceilingTypes" vsli:raw="Specifies one or more types that should stop the evaluation when they are encountered traversing upward in the object graph. This type holds the desired ambient property. May be &lt;see langword=&quot;null&quot; /&gt;.">Spécifie un ou plusieurs types qui doivent arrêter l'évaluation lorsqu'ils sont rencontrés dans le cadre d'une traversée ascendante du graphique d'objet. Ce type contient la propriété ambiante souhaitée. Peut avoir la valeur <see langword="null" />.</param>
      <param name="properties" vsli:raw="Specifies one or more property identifier objects that identify the properties to be considered ambient.">Spécifie un ou plusieurs objets de type identificateur de propriété qui identifient les propriétés à considérer comme ambiantes.</param>
      <returns vsli:raw="An enumerable set of ambient property information items for the requested set of properties. The property information for each &lt;see cref=&quot;T:System.Xaml.AmbientPropertyValue&quot; /&gt; that is returned will match one of the input &lt;paramref name=&quot;properties&quot; /&gt;.">Jeu énumérable d'éléments d'informations de propriété ambiante pour le jeu de propriétés demandé. Les informations de propriété de chaque <see cref="T:System.Xaml.AmbientPropertyValue" /> qui sont retournées correspondront à l'un des <paramref name="properties" /> d'entrée.</returns>
    </member>
    <member name="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Xaml.XamlType[])">
      <summary vsli:raw="Returns an enumerable set of object instances of possible ambient types for the requested types.">Retourne un jeu énumérable d'instances d'objet des types ambiants possibles pour les types demandés.</summary>
      <param name="types" vsli:raw="The set of types from which to retrieve ambient type information.">Jeu de types à partir duquel récupérer les informations de type ambiant.</param>
      <returns vsli:raw="An enumerable set of objects that represent the values for the requested set of &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; identifiers.">Jeu énumérable d'objets qui représentent les valeurs du jeu demandé d'identificateurs <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="M:System.Xaml.IAmbientProvider.GetFirstAmbientValue(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])">
      <summary vsli:raw="Returns a single ambient property information item from the requested set of properties, based on which property is first encountered.">Retourne un élément d'information de propriété ambiante unique à partir du jeu de propriétés demandé, en fonction de la première propriété rencontrée.</summary>
      <param name="ceilingTypes" vsli:raw="Specifies one or more types that should stop the evaluation when they are encountered traversing upward in the object graph. This type holds the desired ambient property.">Spécifie un ou plusieurs types qui doivent arrêter l'évaluation lorsqu'ils sont rencontrés dans le cadre d'une traversée ascendante du graphique d'objet. Ce type contient la propriété ambiante souhaitée.</param>
      <param name="properties" vsli:raw="Specifies one or more objects that identify the properties to be considered ambient.">Spécifie un ou plusieurs objets qui identifient les propriétés à considérer comme ambiantes.</param>
      <returns vsli:raw="A single ambient property information item for the first ambient property value from the &lt;paramref name=&quot;properties&quot; /&gt; list that is found.">Élément d'information de propriété ambiante unique pour la première valeur de propriété ambiante trouvée dans la liste des <paramref name="properties" />.</returns>
    </member>
    <member name="M:System.Xaml.IAmbientProvider.GetFirstAmbientValue(System.Xaml.XamlType[])">
      <summary vsli:raw="Returns the first matching object that is a possible ambient type for the requested types.">Retourne le premier objet correspondant qui est un type ambiant possible pour les types demandés.</summary>
      <param name="types" vsli:raw="The set of types from which to retrieve ambient type information.">Jeu de types à partir duquel récupérer les informations de type ambiant.</param>
      <returns vsli:raw="The first result object for the requested set.">Premier objet de résultat pour le jeu demandé.</returns>
    </member>
    <member name="T:System.Xaml.IAttachedPropertyStore">
      <summary vsli:raw="Represents an attachable member store for an object where attachable members are set. This attachable member store can then be referenced with &lt;see cref=&quot;T:System.Xaml.AttachablePropertyServices&quot; /&gt;.">Représente une banque de membres pouvant être attachés pour un objet dans lequel les membres pouvant être attachés sont définis. Cette banque de membres pouvant être attachés peut ensuite être référencée avec <see cref="T:System.Xaml.AttachablePropertyServices" />.</summary>
    </member>
    <member name="M:System.Xaml.IAttachedPropertyStore.CopyPropertiesTo(System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)">
      <summary vsli:raw="Copies all attachable member/value pairs from this attachable member store into a destination array.">Copie toutes les paires membre/valeur pouvant être attachées, à partir de cette banque de membres pouvant être attachés et vers un tableau de destination.</summary>
      <param name="array" vsli:raw="The destination array. The array is a generic array, should be passed undimensioned, and should have components of &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; and &lt;see langword=&quot;object&quot; /&gt;.">Tableau de destination. Le tableau est un tableau générique qui doit être passé sans être dimensionné et doit avoir des composants de <see cref="T:System.Xaml.AttachableMemberIdentifier" /> et d'<see langword="object" />.</param>
      <param name="index" vsli:raw="The source index where copying should begin.">Index source où la copie doit commencer.</param>
    </member>
    <member name="P:System.Xaml.IAttachedPropertyStore.PropertyCount">
      <summary vsli:raw="Gets the count of the attachable member entries in this attachable member store.">Obtient le nombre d'entrées de membres pouvant être attachés dans cette banque de membres pouvant être attachés.</summary>
      <returns vsli:raw="The integer count of entries in the store.">Nombre entier d'entrées dans la banque.</returns>
    </member>
    <member name="M:System.Xaml.IAttachedPropertyStore.RemoveProperty(System.Xaml.AttachableMemberIdentifier)">
      <summary vsli:raw="Removes the entry for the specified attachable member from this attachable member store.">Supprime l'entrée pour le membre pouvant être attaché spécifié de cette banque de membres pouvant être attachés.</summary>
      <param name="attachableMemberIdentifier" vsli:raw="The XAML type system identifier for the attachable member entry to remove.">Identificateur du système de type XAML pour l'entrée de membre pouvant être attaché à supprimer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an attachable member entry for &lt;paramref name=&quot;attachableMemberIdentifier&quot; /&gt; was found in the store and removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si une entrée de membre pouvant être attaché pour <paramref name="attachableMemberIdentifier" /> a été trouvée dans la banque et supprimée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.IAttachedPropertyStore.SetProperty(System.Xaml.AttachableMemberIdentifier,System.Object)">
      <summary vsli:raw="Sets a value for the specified attachable member in the specified store.">Définit une valeur pour le membre pouvant être attaché spécifié dans la banque spécifiée.</summary>
      <param name="attachableMemberIdentifier" vsli:raw="The XAML type system identifier for the attachable member entry to set.">Identificateur du système de type XAML pour l'entrée de membre pouvant être attaché à définir.</param>
      <param name="value" vsli:raw="The value to set.">Valeur à définir.</param>
    </member>
    <member name="M:System.Xaml.IAttachedPropertyStore.TryGetProperty(System.Xaml.AttachableMemberIdentifier,System.Object@)">
      <summary vsli:raw="Attempts to get a value for the specified attachable member in the specified store.">Essaie d'obtenir une valeur pour le membre pouvant être attaché spécifié dans la banque spécifiée.</summary>
      <param name="attachableMemberIdentifier" vsli:raw="The XAML type system identifier for the attachable member entry to get.">Identificateur du système de type XAML pour l'entrée de membre pouvant être attaché à obtenir.</param>
      <param name="value" vsli:raw="Out parameter. When this method returns, contains the destination object for the value if &lt;paramref name=&quot;attachableMemberIdentifier&quot; /&gt; exists in the store and has a value.">Paramètre de sortie. Cette méthode retourne l'objet de destination pour la valeur si <paramref name="attachableMemberIdentifier" /> existe dans la banque et possède une valeur.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an attachable member entry for &lt;paramref name=&quot;attachableMemberIdentifier&quot; /&gt; was found in the store and a value was posted to &lt;paramref name=&quot;value&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si une entrée de membre pouvant être attaché pour <paramref name="attachableMemberIdentifier" /> a été trouvée dans la banque et qu'une valeur a été publiée sous <paramref name="value" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xaml.IDestinationTypeProvider">
      <summary vsli:raw="Represents a service that can return a CLR type system identifier for the destination type. The destination type is relevant when the destination type for a property-setting operation is indirectly reported by reflection or other mechanisms.">Représente un service qui peut retourner un identificateur de système de type CLR pour le type de destination. Le type de destination est pertinent lorsque celui défini pour une opération de définition de propriétés est indirectement signalé par une réflexion ou d'autres mécanismes.</summary>
    </member>
    <member name="M:System.Xaml.IDestinationTypeProvider.GetDestinationType">
      <summary vsli:raw="Returns the CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; that identifies the destination type for the relevant type converter or markup extension.">Retourne le CLR <see cref="T:System.Type" /> qui identifie le type de destination pour le convertisseur de type pertinent ou l'extension de balisage.</summary>
      <returns vsli:raw="A CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; value for the destination type.">Valeur <see cref="T:System.Type" /> CLR pour le type de destination.</returns>
    </member>
    <member name="T:System.Xaml.INamespacePrefixLookup">
      <summary vsli:raw="Represents a service that can return the recommended prefix for a XAML namespace mapping to consumers. Consumers might include design environments or serializers.">Représente un service qui peut retourner le préfixe recommandé pour un mappage d'espace de noms XAML avec des consommateurs. Les consommateurs peuvent inclure des environnements de conception ou des sérialiseurs.</summary>
    </member>
    <member name="M:System.Xaml.INamespacePrefixLookup.LookupPrefix(System.String)">
      <summary vsli:raw="Returns the recommended prefix for a specified XAML namespace identifier.">Retourne le préfixe recommandé pour un identificateur d'espace de noms XAML spécifié.</summary>
      <param name="ns" vsli:raw="The XAML namespace identifier string for which to obtain a prefix.">Chaîne de l'identificateur d'espace de noms XAML pour laquelle obtenir un préfixe.</param>
      <returns vsli:raw="The recommended prefix.">Préfixe recommandé.</returns>
    </member>
    <member name="T:System.Xaml.IRootObjectProvider">
      <summary vsli:raw="Describes a service that can return the root object of markup being parsed.">Décrit un service qui peut retourner l'objet racine du balisage en cours d'analyse.</summary>
    </member>
    <member name="P:System.Xaml.IRootObjectProvider.RootObject">
      <summary vsli:raw="Gets the root object from markup or from an object graph.">Obtient l'objet racine du balisage ou d'un graphique d'objet.</summary>
      <returns vsli:raw="The root object.">Objet racine.</returns>
    </member>
    <member name="T:System.Xaml.IXamlIndexingReader">
      <summary vsli:raw="Provides a service that represents indexed node control for a simple implementation of a node-based XAML reader.">Fournit un service qui représente le contrôle de nœud indexé pour une implémentation simple d'un lecteur XAML basé sur un nœud.</summary>
    </member>
    <member name="P:System.Xaml.IXamlIndexingReader.Count">
      <summary vsli:raw="Gets the number of nodes in the current external node set.">Obtient le nombre de nœuds dans le jeu de nœuds externes actuel.</summary>
      <returns vsli:raw="The number of nodes in the current external node set.">Nombre de nœuds dans le jeu de nœuds externes actuel.</returns>
    </member>
    <member name="P:System.Xaml.IXamlIndexingReader.CurrentIndex">
      <summary vsli:raw="Gets or sets the index number of the current reader position for the indexed list view of XAML nodes.">Obtient ou définit le numéro d'index de la position actuelle du lecteur pour la vue Liste indexée des nœuds XAML.</summary>
      <returns vsli:raw="The index number of the current reader position.">Numéro d'index de la position actuelle du lecteur.</returns>
    </member>
    <member name="T:System.Xaml.IXamlLineInfo">
      <summary vsli:raw="Describes a service for reporting text line information in XAML reader implementations.">Décrit un service pour le signalement des informations de ligne de texte dans les implémentations de lecteur XAML.</summary>
    </member>
    <member name="P:System.Xaml.IXamlLineInfo.HasLineInfo">
      <summary vsli:raw="Gets a value that specifies whether line information is available.">Obtient une valeur qui spécifie si des informations de ligne sont disponibles.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if line information is available; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si des informations de ligne sont disponibles ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.IXamlLineInfo.LineNumber">
      <summary vsli:raw="Gets the line number to report.">Obtient le numéro de ligne à signaler.</summary>
      <returns vsli:raw="The line number to report.">Numéro de ligne à signaler.</returns>
    </member>
    <member name="P:System.Xaml.IXamlLineInfo.LinePosition">
      <summary vsli:raw="Gets the line position to report.">Obtient la position de ligne à signaler.</summary>
      <returns vsli:raw="The line position to report.">Position de ligne à signaler.</returns>
    </member>
    <member name="T:System.Xaml.IXamlLineInfoConsumer">
      <summary vsli:raw="Describes a service where a XAML writer can use reported line information and then include the information in the output.">Décrit un service dans lequel un writer XAML peut utiliser des informations de ligne rapportées, puis les inclure dans la sortie.</summary>
    </member>
    <member name="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)">
      <summary vsli:raw="Collects line information.">Collecte les informations de ligne.</summary>
      <param name="lineNumber" vsli:raw="The line number to use in the output.">Numéro de ligne à utiliser dans la sortie.</param>
      <param name="linePosition" vsli:raw="The line position to use in the output.">Position de ligne à utiliser dans la sortie.</param>
    </member>
    <member name="P:System.Xaml.IXamlLineInfoConsumer.ShouldProvideLineInfo">
      <summary vsli:raw="Gets a value that determines whether a line information service should provide values and therefore, should also call &lt;see cref=&quot;M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)&quot; /&gt; when relevant.">Obtient une valeur qui détermine si un service d'informations de ligne doit fournir des valeurs et par conséquent appeler également <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" /> au besoin.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if line information is used by the implementation; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les informations de ligne sont utilisées par l'implémentation ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xaml.IXamlNameProvider">
      <summary vsli:raw="Provides a service that is used during save and write operations to input an object and return a XAML name.">Fournit un service qui est utilisé lors des opérations d'enregistrement et d'écriture pour entrer un objet et retourner un nom XAML.</summary>
    </member>
    <member name="M:System.Xaml.IXamlNameProvider.GetName(System.Object)">
      <summary vsli:raw="Retrieves the XAML name of the specified object.">Récupère le nom XAML de l'objet spécifié.</summary>
      <param name="value" vsli:raw="The object to get the name for.">Objet pour lequel obtenir le nom.</param>
      <returns vsli:raw="The XAML name value of the requested object.">Valeur du nom XAML de l'objet demandé.</returns>
    </member>
    <member name="T:System.Xaml.IXamlNameResolver">
      <summary vsli:raw="Describes a service that can return objects that are specified by XAML name, or alternatively, returns a token that defers name resolution. The service can also return an enumerable set of all named objects that are in the XAML namescope.">Décrit un service qui peut retourner des objets spécifiés par leur nom XAML, ou retourne un jeton qui reporte la résolution de noms. Le service peut également retourner un jeu énumérable de tous les objets nommés figurant dans la portée de nom XAML.</summary>
    </member>
    <member name="M:System.Xaml.IXamlNameResolver.GetAllNamesAndValuesInScope">
      <summary vsli:raw="Returns an enumerable set of all named objects in the XAML namescope.">Retourne un jeu énumérable de tous les objets nommés figurant dans la portée de nom XAML.</summary>
      <returns vsli:raw="An enumerable set of &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; objects. For each &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt;, the &lt;see cref=&quot;P:System.Collections.Generic.KeyValuePair`2.Key&quot; /&gt; component is a string, and the &lt;see cref=&quot;P:System.Collections.Generic.KeyValuePair`2.Value&quot; /&gt; component is the object that uses the &lt;see cref=&quot;P:System.Collections.Generic.KeyValuePair`2.Key&quot; /&gt; name in the XAML namescope.">Jeu énumérable d'objets <see cref="T:System.Collections.Generic.KeyValuePair`2" />. Pour chaque <see cref="T:System.Collections.Generic.KeyValuePair`2" />, le composant <see cref="P:System.Collections.Generic.KeyValuePair`2.Key" /> est une chaîne, et le composant <see cref="P:System.Collections.Generic.KeyValuePair`2.Value" /> est l'objet qui utilise le nom <see cref="P:System.Collections.Generic.KeyValuePair`2.Key" /> dans la portée de nom XAML.</returns>
    </member>
    <member name="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String})">
      <summary vsli:raw="Returns an object that can correct for certain markup patterns that produce forward references.">Retourne un objet qui peut être correct pour certains modèles de balisage qui produisent des références vers l'avant.</summary>
      <param name="names" vsli:raw="A collection of names that are possible forward references.">Collection des noms qui constituent des références possibles vers l'avant.</param>
      <returns vsli:raw="An object that provides a token for lookup behavior to be evaluated later.">Objet qui fournit un jeton pour le comportement de recherche à évaluer ultérieurement.</returns>
    </member>
    <member name="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
      <summary vsli:raw="Returns an object that can correct for certain markup patterns that produce forward references.">Retourne un objet qui peut être correct pour certains modèles de balisage qui produisent des références vers l'avant.</summary>
      <param name="names" vsli:raw="A collection of names that are possible forward references.">Collection des noms qui constituent des références possibles vers l'avant.</param>
      <param name="canAssignDirectly" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to immediately assign the resolved name reference to the target property. &lt;see langword=&quot;false&quot; /&gt; to call the user code for a reparse. The default behavior is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour assigner immédiatement la référence de nom résolue à la propriété cible. <see langword="false" /> pour appeler le code utilisateur pour une nouvelle analyse. Le comportement par défaut est <see langword="false" />.</param>
      <returns vsli:raw="An object that provides a token for lookup behavior to be evaluated later.">Objet qui fournit un jeton pour le comportement de recherche à évaluer ultérieurement.</returns>
    </member>
    <member name="P:System.Xaml.IXamlNameResolver.IsFixupTokenAvailable">
      <summary vsli:raw="Gets a value that determines whether calling &lt;see cref=&quot;M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)&quot; /&gt; is available in order to resolve a name into a token for forward resolution.">Obtient une valeur qui détermine si l'appel de <see cref="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)" /> est disponible pour résoudre un nom dans un jeton pour la résolution vers l'avant.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)&quot; /&gt; is available as an implementation that returns a useful token for forward resolution; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)" /> est disponible en tant qu'implémentation qui retourne un jeton utile pour la résolution vers l'avant ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="E:System.Xaml.IXamlNameResolver.OnNameScopeInitializationComplete">
      <summary vsli:raw="Occurs when a XAML processor has registered all the relevant names to the backing XAML namescope.">Se produit lorsqu'un processeur XAML a inscrit tous les noms pertinents dans la portée de nom XAML de stockage.</summary>
    </member>
    <member name="M:System.Xaml.IXamlNameResolver.Resolve(System.String)">
      <summary vsli:raw="Resolves an object from a name reference.">Résout un objet à partir d'une référence de nom.</summary>
      <param name="name" vsli:raw="The name reference to resolve.">Référence de nom à résoudre.</param>
      <returns vsli:raw="The resolved object; or null.">Objet résolu ou valeur Null.</returns>
    </member>
    <member name="M:System.Xaml.IXamlNameResolver.Resolve(System.String,System.Boolean@)">
      <summary vsli:raw="Resolves an object from a name reference, and provides a tracking value that reports whether the object is fully initialized for object graph purposes.">Résout un objet à partir d'une référence de nom et fournit une valeur de suivi qui signale si l'objet est entièrement initialisé pour le graphique d'objet.</summary>
      <param name="name" vsli:raw="The name reference to resolve.">Référence de nom à résoudre.</param>
      <param name="isFullyInitialized" vsli:raw="When this method returns, &lt;see langword=&quot;true&quot; /&gt; if the returned object has any dependencies on unresolved references; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet retourné par la méthode comporte des dépendances avec des références non résolues ; sinon, <see langword="false" />.</param>
      <returns vsli:raw="An object that provides a token for lookup behavior to be evaluated later.">Objet qui fournit un jeton pour le comportement de recherche à évaluer ultérieurement.</returns>
    </member>
    <member name="T:System.Xaml.IXamlNamespaceResolver">
      <summary vsli:raw="Describes a service that can return a XAML namespace that is based on its prefix as it is mapped in XAML markup.">Décrit un service qui peut retourner un espace de noms XAML basé sur son préfixe tel qu'il est mappé dans le balisage XAML.</summary>
    </member>
    <member name="M:System.Xaml.IXamlNamespaceResolver.GetNamespace(System.String)">
      <summary vsli:raw="Retrieves a XAML namespace identifier for the specified prefix string.">Récupère un identificateur d'espace de noms XAML pour la chaîne de préfixe spécifiée.</summary>
      <param name="prefix" vsli:raw="The prefix for which to retrieve the XAML namespace information.">Préfixe pour lequel récupérer les informations d'espace de noms XAML.</param>
      <returns vsli:raw="The requested XAML namespace identifier, as a string.">Identificateur d'espace de noms XAML demandé, sous forme de chaîne.</returns>
    </member>
    <member name="M:System.Xaml.IXamlNamespaceResolver.GetNamespacePrefixes">
      <summary vsli:raw="Returns all the possible prefix-to-XAML namespace mappings (&lt;see cref=&quot;T:System.Xaml.NamespaceDeclaration&quot; /&gt; values) that are available in the active XAML schema context.">Retourne tous les mappages d'espaces de noms de préfixes XAML possibles (valeurs <see cref="T:System.Xaml.NamespaceDeclaration" />) qui sont disponibles dans le contexte de schéma XAML actif.</summary>
      <returns vsli:raw="An enumerable set of &lt;see cref=&quot;T:System.Xaml.NamespaceDeclaration&quot; /&gt; values. To get all the prefix strings, get the &lt;see cref=&quot;P:System.Xaml.NamespaceDeclaration.Prefix&quot; /&gt; value from each value in the returned set. To get prefixes for specific XAML namespaces, process any return value that has the desired &lt;see cref=&quot;P:System.Xaml.NamespaceDeclaration.Namespace&quot; /&gt; value.">Jeu énumérable de valeurs <see cref="T:System.Xaml.NamespaceDeclaration" />. Pour obtenir toutes les chaînes de préfixe, obtenez la valeur <see cref="P:System.Xaml.NamespaceDeclaration.Prefix" /> de chaque valeur du jeu retourné. Pour obtenir des préfixes pour les espaces de noms XAML spécifiques, traitez toutes les valeurs de retour comportant la valeur <see cref="P:System.Xaml.NamespaceDeclaration.Namespace" /> souhaitée.</returns>
    </member>
    <member name="T:System.Xaml.IXamlObjectWriterFactory">
      <summary vsli:raw="Represents a service that generates a &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; that is based on the current internal parser context.">Représente un service qui génère un <see cref="T:System.Xaml.XamlObjectWriter" /> basé sur le contexte de l'analyseur interne actuel.</summary>
    </member>
    <member name="M:System.Xaml.IXamlObjectWriterFactory.GetParentSettings">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterSettings&quot; /&gt; from the original internal parser context.">Retourne les <see cref="T:System.Xaml.XamlObjectWriterSettings" /> du contexte de l'analyseur interne initial.</summary>
      <returns vsli:raw="The settings from the original internal parser context.">Paramètres du contexte de l'analyseur interne initial.</returns>
    </member>
    <member name="M:System.Xaml.IXamlObjectWriterFactory.GetXamlObjectWriter(System.Xaml.XamlObjectWriterSettings)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; that is based on active XAML schema context.">Retourne un <see cref="T:System.Xaml.XamlObjectWriter" /> qui est basé sur le contexte de schéma XAML actif.</summary>
      <param name="settings" vsli:raw="The settings to use for construction and initialization of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt;.">Paramètres à utiliser pour la construction et l'initialisation du <see cref="T:System.Xaml.XamlObjectWriter" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; that has the specified settings.">
        <see cref="T:System.Xaml.XamlObjectWriter" /> qui a les paramètres spécifiés.</returns>
    </member>
    <member name="T:System.Xaml.IXamlSchemaContextProvider">
      <summary vsli:raw="Represents a service that provides XAML schema context information to type converters and markup extensions.">Représente un service qui fournit des informations de contexte de schéma XAML aux convertisseurs de type et aux extensions de balisage.</summary>
    </member>
    <member name="P:System.Xaml.IXamlSchemaContextProvider.SchemaContext">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; that is reported by the service context.">Obtient le <see cref="T:System.Xaml.XamlSchemaContext" /> qui est signalé par le contexte de service.</summary>
      <returns vsli:raw="The XAML schema context that is reported by the service context.">Contexte de schéma XAML qui est signalé par le contexte de service.</returns>
    </member>
    <member name="T:System.Xaml.NamespaceDeclaration">
      <summary vsli:raw="Declares the identifier and the prefix of a XAML namespace by storing these string values as separate properties.">Déclare l'identificateur et le préfixe d'un espace de noms XAML en stockant ces valeurs de chaîne sous forme de propriétés distinctes.</summary>
    </member>
    <member name="M:System.Xaml.NamespaceDeclaration.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.NamespaceDeclaration&quot; /&gt; class using initial property values.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.NamespaceDeclaration" /> en utilisant les valeurs de propriété initiales.</summary>
      <param name="ns" vsli:raw="The XAML namespace identifier, as a string.">Identificateur d'espace de noms XAML, sous forme de chaîne.</param>
      <param name="prefix" vsli:raw="The string prefix that is used for the namespace in prefix mappings.">Préfixe de chaîne qui est utilisé pour l'espace de noms dans les mappages de préfixe.</param>
    </member>
    <member name="P:System.Xaml.NamespaceDeclaration.Namespace">
      <summary vsli:raw="Gets the identifier component of a &lt;see cref=&quot;T:System.Xaml.NamespaceDeclaration&quot; /&gt;.">Obtient le composant d'identification d'un <see cref="T:System.Xaml.NamespaceDeclaration" />.</summary>
      <returns vsli:raw="The identifier of the XAML namespace declaration.">Identificateur de la déclaration d'espace de noms XAML.</returns>
    </member>
    <member name="P:System.Xaml.NamespaceDeclaration.Prefix">
      <summary vsli:raw="Gets the prefix that is used as the XAML namespace mapping prefix for a &lt;see cref=&quot;T:System.Xaml.NamespaceDeclaration&quot; /&gt;.">Obtient le préfixe utilisé comme préfixe de mappage d'espace de noms XAML pour un <see cref="T:System.Xaml.NamespaceDeclaration" />.</summary>
      <returns vsli:raw="The prefix string for this &lt;see cref=&quot;T:System.Xaml.NamespaceDeclaration&quot; /&gt;.">Chaîne de préfixe de ce <see cref="T:System.Xaml.NamespaceDeclaration" />.</returns>
    </member>
    <member name="T:System.Xaml.Permissions.XamlAccessLevel">
      <summary>Définit le contrôle d'accès aux assemblys et aux types à des fins de chargement XAML.</summary>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessTo(System.Reflection.Assembly)">
      <summary>Retourne une instance de <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> basée sur un assembly demandé par <see cref="T:System.Reflection.Assembly" />.</summary>
      <param name="assembly">Assembly de la demande.</param>
      <returns>Instance de <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />, avec la valeur <paramref name="assembly" /> utilisée comme informations sources pour <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assembly" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessTo(System.Reflection.AssemblyName)">
      <summary>Retourne une instance de <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> basée sur un assembly demandé par <see cref="T:System.Reflection.AssemblyName" />.</summary>
      <param name="assemblyName">Nom de l'assembly pour la demande.</param>
      <returns>Instance de <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />, avec la valeur <paramref name="assemblyName" /> utilisée comme informations sources pour <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="assemblyName" /> n'est pas un nom d'assembly qualifié complet valide.</exception>
    </member>
    <member name="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName">
      <summary>Obtient le <see cref="T:System.Reflection.AssemblyName" /> de l'assembly pour lequel ce <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> détermine des autorisations.</summary>
      <returns>
        <see cref="T:System.Reflection.AssemblyName" /> de l'assembly pour lequel ce <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> détermine des autorisations.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo(System.String)">
      <summary>Retourne une instance de <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> basée sur un type spécifique spécifié par son nom qualifié.</summary>
      <param name="assemblyQualifiedTypeName">Chaîne analysée comme nom de type qualifié d'assembly.</param>
      <returns>Instance de <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />, avec la valeur <paramref name="assemblyQualifiedTypeName" /> utilisée comme informations sources pour <see cref="P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName" /> et <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" /> en fonction de la réflexion sur le type.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyQualifiedTypeName" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="assemblyQualifiedTypeName" /> n'est pas un nom de type qualifié d'assembly valide.  

ou - 
Le nom de l'assembly dans <paramref name="assemblyQualifiedTypeName" /> n'est pas un nom d'assembly valide.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo(System.Type)">
      <summary>Retourne une instance de <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> basée sur un type spécifié par <see cref="T:System.Type" />.</summary>
      <param name="type">
        <see cref="T:System.Type" /> pour lequel demander l'accès.</param>
      <returns>Instance de <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />, avec la valeur <paramref name="type" /> utilisée comme informations sources pour <see cref="P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName" /> et <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" /> en fonction de la réflexion sur le type.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName">
      <summary>Obtient le nom de chaîne non qualifié du type pour lequel ce <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> détermine des autorisations.</summary>
      <returns>Nom de chaîne non qualifié du type pour lequel ce <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> détermine des autorisations.</returns>
    </member>
    <member name="T:System.Xaml.Permissions.XamlLoadPermission">
      <summary>Déclare des autorisations pour le chargement de types à partir des assemblys utilisés par un lecteur ou un writer XAML.</summary>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Collections.Generic.IEnumerable{System.Xaml.Permissions.XamlAccessLevel})">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />, à l'aide d'un jeu énumérable de valeurs <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> spécifiques.</summary>
      <param name="allowedAccess">Jeu énumérable de valeurs <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> spécifiques.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="allowedAccess" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="allowedAccess" /> contient des informations non valides, telles qu'un élément null.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> à l'aide des autorisations existantes.</summary>
      <param name="state">Valeur d'énumération <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Xaml.Permissions.XamlAccessLevel)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> avec une seule valeur <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />.</summary>
      <param name="allowedAccess">Valeur <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> de définition.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="allowedAccess" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess">
      <summary>Obtient la liste de toutes les valeurs <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> que ce <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> représente.</summary>
      <returns>Liste de valeurs <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> en lecture seule, ou <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Copy">
      <summary>Crée et retourne une copie identique de l'objet <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> en cours.</summary>
      <returns>Une copie de l'élément <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> actuel.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Equals(System.Object)">
      <param name="obj" />
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruit un objet de sécurité avec un état spécifié à partir d’un encodage XML.</summary>
      <param name="elem">Encodage XML à utiliser pour reconstruire l’objet de sécurité.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elem" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="elem" /> ne contient pas l'encodage XML pour un <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.  

ou - 
L'attribut de version dans <paramref name="elem" /> n'est pas pris en charge.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.GetHashCode" />
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Includes(System.Xaml.Permissions.XamlAccessLevel)">
      <summary>Retourne si ce <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> inclut un <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> spécifié dans sa liste <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" />.</summary>
      <param name="requestedAccess">
        <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> spécifique à rechercher.</param>
      <returns>
        <see langword="true" /> si <paramref name="requestedAccess" /> existe comme élément dans la liste <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" /> du <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> actuel. Sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestedAccess" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Intersect(System.Security.IPermission)">
      <summary>Crée et retourne un <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> qui représente l'intersection entre le <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> actuel et l'autorisation spécifiée.</summary>
      <param name="target">
        <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> qui fera une intersection avec le <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> actuel. Peut être <see langword="null" />.</param>
      <returns>Nouvelle autorisation qui représente l'intersection entre le <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> actuel et le <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> spécifié. Cette nouvelle autorisation est <see langword="null" /> si l’intersection est vide.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> n'est pas <see langword="null" /> ou n'est pas un <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Détermine si le <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> actuel est un sous-ensemble de l'autorisation spécifiée.</summary>
      <param name="target">Autorisation qui doit être testée pour la relation de sous-ensemble. Peut être <see langword="null" />.</param>
      <returns>
        <see langword="true" /> si l'autorisation <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> en cours est un sous-ensemble de l'autorisation spécifiée ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> n'est pas <see langword="null" /> ou n'est pas un <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted">
      <summary>Retourne si ce <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> dénote des autorisations illimitées.</summary>
      <returns>
        <see langword="true" /> si ce <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> dénote des autorisations illimitées. <see langword="false" /> si ce <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> a des restrictions de niveau d'accès spécifiques dans <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" />, ou n'a pas d'autorisations.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.ToXml">
      <summary>Crée un encodage XML de ce <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> et de son état actuel.</summary>
      <returns>Encodage XML de ce <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />, y compris des informations d'état.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Union(System.Security.IPermission)">
      <summary>Crée une autorisation qui est l'union entre le <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> actuel et l'autorisation spécifiée.</summary>
      <param name="other">
        <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> à combiner au <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> actuel. Peut être <see langword="null" />.</param>
      <returns>Nouveau <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> qui représente l'union du <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> actuel et du <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> spécifié.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="other" /> n'est pas <see langword="null" /> ou n'est pas un <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</exception>
    </member>
    <member name="T:System.Xaml.Schema.AllowedMemberLocations">
      <summary vsli:raw="Specifies the syntax restrictions enforced on a property when it is set in XAML, as reported by a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">Spécifie les restrictions de syntaxe appliquées sur une propriété lorsqu'elle est définie en XAML, comme indiqué par un <see cref="T:System.Xaml.XamlDirective" />.</summary>
    </member>
    <member name="F:System.Xaml.Schema.AllowedMemberLocations.Any">
      <summary vsli:raw="Property can be set in either &lt;see cref=&quot;F:System.Xaml.Schema.AllowedMemberLocations.Attribute&quot; /&gt; or &lt;see cref=&quot;F:System.Xaml.Schema.AllowedMemberLocations.MemberElement&quot; /&gt; location. (This enumeration member is defined as the combination of those values.)">La propriété peut être définie dans l'emplacement <see cref="F:System.Xaml.Schema.AllowedMemberLocations.Attribute" /> ou <see cref="F:System.Xaml.Schema.AllowedMemberLocations.MemberElement" />. (Ce membre d'énumération est défini comme la combinaison de ces valeurs.)</summary>
    </member>
    <member name="F:System.Xaml.Schema.AllowedMemberLocations.Attribute">
      <summary vsli:raw="Property can be set in XAML attribute syntax.">La propriété peut être définie dans la syntaxe d'attribut XAML.</summary>
    </member>
    <member name="F:System.Xaml.Schema.AllowedMemberLocations.MemberElement">
      <summary vsli:raw="Property can be set in XAML property element syntax.">La propriété peut être définie dans la syntaxe d'élément de propriété XAML.</summary>
    </member>
    <member name="F:System.Xaml.Schema.AllowedMemberLocations.None">
      <summary vsli:raw="Property cannot be set in XAML at all. This is the default.">La propriété ne peut pas être définie en XAML. Il s'agit de la valeur par défaut.</summary>
    </member>
    <member name="T:System.Xaml.Schema.ShouldSerializeResult">
      <summary vsli:raw="Defines serialization behavior as reported by a &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt;.">Définit le comportement de sérialisation comme signalé par un <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
    </member>
    <member name="F:System.Xaml.Schema.ShouldSerializeResult.Default">
      <summary vsli:raw="Unknown, defer to the type of the member.">Inconnu, différer au type du membre.</summary>
    </member>
    <member name="F:System.Xaml.Schema.ShouldSerializeResult.False">
      <summary vsli:raw="Do not serialize the result.">Ne pas sérialiser le résultat.</summary>
    </member>
    <member name="F:System.Xaml.Schema.ShouldSerializeResult.True">
      <summary vsli:raw="Serialize the result.">Sérialiser le résultat.</summary>
    </member>
    <member name="T:System.Xaml.Schema.XamlCollectionKind">
      <summary vsli:raw="Describes the collection metaphor (if any) used by a XAML member.">Décrit la métaphore de collection (le cas échéant) utilisée par un membre XAML.</summary>
    </member>
    <member name="F:System.Xaml.Schema.XamlCollectionKind.Array">
      <summary vsli:raw="XAML member supports an array collection.">Le membre XAML prend en charge une collection de tableaux.</summary>
    </member>
    <member name="F:System.Xaml.Schema.XamlCollectionKind.Collection">
      <summary vsli:raw="XAML member supports a list or a collection.">Le membre XAML prend en charge une liste ou une collection.</summary>
    </member>
    <member name="F:System.Xaml.Schema.XamlCollectionKind.Dictionary">
      <summary vsli:raw="XAML member supports a dictionary (key-value pairs).">Le membre XAML prend en charge un dictionnaire (paires clé-valeur).</summary>
    </member>
    <member name="F:System.Xaml.Schema.XamlCollectionKind.None">
      <summary vsli:raw="XAML member does not support a collection.">Le membre XAML ne prend pas en charge de collection.</summary>
    </member>
    <member name="T:System.Xaml.Schema.XamlMemberInvoker">
      <summary vsli:raw="Provides an extension point that can access member characteristics of a XAML member through techniques other than reflection.">Fournit un point d'extension qui peut accéder aux caractéristiques de membre d'un membre XAML via des techniques autres que la réflexion.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlMemberInvoker.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlMemberInvoker.#ctor(System.Xaml.XamlMember)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; class, based on a provided &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> en fonction d'un <see cref="T:System.Xaml.XamlMember" /> fourni.</summary>
      <param name="member" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; value for the specific XAML member relevant to this &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt;.">Valeur de <see cref="T:System.Xaml.XamlMember" /> pour le membre XAML spécifique pertinent à ce <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;member&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="member" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)">
      <summary vsli:raw="Gets a value of the relevant property from an instance.">Obtient une valeur de la propriété pertinente à partir d'une instance.</summary>
      <param name="instance" vsli:raw="An instance of the owner type for the member.">Instance du type propriétaire pour le membre.</param>
      <returns vsli:raw="The requested property value.">Valeur de propriété demandée.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="Invoked this method on a &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; that is based on an unknown &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; Invoked this method on a write-only member.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">A appelé cette méthode sur un <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> basé sur un <see cref="T:System.Xaml.XamlMember" /> inconnu.  
 ou  
Appelé cette méthode sur un membre en écriture seule.  
 ou  
 <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)">
      <summary vsli:raw="Sets a value of the relevant property on an instance.">Définit une valeur de la propriété pertinente sur une instance.</summary>
      <param name="instance" vsli:raw="An instance of the owner type for the member.">Instance du type propriétaire pour le membre.</param>
      <param name="value" vsli:raw="The property value to set.">Valeur de propriété à définir.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> est <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="Invoked this method on a &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; that is based on an unknown &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; Invoked this method on a read-only member.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">A appelé cette méthode sur un <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> basé sur un <see cref="T:System.Xaml.XamlMember" /> inconnu.  
 ou  
Appelé cette méthode sur un membre en lecture seule.  
 ou  
 <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlMemberInvoker.ShouldSerializeValue(System.Object)">
      <summary vsli:raw="Indicates whether the value needs to be persisted by serialization processes.">Indique si la valeur doit être rendue persistante par des processus de sérialisation.</summary>
      <param name="instance" vsli:raw="The instance with the property to be examined for persistence.">Instance possédant la propriété dont la persistance doit être examinée.</param>
      <returns vsli:raw="A value of the enumeration.">Valeur de l’énumération.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the CLR method that gets values for the property that is relevant for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt;.">Obtient le <see cref="T:System.Reflection.MethodInfo" /> pour la méthode CLR qui obtient des valeurs pour la propriété qui est pertinente pour ce <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the CLR method that gets values for the property that is relevant for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Reflection.MethodInfo" /> pour la méthode CLR qui obtient des valeurs pour la propriété qui est pertinente pour ce <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, ou <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the CLR method that sets values for the property that is relevant for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt;.">Obtient le <see cref="T:System.Reflection.MethodInfo" /> pour la méthode CLR qui définit des valeurs pour la propriété qui est pertinente pour ce <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the CLR method that sets values for the property that is relevant for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Reflection.MethodInfo" /> pour la méthode CLR qui définit des valeurs pour la propriété qui est pertinente pour ce <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, ou <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker">
      <summary vsli:raw="Provides a static value that represents an unknown, not fully implemented &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt;.">Fournit une valeur statique qui représente un <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> inconnu et non  implémenté pleinement.</summary>
      <returns vsli:raw="A static value that represents an unknown, not fully implemented &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt;.">Valeur statique qui représente un <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> inconnu et non  implémenté pleinement.</returns>
    </member>
    <member name="T:System.Xaml.Schema.XamlTypeInvoker">
      <summary vsli:raw="Provides an extension point that can construct instances of a XAML type through techniques other than reflection and constructors.">Fournit un point d'extension qui peut construire des instances d'un type XAML via des techniques autres que la réflexion et des constructeurs.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.#ctor(System.Xaml.XamlType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; class, based on a provided &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> en fonction d'un <see cref="T:System.Xaml.XamlType" /> fourni.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; value for the specific XAML type relevant to this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">Valeur de <see cref="T:System.Xaml.XamlType" /> pour le type XAML spécifique pertinent à ce <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.AddToCollection(System.Object,System.Object)">
      <summary vsli:raw="Adds the provided item to an instance of the type that is relevant to this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">Ajoute l’élément fourni à une instance du type adapté à ce <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</summary>
      <param name="instance" vsli:raw="An instance of the type specified by the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; used for constructing this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">Instance du type spécifié par le <see cref="T:System.Xaml.XamlType" /> utilisé pour construire ce <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</param>
      <param name="item" vsli:raw="The item to add.">Élément à ajouter.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Invoked this method on a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; that is based on an unknown &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; Invoked this method on a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; where the relevant type is not a collection.">A appelé cette méthode sur un <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> basé sur un <see cref="T:System.Xaml.XamlType" /> inconnu.  
 ou  
A appelé cette méthode sur un <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> où le type pertinent n’est pas une collection.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Xaml.XamlSchemaException" vsli:raw="&lt;see cref=&quot;M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; returns &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> pour ce <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> retourne <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.AddToDictionary(System.Object,System.Object,System.Object)">
      <summary vsli:raw="Adds the provided key and item value to an instance of the type that is relevant to this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">Ajoute la valeur de clé et d’élément fournie à une instance du type adapté à ce <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</summary>
      <param name="instance" vsli:raw="An instance of the type specified by the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; used for constructing this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">Instance du type spécifié par le <see cref="T:System.Xaml.XamlType" /> utilisé pour construire ce <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</param>
      <param name="key" vsli:raw="Dictionary key for the item to add.">Clé de dictionnaire pour l’élément à ajouter.</param>
      <param name="item" vsli:raw="The item value to add.">La valeur d’élément à ajouter.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Invoked this method on a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; that is based on an unknown &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; Invoked this method on a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; where the relevant type is not a dictionary.">A appelé cette méthode sur un <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> basé sur un <see cref="T:System.Xaml.XamlType" /> inconnu.  
 ou  
A appelé cette méthode sur un <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> où le type pertinent n’est pas un dictionnaire.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Xaml.XamlSchemaException" vsli:raw="&lt;see cref=&quot;M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; returns &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> pour ce <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> retourne <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.CreateInstance(System.Object[])">
      <summary vsli:raw="Creates an object instance based on the construction-initiated &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">Crée une instance d'objet basée sur le <see cref="T:System.Xaml.XamlType" /> initié par la construction pour ce <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</summary>
      <param name="arguments" vsli:raw="An array of objects that supply the &lt;see langword=&quot;x:ConstructorArgs&quot; /&gt; for the instance. May be &lt;see langword=&quot;null&quot; /&gt; for types that do not require or use &lt;see langword=&quot;x:ConstructorArgs&quot; /&gt;.">Tableau d'objets qui fournissent <see langword="x:ConstructorArgs" /> pour l'instance. Peut être <see langword="null" /> pour les types qui ne requièrent pas ou n'utilisent pas <see langword="x:ConstructorArgs" />.</param>
      <returns vsli:raw="The created instance based on the construction-initiated &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">Instance créée sur la base du<see cref="T:System.Xaml.XamlType" /> initié par construction pour ce <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</returns>
      <exception cref="T:System.MissingMethodException" vsli:raw="Could not resolve a constructor.">Impossible de résoudre le constructeur.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)">
      <summary vsli:raw="Returns the relevant &lt;see langword=&quot;Add&quot; /&gt; method for a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; that is relevant to a collection or dictionary.">Retourne la méthode <see langword="Add" /> pertinente pour un <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> qui est pertinent à une collection ou un dictionnaire.</summary>
      <param name="contentType" vsli:raw="&lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the item type that is used by the &lt;see langword=&quot;Add&quot; /&gt; method.">
        <see cref="T:System.Xaml.XamlType" /> pour le type d'élément utilisé par la méthode <see langword="Add" />.</param>
      <returns vsli:raw="CLR &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; information for the &lt;see langword=&quot;Add&quot; /&gt; method, or null.">Informations de CLR <see cref="T:System.Reflection.MethodInfo" /> pour la méthode <see langword="Add" />, ou null.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;contentType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="contentType" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod">
      <summary vsli:raw="Returns an object representing a method that can enumerate over items.">Retourne un objet représentant une méthode qui peut effectuer une énumération sur des éléments.</summary>
      <returns vsli:raw="&lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for an enumerator method, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Reflection.MethodInfo" /> pour une méthode d'énumérateur, ou <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.GetItems(System.Object)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object representing the set of items.">Retourne un objet <see cref="T:System.Collections.IEnumerator" /> représentant le jeu d'éléments.</summary>
      <param name="instance" vsli:raw="An instance of the type specified by the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; used for constructing this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">Instance du type spécifié par le <see cref="T:System.Xaml.XamlType" /> utilisé pour construire ce <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object, or &lt;see langword=&quot;null&quot; /&gt;.">Objet <see cref="T:System.Collections.IEnumerator" />, ou <see langword="null" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Invoked this method on a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; that is based on an unknown &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; Invoked this method on a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; where the relevant type is not a collection or dictionary.">A appelé cette méthode sur un <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> basé sur un <see cref="T:System.Xaml.XamlType" /> inconnu.  
 ou  
Appelé cette méthode sur un <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> où le type pertinent n'est pas une collection ni un dictionnaire.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler">
      <summary vsli:raw="Gets the handler to use when a &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; calls into an implemented &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtension&quot; /&gt;.">Obtient le gestionnaire à utiliser lorsqu'un <see cref="T:System.Xaml.XamlObjectWriter" /> effectue un appel dans un <see cref="T:System.Windows.Markup.MarkupExtension" /> implémenté.</summary>
      <returns vsli:raw="A handler implementation that handles this case.">Implémentation de gestionnaire qui gère ce cas.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler">
      <summary vsli:raw="Gets the handler to use when a &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; calls into a CLR-implemented &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt;.">Obtient le gestionnaire à utiliser lorsqu'un <see cref="T:System.Xaml.XamlObjectWriter" /> effectue un appel dans un <see cref="T:System.ComponentModel.TypeConverter" /> implémenté par le CLR.</summary>
      <returns vsli:raw="A handler implementation that handles this case.">Implémentation de gestionnaire qui gère ce cas.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker">
      <summary vsli:raw="Provides a static value that represents an unknown, not fully implemented &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">Fournit une valeur statique qui représente un <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> inconnu et non  implémenté pleinement.</summary>
      <returns vsli:raw="A static value that represents an unknown, not fully implemented &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">Valeur statique qui représente un <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> inconnu et non  implémenté pleinement.</returns>
    </member>
    <member name="T:System.Xaml.Schema.XamlTypeName">
      <summary vsli:raw="Provides a means to specify a XAML type in terms of name and namespace.">Fournit un moyen de spécifier un type XAML en termes de nom et d'espace de noms.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.Schema.XamlTypeName" />.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; class, based on name and namespace strings.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.Schema.XamlTypeName" />, basée sur des chaînes de noms et d'espaces de noms.</summary>
      <param name="xamlNamespace" vsli:raw="The XAML namespace that contains name.">Espace de noms XAML qui contient le nom.</param>
      <param name="name" vsli:raw="The name of the type to create a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; for.">Nom du type pour lequel créer un <see cref="T:System.Xaml.Schema.XamlTypeName" />.</param>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Xaml.Schema.XamlTypeName})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; class, based on name and namespace strings as well as an array of type arguments.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.Schema.XamlTypeName" />, basée sur des chaînes de noms et d'espaces de noms ainsi que sur un tableau d'arguments de type.</summary>
      <param name="xamlNamespace" vsli:raw="The XAML namespace that contains &lt;paramref name=&quot;name&quot; /&gt;.">Espace de noms XAML qui contient <paramref name="name" />.</param>
      <param name="name" vsli:raw="The name of the type to create a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; for.">Nom du type pour lequel créer un <see cref="T:System.Xaml.Schema.XamlTypeName" />.</param>
      <param name="typeArguments" vsli:raw="An array of type arguments, each of which must be a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt;.">Tableau d'arguments de type, chacun devant être un <see cref="T:System.Xaml.Schema.XamlTypeName" />.</param>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.#ctor(System.Xaml.XamlType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; class, based on an existing &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.Schema.XamlTypeName" /> basée sur un <see cref="T:System.Xaml.XamlType" /> existant.</summary>
      <param name="xamlType" vsli:raw="An existing &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlType" /> existant.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xamlType" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeName.Name">
      <summary vsli:raw="Gets the name used to construct this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt;.">Obtient le nom utilisé pour construire ce <see cref="T:System.Xaml.Schema.XamlTypeName" />.</summary>
      <returns vsli:raw="The name of the type.">Nom du type.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeName.Namespace">
      <summary vsli:raw="Gets the XAML namespace identifier used to construct this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt;.">Obtient l'identificateur d'espace de noms XAML utilisé pour construire ce <see cref="T:System.Xaml.Schema.XamlTypeName" />.</summary>
      <returns vsli:raw="The XAML namespace identifier.">Identificateur d'espace de noms XAML.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.Parse(System.String,System.Xaml.IXamlNamespaceResolver)">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; value based on a type name and an object that can resolve a markup prefix into a namespace.">Fournit une valeur <see cref="T:System.Xaml.Schema.XamlTypeName" /> basée sur un nom de type et un objet qui peut résoudre un préfixe de balise dans un espace de noms.</summary>
      <param name="typeName" vsli:raw="The type name to create a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; value for.">Nom du type pour lequel créer une valeur <see cref="T:System.Xaml.Schema.XamlTypeName" />.</param>
      <param name="namespaceResolver" vsli:raw="An object or service provider that implements &lt;see cref=&quot;T:System.Xaml.IXamlNamespaceResolver&quot; /&gt;.">Fournisseur d'objets ou de services qui implémente <see cref="T:System.Xaml.IXamlNamespaceResolver" />.</param>
      <returns vsli:raw="The created &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt;.">Élément <see cref="T:System.Xaml.Schema.XamlTypeName" /> créé.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;typeName&quot; /&gt; or &lt;paramref name=&quot;namespaceResolver&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="typeName" /> ou <paramref name="namespaceResolver" /> est <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="String cannot be parsed.">La chaîne ne peut pas être analysée.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.ParseList(System.String,System.Xaml.IXamlNamespaceResolver)">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; value based on a string that can specify multiple type names, and an object that can resolve a markup prefix into a namespace.">Fournit une valeur <see cref="T:System.Xaml.Schema.XamlTypeName" /> basée sur une chaîne qui peut spécifier plusieurs noms de types et un objet qui peut résoudre un préfixe de balise dans un espace de noms.</summary>
      <param name="typeNameList" vsli:raw="A string that contains multiple types.">Chaîne qui contient plusieurs types.</param>
      <param name="namespaceResolver" vsli:raw="An object or service provider that implements &lt;see cref=&quot;T:System.Xaml.IXamlNamespaceResolver&quot; /&gt;.">Fournisseur d'objets ou de services qui implémente <see cref="T:System.Xaml.IXamlNamespaceResolver" />.</param>
      <returns vsli:raw="The created &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt;.">Élément <see cref="T:System.Xaml.Schema.XamlTypeName" /> créé.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;typeNameList&quot; /&gt; or &lt;paramref name=&quot;namespaceResolver&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="typeNameList" /> ou <paramref name="namespaceResolver" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="String cannot be parsed.">La chaîne ne peut pas être analysée.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.ToString">
      <summary vsli:raw="Converts the value of this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; to its equivalent string representation.">Convertit la valeur de ce <see cref="T:System.Xaml.Schema.XamlTypeName" /> en sa représentation sous forme de chaîne équivalente.</summary>
      <returns vsli:raw="The equivalent string representation of this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt;.">Représentation sous forme de chaîne équivalente de ce <see cref="T:System.Xaml.Schema.XamlTypeName" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.ToString(System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName},System.Xaml.INamespacePrefixLookup)">
      <summary vsli:raw="Converts the value of this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; to its equivalent string representation, which can be used in markup syntax for an object element usage of multiple types.">Convertit la valeur de ce <see cref="T:System.Xaml.Schema.XamlTypeName" /> en sa représentation sous forme de chaîne équivalente, qui peut être utilisée dans la syntaxe de balisage pour une utilisation d'élément objet de plusieurs types.</summary>
      <param name="typeNameList" vsli:raw="A list of types.">Liste de types.</param>
      <param name="prefixLookup" vsli:raw="A service reference for prefix lookup.">Référence de service pour la recherche de préfixe.</param>
      <returns vsli:raw="A concatenated string of all type results.">Chaîne concaténée de tous les résultats de type.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;prefixLookup&quot; /&gt; or &lt;paramref name=&quot;typeNameList&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="prefixLookup" /> ou <paramref name="typeNameList" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.ToString(System.Xaml.INamespacePrefixLookup)">
      <summary vsli:raw="Converts the value of this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; to its equivalent string representation, which can be used in markup syntax for an object element usage of a type.">Convertit la valeur de ce <see cref="T:System.Xaml.Schema.XamlTypeName" /> en sa représentation sous forme de chaîne équivalente, qui peut être utilisée dans la syntaxe de balisage pour une utilisation d'élément objet d'un seul type.</summary>
      <param name="prefixLookup" vsli:raw="A service reference for prefix lookup.">Référence de service pour la recherche de préfixe.</param>
      <returns vsli:raw="A prefixed usage string.">Chaîne d'utilisation préfixée.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Xaml.Schema.XamlTypeName.Namespace&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Xaml.Schema.XamlTypeName.Name&quot; /&gt; is not valid.  &#xA;  &#xA; -or-  &#xA;  &#xA; Could not look up the prefix.">
        <see cref="P:System.Xaml.Schema.XamlTypeName.Namespace" /> pour ce  <see cref="T:System.Xaml.Schema.XamlTypeName" /> est <see langword="null" />.  

ou - 
<see cref="P:System.Xaml.Schema.XamlTypeName.Name" /> n'est pas valide.  

ou 
Impossible de rechercher le préfixe.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.TryParse(System.String,System.Xaml.IXamlNamespaceResolver,System.Xaml.Schema.XamlTypeName@)">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; value based on a type name and an object that can resolve a markup prefix into a namespace.">Fournit une valeur <see cref="T:System.Xaml.Schema.XamlTypeName" /> basée sur un nom de type et un objet qui peut résoudre un préfixe de balise dans un espace de noms.</summary>
      <param name="typeName" vsli:raw="The type name to create a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; value for.">Nom du type pour lequel créer une valeur <see cref="T:System.Xaml.Schema.XamlTypeName" />.</param>
      <param name="namespaceResolver" vsli:raw="An object or service provider that implements &lt;see cref=&quot;T:System.Xaml.IXamlNamespaceResolver&quot; /&gt;.">Fournisseur d'objets ou de services qui implémente <see cref="T:System.Xaml.IXamlNamespaceResolver" />.</param>
      <param name="result" vsli:raw="Out parameter that contains the created &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; if the return value is &lt;see langword=&quot;true&quot; /&gt;.">Paramètre de sortie qui contient le <see cref="T:System.Xaml.Schema.XamlTypeName" /> créé si la valeur de retour est <see langword="true" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the parse was successful and &lt;paramref name=&quot;result&quot; /&gt; contains a useful value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'analyse a réussi et que <paramref name="result" /> contient une valeur utile ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;typeName&quot; /&gt; or &lt;paramref name=&quot;namespaceResolver&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="typeName" /> ou <paramref name="namespaceResolver" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.TryParseList(System.String,System.Xaml.IXamlNamespaceResolver,System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName}@)">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; value based on a string that can specify multiple type names, and an object that can resolve a markup prefix into a namespace.">Fournit une valeur <see cref="T:System.Xaml.Schema.XamlTypeName" /> basée sur une chaîne qui peut spécifier plusieurs noms de types et un objet qui peut résoudre un préfixe de balise dans un espace de noms.</summary>
      <param name="typeNameList" vsli:raw="A string that contains multiple types.">Chaîne qui contient plusieurs types.</param>
      <param name="namespaceResolver" vsli:raw="An object or service provider that implements &lt;see cref=&quot;T:System.Xaml.IXamlNamespaceResolver&quot; /&gt;.">Fournisseur d'objets ou de services qui implémente <see cref="T:System.Xaml.IXamlNamespaceResolver" />.</param>
      <param name="result" vsli:raw="Out parameter that contains the created &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; if the return value is &lt;see langword=&quot;true&quot; /&gt;.">Paramètre de sortie qui contient le <see cref="T:System.Xaml.Schema.XamlTypeName" /> créé si la valeur de retour est <see langword="true" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the parse was successful and &lt;paramref name=&quot;result&quot; /&gt; contains a useful value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'analyse a réussi et que <paramref name="result" /> contient une valeur utile ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;typeNameList&quot; /&gt; or &lt;paramref name=&quot;namespaceResolver&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="typeNameList" /> ou <paramref name="namespaceResolver" /> est <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeName.TypeArguments">
      <summary vsli:raw="Gets the type arguments used to construct this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt;.">Obtient les arguments de type utilisés pour construire ce <see cref="T:System.Xaml.Schema.XamlTypeName" />.</summary>
      <returns vsli:raw="The type arguments, if any. May be null.">Arguments de type, le cas échéant. Ce paramètre peut être null.</returns>
    </member>
    <member name="T:System.Xaml.Schema.XamlTypeTypeConverter">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object to and from a string that represents the type name. This functionality is used for XAML extensibility by markup definitions, via &lt;see cref=&quot;T:System.Windows.Markup.PropertyDefinition&quot; /&gt;.">Convertit un objet <see cref="T:System.Xaml.XamlType" /> vers et à partir d’une chaîne qui représente le nom de type. Cette fonctionnalité est utilisée pour l’extensibilité XAML par les définitions de balisage, via <see cref="T:System.Windows.Markup.PropertyDefinition" />.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeTypeConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeTypeConverter&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.Schema.XamlTypeTypeConverter" />.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an object of the specified type can be converted to an instance of &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;, using the specified context.">Détermine si un objet du type spécifié peut être converti en une instance de <see cref="T:System.Xaml.XamlType" /> à l'aide du contexte indiqué.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Contexte de format qui fournit des informations sur l'environnement à partir duquel ce convertisseur est appelé.</param>
      <param name="sourceType" vsli:raw="The type being evaluated for conversion.">Type évalué pour la conversion.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this converter can perform the operation; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le convertisseur peut effectuer la conversion ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an instance of &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; can be converted to the specified type, using the specified context.">Détermine si une instance de <see cref="T:System.Xaml.XamlType" /> peut être convertie vers le type spécifié, à l'aide du contexte indiqué.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Contexte de format qui fournit des informations sur l'environnement à partir duquel ce convertisseur est appelé.</param>
      <param name="destinationType" vsli:raw="The type being evaluated for conversion.">Type évalué pour la conversion.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this converter can perform the operation; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le convertisseur peut effectuer la conversion ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert the specified object to a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;, using the specified context.">Tente de convertir l'objet spécifié en <see cref="T:System.Xaml.XamlType" />, à l'aide du contexte indiqué.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Contexte de format qui fournit des informations sur l'environnement à partir duquel ce convertisseur est appelé.</param>
      <param name="culture" vsli:raw="Culture specific information.">Informations propres à la culture.</param>
      <param name="value" vsli:raw="The object to convert.">Objet à convertir.</param>
      <returns vsli:raw="The converted object.">Objet converti.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; cannot be converted.">
        <paramref name="value" /> ne peut pas être converti.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; to the specified type, using the specified context.">Tente de convertir <see cref="T:System.Xaml.XamlType" /> vers le type spécifié, à l'aide du contexte indiqué.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Contexte de format qui fournit des informations sur l'environnement à partir duquel ce convertisseur est appelé.</param>
      <param name="culture" vsli:raw="Culture specific information.">Informations propres à la culture.</param>
      <param name="value" vsli:raw="The object to convert.">Objet à convertir.</param>
      <param name="destinationType" vsli:raw="The type to convert the object to.">Type dans lequel convertir l'objet.</param>
      <returns vsli:raw="The converted object.">Objet converti.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; cannot be converted.">
        <paramref name="value" /> ne peut pas être converti.</exception>
    </member>
    <member name="T:System.Xaml.Schema.XamlValueConverter`1">
      <summary vsli:raw="Provides a common API surface for techniques that generate initialization or serialization values for XAML based on input other than the eventual destination type. This includes markup extensions and type converters.">Fournit une surface d'API commune pour les techniques qui génèrent des valeurs d'initialisation ou de sérialisation pour XAML en fonction d'une autre entrée que le type de destination final. Cela inclut les extensions de balisage et les convertisseurs de type.</summary>
      <typeparam name="TConverterBase" vsli:raw="The CLR base class for the particular converter that this &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; represents. Typically this is one of the following: &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt;; &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtension&quot; /&gt;; &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt;.">Classe de base CLR pour le convertisseur particulier représenté par ce <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />. Il s'agit généralement de l'un des éléments suivants : <see cref="T:System.ComponentModel.TypeConverter" />, <see cref="T:System.Windows.Markup.MarkupExtension" /> ou <see cref="T:System.Windows.Markup.ValueSerializer" />.</typeparam>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; class, based on a converter implementing &lt;see cref=&quot;T:System.Type&quot; /&gt; and the target/destination type of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, sur la base d'un convertisseur implémentant <see cref="T:System.Type" /> et du type cible/de destination de <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</summary>
      <param name="converterType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that implements the converter behavior.">
        <see cref="T:System.Type" /> qui implémente le comportement de convertisseur.</param>
      <param name="targetType" vsli:raw="The target/destination &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlType" /> cible/de destination de <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</param>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; class, based on a converter implementing &lt;see cref=&quot;T:System.Type&quot; /&gt; the target/destination type of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;, and a string name.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, sur la base d'un convertisseur implémentant <see cref="T:System.Type" />, du type cible/de destination de <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> et d'un nom de chaîne.</summary>
      <param name="converterType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that implements the converter behavior.">
        <see cref="T:System.Type" /> qui implémente le comportement de convertisseur.</param>
      <param name="targetType" vsli:raw="The target/destination &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlType" /> cible/de destination de <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</param>
      <param name="name" vsli:raw="The string name.">Nom de la chaîne.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="All three parameters are &lt;see langword=&quot;null&quot; /&gt; (at least one is required to be non-null).">Les trois paramètres sont <see langword="null" /> (au moins l'un d'entre eux ne doit pas être NULL).</exception>
    </member>
    <member name="P:System.Xaml.Schema.XamlValueConverter`1.ConverterInstance">
      <summary vsli:raw="Gets a created instance of the converter implementation.">Obtient une instance créée de l'implémentation de convertisseur.</summary>
      <returns vsli:raw="A created instance of the converter implementation, or &lt;see langword=&quot;null&quot; /&gt;.">Instance créée de l'implémentation de convertisseur ou <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlValueConverter`1.ConverterType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Type&quot; /&gt; for the class that implements the converter behavior.">Obtient le <see cref="T:System.Type" /> pour la classe qui implémente le comportement de convertisseur.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; for the class that implements the converter behavior.">
        <see cref="T:System.Type" /> pour la classe qui implémente le comportement de convertisseur.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.CreateInstance">
      <summary vsli:raw="Returns an instance of the converter implementation.">Retourne une instance de l'implémentation de convertisseur.</summary>
      <returns vsli:raw="An instance of the converter implementation, or &lt;see langword=&quot;null&quot; /&gt;.">Instance de l'implémentation de convertisseur ou <see langword="null" />.</returns>
      <exception cref="T:System.Xaml.XamlSchemaException" vsli:raw="Converter did not implement the correct base type.">Le convertisseur n'a pas implémenté le type de base correct.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.Equals(System.Object)">
      <summary vsli:raw="Determines whether this instance of &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; and a specified object, which must also be a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; object, have the same value.">Détermine si cette instance de <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> et un objet spécifié, qui doit aussi être un objet <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, ont la même valeur.</summary>
      <param name="obj" vsli:raw="The object to compare.">Objet à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; and its value is the same as this instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="obj" /> est <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> et possède la même valeur que cette instance ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.Equals(System.Xaml.Schema.XamlValueConverter{`0})">
      <summary vsli:raw="Determines whether this instance of &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; and another &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; object have the same value.">Détermine si cette instance de <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> et un autre objet <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> ont la même valeur.</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; to compare.">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;other&quot; /&gt; is a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; and its value is the same as this instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="other" /> est <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> et possède la même valeur que cette instance ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">Retourne le code de hachage pour ce <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</summary>
      <returns vsli:raw="An integer hash code.">Code de hachage entier.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlValueConverter`1.Name">
      <summary vsli:raw="Gets a string name for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">Obtient un nom de chaîne pour ce <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</summary>
      <returns vsli:raw="A string name for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">Nom de chaîne pour ce <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.op_Equality(System.Xaml.Schema.XamlValueConverter{`0},System.Xaml.Schema.XamlValueConverter{`0})">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; objects have the same value.">Détermine si deux objets <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> spécifiés ont la même valeur.</summary>
      <param name="converter1" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> ou <see langword="null" />.</param>
      <param name="converter2" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> ou <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;converter1&quot; /&gt; is the same as the value of &lt;paramref name=&quot;converter2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la valeur de <paramref name="converter1" /> est égale à la valeur de <paramref name="converter2" /> ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.op_Inequality(System.Xaml.Schema.XamlValueConverter{`0},System.Xaml.Schema.XamlValueConverter{`0})">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; objects have different values.">Détermine si deux objets <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> spécifiés ont des valeurs différentes.</summary>
      <param name="converter1" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> ou <see langword="null" />.</param>
      <param name="converter2" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> ou <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;converter1&quot; /&gt; is different than the value of &lt;paramref name=&quot;converter2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la valeur de <paramref name="converter1" /> est différente de la valeur de <paramref name="converter2" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlValueConverter`1.TargetType">
      <summary vsli:raw="Gets the target/destination &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">Obtient le <see cref="T:System.Xaml.XamlType" /> cible/de destination de <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</summary>
      <returns vsli:raw="The target/destination &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlType" /> cible/de destination de <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.ToString">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.String&quot; /&gt; that represents this &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">Retourne un <see cref="T:System.String" /> qui représente ce <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that represents this &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">
        <see cref="T:System.String" /> qui représente ce <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlBackgroundReader">
      <summary vsli:raw="Implements a double-buffered &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; that can split reading and writing to different threads.">Implémente un <see cref="T:System.Xaml.XamlReader" /> mis deux en mémoire tampon qui peut répartir la lecture et l'écriture dans des threads différents.</summary>
    </member>
    <member name="M:System.Xaml.XamlBackgroundReader.#ctor(System.Xaml.XamlReader)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlBackgroundReader&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlBackgroundReader" />.</summary>
      <param name="wrappedReader" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; that this &lt;see cref=&quot;T:System.Xaml.XamlBackgroundReader&quot; /&gt; is based on.">
        <see cref="T:System.Xaml.XamlReader" /> sur lequel est basé ce <see cref="T:System.Xaml.XamlBackgroundReader" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;wrappedReader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="wrappedReader" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlBackgroundReader.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Xaml.XamlBackgroundReader&quot; /&gt; and optionally releases the managed resources.">Libère les ressources non managées utilisées par <see cref="T:System.Xaml.XamlBackgroundReader" /> et libère éventuellement les ressources managées.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release managed resources; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour libérer des ressources managées ; sinon, <see langword="false" />.</param>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.HasLineInfo">
      <summary vsli:raw="Gets a value that specifies whether line information is available.">Obtient une valeur qui spécifie si des informations de ligne sont disponibles.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if line information is available; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si des informations de ligne sont disponibles ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.IsEof">
      <summary vsli:raw="Gets a value that reports whether the reader position is at end-of-file.">Obtient une valeur qui signale si la position du lecteur est à la fin du fichier.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the position is at end-of-file; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la position est à la fin du fichier ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.LineNumber">
      <summary vsli:raw="Gets the line number to report.">Obtient le numéro de ligne à signaler.</summary>
      <returns vsli:raw="The line number to report.">Numéro de ligne à signaler.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.LinePosition">
      <summary vsli:raw="Gets the line position to report.">Obtient la position de ligne à signaler.</summary>
      <returns vsli:raw="The line position to report.">Position de ligne à signaler.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.Member">
      <summary vsli:raw="Gets the current member at the reader position, if the reader position is on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.StartMember&quot; /&gt;.">Obtient le membre actuel à la position du lecteur, si la position du lecteur est sur un <see cref="F:System.Xaml.XamlNodeType.StartMember" />.</summary>
      <returns vsli:raw="The current member; or &lt;see langword=&quot;null&quot; /&gt;, if the position is not on a member.">Membre actuel ou <see langword="null" /> si la position n'est pas sur un membre.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.Namespace">
      <summary vsli:raw="Gets the XAML namespace from the current node.">Obtient l'espace de noms XAML du nœud actuel.</summary>
      <returns vsli:raw="The XAML namespace, if it is available; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Espace de noms XAML, s'il est disponible ; sinon, <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.NodeType">
      <summary vsli:raw="Gets the type of the current node.">Obtient le type du nœud actuel.</summary>
      <returns vsli:raw="A value of the &lt;see cref=&quot;T:System.Xaml.XamlNodeType&quot; /&gt; enumeration.">Valeur de l'énumération <see cref="T:System.Xaml.XamlNodeType" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlBackgroundReader.Read">
      <summary vsli:raw="Provides the next XAML node from the source, if a node is available.">Fournit le nœud XAML suivant à partir de la source, si un nœud est disponible.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a node is available; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si un nœud est disponible ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.SchemaContext">
      <summary vsli:raw="Gets an object that provides schema context information for the information set.">Obtient un objet qui fournit les informations de contexte de schéma pour le jeu d'informations.</summary>
      <returns vsli:raw="An object that provides schema context information for the information set.">Objet qui fournit les informations de contexte de schéma pour le jeu d'informations.</returns>
    </member>
    <member name="M:System.Xaml.XamlBackgroundReader.StartThread">
      <summary vsli:raw="Creates and starts a new &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; (constructed from &lt;see cref=&quot;T:System.Threading.ParameterizedThreadStart&quot; /&gt;) that handles a named thread for the &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt;.">Crée et démarre un nouveau <see cref="T:System.Threading.Thread" /> (construit à partir de <see cref="T:System.Threading.ParameterizedThreadStart" />) qui gère un thread nommé pour le <see cref="T:System.Xaml.XamlReader" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The thread is already started.">Le thread a déjà démarré.</exception>
    </member>
    <member name="M:System.Xaml.XamlBackgroundReader.StartThread(System.String)">
      <summary vsli:raw="Creates and starts a new &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; (constructed from &lt;see cref=&quot;T:System.Threading.ParameterizedThreadStart&quot; /&gt;) that handles a named thread for the &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt;. You specify the thread name as a parameter.">Crée et démarre un nouveau <see cref="T:System.Threading.Thread" /> (construit à partir de <see cref="T:System.Threading.ParameterizedThreadStart" />) qui gère un thread nommé pour le <see cref="T:System.Xaml.XamlReader" />. Vous spécifiez le nom de thread comme un paramètre.</summary>
      <param name="threadName" vsli:raw="The name for the thread.">Nom du thread.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The thread is already started.">Le thread a déjà démarré.</exception>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.Type">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the current node.">Obtient le <see cref="T:System.Xaml.XamlType" /> du nœud actuel.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the current node; or &lt;see langword=&quot;null&quot; /&gt;, if the current reader position is not on an object.">
        <see cref="T:System.Xaml.XamlType" /> du nœud actuel ; ou <see langword="null" /> si la position actuelle du lecteur n'est pas sur un objet.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.Value">
      <summary vsli:raw="Gets the value of the current node.">Obtient la valeur du nœud actuel.</summary>
      <returns vsli:raw="The value of the current node; or &lt;see langword=&quot;null&quot; /&gt;, if the current reader position is not on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.Value&quot; /&gt; node type.">Valeur du nœud actuel ; ou <see langword="null" /> si la position actuelle du lecteur n'est pas sur un type de nœud <see cref="F:System.Xaml.XamlNodeType.Value" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlDeferringLoader">
      <summary vsli:raw="Represents a XAML reader behavior that loads and returns deferred content.">Représente un comportement de lecteur XAML qui charge et retourne le contenu différé.</summary>
    </member>
    <member name="M:System.Xaml.XamlDeferringLoader.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDeferringLoader&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlDeferringLoader" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlDeferringLoader.Load(System.Xaml.XamlReader,System.IServiceProvider)">
      <summary vsli:raw="Loads XAML content in a deferred mode, which is based on a &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; and certain required services from a service provider.">Charge le contenu XAML en mode différé, en fonction d'un <see cref="T:System.Xaml.XamlReader" /> et de certains services obligatoires d'un fournisseur de services.</summary>
      <param name="xamlReader" vsli:raw="The initiating reader that is returned on calls to &lt;see cref=&quot;M:System.Xaml.XamlDeferringLoader.Save(System.Object,System.IServiceProvider)&quot; /&gt;.">Lecteur d'amorçage qui est retourné dans les appels à <see cref="M:System.Xaml.XamlDeferringLoader.Save(System.Object,System.IServiceProvider)" />.</param>
      <param name="serviceProvider" vsli:raw="The service provider for the required services.">Fournisseur de services pour les services requis.</param>
      <returns vsli:raw="The root object that is produced by the input &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt;.">Objet racine produit par le <see cref="T:System.Xaml.XamlReader" /> d'entrée.</returns>
    </member>
    <member name="M:System.Xaml.XamlDeferringLoader.Save(System.Object,System.IServiceProvider)">
      <summary vsli:raw="Commits a value for deferred loading.">Valide une valeur pour le chargement différé.</summary>
      <param name="value" vsli:raw="The input value to commit for deferred loading.">Valeur d'entrée à valider pour le chargement différé.</param>
      <param name="serviceProvider" vsli:raw="The service provider for the required services.">Fournisseur de services pour les services requis.</param>
      <returns vsli:raw="A XAML reader that can be used to obtain the deferred value as XAML node information.">Lecteur XAML qui peut être utilisé pour obtenir la valeur différée sous la forme d'informations de nœud XAML.</returns>
    </member>
    <member name="T:System.Xaml.XamlDirective">
      <summary vsli:raw="Provides the XAML type system identifier for a member if the member is also a XAML directive. XAML readers and XAML writers use the &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; identifier during processing of member nodes. The identifier is used when the XAML reader is positioned on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.StartMember&quot; /&gt; and &lt;see cref=&quot;P:System.Xaml.XamlMember.IsDirective&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;.">Fournit l'identificateur de système de type XAML pour un membre si le membre est également une directive XAML. Les lecteurs XAML et les writers XAML utilisent l'identificateur <see cref="T:System.Xaml.XamlDirective" /> pendant le traitement des nœuds membres. L'identificateur est utilisé lorsque le lecteur XAML est positionné sur un <see cref="F:System.Xaml.XamlNodeType.StartMember" /> et que <see cref="P:System.Xaml.XamlMember.IsDirective" /> a la valeur <see langword="true" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlDirective.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.Xaml.XamlType,System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter},System.Xaml.Schema.AllowedMemberLocations)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; class, specifying values for each per-case value of a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlDirective" />, en spécifiant des valeurs pour chacune des valeurs en fonction du cas d'un <see cref="T:System.Xaml.XamlDirective" />.</summary>
      <param name="xamlNamespaces" vsli:raw="A set of XAML namespaces where this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; can exist, passed as an enumerable set of the identifier strings.">Jeu d'espaces de noms XAML où ce <see cref="T:System.Xaml.XamlDirective" /> peut exister, passé en tant que jeu énumérable des chaînes d'identification.</param>
      <param name="name" vsli:raw="The identifying name of the &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">Nom identifiant du <see cref="T:System.Xaml.XamlDirective" />.</param>
      <param name="xamlType" vsli:raw="The XAML type that backs the &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">Type XAML qui stocke le <see cref="T:System.Xaml.XamlDirective" />.</param>
      <param name="typeConverter" vsli:raw="The type converter that this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; uses for text syntax conversion.">Convertisseur de type utilisé par ce <see cref="T:System.Xaml.XamlDirective" /> pour la conversion de la syntaxe du texte.</param>
      <param name="allowedLocation" vsli:raw="A value of the &lt;see cref=&quot;T:System.Xaml.Schema.AllowedMemberLocations&quot; /&gt; enumeration.">Valeur de l'énumération <see cref="T:System.Xaml.Schema.AllowedMemberLocations" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;xamlType&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="xamlType" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlDirective.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; class, specifying values for a name and a single XAML namespace. Use this signature only when you want or expect &lt;see cref=&quot;P:System.Xaml.XamlMember.IsUnknown&quot; /&gt; to report &lt;see langword=&quot;true&quot; /&gt; for the directive.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlDirective" />, en spécifiant des valeurs pour un nom et un espace de noms XAML unique. Utilisez cette signature uniquement lorsque vous souhaitez ou attendez que <see cref="P:System.Xaml.XamlMember.IsUnknown" /> indique <see langword="true" /> pour la directive.</summary>
      <param name="xamlNamespace" vsli:raw="The primary XAML namespace where this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; can exist.">Espace de noms XAML principal dans lequel ce <see cref="T:System.Xaml.XamlDirective" /> peut exister.</param>
      <param name="name" vsli:raw="The identifying name of the &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">Nom identifiant du <see cref="T:System.Xaml.XamlDirective" />.</param>
    </member>
    <member name="P:System.Xaml.XamlDirective.AllowedLocation">
      <summary vsli:raw="Gets a value that specifies the XAML node types where the directive can be specified.">Obtient une valeur qui spécifie les types de nœud XAML pour lesquels la directive peut être spécifiée.</summary>
      <returns vsli:raw="A value of the enumeration. The default is the enumeration default, which is &lt;see cref=&quot;F:System.Xaml.Schema.AllowedMemberLocations.None&quot; /&gt;.">Valeur de l’énumération. La valeur par défaut est l'énumération par défaut, laquelle est <see cref="F:System.Xaml.Schema.AllowedMemberLocations.None" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.GetHashCode">
      <summary vsli:raw="Returns the hash code for this object.">Retourne le code de hachage de cet objet.</summary>
      <returns vsli:raw="An integer hash code.">Code de hachage entier.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.GetXamlNamespaces">
      <summary vsli:raw="Returns a list of XAML namespaces where this XAML member can exist.">Retourne une liste d'espaces de noms XAML dans lesquels ce membre XAML peut exister.</summary>
      <returns vsli:raw="A list of XAML namespace identifiers, as strings.">Liste d'identificateurs d'espace de noms XAML, sous forme de chaînes.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupCustomAttributeProvider">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; implementation. This implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">Retourne une implémentation de <see cref="T:System.Reflection.ICustomAttributeProvider" />. Cette implémentation retourne toujours <see langword="null" />.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;null&quot; /&gt;.">Retourne toujours <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupDeferringLoader">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; object, which is used during deferred loading of XAML-declared objects. This implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">Retourne un objet <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, lequel est utilisé pendant le chargement différé des objets XAML déclarés. Cette implémentation retourne toujours <see langword="null" />.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;null&quot; /&gt;.">Retourne toujours <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupDependsOn">
      <summary vsli:raw="Returns a list of &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; objects. The list reports the members where dependency relationships for initialization order exist relative to this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;. This implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">Retourne une liste d'objets <see cref="T:System.Xaml.XamlMember" />. Cette liste répertorie les membres pour lesquels il existe des relations de dépendance pour l'ordre d'initialisation concernant ce <see cref="T:System.Xaml.XamlMember" />. Cette implémentation retourne toujours <see langword="null" />.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;null&quot; /&gt;.">Retourne toujours <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupInvoker">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; that is associated with a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">Retourne le <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> associé à un <see cref="T:System.Xaml.XamlDirective" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; information for this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Informations <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> pour ce <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsAmbient">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is reported as an ambient property.">Retourne une valeur indiquant si ce <see cref="T:System.Xaml.XamlMember" /> est signalé comme étant une propriété ambiante.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;false&quot; /&gt;.">Retourne toujours <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsEvent">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; represents an event.">Retourne une valeur indiquant si ce <see cref="T:System.Xaml.XamlDirective" /> représente un événement.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;false&quot; /&gt;.">Retourne toujours <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsReadOnly">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; represents an intended read-only property.">Retourne une valeur indiquant si ce <see cref="T:System.Xaml.XamlDirective" /> représente une propriété en lecture seule escomptée.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;false&quot; /&gt;.">Retourne toujours <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsReadPublic">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; represents a property that has a public &lt;see langword=&quot;get&quot; /&gt; accessor.">Retourne une valeur indiquant si ce <see cref="T:System.Xaml.XamlDirective" /> représente une propriété qui a un accesseur <see langword="get" /> public.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">Retourne toujours <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsUnknown">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; represents a member that is not resolvable by the backing system that is used for type and member resolution.">Retourne une valeur indiquant si ce <see cref="T:System.Xaml.XamlDirective" /> représente un membre qui ne peut pas être résolu par le système de stockage utilisé pour la résolution du type et du membre.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; represents a non-resolvable member; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlDirective" /> représente un membre qui ne peut pas être résolu ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsWriteOnly">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; represents an intended write-only property.">Retourne une valeur indiquant si ce <see cref="T:System.Xaml.XamlDirective" /> représente une propriété en écriture seule escomptée.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;false&quot; /&gt;.">Retourne toujours <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsWritePublic">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; represents a property that has a public &lt;see langword=&quot;set&quot; /&gt; accessor.">Retourne une valeur indiquant si ce <see cref="T:System.Xaml.XamlDirective" /> représente une propriété qui a un accesseur <see langword="set" /> public.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">Retourne toujours <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupTargetType">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type where the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; can exist. This implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">Retourne le <see cref="T:System.Xaml.XamlType" /> du type dans lequel le <see cref="T:System.Xaml.XamlMember" /> peut exister. Cette implémentation retourne toujours <see langword="null" />.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;null&quot; /&gt;.">Retourne toujours <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupType">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type that is used by the member.">Retourne le <see cref="T:System.Xaml.XamlType" /> du type qui est utilisé par le membre.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type that is used by the member.">
        <see cref="T:System.Xaml.XamlType" /> du type qui est utilisé par le membre.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupTypeConverter">
      <summary vsli:raw="Returns a type converter implementation that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">Retourne une implémentation de convertisseur de type qui est associée à ce <see cref="T:System.Xaml.XamlDirective" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; instance that has &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; constraint; or &lt;see langword=&quot;null&quot; /&gt;.">Instance de <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> qui comporte une contrainte <see cref="T:System.ComponentModel.TypeConverter" /> ; ou <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupUnderlyingGetter">
      <summary vsli:raw="Returns a &lt;see langword=&quot;get&quot; /&gt; accessor that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;. This implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">Retourne un accesseur <see langword="get" /> associé à ce <see cref="T:System.Xaml.XamlDirective" />. Cette implémentation retourne toujours <see langword="null" />.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;null&quot; /&gt;.">Retourne toujours <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupUnderlyingMember">
      <summary vsli:raw="Returns a CLR reflection &lt;see cref=&quot;T:System.Reflection.MemberInfo&quot; /&gt; that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;. This implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">Retourne une réflexion <see cref="T:System.Reflection.MemberInfo" /> CLR associée à ce <see cref="T:System.Xaml.XamlDirective" />. Cette implémentation retourne toujours <see langword="null" />.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;null&quot; /&gt;.">Retourne toujours <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupUnderlyingSetter">
      <summary vsli:raw="Returns a &lt;see langword=&quot;set&quot; /&gt; accessor that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;. This implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">Retourne un accesseur <see langword="set" /> associé à ce <see cref="T:System.Xaml.XamlDirective" />. Cette implémentation retourne toujours <see langword="null" />.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;null&quot; /&gt;.">Retourne toujours <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.ToString">
      <summary vsli:raw="Returns a string representation of this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">Retourne une représentation sous forme de chaîne de <see cref="T:System.Xaml.XamlDirective" />.</summary>
      <returns vsli:raw="A string representation of this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">Représentation sous forme de chaîne de <see cref="T:System.Xaml.XamlDirective" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlDuplicateMemberException">
      <summary vsli:raw="The exception that is thrown when a XAML writer attempts to write a value for a duplicate member into the same object node.">Exception levée lorsqu'un writer XAML essaie d'écrire une valeur pour un membre en double dans le même nœud d'objet.</summary>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDuplicateMemberException&quot; /&gt; class with a system-supplied message that describes the error.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlDuplicateMemberException" /> avec un message système qui décrit l'erreur.</summary>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDuplicateMemberException&quot; /&gt; class with serialized data.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlDuplicateMemberException" /> avec des données sérialisées.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Objet qui contient les données sérialisées de l'objet.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Informations contextuelles sur la source ou la destination.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDuplicateMemberException&quot; /&gt; class with a specified message that describes the error.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlDuplicateMemberException" /> avec un message spécifié décrivant l'erreur.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Message décrivant l'exception. L'appelant de ce constructeur doit vérifier que cette chaîne a été localisée pour la culture en cours du système.</param>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDuplicateMemberException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlDuplicateMemberException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Message décrivant l'exception. L'appelant de ce constructeur doit vérifier que cette chaîne a été localisée pour la culture en cours du système.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Exception ayant provoqué l'exception actuelle. Si le paramètre <paramref name="innerException" /> n'est pas <see langword="null" />, l'exception actuelle est levée dans un bloc <see langword="catch" /> qui gère l'exception interne.</param>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.#ctor(System.Xaml.XamlMember,System.Xaml.XamlType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDuplicateMemberException&quot; /&gt; class with the relevant member and type information to report.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlDuplicateMemberException" /> avec le membre pertinent et les informations de type à signaler.</summary>
      <param name="member" vsli:raw="The XAML member identifier to report.">Identificateur de membre XAML à signaler.</param>
      <param name="type" vsli:raw="The XAML type identifier to report as the parent type.">Identificateur de type XAML à signaler en tant que type parent.</param>
    </member>
    <member name="P:System.Xaml.XamlDuplicateMemberException.DuplicateMember">
      <summary vsli:raw="Gets or sets the XAML member identifier for the property to report as a duplicate.">Obtient ou définit l'identificateur de membre XAML pour la propriété à signaler en tant que doublon.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; object (XAML member identifier) to report.">Objet <see cref="T:System.Xaml.XamlMember" /> (identificateur de membre XAML) à signaler.</returns>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDuplicateMemberException&quot; /&gt; class with serialized data.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlDuplicateMemberException" /> avec des données sérialisées.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Objet qui contient les données sérialisées de l'objet.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Informations contextuelles sur la source ou la destination.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlDuplicateMemberException.ParentType">
      <summary vsli:raw="Gets or sets the XAML type identifier to report as the parent type.">Obtient ou définit l'identificateur de type XAML à signaler en tant que type parent.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object (XAML type identifier) to report as the parent type.">Objet <see cref="T:System.Xaml.XamlType" /> (identificateur de type XAML) à signaler comme type parent.</returns>
    </member>
    <member name="T:System.Xaml.XamlException">
      <summary vsli:raw="The exception that is thrown for a general XAML reader or XAML writer exception.">Exception levée pour une exception générale affectant le lecteur XAML ou le writer XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlException&quot; /&gt; class. The instance contains a system-supplied message that describes the error.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlException" />. L'instance contient un message système qui décrit l'erreur.</summary>
    </member>
    <member name="M:System.Xaml.XamlException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlException&quot; /&gt; class with serialized data.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlException" /> avec des données sérialisées.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Objet qui contient les données sérialisées de l'objet.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Informations contextuelles sur la source ou la destination.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlException&quot; /&gt; class. The instance contains a specified message that describes the error.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlException" />. L'instance contient un message spécifié qui décrit l'erreur.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor must make sure that this string has been localized for the current system culture.">Message décrivant l'exception. L'appelant de ce constructeur doit vérifier que cette chaîne a été localisée pour la culture système en cours.</param>
    </member>
    <member name="M:System.Xaml.XamlException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlException&quot; /&gt; class. The instance contains a specified error message and a reference to the inner exception that is the cause of this exception.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlException" />. L'instance contient un message d'erreur spécifié et une référence à l'exception interne qui est à l'origine de cette exception.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor must make sure that this string has been localized for the current system culture.">Message décrivant l'exception. L'appelant de ce constructeur doit vérifier que cette chaîne a été localisée pour la culture système en cours.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Exception ayant provoqué l'exception actuelle. Si le paramètre <paramref name="innerException" /> n'est pas <see langword="null" />, l'exception actuelle est levée dans un bloc <see langword="catch" /> qui gère l'exception interne.</param>
    </member>
    <member name="M:System.Xaml.XamlException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlException&quot; /&gt; class. The instance contains a specified error message, inner exception, and line information.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlException" />. L'instance contient un message d'erreur spécifié, une exception interne et des informations de ligne.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor must make sure that this string has been localized for the current system culture.">Message décrivant l'exception. L'appelant de ce constructeur doit vérifier que cette chaîne a été localisée pour la culture système en cours.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception.">Exception ayant provoqué l'exception actuelle.</param>
      <param name="lineNumber" vsli:raw="The line number to report to debugging or to line information consumers.">Numéro de ligne à signaler aux consommateurs de débogage ou d'informations de ligne.</param>
      <param name="linePosition" vsli:raw="The line position to report to debugging or line information consumers.">Position de ligne à signaler aux consommateurs de débogage ou d'informations de ligne.</param>
    </member>
    <member name="M:System.Xaml.XamlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Implements &lt;see cref=&quot;M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)&quot; /&gt; and provides serialization support for the line information data.">Implémente <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> et assure la prise en charge de la sérialisation pour les données d'informations de ligne.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Objet qui contient les données sérialisées de l'objet.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Informations contextuelles sur la source ou la destination.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlException.LineNumber">
      <summary vsli:raw="Gets or sets the line number component of XAML text line information that the exception reports.">Obtient ou définit le composant de numéro de ligne des informations de ligne de texte XAML que l'exception signale.</summary>
      <returns vsli:raw="The line number component of the XAML text line information.">Composant de numéro de ligne des informations de ligne de texte XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlException.LinePosition">
      <summary vsli:raw="Gets or sets the line position component of XAML text line information that the exception reports.">Obtient ou définit le composant de position de ligne des informations de ligne de texte XAML que l'exception signale.</summary>
      <returns vsli:raw="The line position component of XAML text line information.">Composant de position de ligne des informations de ligne de texte XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlException.Message">
      <summary vsli:raw="Gets or sets the exception message, and if line information is available, appends the line information to the message.">Obtient ou définit le message d'exception, et si des informations de ligne sont disponibles, ajoute ces dernières au message.</summary>
      <returns vsli:raw="The exception message that includes the appended line information.">Message d'exception qui inclut les informations de ligne ajoutées.</returns>
    </member>
    <member name="T:System.Xaml.XamlInternalException">
      <summary vsli:raw="The exception that is thrown for internal inconsistencies that occur during XAML reading and XAML writing.">Exception levée en cas d'incohérences internes qui se produisent pendant la lecture et l'écriture de code XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlInternalException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlInternalException&quot; /&gt; class with a system-supplied message that describes the error.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlInternalException" /> avec un message système qui décrit l'erreur.</summary>
    </member>
    <member name="M:System.Xaml.XamlInternalException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlInternalException&quot; /&gt; class with serialized data.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlInternalException" /> avec des données sérialisées.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Objet qui contient les données sérialisées de l'objet.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Informations contextuelles sur la source ou la destination.</param>
    </member>
    <member name="M:System.Xaml.XamlInternalException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlInternalException&quot; /&gt; class with a specified message that describes the error.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlInternalException" /> avec un message spécifié décrivant l'erreur.</summary>
      <param name="message" vsli:raw="The message that describes the exception.">Message décrivant l'exception.</param>
    </member>
    <member name="M:System.Xaml.XamlInternalException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlInternalException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlInternalException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message" vsli:raw="The message that describes the exception.">Message décrivant l'exception.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Exception ayant provoqué l'exception actuelle. Si le paramètre <paramref name="innerException" /> n'est pas <see langword="null" />, l'exception actuelle est levée dans un bloc <see langword="catch" /> qui gère l'exception interne.</param>
    </member>
    <member name="T:System.Xaml.XamlLanguage">
      <summary vsli:raw="Defines constants that provide strings or objects that are useful for XAML markup or for programming with XAML types. These strings or objects are relevant to XAML language concepts, to the implementation of XAML language concepts in .NET XAML Services, or to both.">Définit des constantes qui fournissent des chaînes ou des objets utiles pour le balisage XAML ou pour la programmation à l'aide de types XAML. Ces chaînes ou objets sont pertinents pour les concepts du langage XAML, pour l'implémentation de concepts du langage XAML dans les services XAML .NET Framework, ou pour les deux.</summary>
    </member>
    <member name="P:System.Xaml.XamlLanguage.AllDirectives">
      <summary vsli:raw="Gets a read-only generic collection of each &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; identifier that is defined by .NET XAML Services.">Obtient une collection générique en lecture seule de chaque identificateur <see cref="T:System.Xaml.XamlDirective" /> défini par les services XAML .NET Framework.</summary>
      <returns vsli:raw="A read-only generic collection of each &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; identifier that is defined by .NET XAML Services.">Collection générique en lecture seule de chaque identificateur <see cref="T:System.Xaml.XamlDirective" /> défini par les services XAML .NET Framework.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.AllTypes">
      <summary vsli:raw="Gets a read-only generic collection of individual &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; values that match, or alias, a XAML language intrinsic that is defined by .NET XAML Services.">Obtient une collection générique en lecture seule de valeurs <see cref="T:System.Xaml.XamlType" /> individuelles qui correspondent à un intrinsèque en langage XAML, ou sont des alias, et qui sont définies par les services XAML .NET Framework.</summary>
      <returns vsli:raw="A read-only generic collection of each &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that matches a XAML language intrinsic.">Collection générique en lecture seule de chaque <see cref="T:System.Xaml.XamlType" /> qui correspond à un intrinsèque en langage XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Arguments">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Arguments&quot; /&gt; of a factory method or a generic usage.">Obtient un <see cref="T:System.Xaml.XamlDirective" /> pour les <see langword="Arguments" /> d'une méthode de fabrique ou une utilisation générique.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Arguments&quot; /&gt; of a factory method or generic usage.">
        <see cref="T:System.Xaml.XamlDirective" /> pour les <see langword="Arguments" /> d'une méthode de fabrique ou une utilisation générique.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Array">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Array&quot; /&gt; XAML language intrinsic.">Obtient un <see cref="T:System.Xaml.XamlType" /> pour l'intrinsèque <see langword="Array" /> en langage XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Array&quot; /&gt; XAML language intrinsic.">
        <see cref="T:System.Xaml.XamlType" /> pour l'intrinsèque <see langword="Array" /> en langage XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.AsyncRecords">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;AsyncRecords&quot; /&gt; pseudomember.">Obtient un <see cref="T:System.Xaml.XamlDirective" /> pour le pseudo-membre <see langword="AsyncRecords" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;AsyncRecords&quot; /&gt; pseudomember.">
        <see cref="T:System.Xaml.XamlDirective" /> pour le pseudo-membre <see langword="AsyncRecords" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Base">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;base&quot; /&gt; directive from XML.">Obtient un <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="base" /> de XML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;base&quot; /&gt; directive from XML.">
        <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="base" /> de XML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Boolean">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Boolean&quot; /&gt; XAML language intrinsic.">Obtient un <see cref="T:System.Xaml.XamlType" /> pour l'intrinsèque <see langword="Boolean" /> en langage XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Boolean&quot; /&gt; XAML language intrinsic.">
        <see cref="T:System.Xaml.XamlType" /> pour l'intrinsèque <see langword="Boolean" /> en langage XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Byte">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Byte&quot; /&gt; XAML language intrinsic.">Obtient un <see cref="T:System.Xaml.XamlType" /> pour l'intrinsèque <see langword="Byte" /> en langage XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Byte&quot; /&gt; XAML language intrinsic.">
        <see cref="T:System.Xaml.XamlType" /> pour l'intrinsèque <see langword="Byte" /> en langage XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Char">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Char&quot; /&gt; XAML language intrinsic.">Obtient un <see cref="T:System.Xaml.XamlType" /> pour l'intrinsèque <see langword="Char" /> en langage XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Char&quot; /&gt; XAML language intrinsic.">
        <see cref="T:System.Xaml.XamlType" /> pour l'intrinsèque <see langword="Char" /> en langage XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Class">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Class&quot; /&gt; directive from XAML.">Obtient un <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="Class" /> à partir de XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Class&quot; /&gt; directive from XAML.">
        <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="Class" /> à partir de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.ClassAttributes">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;ClassAttributes&quot; /&gt; directive from XAML.">Obtient un <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="ClassAttributes" /> à partir de XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;ClassAttributes&quot; /&gt; directive from XAML.">
        <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="ClassAttributes" /> à partir de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.ClassModifier">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;ClassModifier&quot; /&gt; directive from XAML.">Obtient un <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="ClassModifier" /> à partir de XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;ClassModifier&quot; /&gt; directive from XAML.">
        <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="ClassModifier" /> à partir de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Code">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for &lt;see langword=&quot;Code&quot; /&gt; as detailed in [MS-XAML].">Obtient un <see cref="T:System.Xaml.XamlDirective" /> pour <see langword="Code" />, comme détaillé dans [MS-XAML].</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for &lt;see langword=&quot;Code&quot; /&gt; as detailed in [MS-XAML].">
        <see cref="T:System.Xaml.XamlDirective" /> pour <see langword="Code" />, comme détaillé dans [MS-XAML].</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.ConnectionId">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; that identifies a connection point for wiring events to handlers.">Obtient un <see cref="T:System.Xaml.XamlDirective" /> qui identifie un point de connexion pour la connexion des événements aux gestionnaires.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; that identifies a connection point for wiring events to handlers.">
        <see cref="T:System.Xaml.XamlDirective" /> qui identifie un point de connexion pour la connexion des événements aux gestionnaires.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Decimal">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Decimal&quot; /&gt; XAML language intrinsic.">Obtient un <see cref="T:System.Xaml.XamlType" /> pour l'intrinsèque <see langword="Decimal" /> en langage XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Decimal&quot; /&gt; XAML language intrinsic.">
        <see cref="T:System.Xaml.XamlType" /> pour l'intrinsèque <see langword="Decimal" /> en langage XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Double">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Double&quot; /&gt; XAML language intrinsic.">Obtient un <see cref="T:System.Xaml.XamlType" /> pour l'intrinsèque <see langword="Double" /> en langage XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Double&quot; /&gt; XAML language intrinsic.">
        <see cref="T:System.Xaml.XamlType" /> pour l'intrinsèque <see langword="Double" /> en langage XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.FactoryMethod">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; that identifies a factory method for XAML.">Obtient un <see cref="T:System.Xaml.XamlDirective" /> qui identifie une méthode de fabrique pour XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; that identifies a factory method for XAML.">
        <see cref="T:System.Xaml.XamlDirective" /> qui identifie une méthode de fabrique pour XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.FieldModifier">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;FieldModifier&quot; /&gt; directive from XAML.">Obtient un <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="FieldModifier" /> à partir de XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;FieldModifier&quot; /&gt; directive from XAML.">
        <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="FieldModifier" /> à partir de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Initialization">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Initialization&quot; /&gt; directive from XAML.">Obtient un <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="Initialization" /> à partir de XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Initialization&quot; /&gt; directive from XAML.">
        <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="Initialization" /> à partir de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Int16">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see cref=&quot;T:System.Int16&quot; /&gt; XAML language intrinsic.">Obtient un <see cref="T:System.Xaml.XamlType" /> pour l'intrinsèque <see langword="Int16" /> en langage XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see cref=&quot;T:System.Int16&quot; /&gt; XAML language intrinsic.">
        <see cref="T:System.Xaml.XamlType" /> pour l'intrinsèque <see langword="Int16" /> en langage XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Int32">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see cref=&quot;T:System.Int32&quot; /&gt; XAML language intrinsic.">Obtient un <see cref="T:System.Xaml.XamlType" /> pour l'intrinsèque <see langword="Int32" /> en langage XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see cref=&quot;T:System.Int32&quot; /&gt; XAML language intrinsic.">
        <see cref="T:System.Xaml.XamlType" /> pour l'intrinsèque <see langword="Int32" /> en langage XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Int64">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see cref=&quot;T:System.Int64&quot; /&gt; XAML language intrinsic.">Obtient un <see cref="T:System.Xaml.XamlType" /> pour l'intrinsèque <see langword="Int64" /> en langage XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see cref=&quot;T:System.Int64&quot; /&gt; XAML language intrinsic.">
        <see cref="T:System.Xaml.XamlType" /> pour l'intrinsèque <see langword="Int64" /> en langage XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Items">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Items&quot; /&gt; directive from XAML.">Obtient un <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="Items" /> à partir de XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Items&quot; /&gt; directive from XAML.">
        <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="Items" /> à partir de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Key">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Key&quot; /&gt; directive from XAML.">Obtient un <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="Key" /> à partir de XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Key&quot; /&gt; directive from XAML.">
        <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="Key" /> à partir de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Lang">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;lang&quot; /&gt; directive from XML.">Obtient un <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="lang" /> de XML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;lang&quot; /&gt; directive from XML.">
        <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="lang" /> de XML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Member">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the type that is the item type of &lt;see cref=&quot;P:System.Xaml.XamlLanguage.Members&quot; /&gt;.">Obtient un <see cref="T:System.Xaml.XamlType" /> pour le type d'élément de <see cref="P:System.Xaml.XamlLanguage.Members" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the type that is the item type of &lt;see cref=&quot;P:System.Xaml.XamlLanguage.Members&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlType" /> pour le type d'élément de <see cref="P:System.Xaml.XamlLanguage.Members" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Members">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Members&quot; /&gt; concept in XAML.">Obtient un <see cref="T:System.Xaml.XamlDirective" /> pour le concept <see langword="Members" /> en XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Members&quot; /&gt; concept in XAML.">
        <see cref="T:System.Xaml.XamlDirective" /> pour le concept <see langword="Members" /> en XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Name">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Name&quot; /&gt; directive from XAML.">Obtient un <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="Name" /> à partir de XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Name&quot; /&gt; directive from XAML.">
        <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="Name" /> à partir de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Null">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Null&quot; /&gt; or &lt;see langword=&quot;NullExtension&quot; /&gt; XAML language intrinsic.">Obtient un <see cref="T:System.Xaml.XamlType" /> pour l'intrinsèque <see langword="Null" /> ou <see langword="NullExtension" /> en langage XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Null&quot; /&gt;/&lt;see langword=&quot;NullExtension&quot; /&gt; XAML language intrinsic.">
        <see cref="T:System.Xaml.XamlType" /> Pour l' <see langword="Null" /> intrinsèque enlangageXAML./ <see langword="NullExtension" /></returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Object">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Object&quot; /&gt; XAML language concept.">Obtient un <see cref="T:System.Xaml.XamlType" /> pour le concept <see langword="Object" /> en langage XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Object&quot; /&gt; XAML language concept.">
        <see cref="T:System.Xaml.XamlType" /> pour le concept <see langword="Object" /> en langage XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.PositionalParameters">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;PositionalParameters&quot; /&gt; directive from XAML.">Obtient un <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="PositionalParameters" /> à partir de XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;PositionalParameters&quot; /&gt; directive from XAML.">
        <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="PositionalParameters" /> à partir de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Property">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Property&quot; /&gt; concept in XAML.">Obtient un <see cref="T:System.Xaml.XamlType" /> pour le concept <see langword="Property" /> en XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Property&quot; /&gt; concept in XAML.">
        <see cref="T:System.Xaml.XamlType" /> pour le concept <see langword="Property" /> en XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Reference">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that represents a &lt;see langword=&quot;Reference&quot; /&gt; for XAML.">Obtient un <see cref="T:System.Xaml.XamlType" /> représentant une <see langword="Reference" /> pour XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that represents a &lt;see langword=&quot;Reference&quot; /&gt; for XAML.">
        <see cref="T:System.Xaml.XamlType" /> qui représente une <see langword="Reference" /> pour XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Shared">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Shared&quot; /&gt; directive for XAML.">Obtient un <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="Shared" /> pour XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Shared&quot; /&gt; directive for XAML.">
        <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="Shared" /> pour XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Single">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;c&gt;Single&lt;/c&gt; XAML language intrinsic.">Obtient un <see cref="T:System.Xaml.XamlType" /> pour l'intrinsèque <see langword="Single" /> en langage XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;c&gt;Single&lt;/c&gt; XAML language intrinsic.">
        <see cref="T:System.Xaml.XamlType" /> pour l'intrinsèque <see langword="Single" /> en langage XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Space">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;space&quot; /&gt; directive from XML.">Obtient un <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="space" /> de XML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;space&quot; /&gt; directive from XML.">
        <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="space" /> de XML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Static">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Static&quot; /&gt;/&lt;see langword=&quot;StaticExtension&quot; /&gt; XAML language intrinsic.">Obtient un <see cref="T:System.Xaml.XamlType" /> pour l’intrinsèque <see langword="Static" />/<see langword="StaticExtension" /> en langage XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Static&quot; /&gt;/&lt;see langword=&quot;StaticExtension&quot; /&gt; XAML language intrinsic.">
        <see cref="T:System.Xaml.XamlType" /> Pour l' <see langword="Static" /> intrinsèque enlangageXAML./ <see langword="StaticExtension" /></returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.String">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;String&quot; /&gt; XAML language intrinsic.">Obtient un <see cref="T:System.Xaml.XamlType" /> pour l'intrinsèque <see langword="String" /> en langage XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;String&quot; /&gt; XAML language intrinsic.">
        <see cref="T:System.Xaml.XamlType" /> pour l'intrinsèque <see langword="String" /> en langage XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Subclass">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Subclass&quot; /&gt; directive from XAML.">Obtient un <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="Subclass" /> à partir de XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Subclass&quot; /&gt; directive from XAML.">
        <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="Subclass" /> à partir de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.SynchronousMode">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; that enables loading XAML asynchronously if the XAML processor supports such a mode.">Obtient un <see cref="T:System.Xaml.XamlDirective" /> qui autorise le chargement XAML asynchrone si le processeur XAML prend en charge un tel mode.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; that enables loading XAML asynchronously.">
        <see cref="T:System.Xaml.XamlDirective" /> qui autorise le chargement XAML asynchrone.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.TimeSpan">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;TimeSpan&quot; /&gt; concept in XAML language.">Obtient un <see cref="T:System.Xaml.XamlType" /> pour le concept <see langword="TimeSpan" /> en langage XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;TimeSpan&quot; /&gt; XAML language concept.">
        <see cref="T:System.Xaml.XamlType" /> pour le concept <see langword="TimeSpan" /> en langage XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Type">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Type&quot; /&gt;/&lt;see langword=&quot;TypeExtension&quot; /&gt; XAML language intrinsic.">Obtient un <see cref="T:System.Xaml.XamlType" /> pour l’intrinsèque <see langword="Type" />/<see langword="TypeExtension" /> en langage XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Type&quot; /&gt;/&lt;see langword=&quot;TypeExtension&quot; /&gt; XAML language intrinsic.">
        <see cref="T:System.Xaml.XamlType" /> Pour l' <see langword="Type" /> intrinsèque enlangageXAML./ <see langword="TypeExtension" /></returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.TypeArguments">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;TypeArguments&quot; /&gt; directive from XAML.">Obtient un <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="TypeArguments" /> à partir de XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;TypeArguments&quot; /&gt; directive from XAML.">
        <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="TypeArguments" /> à partir de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Uid">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Uid&quot; /&gt; directive from XAML.">Obtient un <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="Uid" /> à partir de XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Uid&quot; /&gt; directive from XAML.">
        <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="Uid" /> à partir de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.UnknownContent">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;UnknownContent&quot; /&gt; directive from XAML.">Obtient un <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="UnknownContent" /> à partir de XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;UnknownContent&quot; /&gt; directive from XAML.">
        <see cref="T:System.Xaml.XamlDirective" /> pour la directive <see langword="UnknownContent" /> à partir de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Uri">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Uri&quot; /&gt; XAML language concept.">Obtient un <see cref="T:System.Xaml.XamlType" /> pour le concept <see langword="Uri" /> en langage XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Uri&quot; /&gt; XAML language concept.">
        <see cref="T:System.Xaml.XamlType" /> pour le concept <see langword="Uri" /> en langage XAML.</returns>
    </member>
    <member name="F:System.Xaml.XamlLanguage.Xaml2006Namespace">
      <summary vsli:raw="Gets a string value for the string that identifies the XAML (2006) language namespace. That namespace corresponds to the XAML (2006) &quot;x&quot; prefixed namespace as defined in [MS-XAML] Section 5.1.1.">Obtient une valeur de chaîne pour la chaîne qui identifie l'espace de noms de langage XAML (2006). Cet espace de noms correspond à l’espace de noms XAML (2006) préfixé « x », conformément à la définition donnée dans [MS-XAML] Section 5.1.1.</summary>
    </member>
    <member name="P:System.Xaml.XamlLanguage.XamlNamespaces">
      <summary vsli:raw="Gets a collection of the namespace identifiers for XAML.">Obtient une collection des identificateurs d'espace de noms pour XAML.</summary>
      <returns vsli:raw="A collection of the namespace identifiers for XAML.">Collection des identificateurs d'espace de noms pour XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.XData">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the XAML type that backs an &lt;see langword=&quot;XData&quot; /&gt; block in XAML.">Obtient un <see cref="T:System.Xaml.XamlType" /> pour le type XAML qui stocke un bloc <see langword="XData" /> en XAML.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the XAML type that backs an &lt;see langword=&quot;XData&quot; /&gt; block. See [MS-XAML] Section 5.2.23.">
        <see cref="T:System.Xaml.XamlType" /> pour le type XAML qui stocke un bloc <see langword="XData" />. Consultez [MS-XAML] section 5.2.23.</returns>
    </member>
    <member name="F:System.Xaml.XamlLanguage.Xml1998Namespace">
      <summary vsli:raw="Gets a string value for the string that identifies the XML (1998) language namespace. That namespace corresponds to the XML &quot;xml&quot; prefixed namespace as referenced in [MS-XAML] Section 5.1.2.">Obtient une valeur de chaîne pour la chaîne qui identifie l'espace de noms de langage XML (1998). Cet espace de noms correspond à l’espace de noms XML préfixé « xml », conformément aux références fournies dans [MS-XAML] Section 5.1.2.</summary>
    </member>
    <member name="P:System.Xaml.XamlLanguage.XmlNamespaces">
      <summary vsli:raw="Gets a collection of the namespace identifiers for XML.">Obtient une collection des identificateurs d'espace de noms pour XML.</summary>
      <returns vsli:raw="A collection of the namespace identifiers for XML.">Collection des identificateurs d'espace de noms pour XML.</returns>
    </member>
    <member name="T:System.Xaml.XamlMember">
      <summary vsli:raw="Provides the XAML type system identifier for members of XAML types. The identifier is used by XAML readers and XAML writers during processing of member nodes (when the XAML reader is positioned on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.StartMember&quot; /&gt;) and also for general XAML type system logic.">Fournit l'identificateur du système de type XAML pour les membres de types XAML. L'identificateur est utilisé par les lecteurs et les writers XAML lors du traitement des nœuds membres (lorsque le lecteur XAML est positionné sur un <see cref="F:System.Xaml.XamlNodeType.StartMember" />) de même que pour la logique du système de type XAML général.</summary>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class using CLR type system &lt;see cref=&quot;T:System.Reflection.EventInfo&quot; /&gt; and a &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlMember" /> avec le système de type CLR <see cref="T:System.Reflection.EventInfo" /> et un <see cref="T:System.Xaml.XamlSchemaContext" />.</summary>
      <param name="eventInfo" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.EventInfo&quot; /&gt; that represents the event member.">Système de type CLR <see cref="T:System.Reflection.EventInfo" /> qui représente le membre d'événement.</param>
      <param name="schemaContext" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; context that qualifies the member.">Contexte <see cref="T:System.Xaml.XamlSchemaContext" /> qui qualifie le membre.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class using CLR type system &lt;see cref=&quot;T:System.Reflection.EventInfo&quot; /&gt; and a &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt;, including &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; information.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlMember" /> avec le système de type CLR <see cref="T:System.Reflection.EventInfo" /> et un <see cref="T:System.Xaml.XamlSchemaContext" />, notamment les informations sur <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
      <param name="eventInfo" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.EventInfo&quot; /&gt; that represents the event member.">Système de type CLR <see cref="T:System.Reflection.EventInfo" /> qui représente le membre d'événement.</param>
      <param name="schemaContext" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; context that qualifies the member.">Contexte <see cref="T:System.Xaml.XamlSchemaContext" /> qui qualifie le membre.</param>
      <param name="invoker" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; implementation that handles run-time reflection calls against the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Implémentation de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> qui gère les appels de réflexion au moment de l'exécution en fonction du <see cref="T:System.Xaml.XamlMember" />.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class using CLR type system &lt;see cref=&quot;T:System.Reflection.PropertyInfo&quot; /&gt; and a &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlMember" /> avec le système de type CLR <see cref="T:System.Reflection.PropertyInfo" /> et un <see cref="T:System.Xaml.XamlSchemaContext" />.</summary>
      <param name="propertyInfo" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.PropertyInfo&quot; /&gt; that represents the property member.">Système de type CLR <see cref="T:System.Reflection.PropertyInfo" /> qui représente le membre de propriété.</param>
      <param name="schemaContext" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; context that qualifies the member.">Contexte <see cref="T:System.Xaml.XamlSchemaContext" /> qui qualifie le membre.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class using reflection &lt;see cref=&quot;T:System.Reflection.PropertyInfo&quot; /&gt; and a &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt;, including &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; information.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlMember" /> avec la réflexion <see cref="T:System.Reflection.PropertyInfo" /> et un <see cref="T:System.Xaml.XamlSchemaContext" />, notamment les informations sur <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
      <param name="propertyInfo" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.PropertyInfo&quot; /&gt; that represents the property member.">Système de type CLR <see cref="T:System.Reflection.PropertyInfo" /> qui représente le membre de propriété.</param>
      <param name="schemaContext" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; context that qualifies the member.">Contexte <see cref="T:System.Xaml.XamlSchemaContext" /> qui qualifie le membre.</param>
      <param name="invoker" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; implementation that handles run-time invocation calls against the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Implémentation de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> qui gère les appels de réflexion au moment de l'exécution en fonction du <see cref="T:System.Xaml.XamlMember" />.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class for a &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; that represents an attachable property.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlMember" /> pour un <see cref="T:System.Xaml.XamlMember" /> qui représente une propriété pouvant être jointe.</summary>
      <param name="attachablePropertyName" vsli:raw="The string name of the attachable property.">Nom sous forme de chaîne de la propriété pouvant être attachée.</param>
      <param name="getter" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the &lt;see langword=&quot;get&quot; /&gt; accessor of the attachable member's backing implementation.">
        <see cref="T:System.Reflection.MethodInfo" /> du système de type CLR pour l'accesseur <see langword="get" /> de l'implémentation de stockage du membre pouvant être attaché.</param>
      <param name="setter" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the &lt;see langword=&quot;set&quot; /&gt; accessor of the attachable member's backing implementation.">
        <see cref="T:System.Reflection.MethodInfo" /> du système de type CLR pour l'accesseur <see langword="set" /> de l'implémentation de stockage du membre pouvant être attaché.</param>
      <param name="schemaContext" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; context that qualifies the member.">Contexte <see cref="T:System.Xaml.XamlSchemaContext" /> qui qualifie le membre.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class for a &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; that represents an attachable property, including &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; information.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlMember" /> pour un <see cref="T:System.Xaml.XamlMember" /> qui représente une propriété pouvant être jointe, notamment les informations sur <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
      <param name="attachablePropertyName" vsli:raw="The string name of the attachable property.">Nom sous forme de chaîne de la propriété pouvant être attachée.</param>
      <param name="getter" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the &lt;see langword=&quot;get&quot; /&gt; accessor of the attachable member's backing implementation.">
        <see cref="T:System.Reflection.MethodInfo" /> du système de type CLR pour l'accesseur <see langword="get" /> de l'implémentation de stockage du membre pouvant être attaché.</param>
      <param name="setter" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the &lt;see langword=&quot;set&quot; /&gt; accessor of the attachable member's backing implementation.">
        <see cref="T:System.Reflection.MethodInfo" /> du système de type CLR pour l'accesseur <see langword="set" /> de l'implémentation de stockage du membre pouvant être attaché.</param>
      <param name="schemaContext" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; context that qualifies the member.">Contexte <see cref="T:System.Xaml.XamlSchemaContext" /> qui qualifie le membre.</param>
      <param name="invoker" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; implementation that handles run-time invocation calls against the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Implémentation de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> qui gère les appels de réflexion au moment de l'exécution en fonction du <see cref="T:System.Xaml.XamlMember" />.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class for a &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; that represents an attachable event.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlMember" /> pour un <see cref="T:System.Xaml.XamlMember" /> qui représente un événement pouvant être attaché.</summary>
      <param name="attachableEventName" vsli:raw="The string name of the attachable event.">Nom sous forme de chaîne de l'événement pouvant être attaché.</param>
      <param name="adder" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the handler &lt;see langword=&quot;Add&quot; /&gt; method of the attachable member's backing implementation.">
        <see cref="T:System.Reflection.MethodInfo" /> du système de type CLR pour la méthode <see langword="Add" /> du gestionnaire de l'implémentation de stockage du membre pouvant être attaché.</param>
      <param name="schemaContext" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; context that qualifies the member.">Contexte <see cref="T:System.Xaml.XamlSchemaContext" /> qui qualifie le membre.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class for a &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; that represents an attachable event, including &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; information.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlMember" /> pour un <see cref="T:System.Xaml.XamlMember" /> qui représente un événement pouvant être attaché, notamment des informations sur <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
      <param name="attachableEventName" vsli:raw="The string name of the attachable event.">Nom sous forme de chaîne de l'événement pouvant être attaché.</param>
      <param name="adder" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the handler &lt;see langword=&quot;Add&quot; /&gt; method of the attachable member's backing implementation.">
        <see cref="T:System.Reflection.MethodInfo" /> du système de type CLR pour la méthode <see langword="Add" /> du gestionnaire de l'implémentation de stockage du membre pouvant être attaché.</param>
      <param name="schemaContext" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; context that qualifies the member.">Contexte <see cref="T:System.Xaml.XamlSchemaContext" /> qui qualifie le membre.</param>
      <param name="invoker" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; implementation that handles run-time invocation calls against the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Implémentation de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> qui gère les appels de réflexion au moment de l'exécution en fonction du <see cref="T:System.Xaml.XamlMember" />.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class using a string name and declaring &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; information. A &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; that is constructed with this signature has significant limitations.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlMember" />, en utilisant un nom de chaîne et des informations sur le <see cref="T:System.Xaml.XamlType" /> déclarant. Un <see cref="T:System.Xaml.XamlMember" /> construit avec cette signature présente des limitations importantes.</summary>
      <param name="name" vsli:raw="The string name of the member.">Nom sous forme de chaîne du membre.</param>
      <param name="declaringType" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; information for the declaring type.">Informations <see cref="T:System.Xaml.XamlType" /> pour le type déclarant.</param>
      <param name="isAttachable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the member is attachable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour indiquer que le membre peut être attaché ; sinon, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; or &lt;paramref name=&quot;declaringType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> ou <paramref name="declaringType" /> est <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlMember.DeclaringType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the type that declares the member that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Obtient le <see cref="T:System.Xaml.XamlType" /> du type qui déclare le membre associé à ce <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the type that declares the member that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlType" /> du type qui déclare le membre associé à ce <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.DeferringLoader">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; object, which is used for deferred loading of XAML declared objects.">Obtient un objet <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> utilisé pour le chargement différé des objets XAML déclarés.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.Xaml.XamlDeferringLoader&quot; /&gt; constraint on the generic.">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> avec la contrainte <see cref="T:System.Xaml.XamlDeferringLoader" /> sur le générique.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.DependsOn">
      <summary vsli:raw="Gets a list of &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; objects. These report the members where dependency relationships for initialization order exist relative to this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Obtient une liste d'objets <see cref="T:System.Xaml.XamlMember" />. Cette liste répertorie les membres pour lesquels il existe des relations de dépendance pour l'ordre d'initialisation concernant ce <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="A list of &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; objects.">Liste des objets <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.Equals(System.Object)">
      <summary vsli:raw="Indicates whether the current object is equal to another object.">Indique si l'objet actif est égal à un autre objet.</summary>
      <param name="obj" vsli:raw="The object to compare with this object.">Objet à comparer à cet objet.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current object is equal to the &lt;paramref name=&quot;obj&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet en cours est égal au paramètre <paramref name="obj" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.Equals(System.Xaml.XamlMember)">
      <summary vsli:raw="Indicates whether the current object is equal to another object of the same type.">Indique si l'objet actuel est égal à un autre objet du même type.</summary>
      <param name="other" vsli:raw="An object to compare with this object.">Objet à comparer avec cet objet.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current object is equal to the &lt;paramref name=&quot;other&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet en cours est égal au paramètre <paramref name="other" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.GetHashCode">
      <summary vsli:raw="Returns the hash code for this object.">Retourne le code de hachage de cet objet.</summary>
      <returns vsli:raw="An integer hash code.">Code de hachage entier.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.GetXamlNamespaces">
      <summary vsli:raw="Returns a list of XAML namespaces where this XAML member can exist.">Retourne une liste d'espaces de noms XAML dans lesquels ce membre XAML peut exister.</summary>
      <returns vsli:raw="A list of XAML namespace identifiers as strings.">Liste d'identificateurs d'espace de noms XAML sous forme de chaînes.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.Invoker">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; implementation that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Obtient l'implémentation de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> associée à ce <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; implementation that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Implémentation de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> associée à ce <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsAmbient">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is reported as an ambient property.">Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlMember" /> est signalé comme étant une propriété ambiante.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is reported as an ambient property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlMember" /> est signalé comme étant une propriété ambiante ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsAttachable">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is an attachable member.">Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlMember" /> est un membre pouvant être attaché.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is an attachable member; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlMember" /> est un membre pouvant être attaché ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsDirective">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is a XAML directive.">Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlMember" /> est une directive XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is a XAML directive; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlMember" /> est une directive XAML ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsEvent">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents an event member.">Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlMember" /> représente un membre d'événement.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents an event; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlMember" /> représente un événement ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsNameValid">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is initialized with a valid &lt;see langword=&quot;xamlName&quot; /&gt; string as its &lt;see cref=&quot;P:System.Xaml.XamlMember.Name&quot; /&gt;.">Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlMember" /> est initialisé avec une chaîne <see langword="xamlName" /> valide en tant que <see cref="P:System.Xaml.XamlMember.Name" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is initialized with a valid &lt;see langword=&quot;xamlName&quot; /&gt; string; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlMember" /> est initialisé avec une chaîne <see langword="xamlName" /> valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a read-only member.">Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlMember" /> représente un membre en lecture seule.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a read-only member; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlMember" /> représente un membre en lecture seule ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsReadPublic">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a member with a callable public &lt;see langword=&quot;get&quot; /&gt; accessor.">Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlMember" /> représente un membre avec un accesseur <see langword="get" /> public pouvant être appelé.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a callable public &lt;see langword=&quot;get&quot; /&gt; accessor; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlMember" /> représente un accesseur <see langword="get" /> public pouvant être appelé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsUnknown">
      <summary vsli:raw="Gets a value that indicates whether the member is not resolvable by the backing system that is used for type and member resolution.">Obtient une valeur qui indique si le membre ne peut pas être résolu par le système de stockage utilisé pour la résolution du type et du membre.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the member is not resolvable; &lt;see langword=&quot;false&quot; /&gt; if the member is resolvable.">
        <see langword="true" /> si le membre ne peut pas être résolu ; <see langword="false" /> si le membre peut être résolu.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsWriteOnly">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a write-only member.">Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlMember" /> représente un membre en écriture seule.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a write-only member; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlMember" /> représente un membre en écriture seule ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsWritePublic">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a member that has a callable public &lt;see langword=&quot;set&quot; /&gt; accessor.">Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlMember" /> représente un membre comportant un accesseur <see langword="set" /> public pouvant être appelé.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a callable public &lt;see langword=&quot;set&quot; /&gt; accessor; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlMember" /> représente un accesseur <see langword="set" /> public pouvant être appelé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupCustomAttributeProvider">
      <summary vsli:raw="When implemented in a derived class, returns an &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; implementation.">En cas d'implémentation dans une classe dérivée, retourne une implémentation de <see cref="T:System.Reflection.ICustomAttributeProvider" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; implementation.">Implémentation de <see cref="T:System.Reflection.ICustomAttributeProvider" /></returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupDeferringLoader">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; object, which is used for deferred loading of XAML declared objects.">Retourne un objet <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, lequel est utilisé pour le chargement différé des objets XAML déclarés.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; that has a &lt;see cref=&quot;T:System.Xaml.XamlDeferringLoader&quot; /&gt; constraint on the generic.">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> qui a une contrainte <see cref="T:System.Xaml.XamlDeferringLoader" /> sur le générique.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupDependsOn">
      <summary vsli:raw="Returns a list of &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; objects. Items in the list report the members where dependency relationships for initialization order exist relative to this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Retourne une liste d'objets <see cref="T:System.Xaml.XamlMember" />. Cette liste répertorie les membres pour lesquels il existe des relations de dépendance pour l'ordre d'initialisation concernant ce <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="A list of &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; objects.">Liste des objets <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupInvoker">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Retourne un <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> associé à ce <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; information for this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;; or &lt;see langword=&quot;null&quot; /&gt;.">Informations <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> pour ce <see cref="T:System.Xaml.XamlMember" />, ou <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsAmbient">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is reported as an ambient property.">Retourne une valeur indiquant si ce <see cref="T:System.Xaml.XamlMember" /> est signalé comme étant une propriété ambiante.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to report this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; as an ambient property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour signaler ce <see cref="T:System.Xaml.XamlMember" /> comme une propriété ambiante ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsEvent">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents an event.">Retourne une valeur indiquant si ce <see cref="T:System.Xaml.XamlMember" /> représente un événement.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to report that this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents an event; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour signaler que ce <see cref="T:System.Xaml.XamlMember" /> représente un événement ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsReadOnly">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents an intended read-only property.">Retourne une valeur indiquant si ce <see cref="T:System.Xaml.XamlMember" /> représente une propriété en lecture seule escomptée.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to report this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; as an intended read-only property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlMember" /> représente une propriété prévue en lecture seule ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsReadPublic">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a property that has a public &lt;see langword=&quot;get&quot; /&gt; accessor.">Retourne une valeur indiquant si ce <see cref="T:System.Xaml.XamlMember" /> représente une propriété qui a un accesseur <see langword="get" /> public.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a property that has a public &lt;see langword=&quot;get&quot; /&gt; accessor; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlMember" /> représente une propriété comportant un accesseur <see langword="get" /> public ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsUnknown">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a member that is not resolvable by the backing system that is used for type and member resolution.">Retourne une valeur indiquant si ce <see cref="T:System.Xaml.XamlMember" /> représente un membre qui ne peut pas être résolu par le système de stockage utilisé pour la résolution du type et du membre.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a non-resolvable member; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlMember" /> représente un membre qui ne peut pas être résolu ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsWriteOnly">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a member that has a public &lt;see langword=&quot;set&quot; /&gt; accessor but not a public &lt;see langword=&quot;get&quot; /&gt; accessor.">Retourne une valeur indiquant si ce <see cref="T:System.Xaml.XamlMember" /> représente un membre comportant un accesseur <see langword="set" /> public mais pas d'accesseur <see langword="get" /> public.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a write-only member; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlMember" /> représente un membre en écriture seule ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsWritePublic">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a member that has a public &lt;see langword=&quot;set&quot; /&gt; accessor.">Retourne une valeur indiquant si ce <see cref="T:System.Xaml.XamlMember" /> représente un membre comportant un accesseur <see langword="set" /> public.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a writable member; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlMember" /> représente un membre accessible en écriture ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupMarkupExtensionBracketCharacters">
      <summary vsli:raw="Returns the opening and closing bracket characters for a markup extension.">Retourne le crochet ouvrant et le crochet fermant d’une extension de balisage.</summary>
      <returns vsli:raw="A collection containing the opening and closing bracket characters.">Collection contenant le crochet ouvrant et le crochet fermant.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupTargetType">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type where the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; can exist.">Retourne le <see cref="T:System.Xaml.XamlType" /> du type dans lequel le <see cref="T:System.Xaml.XamlMember" /> peut exister.</summary>
      <returns vsli:raw="The type where the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; can exist.">Type dans lequel le <see cref="T:System.Xaml.XamlMember" /> peut exister.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupType">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type that is used by the member.">Retourne le <see cref="T:System.Xaml.XamlType" /> du type qui est utilisé par le membre.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type that is used by the member.">
        <see cref="T:System.Xaml.XamlType" /> du type qui est utilisé par le membre.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupTypeConverter">
      <summary vsli:raw="Returns a type converter implementation that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Retourne une implémentation de convertisseur de type qui est associée à ce <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; instance with &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; constraint; or &lt;see langword=&quot;null&quot; /&gt;.">Instance de <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> avec une contrainte <see cref="T:System.ComponentModel.TypeConverter" />, ou <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupUnderlyingGetter">
      <summary vsli:raw="Returns a &lt;see langword=&quot;get&quot; /&gt; accessor that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Retourne un accesseur <see langword="get" /> associé à ce <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the associated &lt;see langword=&quot;get&quot; /&gt; accessor; or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Reflection.MethodInfo" /> pour l'accesseur <see langword="get" /> associé , sinon <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupUnderlyingMember">
      <summary vsli:raw="Returns a CLR type system &lt;see cref=&quot;T:System.Reflection.MemberInfo&quot; /&gt; that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Retourne un <see cref="T:System.Reflection.MemberInfo" /> de système de type CLR associé à ce <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="A CLR type system &lt;see cref=&quot;T:System.Reflection.MemberInfo&quot; /&gt; object that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;; or &lt;see langword=&quot;null&quot; /&gt;.">Objet <see cref="T:System.Reflection.MemberInfo" /> de système de type CLR associé à ce <see cref="T:System.Xaml.XamlMember" /> ; sinon <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupUnderlyingSetter">
      <summary vsli:raw="Returns a &lt;see langword=&quot;set&quot; /&gt; accessor that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Retourne un accesseur <see langword="set" /> associé à ce <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the associated &lt;see langword=&quot;set&quot; /&gt; accessor; or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Reflection.MethodInfo" /> pour l'accesseur <see langword="set" /> associé , sinon <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupValueSerializer">
      <summary vsli:raw="Returns a value serializer implementation that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Retourne une implémentation du sérialiseur de valeur associée à ce <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; instance with &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; constraint, or &lt;see langword=&quot;null&quot; /&gt;.">Instance de <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> avec une contrainte <see cref="T:System.Windows.Markup.ValueSerializer" />, ou <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.MarkupExtensionBracketCharacters">
      <summary vsli:raw="Defines the opening and closing bracket characters for a markup extension.">Définit le crochet ouvrant et le crochet fermant d’une extension de balisage.</summary>
      <returns vsli:raw="A collection containing the opening and closing bracket characters.">Collection contenant le crochet ouvrant et le crochet fermant.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.Name">
      <summary vsli:raw="Gets the &lt;see langword=&quot;xamlName&quot; /&gt; name string that declares this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Obtient la chaîne de nom <see langword="xamlName" /> qui déclare ce <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;xamlName&quot; /&gt; name string that declares this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Chaîne de nom <see langword="xamlName" /> qui déclare ce <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; objects have the same value.">Détermine si deux objets <see cref="T:System.Xaml.XamlMember" /> spécifiés ont la même valeur.</summary>
      <param name="xamlMember1" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlMember" /> ou <see langword="null" />.</param>
      <param name="xamlMember2" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlMember" /> ou <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;xamlMember1&quot; /&gt; is the same as the value of &lt;paramref name=&quot;xamlMember2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la valeur de <paramref name="xamlMember1" /> est égale à la valeur de <paramref name="xamlMember2" /> ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; objects have different values.">Détermine si deux objets <see cref="T:System.Xaml.XamlMember" /> spécifiés ont des valeurs différentes.</summary>
      <param name="xamlMember1" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlMember" /> ou <see langword="null" />.</param>
      <param name="xamlMember2" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlMember" /> ou <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;xamlMember1&quot; /&gt; differs from the value of &lt;paramref name=&quot;xamlMember2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la valeur de <paramref name="xamlMember1" /> est différente de la valeur de <paramref name="xamlMember2" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.PreferredXamlNamespace">
      <summary vsli:raw="Gets the single XAML namespace URI that identifies the primary XAML namespace for this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Obtient l'URI d'espace de noms XAML qui identifie l'espace de noms XAML principal de ce <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="The identifier for the primary XAML namespace for this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;, as a string.">Identificateur pour l'espace de noms XAML principal de ce <see cref="T:System.Xaml.XamlMember" />, sous forme de chaîne.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.SerializationVisibility">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.DesignerSerializationVisibility&quot; /&gt; value, which indicates how a visual designer should process the member.">Obtient une valeur <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> qui indique comment un concepteur visuel doit traiter le membre.</summary>
      <returns vsli:raw="A value of the &lt;see cref=&quot;T:System.ComponentModel.DesignerSerializationVisibility&quot; /&gt; enumeration. The default is &lt;see cref=&quot;F:System.ComponentModel.DesignerSerializationVisibility.Visible&quot; /&gt;.">Valeur de l'énumération <see cref="T:System.ComponentModel.DesignerSerializationVisibility" />. La valeur par défaut est <see cref="F:System.ComponentModel.DesignerSerializationVisibility.Visible" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.TargetType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type where the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; can exist.">Obtient le <see cref="T:System.Xaml.XamlType" /> du type dans lequel le <see cref="T:System.Xaml.XamlMember" /> peut exister.</summary>
      <returns vsli:raw="The type where the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; can exist.">Type dans lequel le <see cref="T:System.Xaml.XamlMember" /> peut exister.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.ToString">
      <summary vsli:raw="Returns a string representation of this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Retourne une représentation sous forme de chaîne de <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="A string representation of this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Représentation sous forme de chaîne de <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.Type">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type that is used by the member.">Obtient le <see cref="T:System.Xaml.XamlType" /> du type qui est utilisé par le membre.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type that is used by the member.">
        <see cref="T:System.Xaml.XamlType" /> du type qui est utilisé par le membre.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.TypeConverter">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; object, which can be used for type conversion construction of XAML declared objects.">Obtient un objet <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, qui peut être utilisé pour la construction de conversion de type des objets XAML déclarés.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; value, with a &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; constraint on the generic.">Valeur <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> avec une contrainte <see cref="T:System.ComponentModel.TypeConverter" /> sur le générique.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.UnderlyingMember">
      <summary vsli:raw="Gets the CLR type system &lt;see cref=&quot;T:System.Reflection.MemberInfo&quot; /&gt; that is available for a member that is constructed by &lt;see cref=&quot;T:System.Reflection.PropertyInfo&quot; /&gt;, &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt;, or &lt;see cref=&quot;T:System.Reflection.EventInfo&quot; /&gt;.">Obtient le <see cref="T:System.Reflection.MemberInfo" /> du système de type CLR qui est disponible pour un membre construit par <see cref="T:System.Reflection.PropertyInfo" />, <see cref="T:System.Reflection.MethodInfo" /> ou <see cref="T:System.Reflection.EventInfo" />.</summary>
      <returns vsli:raw="CLR type system &lt;see cref=&quot;T:System.Reflection.MemberInfo&quot; /&gt; information, as cast from the initial constructor parameters. A &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; that is constructed with the &lt;see cref=&quot;M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)&quot; /&gt; signature returns &lt;see langword=&quot;null&quot; /&gt;.">Informations <see cref="T:System.Reflection.MemberInfo" /> du système de type CLR utilisées pour le transtypage à partir des paramètres du constructeur initial. Un<see cref="T:System.Xaml.XamlMember" /> construit avec la signature <see cref="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)" /> retourne <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.ValueSerializer">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; object, which is used for value serialization of XAML declared objects.">Obtient un objet <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> utilisé pour la sérialisation de valeur des objets XAML déclarés.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; constraint on the generic.">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> avec la contrainte <see cref="T:System.Windows.Markup.ValueSerializer" /> sur le générique.</returns>
    </member>
    <member name="T:System.Xaml.XamlNodeList">
      <summary vsli:raw="Provides a list of XAML nodes, which can be used for scenarios such as writing XAML nodes in a deferred manner.">Fournit une liste de nœuds XAML, lesquels peuvent être utilisés pour des scénarios tels que l'écriture différée de nœuds XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlNodeList.#ctor(System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlNodeList&quot; /&gt; class, using a provided schema context.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlNodeList" /> avec un contexte de schéma fourni.</summary>
      <param name="schemaContext" vsli:raw="The schema context to use for node operations.">Contexte de schéma à utiliser pour les opérations de nœud.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="schemaContext" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlNodeList.#ctor(System.Xaml.XamlSchemaContext,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlNodeList&quot; /&gt; class, using a provided schema context and list size.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlNodeList" /> avec un contexte de schéma et une taille de liste fournis.</summary>
      <param name="schemaContext" vsli:raw="The schema context to use for node operations.">Contexte de schéma à utiliser pour les opérations de nœud.</param>
      <param name="size" vsli:raw="The intended item count of the list.">Nombre d'éléments prévu de la liste.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="schemaContext" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlNodeList.Clear">
      <summary vsli:raw="Clears the items in this list.">Efface les éléments contenus dans cette liste.</summary>
    </member>
    <member name="P:System.Xaml.XamlNodeList.Count">
      <summary vsli:raw="Gets the number of nodes in this &lt;see cref=&quot;T:System.Xaml.XamlNodeList&quot; /&gt;.">Obtient le nombre de nœuds dans ce <see cref="T:System.Xaml.XamlNodeList" />.</summary>
      <returns vsli:raw="The number of nodes in this &lt;see cref=&quot;T:System.Xaml.XamlNodeList&quot; /&gt;.">Nombre de nœuds dans ce <see cref="T:System.Xaml.XamlNodeList" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlNodeList.GetReader">
      <summary vsli:raw="Returns a XAML reader implementation delegate.">Retourne un délégué d'implémentation de lecteur XAML.</summary>
      <returns vsli:raw="A XAML reader implementation delegate.">Délégué d'implémentation de lecteur XAML.</returns>
      <exception cref="T:System.Xaml.XamlException" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlNodeList&quot; /&gt; is still in Write mode.  &#xA;  &#xA; -or-  &#xA;  &#xA; The writer that is used for the node list has no schema context.">
        <see cref="T:System.Xaml.XamlNodeList" /> est encore en mode écriture.  

ou - 
Le writer qui est utilisé pour la liste de nœuds n'a pas de contexte de schéma.</exception>
    </member>
    <member name="P:System.Xaml.XamlNodeList.Writer">
      <summary vsli:raw="Gets the associated XAML writer.">Obtient le writer XAML associé.</summary>
      <returns vsli:raw="The associated XAML writer.">Writer XAML associé.</returns>
    </member>
    <member name="T:System.Xaml.XamlNodeQueue">
      <summary vsli:raw="Provides a buffer for writing nodes and reading them again.">Fournit une mémoire tampon pour l'écriture de nœuds et leur relecture ultérieure.</summary>
    </member>
    <member name="M:System.Xaml.XamlNodeQueue.#ctor(System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlNodeQueue&quot; /&gt; class using a provided XAML schema context.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlNodeQueue" /> avec le contexte de schéma XAML fourni.</summary>
      <param name="schemaContext" vsli:raw="The schema context to use for node operations.">Contexte de schéma à utiliser pour les opérations de nœud.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlSchemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xamlSchemaContext" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlNodeQueue.Count">
      <summary vsli:raw="Gets the number of nodes in the &lt;see cref=&quot;T:System.Xaml.XamlNodeQueue&quot; /&gt;.">Obtient le nombre de nœuds dans le <see cref="T:System.Xaml.XamlNodeQueue" />.</summary>
      <returns vsli:raw="The number of nodes in the &lt;see cref=&quot;T:System.Xaml.XamlNodeQueue&quot; /&gt;.">Nombre de nœuds dans le <see cref="T:System.Xaml.XamlNodeQueue" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlNodeQueue.IsEmpty">
      <summary vsli:raw="Gets a value that determines whether this &lt;see cref=&quot;T:System.Xaml.XamlNodeQueue&quot; /&gt; does not contain nodes.">Obtient une valeur qui détermine si ce <see cref="T:System.Xaml.XamlNodeQueue" /> ne contient pas de nœuds.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlNodeQueue&quot; /&gt; does not contain nodes; &lt;see langword=&quot;false&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlNodeQueue&quot; /&gt; contains nodes.">
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlNodeQueue" /> ne contient pas de nœuds ; <see langword="false" /> si ce <see cref="T:System.Xaml.XamlNodeQueue" /> contient des nœuds.</returns>
    </member>
    <member name="P:System.Xaml.XamlNodeQueue.Reader">
      <summary vsli:raw="Gets a XAML reader implementation delegate.">Obtient un délégué d'implémentation de lecteur XAML.</summary>
      <returns vsli:raw="A XAML reader implementation delegate.">Délégué d'implémentation de lecteur XAML.</returns>
      <exception cref="T:System.Xaml.XamlException" vsli:raw="The XAML writer that is used for the node list has no valid XAML schema context.">Le writer XAML qui est utilisé pour la liste de nœuds n'a pas de contexte de schéma XAML valide.</exception>
    </member>
    <member name="P:System.Xaml.XamlNodeQueue.Writer">
      <summary vsli:raw="Gets the associated XAML writer.">Obtient le writer XAML associé.</summary>
      <returns vsli:raw="The associated XAML writer.">Writer XAML associé.</returns>
    </member>
    <member name="T:System.Xaml.XamlNodeType">
      <summary vsli:raw="Describes the type of the node that is currently being processed by a XAML reader.">Décrit le type du nœud qui est en cours de traitement par un lecteur XAML.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.EndMember">
      <summary vsli:raw="The reader is at the end of a member node.">Le lecteur est à la fin d'un nœud membre.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.EndObject">
      <summary vsli:raw="The reader is at the end of an object node.">Le lecteur est à la fin d'un nœud d'objet.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.GetObject">
      <summary vsli:raw="The reader is within an object node and writing a default or implicit value, instead of being a specified object value.">Le lecteur se trouve dans un nœud d'objet et écrit une valeur par défaut ou implicite, au lieu d'être une valeur d'objet spécifiée.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.NamespaceDeclaration">
      <summary vsli:raw="The reader is within an XML namespace declaration.">Le lecteur est dans une déclaration d'espace de noms XML.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.None">
      <summary vsli:raw="The reader is not positioned at a true node (for example, the reader might be at end-of-file).">Le lecteur n'est pas positionné au niveau d'un véritable nœud (par exemple, le lecteur peut se trouver à la fin d'un fichier).</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.StartMember">
      <summary vsli:raw="The reader is at the start of a member node.">Le lecteur est au début d'un nœud membre.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.StartObject">
      <summary vsli:raw="The reader is at the start of an object node.">Le lecteur est au début d'un nœud d'objet.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.Value">
      <summary vsli:raw="The reader is within a node and processing a value.">Le lecteur est dans un nœud et traite une valeur.</summary>
    </member>
    <member name="T:System.Xaml.XamlObjectEventArgs">
      <summary vsli:raw="Provides data for callbacks that can be inserted in the sequence for object initialization and property setting. This influences the object graph that is produced by &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt;.">Fournit des données pour les rappels qui peuvent être insérées dans la séquence d’initialisation et la valeur de propriété de l’objet. Cela influence le graphique d'objet produit par <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectEventArgs.#ctor(System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectEventArgs&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlObjectEventArgs" />.</summary>
      <param name="instance" vsli:raw="The object instance that is relevant to the event data.">Instance d’objet qui correspond aux données d’événement.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlObjectEventArgs.ElementLineNumber">
      <summary vsli:raw="Gets or sets the line number of the relevant object instance.">Obtient ou définit le numéro de ligne de l’instance d’objet appropriée.</summary>
      <returns vsli:raw="The line number of the element.">Numéro de ligne de l’élément.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectEventArgs.ElementLinePosition">
      <summary vsli:raw="Gets or sets the position in the line of the relevant object instance.">Obtient ou définit la position dans la ligne de l’instance d’objet appropriée.</summary>
      <returns vsli:raw="The position in the line of the element.">Position dans la ligne de l’élément.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectEventArgs.Instance">
      <summary vsli:raw="Gets the object instance that is relevant to the event data.">Obtient l’instance d’objet qui correspond aux données d’événement.</summary>
      <returns vsli:raw="The object instance that is relevant to the event data.">Instance d’objet qui correspond aux données d’événement.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectEventArgs.SourceBamlUri">
      <summary vsli:raw="Gets or sets the BAML URI of the relevant object instance.">Obtient ou définit l’URI BAML de l’instance d’objet appropriée.</summary>
      <returns vsli:raw="The BAML URI of the relevant object instance.">URI BAML de l’instance d’objet appropriée.</returns>
    </member>
    <member name="T:System.Xaml.XamlObjectReader">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; implementation that reads object graphs and generates a XAML node stream.">Fournit une implémentation de <see cref="T:System.Xaml.XamlReader" /> qui lit les graphiques d'objets et génère un flux de données de nœud XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectReader.#ctor(System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReader&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlObjectReader" />.</summary>
      <param name="instance" vsli:raw="The root of the object tree / object graph to read.">Racine de l'arborescence d'objets / du graphique d'objets à lire.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectReader.#ctor(System.Object,System.Xaml.XamlObjectReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReader&quot; /&gt; class with the specified reader settings.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlObjectReader" /> avec les paramètres de lecteur spécifiés.</summary>
      <param name="instance" vsli:raw="The root of the object tree to read.">Racine de l'arborescence d'objets à lire.</param>
      <param name="settings" vsli:raw="A settings object.">Objet de paramètres.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectReader.#ctor(System.Object,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReader&quot; /&gt; class with the specified schema context.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlObjectReader" /> avec le contexte de schéma spécifié.</summary>
      <param name="instance" vsli:raw="The root of the object tree to read.">Racine de l'arborescence d'objets à lire.</param>
      <param name="schemaContext" vsli:raw="The schema context for the reader to use.">Contexte de schéma du lecteur à utiliser.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="schemaContext" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectReader.#ctor(System.Object,System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReader&quot; /&gt; class with the specified schema context and reader settings.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlObjectReader" /> avec le schéma de contexte et les paramètres de lecteur spécifiés.</summary>
      <param name="instance" vsli:raw="The root of the object tree to read.">Racine de l'arborescence d'objets à lire.</param>
      <param name="schemaContext" vsli:raw="The schema context for the reader to use.">Contexte de schéma du lecteur à utiliser.</param>
      <param name="settings" vsli:raw="A settings object.">Objet de paramètres.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="schemaContext" /> est <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.Instance">
      <summary vsli:raw="Gets the object instance that is available at the current reader position.">Obtient l'instance d'objet qui est disponible à la position actuelle du lecteur.</summary>
      <returns vsli:raw="The object instance at the current reader position; or &lt;see langword=&quot;null&quot; /&gt; if the reader position is not on an object.">Instance d'objet à la position actuelle du lecteur ; ou <see langword="null" /> si la position du lecteur n'est pas sur un objet.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.IsEof">
      <summary vsli:raw="Gets a value that reports whether the reader position is at the end of the file.">Obtient une valeur qui signale si la position du lecteur est à la fin du fichier.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader position is at the end of the file; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la position du lecteur est à la fin du fichier ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.Member">
      <summary vsli:raw="Gets the current &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; at the reader position, if the reader position is on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.StartMember&quot; /&gt;.">Obtient le membre <see cref="T:System.Xaml.XamlMember" /> actuel à la position du lecteur, si la position du lecteur est sur un <see cref="F:System.Xaml.XamlNodeType.StartMember" />.</summary>
      <returns vsli:raw="The current member; or &lt;see langword=&quot;null&quot; /&gt; if the reader position is not on a member.">Membre actuel ; ou <see langword="null" /> si la position du lecteur ne se trouve pas sur un membre.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.Namespace">
      <summary vsli:raw="Gets the XAML namespace declaration from the current reader position.">Obtient la déclaration d'espace de noms XAML depuis la position actuelle du lecteur.</summary>
      <returns vsli:raw="The XAML namespace declaration if the reader is positioned on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.NamespaceDeclaration&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Déclaration d'espace de noms XAML si le lecteur est positionné sur un <see cref="F:System.Xaml.XamlNodeType.NamespaceDeclaration" /> ; sinon, <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.NodeType">
      <summary vsli:raw="Gets the type of the current node.">Obtient le type du nœud actuel.</summary>
      <returns vsli:raw="The type of the current node.">Type du nœud actuel.</returns>
    </member>
    <member name="M:System.Xaml.XamlObjectReader.Read">
      <summary vsli:raw="Provides the next XAML node from the source object graph, if a node is available.">Fournit le nœud XAML suivant à partir du graphique d'objet source, si un nœud est disponible.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a node is available; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si un nœud est disponible ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.SchemaContext">
      <summary vsli:raw="Gets an object that provides schema information for the information set.">Obtient un objet qui fournit les informations de schéma pour le jeu d'informations.</summary>
      <returns vsli:raw="An object that provides schema information for the information set.">Objet qui fournit les informations de schéma pour le jeu d'informations.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.Type">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the object at the current reader position.">Obtient le <see cref="T:System.Xaml.XamlType" /> de l'objet à la position actuelle du lecteur.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the object at the current reader position; or &lt;see langword=&quot;null&quot; /&gt; if the position is not on an object.">
        <see cref="T:System.Xaml.XamlType" /> de l'objet à la position actuelle du lecteur ; ou <see langword="null" /> si la position n'est pas sur un objet.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.Value">
      <summary vsli:raw="Gets the value of the node at the current reader position.">Obtient la valeur du nœud à la position actuelle du lecteur.</summary>
      <returns vsli:raw="The value of the current node; or &lt;see langword=&quot;null&quot; /&gt;, if the reader position is not on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.Value&quot; /&gt; node type.">Valeur du nœud actuel ; ou <see langword="null" /> si la position du lecteur n'est pas sur un type de nœud <see cref="F:System.Xaml.XamlNodeType.Value" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlObjectReaderException">
      <summary vsli:raw="The exception that is thrown by several &lt;see cref=&quot;T:System.Xaml.XamlObjectReader&quot; /&gt; internal helper APIs.">Exception levée par plusieurs API d'assistance internes <see cref="T:System.Xaml.XamlObjectReader" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectReaderException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReaderException&quot; /&gt; class with a system-supplied message that describes the error.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlObjectReaderException" /> avec un message système qui décrit l'erreur.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectReaderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReaderException&quot; /&gt; class with serialized data.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlObjectReaderException" /> avec des données sérialisées.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Objet qui contient les données sérialisées de l'objet.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Informations contextuelles sur la source ou la destination.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectReaderException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReaderException&quot; /&gt; class with a specified message that describes the error.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlObjectReaderException" /> avec un message spécifié décrivant l'erreur.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Message décrivant l'exception. L'appelant de ce constructeur doit vérifier que cette chaîne a été localisée pour la culture en cours du système.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectReaderException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReaderException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlObjectReaderException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Message décrivant l'exception. L'appelant de ce constructeur doit vérifier que cette chaîne a été localisée pour la culture en cours du système.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Exception ayant provoqué l'exception actuelle. Si le paramètre <paramref name="innerException" /> n'est pas <see langword="null" />, l'exception actuelle est levée dans un bloc <see langword="catch" /> qui gère l'exception interne.</param>
    </member>
    <member name="T:System.Xaml.XamlObjectReaderSettings">
      <summary vsli:raw="Specifies processing rules or option settings for a &lt;see cref=&quot;T:System.Xaml.XamlObjectReader&quot; /&gt;.">Spécifie les règles de traitement ou les paramètres d'option pour un <see cref="T:System.Xaml.XamlObjectReader" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectReaderSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReaderSettings&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlObjectReaderSettings" />.</summary>
    </member>
    <member name="P:System.Xaml.XamlObjectReaderSettings.RequireExplicitContentVisibility">
      <summary vsli:raw="Gets or sets a value that determines whether writers that use the associated &lt;see cref=&quot;T:System.Xaml.XamlObjectReader&quot; /&gt; for context should use designer settings for writing content explicitly.">Obtient ou définit une valeur qui détermine si les writers qui utilisent le <see cref="T:System.Xaml.XamlObjectReader" /> associé pour le contexte doivent utiliser les paramètres du concepteur pour écrire le contenu explicitement.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that writers that use this context should use designer settings for writing any output content in cases where &lt;see cref=&quot;P:System.Xaml.XamlMember.IsWritePublic&quot; /&gt; reports &lt;see langword=&quot;false&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; if designer settings should be ignored.">
        <see langword="true" /> pour spécifier que les writers qui utilisent ce contexte doivent utiliser les paramètres du concepteur pour écrire n'importe quel contenu de sortie dans les cas où <see cref="P:System.Xaml.XamlMember.IsWritePublic" /> a la valeur <see langword="false" /> ; <see langword="false" /> si les paramètres du concepteur doivent être ignorés.</returns>
    </member>
    <member name="T:System.Xaml.XamlObjectWriter">
      <summary vsli:raw="Creates an object graph from a source XAML node stream.">Crée un graphique d'objet à partir d'un flux de données de nœud XAML source.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; class using  the XAML schema context that is used by a &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlObjectWriter" /> à l’aide du contexte de schéma XAML utilisé par un <see cref="T:System.Xaml.XamlReader" />.</summary>
      <param name="schemaContext" vsli:raw="A XAML schema context that is shared with the XAML reader that provides nodes for writing.">Contexte de schéma XAML partagé avec le lecteur XAML qui fournit des nœuds pour l'écriture.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="schemaContext" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectWriterSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; class using the context that is used by a &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; and its settings.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlObjectWriter" /> à l'aide du contexte utilisé par un <see cref="T:System.Xaml.XamlReader" /> et ses paramètres.</summary>
      <param name="schemaContext" vsli:raw="A XAML schema context that is shared with the XAML reader that provides nodes for writing.">Contexte de schéma XAML partagé avec le lecteur XAML qui fournit des nœuds pour l'écriture.</param>
      <param name="settings" vsli:raw="A settings object that specifies certain options for &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; behavior and output.">Objet de paramètres qui spécifie certaines options pour le comportement et la sortie de <see cref="T:System.Xaml.XamlObjectWriter" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="schemaContext" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.Clear">
      <summary vsli:raw="Resets all possible frames and clears the object graph.">Réinitialise toutes les images possibles et efface le graphique d'objet.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt;, and optionally, releases the managed resources.">Libère les ressources non managées utilisées par <see cref="T:System.Xaml.XamlObjectWriter" />, et libère éventuellement les ressources managées.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release the managed resources; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour libérer les ressources managées ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.OnAfterBeginInit(System.Object)">
      <summary vsli:raw="Invokes any &lt;see cref=&quot;P:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler&quot; /&gt; method that is associated with &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterSettings&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt;.">Appelle une méthode <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler" /> associée à <see cref="T:System.Xaml.XamlObjectWriterSettings" /> pour ce <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
      <param name="value" vsli:raw="The object to report on. The object is packaged into &lt;see cref=&quot;T:System.Xaml.XamlObjectEventArgs&quot; /&gt; when the handler is invoked.">Objet à signaler. L'objet est empaqueté dans <see cref="T:System.Xaml.XamlObjectEventArgs" /> lorsque le gestionnaire est appelé.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.OnAfterEndInit(System.Object)">
      <summary vsli:raw="Invokes any &lt;see cref=&quot;P:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler&quot; /&gt; method that is associated with &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterSettings&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt;.">Appelle une méthode <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler" /> associée à <see cref="T:System.Xaml.XamlObjectWriterSettings" /> pour ce <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
      <param name="value" vsli:raw="The object to report on. The value  is packaged into &lt;see cref=&quot;T:System.Xaml.XamlObjectEventArgs&quot; /&gt; when the handler is invoked.">Objet à signaler. La valeur est empaquetée dans <see cref="T:System.Xaml.XamlObjectEventArgs" /> lorsque le gestionnaire est appelé.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.OnAfterProperties(System.Object)">
      <summary vsli:raw="Invokes any &lt;see cref=&quot;P:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler&quot; /&gt; referenced method that is associated with &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterSettings&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt;.">Appelle une méthode référencée <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler" /> associée à <see cref="T:System.Xaml.XamlObjectWriterSettings" /> pour ce <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
      <param name="value" vsli:raw="The object to report on. This is packaged into &lt;see cref=&quot;T:System.Xaml.XamlObjectEventArgs&quot; /&gt; when the handler is invoked.">Objet à signaler. Il est empaqueté dans <see cref="T:System.Xaml.XamlObjectEventArgs" /> lorsque le gestionnaire est appelé.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.OnBeforeProperties(System.Object)">
      <summary vsli:raw="Invokes any &lt;see cref=&quot;P:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler&quot; /&gt; referenced method that is associated with &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterSettings&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt;.">Appelle une méthode référencée <see cref="P:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler" /> associée à <see cref="T:System.Xaml.XamlObjectWriterSettings" /> pour ce <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
      <param name="value" vsli:raw="The value to pass through &lt;see cref=&quot;T:System.Xaml.XamlObjectEventArgs&quot; /&gt; when the handler is invoked.">Valeur à passer via <see cref="T:System.Xaml.XamlObjectEventArgs" /> lorsque le gestionnaire est appelé.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.OnSetValue(System.Object,System.Xaml.XamlMember,System.Object)">
      <summary vsli:raw="Invokes any &lt;see cref=&quot;P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler&quot; /&gt; referenced method that is associated with &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterSettings&quot; /&gt; for this writer, as long as &lt;paramref name=&quot;handled&quot; /&gt; in &lt;see cref=&quot;T:System.Windows.Markup.XamlSetValueEventArgs&quot; /&gt; event data is not &lt;see langword=&quot;true&quot; /&gt;.">Appelle une méthode référencée <see cref="P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler" /> associée à <see cref="T:System.Xaml.XamlObjectWriterSettings" /> pour ce writer, dans la mesure où <paramref name="handled" /> dans les données d'événement <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" /> n'a pas la valeur <see langword="true" />.</summary>
      <param name="eventSender" vsli:raw="The object to report as the source to the handler.">Objet à signaler en tant que source au gestionnaire.</param>
      <param name="member" vsli:raw="The name of the property to set, which is passed to the handler as part of &lt;see cref=&quot;T:System.Windows.Markup.XamlSetValueEventArgs&quot; /&gt;.">Nom de la propriété à définir, qui est passée au gestionnaire dans le cadre de <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />.</param>
      <param name="value" vsli:raw="The value to provide for the property that is named by &lt;paramref name=&quot;property&quot; /&gt;. The value is passed to the handler as part of &lt;see cref=&quot;T:System.Windows.Markup.XamlSetValueEventArgs&quot; /&gt;.">Valeur à fournir pour la propriété qui est nommée par <paramref name="property" />. La valeur est passée au gestionnaire dans le cadre de <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />.</param>
      <returns vsli:raw="A Boolean value that is set by any associated handler; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Valeur booléenne définie par un gestionnaire associé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriter.Result">
      <summary vsli:raw="Gets the last object that was written. Typically only called when the node stream is at its end and the object graph is complete.">Obtient le dernier objet qui a été écrit. En général, appelé uniquement lorsque le flux de nœud est à sa fin et que le graphique d'objet est terminé.</summary>
      <returns vsli:raw="The last object written, or &lt;see langword=&quot;null&quot; /&gt;.">Dernier objet écrit, ou <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriter.RootNameScope">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.INameScope&quot; /&gt; service that maintains the XAML namescope for the absolute node root of the XAML object writer.">Obtient le service <see cref="T:System.Windows.Markup.INameScope" /> qui maintient la portée de nom XAML pour le nœud racine absolu du writer d'objet XAML.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Markup.INameScope&quot; /&gt; service that maintains the XAML namescope for the current root of the object writer.">Service <see cref="T:System.Windows.Markup.INameScope" /> qui maintient la portée de nom XAML pour la racine actuelle du writer d'objet.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriter.SchemaContext">
      <summary vsli:raw="Gets the active XAML schema context.">Obtient le contexte de schéma XAML actif.</summary>
      <returns vsli:raw="The XAML schema context.">Contexte du schéma XAML.</returns>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.SetLineInfo(System.Int32,System.Int32)">
      <summary vsli:raw="Implements &lt;see cref=&quot;M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)&quot; /&gt; and provides line information for exceptions.">Implémente <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" /> et fournit les informations de ligne pour les exceptions.</summary>
      <param name="lineNumber" vsli:raw="The line number from the reader.">Numéro de ligne du lecteur.</param>
      <param name="linePosition" vsli:raw="The line position from the reader.">Position de ligne du lecteur.</param>
    </member>
    <member name="P:System.Xaml.XamlObjectWriter.ShouldProvideLineInfo">
      <summary vsli:raw="Gets a value that reports whether a line information service should provide values and therefore, should also call the &lt;see cref=&quot;M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)&quot; /&gt; method when it is relevant.">Obtient une valeur qui indique si un service d'informations de ligne doit fournir des valeurs et par conséquent également appeler la méthode <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" /> si nécessaire.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if line information is used by the writer; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les informations de ligne sont utilisées par le writer ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteEndMember">
      <summary vsli:raw="Closes the current member scope, and may write the value of the member scope while it closes. The new scope becomes the parent object scope of the member.">Ferme la portée de membres actuelle et écrit éventuellement la valeur de la portée de membres pendant qu'elle se ferme. La nouvelle portée devient la portée d'objets parents du membre.</summary>
      <exception cref="T:System.Xaml.XamlObjectWriterException" vsli:raw="Failed to create member value from a value node that is encountered between this call and a previous &lt;see langword=&quot;StartMember&quot; /&gt;.">Échec de la création de la valeur d'un membre à partir d'un nœud de valeur qui est rencontré entre cet appel et un <see langword="StartMember" /> précédent.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteEndObject">
      <summary vsli:raw="Closes the current object scope in the writer. The new object scope becomes the parent member scope.">Ferme la portée d'objets actuelle dans le writer. La nouvelle portée d'objets devient la portée de membres parents.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteGetObject">
      <summary vsli:raw="Writes the conceptual &lt;see langword=&quot;StartObject&quot; /&gt; into the object graph when the specified object is a default or implicit value of the parent property. The implicit value comes from information that is obtained from the XAML schema context and backing type information, instead of being specified as an object value in the input XAML node set.">Écrit le <see langword="StartObject" /> conceptuel dans le graphique d'objet lorsque l'objet spécifié est une valeur par défaut ou implicite de la propriété parente. La valeur implicite provient des informations obtenues du contexte de schéma XAML et des informations de type de stockage, au lieu d'être spécifiée en tant que valeur d'objet dans le jeu de nœuds XAML d'entrée.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
      <summary vsli:raw="Defines a namespace declaration that applies to the next object scope or member scope.">Définit une déclaration d'espace de noms qui s'applique à la portée d'objets ou de membres suivante.</summary>
      <param name="namespaceDeclaration" vsli:raw="The namespace declaration to write.">Déclaration d'espace de noms à écrire.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;namespaceDeclaration&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="namespaceDeclaration" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="A component of &lt;paramref name=&quot;namespaceDeclaration&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Un composant de <paramref name="namespaceDeclaration" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Xaml.XamlObjectReaderException" vsli:raw="Tried to write a XAML namespace node in an invalid scope.">Tentative d'écriture d'un nœud d'espaces de noms XAML dans une portée non valide.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteStartMember(System.Xaml.XamlMember)">
      <summary vsli:raw="Writes a new member node into the current object scope, and the scope becomes a new member scope.">Écrit un nouveau nœud membre dans la portée d'objets actuelle, et la portée devient une nouvelle portée de membres.</summary>
      <param name="property" vsli:raw="The XAML property to write. Typically you obtain this value from a XAML reader through the XAML node stream intermediate.">Propriété XAML à écrire. En général, vous obtenez cette valeur d'un lecteur XAML via le flux de nœud XAML intermédiaire.</param>
      <exception cref="T:System.Xaml.XamlObjectWriterException" vsli:raw="&lt;paramref name=&quot;property&quot; /&gt; has &lt;see cref=&quot;P:System.Xaml.XamlMember.IsUnknown&quot; /&gt; set to &lt;see langword=&quot;true&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Xaml.XamlLanguage.UnknownContent&quot; /&gt; passed, which indicates that the XAML node stream contained content for an object that does not support content.  &#xA;  &#xA; -or-  &#xA;  &#xA; Attempted to write a start member in an invalid scope.">
        <paramref name="property" /> a <see cref="P:System.Xaml.XamlMember.IsUnknown" /> défini à <see langword="true" />.  

ou - 
<see cref="P:System.Xaml.XamlLanguage.UnknownContent" /> passé, ce qui indique que le contenu du flux de nœud XAML pour un objet ne prend pas en charge le contenu.  

ou - 
Tentative d'écriture d'un membre de démarrage dans une portée non valide.</exception>
      <exception cref="T:System.Xaml.XamlDuplicateMemberException" vsli:raw="&lt;paramref name=&quot;property&quot; /&gt; specifies a property that is already explicitly set in the parent object scope.">
        <paramref name="property" /> spécifie une propriété qui est déjà définie explicitement dans la portée d'objet parent.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;property&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="property" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteStartObject(System.Xaml.XamlType)">
      <summary vsli:raw="Writes an object node into the current scope, and sets the scope to a new object scope.">Écrit un nouveau nœud objet dans la portée actuelle et définit la portée sur une nouvelle portée d'objets.</summary>
      <param name="xamlType" vsli:raw="The type to write. Typically you obtain this value from a XAML reader.">Type à écrire. En général, vous obtenez cette valeur d'un lecteur XAML.</param>
      <exception cref="T:System.Xaml.XamlObjectWriterException" vsli:raw="Processing an &lt;see cref=&quot;P:System.Xaml.XamlType.IsUnknown&quot; /&gt; type and cannot create an object.  &#xA;  &#xA; -or-  &#xA;  &#xA; Attempted to write a start object in an invalid scope.">Traitement d'un type <see cref="P:System.Xaml.XamlType.IsUnknown" />, et impossible de créer un objet.  

ou - 
Tentative d'écriture d'un objet de démarrage dans une portée non valide.</exception>
      <exception cref="T:System.Xaml.XamlParseException" vsli:raw="Attempted to write a root object when the root object was already provided in the settings.">Tentative d'écriture d'un objet racine lorsque l'objet racine a déjà été fourni dans les paramètres.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xamlType" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteValue(System.Object)">
      <summary vsli:raw="Writes a value to the current member scope. If the current scope is inside a collection, dictionary, or array object, the value should be added to the collection, dictionary, or array.">Écrit une valeur dans la portée de membres actuelle. Si la portée actuelle est à l'intérieur d'une collection, d'un dictionnaire ou d'un objet tableau, la valeur doit être ajoutée à la collection, au dictionnaire ou au tableau.</summary>
      <param name="value" vsli:raw="The value to write.">Valeur à écrire.</param>
      <exception cref="T:System.Xaml.XamlObjectWriterException" vsli:raw="Attempted to write a value in an invalid scope.">Tentative d'écriture d'une valeur dans une portée non valide.</exception>
    </member>
    <member name="T:System.Xaml.XamlObjectWriterException">
      <summary vsli:raw="The exception that is thrown when a XAML writer (such as the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; class) encounters an error while attempting to produce object graphs from a XAML node stream.">Exception levée lorsqu'un writer XAML (tel que la classe <see cref="T:System.Xaml.XamlObjectWriter" />) rencontre une erreur en essayant de produire des graphiques d'objets à partir d'un flux de nœud XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterException&quot; /&gt; class with a system-supplied message that describes the error.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlObjectWriterException" /> avec un message système qui décrit l'erreur.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterException&quot; /&gt; class with serialized data.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlObjectWriterException" /> avec des données sérialisées.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Objet qui contient les données sérialisées de l'objet.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Informations contextuelles sur la source ou la destination.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterException&quot; /&gt; class with a specified message that describes the error.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlObjectWriterException" /> avec un message spécifié décrivant l'erreur.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Message décrivant l'exception. L'appelant de ce constructeur doit vérifier que cette chaîne a été localisée pour la culture en cours du système.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlObjectWriterException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Message décrivant l'exception. L'appelant de ce constructeur doit vérifier que cette chaîne a été localisée pour la culture en cours du système.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Exception ayant provoqué l'exception actuelle. Si le paramètre <paramref name="innerException" /> n'est pas <see langword="null" />, l'exception actuelle est levée dans un bloc <see langword="catch" /> qui gère l'exception interne.</param>
    </member>
    <member name="T:System.Xaml.XamlObjectWriterSettings">
      <summary vsli:raw="Provides specific XAML writer settings for &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt;.">Fournit des paramètres de writer XAML spécifiques pour <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterSettings&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlObjectWriterSettings" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterSettings.#ctor(System.Xaml.XamlObjectWriterSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterSettings&quot; /&gt; class that is based on the copy of an existing instance.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlObjectWriterSettings" />, qui est basée sur la copie d'une instance existante.</summary>
      <param name="settings" vsli:raw="The settings instance to copy.">Instance de paramètres à copier.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;settings&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="settings" /> est <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.AccessLevel">
      <summary vsli:raw="Gets or sets &lt;see cref=&quot;T:System.Xaml.Permissions.XamlAccessLevel&quot; /&gt; permissions that the XAML writer observes.">Obtient ou définit les autorisations <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> que le writer XAML observe.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Permissions.XamlAccessLevel&quot; /&gt; permissions.">Autorisations <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler">
      <summary vsli:raw="Gets or sets a reference to a callback that is invoked by the XAML writer at the &lt;see cref=&quot;M:System.ComponentModel.ISupportInitialize.BeginInit&quot; /&gt; phase of the object lifetime for each created object.">Obtient ou définit une référence à un rappel appelé par le writer XAML à la phase <see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" /> de la durée de vie de chaque objet créé.</summary>
      <returns vsli:raw="A callback that is invoked by the XAML writer at the &lt;see cref=&quot;M:System.ComponentModel.ISupportInitialize.BeginInit&quot; /&gt; phase of object lifetime.">Rappel appelé par le writer XAML à la phase <see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" /> de la durée de vie d'objet.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler">
      <summary vsli:raw="Gets or sets a reference to a callback that is invoked by the XAML writer at the &lt;see cref=&quot;M:System.ComponentModel.ISupportInitialize.EndInit&quot; /&gt; phase of the object lifetime for each created object.">Obtient ou définit une référence à un rappel appelé par le writer XAML à la phase <see cref="M:System.ComponentModel.ISupportInitialize.EndInit" /> de la durée de vie de chaque objet créé.</summary>
      <returns vsli:raw="A callback that is invoked by the XAML writer at the &lt;see cref=&quot;M:System.ComponentModel.ISupportInitialize.EndInit&quot; /&gt; phase of object lifetime.">Rappel appelé par le writer XAML à la phase <see cref="M:System.ComponentModel.ISupportInitialize.EndInit" /> de la durée de vie d'objet.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler">
      <summary vsli:raw="Gets or sets a reference to a callback that is invoked by the XAML writer at the post-member-write phase of the object lifetime for each created object.">Obtient ou définit une référence à un rappel appelé par le writer XAML à la phase d'écriture post-membre de la durée de vie de chaque objet créé.</summary>
      <returns vsli:raw="A callback that is invoked by the XAML writer at the post-member-write phase of object lifetime.">Rappel appelé par le writer XAML à la phase d'écriture post-membre de la durée de vie d'objet.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler">
      <summary vsli:raw="Gets or sets a reference to a callback that is invoked by the XAML writer at the pre-member-write phase of the object lifetime for each created object.">Obtient ou définit une référence à un rappel appelé par le writer XAML à la phase d'écriture pré-membre de la durée de vie de chaque objet créé.</summary>
      <returns vsli:raw="A callback that is invoked by the XAML writer at the pre-member-write phase of object lifetime.">Rappel appelé par le writer XAML à la phase d'écriture pré-membre de la durée de vie d'objet.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope">
      <summary vsli:raw="Gets or sets the XAML namescope to use for registering names from the XAML writer if &lt;see cref=&quot;P:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;.">Obtient ou définit la portée de nom XAML à utiliser pour l'inscription de noms à partir du writer XAML si <see cref="P:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope" /> a la valeur <see langword="true" />.</summary>
      <returns vsli:raw="The XAML namescope to use for registering names. The default is &lt;see langword=&quot;null&quot; /&gt;.">Portée de nom XAML à utiliser pour l'inscription de noms. La valeur par défaut est <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.IgnoreCanConvert">
      <summary vsli:raw="Gets or sets a value that specifies whether the XAML writer should ignore (not call) &lt;see cref=&quot;M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)&quot; /&gt; implementations on a &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; in type-converter situations.">Obtient ou définit une valeur qui spécifie si le writer XAML doit ignorer (ne pas appeler) les implémentations de <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" /> sur un <see cref="T:System.ComponentModel.TypeConverter" /> dans les situations de convertisseur de type.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the XAML writer ignores &lt;see cref=&quot;M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)&quot; /&gt; implementations; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le writer XAML ignore des implémentations de <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" /> ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.PreferUnconvertedDictionaryKeys">
      <summary vsli:raw="Gets or sets a value that determines whether to disable a default &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; feature that runs type conversion on the &lt;paramref name=&quot;K&quot; /&gt; component of a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; before writing the object graph representation.">Obtient ou définit une valeur qui détermine s'il convient de désactiver une fonctionnalité <see cref="T:System.Xaml.XamlObjectWriter" /> par défaut qui exécute la conversion de type sur le composant <paramref name="K" /> d'un <see cref="T:System.Collections.Generic.Dictionary`2" /> avant d'écrire la représentation de graphique d'objet.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;K&quot; /&gt; type conversion for a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; object should be disabled. &lt;see langword=&quot;false&quot; /&gt; if performing &lt;paramref name=&quot;K&quot; /&gt; type conversion for a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; object applies. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la conversion de type <paramref name="K" /> pour un objet <see cref="T:System.Collections.Generic.Dictionary`2" /> doit être désactivée. <see langword="false" /> si la conversion de type <paramref name="K" /> pour un objet <see cref="T:System.Collections.Generic.Dictionary`2" /> s'applique. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope">
      <summary vsli:raw="Gets or sets a value that determines whether name registration should occur against the specified &lt;see cref=&quot;P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope&quot; /&gt;.">Obtient ou définit une valeur qui détermine si l'inscription des noms doit se faire par rapport au <see cref="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope" /> spécifié.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if name registration should occur against the &lt;see cref=&quot;P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; if name registration should occur into the parent XAML namescope. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'inscription des noms doit se faire par rapport au <see cref="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope" /> ; <see langword="false" /> si l'inscription des noms doit se faire dans la portée de nom XAML parente. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.RootObjectInstance">
      <summary vsli:raw="Gets or sets a preexisting root object for &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; operations.">Obtient ou définit un objet racine préexistant pour les opérations <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
      <returns vsli:raw="A preexisting root object for &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; operations.">Objet racine préexistant pour les opérations <see cref="T:System.Xaml.XamlObjectWriter" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.SkipDuplicatePropertyCheck">
      <summary vsli:raw="Gets or sets a value that determines whether the XAML writer omits to check for the code path that checks for duplicate properties.">Obtient ou définit une valeur qui détermine si le writer XAML omet de rechercher le chemin du code qui recherche les propriétés en double.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the duplicate property check should be omitted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la recherche de propriétés en double doit être omise ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.SkipProvideValueOnRoot">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; should omit to call &lt;see langword=&quot;ProvideValue&quot; /&gt; on a markup extension, which is relevant when the markup extension represents the root of an object graph.">Obtient ou définit une valeur qui indique si <see cref="T:System.Xaml.XamlObjectWriter" /> doit omettre d'appeler <see langword="ProvideValue" /> sur une extension de balisage, ce qui est pertinent lorsque l'extension de balisage représente la racine d'un graphique d'objet.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; should omit to call &lt;see langword=&quot;ProvideValue&quot; /&gt; on a markup extension; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le <see cref="T:System.Xaml.XamlObjectWriter" /> doit omettre l'appel à <see langword="ProvideValue" /> sur une extension de balisage ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.SourceBamlUri">
      <summary vsli:raw="Used in the &lt;see langword=&quot;BeginInitHandler&quot; /&gt; in place of the actual &lt;see langword=&quot;BaseUri&quot; /&gt;.">Utilisé dans <see langword="BeginInitHandler" /> à la place du <see langword="BaseUri" /> réel.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Uri&quot; /&gt; to be used in place of the actual &lt;see langword=&quot;BaseUri&quot; /&gt;.">
        <see cref="T:System.Uri" /> à utiliser à la place de l'<see langword="BaseUri" /> réel.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler">
      <summary vsli:raw="Gets or sets the handler to use when the object writer calls into a CLR-implemented &lt;see langword=&quot;SetValue&quot; /&gt; for dependency properties.">Obtient ou définit le gestionnaire à utiliser lorsque le writer d'objet appelle un <see langword="SetValue" /> implémenté CLR pour rechercher les propriétés de dépendance.</summary>
      <returns vsli:raw="A handler implementation that handles this case.">Implémentation de gestionnaire qui gère ce cas.</returns>
    </member>
    <member name="T:System.Xaml.XamlParseException">
      <summary vsli:raw="The exception that is thrown when a XAML reader cannot process elements of the XAML reader source into a XAML node stream.">Exception levée lorsqu'un lecteur XAML ne peut pas traiter les éléments de la source de lecteur XAML dans un flux de nœud XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlParseException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlParseException&quot; /&gt; class with a system-supplied message that describes the error.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlParseException" /> avec un message système qui décrit l'erreur.</summary>
    </member>
    <member name="M:System.Xaml.XamlParseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlParseException&quot; /&gt; class with serialized data.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlParseException" /> avec des données sérialisées.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Objet qui contient les données sérialisées de l'objet.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Informations contextuelles sur la source ou la destination.</param>
    </member>
    <member name="M:System.Xaml.XamlParseException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlParseException&quot; /&gt; class with a specified message that describes the error.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlParseException" /> avec un message spécifié décrivant l'erreur.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Message décrivant l'exception. L'appelant de ce constructeur doit vérifier que cette chaîne a été localisée pour la culture en cours du système.</param>
    </member>
    <member name="M:System.Xaml.XamlParseException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlParseException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlParseException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Message décrivant l'exception. L'appelant de ce constructeur doit vérifier que cette chaîne a été localisée pour la culture en cours du système.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Exception ayant provoqué l'exception actuelle. Si le paramètre <paramref name="innerException" /> n'est pas <see langword="null" />, l'exception actuelle est levée dans un bloc <see langword="catch" /> qui gère l'exception interne.</param>
    </member>
    <member name="T:System.Xaml.XamlReader">
      <summary vsli:raw="Provides base definitions for classes that consume XAML input and produce XAML node streams.">Fournit les définitions de base des classes qui consomment des entrées XAML et produisent des flux de données de nœud XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlReader.#ctor">
      <summary vsli:raw="Initializes the &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; class.">Initialise la classe <see cref="T:System.Xaml.XamlReader" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlReader.Close">
      <summary vsli:raw="Closes the XAML node stream.">Ferme le flux de données de nœud XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlReader.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt;, and optionally, releases the managed resources.">Libère les ressources non managées utilisées par <see cref="T:System.Xaml.XamlReader" />, et libère éventuellement les ressources managées.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release the managed resources; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour libérer les ressources managées ; sinon, <see langword="false" />.</param>
    </member>
    <member name="P:System.Xaml.XamlReader.IsDisposed">
      <summary vsli:raw="Gets whether &lt;see cref=&quot;M:System.Xaml.XamlReader.Dispose(System.Boolean)&quot; /&gt; has been called.">Obtient une valeur indiquant si <see cref="M:System.Xaml.XamlReader.Dispose(System.Boolean)" /> a été appelé.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.Xaml.XamlReader.Dispose(System.Boolean)&quot; /&gt; has been called; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="M:System.Xaml.XamlReader.Dispose(System.Boolean)" /> a été appelé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.IsEof">
      <summary vsli:raw="When implemented in a derived class, gets a value that reports whether the reader position is at end-of-file.">En cas d'implémentation dans une classe dérivée, obtient une valeur qui indique si la position du lecteur est à la fin du fichier.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the position is at the conceptual end-of-file of the XAML node stream; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la position est à la fin conceptuelle du fichier du flux de nœud XAML ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.Member">
      <summary vsli:raw="When implemented in a derived class, gets the current member at the reader position, if the reader position is on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.StartMember&quot; /&gt;.">En cas d'implémentation dans une classe dérivée, obtient le membre actuel à la position du lecteur, si la position du lecteur est sur un <see cref="F:System.Xaml.XamlNodeType.StartMember" />.</summary>
      <returns vsli:raw="The current member; or &lt;see langword=&quot;null&quot; /&gt;, if the reader position is not on a member.">Membre actuel ; ou <see langword="null" /> si la position du lecteur ne se trouve pas sur un membre.</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.Namespace">
      <summary vsli:raw="When implemented in a derived class, gets the XAML namespace information from the current node.">En cas d'implémentation dans une classe dérivée, obtient des informations sur l'espace de noms XAML du nœud actuel.</summary>
      <returns vsli:raw="The XAML namespace information, if it is available; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Informations sur l'espace de noms XAML, si elles sont disponibles ; sinon, <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.NodeType">
      <summary vsli:raw="When implemented in a derived class, gets the type of the current node.">En cas d'implémentation dans une classe dérivée, obtient le type du nœud actuel.</summary>
      <returns vsli:raw="A value of the &lt;see cref=&quot;T:System.Xaml.XamlNodeType&quot; /&gt; enumeration.">Valeur de l'énumération <see cref="T:System.Xaml.XamlNodeType" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlReader.Read">
      <summary vsli:raw="When implemented in a derived class, provides the next XAML node from the source, if a node is available.">En cas d'implémentation dans une classe dérivée, fournit le nœud XAML suivant depuis la source, si un nœud est disponible.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a node is available; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si un nœud est disponible ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlReader.ReadSubtree">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; that is based on the current &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt;, where the returned &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; is used to iterate through a subtree of the XAML node structure.">Retourne un <see cref="T:System.Xaml.XamlReader" /> qui est basé sur le <see cref="T:System.Xaml.XamlReader" />actuel, où le <see cref="T:System.Xaml.XamlReader" /> retourné est utilisé pour itérer au sein d'une sous-arborescence de la structure de nœud XAML.</summary>
      <returns vsli:raw="A new XAML reader instance for the subtree.">Nouvelle instance de lecteur XAML pour la sous-arborescence.</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.SchemaContext">
      <summary vsli:raw="When implemented in a derived class, gets an object that provides XAML schema context information for the information set.">En cas d'implémentation dans une classe dérivée, obtient un objet qui fournit des informations de contexte de schéma XAML pour le jeu d'informations.</summary>
      <returns vsli:raw="An object that provides XAML schema context information for the information set.">Objet qui fournit des informations de contexte de schéma XAML pour le jeu d'informations.</returns>
    </member>
    <member name="M:System.Xaml.XamlReader.Skip">
      <summary vsli:raw="Skips the current node and advances the reader position to the next node.">Ignore le nœud actuel et avance la position du lecteur au nœud suivant.</summary>
    </member>
    <member name="M:System.Xaml.XamlReader.System#IDisposable#Dispose">
      <summary vsli:raw="Releases all resources used by the current instance of the &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; class.">Libère toutes les ressources utilisées par l'instance actuelle de la classe <see cref="T:System.Xaml.XamlReader" />.</summary>
    </member>
    <member name="P:System.Xaml.XamlReader.Type">
      <summary vsli:raw="When implemented in a derived class, gets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the current node.">En cas d'implémentation dans une classe dérivée, obtient le <see cref="T:System.Xaml.XamlType" /> du nœud actuel.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the current node; or &lt;see langword=&quot;null&quot; /&gt;, if the current reader position is not on an object.">
        <see cref="T:System.Xaml.XamlType" /> du nœud actuel ; ou <see langword="null" /> si la position actuelle du lecteur n'est pas sur un objet.</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.Value">
      <summary vsli:raw="When implemented in a derived class, gets the value of the current node.">En cas d'implémentation dans une classe dérivée, obtient la valeur du nœud actuel.</summary>
      <returns vsli:raw="The value of the current node; or &lt;see langword=&quot;null&quot; /&gt;, if the current reader position is not on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.Value&quot; /&gt; node type.">Valeur du nœud actuel ; ou <see langword="null" /> si la position actuelle du lecteur n'est pas sur un type de nœud <see cref="F:System.Xaml.XamlNodeType.Value" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlReaderSettings">
      <summary vsli:raw="Specifies processing rules or option settings for a &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; implementation.">Spécifie les règles de traitement ou les paramètres d'option pour une implémentation de <see cref="T:System.Xaml.XamlReader" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlReaderSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlReaderSettings&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlReaderSettings" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlReaderSettings.#ctor(System.Xaml.XamlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlReaderSettings&quot; /&gt; class based on values in another &lt;see cref=&quot;T:System.Xaml.XamlReaderSettings&quot; /&gt; object.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlReaderSettings" /> en fonction des valeurs contenues dans un autre objet <see cref="T:System.Xaml.XamlReaderSettings" />.</summary>
      <param name="settings" vsli:raw="An existing &lt;see cref=&quot;T:System.Xaml.XamlReaderSettings&quot; /&gt; object.">Objet <see cref="T:System.Xaml.XamlReaderSettings" /> existant.</param>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.AllowProtectedMembersOnRoot">
      <summary vsli:raw="Gets or sets a value that indicates whether the root object may include members that have a protected code access model when it reports the XAML type representation.">Obtient ou définit une valeur qui indique si l'objet racine peut inclure des membres associés à un modèle d'accès au code protégé lorsqu'il fait état de la représentation de type XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the root object may include members that have a protected code access model; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet racine peut inclure des membres associés à un modèle d'accès au code protégé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.BaseUri">
      <summary vsli:raw="Gets or sets the base URI that is used to resolve relative paths.">Obtient ou définit l'URI de base utilisé pour résoudre les chemins d'accès relatifs.</summary>
      <returns vsli:raw="The base URI to use. The default is &lt;see langword=&quot;null&quot; /&gt;.">URI de base à utiliser. La valeur par défaut est <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.IgnoreUidsOnPropertyElements">
      <summary vsli:raw="Gets or sets a value that specifies whether the XAML reader should ignore values for &lt;see langword=&quot;x:Uid&quot; /&gt; attributes that exist on property elements.">Obtient ou définit une valeur qui spécifie si le lecteur XAML doit ignorer les valeurs des attributs <see langword="x:Uid" /> qui existent sur les éléments de propriété.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader should ignore values for &lt;see langword=&quot;x:Uid&quot; /&gt; attributes on property elements. &lt;see langword=&quot;false&quot; /&gt; if the reader should process &lt;see langword=&quot;x:Uid&quot; /&gt; attributes on property elements. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le lecteur doit ignorer les valeurs des attributs <see langword="x:Uid" /> placés sur les éléments de propriété. <see langword="false" /> si le lecteur doit traiter les attributs <see langword="x:Uid" /> placés sur les éléments de propriété. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.LocalAssembly">
      <summary vsli:raw="Gets or sets the object that represents the current local assembly for processing. This assembly information is used for calls to helper APIs such as &lt;see cref=&quot;M:System.Xaml.XamlType.GetAllMembers&quot; /&gt;.">Obtient ou définit l'objet qui représente l'assembly local actuel pour le traitement. Ces informations d'assembly sont utilisées pour les appels aux API d'assistance telles que <see cref="M:System.Xaml.XamlType.GetAllMembers" />.</summary>
      <returns vsli:raw="A CLR reflection &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt; object.">Objet <see cref="T:System.Reflection.Assembly" /> de réflexion CLR.</returns>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.ProvideLineInfo">
      <summary vsli:raw="Gets or sets a value that specifies whether the reader can provide line number and position.">Obtient ou définit une valeur qui spécifie si le lecteur peut fournir des numéros et des positions de ligne.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader can provide line number and position information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le lecteur peut fournir des numéros et des positions de ligne ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.ValuesMustBeString">
      <summary vsli:raw="Gets or sets a value that specifies whether the reader enforces that all &lt;see langword=&quot;Value&quot; /&gt; nodes are processed as a &lt;see langword=&quot;String&quot; /&gt; type.">Obtient ou définit une valeur qui spécifie si le lecteur considère que tous les nœuds <see langword="Value" /> doivent être traités comme étant de type <see langword="String" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader enforces that only &lt;see langword=&quot;String&quot; /&gt; is contained in &lt;see langword=&quot;Value&quot; /&gt; nodes; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le lecteur fait en sorte que seule une <see langword="String" /> soit contenue dans les nœuds <see langword="Value" /> ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlSchemaContext">
      <summary vsli:raw="Defines a reusable context for interpreting or mapping XAML types, and the types in the assemblies that underlie them.">Définit un contexte réutilisable pour l'interprétation ou le mappage des types XAML, ainsi que des types sous-jacents dans les assemblys.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlSchemaContext" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; class, based on a set of reference assemblies.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlSchemaContext" /> en fonction d'un jeu d'assemblys de référence.</summary>
      <param name="referenceAssemblies" vsli:raw="An enumerable set of assembly information items. Each assembly information item is specified by an &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt; value.">Jeu énumérable d'éléments d'informations sur l'assembly. Chaque élément d'informations de l'assembly est spécifié par une valeur <see cref="T:System.Reflection.Assembly" />.</param>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Xaml.XamlSchemaContextSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; class, based on a set of reference assemblies and a settings object.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlSchemaContext" /> en fonction d'un jeu d'assemblys de référence et d'un objet de paramètres.</summary>
      <param name="referenceAssemblies" vsli:raw="An enumerable set of assembly information. Each assembly information item is specified by an &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt; value.">Jeu énumérable d'informations sur l'assembly. Chaque élément d'informations de l'assembly est spécifié par une valeur <see cref="T:System.Reflection.Assembly" />.</param>
      <param name="settings" vsli:raw="The settings object to use to construct the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt;.">Objet de paramètres à utiliser pour construire le <see cref="T:System.Xaml.XamlSchemaContext" />.</param>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.#ctor(System.Xaml.XamlSchemaContextSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; class, based on a settings object.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlSchemaContext" /> en fonction d'un objet de paramètres.</summary>
      <param name="settings" vsli:raw="The settings object to use to construct the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt;.">Objet de paramètres à utiliser pour construire le <see cref="T:System.Xaml.XamlSchemaContext" />.</param>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.Finalize">
      <summary vsli:raw="Provides a nonstandard &lt;see langword=&quot;Finalize&quot; /&gt; implementation that does not invoke &lt;see langword=&quot;Dispose&quot; /&gt;.">Fournit une implémentation <see langword="Finalize" /> non standard qui n'appelle pas <see langword="Dispose" />.</summary>
    </member>
    <member name="P:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces">
      <summary vsli:raw="Gets a value that specifies whether a XAML schema and its context use fully qualified assembly names in the values that are returned by the lookup API.">Obtient une valeur qui spécifie si un schéma XAML et son contexte utilisent des noms d'assembly qualifiés complets dans les valeurs qui sont retournées par l'API de recherche.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a XAML schema and its context use fully qualified assembly names in the values that are returned by the lookup APIs; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si un schéma XAML et son contexte utilisent des noms d'assembly qualifiés complets dans les valeurs qui sont retournées par les API de recherche ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces">
      <summary vsli:raw="Searches the assemblies that are held by this &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; and returns a set of namespaces.">Recherche les assemblys qui sont détenus par ce <see cref="T:System.Xaml.XamlSchemaContext" /> et retourne un jeu d'espaces de noms.</summary>
      <returns vsli:raw="An enumerable set of namespace identifiers. These identifiers are provided as strings.">Jeu énumérable d'identificateurs d'espace de noms. Ces identificateurs sont fournis sous forme de chaînes.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetAllXamlTypes(System.String)">
      <summary vsli:raw="Searches the assemblies that are held by this &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; and returns a set of types from the specified XAML namespace.">Recherche les assemblys qui sont détenus par ce <see cref="T:System.Xaml.XamlSchemaContext" /> et retourne un jeu de types à partir de l'espace de noms XAML spécifié.</summary>
      <param name="xamlNamespace" vsli:raw="The XAML namespace to return types for.">Espace de noms XAML pour lequel retourner les types.</param>
      <returns vsli:raw="An enumerable set of XAML types. Each XAML type in the set is represented by a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object.">Jeu énumérable de types XAML. Chaque type XAML du jeu est représenté par un objet <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetPreferredPrefix(System.String)">
      <summary vsli:raw="Gets a string that is reported as the preferred prefix for consumers to use when they map the specified XAML namespace.">Obtient une chaîne signalée comme préfixe préféré à utiliser par les consommateurs lorsqu'ils mappent l'espace de noms XAML spécifié.</summary>
      <param name="xmlns" vsli:raw="The XAML namespace to get the preferred prefix for.">Espace de noms XAML pour lequel obtenir le préfixe préféré.</param>
      <returns vsli:raw="A string that consumers should use when they map the specified XAML namespace for markup use.">Chaîne que les consommateurs doivent utiliser lorsqu'ils mappent l'espace de noms XAML spécifié pour l'utilisation de balises.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlns&quot; /&gt; is null.">
        <paramref name="xmlns" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetValueConverter``1(System.Type,System.Xaml.XamlType)">
      <summary vsli:raw="Returns a value converter that can convert to the requested &lt;paramref name=&quot;targetType&quot; /&gt;.">Retourne un convertisseur de valeurs qui peut effectuer une conversion dans le <paramref name="targetType" /> demandé.</summary>
      <param name="converterType" vsli:raw="The converter implementation.">Implémentation du convertisseur.</param>
      <param name="targetType" vsli:raw="The desired destination type for the converter.">Type de destination souhaité pour le convertisseur.</param>
      <typeparam name="TConverterBase" vsli:raw="The specific converter base class.">Classe de base du convertisseur spécifique.</typeparam>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with a constraint that matches the constraint that is put on the method call.">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> comportant une contrainte qui correspond à la contrainte mise sur l'appel de méthode.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetXamlDirective(System.String,System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; value that represents a directive, either for the XAML language or for a particular implementation.">Retourne une valeur <see cref="T:System.Xaml.XamlDirective" /> qui représente une directive, pour le langage XAML ou pour une implémentation particulière.</summary>
      <param name="xamlNamespace" vsli:raw="The XAML namespace that contains the named directive.">Espace de noms XAML qui contient la directive nommée.</param>
      <param name="name" vsli:raw="The name of the directive to obtain.">Nom de la directive à obtenir.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; object that represents the requested directive.">Objet <see cref="T:System.Xaml.XamlDirective" /> qui représente la directive demandée.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlNamespace&quot; /&gt; or &lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xamlNamespace" /> ou <paramref name="name" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetXamlType(System.String,System.String,System.Xaml.XamlType[])">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that is based on a XAML namespace and a string for the type name. This signature can specify the type arguments for cases where the desired type is a generic type.">Retourne un <see cref="T:System.Xaml.XamlType" /> basé sur un espace de noms XAML et une chaîne de nom de type. Cette signature peut spécifier les arguments de type dans les cas où le type souhaité est un type générique.</summary>
      <param name="xamlNamespace" vsli:raw="The XAML namespace that contains the desired type.">Espace de noms XAML qui contient le type souhaité.</param>
      <param name="name" vsli:raw="The string name of the desired type.">Nom de chaîne du type souhaité.</param>
      <param name="typeArguments" vsli:raw="The initialization type arguments for a generic type.">Arguments de type d'initialisation pour un type générique.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that matches the input criteria.">
        <see cref="T:System.Xaml.XamlType" /> qui correspond aux critères d'entrée.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Type)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that is based on a CLR type identifier.">Retourne un <see cref="T:System.Xaml.XamlType" /> qui est basé sur un identificateur de type CLR.</summary>
      <param name="type" vsli:raw="The type to get a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for.">Type pour lequel obtenir un <see cref="T:System.Xaml.XamlType" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that matches the input &lt;paramref name=&quot;type&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlType" /> qui correspond au <paramref name="type" /> d'entrée.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Xaml.Schema.XamlTypeName)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that is based on a XAML system type name.">Retourne un <see cref="T:System.Xaml.XamlType" /> qui est basé sur un nom de type de système XAML.</summary>
      <param name="xamlTypeName" vsli:raw="The XAML type name to get a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for.">Nom de type XAML pour lequel obtenir un <see cref="T:System.Xaml.XamlType" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that matches the input &lt;paramref name=&quot;xamlTypeName&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlType" /> qui correspond au <paramref name="xamlTypeName" /> d'entrée.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A component of &lt;paramref name=&quot;xamlTypeName&quot; /&gt; (&lt;see cref=&quot;P:System.Xaml.Schema.XamlTypeName.Name&quot; /&gt; or &lt;see cref=&quot;P:System.Xaml.Schema.XamlTypeName.Namespace&quot; /&gt;) is &lt;see langword=&quot;null&quot; /&gt;.">Un composant de <paramref name="xamlTypeName" /> (<see cref="P:System.Xaml.Schema.XamlTypeName.Name" /> ou <see cref="P:System.Xaml.Schema.XamlTypeName.Namespace" />) est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlTypeName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xamlTypeName" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.OnAssemblyResolve(System.String)">
      <summary vsli:raw="Called when operations use this schema context to resolve an assembly that is required in order to resolve the XAML namespaces that it contains.">Appelé lorsque les opérations utilisent ce contexte de schéma pour résoudre un assembly requis pour résoudre les espaces de noms XAML qu'il contient.</summary>
      <param name="assemblyName" vsli:raw="The name of the assembly to load.">Nom de l'assembly à charger.</param>
      <returns vsli:raw="The resolved assembly.">Assembly résolu.</returns>
    </member>
    <member name="P:System.Xaml.XamlSchemaContext.ReferenceAssemblies">
      <summary vsli:raw="Gets an enumerable set of reference assemblies for the XAML schema context.">Obtient un jeu énumérable d'assemblys de référence pour le contexte de schéma XAML.</summary>
      <returns vsli:raw="An enumerable set of reference assemblies for the schema context. Each assembly information item is specified by an &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt; value.">Jeu énumérable d'assemblys de référence pour le contexte de schéma. Chaque élément d'informations de l'assembly est spécifié par une valeur <see cref="T:System.Reflection.Assembly" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity">
      <summary vsli:raw="Gets a value that specifies whether a XAML schema and its context support markup extensions that have two constructors with the same arity (number of input parameters).">Obtient une valeur qui spécifie si un schéma XAML et son contexte prennent en charge les extensions de balisage qui comportent deux constructeurs avec la même arité (nombre de paramètres d'entrée).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the schema context permits markup extensions that have duplicate arity; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le contexte de schéma autorise les extensions de balisage avec arité en double ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)">
      <summary vsli:raw="Returns the success or failure of a request for a compatible XAML namespace. A successful request reports that XAML namespace as an out parameter.">Retourne des informations indiquant la réussite ou l'échec d'une demande d'espace de noms XAML compatible. Une demande réussie signale cet espace de noms XAML en tant que paramètre de sortie.</summary>
      <param name="xamlNamespace" vsli:raw="The &lt;see langword=&quot;xmlns&quot; /&gt; string for the XAML namespace to be checked for a compatible result.">Chaîne <see langword="xmlns" /> de l'espace de noms XAML pour lequel rechercher un résultat compatible.</param>
      <param name="compatibleNamespace" vsli:raw="When this method returns, the &lt;see langword=&quot;xmlns&quot; /&gt; string for a compatible XAML namespace request. This might be identical to &lt;paramref name=&quot;xamlNamespace&quot; /&gt; if the method returns &lt;see langword=&quot;false&quot; /&gt;.">Cette méthode retourne la chaîne <see langword="xmlns" /> pour une demande d'espace de noms XAML compatible. Peut être identique à <paramref name="xamlNamespace" /> si la méthode retourne la valeur <see langword="false" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;compatibleNamespace&quot; /&gt; contains a usable result; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="compatibleNamespace" /> contient un résultat utilisable ; sinon <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlNamespace&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xamlNamespace" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="T:System.Xaml.XamlSchemaContextSettings">
      <summary vsli:raw="Provides optional settings for a &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt;.">Fournit des paramètres facultatifs pour un <see cref="T:System.Xaml.XamlSchemaContext" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaContextSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContextSettings&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlSchemaContextSettings" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaContextSettings.#ctor(System.Xaml.XamlSchemaContextSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContextSettings&quot; /&gt; class by copying the values of an existing &lt;see cref=&quot;T:System.Xaml.XamlSchemaContextSettings&quot; /&gt; instance.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlSchemaContextSettings" /> en copiant les valeurs d'une instance de <see cref="T:System.Xaml.XamlSchemaContextSettings" /> existante.</summary>
      <param name="settings" vsli:raw="An existing &lt;see cref=&quot;T:System.Xaml.XamlSchemaContextSettings&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlSchemaContextSettings" /> existant.</param>
    </member>
    <member name="P:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces">
      <summary vsli:raw="Gets or sets a value that specifies whether a XAML schema and its context use fully qualified assembly names in the values that are returned by the lookup API.">Obtient ou définit une valeur qui spécifie si un schéma XAML et son contexte utilisent des noms d'assembly qualifiés complets dans les valeurs qui sont retournées par l'API de recherche.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a XAML schema and its context use fully qualified assembly names in the values that are returned by the lookup APIs; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si un schéma XAML et son contexte utilisent des noms d'assembly qualifiés complets dans les valeurs qui sont retournées par les API de recherche ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity">
      <summary vsli:raw="Gets or sets a value that specifies whether a XAML schema context allows for markup extensions that have two constructors with the same arity (number of input parameters).">Obtient ou définit une valeur qui spécifie si un contexte de schéma XAML autorise les extensions de balisage qui comportent deux constructeurs avec la même arité (nombre de paramètres d'entrée).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the schema context allows for markup extensions that have duplicate arity; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le contexte de schéma autorise les extensions de balisage qui ont une arité en double ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlSchemaException">
      <summary vsli:raw="The exception that is thrown when a binding system or another schema representation system for XAML reports an exception to the schema context.">Exception levée lorsqu'un système de liaison ou un autre système de représentation de schéma pour XAML signale une exception au contexte de schéma.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaException&quot; /&gt; class with a system-supplied message that describes the error.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlSchemaException" /> avec un message système qui décrit l'erreur.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaException&quot; /&gt; class with serialized data.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlSchemaException" /> avec des données sérialisées.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Objet qui contient les données sérialisées de l'objet.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Informations contextuelles sur la source ou la destination.</param>
    </member>
    <member name="M:System.Xaml.XamlSchemaException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaException&quot; /&gt; class with a specified message that describes the error.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlSchemaException" /> avec un message spécifié décrivant l'erreur.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Message décrivant l'exception. L'appelant de ce constructeur doit vérifier que cette chaîne a été localisée pour la culture en cours du système.</param>
    </member>
    <member name="M:System.Xaml.XamlSchemaException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlSchemaException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Message décrivant l'exception. L'appelant de ce constructeur doit vérifier que cette chaîne a été localisée pour la culture en cours du système.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Exception ayant provoqué l'exception actuelle. Si le paramètre <paramref name="innerException" /> n'est pas <see langword="null" />, l'exception actuelle est levée dans un bloc <see langword="catch" /> qui gère l'exception interne.</param>
    </member>
    <member name="T:System.Xaml.XamlServices">
      <summary vsli:raw="Provides higher-level services (static methods) for the common XAML tasks of reading XAML and writing an object graph; or reading an object graph and writing XAML file output for serialization purposes.">Fournit des services de niveau supérieur (méthodes statiques) pour les tâches XAML communes de lecture XAML et d'écriture d'un graphique d'objet, ou la lecture d'un graphique d'objet et l'écriture de la sortie de fichier XAML à des fins de sérialisation.</summary>
    </member>
    <member name="M:System.Xaml.XamlServices.Load(System.IO.Stream)">
      <summary vsli:raw="Loads a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; source for a XAML reader and writes its output as an object graph.">Charge une source <see cref="T:System.IO.Stream" /> pour un lecteur XAML et écrit sa sortie sous la forme d'un graphique d'objet.</summary>
      <param name="stream" vsli:raw="The stream to load as input.">Flux de données à charger en tant qu'entrée.</param>
      <returns vsli:raw="The object graph that is written as output.">Graphique d'objet écrit en tant que sortie.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> construit par défaut est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Load(System.IO.TextReader)">
      <summary vsli:raw="Creates a XAML reader from a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;, and returns an object graph.">Crée un lecteur XAML à partir d'un <see cref="T:System.IO.TextReader" />, et retourne un graphique d'objet.</summary>
      <param name="textReader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; to use as the basis for the created &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.IO.TextReader" /> à utiliser en tant que base pour le <see cref="T:System.Xml.XmlReader" /> créé.</param>
      <returns vsli:raw="The object graph that is returned.">Graphique d'objet retourné.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;textReader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="textReader" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Load(System.String)">
      <summary vsli:raw="Loads a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; source for a XAML reader and returns an object graph.">Charge une source <see cref="T:System.IO.Stream" /> pour un lecteur XAML et retourne un graphique d'objet.</summary>
      <param name="fileName" vsli:raw="The file name to load and use as source.">Nom de fichier à charger et à utiliser en tant que source.</param>
      <returns vsli:raw="The object graph that is returned.">Graphique d'objet retourné.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;fileName&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">L'entrée <paramref name="fileName" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Load(System.Xaml.XamlReader)">
      <summary vsli:raw="Loads a specific XAML reader implementation and returns an object graph.">Charge une implémentation de lecteur XAML spécifique et retourne un graphique d'objet.</summary>
      <param name="xamlReader" vsli:raw="The XAML reader implementation to use as the reader for this &lt;see langword=&quot;Load&quot; /&gt; operation.">Implémentation du lecteur XAML à utiliser comme lecteur pour cette opération <see langword="Load" />.</param>
      <returns vsli:raw="The object graph that is returned.">Graphique d'objet retourné.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlReader&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">L'entrée <paramref name="xamlReader" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Load(System.Xml.XmlReader)">
      <summary vsli:raw="Loads a specific XML reader implementation and returns an object graph.">Charge une implémentation de lecteur XML spécifique et retourne un graphique d'objet.</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; implementation to use as the reader for this &lt;see langword=&quot;Load&quot; /&gt; operation.">Implémentation de <see cref="T:System.Xml.XmlReader" /> à utiliser comme lecteur pour cette opération <see langword="Load" />.</param>
      <returns vsli:raw="The output object graph.">Graphique d'objet de sortie.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlReader&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">L'entrée <paramref name="xamlReader" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Parse(System.String)">
      <summary vsli:raw="Reads XAML as string output and returns an object graph.">Lit le code XAML comme sortie de chaîne et retourne un graphique d'objet.</summary>
      <param name="xaml" vsli:raw="The XAML string input to parse.">Entrée de chaîne XAML à analyser.</param>
      <returns vsli:raw="The object graph that is returned.">Graphique d'objet retourné.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xaml&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">L'entrée <paramref name="xaml" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.IO.Stream,System.Object)">
      <summary vsli:raw="Processes a provided object graph into a XAML node representation and then into an output stream for serialization.">Traite un graphique d'objet pour en faire une représentation de nœud XAML, puis un flux de sortie pour la sérialisation.</summary>
      <param name="stream" vsli:raw="The destination stream.">Flux de données de destination.</param>
      <param name="instance" vsli:raw="The root of the object graph to process.">Racine du graphique d'objet à traiter.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">L'entrée <paramref name="stream" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.IO.TextWriter,System.Object)">
      <summary vsli:raw="Processes a provided object graph into a XAML node representation and then into an output that goes to the provided &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Traite un graphique d'objet fourni pour en faire une représentation de nœud XAML, puis une sortie transmise au <see cref="T:System.IO.TextWriter" /> fourni.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; that writes the output.">
        <see cref="T:System.IO.TextWriter" /> qui écrit la sortie.</param>
      <param name="instance" vsli:raw="The root of the object graph to process.">Racine du graphique d'objet à traiter.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;writer&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">L'entrée <paramref name="writer" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.Object)">
      <summary vsli:raw="Processes a provided object tree into a XAML node representation, and returns a string representation of the output XAML.">Traite une arborescence d'objets fournie pour en faire une représentation de nœud XAML, puis retourne une représentation sous forme de chaîne du code XAML de sortie.</summary>
      <param name="instance" vsli:raw="The root of the object graph to process.">Racine du graphique d'objet à traiter.</param>
      <returns vsli:raw="The XAML markup output as a string.">Sortie de balisage XAML sous forme de chaîne.</returns>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.String,System.Object)">
      <summary vsli:raw="Processes a provided object graph into a XAML node representation and then writes it to an output file at a provided location.">Traite un graphique d'objet fourni pour en faire une représentation de nœud XAML, puis l'écrit dans un fichier de sortie à un emplacement fourni.</summary>
      <param name="fileName" vsli:raw="The name and location of the file to write the output to.">Nom et emplacement du fichier dans lequel écrire la sortie.</param>
      <param name="instance" vsli:raw="The root of the object graph to process.">Racine du graphique d'objet à traiter.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;fileName&quot; /&gt; is an empty string.">
        <paramref name="fileName" /> est une chaîne vide.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;fileName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="fileName" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.Xaml.XamlWriter,System.Object)">
      <summary vsli:raw="Processes a provided object graph into a XAML node representation and then writes it to the provided XAML writer.">Traite un graphique d'objet fourni dans une représentation de nœud XAML, puis l'écrit dans le writer XAML fourni.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; implementation to use.">Implémentation de <see cref="T:System.Xaml.XamlWriter" /> à utiliser.</param>
      <param name="instance" vsli:raw="The root of the object graph to process.">Racine du graphique d'objet à traiter.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;writer&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">L'entrée <paramref name="writer" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Processes a provided object graph into a XAML node representation and then writes it to the provided &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Traite un graphique d'objet fourni pour en faire une représentation de nœud XAML, puis l'écrit dans le <see cref="T:System.Xml.XmlWriter" /> fourni.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; implementation to use.">Implémentation de <see cref="T:System.Xml.XmlWriter" /> à utiliser.</param>
      <param name="instance" vsli:raw="The root of the object graph to process.">Racine du graphique d'objet à traiter.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;writer&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">L'entrée <paramref name="writer" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter)">
      <summary vsli:raw="Connects a &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; and a &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; to use a common XAML node set intermediary. Potentially transforms the content, depending on the types of readers and writers that are provided.">Connecte un <see cref="T:System.Xaml.XamlReader" /> et un <see cref="T:System.Xaml.XamlWriter" /> pour utiliser un intermédiaire de jeu de nœuds XAML commun. Transforme potentiellement le contenu, en fonction des types de lecteurs et de writers fournis.</summary>
      <param name="xamlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; implementation to use.">Implémentation de <see cref="T:System.Xaml.XamlReader" /> à utiliser.</param>
      <param name="xamlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; to use.">
        <see cref="T:System.Xaml.XamlWriter" /> à utiliser.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlReader&quot; /&gt; or &lt;paramref name=&quot;xamlWriter&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">L'entrée de <paramref name="xamlReader" /> ou <paramref name="xamlWriter" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Xaml.XamlException" vsli:raw="The XAML schema context does not match between the provided &lt;paramref name=&quot;xamlReader&quot; /&gt; and &lt;paramref name=&quot;xamlWriter&quot; /&gt;.">Le contexte de schéma XAML ne correspond pas entre le <paramref name="xamlReader" /> fourni et <paramref name="xamlWriter" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter,System.Boolean)">
      <summary vsli:raw="Connects a &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; and a &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; to use a common XAML node set intermediary. Potentially transforms the content, depending on the types of readers and writers that are provided. Provides a parameter for specifying whether to close the writer after the call is completed.">Connecte un <see cref="T:System.Xaml.XamlReader" /> et un <see cref="T:System.Xaml.XamlWriter" /> pour utiliser un intermédiaire de jeu de nœuds XAML commun. Transforme potentiellement le contenu, en fonction des types de lecteurs et de writers fournis. Fournit un paramètre pour spécifier s'il faut fermer le writer une fois l'appel terminé.</summary>
      <param name="xamlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; implementation to use.">Implémentation de <see cref="T:System.Xaml.XamlReader" /> à utiliser.</param>
      <param name="xamlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; to use.">
        <see cref="T:System.Xaml.XamlWriter" /> à utiliser.</param>
      <param name="closeWriter" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to close the writer after the call is complete; &lt;see langword=&quot;false&quot; /&gt; to leave the writer active at the last written position.">
        <see langword="true" /> pour fermer le writer une fois l'appel terminé ; <see langword="false" /> pour laisser le writer actif à la dernière position écrite.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlReader&quot; /&gt; or &lt;paramref name=&quot;xamlWriter&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">L'entrée de <paramref name="xamlReader" /> ou <paramref name="xamlWriter" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Xaml.XamlException" vsli:raw="The XAML schema context does not match between the provided &lt;paramref name=&quot;xamlReader&quot; /&gt; and &lt;paramref name=&quot;xamlWriter&quot; /&gt;.">Le contexte de schéma XAML ne correspond pas entre le <paramref name="xamlReader" /> fourni et <paramref name="xamlWriter" />.</exception>
    </member>
    <member name="T:System.Xaml.XamlType">
      <summary vsli:raw="Reports information about XAML types as part of the overall XAML system that is implemented in .NET XAML Services.">Signale les informations relatives aux types XAML dans le cadre du système XAML général implémenté dans les services XAML .NET Framework.</summary>
    </member>
    <member name="M:System.Xaml.XamlType.#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; class based on a string name for the type.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlType" /> basée sur un nom de chaîne pour le type.</summary>
      <param name="typeName" vsli:raw="The name of the type to create.">Nom du type à créer.</param>
      <param name="typeArguments" vsli:raw="The type arguments for a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that represents a generic type. Can be (and often is) &lt;see langword=&quot;null&quot; /&gt;, which indicates that the represented type is not a generic type.">Arguments de type pour un <see cref="T:System.Xaml.XamlType" /> qui représente un type générique. Peut être (et est souvent) <see langword="null" />, ce qui indique que le type représenté n'est pas un type générique.</param>
      <param name="schemaContext" vsli:raw="XAML schema context for XAML readers and XAML writers.">Contexte de schéma XAML pour les lecteurs XAML et les writers XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or more of &lt;paramref name=&quot;typeName&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; are &lt;see langword=&quot;null&quot; /&gt;.">Un ou plusieurs <paramref name="typeName" /> ou <paramref name="schemaContext" /> sont <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlType.#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; class based on the XAML namespace and a string name for the type. This constructor is exclusively for analysis and XAML-node recording of type usages that are known to not have backing in the supporting type system and XAML schema context.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlType" /> basée sur l'espace de noms XAML et un nom de chaîne pour le type. Ce constructeur est exclusivement destiné à des fins d'analyse et d'enregistrement de nœuds XAML de types réputés pour ne pas avoir de stockage dans le système de type et le contexte de schéma XAML de prise en charge.</summary>
      <param name="unknownTypeNamespace" vsli:raw="The XAML namespace for the type, as a string.">Espace de noms XAML du type, sous forme de chaîne.</param>
      <param name="unknownTypeName" vsli:raw="The name of the type in the provided &lt;paramref name=&quot;unknownTypeNamespace&quot; /&gt; XAML namespace.">Nom du type dans l'espace de noms XAML <paramref name="unknownTypeNamespace" /> fourni.</param>
      <param name="typeArguments" vsli:raw="The type arguments for a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that represents a generic type. Can be (and often is) &lt;see langword=&quot;null&quot; /&gt;, which indicates that the represented type is not a generic type.">Arguments de type pour un <see cref="T:System.Xaml.XamlType" /> qui représente un type générique. Peut être (et est souvent) <see langword="null" />, ce qui indique que le type représenté n'est pas un type générique.</param>
      <param name="schemaContext" vsli:raw="XAML schema context for XAML readers or XAML writers.">Contexte de schéma XAML pour les lecteurs XAML ou les writers XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or more of &lt;paramref name=&quot;unknownTypeNamespace&quot; /&gt;, &lt;paramref name=&quot;unknownTypeName&quot; /&gt;, or &lt;paramref name=&quot;schemaContext&quot; /&gt; are &lt;see langword=&quot;null&quot; /&gt;.">Un ou plusieurs <paramref name="unknownTypeNamespace" />, <paramref name="unknownTypeName" /> ou <paramref name="schemaContext" /> sont <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; class based on the underlying CLR type information.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlType" /> en fonction des informations de type CLR sous-jacentes.</summary>
      <param name="underlyingType" vsli:raw="The underlying CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; for the XAML type to construct.">
        <see cref="T:System.Type" /> CLR sous-jacent pour le type XAML à construire.</param>
      <param name="schemaContext" vsli:raw="XAML schema context for XAML readers or XAML writers.">Contexte de schéma XAML pour les lecteurs XAML ou les writers XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or more of &lt;paramref name=&quot;underlyingType&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; are &lt;see langword=&quot;null&quot; /&gt;.">Un ou plusieurs <paramref name="underlyingType" /> ou <paramref name="schemaContext" /> sont <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlTypeInvoker)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; class based on underlying type information and a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; implementation.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlType" /> basée sur les informations de type sous-jacentes, ainsi qu'une implémentation de <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</summary>
      <param name="underlyingType" vsli:raw="The underlying type for the XAML type to construct.">Type CLR sous-jacent pour le type XAML à construire.</param>
      <param name="schemaContext" vsli:raw="XAML schema context for the XAML reader.">Contexte de schéma XAML pour le lecteur XAML.</param>
      <param name="invoker" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; implementation that handles run-time reflection calls against the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Implémentation de <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> qui gère les appels de réflexion au moment de l'exécution en fonction du <see cref="T:System.Xaml.XamlType" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or more of &lt;paramref name=&quot;underlyingType&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; are &lt;see langword=&quot;null&quot; /&gt;.">Un ou plusieurs <paramref name="underlyingType" /> ou <paramref name="schemaContext" /> sont <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlType.AllowedContentTypes">
      <summary vsli:raw="Gets a read-only collection of the types that are usable as the &lt;see cref=&quot;P:System.Xaml.XamlType.ContentProperty&quot; /&gt; value for this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Obtient une collection en lecture seule des types utilisables comme valeur <see cref="P:System.Xaml.XamlType.ContentProperty" /> pour ce <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A read-only collection of possible content types.">Collection en lecture seule des types de contenu possibles.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.BaseType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the immediate base type of this XAML type. Determination of this value is based on the underlying type of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; and schema context.">Obtient le <see cref="T:System.Xaml.XamlType" /> du type de base immédiat de ce type XAML. La détermination de cette valeur dépend du type sous-jacent de ce <see cref="T:System.Xaml.XamlType" /> et du contexte de schéma.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the immediate base type of this XAML type.">
        <see cref="T:System.Xaml.XamlType" /> du type de base immédiat de ce type XAML.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.CanAssignTo(System.Xaml.XamlType)">
      <summary vsli:raw="Returns a value that indicates whether an instance of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; has the specified &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; in its list of assignable types.">Retourne une valeur qui indique si une instance de ce <see cref="T:System.Xaml.XamlType" /> a le <see cref="T:System.Xaml.XamlType" /> spécifié dans sa liste de types assignables.</summary>
      <param name="xamlType" vsli:raw="The type to check against the current &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; .">Type avec lequel comparer le <see cref="T:System.Xaml.XamlType" /> actuel.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;xamlType&quot; /&gt; is in the assignable types list; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="xamlType" /> figure dans la liste des types assignables ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.ConstructionRequiresArguments">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; must have arguments (generic constraints through &lt;see langword=&quot;x:TypeArguments&quot; /&gt;, initialization text, or other XAML techniques) to construct a valid instance of the type.">Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> doit avoir des arguments (contraintes génériques par <see langword="x:TypeArguments" />, texte d'initialisation ou d'autres techniques XAML) pour construire une instance valide du type.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if construction of an instance requires some argument value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la construction d'une instance requiert une valeur d'argument ; sinon,  <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.ContentProperty">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; information for the content property of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Obtient les informations <see cref="T:System.Xaml.XamlMember" /> de la propriété de contenu de ce <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="&lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; information for the content property of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;. May be &lt;see langword=&quot;null&quot; /&gt; if no content property exists.">Informations <see cref="T:System.Xaml.XamlMember" /> de la propriété de contenu de ce <see cref="T:System.Xaml.XamlType" />. Peut être <see langword="null" /> en l'absence de propriété de contenu.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.ContentWrappers">
      <summary vsli:raw="Gets the types that are used to wrap content for a content property when it is not a strict type match, such as strings in a strongly typed &lt;see langword=&quot;Collection&amp;lt;T&amp;gt;&quot; /&gt;.">Obtient les types utilisés pour inclure dans un wrapper le contenu d'une propriété de contenu en l'absence de correspondance de type stricte, telle que les chaînes dans un <see langword="Collection&lt;T&gt;" />fortement typé.</summary>
      <returns vsli:raw="A read-only collection of possible content wrapper types; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Collection en lecture seule des types de wrapper de contenu possibles ; sinon, <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.DeferringLoader">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; that represents the deferred loading conversion behavior for this type.">Obtient le <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> qui représente le comportement de conversion de chargement différé pour ce type.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.Xaml.XamlDeferringLoader&quot; /&gt; constraint that represents the deferred loading behavior for this type.">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> avec la contrainte <see cref="T:System.Xaml.XamlDeferringLoader" /> qui représente le comportement de conversion de chargement différé pour ce type.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.Equals(System.Object)">
      <summary vsli:raw="Indicates whether the current object is equal to another object.">Indique si l'objet actif est égal à un autre objet.</summary>
      <param name="obj" vsli:raw="The object to compare with this object.">Objet à comparer à cet objet.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current object is equal to the &lt;paramref name=&quot;obj&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet en cours est égal au paramètre <paramref name="obj" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.Equals(System.Xaml.XamlType)">
      <summary vsli:raw="Indicates whether the current object is equal to another object of the same type.">Indique si l'objet actuel est égal à un autre objet du même type.</summary>
      <param name="other" vsli:raw="An object to compare with this object.">Objet à comparer avec cet objet.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current object is equal to the &lt;paramref name=&quot;other&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet en cours est égal au paramètre <paramref name="other" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetAliasedProperty(System.Xaml.XamlDirective)">
      <summary vsli:raw="Returns the XAML member that is aliased to a XAML directive by this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Retourne le membre XAML ajouté en alias à une directive XAML par ce <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="directive" vsli:raw="The directive for which to find the aliased member.">Directive pour laquelle rechercher le membre ajouté en alias.</param>
      <returns vsli:raw="The aliased member, if found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Membre ajouté en alias, s'il est trouvé ; sinon, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetAllAttachableMembers">
      <summary vsli:raw="Returns a collection that contains all the attachable properties that are exposed by this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Retourne une collection qui contient toutes les propriétés pouvant être attachées exposées par ce <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A collection that contains zero or more &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; values.">Collection qui contient zéro ou plusieurs valeurs <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetAllMembers">
      <summary vsli:raw="Returns a collection that contains all the members that are exposed by this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Retourne une collection qui contient tous les membres exposés par ce <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A collection that contains zero or more &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; values.">Collection qui contient zéro ou plusieurs valeurs <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetAttachableMember(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; representing a specific named attachable member of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Retourne un objet <see cref="T:System.Xaml.XamlMember" /> représentant un membre spécifiquement nommé pouvant être attaché de ce <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="name" vsli:raw="The name of the attachable member to get, in &lt;c&gt;ownerTypeName.MemberName&lt;/c&gt; form.">Nom du membre pouvant être attaché à obtenir, dans le formulaire <c>ownerTypeName.MemberName</c>.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; object for the requested attachable member; otherwise, &lt;see langword=&quot;null&quot; /&gt;, if no attachable member by that name exists.">Un objet <see cref="T:System.Xaml.XamlMember" /> pour le membre demandé pouvant être attaché ; sinon, <see langword="null" />, si aucun membre pouvant être attaché portant ce nom n’existe.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetHashCode">
      <summary vsli:raw="Returns the hash code for this object.">Retourne le code de hachage de cet objet.</summary>
      <returns vsli:raw="An integer hash code.">Code de hachage entier.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetMember(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; for a specific named member from this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Retourne un <see cref="T:System.Xaml.XamlMember" /> pour un membre nommé spécifique de ce <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="name" vsli:raw="The name of the member to get (as a string).">Nom du membre à obtenir (sous forme de chaîne).</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; information for the member, if such a member was found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Informations <see cref="T:System.Xaml.XamlMember" /> du membre, si un membre de ce type a été trouvé ; sinon, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetPositionalParameters(System.Int32)">
      <summary vsli:raw="For markup extension types, returns the types of the positional parameters that are supported in a specific markup extension usage for this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Pour les types d'extension de balisage, retourne les types des paramètres positionnels pris en charge dans une utilisation de l'extension de balisage spécifique à ce <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="parameterCount" vsli:raw="The count (arity) of the particular syntax or constructor mode that you want information about.">Nombre (arité) de la syntaxe ou du mode constructeur spécifique pour lequel ou laquelle vous voulez obtenir des informations.</param>
      <returns vsli:raw="A list of &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; values, where each &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; is the type for that position in the syntax. You must specify the types in the same order when you supply markup input for the markup extension.">Liste de valeurs <see cref="T:System.Xaml.XamlType" />, où chaque <see cref="T:System.Xaml.XamlType" /> correspond au type de cette position dans la syntaxe. Vous devez spécifier les types dans le même ordre lorsque vous fournissez l'entrée de balisage pour l'extension de balisage.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetXamlNamespaces">
      <summary vsli:raw="Returns a list of string identifiers for XAML namespaces that the type is included in.">Retourne une liste d'identificateurs de chaîne pour les espaces de noms XAML dans lesquels le type est inclus.</summary>
      <returns vsli:raw="A list of string values, where each string is the URI identifier for a XAML namespace.">Liste de valeurs de chaînes où chaque chaîne est l'identificateur URI d'un espace de noms XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.Invoker">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; implementation that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Obtient l'implémentation de <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> associée à ce <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; implementation that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Implémentation de <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> associée à ce <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsAmbient">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents an ambient type, as per the XAML definition.">Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente un type ambiant, suivant la définition XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents an ambient type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlType" /> représente un type ambiant ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsArray">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents an array.">Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente un tableau.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents an array; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlType" /> représente un tableau ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsCollection">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a collection.">Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente une collection.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlType" /> représente une collection ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsConstructible">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a constructible type, as per the XAML definition.">Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente un type constructible, selon la définition XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a constructible type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlType" /> représente un type constructible ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsDictionary">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a dictionary, as per the XAML definition.">Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente un dictionnaire, selon la définition XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a dictionary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlType" /> représente un dictionnaire ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsGeneric">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a generic type.">Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente un type générique.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a generic type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlType" /> représente un type générique ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsMarkupExtension">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a markup extension.">Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente une extension de balisage.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a markup extension; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlType" /> représente une extension de balisage ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsNameScope">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a XAML namescope, as per the XAML definition.">Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente une portée de nom XAML, selon la définition XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a XAML namescope; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlType" /> représente une portée de nom XAML ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsNameValid">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; is initialized by using a valid &lt;see langword=&quot;xamlName&quot; /&gt; string as its &lt;see cref=&quot;P:System.Xaml.XamlType.Name&quot; /&gt;.">Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> est initialisé en utilisant une chaîne <see langword="xamlName" /> valide comme <see cref="P:System.Xaml.XamlType.Name" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; is initialized by using a valid &lt;see langword=&quot;xamlName&quot; /&gt; string; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlType" /> est initialisé en utilisant une chaîne <see langword="xamlName" /> valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsNullable">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a nullable type, as per the XAML definition.">Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente un type Nullable, selon la définition XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a nullable type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlType" /> représente un type Nullable ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsPublic">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a public type in the relevant type system.">Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente un type public dans le système de type approprié.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a public type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlType" /> représente un type public ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsUnknown">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a type that cannot be resolved in the underlying type system.">Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente un type qui ne peut pas être résolu dans le système de type sous-jacent.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents an unresolvable type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlType" /> représente un type qui ne peut pas être résolu ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsUsableDuringInitialization">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; is built top-down during XAML initialization.">Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> est développé de haut en bas pendant l'initialisation XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; is built top-down during XAML initialization; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlType" /> est développé de haut en bas pendant l'initialisation XAML ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsWhitespaceSignificantCollection">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a whitespace significant collection, as per the XML definition.">Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente une collection d'espaces blancs significative, selon la définition XML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a whitespace significant collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlType" /> représente une collection d'espaces blancs significative ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsXData">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents XML &lt;see langword=&quot;XDATA&quot; /&gt;, as per the XAML definition.">Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente un <see langword="XDATA" /> XML, selon la définition XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents &lt;see langword=&quot;XDATA&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlType" /> représente <see langword="XDATA" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.ItemType">
      <summary vsli:raw="Gets a value that provides the type information for the &lt;see langword=&quot;Items&quot; /&gt; property of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Obtient une valeur qui fournit les informations de type pour la propriété <see langword="Items" /> de ce <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object for the type of the items in the collection; otherwise, &lt;see langword=&quot;null&quot; /&gt;, if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; does not represent a collection.">Objet <see cref="T:System.Xaml.XamlType" /> pour le type des éléments de la collection ; sinon, <see langword="null" /> si ce <see cref="T:System.Xaml.XamlType" /> ne représente pas une collection.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.KeyType">
      <summary vsli:raw="Gets a value that provides the type information for the key property of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;, if the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a dictionary.">Obtient une valeur qui fournit les informations de type pour la propriété de clé de ce <see cref="T:System.Xaml.XamlType" />, si le <see cref="T:System.Xaml.XamlType" /> représente un dictionnaire.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object for the type of the key for dictionary usage, otherwise, &lt;see langword=&quot;null&quot; /&gt;, if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; does not represent a dictionary.">Objet <see cref="T:System.Xaml.XamlType" /> pour le type de la clé pour l'utilisation de dictionnaire ; sinon, <see langword="null" /> si ce <see cref="T:System.Xaml.XamlType" /> ne représente pas un dictionnaire.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupAliasedProperty(System.Xaml.XamlDirective)">
      <summary vsli:raw="Returns the XAML member that is aliased to a XAML directive by this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Retourne le membre XAML ajouté en alias à une directive XAML par ce <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="directive" vsli:raw="The directive for which to find the aliased member.">Directive pour laquelle rechercher le membre ajouté en alias.</param>
      <returns vsli:raw="The aliased member, if found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Membre ajouté en alias, s'il est trouvé ; sinon, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupAllAttachableMembers">
      <summary vsli:raw="Returns an enumerable set that contains all attachable properties that are exposed by this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Retourne un jeu énumérable qui contient toutes les propriétés pouvant être attachées exposées par ce <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="An enumerable set that contains zero or more &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; values; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Jeu énumérable qui contient zéro, une ou plusieurs valeurs <see cref="T:System.Xaml.XamlMember" /> ; sinon, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupAllMembers">
      <summary vsli:raw="Returns an enumerable set that contains all the members that are exposed by this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Retourne un jeu énumérable qui contient tous les membres exposés par ce <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="An enumerable set that contains zero or more &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; values.">Jeu énumérable qui contient zéro ou plusieurs valeurs <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupAllowedContentTypes">
      <summary vsli:raw="Returns a list of the types that are usable as the &lt;see cref=&quot;P:System.Xaml.XamlType.ContentProperty&quot; /&gt; value for this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Retourne une liste des types utilisables comme valeur <see cref="P:System.Xaml.XamlType.ContentProperty" /> pour ce <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A list of possible content types.">Liste des types de contenu possibles.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupAttachableMember(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; for a specific named attachable from this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Retourne un <see cref="T:System.Xaml.XamlMember" /> pour une valeur spécifique nommée pouvant être attachée à partir de ce <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="name" vsli:raw="The name of the attachable member to get, in &lt;c&gt;ownerTypeName.MemberName&lt;/c&gt; form.">Nom du membre pouvant être attaché à obtenir, dans le formulaire <c>ownerTypeName.MemberName</c>.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; object for the requested attachable member; otherwise, &lt;see langword=&quot;null&quot; /&gt;, if no attachable member by that name exists.">Un objet <see cref="T:System.Xaml.XamlMember" /> pour le membre demandé pouvant être attaché ; sinon, <see langword="null" />, si aucun membre pouvant être attaché portant ce nom n’existe.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupBaseType">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the immediate base type of this XAML type. Determination of this value is based on the underlying type of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; and schema context.">Retourne le <see cref="T:System.Xaml.XamlType" /> du type de base immédiat de ce type XAML. La détermination de cette valeur dépend du type sous-jacent de ce <see cref="T:System.Xaml.XamlType" /> et du contexte de schéma.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the immediate base type of this XAML type.">
        <see cref="T:System.Xaml.XamlType" /> du type de base immédiat de ce type XAML.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupCollectionKind">
      <summary vsli:raw="Returns a value of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlCollectionKind&quot; /&gt; enumeration that declares which specific collection type this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; uses.">Retourne une valeur de l'énumération <see cref="T:System.Xaml.Schema.XamlCollectionKind" /> qui déclare le type de collection spécifique utilisé par ce <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A value of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlCollectionKind&quot; /&gt; enumeration.">Valeur de l'énumération <see cref="T:System.Xaml.Schema.XamlCollectionKind" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupConstructionRequiresArguments">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; must have arguments (generic constraints through &lt;see langword=&quot;x:TypeArguments&quot; /&gt;, initialization text, or other XAML techniques) to construct a valid instance of the type.">Retourne une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> doit avoir des arguments (contraintes génériques par <see langword="x:TypeArguments" />, texte d'initialisation ou d'autres techniques XAML) pour construire une instance valide du type.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if construction of an instance requires some argument value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la construction d'une instance requiert une valeur d'argument ; sinon, false</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupContentProperty">
      <summary vsli:raw="Returns &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; information for the content property of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Retourne les informations <see cref="T:System.Xaml.XamlMember" /> de la propriété de contenu de ce <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="&lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; information for the content property of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;. May be &lt;see langword=&quot;null&quot; /&gt;.">Informations <see cref="T:System.Xaml.XamlMember" /> de la propriété de contenu de ce <see cref="T:System.Xaml.XamlType" />. Peut avoir la valeur <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupContentWrappers">
      <summary vsli:raw="Gets a list of &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; values that represent the content wrappers for this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Obtient une liste de valeurs <see cref="T:System.Xaml.XamlType" /> qui représentent les wrappers de contenu pour ce <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A list of &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; values that represent the content wrappers for this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Liste de valeurs <see cref="T:System.Xaml.XamlType" /> qui représentent les wrappers de contenu pour ce <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupCustomAttributeProvider">
      <summary vsli:raw="When implemented in a derived class, returns an &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; implementation.">En cas d'implémentation dans une classe dérivée, retourne une implémentation de <see cref="T:System.Reflection.ICustomAttributeProvider" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; implementation.">Implémentation de <see cref="T:System.Reflection.ICustomAttributeProvider" /></returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupDeferringLoader">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; object, which is used for deferred loading of XAML-declared objects.">Retourne un objet <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> utilisé pour le chargement différé des objets déclarés par XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; that has a &lt;see cref=&quot;T:System.Xaml.XamlDeferringLoader&quot; /&gt; constraint on the generic.">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> qui a une contrainte <see cref="T:System.Xaml.XamlDeferringLoader" /> sur le générique.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupInvoker">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Retourne un <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> associé à ce <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; information for this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Informations <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> pour ce <see cref="T:System.Xaml.XamlType" /> ; sinon, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsAmbient">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents an ambient type, as per the XAML definition.">Retourne une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente un type ambiant, selon la définition XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents an ambient type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlType" /> représente un type ambiant ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsConstructible">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a constructible type, as per the XAML definition.">Retourne une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente un type constructible, selon la définition XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a constructible type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlType" /> représente un type constructible ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsMarkupExtension">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a markup extension.">Retourne une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente une extension de balisage.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a markup extension; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlType" /> représente une extension de balisage ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsNameScope">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a XAML namescope, as per the XAML definition.">Retourne une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente une portée de nom XAML, selon la définition XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a XAML namescope; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlType" /> représente une portée de nom XAML ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsNullable">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a nullable type, as per the XAML definition.">Retourne une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente un type Nullable, selon la définition XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a nullable type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlType" /> représente un type Nullable ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsPublic">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a public type in the relevant type system.">Retourne une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente un type public dans le système de type approprié.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a public type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlType" /> représente un type public ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsUnknown">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a type that cannot be resolved in the underlying type system.">Retourne une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente un type qui ne peut pas être résolu dans le système de type sous-jacent.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a nonresolvable type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlType" /> représente un type qui ne peut pas être résolu ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a whitespace significant collection, as per the XML definition.">Retourne une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente une collection d'espaces blancs significative, selon la définition XML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a white-space significant collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlType" /> représente une collection d'espaces blancs significative ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsXData">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents XML &lt;see langword=&quot;XDATA&quot; /&gt;, as per the XAML definition.">Retourne une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente un <see langword="XDATA" /> XML, selon la définition XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents &lt;see langword=&quot;XDATA&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlType" /> représente <see langword="XDATA" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupItemType">
      <summary vsli:raw="Returns a value that provides the type information for the &lt;see langword=&quot;Items&quot; /&gt; property of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Retourne une valeur qui fournit les informations de type pour la propriété <see langword="Items" /> de ce <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object for the type of the items in the collection; otherwise, &lt;see langword=&quot;null&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; does not represent a collection.">Objet <see cref="T:System.Xaml.XamlType" /> pour le type des éléments de la collection ; sinon, <see langword="null" /> si ce <see cref="T:System.Xaml.XamlType" /> ne représente pas une collection.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupKeyType">
      <summary vsli:raw="Returns a value that provides the type information for the key property of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;, if the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a dictionary.">Retourne une valeur qui fournit les informations de type pour la propriété de clé de ce <see cref="T:System.Xaml.XamlType" />, si le <see cref="T:System.Xaml.XamlType" /> représente un dictionnaire.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object for the type of the key for dictionary usage, or &lt;see langword=&quot;null&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; does not represent a dictionary.">Objet <see cref="T:System.Xaml.XamlType" /> pour le type de la clé pour l'utilisation de dictionnaire, ou <see langword="null" /> si ce <see cref="T:System.Xaml.XamlType" /> ne représente pas de dictionnaire.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupMarkupExtensionReturnType">
      <summary vsli:raw="Returns a value that provides the type information for the returned &lt;see langword=&quot;ProvideValue&quot; /&gt; of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;, if it represents a markup extension.">Retourne une valeur qui fournit les informations de type pour le <see langword="ProvideValue" /> retourné de ce <see cref="T:System.Xaml.XamlType" />, s'il représente une extension de balisage.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object for the return type for markup extension usage; otherwise, &lt;see langword=&quot;null&quot; /&gt;, if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; does not represent a markup extension.">Objet <see cref="T:System.Xaml.XamlType" /> pour le type de retour pour l'utilisation d'une extension de balisage ; sinon, <see langword="null" /> si ce <see cref="T:System.Xaml.XamlType" /> ne représente pas une extension de balisage.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupMember(System.String,System.Boolean)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; for a specific named member from this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Retourne le <see cref="T:System.Xaml.XamlMember" /> pour un membre nommé spécifique de ce <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="name" vsli:raw="The name of the member to get (as a string).">Nom du membre à obtenir (sous forme de chaîne).</param>
      <param name="skipReadOnlyCheck" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to return a member even if that member has a &lt;see langword=&quot;true&quot; /&gt; value for &lt;see cref=&quot;P:System.Xaml.XamlMember.IsReadOnly&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; to not return a &lt;see cref=&quot;P:System.Xaml.XamlMember.IsReadOnly&quot; /&gt; member. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour retourner un membre même si ce membre a une valeur <see langword="true" /> pour <see cref="P:System.Xaml.XamlMember.IsReadOnly" /> ; <see langword="false" /> pour ne pas retourner de membre <see cref="P:System.Xaml.XamlMember.IsReadOnly" />. La valeur par défaut est <see langword="false" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; information for the member, if a member was found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Informations <see cref="T:System.Xaml.XamlMember" /> du membre, s'il a été trouvé ; sinon, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupPositionalParameters(System.Int32)">
      <summary vsli:raw="For markup extension types, returns the types of the positional parameters that are supported in a specific markup extension usage for this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Pour les types d'extension de balisage, retourne les types des paramètres positionnels pris en charge dans une utilisation de l'extension de balisage spécifique à ce <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="parameterCount" vsli:raw="The count (arity) of the particular syntax or constructor mode that you want information about.">Nombre (arité) de la syntaxe ou du mode constructeur spécifique pour lequel ou laquelle vous voulez obtenir des informations.</param>
      <returns vsli:raw="A list of &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; values where each such &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; is the type for that position in the syntax. You must specify those types in the same order when supplying markup input for the markup extension.">Liste de valeurs <see cref="T:System.Xaml.XamlType" /> où chaque <see cref="T:System.Xaml.XamlType" /> est le type de cette position dans la syntaxe. Vous devez spécifier ces types dans le même ordre lorsque vous fournissez l'entrée de balisage pour l'extension de balisage.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupSetMarkupExtensionHandler">
      <summary vsli:raw="Returns a handler callback to use for the set operations of markup extensions.">Retourne un rappel du gestionnaire à utiliser pour les opérations ensemblistes d'extensions de balisage.</summary>
      <returns vsli:raw="A handler callback to use for the set operations of markup extensions.">Rappel du gestionnaire à utiliser pour les opérations ensemblistes d'extensions de balisage.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupSetTypeConverterHandler">
      <summary vsli:raw="Returns a handler to use for type converter setting cases.">Retourne un gestionnaire à utiliser pour le paramétrage du convertisseur de type.</summary>
      <returns vsli:raw="A handler to use for type converter setting cases.">Gestionnaire à utiliser pour le paramétrage du convertisseur de type.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupTrimSurroundingWhitespace">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; should be serialized using a mode that  trims surrounding whitespace.">Retourne une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> doit être sérialisé en utilisant un mode qui tronque l’espace blanc l’entourant.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; should be serialized in a mode that trims surrounding whitespace; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlType" /> doit être sérialisé en utilisant un mode qui tronque l'espace blanc autour ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupTypeConverter">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; that has a &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; constraint, which represents type-conversion behavior for values of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Retourne un <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> qui a une contrainte <see cref="T:System.ComponentModel.TypeConverter" />, laquelle représente le comportement de conversion de type pour les valeurs de ce <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; constraint that represents type-conversion behavior for values of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> avec la contrainte <see cref="T:System.ComponentModel.TypeConverter" /> qui représente le comportement de conversion de type pour les valeurs de ce <see cref="T:System.Xaml.XamlType" /> ; sinon, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupUnderlyingType">
      <summary vsli:raw="Returns the CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; that underlies this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Retourne le <see cref="T:System.Type" /> CLR sous-jacent de ce <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="The CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; that underlies this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Type" /> CLR sous-jacent de ce <see cref="T:System.Xaml.XamlType" /> ; sinon, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupUsableDuringInitialization">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; is built top-down during XAML initialization.">Retourne une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> est développé de haut en bas pendant l'initialisation XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; is built top-down during XAML initialization; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlType" /> est développé de haut en bas pendant l'initialisation XAML ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupValueSerializer">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; that has a &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; constraint, which represents value serialization behavior for values of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Retourne un <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> qui a une contrainte <see cref="T:System.Windows.Markup.ValueSerializer" />, laquelle représente le comportement de sérialisation pour les valeurs de ce <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; constraint that represents value serialization behavior for values of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> avec la contrainte <see cref="T:System.Windows.Markup.ValueSerializer" /> qui représente le comportement de sérialisation pour les valeurs de ce <see cref="T:System.Xaml.XamlType" /> ; sinon, <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.MarkupExtensionReturnType">
      <summary vsli:raw="Gets a value that provides the type information for the returned &lt;see langword=&quot;ProvideValue&quot; /&gt; of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;, if it represents a markup extension.">Obtient une valeur qui fournit les informations de type pour le <see langword="ProvideValue" /> retourné de ce <see cref="T:System.Xaml.XamlType" />, s'il représente une extension de balisage.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object for the return type for markup extension usage; otherwise, &lt;see langword=&quot;null&quot; /&gt;, if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; does not represent a markup extension.">Objet <see cref="T:System.Xaml.XamlType" /> pour le type de retour pour l'utilisation d'une extension de balisage ; sinon, <see langword="null" /> si ce <see cref="T:System.Xaml.XamlType" /> ne représente pas une extension de balisage.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.Name">
      <summary vsli:raw="Gets the string name of the type that this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents.">Obtient le nom de chaîne du type que ce <see cref="T:System.Xaml.XamlType" /> représente.</summary>
      <returns vsli:raw="The string name of this XAML type.">Nom de chaîne de ce type XAML.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.op_Equality(System.Xaml.XamlType,System.Xaml.XamlType)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; objects have the same value.">Détermine si deux objets <see cref="T:System.Xaml.XamlType" /> spécifiés ont la même valeur.</summary>
      <param name="xamlType1" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlType" /> ou <see langword="null" />.</param>
      <param name="xamlType2" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlType" /> ou <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;xamlType1&quot; /&gt; is the same as the value of &lt;paramref name=&quot;xamlType2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la valeur de <paramref name="xamlType1" /> est égale à la valeur de <paramref name="xamlType2" /> ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.op_Inequality(System.Xaml.XamlType,System.Xaml.XamlType)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; objects have different values.">Détermine si deux objets <see cref="T:System.Xaml.XamlType" /> spécifiés ont des valeurs différentes.</summary>
      <param name="xamlType1" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlType" /> ou <see langword="null" />.</param>
      <param name="xamlType2" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlType" /> ou <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;xamlType1&quot; /&gt; is different from the value of &lt;paramref name=&quot;xamlType2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la valeur de <paramref name="xamlType1" /> est différente de la valeur de <paramref name="xamlType2" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.PreferredXamlNamespace">
      <summary vsli:raw="Gets the single XAML namespace that is the primary XAML namespace for this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Obtient l'espace de noms XAML unique qui est l'espace de noms XAML principal de ce <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="The identifier, as a string, of the primary XAML namespace for this XAML type.">Identificateur, sous forme de chaîne, de l'espace de noms XAML principal de ce type XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.SchemaContext">
      <summary vsli:raw="Gets the active &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; for processing this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Obtient le <see cref="T:System.Xaml.XamlSchemaContext" /> actif pour le traitement de ce <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="The active &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; for processing this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlSchemaContext" /> actif pour le traitement de ce <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.ToString">
      <summary vsli:raw="Returns a string representation of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Retourne une représentation sous forme de chaîne de <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A string representation of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Représentation sous forme de chaîne de <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.TrimSurroundingWhitespace">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; has whitespace handling behavior for serialization that trims the surrounding whitespace in its content.">Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> a un comportement de gestion des espaces blancs pour la sérialisation qui tronque l'espace blanc autour du contenu.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a type that uses whitespace trimming; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si ce <see cref="T:System.Xaml.XamlType" /> représente un type qui utilise la troncation des espaces blancs ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.TypeArguments">
      <summary vsli:raw="Gets a list of type arguments for cases where this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a generic.">Obtient une liste d'arguments de type dans les cas où ce <see cref="T:System.Xaml.XamlType" /> représente un générique.</summary>
      <returns vsli:raw="A list of type argument types; otherwise, &lt;see langword=&quot;null&quot; /&gt;, if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; does not represent a generic.">Liste de types d'argument de type ; sinon, <see langword="null" /> si ce <see cref="T:System.Xaml.XamlType" /> ne représente pas un générique.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.TypeConverter">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; constraint that represents type conversion behavior for values of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Obtient un <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> avec une contrainte <see cref="T:System.ComponentModel.TypeConverter" /> qui représente le comportement de conversion de type pour les valeurs de ce <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; constraint that represents type conversion behavior for values of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> avec une contrainte <see cref="T:System.ComponentModel.TypeConverter" /> qui représente le comportement de conversion de type pour les valeurs de ce <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.UnderlyingType">
      <summary vsli:raw="Gets the CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; that underlies this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Obtient le <see cref="T:System.Type" /> CLR sous-jacent de ce <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="The CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; that underlies this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">
        <see cref="T:System.Type" /> CLR sous-jacent de ce <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.ValueSerializer">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; constraint that represents value serialization behavior for values of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Obtient un <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> avec une contrainte <see cref="T:System.Windows.Markup.ValueSerializer" /> qui représente le comportement de sérialisation pour les valeurs de ce <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; constraint that represents value serialization behavior for values of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> avec la contrainte <see cref="T:System.Windows.Markup.ValueSerializer" /> qui représente le comportement de sérialisation pour les valeurs de ce <see cref="T:System.Xaml.XamlType" /> ; sinon, <see langword="null" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlWriter">
      <summary vsli:raw="Provides default implementation and base class definitions for a XAML writer. This is not a working default XAML writer; you must either derive from &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; and implement its abstract members, or use an existing &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; derived class.">Fournit l'implémentation par défaut et les définitions de classe de base pour un writer XAML. Il ne s'agit pas d'un writer XAML par défaut actif ; vous devez le dériver de <see cref="T:System.Xaml.XamlWriter" /> et implémenter ses membres abstraits ou utiliser une classe dérivée <see cref="T:System.Xaml.XamlWriter" /> existante.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlWriter" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.Close">
      <summary vsli:raw="Closes the XAML writer object.">Ferme l'objet writer XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; and optionally releases the managed resources.">Libère les ressources non managées utilisées par <see cref="T:System.Xaml.XamlWriter" /> et libère éventuellement les ressources managées.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release the managed resources; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour libérer les ressources managées ; sinon, <see langword="false" />.</param>
    </member>
    <member name="P:System.Xaml.XamlWriter.IsDisposed">
      <summary vsli:raw="Gets whether &lt;see cref=&quot;M:System.Xaml.XamlWriter.Dispose(System.Boolean)&quot; /&gt; has been called.">Obtient une valeur indiquant si <see cref="M:System.Xaml.XamlWriter.Dispose(System.Boolean)" /> a été appelé.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.Xaml.XamlWriter.Dispose(System.Boolean)&quot; /&gt; has been called; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="M:System.Xaml.XamlWriter.Dispose(System.Boolean)" /> a été appelé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlWriter.SchemaContext">
      <summary vsli:raw="When implemented in a derived class, gets the active XAML schema context.">En cas d'implémentation dans une classe dérivée, obtient le contexte de schéma XAML actif.</summary>
      <returns vsli:raw="The active XAML schema context.">Contexte de schéma XAML actif.</returns>
    </member>
    <member name="M:System.Xaml.XamlWriter.System#IDisposable#Dispose">
      <summary vsli:raw="See &lt;see cref=&quot;M:System.IDisposable.Dispose&quot; /&gt;.">Consultez <see cref="M:System.IDisposable.Dispose" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteEndMember">
      <summary vsli:raw="When implemented in a derived class, produces the representation of an end member node.">En cas d'implémentation dans une classe dérivée, produit la représentation d'un nœud membre de fin.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteEndObject">
      <summary vsli:raw="When implemented in a derived class, produces the representation of an end object node.">En cas d'implémentation dans une classe dérivée, produit la représentation d'un nœud objet de fin.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteGetObject">
      <summary vsli:raw="When implemented in a derived class, produces an object for cases where the object is a default or implicit value of the property being set, instead of being specified as a discrete object value in the input XAML node set.">En cas d'implémentation dans une classe dérivée, produit un objet dans les cas où l'objet est une valeur par défaut ou une valeur implicite de la propriété qui est définie, plutôt que de le spécifier en tant que valeur d'objet discrète dans le jeu de nœuds XAML d'entrée.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
      <summary vsli:raw="When implemented in a derived class, writes a XAML namespace declaration node.">En cas d'implémentation dans une classe dérivée, écrit un nœud de déclaration d'espace de noms XAML.</summary>
      <param name="namespaceDeclaration" vsli:raw="The namespace declaration to write.">Déclaration d'espace de noms à écrire.</param>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteNode(System.Xaml.XamlReader)">
      <summary vsli:raw="Performs switching based on node type from the XAML reader (&lt;see cref=&quot;P:System.Xaml.XamlReader.NodeType&quot; /&gt;) and calls the relevant &lt;see langword=&quot;Write&quot; /&gt; method for the writer implementation.">Exécute la commutation selon le type de nœud du lecteur XAML (<see cref="P:System.Xaml.XamlReader.NodeType" />) et appelle la méthode <see langword="Write" /> concernée pour l'implémentation du writer.</summary>
      <param name="reader" vsli:raw="The reader to use for node determination.">Lecteur à utiliser pour la détermination de nœud.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;reader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="reader" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.NotImplementedException" vsli:raw="The default implementation encountered a &lt;see cref=&quot;T:System.Xaml.XamlNodeType&quot; /&gt; that is not in the default enumeration.">L'implémentation par défaut a rencontré un <see cref="T:System.Xaml.XamlNodeType" /> qui n'est pas dans l'énumération par défaut.</exception>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteStartMember(System.Xaml.XamlMember)">
      <summary vsli:raw="When implemented in a derived class, writes the representation of a start member node.">En cas d'implémentation dans une classe dérivée, écrit la représentation d'un nœud membre de début.</summary>
      <param name="xamlMember" vsli:raw="The member node to write.">Nœud membre à écrire.</param>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteStartObject(System.Xaml.XamlType)">
      <summary vsli:raw="When implemented in a derived class, writes the representation of a start object node.">En cas d'implémentation dans une classe dérivée, écrit la représentation d'un nœud objet de début.</summary>
      <param name="type" vsli:raw="The XAML type of the object to write.">Type XAML de l'objet à écrire.</param>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteValue(System.Object)">
      <summary vsli:raw="When implemented in a derived class, writes a value node.">En cas d'implémentation dans une classe dérivée, écrit un nœud valeur.</summary>
      <param name="value" vsli:raw="The value to write.">Valeur à écrire.</param>
    </member>
    <member name="T:System.Xaml.XamlWriterSettings">
      <summary vsli:raw="Provides initialization settings for a &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; implementation.">Fournit les paramètres d'initialisation pour une implémentation de <see cref="T:System.Xaml.XamlWriter" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriterSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlWriterSettings&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlWriterSettings" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriterSettings.#ctor(System.Xaml.XamlWriterSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlWriterSettings&quot; /&gt; class using another existing settings instance.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlWriterSettings" /> à l'aide d'une instance d'autres paramètres existants.</summary>
      <param name="settings" vsli:raw="An existing &lt;see cref=&quot;T:System.Xaml.XamlWriterSettings&quot; /&gt; object.">Objet <see cref="T:System.Xaml.XamlWriterSettings" /> existant.</param>
    </member>
    <member name="T:System.Xaml.XamlXmlReader">
      <summary vsli:raw="Processes XAML markup from XML files by using an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; intermediary, and produces a XAML node stream.">Traite le balisage XAML des fichiers XML par le biais d'un intermédiaire de <see cref="T:System.Xml.XmlReader" /> et produit un flux de données de nœud XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.Stream)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a stream.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlReader" /> basée sur un flux.</summary>
      <param name="stream" vsli:raw="The initial stream to load into the reader.">Flux initial à charger dans le lecteur.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a stream, and using a supplied XAML schema context.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlReader" />, en fonction d'un flux de données, à l'aide d'un contexte de schéma XAML fourni.</summary>
      <param name="stream" vsli:raw="The initial stream to load into the reader.">Flux initial à charger dans le lecteur.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for XAML processing.">Contexte du schéma XAML pour le traitement XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> ou <paramref name="schemaContext" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a stream, with a supplied XAML schema context and XAML-specific settings.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlReader" />, en fonction d'un flux de données, avec un contexte de schéma XAML fourni et des paramètres spécifiques au langage XAML.</summary>
      <param name="stream" vsli:raw="The initial stream to load into the reader.">Flux initial à charger dans le lecteur.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for XAML processing.">Contexte du schéma XAML pour le traitement XAML.</param>
      <param name="settings" vsli:raw="The specific reader settings.">Paramètres de lecteur spécifiques.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> ou <paramref name="schemaContext" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.Stream,System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a stream, with XAML-specific settings.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlReader" /> basée sur un flux de données, avec des paramètres spécifiques au langage XAML.</summary>
      <param name="stream" vsli:raw="The initial stream to load into the reader.">Flux initial à charger dans le lecteur.</param>
      <param name="settings" vsli:raw="The specific reader settings.">Paramètres de lecteur spécifiques.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.TextReader)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlReader" /> basée sur un <see cref="T:System.IO.TextReader" />.</summary>
      <param name="textReader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; to use for initialization.">
        <see cref="T:System.IO.TextReader" /> à utiliser pour l'initialisation.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;textReader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="textReader" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.TextReader,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;, with a supplied schema context and XAML-specific settings.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlReader" /> basée sur un<see cref="T:System.IO.TextReader" /> avec un contexte de schéma fourni et des paramètres spécifiques au langage XAML.</summary>
      <param name="textReader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; to use for initialization.">
        <see cref="T:System.IO.TextReader" /> à utiliser pour l'initialisation.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for XAML processing.">Contexte du schéma XAML pour le traitement XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;textReader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="textReader" /> est <see langword="null" />.  

ou - 
<paramref name="schemaContext" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.TextReader,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;, and using a supplied schema context and XAML-specific settings.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlReader" /> en fonction d'un<see cref="T:System.IO.TextReader" /> à l'aide du contexte de schéma fourni et des paramètres spécifiques au langage XAML.</summary>
      <param name="textReader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; to use for initialization.">
        <see cref="T:System.IO.TextReader" /> à utiliser pour l'initialisation.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for XAML processing.">Contexte du schéma XAML pour le traitement XAML.</param>
      <param name="settings" vsli:raw="The specific reader settings.">Paramètres de lecteur spécifiques.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;textReader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="textReader" /> a la valeur <see langword="null" />.  

ou - 
<paramref name="schemaContext" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.TextReader,System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;, and using XAML-specific settings.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlReader" /> en fonction d'un <see cref="T:System.IO.TextReader" />, à l'aide des paramètres spécifiques au langage XAML.</summary>
      <param name="textReader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; to use for initialization.">
        <see cref="T:System.IO.TextReader" /> à utiliser pour l'initialisation.</param>
      <param name="settings" vsli:raw="The specific reader settings.">Paramètres de lecteur spécifiques.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;textReader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="textReader" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a file name of a file to load into a default XML reader.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlReader" />, en fonction du nom d'un fichier à charger dans un lecteur XML par défaut.</summary>
      <param name="fileName" vsli:raw="The name of the XML file to load.">Nom du fichier XML à charger.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;fileName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="fileName" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.String,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on the file name of a file to load into a default XML reader, with a supplied XAML schema context.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlReader" />, en fonction du nom d'un fichier à charger dans un lecteur XML par défaut, avec un contexte de schéma XAML fourni.</summary>
      <param name="fileName" vsli:raw="The name of the file to load.">Nom du fichier à charger.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for XAML processing.">Contexte du schéma XAML pour le traitement XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;fileName&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="fileName" /> ou <paramref name="schemaContext" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.String,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on the file name of a file to load into a default XML reader, and using a supplied XAML schema context and XAML-specific reader settings.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlReader" />, en fonction du nom d'un fichier à charger dans un lecteur XML par défaut, à l'aide du contexte de schéma XAML fourni et des paramètres de lecteur spécifiques au langage XAML.</summary>
      <param name="fileName" vsli:raw="The name of the XML file to load.">Nom du fichier XML à charger.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for XAML processing.">Contexte du schéma XAML pour le traitement XAML.</param>
      <param name="settings" vsli:raw="The specific reader settings.">Paramètres de lecteur spécifiques.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;fileName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="fileName" /> a la valeur <see langword="null" />.  

ou - 
<paramref name="schemaContext" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.String,System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on the file name of a file to load into a default XML reader, and using XAML-specific reader settings.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlReader" />, en fonction du nom d'un fichier à charger dans un lecteur XML par défaut, à l'aide des paramètres de lecteur spécifiques au langage XAML.</summary>
      <param name="fileName" vsli:raw="The name of the XML file to load.">Nom du fichier XML à charger.</param>
      <param name="settings" vsli:raw="The specific reader settings.">Paramètres de lecteur spécifiques.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;fileName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="fileName" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.Xml.XmlReader)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class using the provided &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlReader" /> à l'aide du <see cref="T:System.Xml.XmlReader" /> fourni.</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to use as the intermediary XML processor.">
        <see cref="T:System.Xml.XmlReader" /> à utiliser comme processeur XML intermédiaire.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlReader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xmlReader" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.Xml.XmlReader,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class using the provided &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and schema context.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlReader" /> en utilisant le <see cref="T:System.Xml.XmlReader" /> et le contexte de schéma fournis.</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to use as the intermediary XML processor.">
        <see cref="T:System.Xml.XmlReader" /> à utiliser comme processeur XML intermédiaire.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for XAML processing.">Contexte du schéma XAML pour le traitement XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlReader&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xmlReader" /> ou <paramref name="schemaContext" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.Xml.XmlReader,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class using the provided &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;, schema context, and reader settings.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlReader" /> à l'aide du <see cref="T:System.Xml.XmlReader" />, du contexte de schéma et des paramètres de lecteur fournis.</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to use as the intermediary XML processor.">
        <see cref="T:System.Xml.XmlReader" /> à utiliser comme processeur XML intermédiaire.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for XAML processing.">Contexte du schéma XAML pour le traitement XAML.</param>
      <param name="settings" vsli:raw="The specific XAML reader settings.">Paramètres de lecteur XAML spécifiques.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlReader&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xmlReader" /> ou <paramref name="schemaContext" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.Xml.XmlReader,System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, using the provided &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and reader settings.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlReader" /> à l'aide du <see cref="T:System.Xml.XmlReader" /> et des paramètres de lecteur fournis.</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to use as the intermediary XML processor.">
        <see cref="T:System.Xml.XmlReader" /> à utiliser comme processeur XML intermédiaire.</param>
      <param name="settings" vsli:raw="The specific XAML reader settings.">Paramètres de lecteur XAML spécifiques.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlReader&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xmlReader" /> ou <paramref name="schemaContext" /> est <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.HasLineInfo">
      <summary vsli:raw="Gets a value that specifies whether line information is available.">Obtient une valeur qui spécifie si des informations de ligne sont disponibles.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if line information is available; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si des informations de ligne sont disponibles ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.IsEof">
      <summary vsli:raw="Gets a value that reports whether the reader position in the XAML node stream is at end-of-file.">Obtient une valeur qui signale si la position du lecteur dans le flux de nœud XAML est à la fin du fichier.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the position is at the conceptual end-of-file in the node stream; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la position est à la fin conceptuelle du fichier du flux de nœud XAML ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.LineNumber">
      <summary vsli:raw="Gets the line number to report.">Obtient le numéro de ligne à signaler.</summary>
      <returns vsli:raw="The line number to report.">Numéro de ligne à signaler.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.LinePosition">
      <summary vsli:raw="Gets the line position to report.">Obtient la position de ligne à signaler.</summary>
      <returns vsli:raw="The line position to report.">Position de ligne à signaler.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.Member">
      <summary vsli:raw="Gets the current member at the reader position, if the current reader position is on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.StartMember&quot; /&gt;.">Obtient le membre actuel à la position du lecteur, si la position actuelle du lecteur est sur un <see cref="F:System.Xaml.XamlNodeType.StartMember" />.</summary>
      <returns vsli:raw="The current member; or &lt;see langword=&quot;null&quot; /&gt;, if the current reader position is not on a member.">Membre actuel ou <see langword="null" /> si la position actuelle du lecteur n'est pas sur un membre.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.Namespace">
      <summary vsli:raw="Gets the XAML namespace from the current node.">Obtient l'espace de noms XAML du nœud actuel.</summary>
      <returns vsli:raw="The XAML namespace from the current node, if it is available; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Espace de noms XAML du nœud actuel, s'il est disponible ; sinon <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.NodeType">
      <summary vsli:raw="Gets the type of the current node.">Obtient le type du nœud actuel.</summary>
      <returns vsli:raw="A value of the &lt;see cref=&quot;T:System.Xaml.XamlNodeType&quot; /&gt; enumeration.">Valeur de l'énumération <see cref="T:System.Xaml.XamlNodeType" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.Read">
      <summary vsli:raw="Provides the next XAML node from the loaded source, if a XAML node is available.">Fournit le nœud XAML suivant de la source chargée, si un nœud XAML est disponible.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a node is available; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si un nœud est disponible ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.SchemaContext">
      <summary vsli:raw="Gets an object that provides schema information for the information set.">Obtient un objet qui fournit les informations de schéma pour le jeu d'informations.</summary>
      <returns vsli:raw="An object that provides schema information for the information set.">Objet qui fournit les informations de schéma pour le jeu d'informations.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.Type">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the current node.">Obtient le <see cref="T:System.Xaml.XamlType" /> du nœud actuel.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the current node; or &lt;see langword=&quot;null&quot; /&gt;, if the position is not on an object.">
        <see cref="T:System.Xaml.XamlType" /> du nœud actuel, ou <see langword="null" /> si la position n'est pas sur un objet.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.Value">
      <summary vsli:raw="Gets the value of the current node.">Obtient la valeur du nœud actuel.</summary>
      <returns vsli:raw="The value of the current node; or &lt;see langword=&quot;null&quot; /&gt;, if the position is not on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.Value&quot; /&gt; node type.">Valeur du nœud actuel ou <see langword="null" /> si la position n'est pas sur un type de nœud <see cref="F:System.Xaml.XamlNodeType.Value" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlXmlReaderSettings">
      <summary vsli:raw="Specifies processing rules or option settings for the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; XAML reader implementation.">Spécifie les règles de traitement ou les paramètres d'option pour l'implémentation du lecteur XAML <see cref="T:System.Xaml.XamlXmlReader" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlReaderSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReaderSettings&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlReaderSettings" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlReaderSettings.#ctor(System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReaderSettings&quot; /&gt; class by copying settings from an existing &lt;see cref=&quot;T:System.Xaml.XamlXmlReaderSettings&quot; /&gt; object.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlReaderSettings" /> en copiant les paramètres d'un objet <see cref="T:System.Xaml.XamlXmlReaderSettings" /> existant.</summary>
      <param name="settings" vsli:raw="The existing &lt;see cref=&quot;T:System.Xaml.XamlXmlReaderSettings&quot; /&gt; object to copy.">Objet <see cref="T:System.Xaml.XamlXmlReaderSettings" /> existant à copier.</param>
    </member>
    <member name="P:System.Xaml.XamlXmlReaderSettings.CloseInput">
      <summary vsli:raw="Gets or sets a value that indicates whether the underlying stream or text reader should be closed when the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; is closed.">Obtient ou définit une valeur qui indique si le flux ou le lecteur de texte sous-jacent doit être fermé à la fermeture du <see cref="T:System.Xaml.XamlXmlReader" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the underlying stream or reader should be closed when the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; is closed; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour fermer le flux ou le lecteur sous-jacent à la fermeture du <see cref="T:System.Xaml.XamlXmlReader" /> ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReaderSettings.SkipXmlCompatibilityProcessing">
      <summary vsli:raw="Gets or sets a value that determines whether the reader should differ from the default &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; behavior of how markup compatibility content is processed.">Obtient ou définit une valeur qui détermine si le lecteur doit se démarquer du comportement par défaut du <see cref="T:System.Xaml.XamlXmlReader" /> en matière de traitement du contenu de la compatibilité du balisage.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the initiating reader is directly used, which means that XML compatibility markup is processed as part of the main stream and compatibility is not considered. &lt;see langword=&quot;false&quot; /&gt; if the default behavior is used, which processes XML compatibility separately. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le lecteur d'amorçage est utilisé directement, ce qui signifie que le balisage de compatibilité XML pris séparément est traité comme partie intégrante du flux de données principal et que la compatibilité n'est pas prise en considération. <see langword="false" /> si le comportement par défaut est utilisé, ce qui traite la compatibilité XML séparément. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReaderSettings.XmlLang">
      <summary vsli:raw="Gets or sets the language setting value that the reader may promote to writers that write &lt;see langword=&quot;xml:lang&quot; /&gt; attributes in nodes.">Obtient ou définit la valeur du paramètre de langue que le lecteur peut promouvoir dans les writers qui écrivent des attributs <see langword="xml:lang" /> dans les nœuds.</summary>
      <returns vsli:raw="The string to use for possible &lt;see langword=&quot;xml:lang&quot; /&gt; output that is based on the reader.">Chaîne à utiliser pour toute sortie <see langword="xml:lang" /> possible basée sur le lecteur.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReaderSettings.XmlSpacePreserve">
      <summary vsli:raw="Gets or sets a value that determines whether the XAML reader instructs any XAML writers to write &lt;see langword=&quot;xml:space&quot; /&gt; attributes in nodes. If that behavior is desired, this information is passed through shared XAML schema context.">Obtient ou définit une valeur qui détermine si le lecteur XAML indique aux writers XAML d'écrire des attributs <see langword="xml:space" /> dans les nœuds. Si ce comportement est souhaité, ces informations sont passées via contexte de schéma XAML partagé.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if writers that are processing the XAML node stream can write &lt;c&gt;xml:space=&quot;preserve&quot;&lt;/c&gt; in output; &lt;see langword=&quot;false&quot; /&gt; if &lt;see langword=&quot;xml:space&quot; /&gt; attributes cannot be written in nodes.">
        <see langword="true" />Si les enregistreurs qui traitent le flux de nœud XAML peuvent écrire <c>XML: Space = «Preserve»</c> dans la sortie; <see langword="false" /> si<see langword="xml:space" /> les attributs ne peuvent pas être écrits dans des nœuds.</returns>
    </member>
    <member name="T:System.Xaml.XamlXmlWriter">
      <summary vsli:raw="Uses a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; or &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; support class to write a XAML node stream to a text or markup serialized form.">Utilise une classe de prise en charge <see cref="T:System.IO.TextWriter" /> ou <see cref="T:System.Xml.XmlWriter" /> pour écrire un flux de nœud XAML dans une forme sérialisée de balisage ou de texte.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; class from a stream.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlWriter" /> à partir d'un flux de données.</summary>
      <param name="stream" vsli:raw="The stream to write.">Flux de données à écrire.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for the XAML writer.">Contexte de schéma XAML pour le writer XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> a la valeur <see langword="null" />.  

ou - 
<paramref name="schemaContext" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; class from a stream using a writer settings object.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlWriter" /> à partir d'un flux à l'aide d'un objet de paramètres de writer.</summary>
      <param name="stream" vsli:raw="The stream to write.">Flux de données à écrire.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for the XAML writer.">Contexte de schéma XAML pour le writer XAML.</param>
      <param name="settings" vsli:raw="An instance of &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterSettings&quot; /&gt;, which typically has specific non-default settings.">Instance de <see cref="T:System.Xaml.XamlXmlWriterSettings" />, qui possède généralement des paramètres spécifiques non définis par défaut.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;">
        <paramref name="stream" /> ou <paramref name="schemaContext" /> a la valeur <see langword="null" /></exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; class from a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; basis.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlWriter" /> à partir d'une base <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="textWriter" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; that writes the output.">
        <see cref="T:System.IO.TextWriter" /> qui écrit la sortie.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for the XAML writer.">Contexte de schéma XAML pour le writer XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;textWriter&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="textWriter" /> ou <paramref name="schemaContext" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; class from a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; basis using a settings object.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlWriter" /> à partir d'une base <see cref="T:System.IO.TextWriter" />, à l'aide d'un objet de paramètres.</summary>
      <param name="textWriter" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; that writes the output.">
        <see cref="T:System.IO.TextWriter" /> qui écrit la sortie.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for the XAML writer.">Contexte de schéma XAML pour le writer XAML.</param>
      <param name="settings" vsli:raw="An instance of &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterSettings&quot; /&gt;, which typically has specific non-default settings.">Instance de <see cref="T:System.Xaml.XamlXmlWriterSettings" />, qui possède généralement des paramètres spécifiques non définis par défaut.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;textWriter&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="textWriter" /> ou <paramref name="schemaContext" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; class from a &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; basis.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlWriter" /> à partir d'une base <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="xmlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that writes the output.">
        <see cref="T:System.Xml.XmlWriter" /> qui écrit la sortie.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for the XAML writer.">Contexte de schéma XAML pour le writer XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlWriter&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xmlWriter" /> ou <paramref name="schemaContext" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; class from a &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; basis using a settings object.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlWriter" /> à partir d'une base <see cref="T:System.Xml.XmlWriter" />, à l'aide d'un objet de paramètres.</summary>
      <param name="xmlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that writes the output.">
        <see cref="T:System.Xml.XmlWriter" /> qui écrit la sortie.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for the XAML writer.">Contexte de schéma XAML pour le writer XAML.</param>
      <param name="settings" vsli:raw="An instance of &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterSettings&quot; /&gt;, which typically has specific non-default settings.">Instance de <see cref="T:System.Xaml.XamlXmlWriterSettings" />, qui possède généralement des paramètres spécifiques non définis par défaut.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlWriter&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xmlWriter" /> ou <paramref name="schemaContext" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; and optionally releases the managed resources.">Libère les ressources non managées utilisées par <see cref="T:System.Xaml.XamlXmlWriter" /> et libère éventuellement les ressources managées.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release the unmanaged resources; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour libérer les ressources non managées ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.Flush">
      <summary vsli:raw="Calls the &lt;see langword=&quot;Flush&quot; /&gt; method of the underlying &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; or &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;, which writes anything that is currently in the buffer, and then closes the writer.">Appelle la méthode <see langword="Flush" /> du <see cref="T:System.Xml.XmlWriter" /> ou <see cref="T:System.IO.TextWriter" /> sous-jacent, ce qui a pour effet d'écrire toutes les données en mémoire tampon, puis de fermer le writer.</summary>
    </member>
    <member name="P:System.Xaml.XamlXmlWriter.SchemaContext">
      <summary vsli:raw="Gets the XAML schema context that this &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; uses for processing.">Obtient le contexte de schéma XAML utilisé par ce <see cref="T:System.Xaml.XamlXmlWriter" /> pour le traitement.</summary>
      <returns vsli:raw="The XAML schema context that this &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; uses for XAML processing.">Contexte de schéma XAML utilisé par ce <see cref="T:System.Xaml.XamlXmlWriter" /> pour le traitement XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlWriter.Settings">
      <summary vsli:raw="Gets the writer settings that this &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; uses for XAML processing.">Obtient les paramètres de writer utilisés par ce <see cref="T:System.Xaml.XamlXmlWriter" /> pour le traitement XAML.</summary>
      <returns vsli:raw="The writer settings that this &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; uses for XAML processing.">Paramètres de writer utilisés par ce <see cref="T:System.Xaml.XamlXmlWriter" /> pour le traitement XAML.</returns>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteEndMember">
      <summary vsli:raw="Writes a XAML end member node to the underlying &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; or &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. Throws an exception if the current position of the XAML node stream is not within a member, or if the internal writer state does not support writing to an end member.">Écrit un nœud membre de fin XAML dans le <see cref="T:System.Xml.XmlWriter" /> ou <see cref="T:System.IO.TextWriter" /> sous-jacent. Lève une exception si la position actuelle du flux de données de nœud XAML n'est pas dans un membre ou si l'état du writer interne ne prend pas en charge l'écriture dans un membre de fin.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current position of the XAML node stream is not within a member.">La position actuelle du flux de nœud XAML n'est pas dans un membre.</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException" vsli:raw="The current writer state does not support writing an end member.">L'état du writer actuel ne prend pas en charge l'écriture d'un membre de fin.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteEndObject">
      <summary vsli:raw="Writes a XAML end object node to the underlying &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; or &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. Throws an exception if the current position of the XAML node stream that is being processed is incompatible with writing an end object.">Écrit un nœud objet de fin XAML dans le <see cref="T:System.Xml.XmlWriter" /> ou <see cref="T:System.IO.TextWriter" /> sous-jacent. Lève une exception si la position actuelle du flux de nœud XAML en cours de traitement est incompatible avec l'écriture d'un objet de fin.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current position of the XAML node stream is not in a scope where an end member can be written.">La position actuelle du flux de nœud XAML n'est pas dans une portée où un membre de fin peut être écrit.</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException" vsli:raw="The current writer state does not support writing an end object.">L'état du writer actuel ne prend pas en charge l'écriture d'un objet de fin.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteGetObject">
      <summary vsli:raw="Writes an object for cases where the specified object is a default or implicit value of the property that is being written, instead of being specified as an object value in the input XAML node set.">Écrit un objet dans les cas où l'objet spécifié est une valeur par défaut ou implicite de la propriété écrite, au lieu d'être spécifié en tant que valeur d'objet dans le jeu de nœuds XAML d'entrée.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
      <summary vsli:raw="Writes namespace information to the underlying &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; or &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. May throw an exception for certain states; however, may instead defer writing the namespace information until the writer and the XAML node stream that is being processed reaches a position where a XAML namespace declaration can be inserted.">Écrit les informations d'espace de noms dans le <see cref="T:System.Xml.XmlWriter" /><see cref="T:System.IO.TextWriter" /> sous-jacent. Peut lever une exception pour certains états ; toutefois, peut à la place différer l'écriture des informations d'espace de noms jusqu'à ce que le writer et le flux de données de nœud XAML en cours de traitement aient atteint une position à laquelle une déclaration d'espace de noms XAML peut être insérée.</summary>
      <param name="namespaceDeclaration" vsli:raw="The XAML namespace declaration to write.">Déclaration d'espace de noms XAML à écrire.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;namespaceDeclaration&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="namespaceDeclaration" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;namespaceDeclaration&quot; /&gt; is not a valid XAML namespace declaration (has a null prefix or null identifier component).">
        <paramref name="namespaceDeclaration" /> n'est pas une déclaration d'espace de noms XAML valide (possède un préfixe null ou un composant d'identificateur null).</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException" vsli:raw="The current writer state does not support writing a XAML namespace declaration.">L'état du writer actuel ne prend pas en charge l'écriture d'une déclaration d'espace de noms XAML.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteStartMember(System.Xaml.XamlMember)">
      <summary vsli:raw="Writes a XAML start member node to the underlying &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; or &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. Throws an exception if the current position of the XAML node stream is within another member, or if it is not in a scope or writer state where a start member can be written.">Écrit un nœud membre de début XAML dans le <see cref="T:System.Xml.XmlWriter" /> ou <see cref="T:System.IO.TextWriter" /> sous-jacent. Lève une exception si la position actuelle du flux de données de nœud XAML est dans un autre membre ou si elle n'est pas dans une portée ou un état de writer dans laquelle/lequel un membre de début peut être écrit.</summary>
      <param name="property" vsli:raw="The XAML member identifier for the member to write.">Identificateur de membre XAML du membre à écrire.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;property&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="property" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;property&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">
        <paramref name="property" /> n’est pas un <see cref="T:System.Xaml.XamlMember" /> valide.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current position of the XAML node stream is invalid for writing a start member.">La position actuelle du flux de nœud XAML n'est pas valide pour l'écriture d'un membre de début.</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException" vsli:raw="The writer state is not valid for writing a start member.  &#xA;  &#xA; -or-  &#xA;  &#xA; The XAML writer attempted to write a duplicate member. This exception may have a more precise inner exception.">L'état du writer n'est pas valide pour l'écriture d'un membre de début.  
 ou  
 Le writer XAML a essayé d'écrire dans un membre dupliqué. Cette exception peut avoir une exception interne plus précise.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteStartObject(System.Xaml.XamlType)">
      <summary vsli:raw="Writes a XAML start object node to the underlying &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; or &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. Throws an exception if the current position of the XAML node stream is not in a scope where a start object can be written, or if the writer is not in a state that can write a start object.">Écrit un nœud objet de début XAML dans le <see cref="T:System.Xml.XmlWriter" /> ou <see cref="T:System.IO.TextWriter" /> sous-jacent. Lève une exception si la position actuelle du flux de données de nœud XAML n'est pas dans une portée dans laquelle un objet de début peut être écrit ou si l'état du writer ne permet pas l'écriture d'un objet de début.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; (XAML type identifier) for the object to write.">
        <see cref="T:System.Xaml.XamlType" /> (identificateur de type XAML) pour l'objet à écrire.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">
        <paramref name="type" /> n’est pas un <see cref="T:System.Xaml.XamlType" /> valide.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current position of the XAML node stream is not valid for writing a new start object.">La position actuelle du flux de nœud XAML n'est pas valide pour l'écriture d'un nouvel objet de début.</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException" vsli:raw="The state of the XAML writer is not valid for writing a new start object.">L'état du writer XAML n'est pas valide pour l'écriture d'un nouvel objet de début.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteValue(System.Object)">
      <summary vsli:raw="Writes a XAML value node to the underlying &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; or &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. Throws an exception if the current position of the XAML node stream is invalid for writing a value, or the writer is in a state where a value cannot be written.">Écrit un nœud de valeur XAML dans le <see cref="T:System.Xml.XmlWriter" /> ou <see cref="T:System.IO.TextWriter" /> sous-jacent. Lève une exception si la position actuelle du flux de nœud XAML n'est pas valide pour l'écriture d'une valeur ou si l'état du writer ne permet pas l'écriture d'une valeur.</summary>
      <param name="value" vsli:raw="The value information to write.">Informations de valeur à écrire.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current position of the XAML node stream is not valid for writing a value.">La position actuelle du flux de nœud XAML n'est pas valide pour l'écriture d'une valeur.</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException" vsli:raw="The XAML writer state does not support the writing of a value node.">L'état du writer XAML ne prend pas en charge l'écriture d'un nœud de valeur.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; specifies a value that is not null or a string.">
        <paramref name="value" /> spécifie une valeur qui n'est pas null ou une chaîne.</exception>
    </member>
    <member name="T:System.Xaml.XamlXmlWriterException">
      <summary vsli:raw="The exception that is thrown by certain &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; APIs.">Exception levée par certaines API <see cref="T:System.Xaml.XamlXmlWriter" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterException&quot; /&gt; class with a system-supplied message that describes the error.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlWriterException" /> avec un message système qui décrit l'erreur.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterException&quot; /&gt; class with serialized data.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlWriterException" /> avec des données sérialisées.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Objet qui contient les données sérialisées de l'objet.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Informations contextuelles sur la source ou la destination.</param>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterException&quot; /&gt; class with a specified message that describes the error.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlWriterException" /> avec un message spécifié décrivant l'erreur.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Message décrivant l'exception. L'appelant de ce constructeur doit vérifier que cette chaîne a été localisée pour la culture en cours du système.</param>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlWriterException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Message décrivant l'exception. L'appelant de ce constructeur doit vérifier que cette chaîne a été localisée pour la culture en cours du système.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Exception ayant provoqué l'exception actuelle. Si le paramètre <paramref name="innerException" /> n'est pas <see langword="null" />, l'exception actuelle est levée dans un bloc <see langword="catch" /> qui gère l'exception interne.</param>
    </member>
    <member name="T:System.Xaml.XamlXmlWriterSettings">
      <summary vsli:raw="Provides initialization settings for the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; XAML writer implementation.">Fournit des paramètres d'initialisation pour l'implémentation du writer XAML <see cref="T:System.Xaml.XamlXmlWriter" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterSettings&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlXmlWriterSettings" />.</summary>
    </member>
    <member name="P:System.Xaml.XamlXmlWriterSettings.AssumeValidInput">
      <summary vsli:raw="Gets or sets a value that specifies whether the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; should always assume valid XAML input for purposes of duplicate resolution or other error checking.">Obtient ou définit une valeur qui spécifie si le <see cref="T:System.Xaml.XamlXmlWriter" /> doit toujours utiliser une entrée XAML valide à des fins de résolution des doublons ou d'autres contrôles d'erreurs.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; skips certain validation or error checks, such as throwing exceptions on duplicate members. &lt;see langword=&quot;false&quot; /&gt; if the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; throws exceptions when invalid XAML is encountered. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le <see cref="T:System.Xaml.XamlXmlWriter" /> ignore certains contrôles de validation ou d'erreurs, tels que la levée d'exceptions pour les membres en doublon. <see langword="false" /> si le <see cref="T:System.Xaml.XamlXmlWriter" /> lève des exceptions lorsque du code XAML non valide est rencontré. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlWriterSettings.CloseOutput">
      <summary vsli:raw="Gets or sets a value that specifies whether the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; should close immediately on &lt;see langword=&quot;Dispose&quot; /&gt; or other operations, or whether the XAML writer should instead write the buffer output before closing. Use this setting with caution; closing immediately can result in invalid XAML that cannot be loaded again.">Obtient ou définit une valeur qui spécifie si le <see cref="T:System.Xaml.XamlXmlWriter" /> doit se fermer immédiatement après l'opération <see langword="Dispose" /> ou d'autres opérations, ou s'il doit au contraire écrire dans la sortie de la mémoire tampon avant de se fermer. Utilisez ce paramètre avec précaution ; la fermeture immédiate peut provoquer du code XAML non valide qui ne peut plus être chargé.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; immediately closes on a &lt;see langword=&quot;Dispose&quot; /&gt; or similar operations. &lt;see langword=&quot;false&quot; /&gt; if the remaining buffer output is written before the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; is released. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Xaml.XamlXmlWriter" /> se ferme immédiatement après l'opération <see langword="Dispose" /> ou des opérations similaires. <see langword="false" /> si la sortie restante de la mémoire tampon est écrite avant de libérer le <see cref="T:System.Xaml.XamlXmlWriter" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterSettings.Copy">
      <summary vsli:raw="Returns a copy of this &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterSettings&quot; /&gt; instance.">Retourne une copie de cette instance de <see cref="T:System.Xaml.XamlXmlWriterSettings" />.</summary>
      <returns vsli:raw="The returned copy.">Copie retournée.</returns>
    </member>
  </members>
</doc>