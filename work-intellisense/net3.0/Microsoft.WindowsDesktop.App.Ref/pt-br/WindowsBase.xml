<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>WindowsBase</name>
  </assembly>
  <members>
    <member name="T:System.Collections.Specialized.CollectionChangedEventManager">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; implementation so that you can use the &quot;weak event listener&quot; pattern to attach listeners for the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">Fornece uma implementação <see cref="T:System.Windows.WeakEventManager" /> para que seja possível usar o padrão “ouvinte de eventos fraco” para anexar ouvintes ao evento <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</summary>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.AddHandler(System.Collections.Specialized.INotifyCollectionChanged,System.EventHandler{System.Collections.Specialized.NotifyCollectionChangedEventArgs})">
      <summary vsli:raw="Adds the specified event handler, which is called when specified source raises the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">Adiciona o manipulador de eventos especificado, que é chamado quando a origem especificada gera o evento <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">O objeto de origem que gera o evento <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">O delegado que manipula o evento <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.AddListener(System.Collections.Specialized.INotifyCollectionChanged,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Adds the specified listener to the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event of the specified source.">Adiciona o ouvinte especificado ao evento <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> da fonte especificada.</summary>
      <param name="source" vsli:raw="The object with the event.">O objeto com o evento.</param>
      <param name="listener" vsli:raw="The object to add as a listener.">O objeto a ser adicionado como um ouvinte.</param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.NewListenerList">
      <summary vsli:raw="Returns a new object to contain listeners to the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">Retorna um novo objeto para conter ouvintes do evento <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</summary>
      <returns vsli:raw="A new object to contain listeners to the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">Um novo objeto para conter ouvintes do evento <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</returns>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.RemoveHandler(System.Collections.Specialized.INotifyCollectionChanged,System.EventHandler{System.Collections.Specialized.NotifyCollectionChangedEventArgs})">
      <summary vsli:raw="Removes the specified event handler from the specified source.">Remove o manipulador de eventos especificado da fonte especificada.</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">O objeto de origem que gera o evento <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">O delegado que manipula o evento <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.RemoveListener(System.Collections.Specialized.INotifyCollectionChanged,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Removes the specified listener from the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event of the specified source.">Remove o ouvinte especificado do evento <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> da fonte especificada.</summary>
      <param name="source" vsli:raw="The object with the event.">O objeto com o evento.</param>
      <param name="listener" vsli:raw="The listener to remove.">O ouvinte a ser removido.</param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.StartListening(System.Object)">
      <summary vsli:raw="Begins listening for the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event on the specified source.">Começa a escutar o evento <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> na origem especificada.</summary>
      <param name="source" vsli:raw="The object with the event.">O objeto com o evento.</param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.StopListening(System.Object)">
      <summary vsli:raw="Stops listening for the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event on the specified source.">Para de escutar o evento <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> na origem especificada.</summary>
      <param name="source" vsli:raw="The object with the event.">O objeto com o evento.</param>
    </member>
    <member name="T:System.ComponentModel.CurrentChangedEventManager">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; implementation so that you can use the &quot;weak event listener&quot; pattern to attach listeners for the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">Fornece uma implementação <see cref="T:System.Windows.WeakEventManager" /> para que seja possível usar o padrão “ouvinte de eventos fraco” para anexar ouvintes ao evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />.</summary>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.AddHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.EventArgs})">
      <summary vsli:raw="Adds the specified event handler, which is called when specified source raises the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">Adiciona o manipulador de eventos especificado, que é chamado quando a origem especificada gera o evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />.</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">O objeto de origem que gera o evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />.</param>
      <param name="handler" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">O objeto de origem que gera o evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.AddListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Adds the specified listener to the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event of the specified source.">Adiciona o ouvinte especificado ao evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> da fonte especificada.</summary>
      <param name="source" vsli:raw="The object with the event.">O objeto com o evento.</param>
      <param name="listener" vsli:raw="The object to add as a listener.">O objeto a ser adicionado como um ouvinte.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.NewListenerList">
      <summary vsli:raw="Returns a new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">Retorna um novo objeto para conter ouvintes do evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />.</summary>
      <returns vsli:raw="A new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">Um novo objeto para conter ouvintes do evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />.</returns>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.RemoveHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.EventArgs})">
      <summary vsli:raw="Removes the specified event handler from the specified source.">Remove o manipulador de eventos especificado da fonte especificada.</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">O objeto de origem que gera o evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">O delegado que manipula o evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.RemoveListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Removes the specified listener from the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event of the specified source.">Remove o ouvinte especificado do evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> da fonte especificada.</summary>
      <param name="source" vsli:raw="The object with the event.">O objeto com o evento.</param>
      <param name="listener" vsli:raw="The listener to remove.">O ouvinte a ser removido.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.StartListening(System.Object)">
      <summary vsli:raw="Begins listening for the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event on the specified source.">Começa a escutar o evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> na origem especificada.</summary>
      <param name="source" vsli:raw="The object with the event.">O objeto com o evento.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.StopListening(System.Object)">
      <summary vsli:raw="Stops listening for the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event on the specified source.">Para de escutar o evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> na origem especificada.</summary>
      <param name="source" vsli:raw="The object with the event.">O objeto com o evento.</param>
    </member>
    <member name="T:System.ComponentModel.CurrentChangingEventArgs">
      <summary vsli:raw="Provides information for the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">Fornece informações para o evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</summary>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventArgs.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.CurrentChangingEventArgs&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.CurrentChangingEventArgs" />.</summary>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventArgs.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.CurrentChangingEventArgs&quot; /&gt; class with the specified &lt;paramref name=&quot;isCancelable&quot; /&gt; value.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.CurrentChangingEventArgs" /> com o valor <paramref name="isCancelable" /> especificado.</summary>
      <param name="isCancelable" vsli:raw="A value that indicates whether the event is cancelable.">Um valor que indica se o evento é cancelável.</param>
    </member>
    <member name="P:System.ComponentModel.CurrentChangingEventArgs.Cancel">
      <summary vsli:raw="Gets or sets a value that indicates whether to cancel the event.">Obtém ou define um valor que indica se o evento deve ser cancelado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the event is to be canceled; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Se o evento for cancelado; caso contrário <see langword="false" />,. O valor padrão é <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="If the value of &lt;see cref=&quot;P:System.ComponentModel.CurrentChangingEventArgs.IsCancelable&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;.">Se o valor de <see cref="P:System.ComponentModel.CurrentChangingEventArgs.IsCancelable" /> for <see langword="false" />.</exception>
    </member>
    <member name="P:System.ComponentModel.CurrentChangingEventArgs.IsCancelable">
      <summary vsli:raw="Gets a value that indicates whether the event is cancelable.">Obtém um valor que indica se o evento é cancelável.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the event is cancelable, otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />Se o evento for cancelável, caso <see langword="false" />contrário,. O valor padrão é <see langword="true" />.</returns>
    </member>
    <member name="T:System.ComponentModel.CurrentChangingEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Windows.Data.CollectionView.CurrentChanging&quot; /&gt; event.">Representa o método que manipula o evento <see cref="E:System.Windows.Data.CollectionView.CurrentChanging" />.</summary>
      <param name="sender" vsli:raw="The object that raised the event.">O objeto que gerencie o evento.</param>
      <param name="e" vsli:raw="Information about the event.">Informações sobre o evento.</param>
    </member>
    <member name="T:System.ComponentModel.CurrentChangingEventManager">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; implementation so that you can use the &quot;weak event listener&quot; pattern to attach listeners for the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">Fornece uma implementação <see cref="T:System.Windows.WeakEventManager" /> para que seja possível usar o padrão “ouvinte de eventos fraco” para anexar ouvintes ao evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</summary>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.AddHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.ComponentModel.CurrentChangingEventArgs})">
      <summary vsli:raw="Adds the specified event handler, which is called when specified source raises the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">Adiciona o manipulador de eventos especificado, que é chamado quando a origem especificada gera o evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">O objeto de origem que gera o evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">O delegado que manipula o evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.AddListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Adds the specified listener to the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event of the specified source.">Adiciona o ouvinte especificado ao evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> da fonte especificada.</summary>
      <param name="source" vsli:raw="The object with the event.">O objeto com o evento.</param>
      <param name="listener" vsli:raw="The object to add as a listener.">O objeto a ser adicionado como um ouvinte.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.NewListenerList">
      <summary vsli:raw="Returns a new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">Retorna um novo objeto para conter ouvintes do evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</summary>
      <returns vsli:raw="A new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">Um novo objeto para conter ouvintes do evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</returns>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.RemoveHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.ComponentModel.CurrentChangingEventArgs})">
      <summary vsli:raw="Removes the specified event handler from the specified source.">Remove o manipulador de eventos especificado da fonte especificada.</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">O objeto de origem que gera o evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">O delegado que manipula o evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.RemoveListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Removes the specified listener from the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event of the specified source.">Remove o ouvinte especificado do evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> da fonte especificada.</summary>
      <param name="source" vsli:raw="The object with the event.">O objeto com o evento.</param>
      <param name="listener" vsli:raw="The listener to remove.">O ouvinte a ser removido.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.StartListening(System.Object)">
      <summary vsli:raw="Begins listening for the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event on the specified source.">Começa a escutar o evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> na origem especificada.</summary>
      <param name="source" vsli:raw="The object with the event.">O objeto com o evento.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.StopListening(System.Object)">
      <summary vsli:raw="Stops listening for the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event on the specified source.">Para de escutar o evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> na origem especificada.</summary>
      <param name="source" vsli:raw="The object with the event.">O objeto com o evento.</param>
    </member>
    <member name="T:System.ComponentModel.DependencyPropertyDescriptor">
      <summary vsli:raw="Provides an extension of &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; that accounts for the additional property characteristics of a dependency property.">Fornece uma extensão do <see cref="T:System.ComponentModel.PropertyDescriptor" /> que representa as características das propriedades adicionais de uma propriedade de dependência.</summary>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)">
      <summary vsli:raw="Enables other objects to be notified when this property changes.">Permite que outros objetos sejam notificados quando essa propriedade muda.</summary>
      <param name="component" vsli:raw="The component to add the handler for.">O componente ao qual adicionar o manipulador.</param>
      <param name="handler" vsli:raw="The delegate to add as a listener.">O delegado a ser adicionado como um ouvinte.</param>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Attributes">
      <summary vsli:raw="Gets the collection of attributes for this member.">Obtém a coleção de atributos para este membro.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.AttributeCollection&quot; /&gt; collection of attributes.">A <see cref="T:System.ComponentModel.AttributeCollection" /> coleção de atributos.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(System.Object)">
      <summary vsli:raw="Returns whether resetting an object changes its value.">Retorna se a redefinição de um objeto altera ou não o valor dele.</summary>
      <param name="component" vsli:raw="The component to test for reset capability.">O componente a ser testado quanto à capacidade de redefinição.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if resetting the component changes its value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a redefinição do componente altera seu valor; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Category">
      <summary vsli:raw="Gets the name of the category that the member belongs to, as specified in the &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt;.">Obtém o nome da categoria à qual o membro pertence, conforme especificado no <see cref="T:System.ComponentModel.CategoryAttribute" />.</summary>
      <returns vsli:raw="The name of the category to which the member belongs. If there is no &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt;, the category name is set to the default category, &lt;see langword=&quot;Misc&quot; /&gt;.">O nome da categoria à qual o membro pertence. Se não houver <see cref="T:System.ComponentModel.CategoryAttribute" />, o nome da categoria será definido como a categoria padrão, <see langword="Misc" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.ComponentType">
      <summary vsli:raw="Gets the type of the component this property is bound to.">Obtém o tipo do componente ao qual essa propriedade está vinculada.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the type of component this property is bound to. When &lt;see cref=&quot;M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)&quot; /&gt; or &lt;see cref=&quot;M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)&quot; /&gt; are invoked, the object specified might be an instance of this type.">Um <see cref="T:System.Type" /> que representa o tipo de componente ao qual esta propriedade está associada. Quando <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)" /> ou<see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" /> são invocados, o objeto especificado pode ser uma instância desse tipo.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Converter">
      <summary vsli:raw="Gets the type converter for this property.">Obtém o conversor de tipo dessa propriedade.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; that is used to convert the &lt;see cref=&quot;T:System.Type&quot; /&gt; of this property.">Um <see cref="T:System.ComponentModel.TypeConverter" /> que é usado para converter o <see cref="T:System.Type" /> dessa propriedade.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty">
      <summary vsli:raw="Returns the dependency property identifier.">Retorna o identificador de propriedade de dependência.</summary>
      <returns vsli:raw="The dependency property identifier.">O identificador da propriedade de dependência.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Description">
      <summary vsli:raw="Gets the description of the member, as specified in the &lt;see cref=&quot;T:System.ComponentModel.DescriptionAttribute&quot; /&gt;.">Obtém a descrição do membro, conforme especificado no <see cref="T:System.ComponentModel.DescriptionAttribute" />.</summary>
      <returns vsli:raw="The description of the member. If there is no &lt;see cref=&quot;T:System.ComponentModel.DescriptionAttribute&quot; /&gt;, the property value is set to the default, which is an empty string (&quot;&quot;).">A descrição do membro. Se não houver <see cref="T:System.ComponentModel.DescriptionAttribute" />, o valor da propriedade será definido como o padrão, que é uma cadeia de caracteres vazia ("").</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback">
      <summary vsli:raw="Gets or sets a callback that designers use to modify the effective value of a dependency property before the dependency property value is stored in the dependency property engine.">Obtém ou define um retorno de chamada que designers usam para modificar o valor efetivo de uma propriedade de dependência, antes do valor da propriedade de dependência ser armazenado no mecanismo de propriedade de dependência.</summary>
      <returns vsli:raw="A callback that designers use to modify the effective value of a dependency property before the dependency property value is stored in the dependency property engine.">Um retorno de chamada que os designers usam para modificar o valor efetivo de uma propriedade de dependência antes que o valor da propriedade de dependência seja armazenado no mecanismo de propriedade de dependência.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly">
      <summary vsli:raw="Gets whether this member should be set only at design time, as specified in the &lt;see cref=&quot;T:System.ComponentModel.DesignOnlyAttribute&quot; /&gt;.">Obtém a informação de se este membro deve ser definido apenas em tempo de design, conforme especificado no <see cref="T:System.ComponentModel.DesignOnlyAttribute" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this member should be set only at design time; &lt;see langword=&quot;false&quot; /&gt; if the member can be set during run time. If there is no &lt;see cref=&quot;T:System.ComponentModel.DesignOnlyAttribute&quot; /&gt;, the return value is the default, which is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Se esse membro deve ser definido somente no momento do design; <see langword="false" /> se o membro puder ser definido durante o tempo de execução. Se não houver <see cref="T:System.ComponentModel.DesignOnlyAttribute" />, o valor de retorno será o padrão, que é <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.DisplayName">
      <summary vsli:raw="Gets the name that can be displayed in a window, such as a Properties window.">Obtém o nome que pode ser exibido em uma janela, tal como uma janela Propriedades.</summary>
      <returns vsli:raw="The name to display for the property.">O nome a ser exibido para a propriedade.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.Equals(System.Object)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt; instances for equality.">Compara duas instâncias de <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> quanto à igualdade.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt; to compare with the current instance.">O <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> de comparação com a instância atual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the values are equivalent; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se os valores forem equivalentes; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt; for a provided property name.">Retorna um <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> para um nome de propriedade fornecido.</summary>
      <param name="name" vsli:raw="The registered name of a dependency property or an attached property.">O nome registrado de uma propriedade de dependência ou uma propriedade anexada.</param>
      <param name="ownerType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object that owns the property definition.">O <see cref="T:System.Type" /> do objeto proprietário da definição de propriedade.</param>
      <param name="targetType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object you want to set the property for.">O <see cref="T:System.Type" /> do objeto para o qual você deseja definir a propriedade.</param>
      <returns vsli:raw="The requested &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt;.">O <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> solicitado.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt; for a provided property name.">Retorna um <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> para um nome de propriedade fornecido.</summary>
      <param name="name" vsli:raw="The registered name of a dependency property or an attached property.">O nome registrado de uma propriedade de dependência ou uma propriedade anexada.</param>
      <param name="ownerType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object that owns the property definition.">O <see cref="T:System.Type" /> do objeto proprietário da definição de propriedade.</param>
      <param name="targetType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object you want to set the property for.">O <see cref="T:System.Type" /> do objeto para o qual você deseja definir a propriedade.</param>
      <param name="ignorePropertyType" vsli:raw="Specifies to ignore the property type.">Especifica para ignorar o tipo de propriedade.</param>
      <returns vsli:raw="The requested &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt;.">O <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> solicitado.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt; for a provided &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt;.">Retorna um <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> para um <see cref="T:System.ComponentModel.PropertyDescriptor" /> fornecido.</summary>
      <param name="property" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; to check.">O <see cref="T:System.ComponentModel.PropertyDescriptor" /> a ser verificado.</param>
      <returns vsli:raw="If the property described by &lt;paramref name=&quot;property&quot; /&gt; is a dependency property, returns a valid &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt;. Otherwise, returns a &lt;see langword=&quot;null&quot; /&gt;&lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt;.">Se a propriedade descrita por <paramref name="property" /> é uma propriedade de dependência, retorna um <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> válido. Caso contrário, retorna um <see langword="null" /><see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt; for a provided dependency property and target type.">Retorna um <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> para uma propriedade de dependência e tipo de destino fornecidos.</summary>
      <param name="dependencyProperty" vsli:raw="The identifier for a dependency property.">O identificador de uma propriedade de dependência.</param>
      <param name="targetType" vsli:raw="The type of the object where the property is set.">O tipo do objeto em que a propriedade está definida.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt; for the provided dependency property.">Um <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> para a propriedade de dependência fornecida.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt;.">Retorna um <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />.</summary>
      <param name="instance" vsli:raw="A component to get the properties for.">Um componente cujas propriedades serão obtidas.</param>
      <param name="filter" vsli:raw="An array of type &lt;see cref=&quot;T:System.Attribute&quot; /&gt; to use as a filter.">Uma matriz do tipo <see cref="T:System.Attribute" /> a ser usada como um filtro.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; with the properties that match the specified attributes for the specified component.">Um <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> com as propriedades que correspondem aos atributos especificados para o componente especificado.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.GetEditor(System.Type)">
      <summary vsli:raw="Gets an editor of the specified type.">Obtém um editor do tipo especificado.</summary>
      <param name="editorBaseType" vsli:raw="The base type of editor, which is used to differentiate between multiple editors that a property supports.">O tipo base do editor, que é usado para diferenciar entre os vários editores que dão suporte a uma propriedade.</param>
      <returns vsli:raw="An instance of the requested editor type, or &lt;see langword=&quot;null&quot; /&gt; if an editor cannot be found.">Uma instância do tipo de editor solicitado ou <see langword="null" /> se um editor não puder ser encontrado.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt;.">Retorna o código hash para este <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Um código de hash do inteiro assinado de 32 bits.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)">
      <summary vsli:raw="Returns the current value of the property on a component.">Retorna o valor atual da propriedade em um componente.</summary>
      <param name="component" vsli:raw="The component instance.">A instância do componente.</param>
      <returns vsli:raw="The requested value.">O valor solicitado.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.IsAttached">
      <summary vsli:raw="Gets a value that indicates whether the property is registered as an attached property and is being used through an attached usage.">Obtém um valor que indica se a propriedade está registrada como uma propriedade anexada e está sendo usada por meio de um uso anexado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property is an attached property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />se a propriedade for uma propriedade anexada; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable">
      <summary vsli:raw="Gets a value that indicates the value of the &lt;see cref=&quot;T:System.ComponentModel.BrowsableAttribute&quot; /&gt; on the property.">Obtém um valor que indica o valor de <see cref="T:System.ComponentModel.BrowsableAttribute" /> na propriedade.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.BrowsableAttribute&quot; /&gt; was specified on the property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Se o <see cref="T:System.ComponentModel.BrowsableAttribute" /> foi especificado na propriedade; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable">
      <summary vsli:raw="Gets a value indicating whether this property should be localized, as specified in the &lt;see cref=&quot;T:System.ComponentModel.LocalizableAttribute&quot; /&gt;.">Obtém um valor que indica se esta propriedade deve ser localizada, conforme especificado no <see cref="T:System.ComponentModel.LocalizableAttribute" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the member is marked with the &lt;see cref=&quot;T:System.ComponentModel.LocalizableAttribute&quot; /&gt; constructor of the value true; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Se o membro estiver marcado com o <see cref="T:System.ComponentModel.LocalizableAttribute" /> Construtor do valor true; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether this property is read-only.">Obtém um valor que indica essa propriedade é somente leitura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />se a propriedade for somente leitura; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Metadata">
      <summary vsli:raw="Gets the metadata associated with the dependency property.">Obtém os metadados associados à propriedade de dependência.</summary>
      <returns vsli:raw="The dependency property metadata.">Os metadados da propriedade de dependência.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.PropertyType">
      <summary vsli:raw="Gets the represented &lt;see cref=&quot;T:System.Type&quot; /&gt; of the dependency property.">Obtém o <see cref="T:System.Type" /> representado da propriedade de dependência.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the dependency property.">O <see cref="T:System.Type" /> da propriedade de dependência.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)">
      <summary vsli:raw="Enables other objects to be notified when this property changes.">Permite que outros objetos sejam notificados quando essa propriedade muda.</summary>
      <param name="component" vsli:raw="The component to add the handler for.">O componente ao qual adicionar o manipulador.</param>
      <param name="handler" vsli:raw="The delegate to add as a listener.">O delegado a ser adicionado como um ouvinte.</param>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.ResetValue(System.Object)">
      <summary vsli:raw="Resets the value for this property of the component to the default value.">Redefine o valor dessa propriedade do componente para o valor padrão.</summary>
      <param name="component" vsli:raw="The component with the property value that is to be reset to the default value.">O componente com o valor da propriedade que deve ser redefinido para o valor padrão.</param>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)">
      <summary vsli:raw="Sets the value of the component to a different value.">Define o valor do componente para um valor diferente.</summary>
      <param name="component" vsli:raw="The component with the property value that is to be set.">O componente com o valor da propriedade que deve ser definida.</param>
      <param name="value" vsli:raw="The new value.">O novo valor.</param>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue(System.Object)">
      <summary vsli:raw="Indicates whether the value of this property needs to be persisted by serialization processes.">Indica se o valor dessa propriedade deve ser persistido por processos de serialização.</summary>
      <param name="component" vsli:raw="The component with the property to be examined for persistence.">O componente com a propriedade a ser examinada quanto à persistência.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property should be persisted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a propriedade deve ser persistida, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents">
      <summary vsli:raw="Indicates whether value change notifications for this property may originate from outside the property descriptor, such as from the component itself, or whether notifications will only originate from direct calls made to &lt;see cref=&quot;M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)&quot; /&gt;.">Indica se as notificações de alteração de valor para essa propriedade podem se originar fora do descritor de propriedade, tal como do componente em si ou se as notificações só serão provenientes de chamadas diretas feitas <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if notifications for this property may originate from outside the property descriptor, such as from the component itself. &lt;see langword=&quot;false&quot; /&gt; if notifications will only originate from direct calls made to &lt;see cref=&quot;M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)&quot; /&gt;.">
        <see langword="true" />Se as notificações para essa propriedade puderem ser originadas fora do descritor de propriedade, como no próprio componente. <see langword="false" />Se as notificações só serão originadas de chamadas diretas <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" />feitas para o.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.ToString">
      <summary vsli:raw="Converts the value of this instance to its equivalent string representation.">Converte o valor dessa instância na representação da cadeia de caracteres equivalente.</summary>
      <returns vsli:raw="Returns the &lt;see cref=&quot;P:System.ComponentModel.MemberDescriptor.Name&quot; /&gt; value.">Retorna o valor de <see cref="P:System.ComponentModel.MemberDescriptor.Name" />.</returns>
    </member>
    <member name="T:System.ComponentModel.ErrorsChangedEventManager">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; implementation so that you can use the weak event listener pattern to attach listeners for the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">Fornece uma implementação <see cref="T:System.Windows.WeakEventManager" /> para que seja possível usar o padrão de ouvinte de eventos fraco para anexar ouvintes ao evento <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</summary>
    </member>
    <member name="M:System.ComponentModel.ErrorsChangedEventManager.AddHandler(System.ComponentModel.INotifyDataErrorInfo,System.EventHandler{System.ComponentModel.DataErrorsChangedEventArgs})">
      <summary vsli:raw="Adds the specified event handler, which is called when specified source raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">Adiciona o manipulador de eventos especificado, que é chamado quando a origem especificada gera o evento <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</summary>
      <param name="source" vsli:raw="The source object that raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">O objeto de origem que aciona o evento <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">O delegado que manipula o evento <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.ErrorsChangedEventManager.NewListenerList">
      <summary vsli:raw="Returns a new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">Retorna um novo objeto para conter ouvintes do evento <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</summary>
      <returns vsli:raw="A new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">Um novo objeto para conter ouvintes do evento <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ErrorsChangedEventManager.RemoveHandler(System.ComponentModel.INotifyDataErrorInfo,System.EventHandler{System.ComponentModel.DataErrorsChangedEventArgs})">
      <summary vsli:raw="Removes the specified event handler from the specified source.">Remove o manipulador de eventos especificado da fonte especificada.</summary>
      <param name="source" vsli:raw="The source object that raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">O objeto de origem que aciona o evento <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">O delegado que manipula o evento <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.ErrorsChangedEventManager.StartListening(System.Object)">
      <summary vsli:raw="Begins listening for the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event on the specified source.">Começa a escutar o evento <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" /> na origem especificada.</summary>
      <param name="source" vsli:raw="The source object that raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">O objeto de origem que aciona o evento <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</param>
    </member>
    <member name="M:System.ComponentModel.ErrorsChangedEventManager.StopListening(System.Object)">
      <summary vsli:raw="Stops listening for the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event on the specified source.">Para de escutar o evento <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" /> na origem especificada.</summary>
      <param name="source" vsli:raw="The source object that raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">O objeto de origem que aciona o evento <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</param>
    </member>
    <member name="T:System.ComponentModel.GroupDescription">
      <summary vsli:raw="Provides an abstract base class for types that describe how to divide the items in a collection into groups.">Fornece uma classe base abstrata para tipos que descrevem como dividir os itens em uma coleção em grupos.</summary>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.GroupDescription&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.GroupDescription" />.</summary>
    </member>
    <member name="P:System.ComponentModel.GroupDescription.CustomSort">
      <summary vsli:raw="Gets or sets a custom comparer that sorts groups using an object that implements &lt;see cref=&quot;T:System.Collections.IComparer&quot; /&gt;.">Obtém ou define um comparador personalizado que classifica os grupos usando um objeto que implementa <see cref="T:System.Collections.IComparer" />.</summary>
      <returns vsli:raw="A custom comparer that sorts groups using an object that implements &lt;see cref=&quot;T:System.Collections.IComparer&quot; /&gt;.">Um comparador personalizado que classifica os grupos usando um <see cref="T:System.Collections.IComparer" />objeto que implementa.</returns>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.GroupNameFromItem(System.Object,System.Int32,System.Globalization.CultureInfo)">
      <summary vsli:raw="Returns the group name(s) for the given item.">Retorna os nomes de grupo para o item fornecido.</summary>
      <param name="item" vsli:raw="The item to return group names for.">O item para o qual retornar nomes de grupo.</param>
      <param name="level" vsli:raw="The level of grouping.">O nível de agrupamento.</param>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; to supply to the converter.">O <see cref="T:System.Globalization.CultureInfo" /> para fornecer ao conversor.</param>
      <returns vsli:raw="The group name(s) for the given item.">Os nomes de grupo para o item fornecido.</returns>
    </member>
    <member name="P:System.ComponentModel.GroupDescription.GroupNames">
      <summary vsli:raw="Gets the collection of names that are used to initialize a group with a set of subgroups with the given names.">Obtém a coleção de nomes que são usados para inicializar um grupo com um conjunto de subgrupos com os nomes fornecidos.</summary>
      <returns vsli:raw="The collection of names that are used to initialize a group with a set of subgroups with the given names.">A coleção de nomes que são usados para inicializar um grupo com um conjunto de subgrupos com os nomes especificados.</returns>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.NamesMatch(System.Object,System.Object)">
      <summary vsli:raw="Returns a value that indicates whether the group name and the item name match such that the item belongs to the group.">Retorna um valor que indica se o nome do grupo e o nome do item correspondem de modo que o item pertença ao grupo.</summary>
      <param name="groupName" vsli:raw="The name of the group to check.">O nome do grupo a verificar.</param>
      <param name="itemName" vsli:raw="The name of the item to check.">O nome do item a verificar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the names match and the item belongs to the group; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o nome corresponder e o item pertencer ao grupo; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.GroupDescription.PropertyChanged&quot; /&gt; event.">Aciona o evento <see cref="E:System.ComponentModel.GroupDescription.PropertyChanged" />.</summary>
      <param name="e" vsli:raw="Arguments of the event being raised.">Argumentos do evento que está sendo criado.</param>
    </member>
    <member name="E:System.ComponentModel.GroupDescription.PropertyChanged">
      <summary vsli:raw="Occurs when a property value changes.">Ocorre quando um valor de propriedade é alterado.</summary>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.ShouldSerializeGroupNames">
      <summary vsli:raw="Returns whether serialization processes should serialize the effective value of the &lt;see cref=&quot;P:System.ComponentModel.GroupDescription.GroupNames&quot; /&gt; property on instances of this class.">Indica se os processos de serialização devem serializar o valor efetivo da propriedade <see cref="P:System.ComponentModel.GroupDescription.GroupNames" /> em instâncias dessa classe.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.ComponentModel.GroupDescription.GroupNames&quot; /&gt; property value should be serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o valor da propriedade <see cref="P:System.ComponentModel.GroupDescription.GroupNames" /> precisar ser serializado; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.ShouldSerializeSortDescriptions">
      <summary vsli:raw="Returns whether serialization processes should serialize the effective value of the &lt;see cref=&quot;P:System.ComponentModel.GroupDescription.SortDescriptions&quot; /&gt; property on instances of this class.">Indica se os processos de serialização devem serializar o valor efetivo da propriedade <see cref="P:System.ComponentModel.GroupDescription.SortDescriptions" /> em instâncias dessa classe.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.ComponentModel.GroupDescription.SortDescriptions&quot; /&gt; property value should be serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o valor da propriedade <see cref="P:System.ComponentModel.GroupDescription.SortDescriptions" /> precisar ser serializado; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.GroupDescription.SortDescriptions">
      <summary vsli:raw="Gets the collection of sort criteria in which to sort the groups.">Obtém a coleção de critérios de classificação para classificar os grupos.</summary>
      <returns vsli:raw="The collection of sort criteria in which to sort the groups.">A coleção de critérios de classificação na qual classificar os grupos.</returns>
    </member>
    <member name="E:System.ComponentModel.GroupDescription.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary vsli:raw="Occurs when a property value changes.">Ocorre quando um valor de propriedade é alterado.</summary>
    </member>
    <member name="T:System.ComponentModel.ICollectionView">
      <summary vsli:raw="Enables collections to have the functionalities of current record management, custom sorting, filtering, and grouping.">Habilita funcionalidades de gerenciamento de registro atual, de classificação personalizada, de filtragem e de agrupamento para as coleções.</summary>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CanFilter">
      <summary vsli:raw="Gets a value that indicates whether this view supports filtering via the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.Filter&quot; /&gt; property.">Obtém um valor que indica se esta exibição é compatível com filtragem por meio da propriedade <see cref="P:System.ComponentModel.ICollectionView.Filter" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this view support filtering; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Se esta exibição dá suporte à filtragem; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CanGroup">
      <summary vsli:raw="Gets a value that indicates whether this view supports grouping via the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.GroupDescriptions&quot; /&gt; property.">Obtém um valor que indica se esta exibição é compatível com agrupamento por meio da propriedade <see cref="P:System.ComponentModel.ICollectionView.GroupDescriptions" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this view supports grouping; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Se esta exibição oferece suporte a agrupamento; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CanSort">
      <summary vsli:raw="Gets a value that indicates whether this view supports sorting via the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.SortDescriptions&quot; /&gt; property.">Obtém um valor que indica se esta exibição é compatível com a classificação por meio da propriedade <see cref="P:System.ComponentModel.ICollectionView.SortDescriptions" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this view supports sorting; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Se esta exibição oferece suporte à classificação; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.Contains(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether a given item belongs to this collection view.">Retorna um valor que indica se um determinado item pertence a essa exibição de coleção.</summary>
      <param name="item" vsli:raw="The object to check.">O objeto a ser verificado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the item belongs to this collection view; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o item pertencer à esta exibição de coleção; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.Culture">
      <summary vsli:raw="Gets or sets the cultural info for any operations of the view that may differ by culture, such as sorting.">Obtém ou define as informações culturais para todas as operações da exibição que podem ser diferentes por cultura, como classificação.</summary>
      <returns vsli:raw="The culture to use during sorting.">A cultura a ser usada durante a classificação.</returns>
    </member>
    <member name="E:System.ComponentModel.ICollectionView.CurrentChanged">
      <summary vsli:raw="When implementing this interface, raise this event after the current item has been changed.">Ao implementar essa interface, gere este evento após o item atual ter sido alterado.</summary>
    </member>
    <member name="E:System.ComponentModel.ICollectionView.CurrentChanging">
      <summary vsli:raw="When implementing this interface, raise this event before changing the current item. Event handler can cancel this event.">Ao implementar esta interface, gere este evento antes de alterar o item atual. O manipulador de eventos pode cancelar este evento.</summary>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CurrentItem">
      <summary vsli:raw="Gets the current item in the view.">Obtém o item atual na exibição.</summary>
      <returns vsli:raw="The current item of the view or &lt;see langword=&quot;null&quot; /&gt; if there is no current item.">O item atual da exibição ou <see langword="null" /> se não houver nenhum item atual.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CurrentPosition">
      <summary vsli:raw="Gets the ordinal position of the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; within the view.">Obtém a posição ordinal do <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> na exibição.</summary>
      <returns vsli:raw="The ordinal position of the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; within the view.">A posição ordinal do <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> na exibição.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.DeferRefresh">
      <summary vsli:raw="Enters a defer cycle that you can use to merge changes to the view and delay automatic refresh.">Insere um ciclo de atraso que pode ser usado para mesclar as alterações na exibição e atrasar a atualização automática.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IDisposable&quot; /&gt; object that you can use to dispose of the calling object.">Um objeto <see cref="T:System.IDisposable" /> que pode ser usado para descartar o objeto de chamada.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.Filter">
      <summary vsli:raw="Gets or sets a callback used to determine if an item is suitable for inclusion in the view.">Obtém ou define um retorno de chamada usado para determinar se um item é adequado para inclusão na exibição.</summary>
      <returns vsli:raw="A method used to determine if an item is suitable for inclusion in the view.">Um método usado para determinar se um item é adequado para inclusão na exibição.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.GroupDescriptions">
      <summary vsli:raw="Gets a collection of &lt;see cref=&quot;T:System.ComponentModel.GroupDescription&quot; /&gt; objects that describe how the items in the collection are grouped in the view.">Obtém uma coleção de objetos <see cref="T:System.ComponentModel.GroupDescription" /> que descrevem como os itens na coleção são agrupados na exibição.</summary>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.ComponentModel.GroupDescription&quot; /&gt; objects that describe how the items in the collection are grouped in the view.">Uma coleção de <see cref="T:System.ComponentModel.GroupDescription" /> objetos que descrevem como os itens na coleção são agrupados na exibição.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.Groups">
      <summary vsli:raw="Gets the top-level groups.">Obtém os grupos de nível superior.</summary>
      <returns vsli:raw="A read-only collection of the top-level groups or &lt;see langword=&quot;null&quot; /&gt; if there are no groups.">Uma coleção somente leitura dos grupos de nível superior ou <see langword="null" /> se não houver grupos.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.IsCurrentAfterLast">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; of the view is beyond the end of the collection.">Obtém um valor que indica se o <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> da exibição está além do fim da coleção.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; of the view is beyond the end of the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Se o <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> da exibição estiver além do fim da coleção; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.IsCurrentBeforeFirst">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; of the view is beyond the beginning of the collection.">Obtém um valor que indica se o <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> da exibição está além do início da coleção.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; of the view is beyond the beginning of the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Se o <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> da exibição estiver além do início da coleção; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.IsEmpty">
      <summary vsli:raw="Returns a value that indicates whether the resulting view is empty.">Retorna um valor que indica se a exibição resultante está vazia.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting view is empty; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Se o modo de exibição resultante estiver vazio; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentTo(System.Object)">
      <summary vsli:raw="Sets the specified item to be the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; in the view.">Define o item especificado como o <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> na exibição.</summary>
      <param name="item" vsli:raw="The item to set as the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt;.">O item a ser definido como o <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; is within the view; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> resultante estiver na exibição; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToFirst">
      <summary vsli:raw="Sets the first item in the view as the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt;.">Define o primeiro item na exibição como o <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; is an item within the view; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> resultante for um item na exibição; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToLast">
      <summary vsli:raw="Sets the last item in the view as the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt;.">Define o último item na exibição como o <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; is an item within the view; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> resultante for um item na exibição; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToNext">
      <summary vsli:raw="Sets the item after the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; in the view as the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt;.">Define o item após o <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> na exibição como o <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; is an item within the view; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> resultante for um item na exibição; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToPosition(System.Int32)">
      <summary vsli:raw="Sets the item at the specified index to be the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; in the view.">Define o item no índice especificado como sendo o <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> na exibição.</summary>
      <param name="position" vsli:raw="The index to set the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; to.">O índice para o qual definir o <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; is an item within the view; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> resultante for um item na exibição; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToPrevious">
      <summary vsli:raw="Sets the item before the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; in the view as the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt;.">Define o item antes do <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> na exibição como o <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; is an item within the view; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> resultante for um item na exibição; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.Refresh">
      <summary vsli:raw="Recreates the view.">Recria a exibição.</summary>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.SortDescriptions">
      <summary vsli:raw="Gets a collection of &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; objects that describe how the items in the collection are sorted in the view.">Obtém uma coleção de objetos <see cref="T:System.ComponentModel.SortDescription" /> que descrevem como os itens na coleção são classificados na exibição.</summary>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; objects that describe how the items in the collection are sorted in the view.">Uma coleção de objetos <see cref="T:System.ComponentModel.SortDescription" /> que descrevem como os itens na coleção são classificados na exibição.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.SourceCollection">
      <summary vsli:raw="Returns the underlying collection.">Retorna a coleção subjacente.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; object that is the underlying collection.">Um objeto <see cref="T:System.Collections.IEnumerable" /> que está na coleção subjacente.</returns>
    </member>
    <member name="T:System.ComponentModel.ICollectionViewFactory">
      <summary vsli:raw="An interface that enables implementing collections to create a view to their data. Normally, user code does not call methods on this interface.">Uma interface que habilita coleções de implementação a criar uma exibição para seus dados. Normalmente, o código do usuário não chama métodos nesta interface.</summary>
    </member>
    <member name="M:System.ComponentModel.ICollectionViewFactory.CreateView">
      <summary vsli:raw="Creates a new view on the collection that implements this interface. Typically, user code does not call this method.">Cria uma nova exibição na coleção que implementa essa interface. Normalmente, o código do usuário não chama esse método.</summary>
      <returns vsli:raw="The newly created view.">A exibição recém-criada.</returns>
    </member>
    <member name="T:System.ComponentModel.ICollectionViewLiveShaping">
      <summary vsli:raw="Defines properties that enables sorting, grouping, and filtering on a &lt;see cref=&quot;T:System.Windows.Data.CollectionView&quot; /&gt; in real time.">Define propriedades que permitem classificação, agrupamento e filtragem em uma <see cref="T:System.Windows.Data.CollectionView" /> em tempo real.</summary>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.CanChangeLiveFiltering">
      <summary vsli:raw="Gets a value that indicates whether the collection view supports turning filtering data in real time on or off.">Obtém um valor que indica se a exibição de coleção é compatível com a ativação ou desativação da filtragem de dados em tempo real.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection view supports turning live filtering on or off; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Se o modo de exibição de coleção oferecer suporte à ativação ou desativação da filtragem dinâmica; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.CanChangeLiveGrouping">
      <summary vsli:raw="Gets a value that indicates whether the collection view supports turning grouping data in real time on or off.">Obtém um valor que indica se a exibição de coleção é compatível com a ativação ou desativação do agrupamento de dados em tempo real.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection view supports turning live grouping on or off; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />se a exibição de coleção oferecer suporte para ativar ou desativar o agrupamento dinâmico; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.CanChangeLiveSorting">
      <summary vsli:raw="Gets a value that indicates whether the collection view supports turning sorting data in real time on or off.">Obtém um valor que indica se a exibição de coleção é compatível com a ativação ou desativação da classificação de dados em tempo real.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection view supports turning live sorting on or off; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />se a exibição de coleção oferecer suporte para ativar ou desativar a classificação dinâmica; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.IsLiveFiltering">
      <summary vsli:raw="Gets or sets a value that indicates whether filtering data in real time is enabled.">Obtém ou define um valor que indica se a filtragem de dados em tempo real está habilitada.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if filtering data in real time is enabled; &lt;see langword=&quot;false&quot; /&gt; if live filtering is not enabled; &lt;see langword=&quot;null&quot; /&gt; if it cannot be determined whether the collection view implements live filtering.">
        <see langword="true" /> se a filtragem de dados em tempo real está habilitada; <see langword="false" /> se a filtragem em tempo real não está habilitada; <see langword="null" /> se não é possível determinar se o modo de exibição de coleção implementa a filtragem em tempo real.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.IsLiveGrouping">
      <summary vsli:raw="Gets or sets a value that indicates whether grouping data in real time is enabled.">Obtém ou define um valor que indica se o agrupamento de dados em tempo real está habilitado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if grouping data in real time is enable; &lt;see langword=&quot;false&quot; /&gt; if live grouping is not enabled; &lt;see langword=&quot;null&quot; /&gt; if it cannot be determined whether the collection view implements live grouping.">
        <see langword="true" />Se o agrupamento de dados em tempo real for habilitado; <see langword="false" /> se o agrupamento dinâmico não estiver habilitado; <see langword="null" /> se não for possível determinar se a exibição de coleção implementa o Agrupamento ao vivo.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.IsLiveSorting">
      <summary vsli:raw="Gets or sets a value that indicates whether sorting in real time is enabled.">Obtém ou define um valor que indica se a classificação em tempo real está habilitada.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if sorting data in real time is enable; &lt;see langword=&quot;false&quot; /&gt; if live sorting is not enabled; &lt;see langword=&quot;null&quot; /&gt; if it cannot be determined whether the collection view implements live sorting.">
        <see langword="true" /> se a classificação de dados em tempo real está habilitada; <see langword="false" /> se a classificação em tempo real não está habilitada; <see langword="null" /> se não é possível determinar se o modo de exibição de coleção implementa a classificação em tempo real.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.LiveFilteringProperties">
      <summary vsli:raw="Gets a collection of strings that specify the properties that participate in filtering data in real time.">Obtém uma coleção de cadeias de caracteres que especificam as propriedades que participam da filtragem de dados em tempo real.</summary>
      <returns vsli:raw="A collection of strings that specify the properties that participate in filtering data in real time.">Uma coleção de cadeias de caracteres que especificam as propriedades que participam da filtragem de dados em tempo real.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.LiveGroupingProperties">
      <summary vsli:raw="Gets a collection of strings that specify the properties that participate in grouping data in real time.">Obtém uma coleção de cadeias de caracteres que especificam as propriedades que participam do agrupamento de dados em tempo real.</summary>
      <returns vsli:raw="A collection of strings that specify the properties that participate in grouping data in real time.">Uma coleção de cadeias de caracteres que especificam as propriedades que participam do agrupamento de dados em tempo real.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.LiveSortingProperties">
      <summary vsli:raw="Gets a collection of strings that specify the properties that participate in sorting data in real time.">Obtém uma coleção de cadeias de caracteres que especificam as propriedades que participam da classificação de dados em tempo real.</summary>
      <returns vsli:raw="A collection of strings that specify the properties that participate in sorting data in real time.">Uma coleção de cadeias de caracteres que especificam as propriedades que participam da classificação de dados em tempo real.</returns>
    </member>
    <member name="T:System.ComponentModel.IEditableCollectionView">
      <summary vsli:raw="Defines methods and properties that a &lt;see cref=&quot;T:System.Windows.Data.CollectionView&quot; /&gt; implements to provide editing capabilities to a collection.">Define os métodos e as propriedades que uma <see cref="T:System.Windows.Data.CollectionView" /> implementa para fornecer recursos de edição a uma coleção.</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.AddNew">
      <summary vsli:raw="Adds a new item to the collection.">Adiciona um novo item à coleção.</summary>
      <returns vsli:raw="The new item that is added to the collection.">O novo item que é adicionado à coleção.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CanAddNew">
      <summary vsli:raw="Gets a value that indicates whether a new item can be added to the collection.">Obtém um valor que indica se um novo item pode ser adicionado à coleção.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a new item can be added to the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />se um novo item puder ser adicionado à coleção; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CanCancelEdit">
      <summary vsli:raw="Gets a value that indicates whether the collection view can discard pending changes and restore the original values of an edited object.">Obtém um valor que indica se a exibição de coleção pode descartar as alterações pendentes e restaurar os valores originais de um objeto editado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection view can discard pending changes and restore the original values of an edited object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Se o modo de exibição de coleção puder descartar as alterações pendentes e restaurar os valores originais de um objeto editado; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CancelEdit">
      <summary vsli:raw="Ends the edit transaction and, if possible, restores the original value to the item.">Termina a transação de edição e, se possível, restaura o valor original para o item.</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CancelNew">
      <summary vsli:raw="Ends the add transaction and discards the pending new item.">Termina a transação de adição e descarta o novo item pendente.</summary>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CanRemove">
      <summary vsli:raw="Gets a value that indicates whether an item can be removed from the collection.">Obtém um valor que indica se um item pode ser removido da coleção.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an item can be removed from the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />se um item puder ser removido da coleção; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CommitEdit">
      <summary vsli:raw="Ends the edit transaction and saves the pending changes.">Termina a transação de edição e salva as alterações pendentes.</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CommitNew">
      <summary vsli:raw="Ends the add transaction and saves the pending new item.">Termina a transação de adição e salva o novo item pendente.</summary>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CurrentAddItem">
      <summary vsli:raw="Gets the item that is being added during the current add transaction.">Obtém o item que está sendo adicionado durante a transação de adição atual.</summary>
      <returns vsli:raw="The item that is being added if &lt;see cref=&quot;P:System.ComponentModel.IEditableCollectionView.IsAddingNew&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">O item que está sendo adicionado se <see cref="P:System.ComponentModel.IEditableCollectionView.IsAddingNew" /> for <see langword="true" />; caso contrário <see langword="null" />,.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CurrentEditItem">
      <summary vsli:raw="Gets the item in the collection that is being edited.">Obtém o item na coleção que está sendo editado.</summary>
      <returns vsli:raw="The item in the collection that is being edited if &lt;see cref=&quot;P:System.ComponentModel.IEditableCollectionView.IsEditingItem&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">O item na coleção que está sendo editada se <see cref="P:System.ComponentModel.IEditableCollectionView.IsEditingItem" /> for <see langword="true" />; caso contrário <see langword="null" />,.</returns>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.EditItem(System.Object)">
      <summary vsli:raw="Begins an edit transaction of the specified item.">Inicia uma transação de edição do item especificado.</summary>
      <param name="item" vsli:raw="The item to edit.">O item a ser editado.</param>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.IsAddingNew">
      <summary vsli:raw="Gets a value that indicates whether an add transaction is in progress.">Obtém um valor que indica se uma transação de adição está em andamento.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an add transaction is in progress; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />se uma transação de adição estiver em andamento; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.IsEditingItem">
      <summary vsli:raw="Gets a value that indicates whether an edit transaction is in progress.">Obtém um valor que indica se uma transação de edição está em andamento.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an edit transaction is in progress; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />se uma transação de edição estiver em andamento; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition">
      <summary vsli:raw="Gets or sets the position of the new item placeholder in the collection view.">Obtém ou define a posição do novo espaço reservado de item na exibição da coleção.</summary>
      <returns vsli:raw="One of the enumeration values that specifies the position of the new item placeholder in the collection view.">Um dos valores de enumeração que especifica a posição do novo espaço reservado de item no modo de exibição de coleção.</returns>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.Remove(System.Object)">
      <summary vsli:raw="Removes the specified item from the collection.">Remove o item especificado da coleção.</summary>
      <param name="item" vsli:raw="The item to remove.">O item a ser removido.</param>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the item at the specified position from the collection.">Remove o item na posição especificada da coleção.</summary>
      <param name="index" vsli:raw="The position of the item to remove.">A posição do item a ser removido.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than 0 or greater than the number of items in the collection view.">
        <paramref name="index" /> é menor que 0 ou maior que o número de itens na exibição de coleção.</exception>
    </member>
    <member name="T:System.ComponentModel.IEditableCollectionViewAddNewItem">
      <summary vsli:raw="Defines methods and properties that a &lt;see cref=&quot;T:System.Windows.Data.CollectionView&quot; /&gt; implements to enable specifying adding items of a specific type.">Define os métodos e propriedades que um <see cref="T:System.Windows.Data.CollectionView" /> implementa para habilitar a especificação de adição de itens de um tipo específico.</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionViewAddNewItem.AddNewItem(System.Object)">
      <summary vsli:raw="Adds the specified object to the collection.">Adiciona o objeto especificado à coleção.</summary>
      <param name="newItem" vsli:raw="The object to add to the collection.">O objeto a ser adicionado à coleção.</param>
      <returns vsli:raw="The object that is added to the collection.">O objeto que foi adicionado à coleção.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionViewAddNewItem.CanAddNewItem">
      <summary vsli:raw="Gets a value that indicates whether a specified object can be added to the collection.">Obtém um valor que indica se um objeto especificado pode ser adicionado à coleção.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a specified object can be added to the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />se um objeto especificado puder ser adicionado à coleção; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="T:System.ComponentModel.IItemProperties">
      <summary vsli:raw="Defines a property that provides information about an object's properties.">Define uma propriedade que fornece informações sobre propriedades de um objeto.</summary>
    </member>
    <member name="P:System.ComponentModel.IItemProperties.ItemProperties">
      <summary vsli:raw="Gets a collection that contains information about the properties that are available on the items in a collection.">Obtém uma coleção que contém informações sobre as propriedades que estão disponíveis nos itens em uma coleção.</summary>
      <returns vsli:raw="A collection that contains information about the properties that are available on the items in a collection.">Uma coleção que contém informações sobre as propriedades que estão disponíveis nos itens de uma coleção.</returns>
    </member>
    <member name="T:System.ComponentModel.ItemPropertyInfo">
      <summary vsli:raw="Contains information about a property.">Contém informações sobre uma propriedade.</summary>
    </member>
    <member name="M:System.ComponentModel.ItemPropertyInfo.#ctor(System.String,System.Type,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.ItemPropertyInfo&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.ItemPropertyInfo" />.</summary>
      <param name="name" vsli:raw="The name of the property.">O nome da propriedade.</param>
      <param name="type" vsli:raw="The type of the property.">O tipo da propriedade.</param>
      <param name="descriptor" vsli:raw="An object that contains additional information about the property.">Um objeto que contém informações adicionais sobre a propriedade.</param>
    </member>
    <member name="P:System.ComponentModel.ItemPropertyInfo.Descriptor">
      <summary vsli:raw="Gets an object that contains additional information about the property.">Obtém um objeto que contém informações adicionais sobre a propriedade.</summary>
      <returns vsli:raw="An object that contains additional information about the property.">Um objeto que contém informações adicionais sobre a propriedade.</returns>
    </member>
    <member name="P:System.ComponentModel.ItemPropertyInfo.Name">
      <summary vsli:raw="Gets the name of the property.">Obtém o nome da propriedade.</summary>
      <returns vsli:raw="The name of the property.">O nome da propriedade.</returns>
    </member>
    <member name="P:System.ComponentModel.ItemPropertyInfo.PropertyType">
      <summary vsli:raw="Gets the type of the property.">Obtém tipo da propriedade.</summary>
      <returns vsli:raw="The type of the property.">O tipo da propriedade.</returns>
    </member>
    <member name="T:System.ComponentModel.NewItemPlaceholderPosition">
      <summary vsli:raw="Specifies where the placeholder for a new item appears in the collection.">Especifica em que local o espaço reservado para um novo item aparece na coleção.</summary>
    </member>
    <member name="F:System.ComponentModel.NewItemPlaceholderPosition.AtBeginning">
      <summary vsli:raw="The placeholder for a new item appears at the beginning of the collection.  New items are at the beginning of the collection, after the new item placeholder.">O espaço reservado para um novo item é exibido no início da coleção.  Novos itens estão no início da coleção, após o novo espaço reservado do item.</summary>
    </member>
    <member name="F:System.ComponentModel.NewItemPlaceholderPosition.AtEnd">
      <summary vsli:raw="The placeholder for a new item appears at the end of the collection. New items are added at the end of the collection, before the new item placeholder.">O espaço reservado para um novo item é exibido no final da coleção. Novos itens são adicionados ao final da coleção, antes do novo espaço reservado do item.</summary>
    </member>
    <member name="F:System.ComponentModel.NewItemPlaceholderPosition.None">
      <summary vsli:raw="The collection does not use a new item placeholder. The position of items that are added depends on the underlying collection.  Usually, they are added at the end of the collection.">A coleção não usa um novo espaço reservado de item. A posição dos itens que são adicionados depende da coleção subjacente.  Geralmente, são adicionados ao final da coleção.</summary>
    </member>
    <member name="T:System.ComponentModel.PropertyChangedEventManager">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; implementation so that you can use the &quot;weak event listener&quot; pattern to attach listeners for the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">Fornece uma implementação <see cref="T:System.Windows.WeakEventManager" /> para que seja possível usar o padrão “ouvinte de eventos fraco” para anexar ouvintes ao evento <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</summary>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.AddHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)">
      <summary vsli:raw="Adds the specified event handler, which is called when specified source raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event for the specified property.">Adiciona o manipulador de eventos especificado, que é chamado quando a origem especificada gera o evento <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> para a propriedade especificada.</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">O objeto de origem que gera o evento <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">O delegado que manipula o evento <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</param>
      <param name="propertyName" vsli:raw="The name of the property that exists on &lt;paramref name=&quot;source&quot; /&gt; upon which to listen for changes. Set to &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; to indicate &quot;any property&quot;.">O nome da propriedade que existe no <paramref name="source" /> no qual escutar em busca de alterações. Defina como <see cref="F:System.String.Empty" /> para indicar "qualquer propriedade".</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" /> é <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="More than one method is associated with &lt;paramref name=&quot;handler&quot; /&gt;.">Mais de um método está associado a <paramref name="handler" />.</exception>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.AddListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)">
      <summary vsli:raw="Adds the specified listener to the list of listeners on the specified source.">Adiciona o ouvinte especificado à lista de ouvintes na fonte especificada.</summary>
      <param name="source" vsli:raw="The object with the event.">O objeto com o evento.</param>
      <param name="listener" vsli:raw="The object to add as a listener.">O objeto a ser adicionado como um ouvinte.</param>
      <param name="propertyName" vsli:raw="The name of the property that exists on &lt;paramref name=&quot;source&quot; /&gt; upon which to listen for changes. Set to &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; to indicate &quot;any property&quot;.">O nome da propriedade que existe no <paramref name="source" /> no qual escutar em busca de alterações. Defina como <see cref="F:System.String.Empty" /> para indicar "qualquer propriedade".</param>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.NewListenerList">
      <summary vsli:raw="Returns a new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">Retorna um novo objeto para conter ouvintes do evento <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</summary>
      <returns vsli:raw="A new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">Um novo objeto para conter ouvintes do evento <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.Purge(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Removes listeners that are no longer active from the data for the provided source.">Remove os ouvintes que não estão mais ativos dos dados para a origem fornecida.</summary>
      <param name="source" vsli:raw="Source object to remove all listeners from.">Objeto de origem do qual remover todos os ouvintes.</param>
      <param name="data" vsli:raw="The data to purge. This is expected to be a &lt;see cref=&quot;T:System.Collections.Specialized.HybridDictionary&quot; /&gt;.">Os dados a serem limpos. Espera-se que isso seja um <see cref="T:System.Collections.Specialized.HybridDictionary" />.</param>
      <param name="purgeAll" vsli:raw="Set to &lt;see langword=&quot;true&quot; /&gt; to stop listening and to completely remove all data.">Definido como <see langword="true" /> a fim de parar de escutar e remover completamente todos os dados.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if some entries were removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se algumas entradas foram removidas, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.RemoveHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)">
      <summary vsli:raw="Removes the specified event handler from the specified source.">Remove o manipulador de eventos especificado da fonte especificada.</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">O objeto de origem que gera o evento <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">O delegado que manipula o evento <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</param>
      <param name="propertyName" vsli:raw="The name of the property that exists on &lt;paramref name=&quot;source&quot; /&gt; upon which to stop listening for changes. Set to &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; to indicate &quot;any property&quot;.">O nome da propriedade que existe em <paramref name="source" /> na qual parar de escutar em busca de alterações. Defina como <see cref="F:System.String.Empty" /> para indicar "qualquer propriedade".</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" /> é <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="More than one method is associated with &lt;paramref name=&quot;handler&quot; /&gt;.">Mais de um método está associado a <paramref name="handler" />.</exception>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.RemoveListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)">
      <summary vsli:raw="Removes the specified listener from the list of listeners on the provided source.">Remove o ouvinte especificado da lista de ouvintes na origem especificada.</summary>
      <param name="source" vsli:raw="The object to remove the listener from.">O objeto do qual remover o ouvinte.</param>
      <param name="listener" vsli:raw="The listener to remove.">O ouvinte a ser removido.</param>
      <param name="propertyName" vsli:raw="The name of the property that exists on &lt;paramref name=&quot;source&quot; /&gt; upon which to stop listening for changes. Set to &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; to indicate &quot;any property&quot;.">O nome da propriedade que existe em <paramref name="source" /> na qual parar de escutar em busca de alterações. Defina como <see cref="F:System.String.Empty" /> para indicar "qualquer propriedade".</param>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.StartListening(System.Object)">
      <summary vsli:raw="Begins listening for the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event on the provided source.">Começa a escutar o evento <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> na origem fornecida.</summary>
      <param name="source" vsli:raw="The object on which to start listening for &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt;.">O objeto no qual começar a escutar <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</param>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.StopListening(System.Object)">
      <summary vsli:raw="Stops listening for the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event on the provided source.">Para de escutar o evento <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> na origem fornecida.</summary>
      <param name="source" vsli:raw="The source object on which to stop listening for &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt;.">O objeto de origem no qual deixar de escutar <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</param>
    </member>
    <member name="T:System.ComponentModel.PropertyFilterAttribute">
      <summary vsli:raw="Specifies which properties should be reported by type descriptors, specifically the &lt;see cref=&quot;M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)&quot; /&gt; method.">Especifica quais propriedades devem ser relatadas por descritores de tipo, especificamente o método <see cref="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)" />.</summary>
    </member>
    <member name="M:System.ComponentModel.PropertyFilterAttribute.#ctor(System.ComponentModel.PropertyFilterOptions)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.PropertyFilterAttribute" />.</summary>
      <param name="filter" vsli:raw="The options that describe this property filter.">As opções que descrevem esse filtro de propriedade.</param>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterAttribute.Default">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</summary>
    </member>
    <member name="M:System.ComponentModel.PropertyFilterAttribute.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether the current &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt; .NET Framework attribute is equal to a specified object.">Retorna um valor que indica se o <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> Atributo do .NET Framework atual é igual a um objeto especificado.</summary>
      <param name="value" vsli:raw="The object to compare to this &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt;.">O objeto a comparar a este <see cref="T:System.ComponentModel.PropertyFilterAttribute" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> especificado for igual ao <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.PropertyFilterAttribute.Filter">
      <summary vsli:raw="Gets the filter options for this &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt; .NET Framework attribute.">Obtém as opções de filtro para este <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> Atributo do .NET Framework.</summary>
      <returns vsli:raw="The property filter options.">As opções de filtro de propriedade.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyFilterAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for the current &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt; .NET Framework attribute.">Retorna o código hash do <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> Atributo do .NET Framework atual.</summary>
      <returns vsli:raw="A signed 32-bit integer value.">Um valor inteiro de 32 bits com sinal.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyFilterAttribute.Match(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether the property filter options of the current &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt; .NET Framework attribute match the property filter options of the provided object.">Retorna um valor que indica se as opções de filtro de propriedade do <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> Atributo do .NET Framework atual correspondem às opções de filtro de propriedade do objeto fornecido.</summary>
      <param name="value" vsli:raw="The object to compare. This object is expected to be a &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt;.">O objeto a ser comparado. Espera-se que este objeto seja um <see cref="T:System.ComponentModel.PropertyFilterAttribute" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a match exists; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se há uma correspondência; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.PropertyFilterOptions">
      <summary vsli:raw="Specifies which properties should be reported by type descriptors, specifically the &lt;see cref=&quot;M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)&quot; /&gt; method. This enumeration is used to specify the value of the &lt;see cref=&quot;P:System.ComponentModel.PropertyFilterAttribute.Filter&quot; /&gt; property.">Especifica quais propriedades devem ser relatadas por descritores de tipo, especificamente o método <see cref="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)" />. Esta enumeração é usada para especificar o valor da propriedade <see cref="P:System.ComponentModel.PropertyFilterAttribute.Filter" />.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.All">
      <summary vsli:raw="Return all properties.">Retornar todas as propriedades.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.Invalid">
      <summary vsli:raw="Return only those properties that are not valid given the current context of the object.">Retorne apenas as propriedades que não são válidas considerando o contexto atual do objeto.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.None">
      <summary vsli:raw="Return no properties.">Não retornar nenhuma propriedade</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.SetValues">
      <summary vsli:raw="Return only those properties that have local values currently set.">Retorne apenas as propriedades que têm valores locais definidos atualmente.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.UnsetValues">
      <summary vsli:raw="Return only those properties whose local values are not set, or do not have properties set in an external expression store (such as binding or deferred resource).">Retorne somente as propriedades cujos valores locais não estão definidos ou não têm propriedades definidas em um repositório de expressões externo (assim como um recurso de associação ou adiado).</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.Valid">
      <summary vsli:raw="Return any property that is valid on the object in the current scope.">Retorne qualquer propriedade que é válida no objeto no escopo atual.</summary>
    </member>
    <member name="T:System.ComponentModel.SortDescription">
      <summary vsli:raw="Defines the direction and the property name to be used as the criteria for sorting a collection.">Define a direção e o nome da propriedade a ser usada como critério para classificar uma coleção.</summary>
    </member>
    <member name="M:System.ComponentModel.SortDescription.#ctor(System.String,System.ComponentModel.ListSortDirection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; structure.">Inicializa uma nova instância da estrutura <see cref="T:System.ComponentModel.SortDescription" />.</summary>
      <param name="propertyName" vsli:raw="The name of the property to sort the list by. If the collection contains strings or value types, set this parameter to the empty string (&quot;&quot;).">O nome da propriedade pela qual a lista será classificada.</param>
      <param name="direction" vsli:raw="The sort order.">A ordem de classificação.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="The &lt;paramref name=&quot;direction&quot; /&gt; parameter does not specify a valid value.">O parâmetro <paramref name="direction" /> não especifica um valor válido.</exception>
    </member>
    <member name="P:System.ComponentModel.SortDescription.Direction">
      <summary vsli:raw="Gets or sets a value that indicates whether to sort in ascending or descending order.">Obtém ou define um valor que indica se deve classificar em ordem crescente ou decrescente.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListSortDirection&quot; /&gt; value to indicate whether to sort in ascending or descending order.">Um <see cref="T:System.ComponentModel.ListSortDirection" /> valor para indicar se deve ser classificado em ordem crescente ou decrescente.</returns>
    </member>
    <member name="M:System.ComponentModel.SortDescription.Equals(System.Object)">
      <summary vsli:raw="Compares the specified instance and the current instance of &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; for value equality.">Compara a instância especificada e a instância atual de <see cref="T:System.ComponentModel.SortDescription" /> quanto à igualdade de valores.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; instance to compare.">A instância de <see cref="T:System.ComponentModel.SortDescription" /> a ser comparada.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; and this instance of &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; have the same values.">
        <see langword="true" /> se <paramref name="obj" /> e essa instância de <see cref="T:System.ComponentModel.SortDescription" /> têm os mesmos valores.</returns>
    </member>
    <member name="M:System.ComponentModel.SortDescription.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance of &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt;.">Retorna o código hash para essa instância de <see cref="T:System.ComponentModel.SortDescription" />.</summary>
      <returns vsli:raw="The hash code for this instance of &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt;.">O código hash para essa instância de <see cref="T:System.ComponentModel.SortDescription" />.</returns>
    </member>
    <member name="P:System.ComponentModel.SortDescription.IsSealed">
      <summary vsli:raw="Gets a value that indicates whether this object is in an immutable state.">Obtém um valor que indica se este objeto está em um estado imutável.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this object is in use; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Se esse objeto estiver em uso; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="M:System.ComponentModel.SortDescription.op_Equality(System.ComponentModel.SortDescription,System.ComponentModel.SortDescription)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; objects for value equality.">Compara dois objetos <see cref="T:System.ComponentModel.SortDescription" /> quanto à igualdade de valor.</summary>
      <param name="sd1" vsli:raw="The first instance to compare.">A primeira instância a ser comparada.</param>
      <param name="sd2" vsli:raw="The second instance to compare.">A segunda instância a ser comparada.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two objects are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se os dois objetos forem iguais; do contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.SortDescription.op_Inequality(System.ComponentModel.SortDescription,System.ComponentModel.SortDescription)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; objects for value inequality.">Compara dois objetos <see cref="T:System.ComponentModel.SortDescription" /> quanto à desigualdade de valor.</summary>
      <param name="sd1" vsli:raw="The first instance to compare.">A primeira instância a ser comparada.</param>
      <param name="sd2" vsli:raw="The second instance to compare.">A segunda instância a ser comparada.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the values are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se os valores não forem iguais, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.SortDescription.PropertyName">
      <summary vsli:raw="Gets or sets the property name being used as the sorting criteria.">Obtém ou define o nome da propriedade usado como critério de classificação.</summary>
      <returns vsli:raw="The default value is null.">O valor padrão é null.</returns>
    </member>
    <member name="T:System.ComponentModel.SortDescriptionCollection">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; objects.">Representa uma coleção de objetos <see cref="T:System.ComponentModel.SortDescription" /> .</summary>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.SortDescriptionCollection&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.SortDescriptionCollection" />.</summary>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.ClearItems">
      <summary vsli:raw="Removes all items from the collection.">Remove todos os itens da coleção.</summary>
    </member>
    <member name="E:System.ComponentModel.SortDescriptionCollection.CollectionChanged">
      <summary vsli:raw="Occurs when an item is added or removed.">Ocorre quando um item é adicionado ou removido.</summary>
    </member>
    <member name="F:System.ComponentModel.SortDescriptionCollection.Empty">
      <summary vsli:raw="Gets an empty and non-modifiable instance of &lt;see cref=&quot;T:System.ComponentModel.SortDescriptionCollection&quot; /&gt;.">Obtém uma instância vazia e não modificável de <see cref="T:System.ComponentModel.SortDescriptionCollection" />.</summary>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.InsertItem(System.Int32,System.ComponentModel.SortDescription)">
      <summary vsli:raw="Inserts an item into the collection at the specified index.">Insere um item na coleção no índice especificado.</summary>
      <param name="index" vsli:raw="The zero-based index where the &lt;paramref name=&quot;item&quot; /&gt; is inserted.">O índice de base zero no qual o <paramref name="item" /> é inserido.</param>
      <param name="item" vsli:raw="The object to insert.">O objeto a ser inserido.</param>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.RemoveItem(System.Int32)">
      <summary vsli:raw="Removes the item at the specified index in the collection.">Remove o item no índice especificado da coleção.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to remove.">O índice de base zero do elemento a ser removido.</param>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.SetItem(System.Int32,System.ComponentModel.SortDescription)">
      <summary vsli:raw="Replaces the element at the specified index.">Substitui o elemento no índice especificado.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to replace.">O índice de base zero do elemento a ser substituído.</param>
      <param name="item" vsli:raw="The new value for the element at the specified index.">O novo valor para o elemento no índice especificado.</param>
    </member>
    <member name="E:System.ComponentModel.SortDescriptionCollection.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged">
      <summary vsli:raw="Occurs when an item is added or removed.">Ocorre quando um item é adicionado ou removido.</summary>
    </member>
    <member name="T:System.Diagnostics.PresentationTraceLevel">
      <summary vsli:raw="Describes the level of detail to trace about a particular object.">Descreve o nível de detalhes para rastreamento sobre um objeto específico.</summary>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceLevel.High">
      <summary vsli:raw="Traces all additional information.">Rastreia todas as informações adicionais.</summary>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceLevel.Low">
      <summary vsli:raw="Traces some additional information.">Rastreia algumas informações adicionais.</summary>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceLevel.Medium">
      <summary vsli:raw="Traces a medium amount of additional information.">Rastreia uma quantidade média de informações adicionais.</summary>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceLevel.None">
      <summary vsli:raw="Traces no available additional information.">Não rastreia nenhuma informação adicional disponível.</summary>
    </member>
    <member name="T:System.Diagnostics.PresentationTraceSources">
      <summary vsli:raw="Provides debug tracing support that is specifically targeted for Windows Presentation Foundation (WPF) applications.">Fornece suporte de rastreamento de depuração direcionado especificamente para aplicativos WPF (Windows Presentation Foundation).</summary>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.AnimationSource">
      <summary vsli:raw="Gets an animation trace source.">Obtém uma origem de rastreamento de animação.</summary>
      <returns vsli:raw="An animation trace source.">Uma origem de rastreamento de animação.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.DataBindingSource">
      <summary vsli:raw="Gets a data-binding trace source.">Obtém uma origem de rastreamento de associação de dados.</summary>
      <returns vsli:raw="A data-binding trace source.">Uma fonte de rastreamento de vinculação de dados.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.DependencyPropertySource">
      <summary vsli:raw="Gets a dependency property trace source.">Obtém uma origem de rastreamento de propriedade de dependência.</summary>
      <returns vsli:raw="A dependency property trace source.">Uma fonte de rastreamento de propriedade de dependência.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.DocumentsSource">
      <summary vsli:raw="Gets a document trace source.">Obtém uma origem de rastreamento de documento.</summary>
      <returns vsli:raw="A document trace source.">Uma origem de rastreamento de documento.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.FreezableSource">
      <summary vsli:raw="Gets a Freezable trace source.">Obtém uma origem de rastreamento Congelável.</summary>
      <returns vsli:raw="A Freezable trace source.">Uma origem de rastreamento de Freezable.</returns>
    </member>
    <member name="M:System.Diagnostics.PresentationTraceSources.GetTraceLevel(System.Object)">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;P:System.Diagnostics.PresentationTraceSources.TraceLevel&quot; /&gt; attached property for a specified element.">Obtém o valor da propriedade anexada <see cref="F:System.Diagnostics.PresentationTraceSources.TraceLevelProperty" /> para um elemento especificado.</summary>
      <param name="element" vsli:raw="The element from which the property value is read.">O elemento do qual o valor da propriedade é lido.</param>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.PresentationTraceSources.TraceLevel&quot; /&gt; property value for the element.">O valor da propriedade <see cref="F:System.Diagnostics.PresentationTraceSources.TraceLevelProperty" /> para o elemento.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.HwndHostSource">
      <summary vsli:raw="Gets an hwnd host trace source.">Obtém uma origem de rastreamento de host hwnd.</summary>
      <returns vsli:raw="An hwnd host trace source.">Uma origem de rastreamento de host HWND.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.MarkupSource">
      <summary vsli:raw="Gets a markup trace source.">Obtém uma origem de rastreamento de marcação.</summary>
      <returns vsli:raw="A markup trace source.">Uma origem de rastreamento de marcação.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.NameScopeSource">
      <summary vsli:raw="Gets a name scope trace source.">Obtém uma origem de rastreamento de escopo de nome.</summary>
      <returns vsli:raw="A name scope trace source.">Uma origem de rastreamento de escopo de nome.</returns>
    </member>
    <member name="M:System.Diagnostics.PresentationTraceSources.Refresh">
      <summary vsli:raw="Refreshes trace sources, by forcing the app.config file to be re-read.">Atualiza origens de rastreamento, forçando o arquivo app.config a ser relido.</summary>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.ResourceDictionarySource">
      <summary vsli:raw="Gets a resource dictionary trace source.">Obtém uma origem de rastreamento de dicionário de recursos.</summary>
      <returns vsli:raw="A resource dictionary trace source.">Uma origem de rastreamento do dicionário de recursos.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.RoutedEventSource">
      <summary vsli:raw="Gets a routed event trace source.">Obtém uma origem de rastreamento de evento roteado.</summary>
      <returns vsli:raw="A routed event trace source.">Uma origem de rastreamento de eventos roteados.</returns>
    </member>
    <member name="M:System.Diagnostics.PresentationTraceSources.SetTraceLevel(System.Object,System.Diagnostics.PresentationTraceLevel)">
      <summary vsli:raw="Sets the value of the &lt;see cref=&quot;P:System.Diagnostics.PresentationTraceSources.TraceLevel&quot; /&gt; attached property to a specified element.">Obtém o valor da propriedade anexada <see cref="F:System.Diagnostics.PresentationTraceSources.TraceLevelProperty" /> para um elemento especificado.</summary>
      <param name="element" vsli:raw="The element to which the attached property is written.">O elemento no qual a propriedade anexada é gravada.</param>
      <param name="traceLevel" vsli:raw="The needed &lt;see cref=&quot;T:System.Diagnostics.PresentationTraceLevel&quot; /&gt; value.">O valor de <see cref="T:System.Diagnostics.PresentationTraceLevel" /> necessário.</param>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.ShellSource">
      <summary vsli:raw="Gets a shell trace source.">Obtém uma origem de rastreamento de shell.</summary>
      <returns vsli:raw="A shell trace source.">Uma origem de rastreamento do Shell.</returns>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceSources.TraceLevelProperty">
      <summary vsli:raw="Identifies the &lt;see cref=&quot;P:System.Diagnostics.PresentationTraceSources.TraceLevel&quot; /&gt; attached property.">Identifica a propriedade <see cref="F:System.Diagnostics.PresentationTraceSources.TraceLevelProperty" /> anexada.</summary>
    </member>
    <member name="T:System.IO.FileFormatException">
      <summary>Uma exceção que é lançada quando um arquivo de entrada ou um fluxo de dados que deve estar em conformidade com uma determinada especificação de formato de arquivo está malformado.</summary>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor">
      <summary>Cria uma nova instância da classe <see cref="T:System.IO.FileFormatException" />.</summary>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Cria uma nova instância da classe <see cref="T:System.IO.FileFormatException" /> e a inicializa usando dados serializados. Este construtor é chamado durante a desserialização para reconstituir o objeto de exceção transmitido por um fluxo.</summary>
      <param name="info">O objeto que mantém os dados de objeto serializados.</param>
      <param name="context">As informações contextuais sobre a origem ou o destino.</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.String)">
      <summary>Cria uma nova instância da classe <see cref="T:System.IO.FileFormatException" /> com uma mensagem de erro especificada.</summary>
      <param name="message">Um valor <see cref="T:System.String" /> que representa a mensagem de erro.</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.String,System.Exception)">
      <summary>Cria uma nova instância da classe <see cref="T:System.IO.FileFormatException" /> com uma mensagem de erro especificada e um tipo de exceção.</summary>
      <param name="message">Um valor <see cref="T:System.String" /> que representa a mensagem de erro.</param>
      <param name="innerException">O valor da propriedade <see cref="P:System.Exception.InnerException" />, que representa a causa da exceção atual.</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri)">
      <summary>Cria uma nova instância da classe <see cref="T:System.IO.FileFormatException" /> com um valor URI de origem.</summary>
      <param name="sourceUri">O valor <see cref="T:System.Uri" /> do arquivo que causou esse erro.</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri,System.Exception)">
      <summary>Cria uma nova instância da classe <see cref="T:System.IO.FileFormatException" /> com um valor URI de origem e um tipo de exceção.</summary>
      <param name="sourceUri">O valor <see cref="T:System.Uri" /> do arquivo que causou esse erro.</param>
      <param name="innerException">O valor da propriedade <see cref="P:System.Exception.InnerException" />, que representa a causa da exceção atual.</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri,System.String)">
      <summary>Cria uma nova instância da classe <see cref="T:System.IO.FileFormatException" /> com um valor URI de origem e uma mensagem de erro especificada.</summary>
      <param name="sourceUri">O valor <see cref="T:System.Uri" /> do arquivo que causou esse erro.</param>
      <param name="message">Um valor <see cref="T:System.String" /> que representa a mensagem de erro.</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri,System.String,System.Exception)">
      <summary>Cria uma nova instância da classe <see cref="T:System.IO.FileFormatException" /> com um valor URI de origem, uma mensagem de erro especificada e um tipo de exceção.</summary>
      <param name="sourceUri">O valor <see cref="T:System.Uri" /> do arquivo que causou esse erro.</param>
      <param name="message">Um valor <see cref="T:System.String" /> que representa a mensagem de erro.</param>
      <param name="innerException">O valor da propriedade <see cref="P:System.Exception.InnerException" />, que representa a causa da exceção atual.</param>
    </member>
    <member name="M:System.IO.FileFormatException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Define o objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> com o nome do arquivo e informações adicionais de exceção.</summary>
      <param name="info">O objeto que mantém os dados de objeto serializados.</param>
      <param name="context">As informações contextuais sobre a origem ou o destino.</param>
    </member>
    <member name="P:System.IO.FileFormatException.SourceUri">
      <summary>Obtém o nome de um arquivo que causou a <see cref="T:System.IO.FileFormatException" />.</summary>
      <returns>Um <see cref="T:System.Uri" /> que representa o nome do arquivo que causou a exceção.</returns>
    </member>
    <member name="T:System.IO.Packaging.CertificateEmbeddingOption">
      <summary vsli:raw="Specifies the location where the X.509 certificate that is used in signing is stored.">Especifica o local em que o certificado x.509 que é usado na assinatura é armazenado.</summary>
    </member>
    <member name="F:System.IO.Packaging.CertificateEmbeddingOption.InCertificatePart">
      <summary vsli:raw="The certificate is embedded in its own &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt;.">O certificado é inserido em seu próprio <see cref="T:System.IO.Packaging.PackagePart" />.</summary>
    </member>
    <member name="F:System.IO.Packaging.CertificateEmbeddingOption.InSignaturePart">
      <summary vsli:raw="The certificate is embedded in the &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.SignaturePart&quot; /&gt; that is created for the signature being added.">O certificado está inserido no <see cref="P:System.IO.Packaging.PackageDigitalSignature.SignaturePart" /> que é criado para a assinatura que está sendo adicionada.</summary>
    </member>
    <member name="F:System.IO.Packaging.CertificateEmbeddingOption.NotEmbedded">
      <summary vsli:raw="The certificate in not embedded in the package.">O certificado não é inserido no pacote.</summary>
    </member>
    <member name="T:System.IO.Packaging.CompressionOption">
      <summary>Especifica o nível de compactação do conteúdo que é armazenado em um <see cref="T:System.IO.Packaging.PackagePart" />.</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.Fast">
      <summary>A compactação é otimizada para o desempenho.</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.Maximum">
      <summary>A compactação é otimizada para o tamanho.</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.Normal">
      <summary>A compactação é otimizada para um equilíbrio entre o desempenho e o tamanho.</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.NotCompressed">
      <summary>A compactação é desligada.</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.SuperFast">
      <summary>A compactação é otimizada para o alto desempenho.</summary>
    </member>
    <member name="T:System.IO.Packaging.EncryptedPackageEnvelope">
      <summary vsli:raw="Represents an OLE compound file that contains an encrypted package.">Representa um arquivo composto OLE que contém um pacote criptografado.</summary>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Close">
      <summary vsli:raw="Closes the encrypted package and the OLE compound file that holds it.">Fecha o pacote criptografado e o arquivo composto OLE que o contém.</summary>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
      <summary vsli:raw="Creates and returns an &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; on the specified stream.">Cria e retorna um <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> no fluxo especificado.</summary>
      <param name="envelopeStream" vsli:raw="The stream on which to create the file.">O fluxo no qual o arquivo será criado.</param>
      <param name="publishLicense" vsli:raw="The publish license that is embedded in the compound file.">A licença de publicação que é inserida no arquivo composto.</param>
      <param name="cryptoProvider" vsli:raw="An object that determines what operations the current user is allowed to perform on the encrypted content.">Um objeto que determina quais operações o usuário atual tem permissão para executar no conteúdo criptografado.</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;.">O <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> recém-criado.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;envelopeStream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="envelopeStream" /> é <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;envelopeStream&quot; /&gt; does not provide read/write access.">
        <paramref name="envelopeStream" /> não fornece acesso de leitura/gravação.</exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
      <summary vsli:raw="Creates and returns an &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; and gives it the specified file name.">Cria e retorna um <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />, concedendo a ele o nome de arquivo especificado.</summary>
      <param name="envelopeFileName" vsli:raw="The name of the OLE compound file.">O nome do arquivo composto OLE.</param>
      <param name="publishLicense" vsli:raw="The publish license that is embedded in the compound file.">A licença de publicação que é inserida no arquivo composto.</param>
      <param name="cryptoProvider" vsli:raw="An object that determines what operations the current user is allowed to perform on the encrypted content.">Um objeto que determina quais operações o usuário atual tem permissão para executar no conteúdo criptografado.</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;.">O <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> recém-criado.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;envelopeFileName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="envelopeFileName" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
      <summary vsli:raw="Creates and returns an &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; (on the specified stream) that uses the specified unencrypted package as its content.">Cria e retorna um <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> (no fluxo especificado) que usa o pacote não criptografado especificado como seu conteúdo.</summary>
      <param name="envelopeStream" vsli:raw="The stream on which to create the file.">O fluxo no qual o arquivo será criado.</param>
      <param name="packageStream" vsli:raw="The stream representing the existing unencrypted package.">O fluxo que representa o pacote não criptografado existente.</param>
      <param name="publishLicense" vsli:raw="The publish license that is embedded in the compound file.">A licença de publicação que é inserida no arquivo composto.</param>
      <param name="cryptoProvider" vsli:raw="An object that determines what operations the current user is allowed to perform on the encrypted content.">Um objeto que determina quais operações o usuário atual tem permissão para executar no conteúdo criptografado.</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;.">O <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> recém-criado.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;envelopeStream&quot; /&gt; or &lt;paramref name=&quot;packageStream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="envelopeStream" /> ou <paramref name="packageStream" /> é <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;envelopeStream&quot; /&gt; does not provide read/write access.">
        <paramref name="envelopeStream" /> não fornece acesso de leitura/gravação.</exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
      <summary vsli:raw="Creates and returns an &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; that uses the specified unencrypted package as its content, and gives it the specified file name.">Cria e retorna um <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> que usa o pacote não criptografado especificado como seu conteúdo, concedendo a ele o nome de arquivo indicado.</summary>
      <param name="envelopeFileName" vsli:raw="The name of the OLE compound file.">O nome do arquivo composto OLE.</param>
      <param name="packageStream" vsli:raw="The stream representing the existing unencrypted package.">O fluxo que representa o pacote não criptografado existente.</param>
      <param name="publishLicense" vsli:raw="The publish license that is embedded in the compound file.">A licença de publicação que é inserida no arquivo composto.</param>
      <param name="cryptoProvider" vsli:raw="An object that determines what operations the current user is allowed to perform on the encrypted content.">Um objeto que determina quais operações o usuário atual tem permissão para executar no conteúdo criptografado.</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;.">O <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> recém-criado.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;envelopeFileName&quot; /&gt; or &lt;paramref name=&quot;packageStream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="envelopeFileName" /> ou <paramref name="packageStream" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;.">Libera todos os recursos usados pelo <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</summary>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; and optionally releases the managed resources.">Libera os recursos não gerenciados usados pelo <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> e opcionalmente libera os recursos gerenciados.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
    </member>
    <member name="P:System.IO.Packaging.EncryptedPackageEnvelope.FileOpenAccess">
      <summary vsli:raw="Gets a value that specifies whether the file was opened with access to read, write, or both.">Obtém um valor que especifica se o arquivo foi aberto com acesso de leitura, gravação ou ambos.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.FileAccess&quot; /&gt; value that was used to open the file.">O <see cref="T:System.IO.FileAccess" /> valor que foi usado para abrir o arquivo.</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Flush">
      <summary vsli:raw="Flush the stream for both the &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; and its package content.">Libere o fluxo para ambos os <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> e seu conteúdo do pacote.</summary>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.GetPackage">
      <summary vsli:raw="Gets the encrypted package inside the &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;.">Obtém o pacote criptografado dentro do <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; in the envelope.">O <see cref="T:System.IO.Packaging.Package" /> no envelope.</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.IO.Stream)">
      <summary vsli:raw="Gets a value specifying whether the specified stream is an OLE compound file with an encrypted package stream.">Obtém um valor que especifica se o fluxo indicado é um arquivo composto OLE com um fluxo de pacote criptografado.</summary>
      <param name="stream" vsli:raw="The stream that is tested.">O fluxo que é testado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified stream is an OLE compound file with an encrypted package stream; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o fluxo especificado é um arquivo composto OLE com um fluxo de pacote criptografado; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.String)">
      <summary vsli:raw="Gets a value specifying whether the specified file is an OLE compound file with an encrypted package stream.">Obtém um valor que especifica se o arquivo indicado é um arquivo composto OLE com um fluxo de pacote criptografado.</summary>
      <param name="fileName" vsli:raw="The file that is tested.">O arquivo que é testado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified file is an OLE compound file with an encrypted package stream; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o arquivo especificado é um arquivo composto OLE com um fluxo de pacote criptografado; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;fileName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="fileName" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.IO.Stream)">
      <summary vsli:raw="Open the encrypted package in the specified stream.">Abra o pacote criptografado no fluxo especificado.</summary>
      <param name="envelopeStream" vsli:raw="The stream containing the encrypted package.">O fluxo que contém o pacote criptografado.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; that is opened.">O <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> que é aberto.</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String)">
      <summary vsli:raw="Open the encrypted package in the specified file as read only and unshared.">Abra o pacote criptografado no arquivo especificado como somente leitura e não compartilhado.</summary>
      <param name="envelopeFileName" vsli:raw="The file containing the encrypted package.">O arquivo que contém o pacote criptografado.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; that is opened.">O <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> que é aberto.</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess)">
      <summary vsli:raw="Open the encrypted package in the specified file as unshared and with the specified access.">Abra o pacote criptografado no arquivo especificado como não compartilhado e com o acesso indicado.</summary>
      <param name="envelopeFileName" vsli:raw="The file containing the encrypted package.">O arquivo que contém o pacote criptografado.</param>
      <param name="access" vsli:raw="The type of access.">O tipo de acesso.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; that is opened.">O <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> que é aberto.</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess,System.IO.FileShare)">
      <summary vsli:raw="Open the encrypted package in the specified file and gives it the specified access and sharing.">Abra o pacote criptografado no arquivo especificado e conceda o acesso e o compartilhamento indicados.</summary>
      <param name="envelopeFileName" vsli:raw="The file containing the encrypted package.">O arquivo que contém o pacote criptografado.</param>
      <param name="access" vsli:raw="The type of access.">O tipo de acesso.</param>
      <param name="sharing" vsli:raw="The type of sharing.">O tipo de compartilhamento.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; that is opened.">O <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> que é aberto.</returns>
    </member>
    <member name="P:System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties">
      <summary vsli:raw="Gets the core package properties (such as Title and Subject) of the rights managed document.">Obtém as principais propriedades do pacote (por exemplo, Título e Assunto) do documento gerenciado por direitos.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.PackageProperties&quot; /&gt; for the package.">O <see cref="T:System.IO.Packaging.PackageProperties" /> para o pacote.</returns>
    </member>
    <member name="P:System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation">
      <summary vsli:raw="Gets the rights management information stored in the &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;; specifically, the &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; and the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt;s stored in the OLE compound file that embodies the rights-management protected package.">Obtém as informações de gerenciamento de direitos armazenadas no <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />, especificamente, o <see cref="T:System.Security.RightsManagement.PublishLicense" /> e <see cref="T:System.Security.RightsManagement.UseLicense" />s armazenados no arquivo composto OLE que incorpora o pacote protegido de gerenciamento de direitos</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.RightsManagementInformation&quot; /&gt; for the package.">O <see cref="T:System.IO.Packaging.RightsManagementInformation" /> para o pacote.</returns>
    </member>
    <member name="P:System.IO.Packaging.EncryptedPackageEnvelope.StorageInfo">
      <summary vsli:raw="Gets an object that provides access to the compound file streams outside the encrypted package.">Obtém um objeto que fornece acesso aos fluxos de arquivo composto fora do pacote criptografado.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.IO.Packaging.StorageInfo&quot; /&gt; representing streams in the OLE compound file that are outside the encrypted package.">Um <see cref="T:System.IO.Packaging.StorageInfo" /> que representa fluxos no arquivo OLE composto que estão fora do pacote criptografado.</returns>
    </member>
    <member name="T:System.IO.Packaging.EncryptionOption">
      <summary>Especifica a opção de criptografia para partes em um <see cref="T:System.IO.Packaging.Package" />.</summary>
    </member>
    <member name="F:System.IO.Packaging.EncryptionOption.None">
      <summary>Sem criptografia.</summary>
    </member>
    <member name="F:System.IO.Packaging.EncryptionOption.RightsManagement">
      <summary>Suporte à criptografia por meio do gerenciamento de direitos.</summary>
    </member>
    <member name="T:System.IO.Packaging.InvalidSignatureEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent&quot; /&gt; that is raised when &lt;see cref=&quot;M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)&quot; /&gt; detects an invalid signature.">Representa o método que trata a <see cref="E:System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent" /> que é gerada quando <see cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)" /> detecta uma assinatura inválida.</summary>
      <param name="sender" vsli:raw="The invalid &lt;see cref=&quot;T:System.IO.Packaging.PackageDigitalSignature&quot; /&gt; source of the event.">A origem <see cref="T:System.IO.Packaging.PackageDigitalSignature" /> inválida do evento.</param>
      <param name="e" vsli:raw="The event data.">Os dados do evento.</param>
    </member>
    <member name="T:System.IO.Packaging.Package">
      <summary>Representa um contêiner que pode armazenar vários objetos de dados.</summary>
    </member>
    <member name="M:System.IO.Packaging.Package.#ctor(System.IO.FileAccess)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.Packaging.Package" /> que usa um determinado <see cref="T:System.IO.FileAccess" />.</summary>
      <param name="openFileAccess">As permissões de E/S de arquivo para o pacote.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">O valor para <paramref name="openFileAccess" /> não é válido.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Close">
      <summary>Salva e fecha o pacote e todos os fluxos de parte subjacente.</summary>
    </member>
    <member name="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)">
      <summary>Cria uma nova parte descompactada com um URI e tipo de conteúdo específicos.</summary>
      <param name="partUri">O URI (Uniform Resource Identifier) da nova parte.</param>
      <param name="contentType">O tipo de conteúdo do fluxo de dados.</param>
      <returns>A nova parte criada.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> ou <paramref name="contentType" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> não é um <see cref="T:System.IO.Packaging.PackagePart" /> URI válido.</exception>
      <exception cref="T:System.InvalidOperationException">Uma parte com o <paramref name="partUri" /> especificado já existe no pacote.</exception>
      <exception cref="T:System.ObjectDisposedException">O pacote não está aberto (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> foi chamado).</exception>
      <exception cref="T:System.IO.IOException">O pacote é somente leitura (não é possível adicionar uma nova parte).</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
      <summary>Cria uma nova parte com um URI, um tipo de conteúdo e uma opção de compactação específicos.</summary>
      <param name="partUri">O URI da nova parte.</param>
      <param name="contentType">O tipo de conteúdo do fluxo de dados.</param>
      <param name="compressionOption">A opção de compactação do fluxo de dados, <see cref="F:System.IO.Packaging.CompressionOption.NotCompressed" /> ou compactação <see cref="F:System.IO.Packaging.CompressionOption.Normal" />.</param>
      <returns>A nova parte criada.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> ou <paramref name="contentType" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> não é um <see cref="T:System.IO.Packaging.PackagePart" /> URI (Uniform Resource Identifier) válido.</exception>
      <exception cref="T:System.InvalidOperationException">Uma parte com o <paramref name="partUri" /> especificado já existe no pacote.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O valor <paramref name="compressionOption" /> não é válido.</exception>
      <exception cref="T:System.ObjectDisposedException">O pacote não está aberto (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> foi chamado).</exception>
      <exception cref="T:System.IO.IOException">O pacote é somente leitura (não é possível adicionar uma nova parte).</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
      <summary>Quando substituído em uma classe derivada, cria uma nova parte no pacote.</summary>
      <param name="partUri">O URI (Uniform Resource Identifier) para a parte sendo criada.</param>
      <param name="contentType">O tipo de conteúdo do fluxo de dados.</param>
      <param name="compressionOption">A opção de compactação do fluxo de dados.</param>
      <returns>A parte criada.</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
      <summary>Cria uma relação de nível de pacote para uma parte com um determinado URI, modo de destino e tipo de relacionamento.</summary>
      <param name="targetUri">O URI (Uniform Resource Identifier) da parte de destino.</param>
      <param name="targetMode">Indica se a parte de destino é <see cref="F:System.IO.Packaging.TargetMode.Internal" /> ou <see cref="F:System.IO.Packaging.TargetMode.External" /> para o pacote.</param>
      <param name="relationshipType">Um URI que define exclusivamente a função da relação.</param>
      <returns>A relação de nível de pacote para a parte especificada.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetUri" /> ou <paramref name="relationshipType" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">A parte <paramref name="targetUri" /> é um <see cref="T:System.IO.Packaging.PackageRelationship" /> ou <paramref name="targetMode" /> é <see cref="F:System.IO.Packaging.TargetMode.Internal" /> e <paramref name="targetUri" /> é um URI absoluto.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O valor para <paramref name="targetMode" /> não é válido.</exception>
      <exception cref="T:System.ObjectDisposedException">O pacote não está aberto (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> foi chamado).</exception>
      <exception cref="T:System.IO.IOException">O pacote é somente leitura.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
      <summary>Cria uma relação de nível de pacote para uma parte com um determinado URI, modo de destino, tipo de relacionamento e ID (identificador).</summary>
      <param name="targetUri">O URI (Uniform Resource Identifier) da parte de destino.</param>
      <param name="targetMode">Indica se a parte de destino é <see cref="F:System.IO.Packaging.TargetMode.Internal" /> ou <see cref="F:System.IO.Packaging.TargetMode.External" /> para o pacote.</param>
      <param name="relationshipType">Um URI que define exclusivamente a função da relação.</param>
      <param name="id">Um identificador XML exclusivo.</param>
      <returns>A relação de nível de pacote para a parte especificada.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetUri" /> ou <paramref name="relationshipType" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">A parte <paramref name="targetUri" /> é um <see cref="T:System.IO.Packaging.PackageRelationship" /> ou <paramref name="targetMode" /> é <see cref="F:System.IO.Packaging.TargetMode.Internal" /> e <paramref name="targetUri" /> é um URI absoluto.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O valor para <paramref name="targetMode" /> não é válido.</exception>
      <exception cref="T:System.ObjectDisposedException">O pacote não está aberto (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> foi chamado).</exception>
      <exception cref="T:System.IO.IOException">O pacote é somente leitura.</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> não é um identificador XML válido ou uma parte com o <paramref name="id" /> especificado já ocorre no pacote.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.DeletePart(System.Uri)">
      <summary>Exclui uma parte com um determinado URI do pacote.</summary>
      <param name="partUri">O URI da parte a ser excluída.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> não é um <see cref="T:System.IO.Packaging.PackagePart" /> URI válido.</exception>
      <exception cref="T:System.ObjectDisposedException">O pacote não está aberto (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> foi chamado).</exception>
      <exception cref="T:System.IO.IOException">O pacote é somente leitura.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)">
      <summary>Quando substituído em uma classe derivada, exclui uma parte com um determinado URI.</summary>
      <param name="partUri">O <see cref="P:System.IO.Packaging.PackagePart.Uri" /> do <see cref="T:System.IO.Packaging.PackagePart" /> a ser excluído.</param>
    </member>
    <member name="M:System.IO.Packaging.Package.DeleteRelationship(System.String)">
      <summary>Exclui a relação do nível de pacote.</summary>
      <param name="id">O <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> do <see cref="T:System.IO.Packaging.PackageRelationship" /> a ser excluído.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">O pacote não está aberto (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> foi chamado).</exception>
      <exception cref="T:System.IO.IOException">O pacote é somente leitura.</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> não é um identificador XML válido.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Dispose(System.Boolean)">
      <summary>Libera e salva o conteúdo de todas as partes e relações, fecha o pacote e libera todos os recursos.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
    </member>
    <member name="P:System.IO.Packaging.Package.FileOpenAccess">
      <summary>Obtém a configuração de acesso ao arquivo para o pacote.</summary>
      <returns>Um dos <see cref="T:System.IO.FileAccess" /> valores: <see cref="F:System.IO.FileAccess.Read" />, <see cref="F:System.IO.FileAccess.Write" />ou. <see cref="F:System.IO.FileAccess.ReadWrite" /></returns>
      <exception cref="T:System.ObjectDisposedException">O pacote não está aberto (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> foi chamado).</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Flush">
      <summary>Salva o conteúdo de todas as partes e relações que estão contidas no pacote.</summary>
      <exception cref="T:System.ObjectDisposedException">O pacote não está aberto (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> foi chamado).</exception>
      <exception cref="T:System.IO.IOException">O pacote é somente leitura e não pode ser modificado.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.FlushCore">
      <summary>Quando substituído em uma classe derivada, salva o conteúdo de todas as partes e relações para o repositório de classe derivada.</summary>
    </member>
    <member name="M:System.IO.Packaging.Package.GetPart(System.Uri)">
      <summary>Retorna a parte com um determinado URI.</summary>
      <param name="partUri">O URI (Uniform Resource Identifier) da parte a ser retornada.</param>
      <returns>A parte com o <paramref name="partUri" /> especificado.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> não é um <see cref="T:System.IO.Packaging.PackagePart" /> URI (Uniform Resource Identifier) válido.</exception>
      <exception cref="T:System.InvalidOperationException">Uma parte com o <paramref name="partUri" /> especificado não está no pacote.</exception>
      <exception cref="T:System.ObjectDisposedException">O pacote não está aberto (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> foi chamado).</exception>
      <exception cref="T:System.IO.IOException">O pacote é somente gravação.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.GetPartCore(System.Uri)">
      <summary>Quando substituído em uma classe derivada, retorna a parte endereçada por um determinado URI.</summary>
      <param name="partUri">O URI (Uniform Resource Identifier) da parte a ser recuperada.</param>
      <returns>A parte solicitada ou <see langword="null" /> se a parte com o <paramref name="partUri" /> especificado não está no pacote.</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.GetParts">
      <summary>Retorna uma coleção de todas as partes no pacote.</summary>
      <returns>Uma coleção de todos os elementos <see cref="T:System.IO.Packaging.PackagePart" /> contidos no pacote.</returns>
      <exception cref="T:System.ObjectDisposedException">O pacote não está aberto (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> foi chamado).</exception>
      <exception cref="T:System.IO.IOException">O pacote é somente gravação.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.GetPartsCore">
      <summary>Quando substituído em uma classe derivada, retorna uma matriz de todas as partes no pacote.</summary>
      <returns>Uma matriz de todas as partes que estão contidas no pacote.</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.GetRelationship(System.String)">
      <summary>Retorna a relação de nível de pacote com o identificador fornecido.</summary>
      <param name="id">A <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> da relação a ser retornada.</param>
      <returns>A relação de nível de pacote com o <paramref name="id" /> especificado.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> não é um identificador XML válido.</exception>
      <exception cref="T:System.InvalidOperationException">Não há uma relação com o <paramref name="id" /> especificado no pacote.</exception>
      <exception cref="T:System.ObjectDisposedException">O pacote não está aberto (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> foi chamado).</exception>
      <exception cref="T:System.IO.IOException">O pacote é somente gravação.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.GetRelationships">
      <summary>Retorna uma coleção de todas as relações de nível de pacote.</summary>
      <returns>Uma coleção de todas as relações de nível de pacote que estão contidas no pacote.</returns>
      <exception cref="T:System.ObjectDisposedException">O pacote não está aberto (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> foi chamado).</exception>
      <exception cref="T:System.IO.IOException">O pacote é somente gravação.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
      <summary>Retorna uma coleção de todas as relações de nível de pacote que correspondem a um determinado <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />.</summary>
      <param name="relationshipType">O <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /> para corresponder e retornar na coleção.</param>
      <returns>Uma coleção de relações de nível de pacote que correspondem ao <paramref name="relationshipType" /> especificado.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="relationshipType" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="relationshipType" /> é uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.ObjectDisposedException">O pacote não está aberto (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> foi chamado).</exception>
      <exception cref="T:System.IO.IOException">O pacote é somente gravação.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.IO.Stream)">
      <summary>Abre um pacote em um determinado fluxo de E/S.</summary>
      <param name="stream">O fluxo de E/S no qual o pacote será aberto.</param>
      <returns>O pacote aberto.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> é <see langword="null" />.</exception>
      <exception cref="T:System.IO.IOException">Para abrir o pacote requer permissão de leitura/gravação e o <paramref name="stream" /> especificado é somente gravação ou então o pacote a abrir requer permissão de gravação ou de leitura/gravação e o <paramref name="stream" /> especificado é somente leitura.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)">
      <summary>Abre um pacote com um fluxo de E/S e um modo de arquivo.</summary>
      <param name="stream">O fluxo de E/S no qual o pacote será aberto.</param>
      <param name="packageMode">O modo de arquivo no qual o pacote é aberto.</param>
      <returns>O pacote aberto.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O valor <paramref name="packageMode" /> não é válido.</exception>
      <exception cref="T:System.IO.IOException">Para abrir o pacote requer permissão de leitura/gravação e o <paramref name="stream" /> especificado é somente gravação ou então o pacote a abrir requer permissão de gravação ou de leitura/gravação e o <paramref name="stream" /> especificado é somente leitura.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)">
      <summary>Abre um pacote com um fluxo de E/S, um modo de arquivo e uma configuração de acesso a arquivos especificados.</summary>
      <param name="stream">O fluxo de E/S no qual o pacote será aberto.</param>
      <param name="packageMode">O modo de arquivo no qual o pacote é aberto.</param>
      <param name="packageAccess">O acesso ao arquivo no qual o pacote é aberto.</param>
      <returns>O pacote aberto.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O valor de <paramref name="packageMode" /> ou <paramref name="packageAccess" /> não é válido.</exception>
      <exception cref="T:System.IO.IOException">O pacote a ser aberto exige a permissão de leitura ou leitura/gravação e o <paramref name="stream" /> especificado é somente gravação ou o pacote a ser aberto exige a permissão de gravação ou leitura/gravação e o <paramref name="stream" /> especificado é somente leitura.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String)">
      <summary>Abre um pacote em um determinado caminho e nome de arquivo.</summary>
      <param name="path">O caminho e o nome de arquivo do pacote.</param>
      <returns>O pacote aberto.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)">
      <summary>Abre um pacote em um determinado caminho usando um dado modo de arquivo.</summary>
      <param name="path">O caminho e o nome de arquivo do pacote.</param>
      <param name="packageMode">O modo de arquivo no qual o pacote é aberto.</param>
      <returns>O pacote aberto.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O valor para <paramref name="packageMode" /> não é válido.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)">
      <summary>Abre um pacote em um determinado caminho usando um dado modo de arquivo e uma configuração de acesso ao arquivo.</summary>
      <param name="path">O caminho e o nome de arquivo do pacote.</param>
      <param name="packageMode">O modo de arquivo no qual abrir o pacote.</param>
      <param name="packageAccess">O acesso ao arquivo no qual o pacote é aberto.</param>
      <returns>O pacote aberto.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O valor de <paramref name="packageMode" /> ou <paramref name="packageAccess" /> não é válido.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
      <summary>Abre um pacote em um determinado caminho usando um dado modo de arquivo, acesso a arquivos e configurações de compartilhamento de arquivos.</summary>
      <param name="path">O caminho e o nome de arquivo do pacote.</param>
      <param name="packageMode">O modo de arquivo no qual abrir o pacote.</param>
      <param name="packageAccess">O acesso de arquivo no qual abrir o pacote.</param>
      <param name="packageShare">O modo de compartilhamento de arquivo no qual abrir o pacote.</param>
      <returns>O pacote aberto.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O valor para <paramref name="packageMode" />, <paramref name="packageAccess" /> ou <paramref name="packageShare" /> não é válido.</exception>
    </member>
    <member name="P:System.IO.Packaging.Package.PackageProperties">
      <summary>Obtém as propriedades principais do pacote.</summary>
      <returns>As propriedades principais do pacote.</returns>
      <exception cref="T:System.ObjectDisposedException">O pacote não está aberto (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> foi chamado).</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.PartExists(System.Uri)">
      <summary>Indica se uma parte com um determinado URI está no pacote.</summary>
      <param name="partUri">O <see cref="T:System.Uri" /> da parte a ser verificada.</param>
      <returns>
        <see langword="true" /> se uma parte com o <paramref name="partUri" /> especificado estiver no pacote, caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> não é um <see cref="T:System.IO.Packaging.PackagePart" /> URI (Uniform Resource Identifier) válido.</exception>
      <exception cref="T:System.ObjectDisposedException">O pacote não está aberto (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> foi chamado).</exception>
      <exception cref="T:System.IO.IOException">O pacote é somente gravação (não é não possível ler informações).</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.RelationshipExists(System.String)">
      <summary>Indica se uma relação de nível de pacote com uma determinada ID está contida no pacote.</summary>
      <param name="id">A <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> da relação a ser verificada.</param>
      <returns>
        <see langword="true" /> se uma relação de nível de pacote com o <paramref name="id" /> especificado estiver no pacote, caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> não é um identificador XML válido.</exception>
      <exception cref="T:System.ObjectDisposedException">O pacote não está aberto (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> foi chamado).</exception>
      <exception cref="T:System.IO.IOException">O pacote é somente gravação.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.System#IDisposable#Dispose">
      <summary>Esse membro dá suporte à infraestrutura de Windows Presentation Foundation (WPF) e não se destina ao uso do aplicativo.  Use o método <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> fortemente tipado em vez disso.</summary>
    </member>
    <member name="T:System.IO.Packaging.PackageDigitalSignature">
      <summary vsli:raw="Represents a digital signature that is applied to a set of package parts and relationships.">Representa uma assinatura digital aplicada a um conjunto de partes e relacionamentos do pacote.</summary>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption">
      <summary vsli:raw="Gets the X.509 certificate embedding option.">Obtém a opção de incorporação de certificado X.509.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.IO.Packaging.CertificateEmbeddingOption&quot; /&gt; values that specifies the option for the digital signature.">Um dos <see cref="T:System.IO.Packaging.CertificateEmbeddingOption" /> valores que especifica a opção para a assinatura digital.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">O <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> digital foi excluído.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignature.GetPartTransformList(System.Uri)">
      <summary vsli:raw="Returns an ordered list of the &lt;see cref=&quot;T:System.Security.Cryptography.Xml.Transform&quot; /&gt; operations applied to a given part.">Retorna uma lista ordenada das operações <see cref="T:System.Security.Cryptography.Xml.Transform" /> aplicadas a uma determinada parte.</summary>
      <param name="partName" vsli:raw="The &lt;see cref=&quot;T:System.Uri&quot; /&gt; of the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; to return the transform list for.">O <see cref="T:System.Uri" /> do <see cref="T:System.IO.Packaging.PackagePart" /> para o qual retornar a lista de transformação.</param>
      <returns vsli:raw="An ordered list of URI strings, such as &lt;see cref=&quot;F:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl&quot; /&gt; or &lt;see cref=&quot;F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl&quot; /&gt;, that represents the canonical XML transformations applied to the part with the given &lt;paramref name=&quot;partName&quot; /&gt; URI.">Uma lista ordenada de cadeias de caracteres de URI, como <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl" /> ou <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl" />, que representa as transformações XML canônicas aplicadas à parte com o URI <paramref name="partName" /> determinado.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">O <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> digital foi excluído.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.Signature">
      <summary vsli:raw="Gets or sets the XML digital signature.">Obtém ou define a assinatura digital XML.</summary>
      <returns vsli:raw="The XML digital signature.">A assinatura digital XML.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">O <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> digital foi excluído.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignaturePart">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; that contains the signature.">Obtém o <see cref="T:System.IO.Packaging.PackagePart" /> que contém a assinatura.</summary>
      <returns vsli:raw="The package part that contains the signature.">A parte do pacote que contém a assinatura.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">O <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> digital foi excluído.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignatureType">
      <summary vsli:raw="Gets the URI string that identifies the signature type.">Obtém a cadeia de caracteres URI que identifica o tipo de assinatura.</summary>
      <returns vsli:raw="A URI string that identifies the signature type. The default is &lt;see cref=&quot;F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl&quot; /&gt;.">Uma cadeia de caracteres URI que identifica o tipo de assinatura. O padrão é <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">O <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> digital foi excluído.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignatureValue">
      <summary vsli:raw="Gets the encrypted hash value of the &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt;.">Obtém o valor de hash criptografado de <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" />.</summary>
      <returns vsli:raw="A byte array that contains the encrypted hash value of the &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt;.">Uma matriz de bytes que contém o valor de hash criptografado do <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">O <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> digital foi excluído.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignedParts">
      <summary vsli:raw="Gets a collection of all the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; objects signed with the signature.">Obtém uma coleção de todos os objetos <see cref="T:System.IO.Packaging.PackagePart" /> assinado com a assinatura.</summary>
      <returns vsli:raw="A collection that contains all the package parts signed with the signature.">Uma coleção que contém todas as partes do pacote assinadas com a assinatura.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">O <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> digital foi excluído.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignedRelationshipSelectors">
      <summary vsli:raw="Gets the list of the &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; parts that have been signed with the signature.">Obtém a lista de partes de <see cref="T:System.IO.Packaging.PackageRelationship" /> que foram assinadas com a assinatura.</summary>
      <returns vsli:raw="The list of the &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; parts that have been signed with the signature.">A lista das <see cref="T:System.IO.Packaging.PackageRelationship" /> partes que foram assinadas com a assinatura.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">O <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> digital foi excluído.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.Signer">
      <summary vsli:raw="Gets the X.509 certificate of the signer.">Obtém o certificado X.509 do signatário.</summary>
      <returns vsli:raw="The digital certificate of the signer, or &lt;see langword=&quot;null&quot; /&gt; if the certificate is not stored in the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">O certificado digital do signatário ou <see langword="null" /> se o certificado não estiver armazenado no <see cref="T:System.IO.Packaging.Package" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">O <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> digital foi excluído.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SigningTime">
      <summary vsli:raw="Gets the date and time that the signature was created.">Obtém a data e a hora de criação da assinatura.</summary>
      <returns vsli:raw="The date and time that the signature was created.">A data e a hora em que a assinatura foi criada.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">O <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> digital foi excluído.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.TimeFormat">
      <summary vsli:raw="Gets the format of the date and time returned by the &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.SigningTime&quot; /&gt; property.">Obtém o formato de data e hora retornado pela propriedade <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" />.</summary>
      <returns vsli:raw="The format of the date and time returned by the &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.SigningTime&quot; /&gt; property.">O formato da data e hora retornadas pela <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" /> propriedade.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">O <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> digital foi excluído.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignature.Verify">
      <summary vsli:raw="Verifies the digital signature against an X.509 certificate.">Verifica a assinatura digital em um certificado X.509.</summary>
      <returns vsli:raw="&lt;see cref=&quot;F:System.IO.Packaging.VerifyResult.Success&quot; /&gt; if the verification succeeded; otherwise, one of the &lt;see cref=&quot;T:System.IO.Packaging.VerifyResult&quot; /&gt; values that identifies a problem.">
        <see cref="F:System.IO.Packaging.VerifyResult.Success" /> se a verificação for bem-sucedida; caso contrário, um dos valores <see cref="T:System.IO.Packaging.VerifyResult" /> que identifica um problema.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">O <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> digital foi excluído.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignature.Verify(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary vsli:raw="Verifies the digital signature against a given X.509 certificate.">Verifica a assinatura digital com relação a um determinado certificado X.509.</summary>
      <param name="signingCertificate" vsli:raw="The signer's X.509 certificate to verify the digital signature against.">O certificado X.509 do assinante com relação ao qual verificar a assinatura digital.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.IO.Packaging.VerifyResult.Success&quot; /&gt; if the verification succeeded; otherwise, one of the &lt;see cref=&quot;T:System.IO.Packaging.VerifyResult&quot; /&gt; values that identifies a problem.">
        <see cref="F:System.IO.Packaging.VerifyResult.Success" /> se a verificação for bem-sucedida; caso contrário, um dos valores <see cref="T:System.IO.Packaging.VerifyResult" /> que identifica um problema.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">O <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> digital foi excluído.</exception>
    </member>
    <member name="T:System.IO.Packaging.PackageDigitalSignatureManager">
      <summary vsli:raw="Provides a utility class for the creation and verification of digital signatures in a &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">Fornece uma classe de utilitário para a criação e a verificação de assinaturas digitais em um <see cref="T:System.IO.Packaging.Package" />.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.#ctor(System.IO.Packaging.Package)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Packaging.PackageDigitalSignatureManager&quot; /&gt; class for use with a specified &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">Inicializa uma nova instância da classe <see cref="T:System.IO.Packaging.PackageDigitalSignatureManager" /> para uso com um <see cref="T:System.IO.Packaging.Package" /> especificado.</summary>
      <param name="package" vsli:raw="The package associated with this signature manager.">O pacote associado a este gerenciador de assinatura.</param>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.CertificateOption">
      <summary vsli:raw="Gets or sets the X.509 certificate embedding option used by the &lt;see cref=&quot;M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})&quot; /&gt; method to digitally sign package parts.">Obtém ou define o certificado X.509 inserindo a opção usada pelo método <see cref="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})" /> para assinar digitalmente as partes do pacote.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.IO.Packaging.CertificateEmbeddingOption&quot; /&gt; values.">Um dos valores de <see cref="T:System.IO.Packaging.CertificateEmbeddingOption" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign">
      <summary vsli:raw="Countersigns all the signatures in the package with a user-selected X.509 certificate.">Referenda todas as assinaturas no pacote com um certificado X.509 selecionado pelo usuário.</summary>
      <returns vsli:raw="The signature that was added as a countersign; or &lt;see langword=&quot;null&quot; /&gt; if no certificate could be located or the user canceled the certificate selection dialog.">A assinatura que foi adicionada como uma referenda ou <see langword="null" /> se não for possível localizar nenhum certificado ou o usuário tiver cancelado a caixa de diálogo de seleção do certificado.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary vsli:raw="Countersigns all the signatures in the package with a specified X.509 certificate.">Referenda todas as assinaturas no pacote com um certificado X.509 especificado.</summary>
      <param name="certificate" vsli:raw="The X.509 certificate to add as a countersign signature.">O certificado X.509 a ser adicionado como uma assinatura de referenda.</param>
      <returns vsli:raw="The signature that was added as a countersign.">A assinatura que foi adicionada como uma referenda.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;certificate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;">
        <paramref name="certificate" /> é <see langword="null" /></exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.Uri})">
      <summary vsli:raw="Countersigns a list of signatures with a given X.509 certificate.">Referenda uma lista de assinaturas com um determinado certificado X.509.</summary>
      <param name="certificate" vsli:raw="The X.509 certificate to countersign each of the specified &lt;paramref name=&quot;signatures&quot; /&gt;.">O certificado X.509 para referendar cada uma das <paramref name="signatures" /> especificadas.</param>
      <param name="signatures" vsli:raw="The list of signatures to countersign.">A lista de assinaturas para referendar.</param>
      <returns vsli:raw="The digital signature used to countersign each of the &lt;paramref name=&quot;signatures&quot; /&gt;.">A assinatura digital usada para referendar cada uma das <paramref name="signatures" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Either the &lt;paramref name=&quot;certificate&quot; /&gt; or &lt;paramref name=&quot;signatures&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">O parâmetro <paramref name="certificate" /> ou <paramref name="signatures" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The package contains no signed &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; objects.">O pacote não contém nenhum objeto <see cref="T:System.IO.Packaging.PackagePart" /> assinado.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The package contains no &lt;see cref=&quot;T:System.IO.Packaging.PackageDigitalSignature&quot; /&gt; parts.">O pacote não contém nenhuma parte <see cref="T:System.IO.Packaging.PackageDigitalSignature" />.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm">
      <summary vsli:raw="Gets a URI string that identifies the default hash algorithm used to create and verify signatures.">Obtém uma cadeia de caracteres URI que identifica o algoritmo de hash padrão usado para criar e verificar assinaturas.</summary>
      <returns vsli:raw="A URI string that identifies the default hash algorithm used to create and verify signatures.">Uma URI cadeia de caracteres que identifica o algoritmo de hash padrão usado para criar e verificar assinaturas.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.GetSignature(System.Uri)">
      <summary vsli:raw="Returns the digital signature for a given signature uniform resource identifier (URI).">Retorna a assinatura digital de uma determinada assinatura URI (Uniform Resource Identifier).</summary>
      <param name="signatureUri" vsli:raw="The URI of the digital signature to return.">O URI da assinatura digital a ser retornada.</param>
      <returns vsli:raw="The digital signature for the specified &lt;paramref name=&quot;signatureUri&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if a signature for the given &lt;paramref name=&quot;signatureUri&quot; /&gt; cannot be found.">A assinatura digital do <paramref name="signatureUri" /> especificado ou <see langword="null" /> se uma assinatura do <paramref name="signatureUri" /> fornecido não puder ser encontrado.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm">
      <summary vsli:raw="Gets or sets the URI identifier for the &lt;see cref=&quot;T:System.Security.Cryptography.HashAlgorithm&quot; /&gt; instance used to create and verify signatures.">Obtém ou define o identificador URI para a instância <see cref="T:System.Security.Cryptography.HashAlgorithm" /> usada para criar e verificar assinaturas.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.Xml.SignedXml&quot; /&gt; URI identifier for the &lt;see cref=&quot;T:System.Security.Cryptography.HashAlgorithm&quot; /&gt; instance used to create and verify signatures.">O <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> identificadorURI da<see cref="T:System.Security.Cryptography.HashAlgorithm" /> instância usada para criar e verificar assinaturas.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The string for the URI to set is &lt;see langword=&quot;null&quot; /&gt;.">A cadeia de caracteres para o URI a ser definida é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The string for the URI to set is empty.">A cadeia de caracteres para o URI a ser definido está vazia.</exception>
    </member>
    <member name="E:System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent">
      <summary vsli:raw="Occurs when &lt;see cref=&quot;M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)&quot; /&gt; encounters an invalid signature.">Ocorre quando <see cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)" /> encontra uma assinatura inválida.</summary>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.IsSigned">
      <summary vsli:raw="Gets a value that indicates whether the package contains any signatures.">Obtém um valor que indica se o pacote contém alguma assinatura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the package contains signatures; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Se o pacote contiver assinaturas; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow">
      <summary vsli:raw="Gets or sets a handle to the parent window for displaying a certificate selection dialog box.">Obtém ou define um identificador para a janela pai para exibir uma caixa de diálogo de seleção de certificado.</summary>
      <returns vsli:raw="The handle of the parent window to use to display the certificate selection dialog box.">O identificador da janela pai a ser usada para exibir a caixa de diálogo seleção de certificado.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.RemoveAllSignatures">
      <summary vsli:raw="Removes all digital signatures from the package.">Remove todas as assinaturas digitais do pacote.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.RemoveSignature(System.Uri)">
      <summary vsli:raw="Removes the digital signature with a given signature uniform resource identifier (URI).">Remove a assinatura digital com um determinado URI (Uniform Resource Identifier) de assinatura.</summary>
      <param name="signatureUri" vsli:raw="The URI of the &lt;see cref=&quot;T:System.IO.Packaging.PackageDigitalSignature&quot; /&gt; to remove.">O URI do <see cref="T:System.IO.Packaging.PackageDigitalSignature" /> a ser removido.</param>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})">
      <summary vsli:raw="Prompts the user for an X.509 certificate, which is then used to digitally sign a specified list of package parts.">Solicita ao usuário um certificado X.509, que é usado para assinar digitalmente uma lista especificada de partes do pacote.</summary>
      <param name="parts" vsli:raw="The list of uniform resource identifiers (URIs) for the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; elements to sign.">A lista de URIs (uniform resource identifiers) para os elementos <see cref="T:System.IO.Packaging.PackagePart" /> assinarem.</param>
      <returns vsli:raw="The digital signature used to sign the list of &lt;paramref name=&quot;parts&quot; /&gt;.">A assinatura digital usada para assinar a lista de <paramref name="parts" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary vsli:raw="Signs a list of package parts with a given X.509 certificate.">Assina uma lista de partes do pacote com um determinado certificado X.509.</summary>
      <param name="parts" vsli:raw="The list of uniform resource identifiers (URIs) for the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; elements to sign.">A lista de URIs (uniform resource identifiers) para os elementos <see cref="T:System.IO.Packaging.PackagePart" /> assinarem.</param>
      <param name="certificate" vsli:raw="The X.509 certificate to use to digitally sign each of the specified &lt;paramref name=&quot;parts&quot; /&gt;.">O certificado X.509 a ser usado para assinar digitalmente cada uma das <paramref name="parts" /> especificadas.</param>
      <returns vsli:raw="The digital signature used to sign the given list of &lt;paramref name=&quot;parts&quot; /&gt;; or &lt;see langword=&quot;null&quot; /&gt; if no certificate could be found or the user clicked &quot;Cancel&quot; in the certificate selection dialog box.">A assinatura digital usada para assinar a lista de <paramref name="parts" /> especificada ou <see langword="null" /> se não for possível encontrar nenhum certificado ou se o usuário tiver clicado em “Cancelar” na caixa de diálogo de seleção de certificado.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector})">
      <summary vsli:raw="Signs a list of package parts and package relationships with a given X.509 certificate.">Assina uma lista de partes e relações do pacote com um determinado certificado X.509.</summary>
      <param name="parts" vsli:raw="The list of uniform resource identifiers (URIs) for the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; objects to sign.">A lista de URIs (uniform resource identifiers) para os objetos <see cref="T:System.IO.Packaging.PackagePart" /> assinarem.</param>
      <param name="certificate" vsli:raw="The X.509 certificate to use to digitally sign each of the specified parts and relationships.">O certificado X.509 a ser usado para assinar digitalmente cada uma das partes e das relações especificadas.</param>
      <param name="relationshipSelectors" vsli:raw="The list of &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; objects to sign.">A lista de objetos <see cref="T:System.IO.Packaging.PackageRelationship" /> a ser assinada.</param>
      <returns vsli:raw="The digital signature used to sign the elements specified in the &lt;paramref name=&quot;parts&quot; /&gt; and &lt;paramref name=&quot;relationshipSelectors&quot; /&gt; lists.">A assinatura digital usada para assinar os elementos especificados nas listas <paramref name="parts" /> e <paramref name="relationshipSelectors" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Neither &lt;paramref name=&quot;parts&quot; /&gt; nor &lt;paramref name=&quot;relationshipSelectors&quot; /&gt; specify any objects to sign.">O <paramref name="parts" /> e o <paramref name="relationshipSelectors" /> não especificam nenhum objeto para ser assinado.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String)">
      <summary vsli:raw="Signs a list of package parts and package relationships with a given X.509 certificate and identifier (ID).">Assina uma lista de partes e relações do pacote com um determinado certificado X.509 e ID (identificador).</summary>
      <param name="parts" vsli:raw="The list of uniform resource identifiers (URIs) for the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; objects to sign.">A lista de URIs (uniform resource identifiers) para os objetos <see cref="T:System.IO.Packaging.PackagePart" /> assinarem.</param>
      <param name="certificate" vsli:raw="The X.509 certificate to use to digitally sign each of the specified parts and relationships.">O certificado X.509 a ser usado para assinar digitalmente cada uma das partes e das relações especificadas.</param>
      <param name="relationshipSelectors" vsli:raw="The list of &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; objects to sign.">A lista de objetos <see cref="T:System.IO.Packaging.PackageRelationship" /> a ser assinada.</param>
      <param name="signatureId" vsli:raw="An identification string to associate with the signature.">Uma cadeia de caracteres de identificação a ser associada à assinatura.</param>
      <returns vsli:raw="The digital signature used to sign the elements specified in the &lt;paramref name=&quot;parts&quot; /&gt; and &lt;paramref name=&quot;relationshipSelectors&quot; /&gt; lists.">A assinatura digital usada para assinar os elementos especificados nas listas <paramref name="parts" /> e <paramref name="relationshipSelectors" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Neither &lt;paramref name=&quot;parts&quot; /&gt; nor &lt;paramref name=&quot;relationshipSelectors&quot; /&gt; specify any elements to sign.">O <paramref name="parts" /> e o <paramref name="relationshipSelectors" /> não especificam nenhum elemento para ser assinado.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String,System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.DataObject},System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.Reference})">
      <summary vsli:raw="Signs a list of package parts, package relationships, or custom objects with a specified X.509 certificate and signature identifier (ID).">Assina uma lista de partes do pacote, relações do pacote ou objetos personalizados com um certificado X.509 e uma assinatura ID (identificador) especificados.</summary>
      <param name="parts" vsli:raw="The list of uniform resource identifiers (URIs) for the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; objects to sign.">A lista de URIs (uniform resource identifiers) para os objetos <see cref="T:System.IO.Packaging.PackagePart" /> assinarem.</param>
      <param name="certificate" vsli:raw="The X.509 certificate to use to digitally sign each of the specified parts and relationships.">O certificado X.509 a ser usado para assinar digitalmente cada uma das partes e das relações especificadas.</param>
      <param name="relationshipSelectors" vsli:raw="The list of &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; objects to sign.">A lista de objetos <see cref="T:System.IO.Packaging.PackageRelationship" /> a ser assinada.</param>
      <param name="signatureId" vsli:raw="An identification string to associate with the signature.">Uma cadeia de caracteres de identificação a ser associada à assinatura.</param>
      <param name="signatureObjects" vsli:raw="A list of custom data objects to sign.">Uma lista de objetos de dados personalizados a ser assinada.</param>
      <param name="objectReferences" vsli:raw="A list of references to custom objects to sign.">Uma lista de referências a objetos personalizados a ser assinada.</param>
      <returns vsli:raw="The digital signature used to sign the elements specified in the &lt;paramref name=&quot;parts&quot; /&gt; and &lt;paramref name=&quot;relationshipSelectors&quot; /&gt; lists.">A assinatura digital usada para assinar os elementos especificados nas listas <paramref name="parts" /> e <paramref name="relationshipSelectors" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Neither &lt;paramref name=&quot;parts&quot; /&gt;, &lt;paramref name=&quot;relationshipSelectors&quot; /&gt;, &lt;paramref name=&quot;signatureObjects&quot; /&gt;, nor &lt;paramref name=&quot;objectReferences&quot; /&gt; specify any elements to sign.">
        <paramref name="parts" />, <paramref name="relationshipSelectors" />, <paramref name="signatureObjects" /> e <paramref name="objectReferences" /> não especificam nenhum elemento a ser assinado.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.ContentType&quot; /&gt; of a part being signed references an empty, &lt;see langword=&quot;null&quot; /&gt;, or undefined &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping&quot; /&gt;.">Um <see cref="P:System.IO.Packaging.PackagePart.ContentType" /> de uma parte que está sendo assinada faz referência a um vazio, <see langword="null" /> ou <see cref="P:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping" /> indefinido.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;signatureId&quot; /&gt; is not &lt;see langword=&quot;null&quot; /&gt; and is not a valid XML schema ID (for example, begins with a leading numeric digit).">
        <paramref name="signatureId" /> não é <see langword="null" /> e não é uma ID de esquema XML válida (por exemplo, começa com um dígito numérico à esquerda).</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin">
      <summary vsli:raw="Gets the uniform resource identifier (URI) of the signature origin part.">Obtém o URI (Uniform Resource Identifier) da parte de origem de assinatura.</summary>
      <returns vsli:raw="The URI of the signature origin part.">O URI da parte de origem da assinatura.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.SignatureOriginRelationshipType">
      <summary vsli:raw="Gets the type of default signature origin relationship.">Obtém o tipo de relação de origem de assinatura padrão.</summary>
      <returns vsli:raw="The type of default signature origin relationship.">O tipo de relação de origem de assinatura padrão.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.Signatures">
      <summary vsli:raw="Gets a collection of all the signatures contained in the package.">Obtém uma coleção de todas as assinaturas contidas no pacote.</summary>
      <returns vsli:raw="A collection of all the &lt;see cref=&quot;T:System.IO.Packaging.PackageDigitalSignature&quot; /&gt; objects.">Uma coleção de todos <see cref="T:System.IO.Packaging.PackageDigitalSignature" /> os objetos.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat">
      <summary vsli:raw="Gets or sets the date/time format used to create a signature &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.SigningTime&quot; /&gt;.">Obtém ou define o formato de data/hora usado para criar uma <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" /> de assinatura.</summary>
      <returns vsli:raw="The date/time format used to create a signature &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.SigningTime&quot; /&gt;.">O formato de data/hora usado para criar uma <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" />assinatura.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping">
      <summary vsli:raw="Gets a dictionary that contains each defined &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.ContentType&quot; /&gt; and its associated XML &lt;see cref=&quot;T:System.Security.Cryptography.Xml.Transform&quot; /&gt;.&lt;see cref=&quot;P:System.Security.Cryptography.Xml.Transform.Algorithm&quot; /&gt; identifier.">Obtém um dicionário que contém cada <see cref="P:System.IO.Packaging.PackagePart.ContentType" /> definido e seu identificador XML <see cref="T:System.Security.Cryptography.Xml.Transform" />.<see cref="P:System.Security.Cryptography.Xml.Transform.Algorithm" /> associado.</summary>
      <returns vsli:raw="A dictionary that contains each defined &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.ContentType&quot; /&gt; and its associated XML &lt;see cref=&quot;T:System.Security.Cryptography.Xml.Transform&quot; /&gt;.&lt;see cref=&quot;P:System.Security.Cryptography.Xml.Transform.Algorithm&quot; /&gt; identifier.">Um dicionário que contém cada definido <see cref="P:System.IO.Packaging.PackagePart.ContentType" /> e seu associado XML <see cref="T:System.Security.Cryptography.Xml.Transform" />.<see cref="P:System.Security.Cryptography.Xml.Transform.Algorithm" /> associado.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary vsli:raw="Verifies a given X.509 certificate.">Verifica um determinado Certificado X.509.</summary>
      <param name="certificate" vsli:raw="The X.509 certificate to verify.">O certificado X.509 a ser verificado.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.NoError&quot; /&gt; (value 0) if the certificate verified successfully; otherwise, a bitwise enumeration of error flags.">
        <see cref="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.NoError" /> (valor 0) se o certificado for verificado com êxito, caso contrário, uma enumeração bit a bit dos sinalizadores de erro.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)">
      <summary vsli:raw="Verifies the signatures on all signed parts within the package.">Verifica as assinaturas em todas as partes assinadas dentro do pacote.</summary>
      <param name="exitOnFailure" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to exit on first failure; otherwise, &lt;see langword=&quot;false&quot; /&gt; to continue and check all signatures.">
        <see langword="true" /> para sair na primeira falha, caso contrário, <see langword="false" /> para continuar e verificar todas as assinaturas.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.IO.Packaging.VerifyResult.Success&quot; /&gt; (value 0) if all signatures are verified successfully; otherwise, an enumeration that identifies the error.">
        <see cref="F:System.IO.Packaging.VerifyResult.Success" /> (valor 0) se todas as assinaturas forem verificadas com êxito, caso contrário, uma enumeração que identifica o erro.</returns>
    </member>
    <member name="T:System.IO.Packaging.PackagePart">
      <summary>Fornece uma classe base para partes armazenadas em um <see cref="T:System.IO.Packaging.Package" />.  Esta classe é abstrata.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.Packaging.PackagePart" /> com um <see cref="P:System.IO.Packaging.PackagePart.Package" /> pai e um URI de parte especificados.</summary>
      <param name="package">O <see cref="T:System.IO.Packaging.Package" /> pai da parte.</param>
      <param name="partUri">O URI da parte, em relação à raiz <see cref="T:System.IO.Packaging.Package" /> pai.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="package" /> ou <paramref name="partUri" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.Packaging.PackagePart" /> com um <see cref="P:System.IO.Packaging.PackagePart.Package" /> pai, um URI de parte e um tipo de conteúdo MIME especificados.</summary>
      <param name="package">O <see cref="T:System.IO.Packaging.Package" /> pai da parte.</param>
      <param name="partUri">O URI da parte, em relação à raiz <see cref="T:System.IO.Packaging.Package" /> pai.</param>
      <param name="contentType">O tipo de conteúdo MIME do fluxo de dados da parte.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="package" /> ou <paramref name="partUri" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> não é um <see cref="T:System.IO.Packaging.PackagePart" /> URI válido.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String,System.IO.Packaging.CompressionOption)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.Packaging.PackagePart" /> com um <see cref="P:System.IO.Packaging.PackagePart.Package" /> pai, um URI de parte, um tipo de conteúdo MIME e uma <see cref="T:System.IO.Packaging.CompressionOption" /> especificados.</summary>
      <param name="package">O <see cref="T:System.IO.Packaging.Package" /> pai da parte.</param>
      <param name="partUri">O URI da parte, em relação à raiz <see cref="T:System.IO.Packaging.Package" /> pai.</param>
      <param name="contentType">O tipo de conteúdo MIME do fluxo de dados da parte.</param>
      <param name="compressionOption">A opção de compactação do fluxo de dados da parte.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="package" /> ou <paramref name="partUri" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> não é um <see cref="T:System.IO.Packaging.PackagePart" /> URI válido.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O valor <paramref name="compressionOption" /> não é válido.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.CompressionOption">
      <summary>Obtém a opção de compactação do fluxo de conteúdo da parte.</summary>
      <returns>A opção de compactação do fluxo de conteúdo da parte.</returns>
      <exception cref="T:System.InvalidOperationException">A parte foi excluída.  

ou - 
O <see cref="P:System.IO.Packaging.PackagePart.Package" /> não está aberto (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> foi chamado).</exception>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.ContentType">
      <summary>Obtém o tipo MIME do fluxo de conteúdo.</summary>
      <returns>O MIME tipo do fluxo de dados de conteúdo para a parte.</returns>
      <exception cref="T:System.InvalidOperationException">A parte foi excluída.  

ou - 
O <see cref="P:System.IO.Packaging.PackagePart.Package" /> não está aberto (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> foi chamado).  

ou - 
A cadeia de caracteres retornada pelo método <see cref="M:System.IO.Packaging.PackagePart.GetContentTypeCore" /> da classe derivada está vazia.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
      <summary>Cria uma relação de nível de parte entre esta <see cref="T:System.IO.Packaging.PackagePart" /> para uma <see cref="T:System.IO.Packaging.PackagePart" /> de destino ou recurso externo especificado.</summary>
      <param name="targetUri">O URI da parte de destino.</param>
      <param name="targetMode">Um dos valores de enumeração. Por exemplo, <see cref="F:System.IO.Packaging.TargetMode.Internal" /> se a parte de destino estiver dentro do <see cref="T:System.IO.Packaging.Package" /> ou <see cref="F:System.IO.Packaging.TargetMode.External" /> se o destino for um recurso fora do <see cref="T:System.IO.Packaging.Package" />.</param>
      <param name="relationshipType">A função da relação.</param>
      <returns>A relação de nível de parte entre este <see cref="T:System.IO.Packaging.PackagePart" /> para o <see cref="T:System.IO.Packaging.PackagePart" /> de destino ou recurso externo.</returns>
      <exception cref="T:System.InvalidOperationException">A parte foi excluída.  

ou - 
O <see cref="P:System.IO.Packaging.PackagePart.Package" /> não está aberto (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> foi chamado).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetUri" /> ou <paramref name="relationshipType" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O parâmetro <paramref name="targetMode" /> não é um valor de enumeração <see cref="T:System.IO.Packaging.TargetMode" /> válido.</exception>
      <exception cref="T:System.ArgumentException">A parte identificada pelo <paramref name="targetUri" /> é uma relação (o destino de uma relação não pode ser outra relação).  

ou - 
<paramref name="targetMode" /> é especificado como <see cref="F:System.IO.Packaging.TargetMode.Internal" />, mas <paramref name="targetUri" /> é um URI externo absoluto.</exception>
      <exception cref="T:System.IO.IOException">O pacote é somente leitura (não é possível adicionar uma nova relação).</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
      <summary>Cria uma relação de nível de parte entre esta <see cref="T:System.IO.Packaging.PackagePart" /> para uma <see cref="T:System.IO.Packaging.PackagePart" /> de destino ou recurso externo especificado.</summary>
      <param name="targetUri">O URI da parte de destino.</param>
      <param name="targetMode">Um dos valores de enumeração. Por exemplo, <see cref="F:System.IO.Packaging.TargetMode.Internal" /> se a parte de destino estiver dentro do <see cref="T:System.IO.Packaging.Package" /> ou <see cref="F:System.IO.Packaging.TargetMode.External" /> se o destino for um recurso fora do <see cref="T:System.IO.Packaging.Package" />.</param>
      <param name="relationshipType">A função da relação.</param>
      <param name="id">Uma ID exclusiva para a relação.</param>
      <returns>A relação de nível de parte entre este <see cref="T:System.IO.Packaging.PackagePart" /> para o <see cref="T:System.IO.Packaging.PackagePart" /> de destino ou recurso externo.</returns>
      <exception cref="T:System.InvalidOperationException">A parte foi excluída.  

ou - 
O <see cref="P:System.IO.Packaging.PackagePart.Package" /> não está aberto (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> foi chamado).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetUri" /> ou <paramref name="relationshipType" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O parâmetro <paramref name="targetMode" /> não é um valor de enumeração <see cref="T:System.IO.Packaging.TargetMode" /> válido.</exception>
      <exception cref="T:System.ArgumentException">A parte identificada pelo <paramref name="targetUri" /> é uma relação (o destino de uma relação não pode ser outra relação).  

ou - 
<paramref name="targetMode" /> é especificado como <see cref="F:System.IO.Packaging.TargetMode.Internal" />, mas <paramref name="targetUri" /> é um URI externo absoluto.</exception>
      <exception cref="T:System.IO.IOException">O pacote é somente leitura (não é possível adicionar uma nova relação).</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> não é um identificador XML válido.  

ou - 
Já existe uma parte com o <paramref name="id" /> especificado.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.DeleteRelationship(System.String)">
      <summary>Exclui uma <see cref="T:System.IO.Packaging.PackageRelationship" /> de nível de parte.</summary>
      <param name="id">A <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> da relação a ser excluída.</param>
      <exception cref="T:System.InvalidOperationException">A parte foi excluída.  

ou - 
O <see cref="P:System.IO.Packaging.PackagePart.Package" /> não está aberto (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> foi chamado).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> é <see langword="null" />.</exception>
      <exception cref="T:System.IO.IOException">O pacote é somente leitura (não é possível excluir relações).</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> não é um identificador XML válido.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetContentTypeCore">
      <summary>Quando substituído em uma classe derivada, retorna o tipo MIME do conteúdo de peça.</summary>
      <returns>O tipo MIME do conteúdo da parte.</returns>
      <exception cref="T:System.NotSupportedException">A classe derivada não fornece uma implementação de substituição necessária para o método <see cref="M:System.IO.Packaging.PackagePart.GetContentTypeCore" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetRelationship(System.String)">
      <summary>Retorna a relação que tenha um <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> especificado.</summary>
      <param name="id">A <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> da relação a ser retornada.</param>
      <returns>Uma relação que corresponde à <paramref name="id" /> especificada.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> não é um identificador XML válido.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="relationshipType" /> é uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.InvalidOperationException">A parte foi excluída.  

ou - 
O <see cref="P:System.IO.Packaging.PackagePart.Package" /> não está aberto (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> foi chamado).  

ou - 
Não existe uma relação com o <paramref name="id" /> especificado no pacote.</exception>
      <exception cref="T:System.IO.IOException">O pacote é somente gravação (não é não possível ler informações de relação).</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetRelationships">
      <summary>Retorna uma coleção de todas as relações que pertencem a essa parte.</summary>
      <returns>Uma coleção de todas as relações que pertencem à parte.</returns>
      <exception cref="T:System.InvalidOperationException">A parte foi excluída.  

ou - 
O <see cref="P:System.IO.Packaging.PackagePart.Package" /> não está aberto (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> foi chamado).</exception>
      <exception cref="T:System.IO.IOException">O pacote é somente gravação (não é não possível ler informações de relação).</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)">
      <summary>Retorna uma coleção de relações que correspondem a um <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /> especificado.</summary>
      <param name="relationshipType">O <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /> das relações a serem localizadas e retornadas na coleção.</param>
      <returns>Uma coleção de relações que correspondem ao <paramref name="relationshipType" /> especificado.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="relationshipType" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="relationshipType" /> é uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.InvalidOperationException">A parte foi excluída.  

ou - 
O <see cref="P:System.IO.Packaging.PackagePart.Package" /> não está aberto (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> foi chamado).</exception>
      <exception cref="T:System.IO.IOException">O pacote é somente gravação (não é não possível ler informações de relação).</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStream">
      <summary>Retorna o fluxo de dados de conteúdo da parte.</summary>
      <returns>O fluxo de dados de conteúdo da parte.</returns>
      <exception cref="T:System.InvalidOperationException">A parte foi excluída.  

ou - 
O <see cref="P:System.IO.Packaging.PackagePart.Package" /> não está aberto (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> foi chamado).</exception>
      <exception cref="T:System.IO.IOException">O objeto de fluxo retornado pelo método <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> da subclasse derivada é <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode)">
      <summary>Retorna o fluxo de conteúdo aberto em um <see cref="T:System.IO.FileMode" /> de E/S especificado.</summary>
      <param name="mode">O modo de E/S em que abrir o fluxo de conteúdo.</param>
      <returns>O fluxo de conteúdo da parte.</returns>
      <exception cref="T:System.InvalidOperationException">A parte foi excluída.  

ou - 
O <see cref="P:System.IO.Packaging.PackagePart.Package" /> não está aberto (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> foi chamado).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O parâmetro <paramref name="mode" /> não é um valor de enumeração <see cref="T:System.IO.FileMode" /> válido.</exception>
      <exception cref="T:System.IO.IOException">O parâmetro <paramref name="mode" /> não é compatível com o fluxo da parte e do pacote.  

ou - 
O objeto de fluxo retornado pelo método <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> da subclasse derivada é <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode,System.IO.FileAccess)">
      <summary>Retorna o fluxo de conteúdo da parte aberto com um <see cref="T:System.IO.FileMode" /> e <see cref="T:System.IO.FileAccess" /> especificados.</summary>
      <param name="mode">O modo de E/S em que abrir o fluxo de conteúdo.</param>
      <param name="access">As permissões de acesso a serem usadas para abrir o fluxo de conteúdo.</param>
      <returns>O fluxo de conteúdo da parte.</returns>
      <exception cref="T:System.InvalidOperationException">A parte foi excluída.  

ou - 
O <see cref="P:System.IO.Packaging.PackagePart.Package" /> não está aberto (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> foi chamado).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O parâmetro <paramref name="mode" /> não é um valor de enumeração <see cref="T:System.IO.FileMode" /> válido.  

ou - 
O parâmetro <paramref name="access" /> não é um valor de enumeração <see cref="T:System.IO.FileAccess" /> válido.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="mode" /> ou <paramref name="access" /> não é compatível com o fluxo da parte e do pacote.  

ou - 
O parâmetro <paramref name="access" /> é especificado como <see cref="F:System.IO.FileAccess.Read" />, mas o parâmetro <paramref name="mode" /> requer acesso de gravação.  (Valores <see cref="T:System.IO.FileMode" /> de <see cref="F:System.IO.FileMode.Create" />, <see cref="F:System.IO.FileMode.CreateNew" />, <see cref="F:System.IO.FileMode.Truncate" /> e <see cref="F:System.IO.FileMode.Append" /> requerem o acesso <see cref="F:System.IO.FileAccess.Write" /> ou <see cref="F:System.IO.FileAccess.ReadWrite" />.) 
ou - 
O objeto de fluxo retornado pelo método <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> da subclasse derivada é <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)">
      <summary>Quando substituído em uma classe derivada, retorna o fluxo de conteúdo da parte aberto com um <see cref="T:System.IO.FileMode" /> e <see cref="T:System.IO.FileAccess" /> especificados.</summary>
      <param name="mode">O modo de E/S em que abrir o fluxo de conteúdo.</param>
      <param name="access">As permissões de acesso a serem usadas para abrir o fluxo de conteúdo.</param>
      <returns>O fluxo de dados de conteúdo da parte.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.Package">
      <summary>Obtém o <see cref="T:System.IO.Packaging.Package" /> pai da parte.</summary>
      <returns>O pacote pai da parte.</returns>
      <exception cref="T:System.InvalidOperationException">A parte foi excluída.  

ou - 
O <see cref="P:System.IO.Packaging.PackagePart.Package" /> não está aberto (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> foi chamado).</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.RelationshipExists(System.String)">
      <summary>Retorna um valor que indica se esta parte tem uma relação com uma <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> especificada.</summary>
      <param name="id">A <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> da relação a ser verificada.</param>
      <returns>
        <see langword="true" /> se essa parte tiver uma relação com a <paramref name="id" /> especificada, caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> não é um identificador XML válido.</exception>
      <exception cref="T:System.InvalidOperationException">A parte foi excluída.  

ou - 
O <see cref="P:System.IO.Packaging.PackagePart.Package" /> não está aberto (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> foi chamado).</exception>
      <exception cref="T:System.IO.IOException">O pacote é somente gravação (não é não possível ler informações de relação).</exception>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.Uri">
      <summary>Obtém o URI da parte.</summary>
      <returns>O URI da parte relativa à raiz do pacote.</returns>
      <exception cref="T:System.InvalidOperationException">A parte foi excluída.  

ou - 
O <see cref="P:System.IO.Packaging.PackagePart.Package" /> não está aberto (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> foi chamado).</exception>
    </member>
    <member name="T:System.IO.Packaging.PackagePartCollection">
      <summary>Representa uma coleção de objetos <see cref="T:System.IO.Packaging.PackagePart" /> .</summary>
    </member>
    <member name="M:System.IO.Packaging.PackagePartCollection.GetEnumerator">
      <summary>Retorna um enumerador para iterar pelas partes na coleção.</summary>
      <returns>Um enumerador para iterar pelos elementos <see cref="T:System.IO.Packaging.PackagePart" /> na coleção.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackagePartCollection.System#Collections#Generic#IEnumerable{System#IO#Packaging#PackagePart}#GetEnumerator">
      <summary>Retorna um enumerador que itera pela coleção.</summary>
      <returns>Um objeto <see cref="T:System.Collections.Generic.IEnumerator`1" /> que pode ser usado para iterar pela coleção.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackagePartCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>Um objeto <see cref="T:System.Collections.IEnumerator" /> que pode ser usado para iterar pela coleção.</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageProperties">
      <summary>Representa as propriedades princiapais de um <see cref="T:System.IO.Packaging.Package" />.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageProperties.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.Packaging.PackageProperties" />.</summary>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Category">
      <summary>Quando substituído em uma classe derivada, obtém ou define a categoria de <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>A categoria do conteúdo contido no <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.ContentStatus">
      <summary>Quando substituído em uma classe derivada, obtém ou define um valor que representa o status de <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>O status do <see cref="T:System.IO.Packaging.Package" /> conteúdo.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.ContentType">
      <summary>Quando substituído em uma classe derivada, obtém ou define um valor que representa o tipo de conteúdo contido em <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>O tipo de conteúdo contido no <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Created">
      <summary>Quando substituído em uma classe derivada, obtém ou define a data em que o <see cref="T:System.IO.Packaging.Package" /> foi criado.</summary>
      <returns>A data e a hora <see cref="T:System.IO.Packaging.Package" /> em que o foi criado inicialmente.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Creator">
      <summary>Quando substituído em uma classe derivada, obtém ou define um valor que identifica o indivíduo ou a entidade que criou o <see cref="T:System.IO.Packaging.Package" /> e seu conteúdo.</summary>
      <returns>O indivíduo ou a entidade que criou <see cref="T:System.IO.Packaging.Package" /> o e seu conteúdo.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Description">
      <summary>Quando substituído em uma classe derivada, obtém ou define uma descrição do conteúdo dentro do <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>Uma descrição do conteúdo contido no <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageProperties.Dispose">
      <summary>Libera todos os recursos usados pela instância <see cref="T:System.IO.Packaging.PackageProperties" />.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageProperties.Dispose(System.Boolean)">
      <summary>Libera os recursos não gerenciados usados pela instância de <see cref="T:System.IO.Packaging.PackageProperties" /> e opcionalmente libera os recursos gerenciados.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Identifier">
      <summary>Quando substituído em uma classe derivada, obtém ou define um valor que identifica inequivocamente o <see cref="T:System.IO.Packaging.Package" /> e seu conteúdo.</summary>
      <returns>Um valor que identifica inequivocamente o <see cref="T:System.IO.Packaging.Package" /> e seu conteúdo.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Keywords">
      <summary>Quando substituído em uma classe derivada, obtém ou define um valor que definem um conjunto delimitado de palavras-chave para dar suporte a pesquisa e indexação de <see cref="T:System.IO.Packaging.Package" /> e seu conteúdo.</summary>
      <returns>Um conjunto delimitado de palavras-chave para dar suporte à pesquisa e à <see cref="T:System.IO.Packaging.Package" /> indexação do conteúdo e.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Language">
      <summary>Quando substituído em uma classe derivada, obtém ou define um valor que identifica o idioma do conteúdo <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>Um valor que identifica o <see cref="T:System.IO.Packaging.Package" /> idioma do conteúdo.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.LastModifiedBy">
      <summary>Quando substituído em uma classe derivada, obtém ou define um valor que identifica o usuário que modificou o conteúdo de <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>O usuário que modificou o <see cref="T:System.IO.Packaging.Package" /> conteúdo pela última vez.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.LastPrinted">
      <summary>Quando substituído em uma classe derivada, obtém ou define a data e hora em que o conteúdo <see cref="T:System.IO.Packaging.Package" /> foi impresso pela última vez.</summary>
      <returns>A data e a hora <see cref="T:System.IO.Packaging.Package" /> em que o conteúdo foi impresso pela última vez.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Modified">
      <summary>Quando substituído em uma classe derivada, obtém ou define a data em que o <see cref="T:System.IO.Packaging.Package" /> foi alterado pela última vez.</summary>
      <returns>A data e a hora <see cref="T:System.IO.Packaging.Package" /> em que a última alteração foi alterada.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Revision">
      <summary>Quando substituído em uma classe derivada, obtém ou define o número de revisão de <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>O número de revisão do <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Subject">
      <summary>Quando substituído em uma classe derivada, obtém ou define o tópico sobre o conteúdo de <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>O tópico do <see cref="T:System.IO.Packaging.Package" /> conteúdo.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Title">
      <summary>Quando substituído em uma classe derivada, obtém ou define o nome fornecido para o <see cref="T:System.IO.Packaging.Package" /> e seu conteúdo.</summary>
      <returns>O nome fornecido para o <see cref="T:System.IO.Packaging.Package" /> e seu conteúdo.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Version">
      <summary>Quando substituído em uma classe derivada, obtém ou define o número de versão de <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>O número de versão do <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationship">
      <summary>Representa uma associação entre um <see cref="T:System.IO.Packaging.Package" /> ou <see cref="T:System.IO.Packaging.PackagePart" /> de origem e um objeto de destino que pode ser um <see cref="T:System.IO.Packaging.PackagePart" /> ou um recurso externo.</summary>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.Id">
      <summary>Obtém uma cadeia de caracteres que identifica o relacionamento.</summary>
      <returns>Uma cadeia de caracteres que identifica a relação.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.Package">
      <summary>Obtém o <see cref="T:System.IO.Packaging.Package" /> que contém esse relacionamento.</summary>
      <returns>O pacote que contém essa relação.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.RelationshipType">
      <summary>Obtém o nome de tipo qualificado do relacionamento.</summary>
      <returns>O nome do tipo qualificado da relação.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.SourceUri">
      <summary>Obtém o URI do pacote ou da parte que é proprietária do relacionamento.</summary>
      <returns>O URI deou<see cref="T:System.IO.Packaging.PackagePart" />quepossuiarelação. <see cref="T:System.IO.Packaging.Package" /></returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.TargetMode">
      <summary>Obtém um valor que indica se o destino do relacionamento é <see cref="F:System.IO.Packaging.TargetMode.Internal" /> ou <see cref="F:System.IO.Packaging.TargetMode.External" /> para o <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>Um valor de enumeração que indica <see cref="P:System.IO.Packaging.PackageRelationship.TargetUri" /> se faz referência <see cref="F:System.IO.Packaging.TargetMode.Internal" /> a <see cref="F:System.IO.Packaging.TargetMode.External" /> um recurso <see cref="T:System.IO.Packaging.Package" />ou ao.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.TargetUri">
      <summary>Obtém o URI do recurso de destino do relacionamento.</summary>
      <returns>O URI do recurso de destino.</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationshipCollection">
      <summary>Representa uma coleção de elementos <see cref="T:System.IO.Packaging.PackageRelationship" /> que são propriedade de um <see cref="T:System.IO.Packaging.PackagePart" /> ou <see cref="T:System.IO.Packaging.Package" /> fornecido.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipCollection.GetEnumerator">
      <summary>Retorna um enumerador para iterar pelos relacionamentos na coleção.</summary>
      <returns>Um enumerador para iterar pelos elementos <see cref="T:System.IO.Packaging.PackageRelationship" /> na coleção.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Este tipo ou membro dá suporte à infraestrutura do Windows Presentation Foundation e não se destina a ser usado diretamente do código.</summary>
      <returns>Não use – use <see cref="M:System.IO.Packaging.PackageRelationshipCollection.GetEnumerator" />.</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationshipSelector">
      <summary>Define os critérios <see cref="T:System.IO.Packaging.PackageRelationship" /> para selecionar as relações em nível de parte ou pacote.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.Packaging.PackageRelationshipSelector" />.</summary>
      <param name="sourceUri">O URI (Uniform Resource Identifier) do <see cref="T:System.IO.Packaging.PackagePart" /> ou o <see cref="T:System.IO.Packaging.Package" /> (<c>SourceUri</c>= "/") que é proprietário do relacionamento.</param>
      <param name="selectorType">O tipo do <paramref name="selectionCriteria" />, por relação <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" /> ou relação <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Type" />.</param>
      <param name="selectionCriteria">A cadeia de caracteres de qualificação que é usada para selecionar as relações com base no <paramref name="selectorType" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceUri" /> ou <paramref name="selectionCriteria" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O parâmetro <paramref name="selectorType" /> não é válido.</exception>
      <exception cref="T:System.Xml.XmlException">O parâmetro <paramref name="selectorType" /> é um <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" />, mas <paramref name="selectionCriteria" /> não é um Definição de XSD (esquema XML) ID (identificador) válido.</exception>
      <exception cref="T:System.ArgumentException">O <paramref name="selectionCriteria" /> não é válido para o <paramref name="selectorType" /> especificado.

ou -

O <paramref name="sourceUri" /> não é a raiz <see cref="T:System.IO.Packaging.Package" /> ("/") e também não é um <see cref="T:System.IO.Packaging.PackagePart" /> URI válido.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipSelector.Select(System.IO.Packaging.Package)">
      <summary>Retorna uma lista de objetos <see cref="T:System.IO.Packaging.PackageRelationship" /> que correspondem o <see cref="P:System.IO.Packaging.PackageRelationshipSelector.SourceUri" />, <see cref="P:System.IO.Packaging.PackageRelationshipSelector.SelectorType" /> e <see cref="P:System.IO.Packaging.PackageRelationshipSelector.SelectionCriteria" /> definidos.</summary>
      <param name="package">O pacote do qual selecionar as relações com base nos critérios de seleção.</param>
      <returns>Uma lista de relações que correspondem aos parâmetros de seleção especificados para o construtor <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="package" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationshipSelector.SelectionCriteria">
      <summary>Obtém os critérios de seleção especificados para o construtor <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" />.</summary>
      <returns>Os critérios de seleção com base <see cref="P:System.IO.Packaging.PackageRelationshipSelector.SelectorType" /> no <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" /> de <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Type" /> ou especificados para <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" /> o construtor.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationshipSelector.SelectorType">
      <summary>Obtém o <see cref="T:System.IO.Packaging.PackageRelationshipSelectorType" /> especificado para o construtor <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" />.</summary>
      <returns>O tipo de <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" /> seletor <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Type" /> ou especificado para <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" /> o construtor.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationshipSelector.SourceUri">
      <summary>Obtém o URI do pacote raiz ("/") ou a parte <see cref="P:System.IO.Packaging.PackagePart.Uri" /> especificada para o construtor <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" /> como o proprietário da relação.</summary>
      <returns>O URI do pacote raiz ("/") ou <see cref="P:System.IO.Packaging.PackagePart.Uri" /> parte especificada para <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" /> o construtor como o proprietário da relação.</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationshipSelectorType">
      <summary>Especifica o tipo de critério de seleção que é usado para corresponder e retornar seleções de <see cref="T:System.IO.Packaging.PackageRelationship" /> por meio de um <see cref="T:System.IO.Packaging.PackageRelationshipSelector" />.</summary>
    </member>
    <member name="F:System.IO.Packaging.PackageRelationshipSelectorType.Id">
      <summary>As seleções de <see cref="T:System.IO.Packaging.PackageRelationship" /> são por <see cref="P:System.IO.Packaging.PackageRelationship.Id" />.</summary>
    </member>
    <member name="F:System.IO.Packaging.PackageRelationshipSelectorType.Type">
      <summary>As seleções de <see cref="T:System.IO.Packaging.PackageRelationship" /> são por <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />.</summary>
    </member>
    <member name="T:System.IO.Packaging.PackUriHelper">
      <summary>Fornece métodos de utilitário para compor e analisar objetos URI de pacote.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.ComparePackUri(System.Uri,System.Uri)">
      <summary>Retorna um valor que indica se os dois URI "pack://" são equivalentes.</summary>
      <param name="firstPackUri">O primeiro URI "pack://".</param>
      <param name="secondPackUri">O segundo URI "pack://".</param>
      <returns>Um inteiro com sinal que indica a relação entre <paramref name="firstPackUri" /> e <paramref name="secondPackUri" />.  
  Valor 
  Significado 
  Menor que 0 
 <paramref name="firstPackUri" /> é menor que <paramref name="secondPackUri" />.  

  0 
 <paramref name="firstPackUri" /> equivale a <paramref name="secondPackUri" />.  

  Maior que 0 
 <paramref name="firstPackUri" /> é maior que <paramref name="secondPackUri" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="firstPackUri" /> ou <paramref name="secondPackUri" /> não é um URI absoluto.  

ou - 
<paramref name="firstPackUri" /> ou <paramref name="secondPackUri" /> não começa com um esquema "pack://".</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)">
      <summary>Retorna um valor que indica se a parte URIs dos dois pacotes é equivalente.</summary>
      <param name="firstPartUri">O URI do primeiro <see cref="T:System.IO.Packaging.PackagePart" />.</param>
      <param name="secondPartUri">O URI do segundo <see cref="T:System.IO.Packaging.PackagePart" />.</param>
      <returns>Um valor que indica a relação entre <paramref name="firstPartUri" /> e <paramref name="secondPartUri" />.  
  Valor 
  Significado 
  Menor que 0 
 <paramref name="firstPartUri" /> é menor que <paramref name="secondPartUri" />.  

  0 
 <paramref name="firstPartUri" /> equivale a <paramref name="secondPartUri" />.  

  Maior que 0 
 <paramref name="firstPartUri" /> é maior que <paramref name="secondPartUri" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="firstPartUri" /> ou <paramref name="secondPartUri" /> não é uma sintaxe de parte URI válida.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.Create(System.Uri)">
      <summary>Cria um novo URI "pack://" que aponta para um pacote.</summary>
      <param name="packageUri">O URI do <see cref="T:System.IO.Packaging.Package" /> referenciado.</param>
      <returns>O URI "pack://" para o <see cref="T:System.IO.Packaging.Package" /> referenciado pelo <paramref name="packageUri" /> fornecido.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="packageUri" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="packageUri" /> não é um URI absoluto.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri)">
      <summary>Cria um URI "pack://" dado <see cref="T:System.IO.Packaging.Package" /> URI e o URI de uma parte do pacote.</summary>
      <param name="packageUri">O URI do <see cref="T:System.IO.Packaging.Package" />.</param>
      <param name="partUri">O URI do <see cref="T:System.IO.Packaging.PackagePart" /> no pacote.</param>
      <returns>O URI "pack://" do <see cref="T:System.IO.Packaging.PackagePart" /> fornecido.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="packageUri" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="packageUri" /> não é um URI absoluto.  

ou - 
<paramref name="partUri" /> não é uma sintaxe de URI de parte válida.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri,System.String)">
      <summary>Cria um URI "pack://" dado um <see cref="T:System.IO.Packaging.Package" /> URI, o URI de uma parte do pacote e um fragmento "#" a ser acrescentado.</summary>
      <param name="packageUri">O URI do <see cref="T:System.IO.Packaging.Package" />.</param>
      <param name="partUri">O URI do <see cref="T:System.IO.Packaging.PackagePart" /> no pacote.</param>
      <param name="fragment">Uma referência "#" que identifica um elemento na parte do pacote.</param>
      <returns>O URI de pacote que identifica o pacote especificado, a parte do pacote e o fragmento.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="packageUri" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="packageUri" /> não é um URI absoluto.  

ou - 
<paramref name="partUri" /> não é uma sintaxe de URI de parte válida.  

ou - 
<paramref name="fragment" /> está vazio ou começa com "#".</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)">
      <summary>Cria uma URI <see cref="T:System.IO.Packaging.PackagePart" /> formatada.</summary>
      <param name="partUri">O URI do <see cref="T:System.IO.Packaging.PackagePart" /> dentro do pacote.</param>
      <returns>Uma URI <see cref="T:System.IO.Packaging.PackagePart" /> formatada.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> não é um <see cref="T:System.Uri" /> absoluto.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)">
      <summary>Retorna o formato normalizado de um URI <see cref="T:System.IO.Packaging.PackagePart" /> especificado.</summary>
      <param name="partUri">O URI <see cref="T:System.IO.Packaging.PackagePart" /> a ser normalizado.</param>
      <returns>O formato normalizado do <paramref name="partUri" /> fornecido.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> não tem uma sintaxe <see cref="T:System.Uri" /> válida.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)">
      <summary>Retorna o URI interno que aponta para o pacote inteiro de um URI "pack://" especificado.</summary>
      <param name="packUri">O URI "pack://" do qual retornar o URI do <see cref="T:System.IO.Packaging.Package" />.</param>
      <returns>O URI do <see cref="T:System.IO.Packaging.Package" /> do <paramref name="packUri" /> especificado.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="packUri" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="packUri" /> não é um <see cref="T:System.Uri" /> absoluto.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)">
      <summary>Retorna o URI de um <see cref="T:System.IO.Packaging.PackagePart" /> dentro de um URI de pacote especificado.</summary>
      <param name="packUri">O URI de pacote do qual retornar o <see cref="T:System.IO.Packaging.PackagePart" /> URI.</param>
      <returns>O URI do <see cref="T:System.IO.Packaging.PackagePart" /> no <paramref name="packUri" /> determinado ou <see langword="null" /> se <paramref name="packUri" /> apontar para um pacote, em vez de um <see cref="T:System.IO.Packaging.PackagePart" />.</returns>
      <exception cref="T:System.ArgumentNullException">Se o <paramref name="packUri" /> for <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Se <paramref name="packUri" /> não for um <see cref="T:System.Uri" /> absoluto.

ou -

<paramref name="packUri" /> não tem o esquema "pack://".

ou - 
O partUri extraído de <paramref name="packUri" /> não está em conformidade com a sintaxe partUri válida.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)">
      <summary>Retorna o URI da parte da relação associada a um <see cref="T:System.IO.Packaging.PackagePart" /> especificado.</summary>
      <param name="partUri">O <see cref="P:System.IO.Packaging.PackagePart.Uri" /> do <see cref="T:System.IO.Packaging.PackagePart" /> para retornar o URI do <see cref="T:System.IO.Packaging.PackageRelationship" /> associado.</param>
      <returns>O URI da parte de <see cref="T:System.IO.Packaging.PackageRelationship" /> associada ao <see cref="T:System.IO.Packaging.PackagePart" /> identificado por <paramref name="partUri" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">A sintaxe <paramref name="partUri" /> não é válida para o URI da parte do pacote.  

ou - 
<paramref name="partUri" /> é um URI absoluto.  

ou - 
<paramref name="partUri" /> faz referência a uma parte da relação.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)">
      <summary>Retorna o URI relativo entre dois <see cref="T:System.IO.Packaging.PackagePart" /> URIs especificados.</summary>
      <param name="sourcePartUri">O URI da parte de origem.</param>
      <param name="targetPartUri">O URI da parte de destino.</param>
      <returns>O URI relativo de <paramref name="sourcePartUri" /> para <paramref name="targetPartUri" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourcePartUri" /> ou <paramref name="targetPartUri" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="sourcePartUri" /> ou <paramref name="targetPartUri" /> não tem uma sintaxe <see cref="T:System.Uri" /> válida.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri(System.Uri)">
      <summary>Retorna o <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> do <see cref="T:System.IO.Packaging.PackageRelationship" /> com um URI especificado.</summary>
      <param name="relationshipPartUri">O URI da parte da relação da qual o <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> será retornado.</param>
      <returns>O <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> do <see cref="T:System.IO.Packaging.PackagePart" /> da relação com o <paramref name="relationshipPartUri" /> especificado.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="relationshipPartUri" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="relationshipPartUri" /> é um URI absoluto.  

ou - 
A sintaxe <paramref name="relationshipPartUri" /> não é válida para um <see cref="T:System.IO.Packaging.PackagePart" />.  

ou - 
<paramref name="relationshipPartUri" /> não faz referência a uma parte de relação.  

ou - 
O <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> da parte da relação faz referência a outra parte da relação (inválido).</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.IsRelationshipPartUri(System.Uri)">
      <summary>Retorna um valor que indica se um URI especificado é o URI de um componente de <see cref="T:System.IO.Packaging.PackageRelationship" />.</summary>
      <param name="partUri">O URI a ser verificado quanto a uma parte de <see cref="T:System.IO.Packaging.PackageRelationship" />.</param>
      <returns>
        <see langword="true" /> de <paramref name="partUri" /> identificar uma parte de <see cref="T:System.IO.Packaging.PackageRelationship" />; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> é um URI absoluto.  

ou - 
<paramref name="partUri" /> é uma sintaxe <see cref="T:System.IO.Packaging.PackagePart" /> inválida.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)">
      <summary>Retorna o URI de uma parte, dado o URI da parte de origem e um URI com um caminho relativo para uma parte de destino.</summary>
      <param name="sourcePartUri">O URI da parte de origem ou "/" para designar a raiz de <see cref="T:System.IO.Packaging.Package" />.</param>
      <param name="targetUri">O URI relativo à parte de destino.</param>
      <returns>O URI da parte de destino resolvido entre os parâmetros <paramref name="SourcePartUri" /> e <paramref name="targetUri" /> especificados.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourcePartUri" /> ou <paramref name="targetUri" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="sourcePartUri" /> não é um URI de parte válido.  

ou - 
<paramref name="targetUri" /> não é um URI relativo válido.</exception>
    </member>
    <member name="F:System.IO.Packaging.PackUriHelper.UriSchemePack">
      <summary>Define o "pacote" do nome do esquema do URI "pack://".</summary>
    </member>
    <member name="T:System.IO.Packaging.RightsManagementInformation">
      <summary vsli:raw="Represents Digital Rights Management (DRM) information that is stored in an &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;.">Representa informações de DRM (gerenciamento de direitos digitais) que são armazenadas em um <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</summary>
    </member>
    <member name="P:System.IO.Packaging.RightsManagementInformation.CryptoProvider">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Security.RightsManagement.CryptoProvider&quot; /&gt; for accessing the package's encrypted rights management data stream.">Obtém ou define o <see cref="T:System.Security.RightsManagement.CryptoProvider" /> para acessar o fluxo de dados criptografados de gerenciamento de direitos do pacote.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.RightsManagement.CryptoProvider&quot; /&gt; for accessing the rights management information.">O <see cref="T:System.Security.RightsManagement.CryptoProvider" /> para acessar as informações do Rights Management.</returns>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.DeleteUseLicense(System.Security.RightsManagement.ContentUser)">
      <summary vsli:raw="Deletes the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for a specified user from the encrypted rights management data stream.">Exclui o <see cref="T:System.Security.RightsManagement.UseLicense" /> de um usuário especificado do fluxo de dados criptografados de gerenciamento de direitos.</summary>
      <param name="userKey" vsli:raw="The user of the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; to be deleted.">O usuário do <see cref="T:System.Security.RightsManagement.UseLicense" /> a ser excluído.</param>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.GetEmbeddedUseLicenses">
      <summary vsli:raw="Returns a dictionary collection of user and &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; key/value pairs from the encrypted rights management data stream.">Retorna uma coleção de dicionários de pares chave-valor de usuário e <see cref="T:System.Security.RightsManagement.UseLicense" /> do fluxo de dados criptografados de gerenciamento de direitos.</summary>
      <returns vsli:raw="A collection of user and &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; key/value pairs that are contained in the rights managed protected package.">Uma coleção de pares chave-valor de usuário e <see cref="T:System.Security.RightsManagement.UseLicense" /> contidos no pacote protegido por direitos gerenciados.</returns>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.LoadPublishLicense">
      <summary vsli:raw="Returns the embedded &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; from the encrypted rights management data stream.">Retorna o <see cref="T:System.Security.RightsManagement.PublishLicense" /> inserido do fluxo de dados criptografados de gerenciamento de direitos.</summary>
      <returns vsli:raw="The embedded &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt;; or &lt;see langword=&quot;null&quot; /&gt;, if the package does not contain a &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt;.">O <see cref="T:System.Security.RightsManagement.PublishLicense" /> inserido ou então <see langword="null" /> se o pacote não contém um <see cref="T:System.Security.RightsManagement.PublishLicense" />.</returns>
      <exception cref="T:System.IO.FileFormatException" vsli:raw="The rights management information in this package cannot be read by the current version of this class.">As informações de gerenciamento de direitos neste pacote não podem ser lidas pela versão atual dessa classe.</exception>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.LoadUseLicense(System.Security.RightsManagement.ContentUser)">
      <summary vsli:raw="Returns a specified user's embedded &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; from the encrypted rights management data stream.">Retorna o <see cref="T:System.Security.RightsManagement.UseLicense" /> inserido de um usuário especificado do fluxo de dados criptografados de gerenciamento de direitos.</summary>
      <param name="userKey" vsli:raw="The user or user group to return the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for.">O usuário ou grupo de usuários para o qual retornar o <see cref="T:System.Security.RightsManagement.UseLicense" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for the specified user; or &lt;see langword=&quot;null&quot; /&gt;, if the package does not contain a &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; that matches the given &lt;paramref name=&quot;userKey&quot; /&gt;.">O <see cref="T:System.Security.RightsManagement.UseLicense" /> para o usuário especificado ou então <see langword="null" /> se o pacote não contém um <see cref="T:System.Security.RightsManagement.UseLicense" /> correspondente ao <paramref name="userKey" /> fornecido.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;userKey&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">O parâmetro <paramref name="userKey" /> é <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileFormatException" vsli:raw="The rights management information in this package cannot be read by the current version of this class.">As informações de gerenciamento de direitos neste pacote não podem ser lidas pela versão atual dessa classe.</exception>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.SavePublishLicense(System.Security.RightsManagement.PublishLicense)">
      <summary vsli:raw="Saves a given &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; to the encrypted rights management data stream.">Salva um <see cref="T:System.Security.RightsManagement.PublishLicense" /> fornecido no fluxo de dados criptografados de gerenciamento de direitos.</summary>
      <param name="publishLicense" vsli:raw="The publish license to store and embed in the package.">A licença de publicação a ser armazenada e inserida no pacote.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;publishLicense&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">O parâmetro <paramref name="publishLicense" /> é <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileFormatException" vsli:raw="The rights management information in this package cannot be read by the current version of this class.">As informações de gerenciamento de direitos neste pacote não podem ser lidas pela versão atual dessa classe.</exception>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.SaveUseLicense(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.UseLicense)">
      <summary vsli:raw="Saves a given &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for a specified user to the encrypted rights management data stream.">Salva um <see cref="T:System.Security.RightsManagement.UseLicense" /> fornecido de um usuário especificado no fluxo de dados criptografados de gerenciamento de direitos.</summary>
      <param name="userKey" vsli:raw="The user of the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt;.">O usuário do <see cref="T:System.Security.RightsManagement.UseLicense" />.</param>
      <param name="useLicense" vsli:raw="The use license to store and embed in the package.">A licença de uso a ser armazenada e inserida no pacote.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Either the &lt;paramref name=&quot;userKey&quot; /&gt; or &lt;paramref name=&quot;useLicense&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">O parâmetro <paramref name="userKey" /> ou <paramref name="useLicense" /> é <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileFormatException" vsli:raw="The rights management information in this package cannot be read by the current version of this class.">As informações de gerenciamento de direitos neste pacote não podem ser lidas pela versão atual dessa classe.</exception>
    </member>
    <member name="T:System.IO.Packaging.SignatureVerificationEventArgs">
      <summary vsli:raw="Specifies the event args provided to the &lt;see cref=&quot;T:System.IO.Packaging.InvalidSignatureEventHandler&quot; /&gt;.">Especifica os argumentos do evento fornecidos para o <see cref="T:System.IO.Packaging.InvalidSignatureEventHandler" />.</summary>
    </member>
    <member name="P:System.IO.Packaging.SignatureVerificationEventArgs.Signature">
      <summary vsli:raw="Gets the digital signature being verified.">Obtém a assinatura digital sendo verificada.</summary>
      <returns vsli:raw="The digital signature being verified.">A assinatura digital que está sendo verificada.</returns>
    </member>
    <member name="P:System.IO.Packaging.SignatureVerificationEventArgs.VerifyResult">
      <summary vsli:raw="Gets the signature verification error.">Obtém o erro de verificação de assinatura.</summary>
      <returns vsli:raw="The signature verification error.">O erro de verificação de assinatura.</returns>
    </member>
    <member name="T:System.IO.Packaging.StorageInfo">
      <summary vsli:raw="Provides access and information for manipulating data stores in a &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">Fornece acesso e informações para a manipulação de repositórios de dados em um <see cref="T:System.IO.Packaging.Package" />.</summary>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.CreateStream(System.String)">
      <summary vsli:raw="Creates a new stream with a given name.">Cria um novo fluxo com um determinado nome.</summary>
      <param name="name" vsli:raw="The name for the new stream.">O nome do novo fluxo.</param>
      <returns vsli:raw="The new stream with the specified &lt;paramref name=&quot;name&quot; /&gt;.">O novo fluxo com o <paramref name="name" /> especificado.</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.CreateStream(System.String,System.IO.Packaging.CompressionOption,System.IO.Packaging.EncryptionOption)">
      <summary vsli:raw="Creates a new stream with a given name, &lt;see cref=&quot;T:System.IO.Packaging.CompressionOption&quot; /&gt;, and &lt;see cref=&quot;T:System.IO.Packaging.EncryptionOption&quot; /&gt;.">Cria um novo fluxo com um determinado nome, <see cref="T:System.IO.Packaging.CompressionOption" /> e <see cref="T:System.IO.Packaging.EncryptionOption" />.</summary>
      <param name="name" vsli:raw="The name for the new stream.">O nome do novo fluxo.</param>
      <param name="compressionOption" vsli:raw="The compression option for the data stream.">A opção de compactação do fluxo de dados.</param>
      <param name="encryptionOption" vsli:raw="The encryption option for the data stream.">A opção de criptografia para o fluxo de dados.</param>
      <returns vsli:raw="The new stream with the specified &lt;paramref name=&quot;name&quot; /&gt;, &lt;paramref name=&quot;compressionOption&quot; /&gt;, and &lt;paramref name=&quot;encryptionOption&quot; /&gt;.">O novo fluxo com o <paramref name="name" />, o <paramref name="compressionOption" /> e o <paramref name="encryptionOption" /> especificados.</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.CreateSubStorage(System.String)">
      <summary vsli:raw="Creates a new child &lt;see cref=&quot;T:System.IO.Packaging.StorageInfo&quot; /&gt; with this &lt;see cref=&quot;T:System.IO.Packaging.StorageInfo&quot; /&gt; as the parent.">Cria um novo <see cref="T:System.IO.Packaging.StorageInfo" /> filho com este <see cref="T:System.IO.Packaging.StorageInfo" /> como pai.</summary>
      <param name="name" vsli:raw="The name for the new child data store.">O nome do novo armazenamento de dados filho.</param>
      <returns vsli:raw="The new child data store.">O novo armazenamento de dados filho.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">O parâmetro <paramref name="name" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.DeleteStream(System.String)">
      <summary vsli:raw="Deletes the stream with a specified name.">Exclui o fluxo com um nome especificado.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.StreamInfo&quot; /&gt; name of the stream to delete.">O nome <see cref="T:System.IO.Packaging.StreamInfo" /> do fluxo a excluir.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">O parâmetro <paramref name="name" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.DeleteSubStorage(System.String)">
      <summary vsli:raw="Deletes a specified sub-store.">Exclui um sub-repositório especificado.</summary>
      <param name="name" vsli:raw="The name of the sub-store to delete.">O nome do sub-repositório a excluir.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">O parâmetro <paramref name="name" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.GetStreamInfo(System.String)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.IO.Packaging.StreamInfo&quot; /&gt; instance with the given name.">Retorna a instância <see cref="T:System.IO.Packaging.StreamInfo" /> com o nome fornecido.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.IO.Packaging.StreamInfo&quot; /&gt; instance to return.">O nome da instância <see cref="T:System.IO.Packaging.StreamInfo" /> a retornar.</param>
      <returns vsli:raw="The stream with the specified &lt;paramref name=&quot;name&quot; /&gt;.">O fluxo com o <paramref name="name" /> especificado.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">O parâmetro <paramref name="name" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.GetStreams">
      <summary vsli:raw="Returns an array of the &lt;see cref=&quot;T:System.IO.Packaging.StreamInfo&quot; /&gt; instances that are currently contained in this store.">Retorna uma matriz de instâncias <see cref="T:System.IO.Packaging.StreamInfo" /> contidas neste repositório no momento.</summary>
      <returns vsli:raw="An array of the &lt;see cref=&quot;T:System.IO.Packaging.StreamInfo&quot; /&gt; objects, each pointing to an I/O steam defined within this store.">Uma matriz dos objetos <see cref="T:System.IO.Packaging.StreamInfo" />, cada um apontando para um fluxo de E/S definido dentro desse repositório.</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.GetSubStorageInfo(System.String)">
      <summary vsli:raw="Returns the child sub-store with a given name.">Retorna o sub-repositório filho com um determinado nome.</summary>
      <param name="name" vsli:raw="The name of the sub-store to return.">O nome do sub-repositório a retornar.</param>
      <returns vsli:raw="The child sub-store with the specified &lt;paramref name=&quot;name&quot; /&gt;.">O sub-repositório filho com o <paramref name="name" /> especificado.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">O parâmetro <paramref name="name" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.GetSubStorages">
      <summary vsli:raw="Returns an array of the child sub-stores that are currently contained in this store.">Retorna uma matriz de sub-repositórios filho contidos neste repositório no momento.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.IO.Packaging.StorageInfo&quot; /&gt; objects, each pointing to a sub-store defined within this store.">Uma matriz de objetos <see cref="T:System.IO.Packaging.StorageInfo" />, cada um apontando para um sub-repositório definido neste repositório.</returns>
    </member>
    <member name="P:System.IO.Packaging.StorageInfo.Name">
      <summary vsli:raw="Gets the name of the store.">Obtém o nome do repositório.</summary>
      <returns vsli:raw="The name of this store.">O nome deste repositório.</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.StreamExists(System.String)">
      <summary vsli:raw="Returns a value that indicates whether a given stream exists.">Retorna um valor que indica se um dado fluxo existe.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.StreamInfo&quot; /&gt; name to check for.">O nome <see cref="T:System.IO.Packaging.StreamInfo" /> a verificar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a stream with the specified &lt;paramref name=&quot;name&quot; /&gt; exists; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se um fluxo com o <paramref name="name" /> especificado existir; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.SubStorageExists(System.String)">
      <summary vsli:raw="Returns a value that indicates whether a given child sub-store exists.">Retorna um valor que indica se um dado sub-repositório filho existe.</summary>
      <param name="name" vsli:raw="The child &lt;see cref=&quot;T:System.IO.Packaging.StorageInfo&quot; /&gt; name to check for.">O nome do <see cref="T:System.IO.Packaging.StorageInfo" /> filho a verificar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a child sub-store with the specified &lt;paramref name=&quot;name&quot; /&gt; exists; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se um sub-repositório filho com o <paramref name="name" /> especificado existir; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="T:System.IO.Packaging.StreamInfo">
      <summary vsli:raw="Provides access and information for manipulating I/O streams within a &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">Fornece acesso e informações para a manipulação de fluxos de E/S em um <see cref="T:System.IO.Packaging.Package" />.</summary>
    </member>
    <member name="P:System.IO.Packaging.StreamInfo.CompressionOption">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.IO.Packaging.CompressionOption&quot; /&gt; setting for the stream.">Obtém a configuração <see cref="T:System.IO.Packaging.CompressionOption" /> do fluxo.</summary>
      <returns vsli:raw="The compression option setting for the package stream.">A configuração da opção de compactação para o fluxo do pacote.</returns>
    </member>
    <member name="P:System.IO.Packaging.StreamInfo.EncryptionOption">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.IO.Packaging.EncryptionOption&quot; /&gt; setting for the stream.">Obtém a configuração <see cref="T:System.IO.Packaging.EncryptionOption" /> do fluxo.</summary>
      <returns vsli:raw="The encryption option setting for the package stream.">A configuração da opção de criptografia para o fluxo do pacote.</returns>
    </member>
    <member name="M:System.IO.Packaging.StreamInfo.GetStream">
      <summary vsli:raw="Returns a stream opened in a default &lt;see cref=&quot;T:System.IO.FileMode&quot; /&gt; and &lt;see cref=&quot;T:System.IO.FileAccess&quot; /&gt;.">Retorna um fluxo aberto em um <see cref="T:System.IO.FileMode" /> e <see cref="T:System.IO.FileAccess" /> padrão.</summary>
      <returns vsli:raw="The I/O stream opened in a default &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; root &lt;see cref=&quot;T:System.IO.FileMode&quot; /&gt; and &lt;see cref=&quot;T:System.IO.FileAccess&quot; /&gt;.">O fluxo de E/S aberto em um <see cref="T:System.IO.Packaging.Package" /> raiz <see cref="T:System.IO.FileMode" /> padrão e <see cref="T:System.IO.FileAccess" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.StreamInfo.GetStream(System.IO.FileMode)">
      <summary vsli:raw="Returns an I/O stream opened in a specified &lt;see cref=&quot;T:System.IO.FileMode&quot; /&gt;.">Retorna um fluxo de E/S aberto em um <see cref="T:System.IO.FileMode" /> especificado.</summary>
      <param name="mode" vsli:raw="The file mode in which to open the stream.">O modo de arquivo no qual abrir o fluxo.</param>
      <returns vsli:raw="The stream opened in the specified file &lt;paramref name=&quot;mode&quot; /&gt;.">O fluxo aberto no arquivo <paramref name="mode" /> especificado.</returns>
    </member>
    <member name="M:System.IO.Packaging.StreamInfo.GetStream(System.IO.FileMode,System.IO.FileAccess)">
      <summary vsli:raw="Returns an I/O stream opened in a specified &lt;see cref=&quot;T:System.IO.FileMode&quot; /&gt; and with a given &lt;see cref=&quot;T:System.IO.FileAccess&quot; /&gt;.">Retorna um fluxo de E/S aberto em um <see cref="T:System.IO.FileMode" /> especificado e com um <see cref="T:System.IO.FileAccess" /> determinado.</summary>
      <param name="mode" vsli:raw="The file mode in which to open the stream.">O modo de arquivo no qual abrir o fluxo.</param>
      <param name="access" vsli:raw="The file access mode in which to read or write to the stream.">O modo de acesso de arquivo no qual o fluxo será lido ou gravado.</param>
      <returns vsli:raw="The I/O stream opened in the specified &lt;see cref=&quot;T:System.IO.FileMode&quot; /&gt; and with a given &lt;see cref=&quot;T:System.IO.FileAccess&quot; /&gt;.">O fluxo de E/S aberto no <see cref="T:System.IO.FileMode" /> especificado e com um <see cref="T:System.IO.FileAccess" /> determinado.</returns>
    </member>
    <member name="P:System.IO.Packaging.StreamInfo.Name">
      <summary vsli:raw="Gets the name of the stream.">Obtém o nome do fluxo.</summary>
      <returns vsli:raw="The name of this stream.">O nome deste fluxo.</returns>
    </member>
    <member name="T:System.IO.Packaging.TargetMode">
      <summary>Especifica se o destino de um <see cref="T:System.IO.Packaging.PackageRelationship" /> está dentro ou fora do <see cref="T:System.IO.Packaging.Package" />.</summary>
    </member>
    <member name="F:System.IO.Packaging.TargetMode.External">
      <summary>A relação referencia um recurso externo ao pacote.</summary>
    </member>
    <member name="F:System.IO.Packaging.TargetMode.Internal">
      <summary>A relação referencia uma parte que está dentro do pacote.</summary>
    </member>
    <member name="T:System.IO.Packaging.VerifyResult">
      <summary vsli:raw="Specifies the result of a certificate or signature verification.">Especifica o resultado de uma verificação de certificado ou de assinatura.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.CertificateRequired">
      <summary vsli:raw="The X.509 certificate is not available to verify the signature.">O certificado X.509 não está disponível para verificar a assinatura.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.InvalidCertificate">
      <summary vsli:raw="The X.509 certificate is not valid.">O certificado X.509 não é válido.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.InvalidSignature">
      <summary vsli:raw="The signature is not valid.">A assinatura não é válida.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.NotSigned">
      <summary vsli:raw="The specified package or part has no signature.">O pacote ou a parte especificada não tem assinatura.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.ReferenceNotFound">
      <summary vsli:raw="A reference relationship to the signature was not found.">Não foi encontrada uma relação de referência com a assinatura.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.Success">
      <summary vsli:raw="The verification was successful.">A verificação foi bem-sucedida.</summary>
    </member>
    <member name="T:System.IO.Packaging.ZipPackage">
      <summary>Implementa uma subclasse derivada da classe base abstrata <see cref="T:System.IO.Packaging.Package" /> – a classe <see cref="T:System.IO.Packaging.ZipPackage" /> usa um arquivo morto ZIP como o repositório do contêiner. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="T:System.IO.Packaging.ZipPackagePart">
      <summary>Representa uma parte armazenada em um <see cref="T:System.IO.Packaging.ZipPackage" />.</summary>
    </member>
    <member name="T:System.Security.Permissions.MediaPermission">
      <summary>O <see cref="T:System.Security.Permissions.MediaPermission" /> descreve um conjunto de permissões de segurança que controla a capacidade de mídias de áudio, imagem e vídeo funcionarem um aplicativo WPF (Windows Presentation Foundation) de confiança parcial.</summary>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.MediaPermission" />.</summary>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionAudio)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.MediaPermission" /> especificando o nível de permissão de áudio.</summary>
      <param name="permissionAudio">Um valor enumerado de <see cref="T:System.Security.Permissions.MediaPermissionAudio" />.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionAudio,System.Security.Permissions.MediaPermissionVideo,System.Security.Permissions.MediaPermissionImage)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.MediaPermission" /> especificando os níveis de permissão de áudio, vídeo e imagem.</summary>
      <param name="permissionAudio">Um valor enumerado de <see cref="T:System.Security.Permissions.MediaPermissionAudio" />.</param>
      <param name="permissionVideo">Um valor enumerado de <see cref="T:System.Security.Permissions.MediaPermissionVideo" />.</param>
      <param name="permissionImage">Um valor enumerado de <see cref="T:System.Security.Permissions.MediaPermissionImage" />.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionImage)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.MediaPermission" /> especificando o nível de permissão de imagem.</summary>
      <param name="permissionImage">Um valor enumerado de <see cref="T:System.Security.Permissions.MediaPermissionImage" />.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionVideo)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.MediaPermission" /> especificando o nível de permissão de vídeo.</summary>
      <param name="permissionVideo">Um valor enumerado de <see cref="T:System.Security.Permissions.MediaPermissionVideo" />.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.MediaPermission" /> especificando um estado de permissão.</summary>
      <param name="state">Um valor enumerado de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="P:System.Security.Permissions.MediaPermission.Audio">
      <summary>Obtém o valor atual do nível de permissão de áudio.</summary>
      <returns>O nível de permissão de áudio.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.Copy">
      <summary>Cria e retorna uma cópia idêntica da permissão atual.</summary>
      <returns>Uma cópia da permissão atual.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstrói um a permissão com um estado especificado de uma codificação XML.</summary>
      <param name="securityElement">A codificação de XML a usar para reconstruir a permissão.</param>
    </member>
    <member name="P:System.Security.Permissions.MediaPermission.Image">
      <summary>Obtém o valor atual do nível de permissão de imagem.</summary>
      <returns>O nível de permissão de imagem.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.Intersect(System.Security.IPermission)">
      <summary>Cria e retorna uma permissão que é a interseção de permissão atual e da permissão especificada.</summary>
      <param name="target">Uma permissão para ter interseção com a permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <returns>A intersecção de duas permissões é uma permissão que descreve o estado que ambas descrevem em comum. Somente uma demanda que passe ambas as permissões originais será válida para a permissão interseccionada.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina se a permissão atual é um subconjunto da permissão especificada.</summary>
      <param name="target">Uma permissão que deve ser testada quanto à relação de subconjunto. Essa permissão deve ser do mesmo tipo da permissão atual.</param>
      <returns>
        <see langword="true" /> se a permissão atual for um subconjunto da permissão especificada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.IsUnrestricted">
      <summary>Retorna um valor que indica se a permissão atual é irrestrita.</summary>
      <returns>
        <see langword="true" /> se as permissões para imagem, áudio e vídeo forem todas irrestritas; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.ToXml">
      <summary>Cria uma codificação XML da permissão e de seu estado atual.</summary>
      <returns>Uma codificação XML da permissão, incluindo quaisquer informações de estado.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.Union(System.Security.IPermission)">
      <summary>Cria uma permissão que é a união entre a permissão atual e a permissão especificada.</summary>
      <param name="target">Uma permissão a ser combinada com a permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <returns>Uma nova permissão que representa a união da permissão atual e da permissão especificada.</returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermission.Video">
      <summary>Obtém o valor atual do nível de permissão de vídeo.</summary>
      <returns>O nível de permissão de mídia.</returns>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionAttribute">
      <summary>Permite que as ações de segurança para <see cref="T:System.Security.Permissions.MediaPermission" /> sejam aplicadas ao código usando a segurança declarativa.</summary>
    </member>
    <member name="M:System.Security.Permissions.MediaPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa uma nova instância de <see cref="T:System.Security.Permissions.MediaPermissionAttribute" />.</summary>
      <param name="action">Um dos valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="P:System.Security.Permissions.MediaPermissionAttribute.Audio">
      <summary>Obtém ou define o nível de permissão de áudio para o <see cref="T:System.Security.Permissions.MediaPermissionAttribute" />.</summary>
      <returns>O estado do <see cref="T:System.Security.Permissions.MediaPermissionAudio" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermissionAttribute.CreatePermission">
      <summary>Cria e retorna um novo <see cref="T:System.Security.Permissions.MediaPermission" />.</summary>
      <returns>Um <see cref="T:System.Security.Permissions.MediaPermission" /> que corresponde a este atributo.</returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermissionAttribute.Image">
      <summary>Obtém ou define o nível de permissão de imagem para o <see cref="T:System.Security.Permissions.MediaPermissionAttribute" />.</summary>
      <returns>O estado do <see cref="T:System.Security.Permissions.MediaPermissionImage" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermissionAttribute.Video">
      <summary>Obtém ou define o nível de permissão de vídeo para o <see cref="T:System.Security.Permissions.MediaPermissionAttribute" />.</summary>
      <returns>O estado do <see cref="T:System.Security.Permissions.MediaPermissionVideo" />.</returns>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionAudio">
      <summary>Especifica o nível de permissão para áudio.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.AllAudio">
      <summary>Permissão que possibilita reprodução irrestrita de vídeo.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.NoAudio">
      <summary>Permissão que proíbe toda a reprodução de áudio.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.SafeAudio">
      <summary>Permissão para reprodução de áudio limitada e segura, o que inclui negar o acesso de fluxo ao arquivo de imagem.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.SiteOfOriginAudio">
      <summary>Permissão apenas para reprodução de áudio de arquivos localizados no site de origem do aplicativo.</summary>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionImage">
      <summary>Especifica o nível de permissão para imagens.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.AllImage">
      <summary>Permissão que possibilita a exibição irrestrita da imagem.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.NoImage">
      <summary>Permissão que proíbe a exibição de todas as imagens.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.SafeImage">
      <summary>Permissão que possibilita a exibição segura e limitada de imagem, o que inclui negar o acesso de fluxo ao arquivo de imagem.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.SiteOfOriginImage">
      <summary>Permissão que somente permite a exibição de imagens localizadas no site de origem do aplicativo.</summary>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionVideo">
      <summary>Especifica o nível de permissão para vídeo.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.AllVideo">
      <summary>Permissão para reprodução de vídeo irrestrita.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.NoVideo">
      <summary>Permissão que proíbe toda a reprodução de vídeo.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.SafeVideo">
      <summary>Permissão para reprodução de vídeo limitada e segura, a qual inclui negar o acesso de fluxo ao arquivo de imagem.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.SiteOfOriginVideo">
      <summary>Permissão apenas para reprodução de vídeo de arquivos localizados no site de origem do aplicativo.</summary>
    </member>
    <member name="T:System.Security.Permissions.WebBrowserPermission">
      <summary>O objeto <see cref="T:System.Security.Permissions.WebBrowserPermission" /> controla a capacidade de criar o controle WebBrowser.</summary>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.WebBrowserPermission" />.</summary>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.WebBrowserPermission" /> especificando um estado de permissão.</summary>
      <param name="state">Um valor enumerado de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.WebBrowserPermissionLevel)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.WebBrowserPermission" /> especificando o nível de permissão do navegador da Web.</summary>
      <param name="webBrowserPermissionLevel">Um valor enumerado de <see cref="T:System.Security.Permissions.WebBrowserPermissionLevel" />.</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.Copy">
      <summary>Cria e retorna uma cópia idêntica da permissão atual.</summary>
      <returns>Uma cópia da permissão atual.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstrói um a permissão com um estado especificado de uma codificação XML.</summary>
      <param name="securityElement">A codificação de XML a usar para reconstruir a permissão.</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.Intersect(System.Security.IPermission)">
      <summary>Cria e retorna uma permissão que é a interseção de permissão atual e da permissão especificada.</summary>
      <param name="target">Uma permissão para ter interseção com a permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <returns>A intersecção de duas permissões é uma permissão que descreve o estado que ambas descrevem em comum. Somente uma demanda que passe ambas as permissões originais será válida para a permissão interseccionada.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina se a permissão atual é um subconjunto da permissão especificada.</summary>
      <param name="target">Uma permissão que deve ser testada quanto à relação de subconjunto. Essa permissão deve ser do mesmo tipo da permissão atual.</param>
      <returns>
        <see langword="true" /> se a permissão atual for um subconjunto da permissão especificada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.IsUnrestricted">
      <summary>Retorna um valor que indica se a permissão atual é irrestrita.</summary>
      <returns>
        <see langword="true" /> se a propriedade <see cref="P:System.Security.Permissions.WebBrowserPermission.Level" /> estiver definida como <see cref="F:System.Security.Permissions.WebBrowserPermissionLevel.Unrestricted" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.WebBrowserPermission.Level">
      <summary>Obtém ou define o valor atual do nível de permissão do navegador da Web.</summary>
      <returns>O valor atual do nível de permissão do navegador da Web.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.ToXml">
      <summary>Cria uma codificação XML da permissão e de seu estado atual.</summary>
      <returns>Uma codificação XML da permissão, incluindo quaisquer informações de estado.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.Union(System.Security.IPermission)">
      <summary>Cria uma permissão que é a união entre a permissão atual e a permissão especificada.</summary>
      <param name="target">Uma permissão a ser combinada com a permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <returns>Uma nova permissão que representa a união da permissão atual e da permissão especificada.</returns>
    </member>
    <member name="T:System.Security.Permissions.WebBrowserPermissionAttribute">
      <summary>Permite que as ações de segurança para <see cref="T:System.Security.Permissions.WebBrowserPermission" /> sejam aplicadas ao código usando a segurança declarativa.</summary>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.WebBrowserPermissionAttribute" /> com o <see cref="T:System.Security.Permissions.SecurityAction" /> especificado.</summary>
      <param name="action">Um dos valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermissionAttribute.CreatePermission">
      <summary>Cria e retorna uma nova instância da classe <see cref="T:System.Security.Permissions.WebBrowserPermission" />.</summary>
      <returns>Um <see cref="T:System.Security.Permissions.WebBrowserPermission" /> que corresponde à declaração de segurança.</returns>
    </member>
    <member name="P:System.Security.Permissions.WebBrowserPermissionAttribute.Level">
      <summary>Obtém ou define o nível atual de permissão de navegador da Web para o <see cref="T:System.Security.Permissions.WebBrowserPermissionAttribute" />.</summary>
      <returns>O estado do nível de permissão do navegador da Web atual.</returns>
    </member>
    <member name="T:System.Security.Permissions.WebBrowserPermissionLevel">
      <summary>Especifica o nível de permissão de um navegador da Web.</summary>
    </member>
    <member name="F:System.Security.Permissions.WebBrowserPermissionLevel.None">
      <summary>Um navegador da Web que não pode navegar em quadros em HTML.</summary>
    </member>
    <member name="F:System.Security.Permissions.WebBrowserPermissionLevel.Safe">
      <summary>Um navegador da Web que pode navegar em quadros em HTML com segurança, mas com várias restrições.</summary>
    </member>
    <member name="F:System.Security.Permissions.WebBrowserPermissionLevel.Unrestricted">
      <summary>Um navegador da Web que pode navegar sem restrições.</summary>
    </member>
    <member name="T:System.Security.RightsManagement.AuthenticationType">
      <summary vsli:raw="Specifies the method of rights management authentication.">Especifica o método de autenticação do Rights Management.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.AuthenticationType.Internal">
      <summary vsli:raw="Implicit authentication to any requesting user.">Autenticação implícita para qualquer usuário solicitante.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.AuthenticationType.Passport">
      <summary vsli:raw="Windows Live ID authentication.">Autenticação Windows Live ID.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.AuthenticationType.Windows">
      <summary vsli:raw="Windows authentication in a corporate domain environment.">Autenticação Windows em um ambiente de domínio corporativo.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.AuthenticationType.WindowsPassport">
      <summary vsli:raw="Either Windows authentication or Windows Live ID authentication.">A autenticação do Windows ou a autenticação Windows Live ID.</summary>
    </member>
    <member name="T:System.Security.RightsManagement.ContentGrant">
      <summary vsli:raw="Represents a right granted to a user to access information in a rights managed document.">Representa um direito concedido a um usuário para acessar informações em um documento gerenciado por direitos.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.ContentGrant&quot; /&gt; class that grants a specified &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; a specified &lt;see cref=&quot;T:System.Security.RightsManagement.ContentRight&quot; /&gt;.">Inicializa uma nova instância da classe <see cref="T:System.Security.RightsManagement.ContentGrant" /> que concede a um <see cref="T:System.Security.RightsManagement.ContentUser" /> especificado um <see cref="T:System.Security.RightsManagement.ContentRight" /> especificado.</summary>
      <param name="user" vsli:raw="The user the access right is granted to.">O usuário ao qual o direito de acesso é concedido.</param>
      <param name="right" vsli:raw="The access right that is granted.">O direito de acesso concedido.</param>
    </member>
    <member name="M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight,System.DateTime,System.DateTime)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.ContentGrant&quot; /&gt; class that grants a specified &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; a specified &lt;see cref=&quot;T:System.Security.RightsManagement.ContentRight&quot; /&gt; for a specified &lt;see cref=&quot;T:System.DateTime&quot; /&gt; duration.">Inicializa uma nova instância da classe <see cref="T:System.Security.RightsManagement.ContentGrant" /> que concede a um <see cref="T:System.Security.RightsManagement.ContentUser" /> especificado um <see cref="T:System.Security.RightsManagement.ContentRight" /> especificado durante uma duração <see cref="T:System.DateTime" /> especificada.</summary>
      <param name="user" vsli:raw="The user the access right is granted to.">O usuário ao qual o direito de acesso é concedido.</param>
      <param name="right" vsli:raw="The access right that is granted.">O direito de acesso concedido.</param>
      <param name="validFrom" vsli:raw="The starting date and time that the right begins.">A data e hora de início em que o direito é iniciado.</param>
      <param name="validUntil" vsli:raw="The ending date and time that the right expires.">A data e hora de término em que o direito expira.</param>
    </member>
    <member name="P:System.Security.RightsManagement.ContentGrant.Right">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Security.RightsManagement.ContentRight&quot; /&gt; that is granted.">Obtém o <see cref="T:System.Security.RightsManagement.ContentRight" /> concedido.</summary>
      <returns vsli:raw="The access right that is granted to the &lt;see cref=&quot;P:System.Security.RightsManagement.ContentGrant.User&quot; /&gt;, as specified to the &lt;see cref=&quot;M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight)&quot; /&gt; constructor.">O direito de acesso que é concedido ao <see cref="P:System.Security.RightsManagement.ContentGrant.User" />, conforme especificado para o <see cref="M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight)" /> Construtor.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentGrant.User">
      <summary vsli:raw="Gets the user who is granted the access &lt;see cref=&quot;P:System.Security.RightsManagement.ContentGrant.Right&quot; /&gt;.">Obtém o usuário que recebe o acesso <see cref="P:System.Security.RightsManagement.ContentGrant.Right" />.</summary>
      <returns vsli:raw="The user that the access &lt;see cref=&quot;P:System.Security.RightsManagement.ContentGrant.Right&quot; /&gt; is granted to, as specified to the &lt;see cref=&quot;M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight)&quot; /&gt; constructor.">O usuário ao qual o <see cref="P:System.Security.RightsManagement.ContentGrant.Right" /> acesso é concedido, conforme especificado para o <see cref="M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight)" /> Construtor.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentGrant.ValidFrom">
      <summary vsli:raw="Gets the starting date and time that the granted &lt;see cref=&quot;P:System.Security.RightsManagement.ContentGrant.Right&quot; /&gt; begins.">Obtém a data e hora de início em que o <see cref="P:System.Security.RightsManagement.ContentGrant.Right" /> concedido é iniciado.</summary>
      <returns vsli:raw="The start date and time that the granted &lt;see cref=&quot;P:System.Security.RightsManagement.ContentGrant.Right&quot; /&gt; begins, or &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.&lt;see cref=&quot;F:System.DateTime.MinValue&quot;&gt;DateTime.MinValue&lt;/see&gt; if there is there is no starting limitation.">A data e a hora de início que <see cref="P:System.Security.RightsManagement.ContentGrant.Right" /> o Granted <see cref="T:System.DateTime" />começa, ou.<see cref="F:System.DateTime.MinValue" /> Se não houver nenhuma limitação inicial.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentGrant.ValidUntil">
      <summary vsli:raw="Gets the ending date and time that the granted &lt;see cref=&quot;P:System.Security.RightsManagement.ContentGrant.Right&quot; /&gt; expires.">Obtém a data e hora de término em que o <see cref="P:System.Security.RightsManagement.ContentGrant.Right" /> concedido expira.</summary>
      <returns vsli:raw="The end date and time that the granted &lt;see cref=&quot;P:System.Security.RightsManagement.ContentGrant.Right&quot; /&gt; expires, or &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.&lt;see cref=&quot;F:System.DateTime.MaxValue&quot;&gt;DateTime.MaxValue&lt;/see&gt; if there is no ending limitation.">A data e a hora de término que <see cref="P:System.Security.RightsManagement.ContentGrant.Right" /> a concessão expira, <see cref="T:System.DateTime" />ou.<see cref="F:System.DateTime.MaxValue" /> Se não houver nenhuma limitação final.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.ContentRight">
      <summary vsli:raw="Specifies rights that can be granted to users for accessing content in a rights managed document.">Especifica direitos que podem ser concedidos a usuários para acessar o conteúdo em um documento protegido por direitos.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.DocumentEdit">
      <summary vsli:raw="The user can edit the document that contains the protected content.">O usuário pode editar o documento que contém o conteúdo protegido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Edit">
      <summary vsli:raw="The user can edit and encrypt the protected content.">O usuário pode editar e criptografar o conteúdo protegido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Export">
      <summary vsli:raw="The user can export the protected content.">O usuário pode exportar o conteúdo protegido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Extract">
      <summary vsli:raw="The user can extract (copy and paste) the protected content.">O usuário pode extrair (copiar e colar) o conteúdo protegido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Forward">
      <summary vsli:raw="The user can forward the protected content to another user.">O usuário pode encaminhar o conteúdo protegido para outro usuário.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.ObjectModel">
      <summary vsli:raw="The user can control programmed access to the protected content.">O usuário pode controlar o acesso programado para o conteúdo protegido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Owner">
      <summary vsli:raw="The user is the content owner.  The owner can edit and encrypt the protected content, and decrypt the signed &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt;.">O usuário é o proprietário do conteúdo.  O proprietário pode editar e criptografar o conteúdo protegido e descriptografar o <see cref="T:System.Security.RightsManagement.PublishLicense" /> assinado.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Print">
      <summary vsli:raw="The user can print the protected content.">O usuário pode imprimir o conteúdo protegido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Reply">
      <summary vsli:raw="The user can reply to the sender of the protected content.">O usuário pode responder ao remetente do conteúdo protegido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.ReplyAll">
      <summary vsli:raw="The user can &quot;reply all&quot; to recipients of the protected content.">O usuário pode "responder a todos" os destinatários do conteúdo protegido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Sign">
      <summary vsli:raw="The user can digitally sign the protected content.">O usuário pode assinar digitalmente o conteúdo protegido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.View">
      <summary vsli:raw="The user can view the protected content.">O usuário pode exibir o conteúdo protegido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.ViewRightsData">
      <summary vsli:raw="The user can decrypt and view the rights specified in the signed &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt;.">O usuário pode descriptografar e exibir os direitos especificados no <see cref="T:System.Security.RightsManagement.PublishLicense" /> assinado.</summary>
    </member>
    <member name="T:System.Security.RightsManagement.ContentUser">
      <summary vsli:raw="Represents a user or user-group for granting access to rights managed content.">Representa um usuário ou grupo de usuários para conceder acesso a conteúdo gerenciado por direitos.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Security.RightsManagement.ContentUser" />.</summary>
      <param name="name" vsli:raw="The user or group name.">O usuário ou nome de grupo.</param>
      <param name="authenticationType" vsli:raw="The method for authentication.">O método de autenticação.</param>
    </member>
    <member name="P:System.Security.RightsManagement.ContentUser.AnyoneUser">
      <summary vsli:raw="Gets an instance of the &quot;Anyone&quot; &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; persona.">Obtém uma instância da persona <see cref="T:System.Security.RightsManagement.ContentUser" /> "Qualquer pessoa".</summary>
      <returns vsli:raw="An instance of the &quot;Anyone&quot; &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; persona.">Uma instância do persona "qualquer pessoa <see cref="T:System.Security.RightsManagement.ContentUser" /> ".</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentUser.AuthenticationType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Security.RightsManagement.AuthenticationType&quot; /&gt; specified to the &lt;see cref=&quot;M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)&quot; /&gt; constructor.">Obtém o <see cref="T:System.Security.RightsManagement.AuthenticationType" /> especificado para o construtor <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.RightsManagement.AuthenticationType&quot; /&gt; specified to the &lt;see cref=&quot;M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)&quot; /&gt; constructor.">O <see cref="T:System.Security.RightsManagement.AuthenticationType" /> especificado para o <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" /> Construtor.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.ContentUser.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; is equivalent to another given instance.">Retorna um valor que indica se essa <see cref="T:System.Security.RightsManagement.ContentUser" /> é equivalente a outra instância fornecida.</summary>
      <param name="obj" vsli:raw="The user instance to compare for equality.">A instância de usuário a ser comparada quanto à igualdade.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;P:System.Security.RightsManagement.ContentUser.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.ContentUser.AuthenticationType&quot; /&gt; are the same for both this user and the given user; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="P:System.Security.RightsManagement.ContentUser.Name" /> e <see cref="P:System.Security.RightsManagement.ContentUser.AuthenticationType" /> forem iguais para o usuário e o usuário fornecido; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.ContentUser.GetHashCode">
      <summary vsli:raw="Returns a computed hash code based on the user &lt;see cref=&quot;P:System.Security.RightsManagement.ContentUser.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.ContentUser.AuthenticationType&quot; /&gt;.">Retorna um código hash calculado com base nos usuários <see cref="P:System.Security.RightsManagement.ContentUser.Name" /> e <see cref="P:System.Security.RightsManagement.ContentUser.AuthenticationType" />.</summary>
      <returns vsli:raw="A hash code computed from the user &lt;see cref=&quot;P:System.Security.RightsManagement.ContentUser.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.ContentUser.AuthenticationType&quot; /&gt;.">Um código hash calculado dos usuários <see cref="P:System.Security.RightsManagement.ContentUser.Name" /> e <see cref="P:System.Security.RightsManagement.ContentUser.AuthenticationType" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.ContentUser.IsAuthenticated">
      <summary vsli:raw="Returns a value that indicates whether the user is currently authenticated.">Retorna um valor que indica se o usuário está autenticado no momento.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the user is currently authenticated; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  The default is &lt;see langword=&quot;false&quot; /&gt; until authenticated.">
        <see langword="true" /> se o usuário estiver autenticado no momento; caso contrário, <see langword="false" />.  O padrão é <see langword="false" /> até que seja autenticado.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentUser.Name">
      <summary vsli:raw="Gets the user or group name specified to the &lt;see cref=&quot;M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)&quot; /&gt; constructor.">Obtém o nome de usuário ou usuário especificado para o construtor <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" />.</summary>
      <returns vsli:raw="The user or group name specified to the &lt;see cref=&quot;M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)&quot; /&gt; constructor.">O nome de usuário ou grupo especificado para <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" /> o construtor.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentUser.OwnerUser">
      <summary vsli:raw="Gets an instance of the &quot;Owner&quot; &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; persona.">Obtém uma instância da persona <see cref="T:System.Security.RightsManagement.ContentUser" /> "Proprietário".</summary>
      <returns vsli:raw="An instance of the &quot;Owner&quot; &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; persona.">Uma instância do persona "owner" <see cref="T:System.Security.RightsManagement.ContentUser" /> .</returns>
    </member>
    <member name="T:System.Security.RightsManagement.CryptoProvider">
      <summary vsli:raw="Provides digital rights management services for encrypting and decrypting protected content.">Fornece serviços de gerenciamento de direitos digitais para criptografar e descriptografar conteúdo protegido.</summary>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.BlockSize">
      <summary vsli:raw="Gets the cipher block size, in bytes.">Obtém o tamanho do bloco de criptografia, em bytes.</summary>
      <returns vsli:raw="The cipher block size, in bytes.  The default block size for Advanced Encryption Standard (AES) is 8.">O tamanho do bloco de codificação, em bytes.  O tamanho de bloco padrão para criptografia AES (AES) é 8.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.BoundGrants">
      <summary vsli:raw="Gets a collection listing the rights that passed verification and that are granted to the user.">Obtém uma coleção que lista os direitos que foram aprovados na verificação e que são concedidos ao usuário.</summary>
      <returns vsli:raw="A collection enumerating the rights that passed verification and that are granted to the user.">Uma coleção que enumera os direitos que passaram na verificação e que são concedidos ao usuário.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.CanDecrypt">
      <summary vsli:raw="Gets a value that indicates whether the user has rights to decrypt.">Obtém um valor que indica se o usuário tem direitos de descriptografia.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; grants the user rights to decrypt; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Se o <see cref="T:System.Security.RightsManagement.UseLicense" /> conceder aos direitos de usuário para descriptografar <see langword="false" />; caso contrário,.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.CanEncrypt">
      <summary vsli:raw="Gets a value that indicates whether the user has rights to encrypt.">Obtém um valor que indica se o usuário tem direitos de criptografia.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; grants the user rights to encrypt; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Se o <see cref="T:System.Security.RightsManagement.UseLicense" /> conceder os direitos de usuário para criptografar; <see langword="false" />caso contrário,.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks">
      <summary vsli:raw="Gets a value that indicates whether &lt;see cref=&quot;M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])&quot; /&gt; and &lt;see cref=&quot;M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])&quot; /&gt; can accept buffers that are different block sizes in length.">Obtém um valor que indica se <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> e <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" /> podem aceitar buffers que têm diferentes tamanhos de bloco.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the buffer passed to &lt;see cref=&quot;M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])&quot; /&gt; can be a different length from the buffer passed to &lt;see cref=&quot;M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt; if the buffers passed to &lt;see cref=&quot;M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])&quot; /&gt; and &lt;see cref=&quot;M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])&quot; /&gt; must be the exact same length.  For AES the default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />Se o buffer passado para <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> pode ter um comprimento diferente do buffer passado para <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" />; caso contrário, <see langword="false" /> se os buffers passados para <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> e <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" /> devem ter o mesmo comprimento exato.  Para AES, o padrão <see langword="true" />é.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])">
      <summary vsli:raw="Decrypts cipher text to clear text.">Descriptografa o texto de criptografia para limpar o texto.</summary>
      <param name="cryptoText" vsli:raw="The cipher text to decrypt.">O texto de criptografia a ser descriptografado.</param>
      <returns vsli:raw="The decrypted clear text of &lt;paramref name=&quot;cryptoText&quot; /&gt;.">O texto não criptografado descriptografado de <paramref name="cryptoText" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;cipherText&quot; /&gt; is null.">
        <paramref name="cipherText" /> é nulo.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException" vsli:raw="Decryption right not granted.">Direito de descriptografia não concedido.</exception>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.Security.RightsManagement.CryptoProvider&quot; /&gt;.">Libera todos os recursos usados pelo <see cref="T:System.Security.RightsManagement.CryptoProvider" />.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Security.RightsManagement.CryptoProvider&quot; /&gt; and optionally releases the managed resources.">Libera os recursos não gerenciados usados pelo <see cref="T:System.Security.RightsManagement.CryptoProvider" /> e opcionalmente libera os recursos gerenciados.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])">
      <summary vsli:raw="Encrypts clear text to cipher text.">Criptografa o texto não criptografado para um texto de criptografia.</summary>
      <param name="clearText" vsli:raw="The clear text content to encrypt.">O conteúdo do texto não criptografado a ser criptografado.</param>
      <returns vsli:raw="Encrypted cipher text of the given &lt;paramref name=&quot;clearText&quot; /&gt;.">Texto de criptografia criptografado do <paramref name="clearText" /> determinado.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;clearText&quot; /&gt; is null.">
        <paramref name="clearText" /> é nulo.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException" vsli:raw="Encryption is not permitted.">A criptografia não é permitida.</exception>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Finalize">
      <summary vsli:raw="Frees resources and performs internal cleanup before the instance is reclaimed by garbage collection.">Libera recursos e executa uma limpeza interna antes que a instância seja recuperada pela coleta de lixo.</summary>
    </member>
    <member name="T:System.Security.RightsManagement.LocalizedNameDescriptionPair">
      <summary vsli:raw="Represents an immutable (read-only) pair of &quot;Name&quot; and &quot;Description&quot; strings.">Representa um par imutável (somente leitura) de cadeias de caracteres de "Nome" e "Descrição".</summary>
    </member>
    <member name="M:System.Security.RightsManagement.LocalizedNameDescriptionPair.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.LocalizedNameDescriptionPair&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Security.RightsManagement.LocalizedNameDescriptionPair" />.</summary>
      <param name="name" vsli:raw="The value for the locale &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name&quot; /&gt; property.">O valor para a propriedade <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> da localidade.</param>
      <param name="description" vsli:raw="The value for the locale &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description&quot; /&gt; property.">O valor para a propriedade <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" /> da localidade.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Either the &lt;paramref name=&quot;name&quot; /&gt; parameter or &lt;paramref name=&quot;description&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">O parâmetro <paramref name="name" /> ou o parâmetro <paramref name="description" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description">
      <summary vsli:raw="Gets the locale description.">Obtém a descrição de localidade.</summary>
      <returns vsli:raw="The locale description.">A descrição da localidade.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.LocalizedNameDescriptionPair.Equals(System.Object)">
      <summary vsli:raw="Indicates whether the &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description&quot; /&gt; properties of a given object match those of this &lt;see cref=&quot;T:System.Security.RightsManagement.LocalizedNameDescriptionPair&quot; /&gt;.">Indica se as propriedades <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> e <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" /> de um determinado objeto correspondem àquelas deste <see cref="T:System.Security.RightsManagement.LocalizedNameDescriptionPair" />.</summary>
      <param name="obj" vsli:raw="The object to compare the &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description&quot; /&gt; properties of.">O objeto cujas propriedades <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> e <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" /> comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description&quot; /&gt; properties of the given object match those of this instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se as propriedades <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> e <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" /> do objeto fornecido corresponderem àquelas desta instância; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.LocalizedNameDescriptionPair.GetHashCode">
      <summary vsli:raw="Gets a computed hash code based on the &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description&quot; /&gt; properties.">Obtém um código hash calculado baseado nas propriedades <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> e <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" />.</summary>
      <returns vsli:raw="A computed hash code based on the &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description&quot; /&gt; properties of this &lt;see cref=&quot;T:System.Security.RightsManagement.LocalizedNameDescriptionPair&quot; /&gt;.">Um código hash calculado baseado nas propriedades <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> e <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" /> deste <see cref="T:System.Security.RightsManagement.LocalizedNameDescriptionPair" />.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name">
      <summary vsli:raw="Gets the locale name.">Obtém o nome da localidade.</summary>
      <returns vsli:raw="The locale name.">O nome da localidade.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.PublishLicense">
      <summary vsli:raw="Represents a signed rights managed publish license.">Representa uma licença de publicação assinada gerenciada por direitos.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; class from a specified serialized and signed &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt;.">Inicializa uma nova instância da classe <see cref="T:System.Security.RightsManagement.PublishLicense" /> de uma <see cref="T:System.Security.RightsManagement.PublishLicense" /> assinada e serializada especificada.</summary>
      <param name="signedPublishLicense" vsli:raw="A signed and serialized publish license.">Uma licença de publicação assinada e serializada.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;signedPublishLicense&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="signedPublishLicense" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException" vsli:raw="The license is invalid.">A licença é inválida.</exception>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.AcquireUseLicense(System.Security.RightsManagement.SecureEnvironment)">
      <summary vsli:raw="Attempts to acquire a &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for a user or user group in a specified &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt;.">Tenta adquirir um <see cref="T:System.Security.RightsManagement.UseLicense" /> para um usuário ou grupo de usuários em um <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> especificado.</summary>
      <param name="secureEnvironment" vsli:raw="The secure environment for license activation and binding.">Um ambiente seguro para ativação e associação de licença.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for a user or user group in the specified &lt;paramref name=&quot;secureEnvironment&quot; /&gt;.">O <see cref="T:System.Security.RightsManagement.UseLicense" /> para um usuário ou grupo de usuários no <paramref name="secureEnvironment" /> especificado.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;secureEnvironment&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="secureEnvironment" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException" vsli:raw="The authentication failed.">A autenticação falhou.</exception>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI(System.Security.RightsManagement.SecureEnvironment)">
      <summary vsli:raw="Attempts to acquire a &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for a user or user group in a specified &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt;.">Tenta adquirir um <see cref="T:System.Security.RightsManagement.UseLicense" /> para um usuário ou grupo de usuários em um <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> especificado.</summary>
      <param name="secureEnvironment" vsli:raw="The secure environment for license activation and binding.">Um ambiente seguro para ativação e associação de licença.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for a user or user group in the specified &lt;paramref name=&quot;secureEnvironment&quot; /&gt;.">O <see cref="T:System.Security.RightsManagement.UseLicense" /> para um usuário ou grupo de usuários no <paramref name="secureEnvironment" /> especificado.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;secureEnvironment&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="secureEnvironment" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException" vsli:raw="The authentication failed.">A autenticação falhou.</exception>
    </member>
    <member name="P:System.Security.RightsManagement.PublishLicense.ContentId">
      <summary vsli:raw="Gets the publisher-created content identifier.">Obtém o identificador de conteúdo criado pelo fornecedor.</summary>
      <returns vsli:raw="The publisher-created content identifier.">O identificador de conteúdo criado pelo Publicador.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.DecryptUnsignedPublishLicense(System.Security.RightsManagement.CryptoProvider)">
      <summary vsli:raw="Returns a decrypted &lt;see cref=&quot;T:System.Security.RightsManagement.UnsignedPublishLicense&quot; /&gt; version of this signed &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt;.">Retorna uma versão de <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" /> descriptografada desta <see cref="T:System.Security.RightsManagement.PublishLicense" /> assinada.</summary>
      <param name="cryptoProvider" vsli:raw="The rights management service to use for decrypting the license.">O serviço de gerenciamento de direitos a ser usado para descriptografar a licença.</param>
      <returns vsli:raw="A decrypted, unsigned version of this license.">Uma versão descriptografada, não assinada desta licença.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;cryptoProvider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="cryptoProvider" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.Security.RightsManagement.PublishLicense.ReferralInfoName">
      <summary vsli:raw="Gets the contact name for the author or publisher of the content.">Obtém o nome de contato para o autor ou editor do conteúdo.</summary>
      <returns vsli:raw="The contact name for the author or publisher of the content.">O nome do contato para o autor ou o editor do conteúdo.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.PublishLicense.ReferralInfoUri">
      <summary vsli:raw="Gets the contact URI for the author or publisher of the content.">Obtém o URI de contato para o autor ou editor do conteúdo.</summary>
      <returns vsli:raw="The contact uniform resource identifier (URI) for the author or publisher of the content.">O contato URI (Uniform Resource Identifier) do autor ou editor do conteúdo.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.ToString">
      <summary vsli:raw="Returns the serialized XrML string that was used to create this license.">Retorna a cadeia de caracteres XrML serializada que foi usada para criar esta licença.</summary>
      <returns vsli:raw="The serialized Extensible Rights Markup Language (XrML) string that was used to create this license.">A cadeia de caracteres XrML (linguagem XrML) serializada que foi usada para criar esta licença.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl">
      <summary vsli:raw="Gets the URI to use for acquiring a &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt;.">Obtém o URI a ser usado para adquirir um <see cref="T:System.Security.RightsManagement.UseLicense" />.</summary>
      <returns vsli:raw="The URI to use for acquiring a &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt;.">O URI a ser usado para adquirir um <see cref="T:System.Security.RightsManagement.UseLicense" />.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.RightsManagementException">
      <summary vsli:raw="Represents an error condition when a rights management operation cannot complete successfully.">Representa uma condição de erro quando uma operação de gerenciamento de direitos não pode ser concluída com êxito.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Security.RightsManagement.RightsManagementException" />.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class and sets the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; store with information about the exception.">Inicializa uma nova instância da classe <see cref="T:System.Security.RightsManagement.RightsManagementException" /> e define o repositório <see cref="T:System.Runtime.Serialization.SerializationInfo" /> com informações sobre a exceção.</summary>
      <param name="info" vsli:raw="The object that holds the serialized data.">O objeto que contém os dados serializados.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">As informações contextuais sobre a origem ou o destino.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Security.RightsManagement.RightsManagementFailureCode)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class with a given &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementFailureCode&quot; /&gt;.">Inicializa uma nova instância da classe <see cref="T:System.Security.RightsManagement.RightsManagementException" /> com um <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" /> fornecido.</summary>
      <param name="failureCode" vsli:raw="The failure code for the error.">O código de falha para o erro.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Security.RightsManagement.RightsManagementFailureCode,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class with a given &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementFailureCode&quot; /&gt; and &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt;.">Inicializa uma nova instância da classe <see cref="T:System.Security.RightsManagement.RightsManagementException" /> com um <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" /> e um <see cref="P:System.Exception.InnerException" /> fornecidos.</summary>
      <param name="failureCode" vsli:raw="The failure code for the error.">O código de falha para o erro.</param>
      <param name="innerException" vsli:raw="The exception instance that caused the error.">A instância de exceção que causou o erro.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Security.RightsManagement.RightsManagementFailureCode,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class with a given &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementFailureCode&quot; /&gt; and &lt;see cref=&quot;P:System.Exception.Message&quot; /&gt;.">Inicializa uma nova instância da classe <see cref="T:System.Security.RightsManagement.RightsManagementException" /> com um <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" /> e um <see cref="P:System.Exception.Message" /> fornecidos.</summary>
      <param name="failureCode" vsli:raw="The failure code for the error.">O código de falha para o erro.</param>
      <param name="message" vsli:raw="A message that describes the error.">Uma mensagem que descreve o erro.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Security.RightsManagement.RightsManagementFailureCode,System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class with a given &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementFailureCode&quot; /&gt;, &lt;see cref=&quot;P:System.Exception.Message&quot; /&gt; and &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt;.">Inicializa uma nova instância da classe <see cref="T:System.Security.RightsManagement.RightsManagementException" /> com um <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" />, um <see cref="P:System.Exception.Message" /> e um <see cref="P:System.Exception.InnerException" /> fornecidos.</summary>
      <param name="failureCode" vsli:raw="The failure code for the error.">O código de falha para o erro.</param>
      <param name="message" vsli:raw="A message that describes the error.">Uma mensagem que descreve o erro.</param>
      <param name="innerException" vsli:raw="The exception instance that caused the error.">A instância de exceção que causou o erro.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class with a given message.">Inicializa uma nova instância da classe <see cref="T:System.Security.RightsManagement.RightsManagementException" /> com uma mensagem fornecida.</summary>
      <param name="message" vsli:raw="A message that describes the error.">Uma mensagem que descreve o erro.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class with a given &lt;see cref=&quot;P:System.Exception.Message&quot; /&gt; and &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt;.">Inicializa uma nova instância da classe <see cref="T:System.Security.RightsManagement.RightsManagementException" /> com um <see cref="P:System.Exception.Message" /> e um <see cref="P:System.Exception.InnerException" /> fornecidos.</summary>
      <param name="message" vsli:raw="A message that describes the error.">Uma mensagem que descreve o erro.</param>
      <param name="innerException" vsli:raw="The exception instance that caused this exception.">A instância de exceção que causou essa exceção.</param>
    </member>
    <member name="P:System.Security.RightsManagement.RightsManagementException.FailureCode">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementFailureCode&quot; /&gt; for the error.">Obtém o <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" /> do erro.</summary>
      <returns vsli:raw="The failure code for the error.">O código de falha para o erro.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; store with the parameter name and information about the exception.">Define o repositório <see cref="T:System.Runtime.Serialization.SerializationInfo" /> com o nome do parâmetro e informações sobre a exceção.</summary>
      <param name="info" vsli:raw="The object that holds the serialized data.">O objeto que contém os dados serializados.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">As informações contextuais sobre a origem ou o destino.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;info&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">O parâmetro <paramref name="info" /> é <see langword="null" />.</exception>
    </member>
    <member name="T:System.Security.RightsManagement.RightsManagementFailureCode">
      <summary vsli:raw="Specifies error conditions that can occur when performing a rights management operation.">Especifica as condições de erro que podem ocorrer ao executar uma operação de gerenciamento de direitos.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.Aborted">
      <summary vsli:raw="Asynchronous operation canceled, or a non-recoverable error has occurred.">Operação assíncrona cancelada ou ocorreu um erro não recuperável.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ActivationFailed">
      <summary vsli:raw="License activation failed; rights management services are not properly configured.">Falha na ativação de licença, os serviços de gerenciamento de direitos não estão configurados corretamente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.AdEntryNotFound">
      <summary vsli:raw="The current user was not found in the Active Directory (AD) for certification under Windows authentication.">O usuário atual não foi encontrado no AD (Active Directory) para certificação sob a autenticação do Windows.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.AlreadyInProgress">
      <summary vsli:raw="The requested operation is already in progress.">A operação solicitada já está em andamento.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.AuthenticationFailed">
      <summary vsli:raw="Possible authentication error (HTTP error 401) returned by an Internet request. Or, the current user does not have valid domain credentials in a silent user activation attempt. Or, the certification server in silent user activation is not in the local intranet or trusted sites zone.">Possível erro de autenticação (erro HTTP 401) retornado por uma solicitação da Internet. Ou o usuário atual não tem credenciais de domínio válidas em uma tentativa de ativação de usuário silenciosa. Ou o servidor de certificação na ativação de usuário silenciosa não está na zona de sites confiáveis ou na intranet local.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BadGetInfoQuery">
      <summary vsli:raw="An invalid constant was passed.">Uma constante inválida foi passada.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindAccessPrincipalNotEnabling">
      <summary vsli:raw="The access condition is not matched to the enabling principal that is handed into the bind.">A condição de acesso não é correspondida pela entidade de segurança de habilitação que é entregue à associação.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindAccessUnsatisfied">
      <summary vsli:raw="The current user does not satisfy the conditions defined in the End Use License (EUL).">O usuário atual não satisfaz as condições definidas na EUL (Licença de Usuário Final).</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindContentNotInEndUseLicense">
      <summary vsli:raw="The specified resource is not contained in any WORK node of the license.">O recurso especificado não está contido em nenhum nó WORK da licença.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindIndicatedPrincipalMissing">
      <summary vsli:raw="The enabling principal does not match the issued principal of the End Use License (EUL).">A entidade de segurança de habilitação não corresponde à entidade de segurança emitida da EUL (Licença de Usuário Final).</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindIntervalTimeViolated">
      <summary vsli:raw="The defined time period for the protected content has expired; access is no longer permitted.">O período definido para o conteúdo protegido expirou, o acesso não é mais permitido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindMachineNotFoundInGroupIdentity">
      <summary vsli:raw="The current machine is not defined within the rights managed group identity.">O computador atual não está definido na identidade de grupo gerenciado de direitos.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindNoApplicableRevocationList">
      <summary vsli:raw="The current user does not have rights to access the protected content.">O usuário atual não tem direitos para acessar o conteúdo protegido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindNoSatisfiedRightsGroup">
      <summary vsli:raw="The specified rights group is not contained in the End Use License (EUL).">O grupo de direitos especificado não está na EUL (Licença de Usuário Final).</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindPolicyViolation">
      <summary vsli:raw="The current user does not have rights to access the protected content.">O usuário atual não tem direitos para acessar o conteúdo protegido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevocationListStale">
      <summary vsli:raw="The license requires that a new revocation list must be acquired.">A licença exige que uma nova lista de revogação seja adquirida.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedIssuer">
      <summary vsli:raw="The current user does not have rights to access the protected content.">O usuário atual não tem direitos para acessar o conteúdo protegido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedLicense">
      <summary vsli:raw="The current user does not have rights to access the protected content.">O usuário atual não tem direitos para acessar o conteúdo protegido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedModule">
      <summary vsli:raw="Rights management services are not properly configured.">Os serviços de gerenciamento de direitos não estão configurados corretamente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedPrincipal">
      <summary vsli:raw="The current user does not have rights to access the protected content.">O usuário atual não tem direitos para acessar o conteúdo protegido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedResource">
      <summary vsli:raw="The current user does not have rights to access the protected content.">O usuário atual não tem direitos para acessar o conteúdo protegido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindSpecifiedWorkMissing">
      <summary vsli:raw="The End Use License (EUL) contains no WORK node.">A EUL (Licença de Usuário Final) não contém nenhum nó WORK.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindValidityTimeViolated">
      <summary vsli:raw="The defined time period for the protected content has expired; access is no longer permitted.">O período definido para o conteúdo protegido expirou, o acesso não é mais permitido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BrokenCertChain">
      <summary vsli:raw="The rights management certificate chain is broken.">A cadeia de certificados de gerenciamento está interrompida.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ClockRollbackDetected">
      <summary vsli:raw="Clock rollback has been detected. Protected content cannot be accessed.">Foi detectada a reversão de relógio. Não é possível acessar o conteúdo protegido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.CryptoOperationUnsupported">
      <summary vsli:raw="A cryptographic operation that was requested is not supported. For example, passing an RMS encrypting object for decrypting purposes.">Não há suporte para uma operação criptográfica solicitada. Por exemplo, passar um objeto de criptografia RMS para fins de descriptografia.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.DebuggerDetected">
      <summary vsli:raw="Cannot open or publish content with restricted permissions because a debugger has been detected.">Não é possível abrir ou publicar conteúdo com permissões restritas porque foi detectado um depurador.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EmailNotVerified">
      <summary vsli:raw="The user's email address cannot be verified.">Não é possível verificar o endereço de email do usuário.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EnablingPrincipalFailure">
      <summary vsli:raw="The specified principal cannot be enabled.">Não é possível habilitar a entidade de segurança especificada</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EncryptionNotPermitted">
      <summary vsli:raw="Encryption is not permitted.">A criptografia não é permitida.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EnvironmentCannotLoad">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; cannot load.">Não é possível carregar o <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EnvironmentNotLoaded">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; cannot load.">Não é possível carregar o <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ExpiredOfficialIssuanceLicenseTemplate">
      <summary vsli:raw="The authorized time period defined in the issuance license template has expired; access is no longer permitted.">O período autorizado definido no modelo de licença de emissão expirou, o acesso não é mais permitido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.GlobalOptionAlreadySet">
      <summary vsli:raw="The option specified has already been set.">A opção especificada já foi definida.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.GroupIdentityNotSet">
      <summary vsli:raw="A user name was not specified for the client session.">Não foi especificado um nome de usuário para a sessão de cliente</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.HidCorrupted">
      <summary vsli:raw="The Hardware ID (HID) used in a machine activation attempt is incorrectly formatted. Rights management services are not properly configured.">A HID (ID de Hardware) usada em uma tentativa de ativação de computador está formatada incorretamente. Os serviços de gerenciamento de direitos não estão configurados corretamente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.HidInvalid">
      <summary vsli:raw="The Hardware ID (HID) used in a machine activation attempt is invalid. Rights management services are not properly configured.">A HID (ID de Hardware) usada em uma tentativa de ativação de computador é inválida. Os serviços de gerenciamento de direitos não estão configurados corretamente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.IdMismatch">
      <summary vsli:raw="The content ID from the license does not match the content ID the license storage session.">A ID do conteúdo da licença não corresponde à ID de conteúdo da sessão de armazenamento de licença</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.IncompatibleObjects">
      <summary vsli:raw="An object type passed is incompatible with this operation.">Um tipo de objeto passado é incompatível com esta operação.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InfoNotInLicense">
      <summary vsli:raw="When creating a bound license, an issuance license, not an end-use license, was specified.">Ao criar uma licença associada, uma licença de emissão, não uma licença de usuário final, foi especificada.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InfoNotPresent">
      <summary vsli:raw="Some information is missing.">Algumas informações estão ausentes.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InstallationFailed">
      <summary vsli:raw="An installation operation failed.">Falha em uma operação de instalação.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidAlgorithmType">
      <summary vsli:raw="The algorithm type specified is invalid.">O tipo de algoritmo especificado é inválido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidClientLicensorCertificate">
      <summary vsli:raw="Rights management services are not properly configured.">Os serviços de gerenciamento de direitos não estão configurados corretamente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidEmail">
      <summary vsli:raw="RMS Server email address verification failed.">Falha na verificação de endereço de email do servidor RMS.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidEncodingType">
      <summary vsli:raw="The specified encoding type is invalid.">O tipo de codificação especificado é inválido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidHandle">
      <summary vsli:raw="Either the environment or the enabling principal handle is invalid.">O ambiente ou o identificador da entidade de segurança de habilitação é inválido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidIssuanceLicenseTemplate">
      <summary vsli:raw="The Rights Management Services template contains one or more errors.">O modelo do Rights Management Services contém um ou mais erros.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidKeyLength">
      <summary vsli:raw="The key length specified in a key/value pair is invalid.">O comprimento da chave especificado em um par chave-valor é inválido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidLicense">
      <summary vsli:raw="The license structure in one of the certificates is invalid.">A estrutura de licença em um dos certificados é inválida.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidLicenseSignature">
      <summary vsli:raw="Rights management signed digital certificate cannot be validated. (The signed certificate may have been tampered.)">Não é possível validar o certificado digital assinado de gerenciamento de direitos. (O certificado assinado pode ter sido adulterado.)</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidLockboxPath">
      <summary vsli:raw="Rights management services are not properly configured.">Os serviços de gerenciamento de direitos não estão configurados corretamente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidLockboxType">
      <summary vsli:raw="Rights management services are not properly configured.">Os serviços de gerenciamento de direitos não estão configurados corretamente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidNumericalValue">
      <summary vsli:raw="The numeric value specified is invalid.">O valor numérico especificado é inválido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidRegistryPath">
      <summary vsli:raw="The specified registry path is invalid.">O caminho de Registro especificado é inválido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidServerResponse">
      <summary vsli:raw="Rights management services are not properly configured.">Os serviços de gerenciamento de direitos não estão configurados corretamente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidTimeInfo">
      <summary vsli:raw="The time information specified is invalid.">As informações de tempo especificadas são inválidas.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidVersion">
      <summary vsli:raw="The rights management version is incorrect.">A versão de gerenciamento de direitos está incorreta.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.KeyTypeUnsupported">
      <summary vsli:raw="The key type specified in a key/value pair is not supported.">O tipo da chave especificado em um par chave-valor é incompatível.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.LibraryFail">
      <summary vsli:raw="A library operation failed.">Falha em uma operação de biblioteca.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.LibraryUnsupportedPlugIn">
      <summary vsli:raw="The specified library plug-in is not supported.">Não há suporte para o plug-in de biblioteca especificado.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.LicenseAcquisitionFailed">
      <summary vsli:raw="An End Use License (EUL) could not be acquired from the rights management server.">Não foi possível adquirir uma EUL (Licença de Usuário Final) do servidor de gerenciamento de direitos.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.LicenseBindingToWindowsIdentityFailed">
      <summary vsli:raw="The current user credentials are not valid for acquiring a license.">As credenciais do usuário atual não são válidas para a aquisição de uma licença.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ManifestPolicyViolation">
      <summary vsli:raw="An operation is in violation of the rights management manifest policy.">Uma operação está em violação da política de manifesto do gerenciamento de direitos.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.MetadataNotSet">
      <summary vsli:raw="The specified metadata could net be set.">Não foi possível definir os metadados especificados.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NeedsGroupIdentityActivation">
      <summary vsli:raw="The user is not activated, or no Rights Account Certificate (RAC) was submitted and none was found in the license store to match the license associated with this session.">O usuário não está ativado ou nenhum RAC (Certificado de Conta de Direitos) foi enviado e não foi encontrado nenhum no repositório de licença para corresponder à licença associada a esta sessão.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NeedsMachineActivation">
      <summary vsli:raw="The computer must be activated before the user can be activated.">O computador deve ser ativado antes do usuário pode ser ativado.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoAesCryptoProvider">
      <summary vsli:raw="Rights management services are not properly configured.">Os serviços de gerenciamento de direitos não estão configurados corretamente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoConnect">
      <summary vsli:raw="Rights management cannot connect to the URI specified for the license server.">O gerenciamento de direitos não pode se conectar ao URI especificado para o servidor de licença.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoDistributionPointUrlFound">
      <summary vsli:raw="The protected content is corrupted.">O conteúdo protegido está corrompido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoLicense">
      <summary vsli:raw="A required license is not available.">Uma licença necessária não está disponível.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoMoreData">
      <summary vsli:raw="No license or certificate exists at the specified index.">Não existe nenhuma licença ou certificado no índice especificado.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NotAChain">
      <summary vsli:raw="Rights managed content is corrupted.">O conteúdo gerenciado de direitos está corrompido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NotSet">
      <summary vsli:raw="The item requested to delete does not exist.">O item solicitado para exclusão não existe.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.OutdatedModule">
      <summary vsli:raw="Rights management services are not properly configured.">Os serviços de gerenciamento de direitos não estão configurados corretamente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.OutOfQuota">
      <summary vsli:raw="The license server's maximum quota of End Use Licenses (EULs) has been reached.">A cota máxima do servidor de licença da EUL (Licenças de Usuário Final) foi atingida.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.OwnerLicenseNotFound">
      <summary vsli:raw="The document does not contain an Owner License.">O documento não contém uma Licença de Proprietário.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.QueryReportsNoResults">
      <summary vsli:raw="No instances of the requested attribute exist.">Não existe nenhuma instância do atributo solicitado.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RecordNotFound">
      <summary vsli:raw="The specified license was not found.">A licença especificada não foi encontrada.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RequestDenied">
      <summary vsli:raw="The Rights Management server does not allow temporary certification of the current user.">O servidor do Rights Management não permite a certificação temporária do usuário atual.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RevocationInfoNotSet">
      <summary vsli:raw="Certificate or license revocation information has not been set.">Não foram definidas informações de revogação de licença ou certificado.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RightNotGranted">
      <summary vsli:raw="The current user does not have rights to access the protected content.">O usuário atual não tem direitos para acessar o conteúdo protegido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RightNotSet">
      <summary vsli:raw="The requested right was not specified when the content was published with rights management.">O direito solicitado não foi especificado quando o conteúdo foi publicado com o gerenciamento de direitos.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServerError">
      <summary vsli:raw="Rights management services are not properly configured.">Os serviços de gerenciamento de direitos não estão configurados corretamente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServerNotFound">
      <summary vsli:raw="Rights management services are not properly configured.">Os serviços de gerenciamento de direitos não estão configurados corretamente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServiceGone">
      <summary vsli:raw="Rights management services are not properly configured.">Os serviços de gerenciamento de direitos não estão configurados corretamente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServiceMoved">
      <summary vsli:raw="Rights management services are not properly configured.">Os serviços de gerenciamento de direitos não estão configurados corretamente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServiceNotFound">
      <summary vsli:raw="Rights management services are not properly configured.">Os serviços de gerenciamento de direitos não estão configurados corretamente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.Success">
      <summary vsli:raw="Operation has competed successfully.">A operação foi concluída com êxito.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.TooManyCertificates">
      <summary vsli:raw="The number of certificates has exceeded the maximum number allowed.">O número de certificados excedeu o número máximo permitido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.TooManyLoadedEnvironments">
      <summary vsli:raw="Too many &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; instance have been created.">Foram criadas muitas instâncias de <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.UnexpectedException">
      <summary vsli:raw="An unspecified error occurred.  Also thrown when an application runs in debug mode.">Ocorreu um erro não especificado.  Lançado também quando um aplicativo é executado no modo de depuração.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.UseDefault">
      <summary vsli:raw="If a request is made for computer activation or a rights account certificate, receiving &lt;see cref=&quot;F:System.Security.RightsManagement.RightsManagementFailureCode.UseDefault&quot; /&gt; indicates that the application should pass &lt;see langword=&quot;null&quot; /&gt; into the ActServInfo parameter.">Se for feita uma solicitação de ativação do computador ou um certificado de conta de direitos, receber <see cref="F:System.Security.RightsManagement.RightsManagementFailureCode.UseDefault" /> indica que o aplicativo deve passar <see langword="null" /> para o parâmetro ActServInfo</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ValidityTimeViolation">
      <summary vsli:raw="The defined time period for the protected content has expired; access is no longer permitted.">O período definido para o conteúdo protegido expirou, o acesso não é mais permitido.</summary>
    </member>
    <member name="T:System.Security.RightsManagement.SecureEnvironment">
      <summary vsli:raw="Represents a secure client session for user activation, license binding, and other rights management operations.">Representa uma sessão de cliente segura para a ativação de usuário, associação de licença e outras operações de gerenciamento de direitos.</summary>
    </member>
    <member name="P:System.Security.RightsManagement.SecureEnvironment.ApplicationManifest">
      <summary vsli:raw="Gets the &lt;see cref=&quot;P:System.Security.RightsManagement.SecureEnvironment.ApplicationManifest&quot; /&gt; specified when the &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; was created.">Obtém o <see cref="P:System.Security.RightsManagement.SecureEnvironment.ApplicationManifest" /> especificado quando o <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> foi criado.</summary>
      <returns vsli:raw="The application manifest specified to the &lt;see cref=&quot;Overload:System.Security.RightsManagement.SecureEnvironment.Create&quot; /&gt; method when the &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; is created.">O manifesto do aplicativo especificado para <see cref="Overload:System.Security.RightsManagement.SecureEnvironment.Create" /> o método quando <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> o é criado.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.AuthenticationType,System.Security.RightsManagement.UserActivationMode)">
      <summary vsli:raw="Creates a secure client session given an application rights manifest, &lt;see cref=&quot;T:System.Security.RightsManagement.AuthenticationType&quot; /&gt;, and &lt;see cref=&quot;T:System.Security.RightsManagement.UserActivationMode&quot; /&gt;.">Cria uma sessão de cliente segura após um manifesto de direitos do aplicativo, <see cref="T:System.Security.RightsManagement.AuthenticationType" /> e <see cref="T:System.Security.RightsManagement.UserActivationMode" /> serem fornecidos.</summary>
      <param name="applicationManifest" vsli:raw="The application rights manifest.">O manifesto de direitos do aplicativo.</param>
      <param name="authentication" vsli:raw="The method of authentication.">O método de autenticação.</param>
      <param name="userActivationMode" vsli:raw="The type of the user rights account certificate.">O tipo do certificado de direitos de usuário.</param>
      <returns vsli:raw="A secure client session for activation, license binding, and other rights management operations.">Uma sessão de cliente segura para a ativação, associação de licença e outras operações de gerenciamento de direitos.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.ContentUser)">
      <summary vsli:raw="Creates a secure client session for a specified user with a given rights manifest.">Cria uma sessão de cliente segura para um usuário especificado com um manifesto de direitos fornecido.</summary>
      <param name="applicationManifest" vsli:raw="The application rights manifest.">O manifesto de direitos do aplicativo.</param>
      <param name="user" vsli:raw="The user or user-group for granting access to rights managed content.">O usuário ou grupo de usuários para conceder acesso a conteúdo gerenciado por direitos.</param>
      <returns vsli:raw="A secure client session for activation, license binding, and other rights management operations.">Uma sessão de cliente segura para a ativação, associação de licença e outras operações de gerenciamento de direitos.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt;.">Libera todos os recursos usados pelo <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; and optionally releases the managed resources.">Libera os recursos não gerenciados usados pelo <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> e opcionalmente libera os recursos gerenciados.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers">
      <summary vsli:raw="Returns a list of the activated users.">Retorna uma lista dos usuários ativados.</summary>
      <returns vsli:raw="A list of the currently activated users.">Uma lista dos usuários ativados atualmente.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.IsUserActivated(System.Security.RightsManagement.ContentUser)">
      <summary vsli:raw="Indicates whether a given user has been activated for accessing rights managed content.">Indica se um usuário fornecido foi ativado para acessar conteúdo gerenciado por direitos.</summary>
      <param name="user" vsli:raw="The user or user-group for granting access to rights managed content.">O usuário ou grupo de usuários para conceder acesso a conteúdo gerenciado por direitos.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the given &lt;paramref name=&quot;user&quot; /&gt; has been activated for accessing rights managed content; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o <paramref name="user" /> fornecido foi ativado para acessar conteúdo gerenciado por direitos; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.RemoveActivatedUser(System.Security.RightsManagement.ContentUser)">
      <summary vsli:raw="Removes the license activation for a specified user.">Remove a ativação de licença para um usuário especificado.</summary>
      <param name="user" vsli:raw="The user to remove the license activation for.">O usuário para o qual remover a ativação de licença.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;user&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">O parâmetro <paramref name="user" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The given &lt;paramref name=&quot;user&quot; /&gt; is not authenticated with either Windows authentication or Passport authentication.">O <paramref name="user" /> fornecido não está autenticado com a Autenticação do Windows ou a Autenticação do Windows Live ID.</exception>
    </member>
    <member name="P:System.Security.RightsManagement.SecureEnvironment.User">
      <summary vsli:raw="Gets the user or user-group specified when the &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; was created.">Obtém o usuário ou grupo de usuários especificado quando o <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> foi criado.</summary>
      <returns vsli:raw="The user or user-group specified to the &lt;see cref=&quot;M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.ContentUser)&quot; /&gt; method when the &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; was created.">O usuário ou grupo de usuários especificado para o <see cref="M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.ContentUser)" /> método quando o <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> foi criado.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.UnsignedPublishLicense">
      <summary vsli:raw="Represents an unsigned rights managed &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; or an unsigned &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; template.">Representa um <see cref="T:System.Security.RightsManagement.PublishLicense" /> gerenciado com direitos não assinados ou um modelo <see cref="T:System.Security.RightsManagement.PublishLicense" /> não assinado.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.UnsignedPublishLicense.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.UnsignedPublishLicense&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" />.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.UnsignedPublishLicense.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.UnsignedPublishLicense&quot; /&gt; class from a specified XrML publish-license template.">Inicializa uma nova instância da classe <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" /> com base em um modelo de licença de publicação XrML especificado.</summary>
      <param name="publishLicenseTemplate" vsli:raw="The Extensible Rights Markup Language (XrML) publish-license template to use to create this license.">O modelo de licença de publicação XrML (linguagem XrML) a ser usado para criar essa licença.</param>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.ContentId">
      <summary vsli:raw="Gets or sets the publisher-created content identifier.">Obtém ou define o identificador de conteúdo criado pelo editor.</summary>
      <returns vsli:raw="The publisher-created rights-managed content identifier.">O identificador de conteúdo gerenciado por direitos criados pelo Publicador.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.Grants">
      <summary vsli:raw="Gets a collection of assigned user rights.">Obtém uma coleção de direitos de usuário atribuído.</summary>
      <returns vsli:raw="A collection of the assigned user rights that are provided in this license.">Uma coleção de direitos de usuário atribuídos que são fornecidos nesta licença.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.LocalizedNameDescriptionDictionary">
      <summary vsli:raw="Gets a collection of name and description pairs.">Obtém uma coleção de pares de nome e descrição.</summary>
      <returns vsli:raw="A collection of name and description pairs.">Uma coleção de pares de nome e descrição.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.Owner">
      <summary vsli:raw="Gets or sets the content owner.">Obtém ou define o proprietário do conteúdo.</summary>
      <returns vsli:raw="The user who owns the published content.">O usuário que possui o conteúdo publicado.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoName">
      <summary vsli:raw="Gets or sets the contact name for the author or publisher of the content.">Obtém ou define o nome de contato do autor ou editor do conteúdo.</summary>
      <returns vsli:raw="The contact name for the author or publisher of the content.">O nome do contato para o autor ou o editor do conteúdo.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoUri">
      <summary vsli:raw="Gets or sets the contact URI for the author or publisher of the content.">Obtém ou define o URI de contato do autor ou editor do conteúdo.</summary>
      <returns vsli:raw="The contact uniform resource identifier (URI) for the author or publisher of the content.">O contato URI (Uniform Resource Identifier) do autor ou editor do conteúdo.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UnsignedPublishLicense.Sign(System.Security.RightsManagement.SecureEnvironment,System.Security.RightsManagement.UseLicense@)">
      <summary vsli:raw="Creates a signed &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; and returns a &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for the document author.">Cria um <see cref="T:System.Security.RightsManagement.PublishLicense" /> assinado e retorna um <see cref="T:System.Security.RightsManagement.UseLicense" /> para o autor do documento.</summary>
      <param name="secureEnvironment" vsli:raw="The secure environment for license activation and binding.">Um ambiente seguro para ativação e associação de licença.</param>
      <param name="authorUseLicense" vsli:raw="A returned &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for the document author.">Um <see cref="T:System.Security.RightsManagement.UseLicense" /> retornado para o autor do documento.</param>
      <returns vsli:raw="The signed &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; that is created by signing this &lt;see cref=&quot;T:System.Security.RightsManagement.UnsignedPublishLicense&quot; /&gt;.">O <see cref="T:System.Security.RightsManagement.PublishLicense" /> assinado criado ao assinar esse <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UnsignedPublishLicense.ToString">
      <summary vsli:raw="Returns a serialized template created from the XrML of the &lt;see cref=&quot;T:System.Security.RightsManagement.UnsignedPublishLicense&quot; /&gt;.">Retorna um modelo serializado criado do XrML do <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" />.</summary>
      <returns vsli:raw="A serialized template created from the XrML of the &lt;see cref=&quot;T:System.Security.RightsManagement.UnsignedPublishLicense&quot; /&gt;.">Um modelo serializado criado do XrML do <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" />.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.UseLicense">
      <summary vsli:raw="Represents a license that enables access to protected rights managed content.">Representa uma licença que habilita acesso a conteúdo gerenciado de direitos protegidos.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Security.RightsManagement.UseLicense" />.</summary>
      <param name="useLicense" vsli:raw="A use license in serialized Extensible Rights Markup Language (XrML) form.">Uma licença de uso no formulário XrML (linguagem XrML) serializado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;useLicense&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="useLicense" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException" vsli:raw="&lt;paramref name=&quot;useLicense&quot; /&gt; is invalid.">
        <paramref name="useLicense" /> é inválido.</exception>
    </member>
    <member name="P:System.Security.RightsManagement.UseLicense.ApplicationData">
      <summary vsli:raw="Gets the application data dictionary that contains key/value pairs passed from the publishing application to the consuming application.">Obtém o dicionário de dados de aplicativo que contém os pares chave/valor passados do aplicativo de publicação para o aplicativo de consumo.</summary>
      <returns vsli:raw="The application data dictionary that contains key/value pairs passed from the publishing application to the consuming application.">O dicionário de dados de aplicativo que contém pares de chave/valor passados do aplicativo de publicação para o aplicativo de consumo.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.Bind(System.Security.RightsManagement.SecureEnvironment)">
      <summary vsli:raw="Binds the license to a given &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt;.">Associa a licença a um <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> fornecido.</summary>
      <param name="secureEnvironment" vsli:raw="The environment to bind the license to.">O ambiente ao qual associar a licença.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.RightsManagement.CryptoProvider&quot; /&gt; instance if the license binding succeeded; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Uma instância <see cref="T:System.Security.RightsManagement.CryptoProvider" /> se a associação da licença for bem-sucedida; caso contrário, <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;secureEnvironment&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="secureEnvironment" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.Security.RightsManagement.UseLicense.ContentId">
      <summary vsli:raw="Gets the content identifier created by the publisher.">Obtém o identificador de conteúdo criado pelo editor.</summary>
      <returns vsli:raw="The content identifier created by the publisher.">O identificador de conteúdo criado pelo Publicador.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.Equals(System.Object)">
      <summary vsli:raw="Indicates if this license is equivalent to another given license.">Indica se essa licença é equivalente a outra licença fornecida.</summary>
      <param name="x" vsli:raw="The license to compare.">A licença a ser comparada.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if both licenses are the equivalent; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se ambas as licenças forem equivalentes; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.GetHashCode">
      <summary vsli:raw="Returns the hash code associated with this license.">Retorna o código hash associado a essa licença.</summary>
      <returns vsli:raw="A hash code for this license.">O código hash dessa licença.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UseLicense.Owner">
      <summary vsli:raw="Gets the owner of the license.">Obtém o proprietário da licença.</summary>
      <returns vsli:raw="The owner of the license.">O proprietário da licença.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.ToString">
      <summary vsli:raw="Returns the serialized XrML string used to create this license.">Retorna a cadeia de caracteres XrML serializada usada para criar essa licença.</summary>
      <returns vsli:raw="The serialized Extensible Rights Markup Language (XrML) string originally passed to the &lt;see cref=&quot;M:System.Security.RightsManagement.UseLicense.#ctor(System.String)&quot; /&gt; constructor.">A cadeia de caracteres XrML (linguagem XrML) serializada originalmente passada para o construtor <see cref="M:System.Security.RightsManagement.UseLicense.#ctor(System.String)" />.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.UserActivationMode">
      <summary vsli:raw="Specifies the type of user Rights Account Certificate to request for rights management activation.">Especifica o tipo de Certificado de Conta de Direitos do usuário para solicitar a ativação de gerenciamento de direitos.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.UserActivationMode.Permanent">
      <summary vsli:raw="A permanent Rights Account Certificate.">Um Certificado de Conta de Direitos permanente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.UserActivationMode.Temporary">
      <summary vsli:raw="A temporary Rights Account Certificate.">Um Certificado de Conta de Direitos temporário.</summary>
    </member>
    <member name="T:System.Windows.AttachedPropertyBrowsableAttribute">
      <summary vsli:raw="Provides a base class for .NET attributes that report the use scope of attached properties.">Fornece uma classe base para os atributos do .NET Framework que relata o escopo de uso das propriedades anexadas.</summary>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.AttachedPropertyBrowsableAttribute" />.</summary>
    </member>
    <member name="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute">
      <summary vsli:raw="Specifies that an attached property is browsable only for elements that derive from a specified type.">Especifica que uma propriedade anexada é navegável apenas em elementos que derivam de um tipo especificado.</summary>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableForTypeAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt; class, using the provided &lt;paramref name=&quot;targetType&quot; /&gt;.">Inicializa uma nova instância da classe <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> usando o <paramref name="targetType" /> fornecido.</summary>
      <param name="targetType" vsli:raw="The intended type that scopes the use of the attached property where this .NET Framework attribute applies.">O tipo desejado que tem como escopo o uso da propriedade anexada em que este Atributo do .NET Framework se aplica.</param>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableForTypeAttribute.Equals(System.Object)">
      <summary vsli:raw="Determines whether the current &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt; .NET Framework attribute is equal to a specified object.">Determina se o <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> Atributo do .NET Framework atual é igual a um objeto especificado.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt; to compare to the current &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt;.">O <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> a ser comparado com o <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> atual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> especificado for igual ao <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableForTypeAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt; .NET Framework attribute.">Retorna o código hash para este <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> Atributo do .NET Framework.</summary>
      <returns vsli:raw="An unsigned 32-bit integer value.">Um valor inteiro de 32 bits sem sinal.</returns>
    </member>
    <member name="P:System.Windows.AttachedPropertyBrowsableForTypeAttribute.TargetType">
      <summary vsli:raw="Gets the base type that scopes the use of the attached property where this .NET Framework attribute applies.">Obtém o tipo base que tem como escopo o uso da propriedade anexada em que este Atributo do .NET Framework se aplica.</summary>
      <returns vsli:raw="The requested &lt;see cref=&quot;T:System.Type&quot; /&gt;.">O <see cref="T:System.Type" /> solicitado.</returns>
    </member>
    <member name="P:System.Windows.AttachedPropertyBrowsableForTypeAttribute.TypeId">
      <summary vsli:raw="Gets a unique type identifier for this &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt; .NET Framework attribute.">Obtém um identificador de tipo exclusivo para este <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> Atributo do .NET Framework.</summary>
      <returns vsli:raw="An object that is a unique identifier for the &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt;.">Um objeto que é um identificador exclusivo para o <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" />.</returns>
    </member>
    <member name="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute">
      <summary vsli:raw="Specifies that an attached property is only browsable on an element that also has another specific .NET attribute applied to its class definition.">Especifica que uma propriedade anexada é navegável apenas em um elemento que também tem outro atributo .NET Framework específico aplicado à sua definição de classe.</summary>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" />.</summary>
      <param name="attributeType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the  .NET Framework attribute that must also be applied on a class in order for the attached property to be browsable on the class where &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt; is applied.">O <see cref="T:System.Type" /> do Atributo do .NET Framework que também devem ser aplicados em uma classe para que a propriedade anexada seja navegável na classe em que <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> é aplicado.</param>
    </member>
    <member name="P:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute.AttributeType">
      <summary vsli:raw="Gets the type of the  .NET Framework attribute that must also be applied on a class.">Obtém o tipo de Atributo do .NET Framework que também deve ser aplicado em uma classe.</summary>
      <returns vsli:raw="The  .NET Framework attribute type.">O Atributo do .NET Framework tipo.</returns>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute.Equals(System.Object)">
      <summary vsli:raw="Determines whether the current &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt; .NET Framework attribute is equal to a specified object.">Determina se o <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> Atributo do .NET Framework atual é igual a um objeto especificado.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt; to compare to the current &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt;.">O <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> a ser comparado com o <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> atual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> especificado for igual ao <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt; .NET Framework attribute.">Retorna o código hash para este <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> Atributo do .NET Framework.</summary>
      <returns vsli:raw="An unsigned 32-bit integer value.">Um valor inteiro de 32 bits sem sinal.</returns>
    </member>
    <member name="T:System.Windows.BaseCompatibilityPreferences">
      <summary vsli:raw="Contains properties that specify how an application should behave relative to new WPF features that are in the WindowsBase assembly.">Contém propriedades que especificam como um aplicativo deve se comportar em relação aos novos recursos WPF que estão no assembly WindowsBase.</summary>
    </member>
    <member name="P:System.Windows.BaseCompatibilityPreferences.FlowDispatcherSynchronizationContextPriority">
      <summary vsli:raw="Gets or sets a value that indicates whether information about the &lt;see cref=&quot;P:System.Windows.Threading.DispatcherOperation.Priority&quot; /&gt; is saved to the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt;.">Obtém ou define um valor que indica se as informações sobre o <see cref="P:System.Windows.Threading.DispatcherOperation.Priority" /> são salvas no <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if information about the &lt;see cref=&quot;P:System.Windows.Threading.DispatcherOperation.Priority&quot; /&gt; is saved to the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Se as informações sobre <see cref="P:System.Windows.Threading.DispatcherOperation.Priority" /> o forem salvas <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />no; caso <see langword="false" />contrário,.</returns>
    </member>
    <member name="P:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailure">
      <summary vsli:raw="Defines how the dispatcher reacts to failures encountered when it requests processing.">Define como o dispatcher reage a falhas encontradas quando ele solicita o processamento.</summary>
      <returns vsli:raw="A value that defines how the dispatcher reacts to failures.">Um valor que define como o dispatcher reage a falhas.</returns>
    </member>
    <member name="T:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailureOptions">
      <summary vsli:raw="Provides a set of values that describes how the dispatcher responds to failures that are encountered while requesting processing.">Fornece um conjunto de valores que descreve como o dispatcher responde a falhas encontradas durante a solicitação de processamento.</summary>
    </member>
    <member name="F:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailureOptions.Continue">
      <summary vsli:raw="Continue after the failure.  &#xA;  &#xA; This is the default value. It defines the behavior of the Windows Presentation Foundation dispatcher prior to the .NET Framework 4.7.1. The dispatcher may become unresponsive when this option is selected.">Continue após a falha.  
 Este é o valor padrão. Ele define o comportamento do dispatcher do Windows Presentation Foundation antes do .NET Framework 4.7.1. O dispatcher pode ficar sem resposta quando essa opção é selecionada.</summary>
    </member>
    <member name="F:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailureOptions.Reset">
      <summary vsli:raw="Reset the dispatcher's state to try another request the next time one is needed.  &#xA;  &#xA; While this option can sometimes &quot;repair&quot; unresponsiveness, it cannot honor the usual timing of processing, which can be crucial. Selecting this option can lead to unexpected behavior.">Redefina o estado do dispatcher para tentar outra solicitação na próxima vez em que uma for necessária.  
 Embora essa opção possa, às vezes, "reparar" a falta de resposta, ela não pode respeitar o intervalo habitual de processamento, que pode ser fundamental. Selecionar essa opção pode resultar em um comportamento inesperado.</summary>
    </member>
    <member name="F:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailureOptions.Throw">
      <summary vsli:raw="Throw an exception.  &#xA;  &#xA; This option immediately brings the problem to the application developer's attention.">Gera uma exceção.  
 Essa opção leva imediatamente o problema à atenção do desenvolvedor do aplicativo.</summary>
    </member>
    <member name="P:System.Windows.BaseCompatibilityPreferences.InlineDispatcherSynchronizationContextSend">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;M:System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)&quot; /&gt; method puts the delegates on the dispatcher queue or if the delegate is directly invoked.">Obtém ou define um valor que indica se o método <see cref="M:System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)" /> coloca os delegados na fila do dispatcher ou se o delegado é invocado diretamente.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;M:System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)&quot; /&gt; method puts the delegates on the dispatcher queue or if the delegate is directly invoked; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Se o <see cref="M:System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)" /> método colocar os delegados na fila do Dispatcher ou se o delegado for invocado diretamente; caso <see langword="false" />contrário,.</returns>
    </member>
    <member name="P:System.Windows.BaseCompatibilityPreferences.ReuseDispatcherSynchronizationContextInstance">
      <summary vsli:raw="Gets or sets a value that indicates whether a single &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt; is used for multiple dispatcher operations.">Obtém ou define um valor que indica se um único <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> é usado para diversas operações de dispatcher.</summary>
      <returns vsli:raw="true if a single &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt; is used for multiple dispatcher operations; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">true se um único <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> for usado para várias operações de Dispatcher; caso <see langword="false" />contrário,.</returns>
    </member>
    <member name="T:System.Windows.CoerceValueCallback">
      <summary vsli:raw="Provides a template for a method that is called whenever a dependency property value is being re-evaluated, or coercion is specifically requested.">Fornece um modelo para um método que é chamado sempre que um valor da propriedade de dependência está sendo reavaliado ou a coerção é especificamente solicitada.</summary>
      <param name="d" vsli:raw="The object that the property exists on. When the callback is invoked, the property system will pass this value.">O objeto na qual a propriedade existe. Quando o retorno de chamada for invocado, o sistema de propriedade passará esse valor.</param>
      <param name="baseValue" vsli:raw="The new value of the property, prior to any coercion attempt.">O novo valor da propriedade, antes de qualquer tentativa de coerção.</param>
      <returns vsli:raw="The coerced value (with appropriate type).">O valor imposto (com o tipo apropriado).</returns>
    </member>
    <member name="T:System.Windows.Converters.Int32RectValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Converte instâncias de <see cref="T:System.String" /> de e para instâncias de <see cref="T:System.Windows.Int32Rect" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Converters.Int32RectValueSerializer&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Converters.Int32RectValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Determina se o <see cref="T:System.String" /> especificado pode ser convertido em uma instância de <see cref="T:System.Windows.Int32Rect" />.</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">Cadeia de caracteres a ser avaliada para conversão.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informações de contexto que são usadas para conversão.</param>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">Sempre retorna <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Determina se o <see cref="T:System.Windows.Int32Rect" /> especificado pode ser convertido em um <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to evaluate for conversion.">O objeto a ser avaliado para conversão.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informações de contexto que são usadas para conversão.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="value" /> puder ser convertido em um <see cref="T:System.String" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Converte um <see cref="T:System.String" /> em um <see cref="T:System.Windows.Int32Rect" />.</summary>
      <param name="value" vsli:raw="The string to convert.">A cadeia de caracteres a ser convertida.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informações de contexto que são usadas para conversão.</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">Uma nova instância de <see cref="T:System.Windows.Int32Rect" /> com base no <paramref name="value" /> fornecido.</returns>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Converte uma instância de <see cref="T:System.Windows.Int32Rect" /> em um <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to convert into a string.">O objeto a ser convertido em uma cadeia de caracteres.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informações de contexto que são usadas para conversão.</param>
      <returns vsli:raw="A string representation of the specified &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Uma representação de cadeia de caracteres do <see cref="T:System.Windows.Int32Rect" /> especificado.</returns>
    </member>
    <member name="T:System.Windows.Converters.PointValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Converte instâncias de <see cref="T:System.String" /> de e para instâncias de <see cref="T:System.Windows.Point" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Converters.PointValueSerializer&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Converters.PointValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Determina se o <see cref="T:System.String" /> especificado pode ser convertido em uma instância de <see cref="T:System.Windows.Point" />.</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">Cadeia de caracteres a ser avaliada para conversão.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informações de contexto que são usadas para conversão.</param>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">Sempre retorna <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Determina se o <see cref="T:System.Windows.Point" /> especificado pode ser convertido em um <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to evaluate for conversion.">O objeto a ser avaliado para conversão.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informações de contexto que são usadas para conversão.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="value" /> puder ser convertido em um <see cref="T:System.String" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Converte um <see cref="T:System.String" /> em um <see cref="T:System.Windows.Point" />.</summary>
      <param name="value" vsli:raw="The string to convert.">A cadeia de caracteres a ser convertida.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informações de contexto que são usadas para conversão.</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">Uma nova instância de <see cref="T:System.Windows.Point" /> com base no <paramref name="value" /> fornecido.</returns>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Converte uma instância de <see cref="T:System.Windows.Point" /> em um <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to convert into a string.">O objeto a ser convertido em uma cadeia de caracteres.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informações de contexto que são usadas para conversão.</param>
      <returns vsli:raw="A string representation of the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Uma representação de cadeia de caracteres do <see cref="T:System.Windows.Point" /> especificado.</returns>
    </member>
    <member name="T:System.Windows.Converters.RectValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">Converte instâncias de <see cref="T:System.String" /> de e para instâncias de <see cref="T:System.Windows.Rect" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Converters.RectValueSerializer&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Converters.RectValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">Determina se o <see cref="T:System.String" /> especificado pode ser convertido em uma instância de <see cref="T:System.Windows.Rect" />.</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">Cadeia de caracteres a ser avaliada para conversão.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informações de contexto que são usadas para conversão.</param>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">Sempre retorna <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Determina se o <see cref="T:System.Windows.Rect" /> especificado pode ser convertido em um <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to evaluate for conversion.">O objeto a ser avaliado para conversão.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informações de contexto que são usadas para conversão.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="value" /> puder ser convertido em um <see cref="T:System.String" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">Converte um <see cref="T:System.String" /> em um <see cref="T:System.Windows.Rect" />.</summary>
      <param name="value" vsli:raw="The string to convert.">A cadeia de caracteres a ser convertida.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informações de contexto que são usadas para conversão.</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">Uma nova instância de <see cref="T:System.Windows.Rect" /> com base no <paramref name="value" /> fornecido.</returns>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Converte uma instância de <see cref="T:System.Windows.Rect" /> em um <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to convert into a string.">O objeto a ser convertido em uma cadeia de caracteres.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informações de contexto que são usadas para conversão.</param>
      <returns vsli:raw="A string representation of the specified &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">Uma representação de cadeia de caracteres do <see cref="T:System.Windows.Rect" /> especificado.</returns>
    </member>
    <member name="T:System.Windows.Converters.SizeValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Converte instâncias de <see cref="T:System.String" /> de e para instâncias de <see cref="T:System.Windows.Size" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Converters.SizeValueSerializer&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Converters.SizeValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Determina se o <see cref="T:System.String" /> especificado pode ser convertido em uma instância de <see cref="T:System.Windows.Size" />.</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">Cadeia de caracteres a ser avaliada para conversão.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informações de contexto que são usadas para conversão.</param>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">Sempre retorna <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Determina se o <see cref="T:System.Windows.Size" /> especificado pode ser convertido em um <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to evaluate for conversion.">O objeto a ser avaliado para conversão.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informações de contexto que são usadas para conversão.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="value" /> puder ser convertido em um <see cref="T:System.String" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Converte um <see cref="T:System.String" /> em um <see cref="T:System.Windows.Size" />.</summary>
      <param name="value" vsli:raw="The string to convert.">A cadeia de caracteres a ser convertida.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informações de contexto que são usadas para conversão.</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">Uma nova instância de <see cref="T:System.Windows.Size" /> com base no <paramref name="value" /> fornecido.</returns>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Converte uma instância de <see cref="T:System.Windows.Size" /> em um <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to convert into a string.">O objeto a ser convertido em uma cadeia de caracteres.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informações de contexto que são usadas para conversão.</param>
      <returns vsli:raw="A string representation of the specified &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Uma representação de cadeia de caracteres do <see cref="T:System.Windows.Size" /> especificado.</returns>
    </member>
    <member name="T:System.Windows.Converters.VectorValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Converte instâncias de <see cref="T:System.String" /> de e para instâncias de <see cref="T:System.Windows.Vector" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Converters.VectorValueSerializer&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Converters.VectorValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Determina se o <see cref="T:System.String" /> especificado pode ser convertido em uma instância de <see cref="T:System.Windows.Vector" />.</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">Cadeia de caracteres a ser avaliada para conversão.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informações de contexto que são usadas para conversão.</param>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">Sempre retorna <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Determina se o <see cref="T:System.Windows.Vector" /> especificado pode ser convertido em um <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to evaluate for conversion.">O objeto a ser avaliado para conversão.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informações de contexto que são usadas para conversão.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="value" /> puder ser convertido em um <see cref="T:System.String" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Converte um <see cref="T:System.String" /> em um <see cref="T:System.Windows.Vector" />.</summary>
      <param name="value" vsli:raw="The string to convert.">A cadeia de caracteres a ser convertida.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informações de contexto que são usadas para conversão.</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">Uma nova instância de <see cref="T:System.Windows.Vector" /> com base no <paramref name="value" /> fornecido.</returns>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Converte uma instância de <see cref="T:System.Windows.Vector" /> em um <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to convert into a string.">O objeto a ser convertido em uma cadeia de caracteres.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informações de contexto que são usadas para conversão.</param>
      <returns vsli:raw="A string representation of the specified &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Uma representação de cadeia de caracteres do <see cref="T:System.Windows.Vector" /> especificado.</returns>
    </member>
    <member name="T:System.Windows.Data.DataSourceProvider">
      <summary vsli:raw="Common base class and contract for &lt;see cref=&quot;T:System.Windows.Data.DataSourceProvider&quot; /&gt; objects, which are factories that execute some queries to produce a single object or a list of objects that you can use as binding source objects.">Classe base comum e contratos para objetos <see cref="T:System.Windows.Data.DataSourceProvider" />, que são fatores para executar algumas consultas para produzir um único objeto ou uma lisa de objetos que podem ser usados como objetos de origem da associação.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Data.DataSourceProvider&quot; /&gt; class. This is a protected constructor.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Data.DataSourceProvider" />. Esse é um construtor protegido.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.BeginInit">
      <summary vsli:raw="Indicates that initialization of this object is about to begin; no implicit &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.Refresh&quot; /&gt; occurs until the matched &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.EndInit&quot; /&gt; method is called.">Indica que a inicialização desse objeto está prestes a começar; nenhuma <see cref="M:System.Windows.Data.DataSourceProvider.Refresh" /> implícita ocorre até que o método <see cref="M:System.Windows.Data.DataSourceProvider.EndInit" /> correspondente seja chamado.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.BeginQuery">
      <summary vsli:raw="When overridden in a derived class, this base class calls this method when &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.InitialLoad&quot; /&gt; or &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.Refresh&quot; /&gt; has been called. The base class delays the call if refresh is deferred or initial load is disabled.">Quando substituído em uma classe derivada, essa classe base chama esse método quando <see cref="M:System.Windows.Data.DataSourceProvider.InitialLoad" /> ou <see cref="M:System.Windows.Data.DataSourceProvider.Refresh" /> foi chamado. A classe base atrasa a chamada se a atualização é adiada ou a carga inicial é desabilitada.</summary>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.Data">
      <summary vsli:raw="Gets the underlying data object.">Obtém o objeto de dados subjacente.</summary>
      <returns vsli:raw="A value of type &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the underlying data object.">Um valor do tipo <see cref="T:System.Object" /> que é o objeto de dados subjacente.</returns>
    </member>
    <member name="E:System.Windows.Data.DataSourceProvider.DataChanged">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;P:System.Windows.Data.DataSourceProvider.Data&quot; /&gt; property has a new value.">Ocorre quando a propriedade <see cref="P:System.Windows.Data.DataSourceProvider.Data" /> tem um novo valor.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.DeferRefresh">
      <summary vsli:raw="Enters a defer cycle that you can use to change properties of the provider and delay automatic refresh.">Insere um ciclo de adiamento que pode ser usado para alterar as propriedades do provedor e atrasar a atualização automática.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IDisposable&quot; /&gt; object that you can use to dispose of the calling object.">Um objeto <see cref="T:System.IDisposable" /> que pode ser usado para descartar o objeto de chamada.</returns>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.Dispatcher">
      <summary vsli:raw="Gets or sets the current &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; object to the UI thread to use.">Obtém ou define o objeto <see cref="T:System.Windows.Threading.Dispatcher" /> atual para o thread Interface de Usuário a ser usado.</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; object to the UI thread to use. By default, this is the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; object that is associated with the thread on which this instance was created.">O objeto <see cref="T:System.Windows.Threading.Dispatcher" /> atual para o Interface de Usuário thread a ser usado. Por padrão, esse é o <see cref="T:System.Windows.Threading.Dispatcher" /> objeto que está associado ao thread no qual essa instância foi criada.</returns>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.EndInit">
      <summary vsli:raw="Indicates that the initialization of this object has completed; this causes a &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.Refresh&quot; /&gt; if no other &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.DeferRefresh&quot; /&gt; is outstanding.">Indica que a inicialização desse objeto foi concluída; isso causa uma <see cref="M:System.Windows.Data.DataSourceProvider.Refresh" /> se nenhuma outra <see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" /> está pendente.</summary>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.Error">
      <summary vsli:raw="Gets the error of the last query operation.">Obtém o erro da última operação de consulta.</summary>
      <returns vsli:raw="A value of type &lt;see cref=&quot;T:System.Exception&quot; /&gt; that is the error of the last query operation, or &lt;see langword=&quot;null&quot; /&gt; if there was no error.">Um valor do tipo <see cref="T:System.Exception" /> que é o erro da última operação de consulta ou <see langword="null" /> , se não houver erro.</returns>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.InitialLoad">
      <summary vsli:raw="Starts the initial query to the underlying data model. The result is returned on the &lt;see cref=&quot;P:System.Windows.Data.DataSourceProvider.Data&quot; /&gt; property.">Inicia a consulta inicial para o modelo de dados subjacente. O resultado é retornado na propriedade <see cref="P:System.Windows.Data.DataSourceProvider.Data" />.</summary>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.IsInitialLoadEnabled">
      <summary vsli:raw="Gets or sets a value that indicates whether to prevent or delay the automatic loading of data.">Obtém ou define um valor que indica se o carregamento automático de dados deve ser impedido ou atrasado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; to prevent or delay the automatic loading of data; otherwise, &lt;see langword=&quot;true&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="false" />para evitar ou atrasar o carregamento automático de dados; caso contrário <see langword="true" />,. O valor padrão é <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.IsRefreshDeferred">
      <summary vsli:raw="Gets a value that indicates whether there is an outstanding &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.DeferRefresh&quot; /&gt; in use.">Obtém um valor que indica se há uma <see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" /> pendente em uso.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there is an outstanding &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.DeferRefresh&quot; /&gt; in use; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Se houver uma pendência <see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" /> em uso; caso contrário,. <see langword="false" /></returns>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Windows.Data.DataSourceProvider.PropertyChanged&quot; /&gt; event with the provided arguments.">Cria o evento <see cref="E:System.Windows.Data.DataSourceProvider.PropertyChanged" /> com os argumentos fornecidos.</summary>
      <param name="e" vsli:raw="Arguments of the event being raised.">Argumentos do evento que está sendo criado.</param>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object)">
      <summary vsli:raw="Derived classes call this method to indicate that a query has finished.">Classes derivadas chamam esse método para indicar que uma consulta foi concluída.</summary>
      <param name="newData" vsli:raw="The data that is the result of the query.">Os dados que são o resultado da consulta.</param>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object,System.Exception,System.Windows.Threading.DispatcherOperationCallback,System.Object)">
      <summary vsli:raw="Derived classes call this method to indicate that a query has finished.">Classes derivadas chamam esse método para indicar que uma consulta foi concluída.</summary>
      <param name="newData" vsli:raw="The data that is the result of the query.">Os dados que são o resultado da consulta.</param>
      <param name="error" vsli:raw="The error that occurred while running the query. This value is &lt;see langword=&quot;null&quot; /&gt; if there is no error.">O erro ocorrido durante a execução da consulta. Esse valor é <see langword="null" /> se não há nenhum erro.</param>
      <param name="completionWork" vsli:raw="Optional delegate that is used to execute completion work on the UI thread, for example, to set additional properties.">Delegado opcional usado para executar o trabalho de conclusão no thread Interface de Usuário, por exemplo, para definir propriedades adicionais.</param>
      <param name="callbackArguments" vsli:raw="Optional arguments to send as a parameter with the &lt;paramref name=&quot;completionWork&quot; /&gt; delegate.">Argumentos opcionais a serem enviados como um parâmetro com o delegado <paramref name="completionWork" />.</param>
    </member>
    <member name="E:System.Windows.Data.DataSourceProvider.PropertyChanged">
      <summary vsli:raw="Occurs when a property value changes.">Ocorre quando um valor de propriedade é alterado.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.Refresh">
      <summary vsli:raw="Initiates a refresh operation to the underlying data model. The result is returned on the &lt;see cref=&quot;P:System.Windows.Data.DataSourceProvider.Data&quot; /&gt; property.">Inicia uma operação de atualização no modelo de dados subjacente. O resultado é retornado na propriedade <see cref="P:System.Windows.Data.DataSourceProvider.Data" />.</summary>
    </member>
    <member name="E:System.Windows.Data.DataSourceProvider.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary vsli:raw="Occurs when a property value changes.">Ocorre quando um valor de propriedade é alterado.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.System#ComponentModel#ISupportInitialize#BeginInit">
      <summary vsli:raw="This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.">Este membro dá suporte à infraestrutura Windows Presentation Foundation (WPF) e não se destina a ser usado diretamente do código.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.System#ComponentModel#ISupportInitialize#EndInit">
      <summary vsli:raw="This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.">Este membro dá suporte à infraestrutura Windows Presentation Foundation (WPF) e não se destina a ser usado diretamente do código.</summary>
    </member>
    <member name="T:System.Windows.DependencyObject">
      <summary vsli:raw="Represents an object that participates in the dependency property system.">Representa um objeto que participa do sistema de propriedade de dependência.</summary>
    </member>
    <member name="M:System.Windows.DependencyObject.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.DependencyObject" />.</summary>
    </member>
    <member name="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)">
      <summary vsli:raw="Clears the local value of a property. The property to be cleared is specified by a &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; identifier.">Limpa o valor local de uma propriedade. A propriedade a ser limpa é especificada por um identificador <see cref="T:System.Windows.DependencyProperty" />.</summary>
      <param name="dp" vsli:raw="The dependency property to be cleared, identified by a &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; object reference.">A propriedade de dependência a ser limpa, identificada por uma referência de objeto <see cref="T:System.Windows.DependencyProperty" />.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Attempted to call &lt;see cref=&quot;M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)&quot; /&gt; on a sealed &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">Tentativa de chamar <see cref="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" /> em um <see cref="T:System.Windows.DependencyObject" /> lacrado.</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)">
      <summary vsli:raw="Clears the local value of a read-only property. The property to be cleared is specified by a &lt;see cref=&quot;T:System.Windows.DependencyPropertyKey&quot; /&gt;.">Limpa o valor local de uma propriedade somente leitura. A propriedade a ser limpa é especificada por um <see cref="T:System.Windows.DependencyPropertyKey" />.</summary>
      <param name="key" vsli:raw="The key for the dependency property to be cleared.">A chave para a propriedade de dependência a ser limpa.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Attempted to call &lt;see cref=&quot;M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)&quot; /&gt; on a sealed &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">Tentativa de chamar <see cref="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" /> em um <see cref="T:System.Windows.DependencyObject" /> lacrado.</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)">
      <summary vsli:raw="Coerces the value of the specified dependency property. This is accomplished by invoking any &lt;see cref=&quot;T:System.Windows.CoerceValueCallback&quot; /&gt; function specified in property metadata for the dependency property as it exists on the calling &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">Converte o valor da propriedade de dependência especificada. Isso é feito invocando qualquer função <see cref="T:System.Windows.CoerceValueCallback" /> especificada nos metadados de propriedade para a propriedade de dependência, visto que ela existe na chamada a <see cref="T:System.Windows.DependencyObject" />.</summary>
      <param name="dp" vsli:raw="The identifier for the dependency property to coerce.">O identificador para a propriedade de dependência impor.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The specified &lt;paramref name=&quot;dp&quot; /&gt; or its value were invalid or do not exist.">O <paramref name="dp" /> especificado ou seu valor eram inválido ou não existem.</exception>
    </member>
    <member name="P:System.Windows.DependencyObject.DependencyObjectType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; that wraps the CLR type of this instance.">Obtém o <see cref="T:System.Windows.DependencyObjectType" /> que encapsula o tipo CLR dessa instância.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; that wraps the CLR type of this instance.">Um <see cref="T:System.Windows.DependencyObjectType" /> que encapsula o tipo CLR dessa instância.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.Equals(System.Object)">
      <summary vsli:raw="Determines whether a provided &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; is equivalent to the current &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">Determina se um <see cref="T:System.Windows.DependencyObject" /> fornecido é equivalente ao <see cref="T:System.Windows.DependencyObject" /> atual.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; to compare to the current instance.">O <see cref="T:System.Windows.DependencyObject" /> a ser comparado com a instância atual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two instances are the same; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se as duas instâncias forem iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.GetHashCode">
      <summary vsli:raw="Gets a hash code for this &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">Obtém o código hash para esse <see cref="T:System.Windows.DependencyObject" />.</summary>
      <returns vsli:raw="A signed 32-bit integer hash code.">Um código hash do inteiro com sinal de 32 bits.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.GetLocalValueEnumerator">
      <summary vsli:raw="Creates a specialized enumerator for determining which dependency properties have locally set values on this &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">Cria um enumerador especializado para determinar quais propriedades de dependência têm valores definidos localmente nessa <see cref="T:System.Windows.DependencyObject" />.</summary>
      <returns vsli:raw="A specialized local value enumerator.">Um enumerador do valor de local especializado.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)">
      <summary vsli:raw="Returns the current effective value of a dependency property on this instance of a &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">Retorna o valor efetivo atual de uma propriedade de dependência nessa instância de um <see cref="T:System.Windows.DependencyObject" />.</summary>
      <param name="dp" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; identifier of the property to retrieve the value for.">O identificador <see cref="T:System.Windows.DependencyProperty" /> da propriedade para o qual o valor será recuperado.</param>
      <returns vsli:raw="Returns the current effective value.">Retorna o valor efetivo atual.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The specified &lt;paramref name=&quot;dp&quot; /&gt; or its value was invalid, or the specified &lt;paramref name=&quot;dp&quot; /&gt; does not exist.">O <paramref name="dp" /> especificado ou seu valor era inválido ou o <paramref name="dp" /> especificado não existe.</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)">
      <summary vsli:raw="Re-evaluates the effective value for the specified dependency property.">Reavalia o valor efetivo para a propriedade de dependência especificada</summary>
      <param name="dp" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; identifier of the property to invalidate.">O <see cref="T:System.Windows.DependencyProperty" /> identificador exclusivo da propriedade a invalidar.</param>
    </member>
    <member name="P:System.Windows.DependencyObject.IsSealed">
      <summary vsli:raw="Gets a value that indicates whether this instance is currently sealed (read-only).">Obtém um valor que indica se essa instância está validada no momento (somente leitura).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this instance is sealed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se essa instância estiver selada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary vsli:raw="Invoked whenever the effective value of any dependency property on this &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; has been updated. The specific dependency property that changed is reported in the event data.">Invocado sempre que o valor efetivo de qualquer propriedade de dependência nesse <see cref="T:System.Windows.DependencyObject" /> for atualizada. A propriedade de dependência específica que mudou é relatada os dados do evento.</summary>
      <param name="e" vsli:raw="Event data that will contain the dependency property identifier of interest, the property metadata for the type, and old and new values.">Os dados do evento conterão o identificador de propriedade de dependência de interesse, os metadados para o tipo de propriedade e valores novos e antigos.</param>
    </member>
    <member name="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)">
      <summary vsli:raw="Returns the local value of a dependency property, if it exists.">Retorna o valor local de uma propriedade de dependência, local, se houver.</summary>
      <param name="dp" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; identifier of the property to retrieve the value for.">O identificador <see cref="T:System.Windows.DependencyProperty" /> da propriedade para o qual o valor será recuperado.</param>
      <returns vsli:raw="Returns the local value, or returns the sentinel value &lt;see cref=&quot;F:System.Windows.DependencyProperty.UnsetValue&quot; /&gt; if no local value is set.">Retorna o valor local ou o valor de sentinela <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> se nenhum valor local é definido.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)">
      <summary vsli:raw="Sets the value of a dependency property without changing its value source.">Define o valor da propriedade de dependência sem alterar a origem do valor.</summary>
      <param name="dp" vsli:raw="The identifier of the dependency property to set.">O identificador da propriedade de dependência a ser definida.</param>
      <param name="value" vsli:raw="The new local value.">O novo valor local.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Attempted to modify a read-only dependency property, or a property on a sealed &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">Houve uma tentativa de modificar uma propriedade de dependência somente leitura ou uma propriedade em um <see cref="T:System.Windows.DependencyObject" /> lacrado.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; was not the correct type as registered for the &lt;paramref name=&quot;dp&quot; /&gt; property.">
        <paramref name="value" /> não era do tipo correto conforme registrado para a propriedade <paramref name="dp" />.</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)">
      <summary vsli:raw="Sets the local value of a dependency property, specified by its dependency property identifier.">Define o valor local de uma propriedade de dependência, especificada pelo identificador da propriedade de dependência.</summary>
      <param name="dp" vsli:raw="The identifier of the dependency property to set.">O identificador da propriedade de dependência a ser definida.</param>
      <param name="value" vsli:raw="The new local value.">O novo valor local.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Attempted to modify a read-only dependency property, or a property on a sealed &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">Houve uma tentativa de modificar uma propriedade de dependência somente leitura ou uma propriedade em um <see cref="T:System.Windows.DependencyObject" /> lacrado.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; was not the correct type as registered for the &lt;paramref name=&quot;dp&quot; /&gt; property.">
        <paramref name="value" /> não era do tipo correto conforme registrado para a propriedade <paramref name="dp" />.</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)">
      <summary vsli:raw="Sets the local value of a read-only dependency property, specified by the &lt;see cref=&quot;T:System.Windows.DependencyPropertyKey&quot; /&gt; identifier of the dependency property.">Define o valor de uma propriedade de dependência somente leitura, especificada pelo identificador <see cref="T:System.Windows.DependencyPropertyKey" /> da propriedade de dependência.</summary>
      <param name="key" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyPropertyKey&quot; /&gt; identifier of the property to set.">O identificador <see cref="T:System.Windows.DependencyPropertyKey" /> da propriedade a ser definido.</param>
      <param name="value" vsli:raw="The new local value.">O novo valor local.</param>
    </member>
    <member name="M:System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)">
      <summary vsli:raw="Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.">Retorna um valor que indica se os processos de serialização devem serializar o valor da propriedade de dependência fornecida.</summary>
      <param name="dp" vsli:raw="The identifier for the dependency property that should be serialized.">O identificador da propriedade de dependência que deve ser serializado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the dependency property that is supplied should be value-serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a propriedade de dependência que é fornecida deve ser serializada por valor; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.DependencyObjectType">
      <summary vsli:raw="Implements an underlying type cache for all &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; derived types.">Implementa um cache do tipo subjacente para todos os tipos derivados <see cref="T:System.Windows.DependencyObject" />.</summary>
    </member>
    <member name="P:System.Windows.DependencyObjectType.BaseType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; of the immediate base class of the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt;.">Obtém o <see cref="T:System.Windows.DependencyObjectType" /> da classe base imediata do <see cref="T:System.Windows.DependencyObjectType" /> atual.</summary>
      <returns vsli:raw="The type of the base class.">O tipo da classe base.</returns>
    </member>
    <member name="M:System.Windows.DependencyObjectType.FromSystemType(System.Type)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; that represents a given system (CLR) type.">Retorna um <see cref="T:System.Windows.DependencyObjectType" /> que representa determinado tipo (CLR) do sistema.</summary>
      <param name="systemType" vsli:raw="The system (CLR) type to convert.">O tipo (CLR) do sistema a ser convertido.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; that represents the system (CLR) type.">Um <see cref="T:System.Windows.DependencyObjectType" /> que representa o tipo (CLR) do sistema.</returns>
    </member>
    <member name="M:System.Windows.DependencyObjectType.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt;.">Retorna o código hash para este <see cref="T:System.Windows.DependencyObjectType" />.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Um código de hash do inteiro assinado de 32 bits.</returns>
    </member>
    <member name="P:System.Windows.DependencyObjectType.Id">
      <summary vsli:raw="Gets a zero-based unique identifier for constant-time array lookup operations.">Obtém um identificador exclusivo de base zero para operações de pesquisa de matriz de tempo constante.</summary>
      <returns vsli:raw="An internal identifier.">Um identificador interno.</returns>
    </member>
    <member name="M:System.Windows.DependencyObjectType.IsInstanceOfType(System.Windows.DependencyObject)">
      <summary vsli:raw="Determines whether the specified object is an instance of the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt;.">Determina se o objeto especificado é uma instância do <see cref="T:System.Windows.DependencyObjectType" /> atual.</summary>
      <param name="dependencyObject" vsli:raw="The object to compare with the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt;.">O objeto a ser comparado com o <see cref="T:System.Windows.DependencyObjectType" /> atual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the class represented by the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; is in the inheritance hierarchy of the &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; passed as &lt;paramref name=&quot;d&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a classe representado pelo <see cref="T:System.Windows.DependencyObjectType" /> atual estiver na hierarquia de herança do <see cref="T:System.Windows.DependencyObject" /> passado como <paramref name="d" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyObjectType.IsSubclassOf(System.Windows.DependencyObjectType)">
      <summary vsli:raw="Determines whether the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; derives from the specified &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt;.">Determina se o <see cref="T:System.Windows.DependencyObjectType" /> atual deriva do <see cref="T:System.Windows.DependencyObjectType" /> especificado.</summary>
      <param name="dependencyObjectType" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; to compare.">O <see cref="T:System.Windows.DependencyObjectType" /> de comparação.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;dependencyObjectType&quot; /&gt; parameter and the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; represent types of classes, and the class represented by the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; derives from the class represented by &lt;paramref name=&quot;dependencyObjectType&quot; /&gt;. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. This method also returns &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;dependencyObjectType&quot; /&gt; and the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; represent the same class.">
        <see langword="true" /> se o parâmetro <paramref name="dependencyObjectType" /> e o <see cref="T:System.Windows.DependencyObjectType" /> atual representarem os tipos de classes e a classe representada pelo <see cref="T:System.Windows.DependencyObjectType" /> atual é derivada da classe representada por <paramref name="dependencyObjectType" />. Caso contrário, <see langword="false" />. Esse método também retornará <see langword="false" /> se <paramref name="dependencyObjectType" /> e o <see cref="T:System.Windows.DependencyObjectType" /> atual representarem a mesma classe.</returns>
    </member>
    <member name="P:System.Windows.DependencyObjectType.Name">
      <summary vsli:raw="Gets the name of the represented common language runtime (CLR) system type.">Obtém o nome do tipo de sistema CLR (Common Language Runtime) representado.</summary>
      <returns vsli:raw="The name of the represented CLR system type.">O nome do tipo de CLR sistema representado.</returns>
    </member>
    <member name="P:System.Windows.DependencyObjectType.SystemType">
      <summary vsli:raw="Gets the common language runtime (CLR) system type represented by this &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt;.">Obtém o tipo de sistema CLR (Common Language Runtime) representado por este <see cref="T:System.Windows.DependencyObjectType" />.</summary>
      <returns vsli:raw="The CLR system type represented by this &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt;.">O CLR tipo de sistema representado por <see cref="T:System.Windows.DependencyObjectType" />isso.</returns>
    </member>
    <member name="T:System.Windows.DependencyProperty">
      <summary vsli:raw="Represents a property that can be set through methods such as, styling, data binding, animation, and inheritance.">Representa uma propriedade que pode ser definida por meio de métodos como estilos, vinculação de dados, animação e herança.</summary>
    </member>
    <member name="M:System.Windows.DependencyProperty.AddOwner(System.Type)">
      <summary vsli:raw="Adds another type as an owner of a dependency property that has already been registered.">Adiciona outro tipo como um proprietário de uma propriedade de dependência que já foi registrada.</summary>
      <param name="ownerType" vsli:raw="The type to add as an owner of this dependency property.">O tipo a ser adicionado como proprietário desta propriedade de dependência.</param>
      <returns vsli:raw="A reference to the original &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; identifier that identifies the dependency property. This identifier should be exposed by the adding class as a &lt;see langword=&quot;public static readonly&quot; /&gt; field.">Uma referência ao identificador <see cref="T:System.Windows.DependencyProperty" /> original que identifica a propriedade da dependência. Esse identificador deve ser exposto adicionando a classe como um campo <see langword="public static readonly" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.AddOwner(System.Type,System.Windows.PropertyMetadata)">
      <summary vsli:raw="Adds another type as an owner of a dependency property that has already been registered, providing dependency property metadata for the dependency property as it will exist on the provided owner type.">Adiciona outro tipo como um proprietário de uma propriedade de dependência que já foi registrada, fornecendo metadados de propriedade de dependência para a propriedade de dependência como ela existe no tipo do proprietário fornecido.</summary>
      <param name="ownerType" vsli:raw="The type to add as owner of this dependency property.">O tipo a ser adicionado como proprietário desta propriedade de dependência.</param>
      <param name="typeMetadata" vsli:raw="The metadata that qualifies the dependency property as it exists on the provided type.">Os metadados que qualificam a propriedade de dependência como ela existe no tipo fornecido.</param>
      <returns vsli:raw="A reference to the original &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; identifier that identifies the dependency property. This identifier should be exposed by the adding class as a &lt;see langword=&quot;public static readonly&quot; /&gt; field.">Uma referência ao identificador <see cref="T:System.Windows.DependencyProperty" /> original que identifica a propriedade da dependência. Esse identificador deve ser exposto adicionando a classe como um campo <see langword="public static readonly" />.</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.DefaultMetadata">
      <summary vsli:raw="Gets the default metadata of the dependency property.">Obtém os metadados padrão da propriedade de dependência.</summary>
      <returns vsli:raw="The default metadata of the dependency property.">Os metadados padrão da propriedade de dependência.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.GetHashCode">
      <summary vsli:raw="Returns a hash code for this &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt;.">Retorna um código hash para este <see cref="T:System.Windows.DependencyProperty" />.</summary>
      <returns vsli:raw="The hash code for this &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt;.">O código hash deste <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.GetMetadata(System.Type)">
      <summary vsli:raw="Returns the metadata for this dependency property as it exists on a specified existing type.">Retorna os metadados para essa propriedade de dependência uma vez que ela existe em um tipo existente especificado.</summary>
      <param name="forType" vsli:raw="The specific type from which to retrieve the dependency property metadata.">O tipo específico do qual recuperar os metadados de propriedade de dependência.</param>
      <returns vsli:raw="A property metadata object.">Um objeto de metadados de propriedade.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.GetMetadata(System.Windows.DependencyObject)">
      <summary vsli:raw="Returns the metadata for this dependency property as it exists on the specified object instance.">Retorna os metadados para essa propriedade de dependência como ela existe na instância do objeto especificado.</summary>
      <param name="dependencyObject" vsli:raw="A dependency object that is checked for type, to determine which type-specific version of the dependency property the metadata should come from.">Um objeto de dependência que é verificado quanto ao tipo para determinar qual versão de tipo específico da propriedade de dependência os metadados devem vir.</param>
      <returns vsli:raw="A property metadata object.">Um objeto de metadados de propriedade.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.GetMetadata(System.Windows.DependencyObjectType)">
      <summary vsli:raw="Returns the metadata for this dependency property as it exists on a specified type.">Retorna os metadados para essa propriedade de dependência como ela existe em um tipo especificado.</summary>
      <param name="dependencyObjectType" vsli:raw="A specific object that records the dependency object type from which the dependency property metadata is desired.">Um objeto específico que registra o tipo de objeto de dependência da qual os metadados de propriedade de dependência é desejado.</param>
      <returns vsli:raw="A property metadata object.">Um objeto de metadados de propriedade.</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.GlobalIndex">
      <summary vsli:raw="Gets an internally generated value that uniquely identifies the dependency property.">Obtém um valor gerado internamente que identifica exclusivamente a propriedade de dependência.</summary>
      <returns vsli:raw="A unique numeric identifier.">Um identificador numérico exclusivo.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.IsValidType(System.Object)">
      <summary vsli:raw="Determines whether a specified value is acceptable for this dependency property's type, as checked against the property type provided in the original dependency property registration.">Determina se um valor especificado é aceitável para o tipo desta propriedade de dependência, conforme verificado em relação ao tipo de propriedade fornecido no registro de propriedade de dependência original.</summary>
      <param name="value" vsli:raw="The value to check.">O valor a ser verificado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified value is the registered property type or an acceptable derived type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o valor especificado é o tipo de propriedade registrada ou um tipo derivado aceitável; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.IsValidValue(System.Object)">
      <summary vsli:raw="Determines whether the provided value is accepted for the type of property through basic type checking, and also potentially if it is within the allowed range of values for that type.">Determina se o valor fornecido é aceito para o tipo de propriedade por meio de verificação de tipo básica e também potencialmente se ele está dentro do intervalo permitido de valores para esse tipo.</summary>
      <param name="value" vsli:raw="The value to check.">O valor a ser verificado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value is acceptable and is of the correct type or a derived type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o valor é aceitável e é do tipo correto ou um tipo derivado; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.Name">
      <summary vsli:raw="Gets the name of the dependency property.">Obtém o nome da propriedade de dependência.</summary>
      <returns vsli:raw="The name of the property.">O nome da propriedade.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.OverrideMetadata(System.Type,System.Windows.PropertyMetadata)">
      <summary vsli:raw="Specifies alternate metadata for this dependency property when it is present on instances of a specified type, overriding the metadata that existed for the dependency property as it was inherited from base types.">Especifica os metadados alternativos para essa propriedade de dependência quando está presente em instâncias de um tipo especificado, substituindo os metadados existentes para a propriedade de dependência conforme ela foi herdada dos tipos base.</summary>
      <param name="forType" vsli:raw="The type where this dependency property is inherited and where the provided alternate metadata will be applied.">O tipo no qual essa propriedade de dependência é herdada e os metadados alternativos fornecidos serão aplicados.</param>
      <param name="typeMetadata" vsli:raw="The metadata to apply to the dependency property on the overriding type.">Os metadados a serem aplicados à propriedade de dependência no tipo de substituição.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to override metadata on a read-only dependency property (that operation cannot be done using this signature).">Foi feita uma tentativa de substituir metadados em uma propriedade de dependência somente leitura (essa operação não pode ser feita usando essa assinatura).</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Metadata was already established for the dependency property as it exists on the provided type.">Os metadados já foram estabelecidos para a propriedade de dependência como ela existe no tipo fornecido.</exception>
    </member>
    <member name="M:System.Windows.DependencyProperty.OverrideMetadata(System.Type,System.Windows.PropertyMetadata,System.Windows.DependencyPropertyKey)">
      <summary vsli:raw="Supplies alternate metadata for a read-only dependency property when it is present on instances of a specified type, overriding the metadata that was provided in the initial dependency property registration. You must pass the &lt;see cref=&quot;T:System.Windows.DependencyPropertyKey&quot; /&gt; for the read-only dependency property to avoid raising an exception.">Fornece os metadados alternativos para uma propriedade de dependência somente leitura quando ela existe em instâncias de um tipo especificado, substituindo os metadados que foram fornecidos no registro de propriedade de dependência inicial. Você deve passar o <see cref="T:System.Windows.DependencyPropertyKey" /> para a propriedade de dependência somente leitura para evitar gerar uma exceção.</summary>
      <param name="forType" vsli:raw="The type where this dependency property is inherited and where the provided alternate metadata will be applied.">O tipo no qual essa propriedade de dependência é herdada e os metadados alternativos fornecidos serão aplicados.</param>
      <param name="typeMetadata" vsli:raw="The metadata to apply to the dependency property on the overriding type.">Os metadados a serem aplicados à propriedade de dependência no tipo de substituição.</param>
      <param name="key" vsli:raw="The access key for a read-only dependency property.">A chave de acesso para uma propriedade de dependência somente leitura.</param>
    </member>
    <member name="P:System.Windows.DependencyProperty.OwnerType">
      <summary vsli:raw="Gets the type of the object that registered the dependency property with the property system, or added itself as owner of the property.">Obtém o tipo do objeto que registrou a propriedade de dependência com o sistema de propriedade ou que adicionou a si próprio como proprietário da propriedade.</summary>
      <returns vsli:raw="The type of the object that registered the property or added itself as owner of the property.">O tipo do objeto que registrou a propriedade ou que adicionou a si próprio como proprietário da propriedade.</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.PropertyType">
      <summary vsli:raw="Gets the type that the dependency property uses for its value.">Obtém o tipo que a propriedade de dependência usa para seu valor.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the property value.">O <see cref="T:System.Type" /> do valor da propriedade.</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.ReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the dependency property identified by this &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; instance is a read-only dependency property.">Obtém um valor que indica se a propriedade de dependência identificada por essa instância <see cref="T:System.Windows.DependencyProperty" /> é uma propriedade de dependência somente leitura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the dependency property is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />se a propriedade de dependência for somente leitura; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.Register(System.String,System.Type,System.Type)">
      <summary vsli:raw="Registers a dependency property with the specified property name, property type, and owner type.">Registra uma propriedade de dependência com o nome de propriedade, tipo de propriedade e tipo de proprietário especificados.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register. The name must be unique within the registration namespace of the owner type.">O nome da propriedade de dependência a ser registrada. O nome deve ser exclusivo dentro do namespace de registro do tipo proprietário.</param>
      <param name="propertyType" vsli:raw="The type of the property.">O tipo da propriedade.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">O tipo de proprietário que está registrando a propriedade de dependência.</param>
      <returns vsli:raw="A dependency property identifier that should be used to set the value of a &lt;see langword=&quot;public static readonly&quot; /&gt; field in your class. That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.">Um identificador de propriedade de dependência que deve ser usado para definir o valor de um campo <see langword="public static readonly" /> em sua classe. Em seguida, esse identificador será usado para referenciar a propriedade de dependência mais tarde, para operações como a configuração do valor de forma programática ou a obtenção de metadados.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.Register(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
      <summary vsli:raw="Registers a dependency property with the specified property name, property type, owner type, and property metadata.">Registra uma propriedade de dependência com o nome de propriedade, tipo de propriedade, tipo de proprietário e metadados de propriedade especificados.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">O nome da propriedade de dependência a ser registrada.</param>
      <param name="propertyType" vsli:raw="The type of the property.">O tipo da propriedade.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">O tipo de proprietário que está registrando a propriedade de dependência.</param>
      <param name="typeMetadata" vsli:raw="Property metadata for the dependency property.">Os metadados de propriedade da propriedade de dependência.</param>
      <returns vsli:raw="A dependency property identifier that should be used to set the value of a &lt;see langword=&quot;public static readonly&quot; /&gt; field in your class. That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.">Um identificador de propriedade de dependência que deve ser usado para definir o valor de um campo <see langword="public static readonly" /> em sua classe. Em seguida, esse identificador será usado para referenciar a propriedade de dependência mais tarde, para operações como a configuração do valor de forma programática ou a obtenção de metadados.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.Register(System.String,System.Type,System.Type,System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
      <summary vsli:raw="Registers a dependency property with the specified property name, property type, owner type, property metadata, and a value validation callback for the property.">Registra uma propriedade de dependência com o nome da propriedade, tipo de propriedade, tipo de proprietário, metadados de propriedade especificados e um retorno de chamada de validação do valor da propriedade.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">O nome da propriedade de dependência a ser registrada.</param>
      <param name="propertyType" vsli:raw="The type of the property.">O tipo da propriedade.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">O tipo de proprietário que está registrando a propriedade de dependência.</param>
      <param name="typeMetadata" vsli:raw="Property metadata for the dependency property.">Os metadados de propriedade da propriedade de dependência.</param>
      <param name="validateValueCallback" vsli:raw="A reference to a callback that should perform any custom validation of the dependency property value beyond typical type validation.">Uma referência a um retorno de chamada que deve executar uma validação personalizada do valor da propriedade de dependência além da validação de tipo comum.</param>
      <returns vsli:raw="A dependency property identifier that should be used to set the value of a &lt;see langword=&quot;public static readonly&quot; /&gt; field in your class. That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.">Um identificador de propriedade de dependência que deve ser usado para definir o valor de um campo <see langword="public static readonly" /> em sua classe. Em seguida, esse identificador será usado para referenciar a propriedade de dependência mais tarde, para operações como a configuração do valor de forma programática ou a obtenção de metadados.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type)">
      <summary vsli:raw="Registers an attached property with the specified property name, property type, and owner type.">Registra uma propriedade anexada com o nome de propriedade, o tipo de propriedade e o tipo de proprietário especificados.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">O nome da propriedade de dependência a ser registrada.</param>
      <param name="propertyType" vsli:raw="The type of the property.">O tipo da propriedade.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">O tipo de proprietário que está registrando a propriedade de dependência.</param>
      <returns vsli:raw="A dependency property identifier that should be used to set the value of a &lt;see langword=&quot;public static readonly&quot; /&gt; field in your class. That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.">Um identificador de propriedade de dependência que deve ser usado para definir o valor de um campo <see langword="public static readonly" /> em sua classe. Em seguida, esse identificador será usado para referenciar a propriedade de dependência mais tarde, para operações como a configuração do valor de forma programática ou a obtenção de metadados.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
      <summary vsli:raw="Registers an attached property with the specified property name, property type, owner type, and property metadata.">Registra uma propriedade anexada com o nome de propriedade, tipo de propriedade, tipo de proprietário e metadados de propriedade especificados.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">O nome da propriedade de dependência a ser registrada.</param>
      <param name="propertyType" vsli:raw="The type of the property.">O tipo da propriedade.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">O tipo de proprietário que está registrando a propriedade de dependência.</param>
      <param name="defaultMetadata" vsli:raw="Property metadata for the dependency property. This can include the default value as well as other characteristics.">Os metadados de propriedade da propriedade de dependência. Isso pode incluir o valor padrão, bem como outras características.</param>
      <returns vsli:raw="A dependency property identifier that should be used to set the value of a &lt;see langword=&quot;public static readonly&quot; /&gt; field in your class. That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.">Um identificador de propriedade de dependência que deve ser usado para definir o valor de um campo <see langword="public static readonly" /> em sua classe. Em seguida, esse identificador será usado para referenciar a propriedade de dependência mais tarde, para operações como a configuração do valor de forma programática ou a obtenção de metadados.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type,System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
      <summary vsli:raw="Registers an attached property with the specified property type, owner type, property metadata, and value validation callback for the property.">Registra uma propriedade anexada com o tipo de propriedade, o tipo de proprietário, os metadados de propriedade e o retorno de chamada de validação de valor da propriedade especificados.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">O nome da propriedade de dependência a ser registrada.</param>
      <param name="propertyType" vsli:raw="The type of the property.">O tipo da propriedade.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">O tipo de proprietário que está registrando a propriedade de dependência.</param>
      <param name="defaultMetadata" vsli:raw="Property metadata for the dependency property. This can include the default value as well as other characteristics.">Os metadados de propriedade da propriedade de dependência. Isso pode incluir o valor padrão, bem como outras características.</param>
      <param name="validateValueCallback" vsli:raw="A reference to a callback that should perform any custom validation of the dependency property value beyond typical type validation.">Uma referência a um retorno de chamada que deve executar uma validação personalizada do valor da propriedade de dependência além da validação de tipo comum.</param>
      <returns vsli:raw="A dependency property identifier that should be used to set the value of a &lt;see langword=&quot;public static readonly&quot; /&gt; field in your class. That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.">Um identificador de propriedade de dependência que deve ser usado para definir o valor de um campo <see langword="public static readonly" /> em sua classe. Em seguida, esse identificador será usado para referenciar a propriedade de dependência mais tarde, para operações como a configuração do valor de forma programática ou a obtenção de metadados.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttachedReadOnly(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
      <summary vsli:raw="Registers a read-only attached property, with the specified property type, owner type, and property metadata.">Registra uma propriedade anexada somente leitura com o tipo de propriedade, tipo de proprietário e metadados de propriedade especificados.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">O nome da propriedade de dependência a ser registrada.</param>
      <param name="propertyType" vsli:raw="The type of the property.">O tipo da propriedade.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">O tipo de proprietário que está registrando a propriedade de dependência.</param>
      <param name="defaultMetadata" vsli:raw="Property metadata for the dependency property.">Os metadados de propriedade da propriedade de dependência.</param>
      <returns vsli:raw="A dependency property key that should be used to set the value of a static read-only field in your class, which is then used to reference the dependency property later.">Uma chave de propriedade de dependência que deve ser usada para definir o valor de um campo estático somente leitura na classe, que é então usado para referenciar à propriedade de dependência posteriormente.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttachedReadOnly(System.String,System.Type,System.Type,System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
      <summary vsli:raw="Registers a read-only attached property, with the specified property type, owner type, property metadata, and a validation callback.">Registra uma propriedade anexada somente leitura com o tipo de propriedade, tipo de proprietário, metadados de propriedade e retorno de chamada especificados.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">O nome da propriedade de dependência a ser registrada.</param>
      <param name="propertyType" vsli:raw="The type of the property.">O tipo da propriedade.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">O tipo de proprietário que está registrando a propriedade de dependência.</param>
      <param name="defaultMetadata" vsli:raw="Property metadata for the dependency property.">Os metadados de propriedade da propriedade de dependência.</param>
      <param name="validateValueCallback" vsli:raw="A reference to a user-created callback that should perform any custom validation of the dependency property value beyond typical type validation.">Uma referência a um retorno de chamada criado pelo usuário que deve executar uma validação personalizada do valor da propriedade de dependência além da validação de tipo comum.</param>
      <returns vsli:raw="A dependency property key that should be used to set the value of a static read-only field in your class, which is then used to reference the dependency property.">Uma chave de propriedade de dependência que deve ser usada para definir o valor de um campo somente leitura estático na sua classe, que então é usado para fazer referência à propriedade de dependência.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterReadOnly(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
      <summary vsli:raw="Registers a read-only dependency property, with the specified property type, owner type, and property metadata.">Registra uma propriedade de dependência somente leitura com o tipo da propriedade, tipo de proprietário e metadados de propriedade especificados.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">O nome da propriedade de dependência a ser registrada.</param>
      <param name="propertyType" vsli:raw="The type of the property.">O tipo da propriedade.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">O tipo de proprietário que está registrando a propriedade de dependência.</param>
      <param name="typeMetadata" vsli:raw="Property metadata for the dependency property.">Os metadados de propriedade da propriedade de dependência.</param>
      <returns vsli:raw="A dependency property key that should be used to set the value of a static read-only field in your class, which is then used to reference the dependency property.">Uma chave de propriedade de dependência que deve ser usada para definir o valor de um campo somente leitura estático na sua classe, que então é usado para fazer referência à propriedade de dependência.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterReadOnly(System.String,System.Type,System.Type,System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
      <summary vsli:raw="Registers a read-only dependency property, with the specified property type, owner type, property metadata, and a validation callback.">Registra uma propriedade de dependência somente leitura com o tipo de propriedade, tipo de proprietário, metadados de propriedade e retorno de chamada especificados.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">O nome da propriedade de dependência a ser registrada.</param>
      <param name="propertyType" vsli:raw="The type of the property.">O tipo da propriedade.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">O tipo de proprietário que está registrando a propriedade de dependência.</param>
      <param name="typeMetadata" vsli:raw="Property metadata for the dependency property.">Os metadados de propriedade da propriedade de dependência.</param>
      <param name="validateValueCallback" vsli:raw="A reference to a user-created callback that should perform any custom validation of the dependency property value beyond typical type validation.">Uma referência a um retorno de chamada criado pelo usuário que deve executar uma validação personalizada do valor da propriedade de dependência além da validação de tipo comum.</param>
      <returns vsli:raw="A dependency property key that should be used to set the value of a static read-only field in your class, which is then used to reference the dependency property later.">Uma chave de propriedade de dependência que deve ser usada para definir o valor de um campo estático somente leitura na classe, que é então usado para referenciar à propriedade de dependência posteriormente.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.ToString">
      <summary vsli:raw="Returns the string representation of the dependency property.">Retorna a representação de cadeia de caracteres da propriedade de dependência.</summary>
      <returns vsli:raw="The string representation of the dependency property.">A representação de cadeia de caracteres da propriedade de dependência.</returns>
    </member>
    <member name="F:System.Windows.DependencyProperty.UnsetValue">
      <summary vsli:raw="Specifies a static value that is used by the WPF property system rather than &lt;see langword=&quot;null&quot; /&gt; to indicate that the property exists, but does not have its value set by the property system.">Especifica um valor estático que é usado pelo sistema da propriedade WPF em vez de <see langword="null" /> para indicar que a propriedade existe, mas não tem seu valor definido pelo sistema da propriedade.</summary>
    </member>
    <member name="P:System.Windows.DependencyProperty.ValidateValueCallback">
      <summary vsli:raw="Gets the value validation callback for the dependency property.">Obtém o retorno de chamada de validação do valor da propriedade de dependência.</summary>
      <returns vsli:raw="The value validation callback for this dependency property, as provided for the &lt;paramref name=&quot;validateValueCallback&quot; /&gt; parameter in the original dependency property registration.">O retorno de chamada de validação de valor para essa propriedade de dependência, conforme fornecido para o parâmetro <paramref name="validateValueCallback" /> no registro de propriedade de dependência original.</returns>
    </member>
    <member name="T:System.Windows.DependencyPropertyChangedEventArgs">
      <summary vsli:raw="Provides data for various property changed events. Typically these events report effective value changes in the value of a read-only dependency property. Another usage is as part of a &lt;see cref=&quot;T:System.Windows.PropertyChangedCallback&quot; /&gt; implementation.">Fornece dados para vários eventos alterados pela propriedade. Normalmente, esses eventos relatam alterações de valor efetivo no valor de uma propriedade de dependência somente leitura. Outro uso é como parte de uma implementação <see cref="T:System.Windows.PropertyChangedCallback" />.</summary>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.#ctor(System.Windows.DependencyProperty,System.Object,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</summary>
      <param name="property" vsli:raw="The identifier for the dependency property that changed.">O identificador da propriedade de dependência foi alterado.</param>
      <param name="oldValue" vsli:raw="The value of the property before the change reported by the relevant event or state change.">O valor da propriedade antes da alteração relatada pelo evento relevante ou alteração de estado.</param>
      <param name="newValue" vsli:raw="The value of the property after the change reported by the relevant event or state change.">O valor da propriedade após a alteração relatada pelo evento relevante ou alteração de estado.</param>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Object)">
      <summary vsli:raw="Determines whether the provided object is equivalent to the current &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt;.">Determina se o objeto fornecido é equivalente ao <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> atual.</summary>
      <param name="obj" vsli:raw="The object to compare to the current &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt;.">O objeto a ser comparado ao <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> atual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the provided object is equivalent to the current &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o objeto fornecido for equivalente ao <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary vsli:raw="Determines whether the provided &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; is equivalent to the current &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt;.">Determina se o <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> fornecido é equivalente ao <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> atual.</summary>
      <param name="args" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; to compare to the current &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt;.">O <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> a ser comparado ao <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> atual</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the provided &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; is equivalent to the current &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> fornecido for equivalente ao <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.GetHashCode">
      <summary vsli:raw="Gets a hash code  for this &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt;.">Obtém o código hash para esse <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</summary>
      <returns vsli:raw="A signed 32-bit integer hash code.">Um código hash do inteiro com sinal de 32 bits.</returns>
    </member>
    <member name="P:System.Windows.DependencyPropertyChangedEventArgs.NewValue">
      <summary vsli:raw="Gets the value of the property after the change.">Obtém o valor da propriedade depois da alteração.</summary>
      <returns vsli:raw="The property value after the change.">O valor da propriedade depois da alteração.</returns>
    </member>
    <member name="P:System.Windows.DependencyPropertyChangedEventArgs.OldValue">
      <summary vsli:raw="Gets the value of the property before the change.">Obtém o valor da propriedade antes da alteração.</summary>
      <returns vsli:raw="The property value before the change.">O valor da propriedade antes da alteração.</returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.op_Equality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; objects have the same value.">Determina se dois objetos <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> especificados têm o mesmo valor.</summary>
      <param name="left" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; to compare.">O primeiro <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> a ser comparado.</param>
      <param name="right" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; to compare.">O segundo <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> a ser comparado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; instances are equivalent; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se as duas instâncias <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> forem equivalentes, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.op_Inequality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; objects are different.">Determina se dois objetos <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> especificados são diferentes.</summary>
      <param name="left" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; to compare.">O primeiro <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> a ser comparado.</param>
      <param name="right" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; to compare.">O segundo <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> a ser comparado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; instances are different; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se as duas instâncias <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> forem diferentes; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.DependencyPropertyChangedEventArgs.Property">
      <summary vsli:raw="Gets the identifier for the dependency property where the value change occurred.">Obtém o identificador para a propriedade de dependência em que ocorreu a alteração de valor.</summary>
      <returns vsli:raw="The identifier field of the dependency property where the value change occurred.">O campo identificador da propriedade de dependência em que ocorreu a alteração do valor.</returns>
    </member>
    <member name="T:System.Windows.DependencyPropertyChangedEventHandler">
      <summary vsli:raw="Represents the method that will handle events raised when a &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; is changed on a particular &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; implementation.">Representa o método que manipulará os eventos gerados quando um <see cref="T:System.Windows.DependencyProperty" /> for alterado em uma implementação <see cref="T:System.Windows.DependencyObject" /> específica.</summary>
      <param name="sender" vsli:raw="The source of the event.">A fonte do evento.</param>
      <param name="e" vsli:raw="The event data.">Os dados do evento.</param>
    </member>
    <member name="T:System.Windows.DependencyPropertyKey">
      <summary vsli:raw="Provides a dependency property identifier for limited write access to a read-only dependency property.">Fornece um identificador de propriedade de dependência para acesso de gravação limitado a uma propriedade de dependência somente leitura.</summary>
    </member>
    <member name="P:System.Windows.DependencyPropertyKey.DependencyProperty">
      <summary vsli:raw="Gets the dependency property identifier associated with this specialized read-only dependency property identifier.">Obtém o identificador de propriedade de dependência associado a este identificador de propriedade de dependência somente leitura especializado.</summary>
      <returns vsli:raw="The relevant dependency property identifier.">O identificador de propriedade de dependência relevante.</returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyKey.OverrideMetadata(System.Type,System.Windows.PropertyMetadata)">
      <summary vsli:raw="Overrides the metadata of a read-only dependency property that is represented by this dependency property identifier.">Substitui os metadados de uma propriedade de dependência somente leitura que é representada por esse identificador de propriedade de dependência.</summary>
      <param name="forType" vsli:raw="The type on which this dependency property exists and metadata should be overridden.">O tipo no qual essa propriedade de dependência existe e os metadados devem ser substituídos.</param>
      <param name="typeMetadata" vsli:raw="Metadata supplied for this type.">Metadados fornecidos para esse tipo.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Attempted metadata override on a read-write dependency property (cannot be done using this signature).">Ocorreu uma tentativa de substituir os metadados em uma propriedade de dependência de leitura/gravação (não pode ser feita usando essa assinatura).</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Metadata was already established for the property as it exists on the provided type.">Os metadados já foram estabelecidos para a propriedade como ela existe no tipo fornecido.</exception>
    </member>
    <member name="T:System.Windows.Expression">
      <summary vsli:raw="This type supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.">Este tipo é compatível com a infraestrutura do WPF (Windows Presentation Foundation) e não se destina a ser usado diretamente no código.</summary>
    </member>
    <member name="T:System.Windows.ExpressionConverter">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.Windows.Expression&quot; /&gt; to and from other types.">Converte instâncias de <see cref="T:System.Windows.Expression" /> para e de outros tipos.</summary>
    </member>
    <member name="M:System.Windows.ExpressionConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.ExpressionConverter&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.ExpressionConverter" />.</summary>
    </member>
    <member name="M:System.Windows.ExpressionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Returns whether this converter can convert from a source object to an &lt;see cref=&quot;T:System.Windows.Expression&quot; /&gt; object.">Retorna se este conversor pode converter de um objeto de origem para um objeto <see cref="T:System.Windows.Expression" />.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that provides a format context.">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que fornece um contexto de formato.</param>
      <param name="sourceType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the type you wish to convert from.">Um <see cref="T:System.Type" /> que representa o tipo do qual você deseja converter.</param>
      <returns vsli:raw="Always &lt;see langword=&quot;false&quot; /&gt;.">Sempre <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.ExpressionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Returns whether this converter can convert an &lt;see cref=&quot;T:System.Windows.Expression&quot; /&gt; object to a specific destination type.">Retorna se este conversor pode converter um objeto <see cref="T:System.Windows.Expression" /> em um tipo de destino específico.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that provides a format context.">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que fornece um contexto de formato.</param>
      <param name="destinationType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the type you wish to convert to.">Um <see cref="T:System.Type" /> que representa o tipo no qual você deseja converter.</param>
      <returns vsli:raw="Always &lt;see langword=&quot;false&quot; /&gt;.">Sempre <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.ExpressionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Converts the provided value to the &lt;see cref=&quot;T:System.Windows.Expression&quot; /&gt; type.">Converte o valor fornecido no tipo <see cref="T:System.Windows.Expression" />.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that provides a format context.">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que fornece um contexto de formato.</param>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; to use as the current culture.">O <see cref="T:System.Globalization.CultureInfo" /> a ser usado como a cultura atual.</param>
      <param name="value" vsli:raw="The object to convert.">O objeto a ser convertido.</param>
      <returns vsli:raw="Always throws an exception and returns &lt;see langword=&quot;null&quot; /&gt;.">Sempre gera uma exceção e retorna <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.ExpressionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Converts the provided &lt;see cref=&quot;T:System.Windows.Expression&quot; /&gt; object to the specified type.">Converte o objeto <see cref="T:System.Windows.Expression" /> fornecido no tipo especificado.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that provides a format context.">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que fornece um contexto de formato.</param>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; to use as the current culture.">O <see cref="T:System.Globalization.CultureInfo" /> a ser usado como a cultura atual.</param>
      <param name="value" vsli:raw="The object to convert.">O objeto a ser convertido.</param>
      <param name="destinationType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the type you wish to convert to.">Um <see cref="T:System.Type" /> que representa o tipo no qual você deseja converter.</param>
      <returns vsli:raw="Always throws an exception and returns &lt;see langword=&quot;null&quot; /&gt;.">Sempre gera uma exceção e retorna <see langword="null" />.</returns>
    </member>
    <member name="T:System.Windows.Freezable">
      <summary vsli:raw="Defines an object that has a modifiable state and a read-only (frozen) state. Classes that derive from &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; provide detailed change notification, can be made immutable, and can clone themselves.">Define um objeto que tem um estado modificável e um estado somente leitura (congelado). Classes que derivam de <see cref="T:System.Windows.Freezable" /> fornecem notificação de alteração detalhada, podem ser transformadas em imutáveis e podem clonar a si mesmas.</summary>
    </member>
    <member name="M:System.Windows.Freezable.#ctor">
      <summary vsli:raw="Initializes a new instance of a &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; derived class.">Inicializa uma nova instância de uma classe derivada de <see cref="T:System.Windows.Freezable" />.</summary>
    </member>
    <member name="P:System.Windows.Freezable.CanFreeze">
      <summary vsli:raw="Gets a value that indicates whether the object can be made unmodifiable.">Obtém um valor que indica se o objeto pode se tornar não modificável.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current object can be made unmodifiable or is already unmodifiable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o objeto atual puder se tornar não modificável ou já for não modificável, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="E:System.Windows.Freezable.Changed">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; or an object it contains is modified.">Ocorre quando o <see cref="T:System.Windows.Freezable" /> ou um objeto nele contido é modificado.</summary>
    </member>
    <member name="M:System.Windows.Freezable.Clone">
      <summary vsli:raw="Creates a modifiable clone of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt;, making deep copies of the object's values. When copying the object's dependency properties, this method copies expressions (which might no longer resolve) but not animations or their current values.">Cria um clone modificável do <see cref="T:System.Windows.Freezable" />, fazendo cópias em profundidade dos valores do objeto. Ao copiar as propriedades de dependência do objeto, esse método copia as expressões (que talvez não possam mais ser resolvidas), mas não as animações nem seus valores atuais.</summary>
      <returns vsli:raw="A modifiable clone of the current object. The cloned object's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property is &lt;see langword=&quot;false&quot; /&gt; even if the source's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt;.">Um clone modificável do objeto atual. A propriedade <see cref="P:System.Windows.Freezable.IsFrozen" /> do objeto clonado será <see langword="false" />, mesmo se a propriedade <see cref="P:System.Windows.Freezable.IsFrozen" /> da origem for <see langword="true." /></returns>
    </member>
    <member name="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)">
      <summary vsli:raw="Makes the instance a clone (deep copy) of the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; using base (non-animated) property values.">Faz com que a instância seja um clone (cópia em profundidade) do <see cref="T:System.Windows.Freezable" /> especificado usando valores de propriedade base (não animados).</summary>
      <param name="sourceFreezable" vsli:raw="The object to clone.">O objeto a ser clonado.</param>
    </member>
    <member name="M:System.Windows.Freezable.CloneCurrentValue">
      <summary vsli:raw="Creates a modifiable clone (deep copy) of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; using its current values.">Cria um clone modificável (cópia profunda) do <see cref="T:System.Windows.Freezable" /> usando seus valores atuais.</summary>
      <returns vsli:raw="A modifiable clone of the current object. The cloned object's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property is &lt;see langword=&quot;false&quot; /&gt; even if the source's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt;.">Um clone modificável do objeto atual. A propriedade <see cref="P:System.Windows.Freezable.IsFrozen" /> do objeto clonado será <see langword="false" />, mesmo se a propriedade <see cref="P:System.Windows.Freezable.IsFrozen" /> da origem for <see langword="true." /></returns>
    </member>
    <member name="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary vsli:raw="Makes the instance a modifiable clone (deep copy) of the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; using current property values.">Torna a instância um clone modificável (cópia em profundidade) do <see cref="T:System.Windows.Freezable" /> especificado usando os valores de propriedade atuais.</summary>
      <param name="sourceFreezable" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; to be cloned.">O <see cref="T:System.Windows.Freezable" /> a ser clonado.</param>
    </member>
    <member name="M:System.Windows.Freezable.CreateInstance">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Freezable" />.</summary>
      <returns vsli:raw="The new instance.">A nova instância.</returns>
    </member>
    <member name="M:System.Windows.Freezable.CreateInstanceCore">
      <summary vsli:raw="When implemented in a derived class, creates a new instance of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; derived class.">Quando implementado em uma classe derivada, cria uma nova instância da classe derivada <see cref="T:System.Windows.Freezable" />.</summary>
      <returns vsli:raw="The new instance.">A nova instância.</returns>
    </member>
    <member name="M:System.Windows.Freezable.Freeze">
      <summary vsli:raw="Makes the current object unmodifiable and sets its &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property to &lt;see langword=&quot;true&quot; /&gt;.">Torna o objeto atual não modificável e define sua propriedade <see cref="P:System.Windows.Freezable.IsFrozen" /> para <see langword="true" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; cannot be made unmodifiable.">O <see cref="T:System.Windows.Freezable" /> não pode se tornar não modificável.</exception>
    </member>
    <member name="M:System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)">
      <summary vsli:raw="If the &lt;paramref name=&quot;isChecking&quot; /&gt; parameter is &lt;see langword=&quot;true&quot; /&gt;, this method indicates whether the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; can be made unmodifiable. If the &lt;paramref name=&quot;isChecking&quot; /&gt; parameter is &lt;see langword=&quot;false&quot; /&gt;, this method attempts to make the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; unmodifiable and indicates whether the operation succeeded.">Se o parâmetro <paramref name="isChecking" /> é <see langword="true" />, este método indica se o <see cref="T:System.Windows.Freezable" /> especificado pode ser tornado não modificável. Se o parâmetro <paramref name="isChecking" /> é <see langword="false" />, esse método tenta tornar o <see cref="T:System.Windows.Freezable" /> especificado não modificável e indica se a operação foi bem-sucedida.</summary>
      <param name="freezable" vsli:raw="The object to check or make unmodifiable. If &lt;paramref name=&quot;isChecking&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;, the object is checked to determine whether it can be made unmodifiable. If &lt;paramref name=&quot;isChecking&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;, the object is made unmodifiable, if possible.">O objeto a verificar ou tornar não modificável. Se <paramref name="isChecking" /> é <see langword="true" />, o objeto é verificado para determinar se ele pode ser tornado não modificável. Se <paramref name="isChecking" /> é <see langword="false" />, o objeto é tornado não modificável se possível.</param>
      <param name="isChecking" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to return an indication of whether the object can be frozen (without actually freezing it); &lt;see langword=&quot;false&quot; /&gt; to actually freeze the object.">
        <see langword="true" /> para retornar uma indicação de que o objeto pode ou não ser congelado (sem realmente congelá-lo); <see langword="false" /> para realmente congelar o objeto.</param>
      <returns vsli:raw="If &lt;paramref name=&quot;isChecking&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;, this method returns &lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; can be made unmodifiable, or &lt;see langword=&quot;false&quot; /&gt; if it cannot be made unmodifiable. If &lt;paramref name=&quot;isChecking&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;, this method returns &lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; is now unmodifiable, or &lt;see langword=&quot;false&quot; /&gt; if it cannot be made unmodifiable.">Se <paramref name="isChecking" /> for <see langword="true" />, esse método retornará <see langword="true" /> se o <see cref="T:System.Windows.Freezable" /> especificado puder ser transformado em não modificável ou então <see langword="false" />, se ele não puder ser transformado em não modificável. Se <paramref name="isChecking" /> for <see langword="false" />, esse método retornará <see langword="true" /> se o <see cref="T:System.Windows.Freezable" /> especificado for agora não modificável ou então <see langword="false" />, se ele não puder ser transformado em não modificável.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="When &lt;paramref name=&quot;isChecking&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;, the attempt to make &lt;paramref name=&quot;freezable&quot; /&gt; unmodifiable was unsuccessful; the object is now in an unknown state (it might be partially frozen).">Quando <paramref name="isChecking" /> é <see langword="false" />, a tentativa de tornar <paramref name="freezable" /> não modificável não teve êxito; o objeto agora está em um estado desconhecido (ele pode estar parcialmente congelado).</exception>
    </member>
    <member name="M:System.Windows.Freezable.FreezeCore(System.Boolean)">
      <summary vsli:raw="Makes the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; object unmodifiable or tests whether it can be made unmodifiable.">Torna o objeto <see cref="T:System.Windows.Freezable" /> não modificável ou testa se ele pode ser transformado em não modificável.</summary>
      <param name="isChecking" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to return an indication of whether the object can be frozen (without actually freezing it); &lt;see langword=&quot;false&quot; /&gt; to actually freeze the object.">
        <see langword="true" /> para retornar uma indicação de que o objeto pode ou não ser congelado (sem realmente congelá-lo); <see langword="false" /> para realmente congelar o objeto.</param>
      <returns vsli:raw="If &lt;paramref name=&quot;isChecking&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;, this method returns &lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; can be made unmodifiable, or &lt;see langword=&quot;false&quot; /&gt; if it cannot be made unmodifiable. If &lt;paramref name=&quot;isChecking&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;, this method returns &lt;see langword=&quot;true&quot; /&gt; if the if the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; is now unmodifiable, or &lt;see langword=&quot;false&quot; /&gt; if it cannot be made unmodifiable.">Se <paramref name="isChecking" /> for <see langword="true" />, esse método retornará <see langword="true" /> se o <see cref="T:System.Windows.Freezable" /> puder se tornar não modificável ou <see langword="false" /> se ele não puder se tornar não modificável. Se <paramref name="isChecking" /> for <see langword="false" />, esse método retornará <see langword="true" /> se o <see cref="T:System.Windows.Freezable" /> especificado for agora não modificável ou então <see langword="false" />, se ele não puder ser transformado em não modificável.</returns>
    </member>
    <member name="M:System.Windows.Freezable.GetAsFrozen">
      <summary vsli:raw="Creates a frozen copy of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt;, using base (non-animated) property values. Because the copy is frozen, any frozen sub-objects are copied by reference.">Cria uma cópia congelada o <see cref="T:System.Windows.Freezable" /> usando valores de propriedade base (não animadas). Já que a cópia está congelada, quaisquer subobjetos congelados são copiados por referência.</summary>
      <returns vsli:raw="A frozen copy of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt;. The copy's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property is set to &lt;see langword=&quot;true&quot; /&gt;.">Uma cópia congelada do <see cref="T:System.Windows.Freezable" />. A propriedade <see cref="P:System.Windows.Freezable.IsFrozen" /> da cópia está definida para <see langword="true" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; cannot be frozen because it contains expressions or animated properties.">O <see cref="T:System.Windows.Freezable" /> não pode ser congelado porque ele contém expressões ou propriedades animadas.</exception>
    </member>
    <member name="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)">
      <summary vsli:raw="Makes the instance a frozen clone of the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; using base (non-animated) property values.">Torna a instância um clone congelado do <see cref="T:System.Windows.Freezable" /> especificado usando valores de propriedade base (não animados).</summary>
      <param name="sourceFreezable" vsli:raw="The instance to copy.">A instância a ser copiada.</param>
    </member>
    <member name="M:System.Windows.Freezable.GetCurrentValueAsFrozen">
      <summary vsli:raw="Creates a frozen copy of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; using current property values. Because the copy is frozen, any frozen sub-objects are copied by reference.">Cria uma cópia congelada do <see cref="T:System.Windows.Freezable" /> usando valores de propriedade atuais. Já que a cópia está congelada, quaisquer subobjetos congelados são copiados por referência.</summary>
      <returns vsli:raw="A frozen copy of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt;. The copy's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property is set to &lt;see langword=&quot;true&quot; /&gt;.">Uma cópia congelada do <see cref="T:System.Windows.Freezable" />. A propriedade <see cref="P:System.Windows.Freezable.IsFrozen" /> da cópia está definida para <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary vsli:raw="Makes the current instance a frozen clone of the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt;. If the object has animated dependency properties, their current animated values are copied.">Torna a instância atual um clone congelado do <see cref="T:System.Windows.Freezable" /> especificado. Se o objeto tiver propriedades de dependência animadas, seus valores animados atuais serão copiados.</summary>
      <param name="sourceFreezable" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; to copy and freeze.">O <see cref="T:System.Windows.Freezable" /> a ser copiado e congelado.</param>
    </member>
    <member name="P:System.Windows.Freezable.IsFrozen">
      <summary vsli:raw="Gets a value that indicates whether the object is currently modifiable.">Obtém um valor que indica se o objeto pode ser modificado no momento.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object is frozen and cannot be modified; &lt;see langword=&quot;false&quot; /&gt; if the object can be modified.">
        <see langword="true" /> se o objeto estiver congelado e não puder ser modificado; <see langword="false" /> se o objeto poderá ser modificado.</returns>
    </member>
    <member name="M:System.Windows.Freezable.OnChanged">
      <summary vsli:raw="Called when the current &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; object is modified.">Chamado quando o objeto <see cref="T:System.Windows.Freezable" /> atual é modificado.</summary>
    </member>
    <member name="M:System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)">
      <summary vsli:raw="Ensures that appropriate context pointers are established for a &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; data member that has just been set.">Garante que os ponteiros de contexto apropriados sejam estabelecidos para um membro de dados <see cref="T:System.Windows.DependencyObjectType" /> que foi recém-definido.</summary>
      <param name="oldValue" vsli:raw="The previous value of the data member.">O valor anterior do membro de dados.</param>
      <param name="newValue" vsli:raw="The current value of the data member.">O valor atual do membro de dados.</param>
    </member>
    <member name="M:System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary vsli:raw="This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.">Este membro dá suporte à infraestrutura Windows Presentation Foundation (WPF) e não se destina a ser usado diretamente do código.</summary>
      <param name="oldValue" vsli:raw="The previous value of the data member.">O valor anterior do membro de dados.</param>
      <param name="newValue" vsli:raw="The current value of the data member.">O valor atual do membro de dados.</param>
      <param name="property" vsli:raw="The property that changed.">A propriedade que foi alterada.</param>
    </member>
    <member name="M:System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary vsli:raw="Overrides the &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; implementation of &lt;see cref=&quot;M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)&quot; /&gt; to also invoke any &lt;see cref=&quot;E:System.Windows.Freezable.Changed&quot; /&gt; handlers in response to a changing dependency property of type &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt;.">Substitui a implementação <see cref="T:System.Windows.DependencyObject" /> de <see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" /> para também invocar quaisquer manipuladores <see cref="E:System.Windows.Freezable.Changed" /> em resposta à alteração de uma propriedade de dependência do tipo <see cref="T:System.Windows.Freezable" />.</summary>
      <param name="e" vsli:raw="Event data that contains information about which property changed, and its old and new values.">Dados de evento que contém informações sobre qual propriedade foi alterada e os respectivos valores, novos e antigos.</param>
    </member>
    <member name="M:System.Windows.Freezable.ReadPreamble">
      <summary vsli:raw="Ensures that the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; is being accessed from a valid thread. Inheritors of &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; must call this method at the beginning of any API that reads data members that are not dependency properties.">Garante que o <see cref="T:System.Windows.Freezable" /> esteja sendo acessado de um thread válido. Herdeiros do <see cref="T:System.Windows.Freezable" /> devem chamar esse método no início de qualquer API que lê membros de dados que não são propriedades de dependência.</summary>
    </member>
    <member name="M:System.Windows.Freezable.WritePostscript">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Windows.Freezable.Changed&quot; /&gt; event for the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; and invokes its &lt;see cref=&quot;M:System.Windows.Freezable.OnChanged&quot; /&gt; method. Classes that derive from &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; should call this method at the end of any API that modifies class members that are not stored as dependency properties.">Aciona o evento <see cref="E:System.Windows.Freezable.Changed" /> para o <see cref="T:System.Windows.Freezable" /> e invoca o respectivo método <see cref="M:System.Windows.Freezable.OnChanged" />. Classes que derivam de <see cref="T:System.Windows.Freezable" /> devem chamar este método no final de qualquer API que modifica os membros de classe que não são armazenados como propriedades de dependência.</summary>
    </member>
    <member name="M:System.Windows.Freezable.WritePreamble">
      <summary vsli:raw="Verifies that the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; is not frozen and that it is being accessed from a valid threading context. &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; inheritors should call this method at the beginning of any API that writes to data members that are not dependency properties.">Verifica se o <see cref="T:System.Windows.Freezable" /> não está congelado e está sendo acessado de um contexto de threading válido. Herdeiros do <see cref="T:System.Windows.Freezable" /> devem chamar esse método no início de qualquer API que grava em membros de dados que não são propriedades de dependência.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; instance is frozen and cannot have its members written to.">A instância do <see cref="T:System.Windows.Freezable" /> está congelada e não pode ter seus membros gravados.</exception>
    </member>
    <member name="T:System.Windows.Input.FocusNavigationDirection">
      <summary vsli:raw="Specifies the direction within a user interface (UI) in which a desired focus change request is attempted. The direction is either based on tab order or by relative direction in layout.">Especifica a direção dentro de uma interface do usuário da tentativa de uma solicitação de alteração de foco. A direção é baseada na ordem de tabulação ou pela direção relativa no layout.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Down">
      <summary vsli:raw="Move focus to another focusable element downwards from the currently focused element.">Move o foco para outro elemento focalizável abaixo do elemento focalizado no momento.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.First">
      <summary vsli:raw="Move focus to the first focusable element in tab order. Not supported for &lt;see cref=&quot;M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)&quot; /&gt;.">Move o foco para o primeiro elemento focalizável na ordem de tabulação. Sem suporte para <see cref="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Last">
      <summary vsli:raw="Move focus to the last focusable element in tab order. Not supported for &lt;see cref=&quot;M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)&quot; /&gt;.">Move o foco para o último elemento focalizável na ordem de tabulação. Sem suporte para <see cref="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Left">
      <summary vsli:raw="Move focus to another focusable element to the left of the currently focused element.">Move o foco para outro elemento focalizável à esquerda do elemento focalizado no momento.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Next">
      <summary vsli:raw="Move focus to the next focusable element in tab order. Not supported for &lt;see cref=&quot;M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)&quot; /&gt;.">Move o foco para o próximo elemento focalizável na ordem de tabulação. Sem suporte para <see cref="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Previous">
      <summary vsli:raw="Move focus to the previous focusable element in tab order. Not supported for &lt;see cref=&quot;M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)&quot; /&gt;.">Move o foco para o elemento focalizável anterior na ordem de tabulação. Sem suporte para <see cref="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Right">
      <summary vsli:raw="Move focus to another focusable element to the right of the currently focused element.">Move o foco para outro elemento focalizável à direita do elemento focalizado no momento.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Up">
      <summary vsli:raw="Move focus to another focusable element upwards from the currently focused element.">Move o foco para outro elemento focalizável acima do elemento focalizado no momento.</summary>
    </member>
    <member name="T:System.Windows.Input.Key">
      <summary vsli:raw="Specifies the possible key values on a keyboard.">Especifica os possíveis valores de chave em um teclado.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.A">
      <summary vsli:raw="The A key.">A tecla A.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.AbntC1">
      <summary vsli:raw="The ABNT_C1 (Brazilian) key.">A tecla ABNT_C1 (Brasil).</summary>
    </member>
    <member name="F:System.Windows.Input.Key.AbntC2">
      <summary vsli:raw="The ABNT_C2 (Brazilian) key.">A tecla ABNT_C2 (Brasil).</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Add">
      <summary vsli:raw="The Add key.">A tecla Adicionar.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Apps">
      <summary vsli:raw="The Application key (Microsoft Natural Keyboard). Also known as the Menu key, as it displays an application-specific context menu.">A tecla Aplicativo (Microsoft Natural Keyboard). Também conhecido como a tecla de Menu, pois exibe um menu de contexto específico do aplicativo.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Attn">
      <summary vsli:raw="The ATTN key.">A tecla ATTN.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.B">
      <summary vsli:raw="The B key.">A tecla B.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Back">
      <summary vsli:raw="The Backspace key.">A tecla Backspace.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserBack">
      <summary vsli:raw="The Browser Back key.">A tecla Voltar do Navegador.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserFavorites">
      <summary vsli:raw="The Browser Favorites key.">A tecla Favoritos do Navegador.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserForward">
      <summary vsli:raw="The Browser Forward key.">A tecla Avançar do Navegador.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserHome">
      <summary vsli:raw="The Browser Home key.">A tecla Início do Navegador.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserRefresh">
      <summary vsli:raw="The Browser Refresh key.">A tecla Atualizar do Navegador.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserSearch">
      <summary vsli:raw="The Browser Search key.">A tecla Pesquisar do Navegador.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserStop">
      <summary vsli:raw="The Browser Stop key.">A tecla Parar do Navegador.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.C">
      <summary vsli:raw="The C key.">A tecla C.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Cancel">
      <summary vsli:raw="The Cancel key.">A tecla Cancel.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Capital">
      <summary vsli:raw="The Caps Lock key.">A tecla Caps Lock.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.CapsLock">
      <summary vsli:raw="The Caps Lock key.">A tecla Caps Lock.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Clear">
      <summary vsli:raw="The Clear key.">A tecla Clear.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.CrSel">
      <summary vsli:raw="The CRSEL key.">A tecla CRSEL.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D">
      <summary vsli:raw="The D key.">A tecla D.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D0">
      <summary vsli:raw="The 0 (zero) key.">A tecla 0 (zero).</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D1">
      <summary vsli:raw="The 1 (one) key.">A tecla 1 (um).</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D2">
      <summary vsli:raw="The 2 key.">A tecla 2.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D3">
      <summary vsli:raw="The 3 key.">A tecla 3.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D4">
      <summary vsli:raw="The 4 key.">A tecla 4.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D5">
      <summary vsli:raw="The 5 key.">A tecla 5.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D6">
      <summary vsli:raw="The 6 key.">A tecla 6.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D7">
      <summary vsli:raw="The 7 key.">A tecla 7.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D8">
      <summary vsli:raw="The 8 key.">A tecla 8.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D9">
      <summary vsli:raw="The 9 key.">A tecla 9.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeAlphanumeric">
      <summary vsli:raw="The DBE_ALPHANUMERIC key.">A tecla DBE_ALPHANUMERIC.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeCodeInput">
      <summary vsli:raw="The DBE_CODEINPUT key.">A tecla DBE_CODEINPUT.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeDbcsChar">
      <summary vsli:raw="The DBE_DBCSCHAR key.">A tecla DBE_DBCSCHAR.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeDetermineString">
      <summary vsli:raw="The DBE_DETERMINESTRING key.">A tecla DBE_DETERMINESTRING.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeEnterDialogConversionMode">
      <summary vsli:raw="The DBE_ENTERDLGCONVERSIONMODE key.">A tecla DBE_ENTERDLGCONVERSIONMODE.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeEnterImeConfigureMode">
      <summary vsli:raw="The DBE_ENTERIMECONFIGMODE key.">A tecla DBE_ENTERIMECONFIGMODE.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeEnterWordRegisterMode">
      <summary vsli:raw="The DBE_ENTERWORDREGISTERMODE key.">A tecla DBE_ENTERWORDREGISTERMODE.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeFlushString">
      <summary vsli:raw="The DBE_FLUSHSTRING key.">A tecla DBE_FLUSHSTRING.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeHiragana">
      <summary vsli:raw="The DBE_HIRAGANA key.">A tecla DBE_HIRAGANA.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeKatakana">
      <summary vsli:raw="The DBE_KATAKANA key.">A tecla DBE_KATAKANA.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeNoCodeInput">
      <summary vsli:raw="The DBE_NOCODEINPUT key.">A tecla DBE_NOCODEINPUT.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeNoRoman">
      <summary vsli:raw="The DBE_NOROMAN key.">A tecla DBE_NOROMAN.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeRoman">
      <summary vsli:raw="The DBE_ROMAN key.">A tecla DBE_ROMAN.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeSbcsChar">
      <summary vsli:raw="The DBE_SBCSCHAR key.">A tecla DBE_SBCSCHAR.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DeadCharProcessed">
      <summary vsli:raw="The key is used with another key to create a single combined character.">A tecla é usada com outra tecla para criar um único caractere combinado.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Decimal">
      <summary vsli:raw="The Decimal key.">A tecla Decimal.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Delete">
      <summary vsli:raw="The Delete key.">A tecla Delete.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Divide">
      <summary vsli:raw="The Divide key.">A tecla Dividir.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Down">
      <summary vsli:raw="The Down Arrow key.">A tecla Seta para Baixo.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.E">
      <summary vsli:raw="The E key.">A tecla E.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.End">
      <summary vsli:raw="The End key.">A tecla End.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Enter">
      <summary vsli:raw="The Enter key.">A tecla Enter.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.EraseEof">
      <summary vsli:raw="The ERASE EOF key.">A tecla ERASE EOF.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Escape">
      <summary vsli:raw="The ESC key.">A tecla ESC.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Execute">
      <summary vsli:raw="The Execute key.">A tecla Execute.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ExSel">
      <summary vsli:raw="The EXSEL key.">A tecla EXSEL.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F">
      <summary vsli:raw="The F key.">A tecla F.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F1">
      <summary vsli:raw="The F1 key.">A tecla F1.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F10">
      <summary vsli:raw="The F10 key.">A tecla F10.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F11">
      <summary vsli:raw="The F11 key.">A tecla F11.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F12">
      <summary vsli:raw="The F12 key.">A tecla F12.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F13">
      <summary vsli:raw="The F13 key.">A tecla F13.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F14">
      <summary vsli:raw="The F14 key.">A tecla F14.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F15">
      <summary vsli:raw="The F15 key.">A tecla F15.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F16">
      <summary vsli:raw="The F16 key.">A tecla F16.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F17">
      <summary vsli:raw="The F17 key.">A tecla F17.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F18">
      <summary vsli:raw="The F18 key.">A tecla F18.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F19">
      <summary vsli:raw="The F19 key.">A tecla F19.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F2">
      <summary vsli:raw="The F2 key.">A tecla F2.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F20">
      <summary vsli:raw="The F20 key.">A tecla F20.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F21">
      <summary vsli:raw="The F21 key.">A tecla F21.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F22">
      <summary vsli:raw="The F22 key.">A tecla F22.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F23">
      <summary vsli:raw="The F23 key.">A tecla F23.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F24">
      <summary vsli:raw="The F24 key.">A tecla F24.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F3">
      <summary vsli:raw="The F3 key.">A tecla F3.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F4">
      <summary vsli:raw="The F4 key.">A tecla F4.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F5">
      <summary vsli:raw="The F5 key.">A tecla F5.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F6">
      <summary vsli:raw="The F6 key.">A tecla F6.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F7">
      <summary vsli:raw="The F7 key.">A tecla F7.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F8">
      <summary vsli:raw="The F8 key.">A tecla F8.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F9">
      <summary vsli:raw="The F9 key.">A tecla F9.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.FinalMode">
      <summary vsli:raw="The IME Final mode key.">A tecla do modo final do IME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.G">
      <summary vsli:raw="The G key.">A tecla G.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.H">
      <summary vsli:raw="The H key.">A tecla H.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.HangulMode">
      <summary vsli:raw="The IME Hangul mode key.">A tecla do modo IME Hangul.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.HanjaMode">
      <summary vsli:raw="The IME Hanja mode key.">A tecla do modo IME Hanja.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Help">
      <summary vsli:raw="The Help key.">A tecla Help.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Home">
      <summary vsli:raw="The Home key.">A tecla Home.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.I">
      <summary vsli:raw="The I key.">A tecla I.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeAccept">
      <summary vsli:raw="The IME Accept key.">A tecla de aceitação do IME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeConvert">
      <summary vsli:raw="The IME Convert key.">A tecla de conversão do IME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeModeChange">
      <summary vsli:raw="The IME Mode change request.">A solicitação de alteração do Modo do IME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeNonConvert">
      <summary vsli:raw="The IME NonConvert key.">A tecla IME NonConvert.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeProcessed">
      <summary vsli:raw="A special key masking the real key being processed by an IME.">Uma chave especial que mascara a chave real processada por um IME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Insert">
      <summary vsli:raw="The Insert key.">A tecla Insert.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.J">
      <summary vsli:raw="The J key.">A tecla J.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.JunjaMode">
      <summary vsli:raw="The IME Junja mode key.">A tecla do modo IME Junja.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.K">
      <summary vsli:raw="The K key.">A tecla K.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.KanaMode">
      <summary vsli:raw="The IME Kana mode key.">A tecla do modo IME Kana.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.KanjiMode">
      <summary vsli:raw="The IME Kanji mode key.">A tecla do modo IME Kanji.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.L">
      <summary vsli:raw="The L key.">A tecla L.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LaunchApplication1">
      <summary vsli:raw="The Launch Application1 key.">A tecla Launch Application1.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LaunchApplication2">
      <summary vsli:raw="The Launch Application2 key.">A tecla Launch Application2.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LaunchMail">
      <summary vsli:raw="The Launch Mail key.">A tecla Launch Mail.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Left">
      <summary vsli:raw="The Left Arrow key.">A tecla Seta para a Esquerda.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LeftAlt">
      <summary vsli:raw="The left ALT key.">A tecla ALT esquerda.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LeftCtrl">
      <summary vsli:raw="The left CTRL key.">A tecla CTRL esquerda.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LeftShift">
      <summary vsli:raw="The left Shift key.">A tecla Shift esquerda.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LineFeed">
      <summary vsli:raw="The Linefeed key.">A tecla Linefeed.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LWin">
      <summary vsli:raw="The left Windows logo key (Microsoft Natural Keyboard).">A tecla esquerda do logotipo do Windows (Microsoft Natural Keyboard).</summary>
    </member>
    <member name="F:System.Windows.Input.Key.M">
      <summary vsli:raw="The M key.">A tecla M.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.MediaNextTrack">
      <summary vsli:raw="The Media Next Track key.">A tecla Media Next Track.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.MediaPlayPause">
      <summary vsli:raw="The Media Play Pause key.">A tecla Media Play Pause.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.MediaPreviousTrack">
      <summary vsli:raw="The Media Previous Track key.">A tecla Media Previous Track.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.MediaStop">
      <summary vsli:raw="The Media Stop key.">A tecla de Parada da Mídia.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Multiply">
      <summary vsli:raw="The Multiply key.">A tecla Multiply.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.N">
      <summary vsli:raw="The N key.">A tecla N.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Next">
      <summary vsli:raw="The Page Down key.">A tecla Page Down.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NoName">
      <summary vsli:raw="A constant reserved for future use.">Uma constante reservada para uso futuro.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.None">
      <summary vsli:raw="No key pressed.">Nenhuma tecla pressionada.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumLock">
      <summary vsli:raw="The Num Lock key.">A tecla Num Lock.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad0">
      <summary vsli:raw="The 0 key on the numeric keypad.">A tecla 0 no teclado numérico.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad1">
      <summary vsli:raw="The 1 key on the numeric keypad.">A tecla 1 no teclado numérico.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad2">
      <summary vsli:raw="The 2 key on the numeric keypad.">A tecla 2 no teclado numérico.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad3">
      <summary vsli:raw="The 3 key on the numeric keypad.">A tecla 3 no teclado numérico.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad4">
      <summary vsli:raw="The 4 key on the numeric keypad.">A tecla 4 no teclado numérico.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad5">
      <summary vsli:raw="The 5 key on the numeric keypad.">A tecla 5 no teclado numérico.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad6">
      <summary vsli:raw="The 6 key on the numeric keypad.">A tecla 6 no teclado numérico.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad7">
      <summary vsli:raw="The 7 key on the numeric keypad.">A tecla 7 no teclado numérico.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad8">
      <summary vsli:raw="The 8 key on the numeric keypad.">A tecla 8 no teclado numérico.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad9">
      <summary vsli:raw="The 9 key on the numeric keypad.">A tecla 9 no teclado numérico.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.O">
      <summary vsli:raw="The O key.">A tecla O.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem1">
      <summary vsli:raw="The OEM 1 key.">A tecla 1 do OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem102">
      <summary vsli:raw="The OEM 102 key.">A tecla 102 do OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem2">
      <summary vsli:raw="The OEM 2 key.">A tecla 2 do OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem3">
      <summary vsli:raw="The OEM 3 key.">A tecla 3 do OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem4">
      <summary vsli:raw="The OEM 4 key.">A tecla 4 do OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem5">
      <summary vsli:raw="The OEM 5 key.">A tecla 5 do OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem6">
      <summary vsli:raw="The OEM 6 key.">A tecla 6 do OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem7">
      <summary vsli:raw="The OEM 7 key.">A tecla 7 do OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem8">
      <summary vsli:raw="The OEM 8 key.">A tecla 8 do OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemAttn">
      <summary vsli:raw="The OEM ATTN key.">A tecla OEM ATTN.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemAuto">
      <summary vsli:raw="The OEM AUTO key.">A tecla OEM AUTO.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemBackslash">
      <summary vsli:raw="The OEM Backslash key.">A tecla OEM Backslash.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemBackTab">
      <summary vsli:raw="The OEM BACKTAB key.">A tecla OEM BACKTAB.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemClear">
      <summary vsli:raw="The OEM Clear key.">A tecla OEM Clear.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemCloseBrackets">
      <summary vsli:raw="The OEM Close Brackets key.">A tecla OEM Close Brackets.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemComma">
      <summary vsli:raw="The OEM Comma key.">A tecla OEM Comma.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemCopy">
      <summary vsli:raw="The OEM COPY key.">A tecla OEM COPY.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemEnlw">
      <summary vsli:raw="The OEM ENLW key.">A tecla OEM ENLW.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemFinish">
      <summary vsli:raw="The OEM FINISH key.">A tecla OEM FINISH.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemMinus">
      <summary vsli:raw="The OEM Minus key.">A tecla OEM Minus.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemOpenBrackets">
      <summary vsli:raw="The OEM Open Brackets key.">A tecla OEM Open Brackets.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemPeriod">
      <summary vsli:raw="The OEM Period key.">A tecla OEM Period.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemPipe">
      <summary vsli:raw="The OEM Pipe key.">A tecla OEM Pipe.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemPlus">
      <summary vsli:raw="The OEM Addition key.">A tecla OEM Addition.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemQuestion">
      <summary vsli:raw="The OEM Question key.">A tecla OEM Question.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemQuotes">
      <summary vsli:raw="The OEM Quotes key.">A tecla OEM Quotes.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemSemicolon">
      <summary vsli:raw="The OEM Semicolon key.">A tecla OEM Semicolon.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemTilde">
      <summary vsli:raw="The OEM Tilde key.">A tecla OEM Tilde.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.P">
      <summary vsli:raw="The P key.">A tecla P.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Pa1">
      <summary vsli:raw="The PA1 key.">A tecla PA1.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.PageDown">
      <summary vsli:raw="The Page Down key.">A tecla Page Down.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.PageUp">
      <summary vsli:raw="The Page Up key.">A tecla Page Up.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Pause">
      <summary vsli:raw="The Pause key.">A tecla Pause.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Play">
      <summary vsli:raw="The PLAY key.">A tecla PLAY.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Print">
      <summary vsli:raw="The Print key.">A tecla Print.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.PrintScreen">
      <summary vsli:raw="The Print Screen key.">A tecla Print Screen.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Prior">
      <summary vsli:raw="The Page Up key.">A tecla Page Up.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Q">
      <summary vsli:raw="The Q key.">A tecla Q.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.R">
      <summary vsli:raw="The R key.">A tecla R.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Return">
      <summary vsli:raw="The Return key.">A tecla Return.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Right">
      <summary vsli:raw="The Right Arrow key.">A tecla Seta para a Direita.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.RightAlt">
      <summary vsli:raw="The right ALT key.">A tecla ALT direita.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.RightCtrl">
      <summary vsli:raw="The right CTRL key.">A tecla CTRL direita.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.RightShift">
      <summary vsli:raw="The right Shift key.">A tecla Shift direita.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.RWin">
      <summary vsli:raw="The right Windows logo key (Microsoft Natural Keyboard).">A tecla direita do logotipo do Windows (Microsoft Natural Keyboard).</summary>
    </member>
    <member name="F:System.Windows.Input.Key.S">
      <summary vsli:raw="The S key.">A tecla S.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Scroll">
      <summary vsli:raw="The Scroll Lock key.">A tecla Scroll Lock.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Select">
      <summary vsli:raw="The Select key.">A tecla Select.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.SelectMedia">
      <summary vsli:raw="The Select Media key.">A tecla Select Media.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Separator">
      <summary vsli:raw="The Separator key.">A tecla Separador.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Sleep">
      <summary vsli:raw="The Computer Sleep key.">A tecla de suspensão do computador.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Snapshot">
      <summary vsli:raw="The Print Screen key.">A tecla Print Screen.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Space">
      <summary vsli:raw="The Spacebar key.">A tecla Barra de Espaços.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Subtract">
      <summary vsli:raw="The Subtract key.">A tecla Subtrair.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.System">
      <summary vsli:raw="A special key masking the real key being processed as a system key.">Uma chave especial que mascara a chave real processada como uma chave do sistema.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.T">
      <summary vsli:raw="The T key.">A tecla T.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Tab">
      <summary vsli:raw="The Tab key.">A tecla Tab.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.U">
      <summary vsli:raw="The U key.">A tecla U.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Up">
      <summary vsli:raw="The Up Arrow key.">A tecla Seta para Cima.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.V">
      <summary vsli:raw="The V key.">A tecla V.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.VolumeDown">
      <summary vsli:raw="The Volume Down key.">A tecla Abaixar Volume.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.VolumeMute">
      <summary vsli:raw="The Volume Mute key.">A tecla Ativar mudo.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.VolumeUp">
      <summary vsli:raw="The Volume Up key.">A tecla Aumentar Volume.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.W">
      <summary vsli:raw="The W key.">A tecla W.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.X">
      <summary vsli:raw="The X key.">A tecla X.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Y">
      <summary vsli:raw="The Y key.">A tecla Y.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Z">
      <summary vsli:raw="The Z key.">A tecla Z.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Zoom">
      <summary vsli:raw="The ZOOM key.">A tecla ZOOM.</summary>
    </member>
    <member name="T:System.Windows.Input.KeyConverter">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; object to and from other types.">Converte um objeto <see cref="T:System.Windows.Input.Key" /> de e em outros tipos.</summary>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Input.Key" />.</summary>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an object of the specified type can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;, using the specified context.">Determina se um objeto do tipo especificado pode ser convertido em uma instância do <see cref="T:System.Windows.Input.Key" />, usando o contexto especificado.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Um contexto de formato que fornece informações sobre o ambiente do qual este conversor está sendo invocado.</param>
      <param name="sourceType" vsli:raw="The type being evaluated for conversion.">O tipo que está sendo avaliado para conversão.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;sourceType&quot; /&gt; is of type &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="sourceType" /> for do tipo <see cref="T:System.String" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an instance of &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; can be converted to the specified type, using the specified context.">Determina se uma instância do <see cref="T:System.Windows.Input.Key" /> pode ser convertida no tipo especificado, usando o contexto especificado.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Um contexto de formato que fornece informações sobre o ambiente do qual este conversor está sendo invocado.</param>
      <param name="destinationType" vsli:raw="The type being evaluated for conversion.">O tipo que está sendo avaliado para conversão.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;destinationType&quot; /&gt; is of type &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="destinationType" /> for do tipo <see cref="T:System.String" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert the specified object to a &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;, using the specified context.">Tenta converter o objeto especificado em um <see cref="T:System.Windows.Input.Key" />, usando o contexto especificado.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Um contexto de formato que fornece informações sobre o ambiente do qual este conversor está sendo invocado.</param>
      <param name="culture" vsli:raw="Culture specific information.">Informações específicas à cultura.</param>
      <param name="source" vsli:raw="The object to convert.">O objeto a ser convertido.</param>
      <returns vsli:raw="The converted object.">O objeto convertido.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; cannot be converted.">
        <paramref name="source" /> não pode ser convertido.</exception>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert a &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; to the specified type, using the specified context.">Tenta converter um <see cref="T:System.Windows.Input.Key" /> no tipo especificado, usando o contexto especificado.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Um contexto de formato que fornece informações sobre o ambiente do qual este conversor está sendo invocado.</param>
      <param name="culture" vsli:raw="Culture specific information.">Informações específicas à cultura.</param>
      <param name="value" vsli:raw="The object to convert.">O objeto a ser convertido.</param>
      <param name="destinationType" vsli:raw="The type to convert the object to.">O tipo no qual converter o objeto.</param>
      <returns vsli:raw="The converted object.">O objeto convertido.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="destinationType" /> é <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; cannot be converted to &lt;paramref name=&quot;destinationType&quot; /&gt;.">
        <paramref name="value" /> não pode ser convertido em <paramref name="destinationType" />.</exception>
    </member>
    <member name="T:System.Windows.Input.KeyInterop">
      <summary vsli:raw="Provides static methods to convert between Win32 Virtual-Keys and the WPF &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; enumeration.">Fornece métodos estáticos para converter entre teclas virtuais Win32 e a enumeração <see cref="T:System.Windows.Input.Key" /> do WPF.</summary>
    </member>
    <member name="M:System.Windows.Input.KeyInterop.KeyFromVirtualKey(System.Int32)">
      <summary vsli:raw="Converts a Win32 Virtual-Key into WPF &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;.">Converte uma tecla virtual Win32 em WPF <see cref="T:System.Windows.Input.Key" />.</summary>
      <param name="virtualKey" vsli:raw="The virtual key to convert.">A tecla virtual a ser convertida.</param>
      <returns vsli:raw="The WPF key.">A tecla WPF.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyInterop.VirtualKeyFromKey(System.Windows.Input.Key)">
      <summary vsli:raw="Converts a WPF &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; into a Win32 Virtual-Key.">Converte um WPF <see cref="T:System.Windows.Input.Key" /> em uma tecla virtual Win32.</summary>
      <param name="key" vsli:raw="The WPF to convert.">O WPF a ser convertido.</param>
      <returns vsli:raw="The Win32 Virtual-Key.">A tecla virtual Win32.</returns>
    </member>
    <member name="T:System.Windows.Input.KeyValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;.">Converte instâncias de <see cref="T:System.String" /> de e para instâncias de <see cref="T:System.Windows.Input.Key" />.</summary>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Input.KeyValueSerializer&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Input.KeyValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be convert to an instance of &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;.">Determina se a <see cref="T:System.String" /> especificada pode ser convertida em uma instância de <see cref="T:System.Windows.Input.Key" />.</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">Cadeia de caracteres a ser avaliada para conversão.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informações de contexto que são usadas para conversão.</param>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">Sempre retorna <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if the specified &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Determina se o <see cref="T:System.Windows.Input.Key" /> especificado pode ser convertido em um <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The key to evaluate for conversion.">A chave ser avaliada para conversão.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informações de contexto que são usadas para conversão.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="value" /> puder ser convertido em um <see cref="T:System.String" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;.">Converte um <see cref="T:System.String" /> em um <see cref="T:System.Windows.Input.Key" />.</summary>
      <param name="value" vsli:raw="The string to convert into a &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;.">A cadeia de caracteres a ser convertida em um <see cref="T:System.Windows.Input.Key" />.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informações de contexto que são usadas para conversão.</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">Uma nova instância de <see cref="T:System.Windows.Input.Key" /> com base no <paramref name="value" /> fornecido.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Converte uma instância de <see cref="T:System.Windows.Input.Key" /> em um <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The key to convert into a string.">A chave a ser convertida em uma cadeia de caracteres.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informações de contexto que são usadas para conversão.</param>
      <returns vsli:raw="An invariant string representation of the specified &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;.">Uma representação de cadeia de caracteres invariável do <see cref="T:System.Windows.Input.Key" /> especificado.</returns>
    </member>
    <member name="T:System.Windows.Input.ModifierKeys">
      <summary vsli:raw="Specifies the set of modifier keys.">Especifica o conjunto de chaves de modificador.</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Alt">
      <summary vsli:raw="The ALT key.">A tecla ALT.</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Control">
      <summary vsli:raw="The CTRL key.">A tecla CTRL.</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.None">
      <summary vsli:raw="No modifiers are pressed.">Nenhum modificador está pressionado.</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Shift">
      <summary vsli:raw="The SHIFT key.">A tecla SHIFT.</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Windows">
      <summary vsli:raw="The Windows logo key.">Pressione a tecla do logotipo do Windows.</summary>
    </member>
    <member name="T:System.Windows.Input.ModifierKeysConverter">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; object to and from other types.">Converte um objeto <see cref="T:System.Windows.Input.ModifierKeys" /> de e em outros tipos.</summary>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Input.ModifierKeysConverter&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Input.ModifierKeysConverter" />.</summary>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an object of the specified type can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt;, using the specified context.">Determina se um objeto do tipo especificado pode ser convertido em uma instância do <see cref="T:System.Windows.Input.ModifierKeys" />, usando o contexto especificado.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Um contexto de formato que fornece informações sobre o ambiente do qual este conversor está sendo invocado.</param>
      <param name="sourceType" vsli:raw="The type being evaluated for conversion.">O tipo que está sendo avaliado para conversão.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;sourceType&quot; /&gt; is type &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="sourceType" /> for do tipo <see cref="T:System.String" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an instance of &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; can be converted to the specified type, using the specified context.">Determina se uma instância do <see cref="T:System.Windows.Input.ModifierKeys" /> pode ser convertida no tipo especificado, usando o contexto especificado.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Um contexto de formato que fornece informações sobre o ambiente do qual este conversor está sendo invocado.</param>
      <param name="destinationType" vsli:raw="The type being evaluated for conversion.">O tipo que está sendo avaliado para conversão.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;destinationType&quot; /&gt; is type &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="destinationType" /> for do tipo <see cref="T:System.String" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert the specified object to a &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt;, using the specified context.">Tenta converter o objeto especificado em um <see cref="T:System.Windows.Input.ModifierKeys" />, usando o contexto especificado.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Um contexto de formato que fornece informações sobre o ambiente do qual este conversor está sendo invocado.</param>
      <param name="culture" vsli:raw="Culture specific information.">Informações específicas à cultura.</param>
      <param name="source" vsli:raw="The object to convert.">O objeto a ser convertido.</param>
      <returns vsli:raw="The converted object.">O objeto convertido.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; cannot be converted.">
        <paramref name="source" /> não pode ser convertido.</exception>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert a &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; to the specified type, using the specified context.">Tenta converter um <see cref="T:System.Windows.Input.ModifierKeys" /> no tipo especificado, usando o contexto especificado.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Um contexto de formato que fornece informações sobre o ambiente do qual este conversor está sendo invocado.</param>
      <param name="culture" vsli:raw="Culture specific information.">Informações específicas à cultura.</param>
      <param name="value" vsli:raw="The object to convert.">O objeto a ser convertido.</param>
      <param name="destinationType" vsli:raw="The type to convert the object to.">O tipo no qual converter o objeto.</param>
      <returns vsli:raw="The converted object.">O objeto convertido.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="destinationType" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; does not map to a valid &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt;.">
        <paramref name="value" /> não é mapeado para um <see cref="T:System.Windows.Input.ModifierKeys" /> válido.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; cannot be converted.">
        <paramref name="value" /> não pode ser convertido.</exception>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.IsDefinedModifierKeys(System.Windows.Input.ModifierKeys)">
      <summary vsli:raw="Determines whether the specified value is a valid &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; value.">Determina se o valor especificado é um valor <see cref="T:System.Windows.Input.ModifierKeys" /> válido.</summary>
      <param name="modifierKeys" vsli:raw="The value to check for validity.">O valor para verificar a validade.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if input is a valid &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a entrada for um valor <see cref="T:System.Windows.Input.ModifierKeys" /> válido; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Input.ModifierKeysValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt;.">Converte instâncias de <see cref="T:System.String" /> de e para instâncias de <see cref="T:System.Windows.Input.ModifierKeys" />.</summary>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Input.ModifierKeysValueSerializer&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Input.ModifierKeysValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be convert to an instance of &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt;.">Determina se a <see cref="T:System.String" /> especificada pode ser convertida em uma instância de <see cref="T:System.Windows.Input.ModifierKeys" />.</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">Cadeia de caracteres a ser avaliada para conversão.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informações de contexto que são usadas para conversão.</param>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">Sempre retorna <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if the specified &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Determina se o <see cref="T:System.Windows.Input.ModifierKeys" /> especificado pode ser convertido em um <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The modifier keys to evaluate for conversion.">A teclas modificadoras a serem avaliadas para conversão.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informações de contexto que são usadas para conversão.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="value" /> puder ser convertido em um <see cref="T:System.String" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; value.">Converte um <see cref="T:System.String" /> em um valor <see cref="T:System.Windows.Input.ModifierKeys" />.</summary>
      <param name="value" vsli:raw="The string to convert into a &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt;.">A cadeia de caracteres a ser convertida em um <see cref="T:System.Windows.Input.ModifierKeys" />.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informações de contexto que são usadas para conversão.</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">Uma nova instância de <see cref="T:System.Windows.Input.ModifierKeys" /> com base no <paramref name="value" /> fornecido.</returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Converte uma instância de <see cref="T:System.Windows.Input.ModifierKeys" /> em um <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The key to convert into a string.">A chave a ser convertida em uma cadeia de caracteres.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informações de contexto que são usadas para conversão.</param>
      <returns vsli:raw="An invariant string representation of the specified &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; value.">Uma representação de cadeia de caracteres invariável do valor <see cref="T:System.Windows.Input.ModifierKeys" /> especificado.</returns>
    </member>
    <member name="T:System.Windows.Input.TraversalRequest">
      <summary vsli:raw="Represents a request to move focus to another control.">Representa uma solicitação para mover o foco para outro controle.</summary>
    </member>
    <member name="M:System.Windows.Input.TraversalRequest.#ctor(System.Windows.Input.FocusNavigationDirection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Input.TraversalRequest&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Input.TraversalRequest" />.</summary>
      <param name="focusNavigationDirection" vsli:raw="The intended direction of the focus traversal, as a value of the enumeration.">A direção pretendida da travessia do foco, como um valor da enumeração.</param>
    </member>
    <member name="P:System.Windows.Input.TraversalRequest.FocusNavigationDirection">
      <summary vsli:raw="Gets the traversal direction.">Obtém a direção de passagem.</summary>
      <returns vsli:raw="One of the traversal direction enumeration values.">Um dos valores de enumeração da direção de passagem.</returns>
    </member>
    <member name="P:System.Windows.Input.TraversalRequest.Wrapped">
      <summary vsli:raw="Gets or sets a value that indicates whether focus traversal has reached the end of child elements that can have focus.">Obtém ou define um valor que indica se a travessia do foco atingiu o fim dos elementos filho que podem ter foco.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this traversal has reached the end of child elements that can have focus; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Se essa passagem tiver atingido o final dos elementos filho que podem ter foco; caso contrário <see langword="false" />,. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Int32Rect">
      <summary vsli:raw="Describes the width, height, and location of an integer rectangle.">Descreve a largura, altura e local de um retângulo inteiro.</summary>
    </member>
    <member name="M:System.Windows.Int32Rect.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; with the specified &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt; coordinates and the specified &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt;.">Inicializa uma nova instância de um <see cref="T:System.Windows.Int32Rect" /> com as coordenadas <see cref="P:System.Windows.Int32Rect.X" /> e <see cref="P:System.Windows.Int32Rect.Y" /> especificadas e o <see cref="P:System.Windows.Int32Rect.Width" /> e <see cref="P:System.Windows.Int32Rect.Height" /> especificados.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt; of the new &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; instance which specifies the x-coordinate of the top-left corner of the rectangle.">O <see cref="P:System.Windows.Int32Rect.X" /> da nova instância <see cref="T:System.Windows.Int32Rect" /> que especifica a coordenada X do canto superior esquerdo do retângulo.</param>
      <param name="y" vsli:raw="The &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt; of the new &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; instance which specifies the y-coordinate of the top-left corner of the rectangle.">O <see cref="P:System.Windows.Int32Rect.Y" /> da nova instância <see cref="T:System.Windows.Int32Rect" /> que especifica a coordenada Y do canto superior esquerdo do retângulo.</param>
      <param name="width" vsli:raw="The &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt; of the new &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; instance which specifies the width of the rectangle.">O <see cref="P:System.Windows.Int32Rect.Width" /> da nova instância <see cref="T:System.Windows.Int32Rect" /> que especifica a largura do retângulo.</param>
      <param name="height" vsli:raw="The &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt; of the new &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; instance which specifies the height of the rectangle.">O <see cref="P:System.Windows.Int32Rect.Height" /> da nova instância <see cref="T:System.Windows.Int32Rect" /> que especifica a altura do retângulo.</param>
    </member>
    <member name="P:System.Windows.Int32Rect.Empty">
      <summary vsli:raw="Gets the empty rectangle, a special value that represents a rectangle with no position or area.">Obtém o retângulo vazio, um valor especial que representa um retângulo sem posição ou área.</summary>
      <returns vsli:raw="An empty rectangle with no position or area.">Um retângulo vazio sem posição ou área.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified rectangle is equal to this rectangle.">Determina se o retângulo especificado é igual a este retângulo.</summary>
      <param name="o" vsli:raw="The object to compare to the current rectangle.">O objeto a comparar ao retângulo atual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; and has the same &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt; as this rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, se <paramref name="o" /> for um <see cref="T:System.Windows.Int32Rect" /> e tiver o mesmo <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> e <see cref="P:System.Windows.Int32Rect.Height" /> desse retângulo; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.Equals(System.Windows.Int32Rect)">
      <summary vsli:raw="Determines whether the specified rectangle is equal to this rectangle.">Determina se o retângulo especificado é igual a este retângulo.</summary>
      <param name="value" vsli:raw="The rectangle to compare to the current rectangle.">O retângulo a ser comparado ao retângulo atual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; has the same &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt; as this rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, se <paramref name="value" /> for o mesmo <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> e <see cref="P:System.Windows.Int32Rect.Height" /> desse retângulo; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.Equals(System.Windows.Int32Rect,System.Windows.Int32Rect)">
      <summary vsli:raw="Determines whether the specified rectangles are equal.">Determina se os retângulos especificados são iguais.</summary>
      <param name="int32Rect1" vsli:raw="The first rectangle to compare.">O primeiro retângulo a ser comparado.</param>
      <param name="int32Rect2" vsli:raw="The second rectangle to compare.">O segundo retângulo a ser comparado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;int32Rect1&quot; /&gt; and &lt;paramref name=&quot;int32Rect2&quot; /&gt; have the same &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, se <paramref name="int32Rect1" /> e <paramref name="int32Rect2" /> tiverem os mesmos <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> e <see cref="P:System.Windows.Int32Rect.Height" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.GetHashCode">
      <summary vsli:raw="Creates a hash code from this rectangle's &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt; values.">Cria um código hash dos valores <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> e <see cref="P:System.Windows.Int32Rect.Height" /> deste retângulo.</summary>
      <returns vsli:raw="This rectangle's hash code.">O código hash desse retângulo.</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.HasArea">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt; properties of the &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; are greater than 0.">Obtém um valor que indica se as propriedades <see cref="P:System.Windows.Int32Rect.Width" /> e <see cref="P:System.Windows.Int32Rect.Height" /> da <see cref="T:System.Windows.Int32Rect" /> são maiores que 0.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt; properties of the &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; are greater than 0; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Se as <see cref="P:System.Windows.Int32Rect.Width" /> propriedades <see cref="P:System.Windows.Int32Rect.Height" /> e de <see cref="T:System.Windows.Int32Rect" /> forem maiores que 0; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.Height">
      <summary vsli:raw="Gets or sets the height of the rectangle.">Obtém ou define a altura do retângulo.</summary>
      <returns vsli:raw="The height of the rectangle. The default value is &lt;c&gt;0&lt;/c&gt;.">A altura do retângulo. O valor padrão é <c>0</c>.</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.IsEmpty">
      <summary vsli:raw="Gets a value indicating whether the rectangle is empty.">Obtém um valor que indica se o retângulo está vazio.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the rectangle is empty; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />Se o retângulo estiver vazio; caso contrário <see langword="false" />,. O valor padrão é <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.op_Equality(System.Windows.Int32Rect,System.Windows.Int32Rect)">
      <summary vsli:raw="Compares two rectangles for exact equality.">Compara a igualdade exata de dois retângulos.</summary>
      <param name="int32Rect1" vsli:raw="The first rectangle to compare.">O primeiro retângulo a ser comparado.</param>
      <param name="int32Rect2" vsli:raw="The second rectangle to compare.">O segundo retângulo a ser comparado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;int32Rect1&quot; /&gt; and &lt;paramref name=&quot;int32Rect2&quot; /&gt; have the same &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, se <paramref name="int32Rect1" /> e <paramref name="int32Rect2" /> tiverem os mesmos <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> e <see cref="P:System.Windows.Int32Rect.Height" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.op_Inequality(System.Windows.Int32Rect,System.Windows.Int32Rect)">
      <summary vsli:raw="Compares two rectangles for inequality.">Compara dois retângulos quanto à desigualdade.</summary>
      <param name="int32Rect1" vsli:raw="The first rectangle to compare.">O primeiro retângulo a ser comparado.</param>
      <param name="int32Rect2" vsli:raw="The second rectangle to compare.">O segundo retângulo a ser comparado.</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;int32Rect1&quot; /&gt; and &lt;paramref name=&quot;int32Rect2&quot; /&gt; have the same &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt;; otherwise, if all of these values are the same, then &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="false" />, se <paramref name="int32Rect1" /> e <paramref name="int32Rect2" /> tiverem os mesmos <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> e <see cref="P:System.Windows.Int32Rect.Height" />; caso contrário, se nem todos esses valores forem iguais, <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.Parse(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; structure from the specified &lt;see cref=&quot;T:System.String&quot; /&gt; representation.">Cria uma estrutura <see cref="T:System.Windows.Int32Rect" /> com base na representação de <see cref="T:System.String" /> especificada.</summary>
      <param name="source" vsli:raw="A string representation of an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Uma representação da cadeia de caracteres de um <see cref="T:System.Windows.Int32Rect" />.</param>
      <returns vsli:raw="The equivalent &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; structure.">A estrutura <see cref="T:System.Windows.Int32Rect" /> equivalente.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="Formats the value of the current instance using the specified format.">Formata o valor da instância atual usando o formato especificado.</summary>
      <param name="format" vsli:raw="The format to use.">O formato a ser usado.</param>
      <param name="provider" vsli:raw="The provider to use to format the value.">O provedor a ser usado para formatar o valor</param>
      <returns vsli:raw="The value of the current instance in the specified format.">O valor da instância atual no formato especificado.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.ToString">
      <summary vsli:raw="Creates a string representation of this &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Cria uma representação de cadeia de caracteres desse <see cref="T:System.Windows.Int32Rect" />.</summary>
      <returns vsli:raw="A string containing the same &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt; values of this &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; structure.">Uma cadeia de caracteres contendo os mesmos valores <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> e <see cref="P:System.Windows.Int32Rect.Height" /> dessa estrutura <see cref="T:System.Windows.Int32Rect" />.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.ToString(System.IFormatProvider)">
      <summary vsli:raw="Creates a string representation of this &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; based on the supplied &lt;see cref=&quot;T:System.IFormatProvider&quot; /&gt;.">Cria uma representação de cadeia de caracteres deste <see cref="T:System.Windows.Int32Rect" /> com base no <see cref="T:System.IFormatProvider" /> fornecido.</summary>
      <param name="provider" vsli:raw="The format provider to use. If provider is &lt;see langword=&quot;null&quot; /&gt;, the current culture is used.">O provedor de formato a ser usado. Se o provedor for <see langword="null" />, a cultura atual será usada.</param>
      <returns vsli:raw="A string representation of this instance of &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Uma representação de cadeia de caracteres dessa instância de <see cref="T:System.Windows.Int32Rect" />.</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.Width">
      <summary vsli:raw="Gets or sets the width of the rectangle.">Obtém ou define a largura do retângulo.</summary>
      <returns vsli:raw="The width of the rectangle. The default value is &lt;c&gt;0&lt;/c&gt;.">A largura do retângulo. O valor padrão é <c>0</c>.</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.X">
      <summary vsli:raw="Gets or sets the x-coordinate of the top-left corner of the rectangle.">Obtém ou define a coordenada X do canto superior esquerdo do retângulo.</summary>
      <returns vsli:raw="The x-coordinate of the top-left corner of the rectangle. The default value is &lt;c&gt;0&lt;/c&gt;.">A coordenada X do canto superior esquerdo do retângulo. O valor padrão é <c>0</c>.</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.Y">
      <summary vsli:raw="Gets or sets the y-coordinate of the top-left corner of the rectangle.">Obtém ou define a coordenada Y do canto superior esquerdo do retângulo.</summary>
      <returns vsli:raw="The y-coordinate of the top-left corner of the rectangle. The default value is &lt;c&gt;0&lt;/c&gt;.">A coordenada y do canto superior esquerdo do retângulo. O valor padrão é <c>0</c>.</returns>
    </member>
    <member name="T:System.Windows.Int32RectConverter">
      <summary vsli:raw="Converts instances of other types to and from an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Converte instâncias de outros tipos de e para um <see cref="T:System.Windows.Int32Rect" />.</summary>
    </member>
    <member name="M:System.Windows.Int32RectConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Int32RectConverter&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Int32RectConverter" />.</summary>
    </member>
    <member name="M:System.Windows.Int32RectConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an object can be converted from a given type to an instance of an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Determina se um objeto pode ser convertido de um determinado tipo em uma instância de um <see cref="T:System.Windows.Int32Rect" />.</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">Descreve as informações de contexto de um tipo.</param>
      <param name="sourceType" vsli:raw="The type of the source that is being evaluated for conversion.">O tipo de origem que está sendo avaliado para conversão.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the type can be converted to an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o tipo puder ser convertido para um <see cref="T:System.Windows.Int32Rect" />, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Int32RectConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an instance of an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; can be converted to a different type.">Determina se uma instância de um <see cref="T:System.Windows.Int32Rect" /> pode ser convertida em um tipo diferente.</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">Descreve as informações de contexto de um tipo.</param>
      <param name="destinationType" vsli:raw="The desired type this &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; is being evaluated for conversion.">O tipo desejado para o qual se está avaliando converter este <see cref="T:System.Windows.Int32Rect" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; can be converted to &lt;paramref name=&quot;destinationType&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se este <see cref="T:System.Windows.Int32Rect" /> puder ser convertido para <paramref name="destinationType" />, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Int32RectConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert the specified type to an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Tenta converter um tipo especificado em um <see cref="T:System.Windows.Int32Rect" />.</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">Fornece informações contextuais necessárias para conversão.</param>
      <param name="culture" vsli:raw="Cultural information to respect during conversion.">Informações culturais a serem respeitadas durante a conversão.</param>
      <param name="value" vsli:raw="The object being converted.">O objeto sendo convertido.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; created from converting &lt;paramref name=&quot;value&quot; /&gt;.">O <see cref="T:System.Windows.Int32Rect" /> criado da conversão de <paramref name="value" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The specified object is NULL or is a type that cannot be converted to an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Gerada se o objeto especificado é NULL ou é um tipo que não pode ser convertido em um <see cref="T:System.Windows.Int32Rect" />.</exception>
    </member>
    <member name="M:System.Windows.Int32RectConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; to a specified type.">Tenta converter um <see cref="T:System.Windows.Int32Rect" /> para um tipo especificado.</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">Fornece informações contextuais necessárias para conversão.</param>
      <param name="culture" vsli:raw="Cultural information to respect during conversion.">Informações culturais a serem respeitadas durante a conversão.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; to convert.">O <see cref="T:System.Windows.Int32Rect" /> a ser convertido.</param>
      <param name="destinationType" vsli:raw="The type to convert this &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; to.">O tipo para o qual converter este <see cref="T:System.Windows.Int32Rect" />.</param>
      <returns vsli:raw="The object created from converting this &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">O objeto criado da conversão deste <see cref="T:System.Windows.Int32Rect" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or is not an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;, or &lt;paramref name=&quot;destinationType&quot; /&gt; is not one of the valid types for conversion.">Gerada se <paramref name="value" /> é <see langword="null" /> ou não é um <see cref="T:System.Windows.Int32Rect" /> ou então se não <paramref name="destinationType" /> não é um dos tipos válidos para conversão.</exception>
    </member>
    <member name="T:System.Windows.Interop.ComponentDispatcher">
      <summary vsli:raw="Enables shared control of the message pump between Win32 and WPF in interoperation scenarios.">Habilita o controle compartilhado da bomba de mensagens entre Win32 e WPF em cenários de interoperação.</summary>
    </member>
    <member name="P:System.Windows.Interop.ComponentDispatcher.CurrentKeyboardMessage">
      <summary vsli:raw="Gets the last message that was raised.">Obtém a última mensagem que foi gerada.</summary>
      <returns vsli:raw="The last message.">A última mensagem.</returns>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.EnterThreadModal">
      <summary vsli:raw="Occurs when a thread becomes modal.">Ocorre quando um thread torna-se modal.</summary>
    </member>
    <member name="P:System.Windows.Interop.ComponentDispatcher.IsThreadModal">
      <summary vsli:raw="Gets a value that indicates whether the thread is modal.">Obtém um valor que indica se o thread é modal.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the thread is modal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o thread for modal; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.LeaveThreadModal">
      <summary vsli:raw="Occurs when a modal thread becomes nonmodal.">Ocorre quando um thread modal torna-se não modal.</summary>
    </member>
    <member name="M:System.Windows.Interop.ComponentDispatcher.PopModal">
      <summary vsli:raw="Called to indicate that a modal thread is no longer modal.">Chamado para indicar que um thread modal não é mais modal.</summary>
    </member>
    <member name="M:System.Windows.Interop.ComponentDispatcher.PushModal">
      <summary vsli:raw="Called to indicate that the thread is modal.">Chamado para indicar que o thread é modal.</summary>
    </member>
    <member name="M:System.Windows.Interop.ComponentDispatcher.RaiseIdle">
      <summary vsli:raw="Called to indicate that a thread is idle.">Chamado para indicar que um thread está ocioso.</summary>
    </member>
    <member name="M:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage(System.Windows.Interop.MSG@)">
      <summary vsli:raw="Indicates that a new message is available for possible handling.">Indica que uma nova mensagem está disponível para possível manipulação.</summary>
      <param name="msg" vsli:raw="The message and its associated data.">A mensagem e seus dados associados.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if one of the modules listening to the message loop processed the message. The owner of the message loop should ignore the message. &lt;see langword=&quot;false&quot; /&gt;, if the message was not processed. In this case, the owner of the message pump should call the Win32 function TranslateMessage followed by DispatchMessage.">
        <see langword="true" />, se um dos módulos que escutam o loop de mensagens processou a mensagem. O proprietário do loop de mensagens deve ignorar a mensagem. <see langword="false" />, se a mensagem não foi processada. Nesse caso, o proprietário da bomba de mensagens deve chamar a função Win32 TranslateMessage seguida por DispatchMessage.</returns>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage">
      <summary vsli:raw="Occurs when the message pump receives a keyboard message.">Ocorre quando a bomba de mensagens recebe uma mensagem do teclado.</summary>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.ThreadIdle">
      <summary vsli:raw="Occurs when the thread is idle.">Ocorre quando o thread está ocioso.</summary>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage">
      <summary vsli:raw="Occurs when the message pump receives a keyboard message.">Ocorre quando a bomba de mensagens recebe uma mensagem do teclado.</summary>
    </member>
    <member name="T:System.Windows.Interop.IKeyboardInputSink">
      <summary vsli:raw="Provides a keyboard sink for components that manages tabbing, accelerators, and mnemonics across interop boundaries and between HWNDs. This interface implements keyboard message management in WPF-Win32 interoperation scenarios.">Fornece um coletor de teclado para componentes que gerenciam o uso da tecla TAB, aceleradores e mnemônicos entre limites de interoperabilidade e entre HWNDs. Essa interface implementa o gerenciamento de mensagens de teclado em cenários de interoperação WPF-Win32.</summary>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin">
      <summary vsli:raw="Gets a value that indicates whether the sink or one of its contained components has focus.">Obtém um valor que indica se o coletor ou um de seus componentes independentes tem foco.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the sink or one of its contained components has focus; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o coletor ou um de seus componentes independentes tiver foco; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite">
      <summary vsli:raw="Gets or sets a reference to the component's container's &lt;see cref=&quot;T:System.Windows.Interop.IKeyboardInputSite&quot; /&gt; interface.">Obtém ou define uma referência à interface <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> do contêiner do componente.</summary>
      <returns vsli:raw="A reference to the container's &lt;see cref=&quot;T:System.Windows.Interop.IKeyboardInputSite&quot; /&gt; interface.">Uma referência à interface do <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> contêiner.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary vsli:raw="Called when one of the mnemonics (access keys) for this sink is invoked.">Chamado quando uma das teclas mnemônicas (teclas de acesso) para esse coletor é invocada.</summary>
      <param name="msg" vsli:raw="The message for the mnemonic and associated data. Do not modify this message structure. It is passed by reference for performance reasons only.">A mensagem para os dados associados e mnemônicos. Não modifique a estrutura dessa mensagem. É passado por referência apenas por razões de desempenho.</param>
      <param name="modifiers" vsli:raw="Modifier keys.">Teclas modificadoras.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a mensagem foi manipulada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)">
      <summary vsli:raw="Registers the &lt;see cref=&quot;T:System.Windows.Interop.IKeyboardInputSink&quot; /&gt; interface of a contained component.">Registra a interface <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> de um componente independente.</summary>
      <param name="sink" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Interop.IKeyboardInputSink&quot; /&gt; sink of the contained component.">O coletor <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> do componente independente.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Interop.IKeyboardInputSite&quot; /&gt; site of the contained component.">O site <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> do componente independente.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)">
      <summary vsli:raw="Sets focus on either the first tab stop or the last tab stop of the sink.">Define se o foco estará na primeira parada de tabulação ou na última parada de tabulação do coletor.</summary>
      <param name="request" vsli:raw="Specifies whether focus should be set to the first or the last tab stop.">Especifica se o foco deve ser definido para a primeira ou a última parada de tabulação.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the focus has been set as requested; &lt;see langword=&quot;false&quot; /&gt;, if there are no tab stops.">
        <see langword="true" /> se o foco tiver sido definido como solicitado; <see langword="false" />, se não houver nenhuma parada de tabulação.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary vsli:raw="Processes keyboard input at the keydown message level.">Processa a entrada do teclado no nível da mensagem por pressionamento de tecla.</summary>
      <param name="msg" vsli:raw="The message and associated data. Do not modify this structure. It is passed by reference for performance reasons only.">A mensagem e seus dados associados. Não modifique esta estrutura. É passado por referência apenas por razões de desempenho.</param>
      <param name="modifiers" vsli:raw="Modifier keys.">Teclas modificadoras.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled by the method implementation; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a mensagem tiver sido manipulada pela implementação de método; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary vsli:raw="Processes WM_CHAR, WM_SYSCHAR, WM_DEADCHAR, and WM_SYSDEADCHAR input messages before &lt;see cref=&quot;M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)&quot; /&gt; is called.">Processa as mensagens de entrada WM_CHAR, WM_SYSCHAR, WM_DEADCHAR e WM_SYSDEADCHAR antes que <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> seja chamado.</summary>
      <param name="msg" vsli:raw="The message and associated data. Do not modify this structure. It is passed by reference for performance reasons only.">A mensagem e seus dados associados. Não modifique esta estrutura. É passado por referência apenas por razões de desempenho.</param>
      <param name="modifiers" vsli:raw="Modifier keys.">Teclas modificadoras.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was processed and &lt;see cref=&quot;M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)&quot; /&gt; should not be called; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a mensagem foi processada e <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> não deve ser chamado; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Interop.IKeyboardInputSite">
      <summary vsli:raw="Manages keyboard focus within the container.  This interface implements keyboard message management in WPF-Win32 interoperation scenarios.">Gerencia o foco do teclado dentro do contêiner.  Essa interface implementa o gerenciamento de mensagens de teclado em cenários de interoperação WPF-Win32.</summary>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops(System.Windows.Input.TraversalRequest)">
      <summary vsli:raw="Called by a contained component when it has reached its last tab stop and has no further items to tab to.">Chamado por um componente independente quando ele atingiu sua última parada de tabulação e não tem mais itens para os quais tabular.</summary>
      <param name="request" vsli:raw="Specifies whether focus should be set to the first or the last tab stop.">Especifica se o foco deve ser definido para a primeira ou a última parada de tabulação.</param>
      <returns vsli:raw="If this method returns &lt;see langword=&quot;true&quot; /&gt;, the site has shifted focus to another component. If this method returns &lt;see langword=&quot;false&quot; /&gt;, focus is still within the calling component. The component should &quot;wrap around&quot; and set focus to its first contained tab stop.">Se esse método retornar <see langword="true" />, o site terá alterado o foco para outro componente. Se esse método retornar <see langword="false" />, o foco ainda estará dentro do componente de chamada. O componente deve "encapsular" e definir o foco para a primeira parada de tabulação independente.</returns>
    </member>
    <member name="P:System.Windows.Interop.IKeyboardInputSite.Sink">
      <summary vsli:raw="Gets the keyboard sink associated with this site.">Obtém o coletor de teclado associado a este site.</summary>
      <returns vsli:raw="The current site's &lt;see cref=&quot;T:System.Windows.Interop.IKeyboardInputSink&quot; /&gt; interface.">A interface do <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> site atual.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSite.Unregister">
      <summary vsli:raw="Unregisters a child keyboard input sink from this site.">Cancela o registro de um coletor de entrada de teclado filho deste site.</summary>
    </member>
    <member name="T:System.Windows.Interop.MSG">
      <summary vsli:raw="Contains message information from a thread's message queue.">Contém informações da mensagem da fila de mensagens do thread.</summary>
    </member>
    <member name="P:System.Windows.Interop.MSG.hwnd">
      <summary vsli:raw="Gets or sets the window handle (HWND) to the window whose window procedure receives the message.">Obtém ou define o identificador de janela (HWND) para a janela cujo procedimento de janela recebe a mensagem.</summary>
      <returns vsli:raw="The window handle (HWND).">O identificador de janela (HWND).</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.lParam">
      <summary vsli:raw="Gets or sets the &lt;paramref name=&quot;lParam&quot; /&gt; value that specifies additional information about the message. The exact meaning depends on the value of the &lt;see cref=&quot;P:System.Windows.Interop.MSG.message&quot; /&gt; member.">Obtém ou define o valor <paramref name="lParam" /> que especifica informações adicionais sobre a mensagem. O significado exato depende do valor do membro <see cref="P:System.Windows.Interop.MSG.message" />.</summary>
      <returns vsli:raw="The &lt;paramref name=&quot;lParam&quot; /&gt; value for the message.">O <paramref name="lParam" /> valor da mensagem.</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.message">
      <summary vsli:raw="Gets or sets the message identifier.">Obtém ou define o identificador da mensagem.</summary>
      <returns vsli:raw="The message identifier.">O identificador da mensagem.</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.pt_x">
      <summary vsli:raw="Gets or sets the x coordinate of the cursor position on the screen, when the message was posted.">Obtém ou define a coordenada x da posição do cursor na tela de quando a mensagem foi postada.</summary>
      <returns vsli:raw="The x coordinate of the cursor position.">A coordenada x da posição do cursor.</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.pt_y">
      <summary vsli:raw="Gets or sets the y coordinate of the cursor position on the screen, when the message was posted.">Obtém ou define a coordenada y da posição do cursor na tela de quando a mensagem foi postada.</summary>
      <returns vsli:raw="The y coordinate of the cursor position.">A coordenada y da posição do cursor.</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.time">
      <summary vsli:raw="Gets or sets the time at which the message was posted.">Obtém ou define a hora em que a mensagem foi postada.</summary>
      <returns vsli:raw="The time that the message was posted.">A hora em que a mensagem foi postada.</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.wParam">
      <summary vsli:raw="Gets or sets the &lt;paramref name=&quot;wParam&quot; /&gt; value for the message, which specifies additional information about the message. The exact meaning depends on the value of the message.">Obtém ou define o valor <paramref name="wParam" /> para a mensagem que especifica informações adicionais sobre a mensagem. O significado exato depende do valor da mensagem.</summary>
      <returns vsli:raw="The &lt;paramref name=&quot;wParam&quot; /&gt; value for the message.">O <paramref name="wParam" /> valor da mensagem.</returns>
    </member>
    <member name="T:System.Windows.Interop.ThreadMessageEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage&quot; /&gt; and &lt;see cref=&quot;E:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage&quot; /&gt; events.">Representa o método que manipula os eventos <see cref="E:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage" /> e <see cref="E:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage" />.</summary>
      <param name="msg" vsli:raw="A structure with the message data.">Uma estrutura com os dados da mensagem.</param>
      <param name="handled" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a mensagem foi manipulada; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="T:System.Windows.IWeakEventListener">
      <summary vsli:raw="Provides event listening support for classes that expect to receive events through the WeakEvent pattern and a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt;.">Fornece suporte de escuta de eventos para as classes que esperam receber eventos por meio do padrão WeakEvent e um <see cref="T:System.Windows.WeakEventManager" />.</summary>
    </member>
    <member name="M:System.Windows.IWeakEventListener.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary vsli:raw="Receives events from the centralized event manager.">Recebe eventos do gerenciador de eventos centralizado.</summary>
      <param name="managerType" vsli:raw="The type of the &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; calling this method.">O tipo do <see cref="T:System.Windows.WeakEventManager" /> que chama esse método.</param>
      <param name="sender" vsli:raw="Object that originated the event.">O objeto que originou o evento.</param>
      <param name="e" vsli:raw="Event data.">Dados do evento.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the listener handled the event. It is considered an error by the &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; handling in WPF to register a listener for an event that the listener does not handle. Regardless, the method should return &lt;see langword=&quot;false&quot; /&gt; if it receives an event that it does not recognize or handle.">
        <see langword="true" /> se o ouvinte tratou o evento. É considerado um erro pela manipulação de <see cref="T:System.Windows.WeakEventManager" /> em WPF para registrar um ouvinte para um evento que o ouvinte não manipula. De qualquer forma, o método deverá retornar <see langword="false" /> se receber um evento que não reconhece ou trata.</returns>
    </member>
    <member name="T:System.Windows.LocalValueEntry">
      <summary vsli:raw="Represents a property identifier and the property value for a locally set dependency property.">Representa um identificador de propriedade e o valor da propriedade para a propriedade de dependência definida localmente.</summary>
    </member>
    <member name="M:System.Windows.LocalValueEntry.Equals(System.Object)">
      <summary vsli:raw="Determines whether two &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; instances are equal.">Determina se duas instâncias <see cref="T:System.Windows.LocalValueEntry" /> são iguais.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; to compare with the current &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt;.">O <see cref="T:System.Windows.LocalValueEntry" /> a ser comparado com o <see cref="T:System.Windows.LocalValueEntry" /> atual.</param>
      <returns vsli:raw="This &lt;see cref=&quot;M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)&quot; /&gt; implementation compares the values of the &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Property&quot; /&gt;, and potentially compares the values of &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Value&quot; /&gt;. The &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Property&quot; /&gt; component of a &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; is a value type, so will always be a bitwise comparison. For the &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Value&quot; /&gt; component, this implementation employs a bitwise comparison if it is a value type. For locally set properties that have reference types, the behavior is deferred to that type's equality determination mechanisms, because it just uses the == operator on the two values internally. By default, this would be a reference equality of the values and thus the equality of the entire &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; would become a reference equality.">Essa implementação <see cref="M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)" /> compara os valores de <see cref="P:System.Windows.LocalValueEntry.Property" /> e potencialmente compara os valores de <see cref="P:System.Windows.LocalValueEntry.Value" />. O componente <see cref="P:System.Windows.LocalValueEntry.Property" /> de um <see cref="T:System.Windows.LocalValueEntry" /> é um tipo de valor, portanto, sempre será uma comparação bit a bit. Para o componente <see cref="P:System.Windows.LocalValueEntry.Value" />, essa implementação usa uma comparação bit a bit se ele é um tipo de valor. Para definir propriedades locais que têm tipos de referência, o comportamento é adiado para os mecanismos de determinação de igualdade desse tipo, porque ele usa apenas o operador == nos dois valores internamente. Por padrão, isso seria uma igualdade de referência dos valores e, portanto, a igualdade de todo o <see cref="T:System.Windows.LocalValueEntry" /> se tornaria uma igualdade de referência.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEntry.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt;.">Retorna o código hash para este <see cref="T:System.Windows.LocalValueEntry" />.</summary>
      <returns vsli:raw="A signed 32-bit integer value.">Um valor inteiro de 32 bits com sinal.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)">
      <summary vsli:raw="Compares the specified &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; instances to determine whether they are the same.">Compara as instâncias de <see cref="T:System.Windows.LocalValueEntry" /> especificadas para determinar se são iguais.</summary>
      <param name="obj1" vsli:raw="The first instance to compare.">A primeira instância a ser comparada.</param>
      <param name="obj2" vsli:raw="The second instance to compare.">A segunda instância a ser comparada.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;obj1&quot; /&gt;&lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; is equal to the &lt;paramref name=&quot;obj2&quot; /&gt;&lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o <paramref name="obj1" /><see cref="T:System.Windows.LocalValueEntry" /> for igual a <paramref name="obj2" /><see cref="T:System.Windows.LocalValueEntry" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEntry.op_Inequality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)">
      <summary vsli:raw="Compares the specified &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt; instances to determine whether they are different.">Compara as instâncias de <see cref="T:System.Windows.LocalValueEnumerator" /> especificadas para determinar se são diferentes.</summary>
      <param name="obj1" vsli:raw="The first instance to compare.">A primeira instância a ser comparada.</param>
      <param name="obj2" vsli:raw="The second instance to compare.">A segunda instância a ser comparada.</param>
      <returns vsli:raw="This implementation compares the values of the &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Property&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Value&quot; /&gt; components of a &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt;. The &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Property&quot; /&gt; component of a &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; is always a value type, so this comparison will always be a bitwise comparison. For the &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Value&quot; /&gt; component, this implementation employs a bitwise comparison if it is a value type.  &#xA;  &#xA; For locally set properties that have reference types, the behavior is deferred to that type's equality determination mechanisms, because it uses the &lt;see langword=&quot;==&quot; /&gt; operator on the two values internally. By default, this is a reference equality of the values.">Essa implementação compara os valores dos componentes <see cref="P:System.Windows.LocalValueEntry.Property" /> e <see cref="P:System.Windows.LocalValueEntry.Value" /> de um <see cref="T:System.Windows.LocalValueEntry" />. O componente <see cref="P:System.Windows.LocalValueEntry.Property" /> de um <see cref="T:System.Windows.LocalValueEntry" /> é sempre um tipo de valor, portanto, essa comparação sempre será uma comparação bit a bit. Para o componente <see cref="P:System.Windows.LocalValueEntry.Value" />, essa implementação usa uma comparação bit a bit se ele é um tipo de valor.  
Para definir propriedades locais que têm tipos de referência, o comportamento é adiado para os mecanismos de determinação de igualdade desse tipo, porque ele usa o operador <see langword="==" /> nos dois valores internamente. Por padrão, essa é uma igualdade de referência dos valores.</returns>
    </member>
    <member name="P:System.Windows.LocalValueEntry.Property">
      <summary vsli:raw="Gets the identifier for the locally set dependency property that is represented by this entry.">Obtém o identificador para a propriedade de dependência definida localmente que é representada por esta entrada.</summary>
      <returns vsli:raw="The identifier for the locally set dependency property.">O identificador para a propriedade de dependência definida localmente.</returns>
    </member>
    <member name="P:System.Windows.LocalValueEntry.Value">
      <summary vsli:raw="Gets the value of the locally set dependency property.">Obtém o valor da propriedade de dependência definida localmente.</summary>
      <returns vsli:raw="The value of the locally set dependency property as an object.">O valor da propriedade de dependência definida localmente como um objeto.</returns>
    </member>
    <member name="T:System.Windows.LocalValueEnumerator">
      <summary vsli:raw="Provides enumeration support for the local values of any dependency properties that exist on a &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">Fornece suporte de enumeração para os valores de locais de quaisquer propriedades de dependência que existem em um <see cref="T:System.Windows.DependencyObject" />.</summary>
    </member>
    <member name="P:System.Windows.LocalValueEnumerator.Count">
      <summary vsli:raw="Gets the number of items that are represented in the collection.">Obtém o número de itens representados na coleção.</summary>
      <returns vsli:raw="The number of items in the collection.">Número de itens na coleção.</returns>
    </member>
    <member name="P:System.Windows.LocalValueEnumerator.Current">
      <summary vsli:raw="Gets the current element in the collection.">Obtém o elemento atual na coleção.</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; in the collection.">O <see cref="T:System.Windows.LocalValueEntry" /> atual na coleção.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.Equals(System.Object)">
      <summary vsli:raw="Determines whether the provided &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt; is equivalent to this &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt;.">Determina se o <see cref="T:System.Windows.LocalValueEnumerator" /> fornecido é equivalente a este <see cref="T:System.Windows.LocalValueEnumerator" />.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt; to compare with the current &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt;.">O <see cref="T:System.Windows.LocalValueEnumerator" /> a ser comparado com o <see cref="T:System.Windows.LocalValueEnumerator" /> atual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o <see cref="T:System.Windows.LocalValueEnumerator" /> especificado for igual ao <see cref="T:System.Windows.LocalValueEnumerator" /> atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.GetHashCode">
      <summary vsli:raw="Returns a hash code for the current &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt;.">Retorna um código hash para o <see cref="T:System.Windows.LocalValueEnumerator" /> atual.</summary>
      <returns vsli:raw="A 32-bit integer hash code.">Um código hash de inteiro de 32 bits.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.MoveNext">
      <summary vsli:raw="Advances the enumerator to the next element of the collection.">Avança o enumerador para o próximo elemento da coleção.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the enumerator was successfully advanced to the next element; &lt;see langword=&quot;false&quot; /&gt; if the enumerator has passed the end of the collection.">
        <see langword="true" /> se o enumerador foi avançado com êxito para o próximo elemento; <see langword="false" /> se o enumerador passou o final da coleção.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.op_Equality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)">
      <summary vsli:raw="Compares whether two specified &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt; objects are the same.">Compara os dois objetos <see cref="T:System.Windows.LocalValueEnumerator" /> especificados para verificar se são iguais.</summary>
      <param name="obj1" vsli:raw="The first object to compare.">O primeiro objeto a ser comparado.</param>
      <param name="obj2" vsli:raw="The second object to compare.">O segundo objeto a ser comparado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;obj1&quot; /&gt;&lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt; is equal to the &lt;paramref name=&quot;obj2&quot; /&gt;&lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o <paramref name="obj1" /><see cref="T:System.Windows.LocalValueEnumerator" /> for igual a <paramref name="obj2" /><see cref="T:System.Windows.LocalValueEnumerator" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.op_Inequality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)">
      <summary vsli:raw="Compares two specified &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt; objects to determine whether they are not the same.">Compara dois objetos <see cref="T:System.Windows.LocalValueEnumerator" /> especificados para determinar se eles não são iguais.</summary>
      <param name="obj1" vsli:raw="The first object to compare.">O primeiro objeto a ser comparado.</param>
      <param name="obj2" vsli:raw="The second object to compare.">O segundo objeto a ser comparado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the instances are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se as instâncias não forem iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.Reset">
      <summary vsli:raw="Sets the enumerator to its initial position, which is before the first element in the collection.">Define o enumerador com sua posição inicial, que é antes do primeiro elemento da coleção.</summary>
    </member>
    <member name="P:System.Windows.LocalValueEnumerator.System#Collections#IEnumerator#Current">
      <summary vsli:raw="For a description of this members, see &lt;see cref=&quot;P:System.Collections.IEnumerator.Current&quot; /&gt;.">Para obter uma descrição desses membros, consulte <see cref="P:System.Collections.IEnumerator.Current" />.</summary>
      <returns vsli:raw="The current element in the collection.">O elemento atual na coleção.</returns>
    </member>
    <member name="T:System.Windows.Markup.DesignerSerializationOptions">
      <summary vsli:raw="Specifies how a property is to be serialized.">Especifica como uma propriedade deverá ser serializada.</summary>
    </member>
    <member name="F:System.Windows.Markup.DesignerSerializationOptions.SerializeAsAttribute">
      <summary vsli:raw="The property should be serialized as an attribute.">A propriedade deve ser serializada como um atributo.</summary>
    </member>
    <member name="T:System.Windows.Markup.DesignerSerializationOptionsAttribute">
      <summary vsli:raw="Specifies the serialization flags for a property.">Especifica os sinalizadores de serialização para uma propriedade.</summary>
    </member>
    <member name="M:System.Windows.Markup.DesignerSerializationOptionsAttribute.#ctor(System.Windows.Markup.DesignerSerializationOptions)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.DesignerSerializationOptionsAttribute&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.DesignerSerializationOptionsAttribute" />.</summary>
      <param name="designerSerializationOptions" vsli:raw="Specifies how the property is to be serialized.">Especifica como a propriedade deverá ser serializada.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;designerSerializationOptions&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Windows.Markup.DesignerSerializationOptions&quot; /&gt; value.">
        <paramref name="designerSerializationOptions" /> não é um valor <see cref="T:System.Windows.Markup.DesignerSerializationOptions" /> válido.</exception>
    </member>
    <member name="P:System.Windows.Markup.DesignerSerializationOptionsAttribute.DesignerSerializationOptions">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.DesignerSerializationOptions&quot; /&gt; set on the attribute.">Obtém o <see cref="T:System.Windows.Markup.DesignerSerializationOptions" /> definido no atributo.</summary>
      <returns vsli:raw="The serialization option, as a value of the enumeration.">A opção de serialização, como um valor da enumeração.</returns>
    </member>
    <member name="T:System.Windows.Markup.InternalTypeHelper">
      <summary vsli:raw="Abstract class used internally by the WPF XAML compiler to support the use of internal types.">Classe abstrata usada internamente pelo compilador de XAML do WPF para compatibilidade com o uso de tipos internos.</summary>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.InternalTypeHelper&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.InternalTypeHelper" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
      <summary vsli:raw="When overridden in a derived (generated) class, attaches an event handler delegate to an internal event.">Quando substituído em uma classe derivada (gerada), anexa um delegado de manipulador de eventos a um evento interno.</summary>
      <param name="eventInfo" vsli:raw="The event information for the event (CLR reflection information).">As informações de evento para o evento (informações de reflexão do CLR).</param>
      <param name="target" vsli:raw="The target where the handler is attached.">O destino em que o manipulador é anexado.</param>
      <param name="handler" vsli:raw="The event handler.">O manipulador de eventos.</param>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
      <summary vsli:raw="When overridden in a derived (generated) class, creates an event delegate referencing a non-public handler method.">Quando substituído em uma classe derivada (gerada), cria um delegado de evento, fazendo referência a um método de manipulador não público.</summary>
      <param name="delegateType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the delegate.">O <see cref="T:System.Type" /> do delegado.</param>
      <param name="target" vsli:raw="The target where the handler is attached.">O destino em que o manipulador é anexado.</param>
      <param name="handler" vsli:raw="The name of the handler implementation.">O nome da implementação do manipulador.</param>
      <returns vsli:raw="The delegate reference.">A referência de delegado.</returns>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
      <summary vsli:raw="When overridden in a derived (generated) class, creates an instance of an internal type.">Quando substituído em uma classe derivada (gerada), cria uma instância de um tipo interno.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to create.">O <see cref="T:System.Type" /> a ser criado.</param>
      <param name="culture" vsli:raw="Culture specific information.">Informações específicas à cultura.</param>
      <returns vsli:raw="The created instance.">A instância criada.</returns>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
      <summary vsli:raw="When overridden in a derived (generated) class, gets the value of an internal property on the target object.">Quando substituído em uma classe derivada (gerada), obtém o valor de uma propriedade interna no objeto de destino</summary>
      <param name="propertyInfo" vsli:raw="Property information for the property to get.">Informações de propriedade da propriedade a ser obtida.</param>
      <param name="target" vsli:raw="The object that holds the desired property value.">O objeto que contém o valor da propriedade desejada.</param>
      <param name="culture" vsli:raw="Culture specific information.">Informações específicas à cultura.</param>
      <returns vsli:raw="The value of the property.">O valor da propriedade.</returns>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
      <summary vsli:raw="When overridden in a derived (generated) class, sets the value on an internal property on the target object.">Quando substituído em uma classe derivada (gerada), define o valor de uma propriedade interna no objeto de destino.</summary>
      <param name="propertyInfo" vsli:raw="Property information for the property to set.">Informações de propriedade da propriedade a ser definida.</param>
      <param name="target" vsli:raw="The object that holds the desired property value.">O objeto que contém o valor da propriedade desejada.</param>
      <param name="value" vsli:raw="The value to set.">O valor a ser definido.</param>
      <param name="culture" vsli:raw="Culture specific information.">Informações específicas à cultura.</param>
    </member>
    <member name="T:System.Windows.Markup.IReceiveMarkupExtension">
      <summary vsli:raw="Provides a mechanism whereby types can declare that they can receive an expression (or another class) from a markup extension, where the output is a different property type than the target property. Do not use for .NET Framework 4 implementations.">Fornece um mecanismo pelo qual tipos podem declarar que estão aptos a receber uma expressão (ou outra classe) de uma extensão de marcação, em que a saída é um tipo de propriedade diferente da propriedade de destino. Não use para implementações do .NET Framework 4.</summary>
    </member>
    <member name="M:System.Windows.Markup.IReceiveMarkupExtension.ReceiveMarkupExtension(System.String,System.Windows.Markup.MarkupExtension,System.IServiceProvider)">
      <summary vsli:raw="Provides the handling for markup extensions that provide property values. Do not use for .NET Framework 4 implementations; see &lt;see cref=&quot;T:System.Windows.Markup.IReceiveMarkupExtension&quot; /&gt;.">Fornece a manipulação para extensões de marcação que fornecem valores de propriedade. Não use para implementações do .NET Framework 4; consulte <see cref="T:System.Windows.Markup.IReceiveMarkupExtension" />.</summary>
      <param name="property" vsli:raw="The name of the target property.">O nome da propriedade de destino.</param>
      <param name="markupExtension" vsli:raw="The markup extension instance of the incoming data.">A instância da extensão de marcação dos dados de entrada.</param>
      <param name="serviceProvider" vsli:raw="Can provide additional services that should be performed when processing the markup extension data for a property value.">Pode fornecer serviços adicionais que devem ser executados durante o processamento de dados de extensão de marcação para um valor da propriedade.</param>
    </member>
    <member name="T:System.Windows.Markup.Primitives.MarkupObject">
      <summary vsli:raw="Abstract class that represents an object that can be used to navigate a tree of objects.">Classe abstrata que representa um objeto que pode ser usado para navegar em uma árvore de objetos.</summary>
    </member>
    <member name="M:System.Windows.Markup.Primitives.MarkupObject.AssignRootContext(System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="When overridden in a derived class, assigns a root context for &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; classes.">Quando substituído em uma classe derivada, atribui um contexto raiz a classes <see cref="T:System.Windows.Markup.ValueSerializer" />.</summary>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Markup.IValueSerializerContext&quot; /&gt; to assign a root context for.">O <see cref="T:System.Windows.Markup.IValueSerializerContext" /> ao qual atribuir um contexto raiz.</param>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupObject.Attributes">
      <summary vsli:raw="When overridden in a derived class, gets the attributes associated with this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupObject&quot; /&gt;.">Quando substituído em uma classe derivada, obtém os atributos associado a essa <see cref="T:System.Windows.Markup.Primitives.MarkupObject" />.</summary>
      <returns vsli:raw="The collection of attributes.">A coleção de atributos.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupObject.Instance">
      <summary vsli:raw="When overridden in a derived class, gets the instance of the object represented by this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupObject&quot; /&gt;.">Quando substituído em uma classe derivada, obtém a instância do objeto representada por este <see cref="T:System.Windows.Markup.Primitives.MarkupObject" />.</summary>
      <returns vsli:raw="The instance of the object.">A instância do objeto</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupObject.ObjectType">
      <summary vsli:raw="When overridden in a derived class, gets the type of the &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupObject&quot; /&gt; instance.">Quando substituído em uma classe derivada, obtém o tipo da instância <see cref="T:System.Windows.Markup.Primitives.MarkupObject" />.</summary>
      <returns vsli:raw="The type of the object.">O tipo do objeto.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupObject.Properties">
      <summary vsli:raw="When overridden in a derived class, gets the properties of this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupObject&quot; /&gt; instance that should be written to XAML.">Quando substituído em uma classe derivada, obtém as propriedades dessa instância <see cref="T:System.Windows.Markup.Primitives.MarkupObject" /> que deve ser gravada em XAML.</summary>
      <returns vsli:raw="The properties.">As propriedades.</returns>
    </member>
    <member name="T:System.Windows.Markup.Primitives.MarkupProperty">
      <summary vsli:raw="Abstract class that provides a property description to be used while writing to markup which encapsulates access to properties and their values.">Classe abstrata que fornece uma descrição de propriedade a ser usada ao gravar a marcação que encapsula o acesso a propriedades e seus valores.</summary>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.Attributes">
      <summary vsli:raw="When overridden in a derived class, gets the attributes associated with this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt;.">Quando substituído em uma classe derivada, obtém os atributos associado a essa <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />.</summary>
      <returns vsli:raw="The collection of attributes.">A coleção de atributos.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty">
      <summary vsli:raw="When overridden in a derived class, gets the &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; identifier for the markup property if the property is implemented as a dependency property.">Quando substituído em uma classe derivada, obtém o identificador <see cref="T:System.Windows.DependencyProperty" /> para a propriedade de marcação se a propriedade for implementada como uma propriedade de dependência</summary>
      <returns vsli:raw="The dependency property identifier.">O identificador da propriedade de dependência.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsAttached">
      <summary vsli:raw="When overridden in a derived class, determines whether this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; is an attached &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt;.">Quando substituído em uma classe derivada, determina se este <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> é um <see cref="T:System.Windows.DependencyProperty" /> anexado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property is an attached &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />se a propriedade for anexada <see cref="T:System.Windows.DependencyProperty" />; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsComposite">
      <summary vsli:raw="When overridden in a derived class, determines whether this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; is a composite property.">Quando substituído em uma classe derivada, determina se este <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> é uma propriedade de composição.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; is this property is a composite property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Esta propriedade é uma propriedade composta; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsConstructorArgument">
      <summary vsli:raw="When overridden in a derived class, determines whether this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; represents a constructor argument.">Quando substituído em uma classe derivada, determina se este <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> representa um argumento de construtor.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this property represents a constructor argument; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Se essa propriedade representa um argumento de Construtor; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsContent">
      <summary vsli:raw="When overridden in a derived class, determines whether this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; represents direct content of a collection.">Quando substituído em uma classe derivada, determina se este <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> representa conteúdo direto de uma coleção.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property represents direct content; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />se a propriedade representa conteúdo direto; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsKey">
      <summary vsli:raw="When overridden in a derived class, determines whether this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; represents the key used by the &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupObject&quot; /&gt; to store the item in a dictionary.">Quando substituído em uma classe derivada, determina se este <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> representa a chave usada pelo <see cref="T:System.Windows.Markup.Primitives.MarkupObject" /> para armazenar o item em um dicionário.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this property represents a key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Se essa propriedade representar uma chave; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsValueAsString">
      <summary vsli:raw="When overridden in a derived class, determines whether this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; represents text which is passed to a type converter to create an instance of the property or if a constructor should be used.">Quando substituído em uma classe derivada, determina se este <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> representa o texto passado para um conversor de tipo para criar uma instância da propriedade ou se um construtor deve ser usado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; represents a string; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, se isso <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> representar uma cadeia de caracteres; <see langword="false" />caso contrário,.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.Items">
      <summary vsli:raw="When overridden in a derived class, gets the items that make up the value of this property.">Quando substituído em uma classe derivada, obtém os itens que compõem o valor dessa propriedade.</summary>
      <returns vsli:raw="The items that make up the value of this property.">Os itens que compõem o valor dessa propriedade.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.Name">
      <summary vsli:raw="When overridden in a derived class, gets a name that is used for diagnostics and error reporting.">Quando substituído em uma classe derivada, obtém um nome que é usado para relatórios de erros e diagnóstico.</summary>
      <returns vsli:raw="The identifier property name.">O nome da Propriedade do identificador.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor">
      <summary vsli:raw="When overridden in a derived class, gets the &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; for the markup property.">Quando substituído em uma classe derivada, obtém o <see cref="T:System.ComponentModel.PropertyDescriptor" /> para a propriedade de marcação.</summary>
      <returns vsli:raw="The property descriptor.">O descritor da propriedade.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.PropertyType">
      <summary vsli:raw="When overridden in a derived class, gets the CLR type of the property.">Quando substituído em uma classe derivada, obtém o tipo CLR da propriedade.</summary>
      <returns vsli:raw="The CLR type.">O tipo CLR.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.StringValue">
      <summary vsli:raw="When overridden in a derived class, gets the string value of this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt;.">Quando substituído em uma classe derivada, obtém o valor de cadeia de caracteres deste <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />.</summary>
      <returns vsli:raw="The string value.">O valor da cadeia de caracteres.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.TypeReferences">
      <summary vsli:raw="When overridden in a derived class, gets the set of types that this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; will reference when it serializes its value as a string.">Quando substituído em uma classe derivada, obtém o conjunto de tipos a que este <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> fará referência ao serializar seu valor como uma cadeia de caracteres.</summary>
      <returns vsli:raw="The set of types.">O conjunto de tipos.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.Value">
      <summary vsli:raw="When overridden in a derived class, gets the current value of this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt;.">Quando substituído em uma classe derivada, obtém o valor atual deste <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />.</summary>
      <returns vsli:raw="The current value.">O valor atual.</returns>
    </member>
    <member name="T:System.Windows.Markup.ServiceProviders">
      <summary vsli:raw="Provides an implementation for the &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; interface with methods that enable adding services.">Fornece uma implementação para a interface <see cref="T:System.IServiceProvider" /> com métodos que permitem adicionar serviços.</summary>
    </member>
    <member name="M:System.Windows.Markup.ServiceProviders.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ServiceProviders&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.ServiceProviders" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.ServiceProviders.AddService(System.Type,System.Object)">
      <summary vsli:raw="Adds a service to the list.">Adiciona um serviço à lista.</summary>
      <param name="serviceType" vsli:raw="Service type of the new service.">Tipo de serviço do novo serviço.</param>
      <param name="service" vsli:raw="The service implementation class.">A classe de implementação de serviço.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serviceType&quot; /&gt; or &lt;paramref name=&quot;service&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="serviceType" /> ou <paramref name="service" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Attempted to add a service that already exists in the dictionary.">Ocorreu uma tentativa de adicionar um serviço que já existe no dicionário.</exception>
    </member>
    <member name="M:System.Windows.Markup.ServiceProviders.GetService(System.Type)">
      <summary vsli:raw="Gets the service object of the specified type.">Obtém o objeto de serviço do tipo especificado.</summary>
      <param name="serviceType" vsli:raw="The type of service object to get.">O tipo de objeto de serviço a obter.</param>
      <returns vsli:raw="A service implementation for the type &lt;paramref name=&quot;serviceType&quot; /&gt;. May be &lt;see langword=&quot;null&quot; /&gt; if there is no service stored for type &lt;paramref name=&quot;serviceType&quot; /&gt;.">Uma implementação de serviço para o tipo <paramref name="serviceType" />. Pode ser <see langword="null" /> se não há nenhum serviço armazenado para o tipo <paramref name="serviceType" />.</returns>
    </member>
    <member name="T:System.Windows.Media.Converters.MatrixValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Converte instâncias de <see cref="T:System.String" /> de e para instâncias de <see cref="T:System.Windows.Media.Matrix" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Media.Converters.MatrixValueSerializer&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Media.Converters.MatrixValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if conversion from a given &lt;see cref=&quot;T:System.String&quot; /&gt; to an instance of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; is possible.">Determina se a conversão de um determinado <see cref="T:System.String" /> em uma instância de <see cref="T:System.Windows.Media.Matrix" /> é possível.</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">Cadeia de caracteres a ser avaliada para conversão.</param>
      <param name="context" vsli:raw="Context information used for conversion.">Informações de contexto usadas para conversão.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value can be converted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o valor puder ser convertido; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if an instance of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Determina se uma instância de <see cref="T:System.Windows.Media.Matrix" /> pode ser convertida em um <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="Instance of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; to evaluate for conversion.">Instância de <see cref="T:System.Windows.Media.Matrix" /> a ser avaliada para conversão.</param>
      <param name="context" vsli:raw="Context information used for conversion.">Informações de contexto usadas para conversão.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="value" /> puder ser convertido em um <see cref="T:System.String" />; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Occurs when &lt;paramref name=&quot;value&quot; /&gt; is not a &lt;see cref=&quot;T:System.Windows.Media.Int32Collection&quot; /&gt;.">Ocorre quando <paramref name="value" /> não é um <see cref="T:System.Windows.Media.Int32Collection" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Converte um <see cref="T:System.String" /> em um <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="value" vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt; value to convert into a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">O valor de <see cref="T:System.String" /> a ser convertido em um <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="context" vsli:raw="Context information used for conversion.">Informações de contexto usadas para conversão.</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">Uma nova instância de <see cref="T:System.Windows.Media.Matrix" /> com base no <paramref name="value" /> fornecido.</returns>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Converte uma instância de <see cref="T:System.Windows.Media.Matrix" /> em um <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="Instance of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; to evaluate for conversion.">Instância de <see cref="T:System.Windows.Media.Matrix" /> a ser avaliada para conversão.</param>
      <param name="context" vsli:raw="Context information used for conversion.">Informações de contexto usadas para conversão.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; representation of the supplied &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; object.">Uma representação de <see cref="T:System.String" /> do objeto <see cref="T:System.Windows.Media.Matrix" /> fornecido.</returns>
    </member>
    <member name="T:System.Windows.Media.DisableDpiAwarenessAttribute">
      <summary vsli:raw="Allows WPF applications to disable dots per inch (dpi) awareness for all user interface elements.">Permite que aplicativos WPF desabilitem o reconhecimento de dpi (pontos por polegada) para todos os elementos de interface do usuário.</summary>
    </member>
    <member name="M:System.Windows.Media.DisableDpiAwarenessAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of &lt;see cref=&quot;T:System.Windows.Media.DisableDpiAwarenessAttribute&quot; /&gt;.">Inicializa uma nova instância de <see cref="T:System.Windows.Media.DisableDpiAwarenessAttribute" />.</summary>
    </member>
    <member name="T:System.Windows.Media.Matrix">
      <summary vsli:raw="Represents a 3x3 affine transformation matrix used for transformations in 2-D space.">Representa uma matriz de transformação 3x3 usada para transformações no espaço 2D.</summary>
    </member>
    <member name="M:System.Windows.Media.Matrix.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Inicializa uma nova instância da estrutura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="m11" vsli:raw="The new &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Media.Matrix.M11&quot; /&gt; coefficient.">O novo coeficiente <see cref="P:System.Windows.Media.Matrix.M11" /> da estrutura <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="m12" vsli:raw="The new &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Media.Matrix.M12&quot; /&gt; coefficient.">O novo coeficiente <see cref="P:System.Windows.Media.Matrix.M12" /> da estrutura <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="m21" vsli:raw="The new &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Media.Matrix.M21&quot; /&gt; coefficient.">O novo coeficiente <see cref="P:System.Windows.Media.Matrix.M21" /> da estrutura <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="m22" vsli:raw="The new &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Media.Matrix.M22&quot; /&gt; coefficient.">O novo coeficiente <see cref="P:System.Windows.Media.Matrix.M22" /> da estrutura <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="offsetX" vsli:raw="The new &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Media.Matrix.OffsetX&quot; /&gt; coefficient.">O novo coeficiente <see cref="P:System.Windows.Media.Matrix.OffsetX" /> da estrutura <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="offsetY" vsli:raw="The new &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Media.Matrix.OffsetY&quot; /&gt; coefficient.">O novo coeficiente <see cref="P:System.Windows.Media.Matrix.OffsetY" /> da estrutura <see cref="T:System.Windows.Media.Matrix" />.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Append(System.Windows.Media.Matrix)">
      <summary vsli:raw="Appends the specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Acrescenta a estrutura <see cref="T:System.Windows.Media.Matrix" /> especificada a esta estrutura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="matrix" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to append to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">A estrutura <see cref="T:System.Windows.Media.Matrix" /> a ser acrescentada a esta estrutura <see cref="T:System.Windows.Media.Matrix" />.</param>
    </member>
    <member name="P:System.Windows.Media.Matrix.Determinant">
      <summary vsli:raw="Gets the determinant of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Obtém o determinante dessa estrutura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns vsli:raw="The determinant of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">O determinante desse <see cref="T:System.Windows.Media.Matrix" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure that is identical to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Determina se o <see cref="T:System.Object" /> especificado é uma estrutura <see cref="T:System.Windows.Media.Matrix" /> idêntica a esta <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to compare.">O <see cref="T:System.Object" /> de comparação.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure that is identical to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="o" /> for uma estrutura <see cref="T:System.Windows.Media.Matrix" /> idêntica a esta estrutura <see cref="T:System.Windows.Media.Matrix" />, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Equals(System.Windows.Media.Matrix)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure is identical to this instance.">Determina se a estrutura <see cref="T:System.Windows.Media.Matrix" /> especificada é idêntica a esta instância.</summary>
      <param name="value" vsli:raw="The instance of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; to compare to this instance.">A instância <see cref="T:System.Windows.Media.Matrix" /> a ser comparada a essa instância.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if instances are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se as instâncias forem iguais, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Equals(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary vsli:raw="Determines whether the two specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structures are identical.">Determina se as duas estruturas <see cref="T:System.Windows.Media.Matrix" /> especificadas são idênticas.</summary>
      <param name="matrix1" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to compare.">A primeira estrutura <see cref="T:System.Windows.Media.Matrix" /> a ser comparada.</param>
      <param name="matrix2" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to compare.">A segunda estrutura <see cref="T:System.Windows.Media.Matrix" /> a ser comparada.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;matrix1&quot; /&gt; and &lt;paramref name=&quot;matrix2&quot; /&gt; are identical; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="matrix1" /> e <paramref name="matrix2" /> forem idênticas, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Retorna o código hash para esta estrutura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns vsli:raw="The hash code for this instance.">O código hash para essa instância.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.HasInverse">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure is invertible.">Obtém um valor que indica se esta estrutura <see cref="T:System.Windows.Media.Matrix" /> pode ser invertida.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; has an inverse; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />Se o <see cref="T:System.Windows.Media.Matrix" /> tiver um inverso; caso <see langword="false" />contrário,. O padrão é <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.Identity">
      <summary vsli:raw="Gets an identity &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Obtém um <see cref="T:System.Windows.Media.Matrix" /> de identidade.</summary>
      <returns vsli:raw="An identity matrix.">Uma matriz de identidade.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Invert">
      <summary vsli:raw="Inverts this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Inverte essa estrutura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure is not invertible.">A estrutura <see cref="T:System.Windows.Media.Matrix" /> não pode ser invertida.</exception>
    </member>
    <member name="P:System.Windows.Media.Matrix.IsIdentity">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure is an identity matrix.">Obtém um valor que indica se esta estrutura <see cref="T:System.Windows.Media.Matrix" /> é uma matriz de identidade.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure is an identity matrix; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />se a <see cref="T:System.Windows.Media.Matrix" /> estrutura for uma matriz de identidade; caso <see langword="false" />contrário,. O padrão é <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M11">
      <summary vsli:raw="Gets or sets the value of the first row and first column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Obtém ou define o valor da primeira linha e primeira coluna dessa estrutura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns vsli:raw="The value of the first row and first column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;. The default value is 1.">O valor da primeira linha e da primeira coluna dessa <see cref="T:System.Windows.Media.Matrix" />. O valor padrão é 1.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M12">
      <summary vsli:raw="Gets or sets the value of the first row and second column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Obtém ou define o valor da primeira linha e segunda coluna dessa estrutura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns vsli:raw="The value of the first row and second column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;. The default value is 0.">O valor da primeira linha e da segunda coluna desse <see cref="T:System.Windows.Media.Matrix" />. O valor padrão é 0.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M21">
      <summary vsli:raw="Gets or sets the value of the second row and first column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Obtém ou define o valor da segunda linha e da primeira coluna desta estrutura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns vsli:raw="The value of the second row and first column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;. The default value is 0.">O valor da segunda linha e a <see cref="T:System.Windows.Media.Matrix" />primeira coluna deste. O valor padrão é 0.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M22">
      <summary vsli:raw="Gets or sets the value of the second row and second column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Obtém ou define o valor da segunda linha e da segunda coluna desta estrutura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns vsli:raw="The value of the second row and second column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure. The default value is 1.">O valor da segunda linha e da segunda coluna dessa <see cref="T:System.Windows.Media.Matrix" /> estrutura. O valor padrão é 1.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary vsli:raw="Multiplies a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure by another &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Multiplica uma estrutura <see cref="T:System.Windows.Media.Matrix" /> por outra estrutura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="trans1" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to multiply.">A primeira estrutura <see cref="T:System.Windows.Media.Matrix" /> a se multiplicar.</param>
      <param name="trans2" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to multiply.">A segunda estrutura <see cref="T:System.Windows.Media.Matrix" /> a se multiplicar.</param>
      <returns vsli:raw="The result of multiplying &lt;paramref name=&quot;trans1&quot; /&gt; by &lt;paramref name=&quot;trans2&quot; /&gt;.">O resultado de multiplicar <paramref name="trans1" /> por <paramref name="trans2" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.OffsetX">
      <summary vsli:raw="Gets or sets the value of the third row and first column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Obtém ou define o valor da terceira linha e da primeira coluna desta estrutura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns vsli:raw="The value of the third row and first column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure. The default value is 0.">O valor da terceira linha e da primeira coluna desta estrutura <see cref="T:System.Windows.Media.Matrix" />. O valor padrão é 0.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.OffsetY">
      <summary vsli:raw="Gets or sets the value of the third row and second column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Obtém ou define o valor da terceira linha e da segunda coluna desta estrutura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns vsli:raw="The value of the third row and second column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure. The default value is 0.">O valor da terceira linha e da segunda coluna dessa <see cref="T:System.Windows.Media.Matrix" /> estrutura. O valor padrão é 0.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.op_Equality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary vsli:raw="Determines whether the two specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structures are identical.">Determina se as duas estruturas <see cref="T:System.Windows.Media.Matrix" /> especificadas são idênticas.</summary>
      <param name="matrix1" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to compare.">A primeira estrutura <see cref="T:System.Windows.Media.Matrix" /> a ser comparada.</param>
      <param name="matrix2" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to compare.">A segunda estrutura <see cref="T:System.Windows.Media.Matrix" /> a ser comparada.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;matrix1&quot; /&gt; and &lt;paramref name=&quot;matrix2&quot; /&gt; are identical; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="matrix1" /> e <paramref name="matrix2" /> forem idênticas, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.op_Inequality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary vsli:raw="Determines whether the two specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structures are not identical.">Determina se as duas estruturas <see cref="T:System.Windows.Media.Matrix" /> especificadas não são idênticas.</summary>
      <param name="matrix1" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to compare.">A primeira estrutura <see cref="T:System.Windows.Media.Matrix" /> a ser comparada.</param>
      <param name="matrix2" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to compare.">A segunda estrutura <see cref="T:System.Windows.Media.Matrix" /> a ser comparada.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;matrix1&quot; /&gt; and &lt;paramref name=&quot;matrix2&quot; /&gt; are not identical; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="matrix1" /> e <paramref name="matrix2" /> não forem idênticas, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.op_Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary vsli:raw="Multiplies a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure by another &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Multiplica uma estrutura <see cref="T:System.Windows.Media.Matrix" /> por outra estrutura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="trans1" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to multiply.">A primeira estrutura <see cref="T:System.Windows.Media.Matrix" /> a se multiplicar.</param>
      <param name="trans2" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to multiply.">A segunda estrutura <see cref="T:System.Windows.Media.Matrix" /> a se multiplicar.</param>
      <returns vsli:raw="The result of multiplying &lt;paramref name=&quot;trans1&quot; /&gt; by &lt;paramref name=&quot;trans2&quot; /&gt;.">O resultado de multiplicar <paramref name="trans1" /> por <paramref name="trans2" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Parse(System.String)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a matrix into the equivalent &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Converte uma representação <see cref="T:System.String" /> de uma matriz em uma estrutura <see cref="T:System.Windows.Media.Matrix" /> equivalente.</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; representation of the matrix.">A representação <see cref="T:System.String" /> da matriz.</param>
      <returns vsli:raw="The equivalent &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">A estrutura <see cref="T:System.Windows.Media.Matrix" /> equivalente.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Prepend(System.Windows.Media.Matrix)">
      <summary vsli:raw="Prepends the specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure onto this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Precede a estrutura <see cref="T:System.Windows.Media.Matrix" /> especificada nesta estrutura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="matrix" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to prepend to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">A estrutura <see cref="T:System.Windows.Media.Matrix" /> para preceder essa estrutura <see cref="T:System.Windows.Media.Matrix" />.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Rotate(System.Double)">
      <summary vsli:raw="Applies a rotation of the specified angle about the origin of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Aplica uma rotação do ângulo especificado sobre a origem desta estrutura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="angle" vsli:raw="The angle of rotation.">O ângulo de rotação.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.RotateAt(System.Double,System.Double,System.Double)">
      <summary vsli:raw="Rotates this matrix about the specified point.">Gira esta matriz sobre o ponto especificado.</summary>
      <param name="angle" vsli:raw="The angle, in degrees, by which to rotate this matrix.">O ângulo, em graus, pelo qual girar essa matriz.</param>
      <param name="centerX" vsli:raw="The x-coordinate of the point about which to rotate this matrix.">A coordenada X do ponto sobre qual girar essa matriz.</param>
      <param name="centerY" vsli:raw="The y-coordinate of the point about which to rotate this matrix.">A coordenada Y do ponto sobre qual girar essa matriz.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.RotateAtPrepend(System.Double,System.Double,System.Double)">
      <summary vsli:raw="Prepends a rotation of the specified angle at the specified point to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Precede uma rotação do ângulo especificado no ponto especificado para esta estrutura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="angle" vsli:raw="The rotation angle, in degrees.">O ângulo da rotação, em graus.</param>
      <param name="centerX" vsli:raw="The x-coordinate of the rotation center.">A coordenada X do centro de rotação.</param>
      <param name="centerY" vsli:raw="The y-coordinate of the rotation center.">A coordenada Y do centro de rotação.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.RotatePrepend(System.Double)">
      <summary vsli:raw="Prepends a rotation of the specified angle to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Precede uma rotação do ângulo especificado para esta estrutura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="angle" vsli:raw="The angle of rotation to prepend.">O ângulo de rotação a ser precedido.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Scale(System.Double,System.Double)">
      <summary vsli:raw="Appends the specified scale vector to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Acrescenta o vetor de escala especificado a esta estrutura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="scaleX" vsli:raw="The value by which to scale this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the x-axis.">O valor segundo o qual este <see cref="T:System.Windows.Media.Matrix" /> deve ser escalado ao longo do eixo X.</param>
      <param name="scaleY" vsli:raw="The value by which to scale this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the y-axis.">O valor segundo o qual este <see cref="T:System.Windows.Media.Matrix" /> deve ser escalado ao longo do eixo Y.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.ScaleAt(System.Double,System.Double,System.Double,System.Double)">
      <summary vsli:raw="Scales this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; by the specified amount about the specified point.">Dimensiona esse <see cref="T:System.Windows.Media.Matrix" /> pelo valor especificado sobre o ponto especificado.</summary>
      <param name="scaleX" vsli:raw="The amount by which to scale this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the x-axis.">A quantia segundo a qual este <see cref="T:System.Windows.Media.Matrix" /> deve ser escalado ao longo do eixo X.</param>
      <param name="scaleY" vsli:raw="The amount by which to scale this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the y-axis.">A quantia segundo a qual este <see cref="T:System.Windows.Media.Matrix" /> deve ser escalado ao longo do eixo Y.</param>
      <param name="centerX" vsli:raw="The x-coordinate of the scale operation's center point.">A coordenada X do ponto central da operação de escala.</param>
      <param name="centerY" vsli:raw="The y-coordinate of the scale operation's center point.">A coordenada Y do ponto central da operação de escala.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.ScaleAtPrepend(System.Double,System.Double,System.Double,System.Double)">
      <summary vsli:raw="Prepends the specified scale about the specified point of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Precede a escala especificada sobre o ponto especificado deste <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="scaleX" vsli:raw="The x-axis scale factor.">O fator de escala do eixo x.</param>
      <param name="scaleY" vsli:raw="The y-axis scale factor.">O fator de escala do eixo y.</param>
      <param name="centerX" vsli:raw="The x-coordinate of the point about which the scale operation is performed.">A coordenada X do ponto sobre o qual a operação de escala é executada.</param>
      <param name="centerY" vsli:raw="The y-coordinate of the point about which the scale operation is performed.">A coordenada Y do ponto sobre o qual a operação de escala é executada.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.ScalePrepend(System.Double,System.Double)">
      <summary vsli:raw="Prepends the specified scale vector to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Precede o vetor de escala especificado a esta estrutura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="scaleX" vsli:raw="The value by which to scale this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure along the x-axis.">O valor segundo o qual esta estrutura <see cref="T:System.Windows.Media.Matrix" /> deve ser escalada ao longo do eixo X.</param>
      <param name="scaleY" vsli:raw="The value by which to scale this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure along the y-axis.">O valor segundo o qual esta estrutura <see cref="T:System.Windows.Media.Matrix" /> deve ser escalada ao longo do eixo Y.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.SetIdentity">
      <summary vsli:raw="Changes this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure into an identity matrix.">Altera essa estrutura <see cref="T:System.Windows.Media.Matrix" /> em uma matriz de identidade.</summary>
    </member>
    <member name="M:System.Windows.Media.Matrix.Skew(System.Double,System.Double)">
      <summary vsli:raw="Appends a skew of the specified degrees in the x and y dimensions to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Acrescenta uma distorção dos graus especificados nas dimensões X e Y a esta estrutura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="skewX" vsli:raw="The angle in the x dimension by which to skew this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">O ângulo na dimensão X pelo qual distorcer este <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="skewY" vsli:raw="The angle in the y dimension by which to skew this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">O ângulo na dimensão Y pelo qual distorcer este <see cref="T:System.Windows.Media.Matrix" />.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.SkewPrepend(System.Double,System.Double)">
      <summary vsli:raw="Prepends a skew of the specified degrees in the x and y dimensions to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Precede uma distorção dos graus especificados nas dimensões X e Y a esta estrutura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="skewX" vsli:raw="The angle in the x dimension by which to skew this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">O ângulo na dimensão X pelo qual distorcer este <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="skewY" vsli:raw="The angle in the y dimension by which to skew this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">O ângulo na dimensão Y pelo qual distorcer este <see cref="T:System.Windows.Media.Matrix" />.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="Formats the value of the current instance using the specified format.">Formata o valor da instância atual usando o formato especificado.</summary>
      <param name="format" vsli:raw="The format to use.  &#xA;  &#xA; -or-  &#xA;  &#xA; A null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) to use the default format defined for the type of the &lt;see cref=&quot;T:System.IFormattable&quot; /&gt; implementation.">O formato a ser usado.  

ou - 
Uma referência nula (<see langword="Nothing" /> no Visual Basic) para usar o formato padrão definido para o tipo da implementação <see cref="T:System.IFormattable" />.</param>
      <param name="provider" vsli:raw="The provider to use to format the value.  &#xA;  &#xA; -or-  &#xA;  &#xA; A null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.">O provedor a ser usado para formatar o valor.  

ou - 
Uma referência nula (<see langword="Nothing" /> no Visual Basic) para obter as informações de formato numérico da configuração de localidade atual do sistema operacional.</param>
      <returns vsli:raw="The value of the current instance in the specified format.">O valor da instância atual no formato especificado.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.ToString">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.String&quot; /&gt; representation of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Cria uma representação <see cref="T:System.String" /> desta estrutura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the &lt;see cref=&quot;P:System.Windows.Media.Matrix.M11&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.M12&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.M21&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.M22&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.OffsetX&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Media.Matrix.OffsetY&quot; /&gt; values of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Um <see cref="T:System.String" /> que contém os valores <see cref="P:System.Windows.Media.Matrix.M11" />, <see cref="P:System.Windows.Media.Matrix.M12" />, <see cref="P:System.Windows.Media.Matrix.M21" />, <see cref="P:System.Windows.Media.Matrix.M22" />, <see cref="P:System.Windows.Media.Matrix.OffsetX" /> e <see cref="P:System.Windows.Media.Matrix.OffsetY" /> deste <see cref="T:System.Windows.Media.Matrix" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.ToString(System.IFormatProvider)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.String&quot; /&gt; representation of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure with culture-specific formatting information.">Cria uma representação <see cref="T:System.String" /> dessa estrutura <see cref="T:System.Windows.Media.Matrix" /> com informações de formatação específicas da cultura.</summary>
      <param name="provider" vsli:raw="The culture-specific formatting information.">As informações de formatação específicas da cultura.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the &lt;see cref=&quot;P:System.Windows.Media.Matrix.M11&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.M12&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.M21&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.M22&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.OffsetX&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Media.Matrix.OffsetY&quot; /&gt; values of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Um <see cref="T:System.String" /> que contém os valores <see cref="P:System.Windows.Media.Matrix.M11" />, <see cref="P:System.Windows.Media.Matrix.M12" />, <see cref="P:System.Windows.Media.Matrix.M21" />, <see cref="P:System.Windows.Media.Matrix.M22" />, <see cref="P:System.Windows.Media.Matrix.OffsetX" /> e <see cref="P:System.Windows.Media.Matrix.OffsetY" /> deste <see cref="T:System.Windows.Media.Matrix" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Transform(System.Windows.Point)">
      <summary vsli:raw="Transforms the specified point by the &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; and returns the result.">Transforma o ponto especificado pelo <see cref="T:System.Windows.Media.Matrix" /> e retorna o resultado.</summary>
      <param name="point" vsli:raw="The point to transform.">O ponto a ser transformado.</param>
      <returns vsli:raw="The result of transforming &lt;paramref name=&quot;point&quot; /&gt; by this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">O resultado de transformar <paramref name="point" /> por este <see cref="T:System.Windows.Media.Matrix" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Transform(System.Windows.Point[])">
      <summary vsli:raw="Transforms the specified points by this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Transforma os pontos especificados por este <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="points" vsli:raw="The points to transform. The original points in the array are replaced by their transformed values.">Os pontos a serem transformados. Os pontos originais na matriz são substituídos por seus valores transformados.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Transform(System.Windows.Vector)">
      <summary vsli:raw="Transforms the specified vector by this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Transforma o vetor especificado por este <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="vector" vsli:raw="The vector to transform.">O vetor a ser transformado.</param>
      <returns vsli:raw="The result of transforming &lt;paramref name=&quot;vector&quot; /&gt; by this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">O resultado de transformar <paramref name="vector" /> por este <see cref="T:System.Windows.Media.Matrix" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Transform(System.Windows.Vector[])">
      <summary vsli:raw="Transforms the specified vectors by this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Transforma os vetores especificados por este <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="vectors" vsli:raw="The vectors to transform. The original vectors in the array are replaced by their transformed values.">Os vetores a serem transformados. Os vetores originais na matriz são substituídos por seus valores transformados.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Translate(System.Double,System.Double)">
      <summary vsli:raw="Appends a translation of the specified offsets to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Acrescenta uma tradução de deslocamentos especificados a esta estrutura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="offsetX" vsli:raw="The amount to offset this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the x-axis.">A quantidade para deslocar este <see cref="T:System.Windows.Media.Matrix" /> ao longo do eixo X.</param>
      <param name="offsetY" vsli:raw="The amount to offset this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the y-axis.">A quantidade para deslocar este <see cref="T:System.Windows.Media.Matrix" /> ao longo do eixo Y.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.TranslatePrepend(System.Double,System.Double)">
      <summary vsli:raw="Prepends a translation of the specified offsets to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Precede uma tradução de deslocamentos especificados a esta estrutura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="offsetX" vsli:raw="The amount to offset this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the x-axis.">A quantidade para deslocar este <see cref="T:System.Windows.Media.Matrix" /> ao longo do eixo X.</param>
      <param name="offsetY" vsli:raw="The amount to offset this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the y-axis.">A quantidade para deslocar este <see cref="T:System.Windows.Media.Matrix" /> ao longo do eixo Y.</param>
    </member>
    <member name="T:System.Windows.Media.MatrixConverter">
      <summary vsli:raw="Converts instances of other types to and from a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Converte instâncias de outros tipos de e para um <see cref="T:System.Windows.Media.Matrix" />.</summary>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of &lt;see cref=&quot;T:System.Windows.Media.MatrixConverter&quot; /&gt;.">Inicializa uma nova instância de <see cref="T:System.Windows.Media.MatrixConverter" />.</summary>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an object can be converted from a specific type to an instance of a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Determina se um objeto pode ser convertido de um tipo específico em uma instância de um <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="context" vsli:raw="The context information of a type.">As informações de contexto de um tipo.</param>
      <param name="sourceType" vsli:raw="The type of the source that is being evaluated for conversion.">O tipo de origem que está sendo avaliado para conversão.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the type can be converted to a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o tipo puder ser convertido para um <see cref="T:System.Windows.Media.Matrix" />, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an instance of a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; can be converted to a different type.">Determina se uma instância de um <see cref="T:System.Windows.Media.Matrix" /> pode ser convertida em um tipo diferente.</summary>
      <param name="context" vsli:raw="The context information of a type.">As informações de contexto de um tipo.</param>
      <param name="destinationType" vsli:raw="The desired type this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; is being evaluated for conversion.">O tipo desejado para o qual se está avaliando converter este <see cref="T:System.Windows.Media.Matrix" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; can be converted to &lt;paramref name=&quot;destinationType&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se este <see cref="T:System.Windows.Media.Matrix" /> puder ser convertido para <paramref name="destinationType" />, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert the specified object to a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Tenta converter o objeto especificado em um <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="context" vsli:raw="The context information of a type.">As informações de contexto de um tipo.</param>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; of the type being converted.">O <see cref="T:System.Globalization.CultureInfo" /> do tipo que está sendo convertido.</param>
      <param name="value" vsli:raw="The object being converted.">O objeto sendo convertido.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; created from converting &lt;paramref name=&quot;value&quot; /&gt;.">O <see cref="T:System.Windows.Media.Matrix" /> criado da conversão de <paramref name="value" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The specified object is null or is a type that cannot be converted to a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">O objeto especificado é nulo ou é um tipo que não pode ser convertido em um <see cref="T:System.Windows.Media.Matrix" />.</exception>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; to a specified type.">Tenta converter um <see cref="T:System.Windows.Media.Matrix" /> para um tipo especificado.</summary>
      <param name="context" vsli:raw="The context information of a type.">As informações de contexto de um tipo.</param>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; of the type being converted.">O <see cref="T:System.Globalization.CultureInfo" /> do tipo que está sendo convertido.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; to convert.">O <see cref="T:System.Windows.Media.Matrix" /> a ser convertido.</param>
      <param name="destinationType" vsli:raw="The type to convert this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; to.">O tipo para o qual converter este <see cref="T:System.Windows.Media.Matrix" />.</param>
      <returns vsli:raw="The object created from converting this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">O objeto criado da conversão deste <see cref="T:System.Windows.Media.Matrix" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; is null or is not a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;, or the &lt;paramref name=&quot;destinationType&quot; /&gt; is not a valid conversion type.">O <paramref name="value" /> é nulo ou não é um <see cref="T:System.Windows.Media.Matrix" />, ou o <paramref name="destinationType" /> não é um tipo de conversão válido.</exception>
    </member>
    <member name="T:System.Windows.Media.TextFormattingMode">
      <summary vsli:raw="Defines the formatting methods supported by the &lt;see cref=&quot;T:System.Windows.Media.TextFormatting.TextFormatter&quot; /&gt; class.">Define os métodos de formatação com suporte da classe <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" />.</summary>
    </member>
    <member name="F:System.Windows.Media.TextFormattingMode.Display">
      <summary vsli:raw="Indicates that the &lt;see cref=&quot;T:System.Windows.Media.TextFormatting.TextFormatter&quot; /&gt; lays out text by using GDI-compatible font metrics.">Indica que o <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" /> dispõe texto usando métricas de fonte compatíveis com GDI.</summary>
    </member>
    <member name="F:System.Windows.Media.TextFormattingMode.Ideal">
      <summary vsli:raw="Indicates that the &lt;see cref=&quot;T:System.Windows.Media.TextFormatting.TextFormatter&quot; /&gt; lays out text by using ideal font metrics.">Indica que o <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" /> dispõe texto usando métricas de fonte ideais.</summary>
    </member>
    <member name="T:System.Windows.NameScope">
      <summary vsli:raw="Implements base WPF support for the &lt;see cref=&quot;T:System.Windows.Markup.INameScope&quot; /&gt; methods that store or retrieve name-object mappings into a particular XAML namescope. Adds attached property support to make it simpler to get or set XAML namescope names dynamically at the element level.">Implementa suporte básico WPF para os métodos <see cref="T:System.Windows.Markup.INameScope" /> que armazenam ou recuperam os mapeamentos nome-objeto em um namescope XAML específico. Adiciona o suporte à propriedade anexada para simplificar a obtenção ou definição de nomes de namescopes XAML dinamicamente no nível de elemento.</summary>
    </member>
    <member name="M:System.Windows.NameScope.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.NameScope" />.</summary>
    </member>
    <member name="M:System.Windows.NameScope.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary vsli:raw="Adds an item to the collection.">Adiciona um item à coleção.</summary>
      <param name="item" vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; (key is &lt;see cref=&quot;T:System.String&quot; /&gt;, value is &lt;see cref=&quot;T:System.Object&quot; /&gt;) that represents the name mapping to add to the XAML namescope.">Um <see cref="T:System.Collections.Generic.KeyValuePair`2" /> (a chave é <see cref="T:System.String" />, o valor é <see cref="T:System.Object" />) que representa o mapeamento de nome a ser adicionado ao namescope XAML.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="Either or both components of &lt;paramref name=&quot;item&quot; /&gt; are &lt;see langword=&quot;null&quot; /&gt;.">Um ou ambos os componentes de <paramref name="item" /> são <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.NameScope.Add(System.String,System.Object)">
      <summary vsli:raw="Adds an item to the collection.">Adiciona um item à coleção.</summary>
      <param name="key" vsli:raw="The string key, which is the name of the XAML namescope mapping to add.">A chave de cadeia de caracteres, que é o nome do mapeamento namescope XAML a ser adicionado.</param>
      <param name="value" vsli:raw="The object value, which is the object reference of the XAML namescope mapping to add.">O valor do objeto, que é a referência de objeto do mapeamento de namescope XAML a ser adicionado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> ou <paramref name="value" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.NameScope.Clear">
      <summary vsli:raw="Removes all items from the collection.">Remove todos os itens da coleção.</summary>
    </member>
    <member name="M:System.Windows.NameScope.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary vsli:raw="Determines whether the collection contains a specified item.">Determina se a coleção contém um item especificado.</summary>
      <param name="item" vsli:raw="The item to find in the collection, specified as a &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; (key is &lt;see cref=&quot;T:System.String&quot; /&gt;, value is &lt;see cref=&quot;T:System.Object&quot; /&gt;).">O item a ser localizado na coleção, especificado como um <see cref="T:System.Collections.Generic.KeyValuePair`2" /> (a chave é <see cref="T:System.String" />, o valor é <see cref="T:System.Object" />).</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; identifies an existing mapping in this &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; . &lt;see langword=&quot;false&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; does not exist in the current &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt;.">
        <see langword="true" /> se o <see cref="T:System.Collections.Generic.KeyValuePair`2" /> especificado identifica um mapeamento existente neste <see cref="T:System.Windows.NameScope" />. <see langword="false" /> se o <see cref="T:System.Collections.Generic.KeyValuePair`2" /> especificado não existe no <see cref="T:System.Windows.NameScope" /> atual.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.NameScope.ContainsKey(System.String)">
      <summary vsli:raw="Returns whether a provided name already exists in this &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt;.">Retorna a informação de se um nome fornecido já existe ou não neste <see cref="T:System.Windows.NameScope" />.</summary>
      <param name="key" vsli:raw="The string key to find.">A chave de cadeia de caracteres a ser localizada.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;paramref name=&quot;key&quot; /&gt; identifies a name for an existing mapping in this &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt;. &lt;see langword=&quot;false&quot; /&gt; if the specified &lt;paramref name=&quot;key&quot; /&gt; does not exist in the current &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt;.">
        <see langword="true" /> se o <paramref name="key" /> especificado identifica um nome para um mapeamento existente neste <see cref="T:System.Windows.NameScope" />. <see langword="false" /> se o <paramref name="key" /> especificado não existe no <see cref="T:System.Windows.NameScope" /> atual.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.NameScope.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary vsli:raw="Copies the elements of the collection to an array, starting at a particular array index.">Copia os elementos da coleção em uma matriz, começando em um índice de matriz específico.</summary>
      <param name="array" vsli:raw="The one-dimensional array that is the destination of the elements copied from the collection The array must have zero-based indexing.">A matriz unidimensional que é o destino dos elementos copiados da coleção. A matriz deve ter a indexação com base em zero.</param>
      <param name="arrayIndex" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">O índice com base em zero em <paramref name="array" /> no qual a cópia começa.</param>
    </member>
    <member name="P:System.Windows.NameScope.Count">
      <summary vsli:raw="Returns the number of items in the collection of mapped names in this &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt;.">Retorna o número de itens na coleção de nomes mapeados neste <see cref="T:System.Windows.NameScope" />.</summary>
      <returns vsli:raw="The number of items in the collection.">Número de itens na coleção.</returns>
    </member>
    <member name="M:System.Windows.NameScope.FindName(System.String)">
      <summary vsli:raw="Returns the corresponding object in the XAML namescope maintained by this &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt;, based on a provided name string.">Retorna o objeto correspondente no namescope XAML mantido por este <see cref="T:System.Windows.NameScope" />, com base em uma cadeia de caracteres de nome fornecida.</summary>
      <param name="name" vsli:raw="Name portion of an existing mapping to retrieve the object portion for.">Parte do nome de um mapeamento existente para o qual recuperar a parte do objeto.</param>
      <returns vsli:raw="The requested object that is mapped with &lt;paramref name=&quot;name&quot; /&gt;. Can return &lt;see langword=&quot;null&quot; /&gt; if &lt;paramref name=&quot;name&quot; /&gt; was provided as &lt;see langword=&quot;null&quot; /&gt; or empty string, or if no matching object was found.">O objeto solicitado que é mapeado com <paramref name="name" />. Pode retornar <see langword="null" /> se <paramref name="name" /> foi fornecido como <see langword="null" /> ou como uma cadeia de caracteres vazia ou se nenhum objeto correspondente foi encontrado.</returns>
    </member>
    <member name="M:System.Windows.NameScope.GetNameScope(System.Windows.DependencyObject)">
      <summary vsli:raw="Provides the attached property get accessor for the &lt;see cref=&quot;P:System.Windows.NameScope.NameScope&quot; /&gt; attached property.">Fornece o acessador get da propriedade anexada <see cref="P:System.Windows.NameScope.NameScope" />.</summary>
      <param name="dependencyObject" vsli:raw="The object to get the XAML namescope from.">O objeto do qual obter o namescope XAML.</param>
      <returns vsli:raw="A XAML namescope, as an &lt;see cref=&quot;T:System.Windows.Markup.INameScope&quot; /&gt; instance.">Um namescope XAML, como uma instância de <see cref="T:System.Windows.Markup.INameScope" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dependencyObject&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dependencyObject" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.NameScope.IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the collection is read-only.">Obtém um valor que indica se a coleção é somente leitura.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;false&quot; /&gt;.">Sempre retorna <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.NameScope.Item(System.String)">
      <summary vsli:raw="Gets or sets the item with the specified key.">Obtém ou define o item com a chave especificada.</summary>
      <param name="key" vsli:raw="The string name for the XAML name mapping to get or set.">O nome de cadeia de caracteres para o mapeamento de nome XAML a ser obtido ou definido.</param>
      <returns vsli:raw="The value of the object mapped by the XAML name provided as &lt;paramref name=&quot;key&quot; /&gt;.">O valor do objeto mapeado pelo nome XAML fornecido como <paramref name="key" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is provided as &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;value&quot; /&gt; is provided as &lt;see langword=&quot;null&quot; /&gt; for a set operation.">O <paramref name="key" /> fornecido como <see langword="null" />.  

ou - 
<paramref name="value" /> é fornecido como <see langword="null" /> para uma operação de definição.</exception>
    </member>
    <member name="P:System.Windows.NameScope.Keys">
      <summary vsli:raw="Gets a collection of the keys in the &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; dictionary.">Obtém uma coleção das chaves no dicionário <see cref="T:System.Windows.NameScope" />.</summary>
      <returns vsli:raw="A collection of the keys in the &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; dictionary.">Uma coleção de chaves no <see cref="T:System.Windows.NameScope" /> dicionário.</returns>
    </member>
    <member name="P:System.Windows.NameScope.NameScope">
      <summary vsli:raw="Gets or sets dynamically attached &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; instances.">Obtém ou define instâncias <see cref="T:System.Windows.NameScope" /> dinamicamente anexadas.</summary>
    </member>
    <member name="F:System.Windows.NameScope.NameScopeProperty">
      <summary vsli:raw="Identifies the &lt;see cref=&quot;P:System.Windows.NameScope.NameScope&quot; /&gt; attached property.">Identifica a propriedade <see cref="P:System.Windows.NameScope.NameScope" /> anexada.</summary>
    </member>
    <member name="M:System.Windows.NameScope.RegisterName(System.String,System.Object)">
      <summary vsli:raw="Registers a new name-object pair into the current XAML namescope.">Registra um novo par nome/objeto dentro do namescope XAML atual.</summary>
      <param name="name" vsli:raw="The name to use for mapping the given object.">O nome a ser usado para mapear o objeto fornecido.</param>
      <param name="scopedElement" vsli:raw="The object to be mapped to the provided name.">O objeto a ser mapeado para o nome fornecido.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; or &lt;paramref name=&quot;scopedElement&quot; /&gt; was provided as &lt;see langword=&quot;null&quot; /&gt;.">O <paramref name="name" /> ou <paramref name="scopedElement" /> foi fornecido como <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; was provided as empty string  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;name&quot; /&gt; provided was rejected by the parser, because it contained characters that are invalid for a XAML name  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;name&quot; /&gt; provided would result in a duplicate name registration.">
        <paramref name="name" /> foi fornecido como uma cadeia de caracteres vazia 

ou - 
O <paramref name="name" /> fornecido foi rejeitado pelo analisador porque ele continha caracteres inválidos para um nome XAML 
ou - 
O <paramref name="name" /> fornecido pode resultar em um registro de nome duplicado.</exception>
    </member>
    <member name="M:System.Windows.NameScope.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary vsli:raw="Removes the specific object from the collection.">Remove o objeto específico da coleção.</summary>
      <param name="item" vsli:raw="The object to remove from the collection, specified as a &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; (key is &lt;see cref=&quot;T:System.String&quot; /&gt;, value is &lt;see cref=&quot;T:System.Object&quot; /&gt;).">O objeto a ser removido da coleção, especificado como um <see cref="T:System.Collections.Generic.KeyValuePair`2" /> (a chave é <see cref="T:System.String" />, o valor é <see cref="T:System.Object" />).</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if item was successfully removed from the collection, otherwise &lt;see langword=&quot;false&quot; /&gt;. Also returns &lt;see langword=&quot;false&quot; /&gt; if the item was not found in the collection.">
        <see langword="true" /> se o item foi removido com êxito da coleção; caso contrário, <see langword="false" />. Esse método também retornará <see langword="false" /> se o item não for encontrado na coleção.</returns>
    </member>
    <member name="M:System.Windows.NameScope.Remove(System.String)">
      <summary vsli:raw="Removes a mapping for a specified name from the collection.">Remove um mapeamento para um nome especificado da coleção.</summary>
      <param name="key" vsli:raw="The string key, which is the name of the XAML namescope mapping to remove.">A chave de cadeia de caracteres, que é o nome do mapeamento namescope XAML a ser removido.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if item was successfully removed from the collection, otherwise &lt;see langword=&quot;false&quot; /&gt;. Also returns &lt;see langword=&quot;false&quot; /&gt; if the item was not found in the collection.">
        <see langword="true" /> se o item foi removido com êxito da coleção; caso contrário, <see langword="false" />. Esse método também retornará <see langword="false" /> se o item não for encontrado na coleção.</returns>
    </member>
    <member name="M:System.Windows.NameScope.SetNameScope(System.Windows.DependencyObject,System.Windows.Markup.INameScope)">
      <summary vsli:raw="Provides the attached property set accessor for the &lt;see cref=&quot;P:System.Windows.NameScope.NameScope&quot; /&gt; attached property.">Fornece o acessador set da propriedade anexada <see cref="P:System.Windows.NameScope.NameScope" />.</summary>
      <param name="dependencyObject" vsli:raw="Object to change XAML namescope for.">O objeto cujo namescope XAML deve ser alterado.</param>
      <param name="value" vsli:raw="The new XAML namescope, using an interface cast.">O novo namescope XAML, usando uma interface convertida.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dependencyObject&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dependencyObject" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.NameScope.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through a collection.">Retorna um enumerador que itera em uma coleção.</summary>
      <returns vsli:raw="An enumerator that iterates through a collection.">Um enumerador que itera em uma coleção.</returns>
    </member>
    <member name="M:System.Windows.NameScope.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through a collection.">Retorna um enumerador que itera em uma coleção.</summary>
      <returns vsli:raw="An enumerator that iterates through a collection.">Um enumerador que itera em uma coleção.</returns>
    </member>
    <member name="M:System.Windows.NameScope.TryGetValue(System.String,System.Object@)">
      <summary vsli:raw="Gets the value associated with the specified key.">Obtém o valor associado à chave especificada.</summary>
      <param name="key" vsli:raw="The key of the value to get.">A chave do valor a ser obtido.</param>
      <param name="value" vsli:raw="When this method returns, contains the value associated with the specified key, if the key is found; otherwise, a null object. This parameter is passed uninitialized.">Quando esse método retorna, ele contém o valor associado à chave especificada, caso a chave seja encontrada; caso contrário, um objeto nulo. Este parâmetro é passado não inicializado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; contains a mapping for the name provided as &lt;paramref name=&quot;key&quot; /&gt;. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">true se o <see cref="T:System.Windows.NameScope" /> contém um mapeamento para o nome fornecido como <paramref name="key" />. Do contrário, falso.</returns>
    </member>
    <member name="M:System.Windows.NameScope.UnregisterName(System.String)">
      <summary vsli:raw="Removes a name-object mapping from the XAML namescope.">Remove um mapeamento de nome-objeto do namescope XAML.</summary>
      <param name="name" vsli:raw="The name of the mapping to remove.">O nome do mapeamento a ser removido.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; was provided as empty string.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;name&quot; /&gt; provided had not been registered.">
        <paramref name="name" /> foi fornecido como uma cadeia de caracteres vazia.  

ou - 
O <paramref name="name" /> fornecido não tinha sido registrado.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.NameScope.Values">
      <summary vsli:raw="Gets a collection of the values in the &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; dictionary.">Obtém uma coleção dos valores no dicionário <see cref="T:System.Windows.NameScope" />.</summary>
      <returns vsli:raw="A collection of the values in the &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; dictionary.">Uma coleção de valores no <see cref="T:System.Windows.NameScope" /> dicionário.</returns>
    </member>
    <member name="T:System.Windows.Point">
      <summary vsli:raw="Represents an x- and y-coordinate pair in two-dimensional space.">Representa um par de coordenadas x e y no espaço bidimensional.</summary>
    </member>
    <member name="M:System.Windows.Point.#ctor(System.Double,System.Double)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure that contains the specified coordinates.">Cria uma nova estrutura <see cref="T:System.Windows.Point" /> que contém coordenadas especificadas.</summary>
      <param name="x" vsli:raw="The x-coordinate of the new &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">A coordenada X da nova estrutura <see cref="T:System.Windows.Point" />.</param>
      <param name="y" vsli:raw="The y-coordinate of the new &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">A coordenada y da nova estrutura <see cref="T:System.Windows.Point" />.</param>
    </member>
    <member name="M:System.Windows.Point.Add(System.Windows.Point,System.Windows.Vector)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; to a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; and returns the result as a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">Adiciona um <see cref="T:System.Windows.Vector" /> em um <see cref="T:System.Windows.Point" /> e retorna o resultado como uma estrutura <see cref="T:System.Windows.Point" />.</summary>
      <param name="point" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure to add.">A estrutura <see cref="T:System.Windows.Point" /> a ser adicionada.</param>
      <param name="vector" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure to add.">A estrutura <see cref="T:System.Windows.Vector" /> a ser adicionada.</param>
      <returns vsli:raw="Returns the sum of &lt;paramref name=&quot;point&quot; /&gt; and &lt;paramref name=&quot;vector&quot; /&gt;.">Retorna a soma de <paramref name="point" /> e <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Point.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; and whether it contains the same coordinates as this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Determina se o <see cref="T:System.Object" /> especificado é um <see cref="T:System.Windows.Point" /> e se ele contém as mesmas coordenadas que este <see cref="T:System.Windows.Point" />.</summary>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to compare.">O <see cref="T:System.Object" /> de comparação.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; and contains the same &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; values as this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="o" /> for um <see cref="T:System.Windows.Point" /> e contiver os mesmos valores <see cref="P:System.Windows.Point.X" /> e <see cref="P:System.Windows.Point.Y" /> que este <see cref="T:System.Windows.Point" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Point.Equals(System.Windows.Point)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structures for equality.">Compara a igualdade de duas estruturas <see cref="T:System.Windows.Point" />.</summary>
      <param name="value" vsli:raw="The point to compare to this instance.">O ponto a ser comparado a essa instância.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if both &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structures contain the same &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; values; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se ambas as estruturas <see cref="T:System.Windows.Point" /> contiverem os mesmos valores <see cref="P:System.Windows.Point.X" /> e <see cref="P:System.Windows.Point.Y" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Point.Equals(System.Windows.Point,System.Windows.Point)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structures for equality.">Compara a igualdade de duas estruturas <see cref="T:System.Windows.Point" />.</summary>
      <param name="point1" vsli:raw="The first point to compare.">O primeiro ponto a ser comparado.</param>
      <param name="point2" vsli:raw="The second point to compare.">O segundo ponto a ser comparado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;point1&quot; /&gt; and &lt;paramref name=&quot;point2&quot; /&gt; contain the same &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; values; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="point1" /> e <paramref name="point2" /> contêm os mesmos valores <see cref="P:System.Windows.Point.X" /> e <see cref="P:System.Windows.Point.Y" />. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Point.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Retorna o código hash para este <see cref="T:System.Windows.Point" />.</summary>
      <returns vsli:raw="The hash code for this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">O código hash para esta estrutura <see cref="T:System.Windows.Point" />.</returns>
    </member>
    <member name="M:System.Windows.Point.Multiply(System.Windows.Point,System.Windows.Media.Matrix)">
      <summary vsli:raw="Transforms the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure by the specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Transforma a estrutura <see cref="T:System.Windows.Point" /> especificada pela estrutura <see cref="T:System.Windows.Media.Matrix" /> especificada.</summary>
      <param name="point" vsli:raw="The point to transform.">O ponto a ser transformado.</param>
      <param name="matrix" vsli:raw="The transformation matrix.">A matriz de transformação.</param>
      <returns vsli:raw="The transformed point.">O ponto transformado.</returns>
    </member>
    <member name="M:System.Windows.Point.Offset(System.Double,System.Double)">
      <summary vsli:raw="Offsets a point's &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; coordinates by the specified amounts.">Desloca as coordenadas <see cref="P:System.Windows.Point.X" /> e <see cref="P:System.Windows.Point.Y" /> de um ponto pelas quantidades especificadas.</summary>
      <param name="offsetX" vsli:raw="The amount to offset the point's &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; coordinate.">O valor de deslocamento da coordenada <see cref="P:System.Windows.Point.X" /> do ponto.</param>
      <param name="offsetY" vsli:raw="The amount to offset the point's &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; coordinate.">O valor de deslocamento da coordenada <see cref="P:System.Windows.Point.Y" /> do ponto.</param>
    </member>
    <member name="M:System.Windows.Point.op_Addition(System.Windows.Point,System.Windows.Vector)">
      <summary vsli:raw="Translates the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; by the specified &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; and returns the result.">Converte o <see cref="T:System.Windows.Point" /> especificado pelo <see cref="T:System.Windows.Vector" /> especificado e retorna o resultado.</summary>
      <param name="point" vsli:raw="The point to translate.">O ponto a ser convertido.</param>
      <param name="vector" vsli:raw="The amount by which to translate &lt;paramref name=&quot;point&quot; /&gt;.">O valor pelo qual converter o <paramref name="point" />.</param>
      <returns vsli:raw="The result of translating the specified point by the specified vector.">O resultado da conversão do ponto especificado pelo vetor especificado.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Equality(System.Windows.Point,System.Windows.Point)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structures for equality.">Compara a igualdade de duas estruturas <see cref="T:System.Windows.Point" />.</summary>
      <param name="point1" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure to compare.">A primeira estrutura <see cref="T:System.Windows.Point" /> a ser comparada.</param>
      <param name="point2" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure to compare.">A segunda estrutura <see cref="T:System.Windows.Point" /> a ser comparada.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if both the &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; coordinates of &lt;paramref name=&quot;point1&quot; /&gt; and &lt;paramref name=&quot;point2&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se as coordenadas <see cref="P:System.Windows.Point.X" /> e <see cref="P:System.Windows.Point.Y" /> de <paramref name="point1" /> e <paramref name="point2" /> forem iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Explicit(System.Windows.Point)~System.Windows.Size">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure with a &lt;see cref=&quot;P:System.Windows.Size.Width&quot; /&gt; equal to this point's &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; value and a &lt;see cref=&quot;P:System.Windows.Size.Height&quot; /&gt; equal to this point's &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; value.">Cria uma estrutura <see cref="T:System.Windows.Size" /> com um <see cref="P:System.Windows.Size.Width" /> igual ao valor <see cref="P:System.Windows.Point.X" /> desse ponto e um <see cref="P:System.Windows.Size.Height" /> igual ao valor <see cref="P:System.Windows.Point.Y" /> desse ponto.</summary>
      <param name="point" vsli:raw="The point to convert.">O ponto para converter.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure with a &lt;see cref=&quot;P:System.Windows.Size.Width&quot; /&gt; equal to this point's &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; value and a &lt;see cref=&quot;P:System.Windows.Size.Height&quot; /&gt; equal to this point's &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; value.">Um <see cref="T:System.Windows.Size" /> estrutura com um <see cref="P:System.Windows.Size.Width" /> igual ao valor <see cref="P:System.Windows.Point.X" /> desse ponto e um <see cref="P:System.Windows.Size.Height" /> igual ao valor <see cref="P:System.Windows.Point.Y" /> desse ponto.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Explicit(System.Windows.Point)~System.Windows.Vector">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure with an &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; value equal to the point's &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; value and a &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; value equal to the point's &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; value.">Cria uma estrutura <see cref="T:System.Windows.Vector" /> com um valor <see cref="P:System.Windows.Vector.X" /> igual ao valor <see cref="P:System.Windows.Point.X" /> do ponto e um valor <see cref="P:System.Windows.Vector.Y" /> igual ao valor <see cref="P:System.Windows.Point.Y" /> do ponto.</summary>
      <param name="point" vsli:raw="The point to convert.">O ponto para converter.</param>
      <returns vsli:raw="A vector with an &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; value equal to the point's &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; value and a &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; value equal to the point's &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; value.">Um vetor com um valor <see cref="P:System.Windows.Vector.X" /> igual ao valor <see cref="P:System.Windows.Point.X" /> do ponto e um valor <see cref="P:System.Windows.Vector.Y" /> igual ao valor <see cref="P:System.Windows.Point.Y" /> do ponto.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Inequality(System.Windows.Point,System.Windows.Point)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structures for inequality.">Compara duas estruturas <see cref="T:System.Windows.Point" /> quanto à desigualdade.</summary>
      <param name="point1" vsli:raw="The first point to compare.">O primeiro ponto a ser comparado.</param>
      <param name="point2" vsli:raw="The second point to compare.">O segundo ponto a ser comparado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;point1&quot; /&gt; and &lt;paramref name=&quot;point2&quot; /&gt; have different &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; or &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; coordinates; &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;point1&quot; /&gt; and &lt;paramref name=&quot;point2&quot; /&gt; have the same &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; coordinates.">
        <see langword="true" /> se <paramref name="point1" /> e <paramref name="point2" /> tiverem coordenadas <see cref="P:System.Windows.Point.X" /> ou <see cref="P:System.Windows.Point.Y" /> diferentes; <see langword="false" /> se <paramref name="point1" /> e <paramref name="point2" /> tiverem as mesmas coordenadas <see cref="P:System.Windows.Point.X" /> e <see cref="P:System.Windows.Point.Y" />.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Multiply(System.Windows.Point,System.Windows.Media.Matrix)">
      <summary vsli:raw="Transforms the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; by the specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Transforma o <see cref="T:System.Windows.Point" /> especificado pelo <see cref="T:System.Windows.Media.Matrix" /> especificado.</summary>
      <param name="point" vsli:raw="The point to transform.">O ponto a ser transformado.</param>
      <param name="matrix" vsli:raw="The transformation matrix.">A matriz de transformação.</param>
      <returns vsli:raw="The result of transforming the specified point using the specified matrix.">O resultado da transformação do ponto especificado usando a matriz especificada.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Point)">
      <summary vsli:raw="Subtracts the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; from another specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; and returns the difference as a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Subtrai o <see cref="T:System.Windows.Point" /> especificado de outro <see cref="T:System.Windows.Point" /> especificado e retorna a diferença como um <see cref="T:System.Windows.Vector" />.</summary>
      <param name="point1" vsli:raw="The point from which &lt;paramref name=&quot;point2&quot; /&gt; is subtracted.">O ponto do qual <paramref name="point2" /> é subtraído.</param>
      <param name="point2" vsli:raw="The point to subtract from &lt;paramref name=&quot;point1&quot; /&gt;.">O ponto do qual subtrair <paramref name="point1" />.</param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;point1&quot; /&gt; and &lt;paramref name=&quot;point2&quot; /&gt;.">A diferença entre <paramref name="point1" /> e <paramref name="point2" />.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Vector)">
      <summary vsli:raw="Subtracts the specified &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; from the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; and returns the resulting &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Subtrai o <see cref="T:System.Windows.Vector" /> especificado do <see cref="T:System.Windows.Point" /> especificado e retorna o <see cref="T:System.Windows.Point" /> resultante.</summary>
      <param name="point" vsli:raw="The point from which &lt;paramref name=&quot;vector&quot; /&gt; is subtracted.">O ponto do qual <paramref name="vector" /> é subtraído.</param>
      <param name="vector" vsli:raw="The vector to subtract from &lt;paramref name=&quot;point1&quot; /&gt;.">O vetor a ser subtraído de <paramref name="point1" /></param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;point&quot; /&gt; and &lt;paramref name=&quot;vector&quot; /&gt;.">A diferença entre <paramref name="point" /> e <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Point.Parse(System.String)">
      <summary vsli:raw="Constructs a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; from the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">Constrói um <see cref="T:System.Windows.Point" /> do <see cref="T:System.String" /> especificado.</summary>
      <param name="source" vsli:raw="A string representation of a point.">Uma representação da cadeia de caracteres de um ponto.</param>
      <returns vsli:raw="The equivalent &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">A estrutura <see cref="T:System.Windows.Point" /> equivalente.</returns>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is not composed of two comma- or space-delimited double values.">
        <paramref name="source" /> não é composto por dois valores duplos delimitados por vírgula ou espaço.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; does not contain two numbers.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;source&quot; /&gt; contains too many delimiters.">
        <paramref name="source" /> não contém dois números.  

ou - 
<paramref name="source" /> contém muitos delimitadores.</exception>
    </member>
    <member name="M:System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Point)">
      <summary vsli:raw="Subtracts the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; from another specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; and returns the difference as a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Subtrai o <see cref="T:System.Windows.Point" /> especificado de outro <see cref="T:System.Windows.Point" /> especificado e retorna a diferença como um <see cref="T:System.Windows.Vector" />.</summary>
      <param name="point1" vsli:raw="The point from which &lt;paramref name=&quot;point2&quot; /&gt; is subtracted.">O ponto do qual <paramref name="point2" /> é subtraído.</param>
      <param name="point2" vsli:raw="The point to subtract from &lt;paramref name=&quot;point1&quot; /&gt;.">O ponto do qual subtrair <paramref name="point1" />.</param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;point1&quot; /&gt; and &lt;paramref name=&quot;point2&quot; /&gt;.">A diferença entre <paramref name="point1" /> e <paramref name="point2" />.</returns>
    </member>
    <member name="M:System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Vector)">
      <summary vsli:raw="Subtracts the specified &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; from the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; and returns the resulting &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Subtrai o <see cref="T:System.Windows.Vector" /> especificado do <see cref="T:System.Windows.Point" /> especificado e retorna o <see cref="T:System.Windows.Point" /> resultante.</summary>
      <param name="point" vsli:raw="The point from which &lt;paramref name=&quot;vector&quot; /&gt; is subtracted.">O ponto do qual <paramref name="vector" /> é subtraído.</param>
      <param name="vector" vsli:raw="The &lt;paramref name=&quot;vector&quot; /&gt; to subtract from &lt;paramref name=&quot;point&quot; /&gt;.">O <paramref name="vector" /> a ser subtraído de <paramref name="point" />.</param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;point&quot; /&gt; and &lt;paramref name=&quot;vector&quot; /&gt;.">A diferença entre <paramref name="point" /> e <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Point.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. For a description of this member, see &lt;see cref=&quot;M:System.IFormattable.ToString(System.String,System.IFormatProvider)&quot; /&gt;.">Este membro dá suporte à infraestrutura Windows Presentation Foundation (WPF) e não se destina a ser usado diretamente do código. Para obter uma descrição desse membro, consulte <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />.</summary>
      <param name="format" vsli:raw="The string specifying the format to use.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; to use the default format defined for the type of the &lt;see cref=&quot;T:System.IFormattable&quot; /&gt; implementation.">A cadeia de caracteres que especifica o formato a ser usado.  

ou - 
<see langword="null" /> para usar o formato padrão definido para o tipo da implementação <see cref="T:System.IFormattable" />.</param>
      <param name="provider" vsli:raw="The &lt;see langword=&quot;IFormatProvider&quot; /&gt; to use to format the value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; to obtain the numeric format information from the current locale setting of the operating system.">O <see langword="IFormatProvider" /> a ser usado para formatar o valor.  

ou - 
<see langword="null" /> para obter as informações de formato numérico da configuração de localidade atual do sistema operacional.</param>
      <returns vsli:raw="A string containing the value of the current instance in the specified format.">Uma cadeia de caracteres que contém o valor da instância atual no formato especificado.</returns>
    </member>
    <member name="M:System.Windows.Point.ToString">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.String&quot; /&gt; representation of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Cria uma representação de <see cref="T:System.String" /> deste <see cref="T:System.Windows.Point" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; values of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">Uma <see cref="T:System.String" /> que contém os valores <see cref="P:System.Windows.Point.X" /> e <see cref="P:System.Windows.Point.Y" /> desse estrutura de <see cref="T:System.Windows.Point" />.</returns>
    </member>
    <member name="M:System.Windows.Point.ToString(System.IFormatProvider)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.String&quot; /&gt; representation of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Cria uma representação de <see cref="T:System.String" /> deste <see cref="T:System.Windows.Point" />.</summary>
      <param name="provider" vsli:raw="Culture-specific formatting information.">Informações de formatação específicas da cultura.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; values of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">Uma <see cref="T:System.String" /> que contém os valores <see cref="P:System.Windows.Point.X" /> e <see cref="P:System.Windows.Point.Y" /> desse estrutura de <see cref="T:System.Windows.Point" />.</returns>
    </member>
    <member name="P:System.Windows.Point.X">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt;-coordinate value of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">Obtém ou define o valor da coordenada <see cref="P:System.Windows.Point.X" /> desta estrutura <see cref="T:System.Windows.Point" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt;-coordinate value of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.  The default value is &lt;c&gt;0&lt;/c&gt;.">O valor da coordenada <see cref="P:System.Windows.Point.X" /> desta estrutura <see cref="T:System.Windows.Point" />.  O valor padrão é <c>0</c>.</returns>
    </member>
    <member name="P:System.Windows.Point.Y">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt;-coordinate value of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Obtém ou define o valor da coordenada <see cref="P:System.Windows.Point.Y" /> deste <see cref="T:System.Windows.Point" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt;-coordinate value of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.  The default value is &lt;c&gt;0&lt;/c&gt;.">O valor da coordenada <see cref="P:System.Windows.Point.Y" /> desta estrutura <see cref="T:System.Windows.Point" />.  O valor padrão é <c>0</c>.</returns>
    </member>
    <member name="T:System.Windows.PointConverter">
      <summary vsli:raw="Converts instances of other types to and from a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Converte instâncias de outros tipos de e para um <see cref="T:System.Windows.Point" />.</summary>
    </member>
    <member name="M:System.Windows.PointConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.PointConverter&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.PointConverter" />.</summary>
    </member>
    <member name="M:System.Windows.PointConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an object can be converted from a given type to an instance of a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Determina se um objeto pode ser convertido de um determinado tipo em uma instância de um <see cref="T:System.Windows.Point" />.</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">Descreve as informações de contexto de um tipo.</param>
      <param name="sourceType" vsli:raw="The type of the source that is being evaluated for conversion.">O tipo da origem que está sendo avaliada para conversão.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the type can be converted to a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o tipo puder ser convertido para um <see cref="T:System.Windows.Point" />, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.PointConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an instance of a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; can be converted to a different type.">Determina se uma instância de um <see cref="T:System.Windows.Point" /> pode ser convertida em um tipo diferente.</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">Descreve as informações de contexto de um tipo.</param>
      <param name="destinationType" vsli:raw="The desired type this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; is being evaluated for conversion.">O tipo desejado para o qual se está avaliando converter este <see cref="T:System.Windows.Point" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; can be converted to &lt;paramref name=&quot;destinationType&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se este <see cref="T:System.Windows.Point" /> puder ser convertido para <paramref name="destinationType" />, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.PointConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert the specified object to a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Tenta converter o objeto especificado em um <see cref="T:System.Windows.Point" />.</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">Fornece informações contextuais necessárias para conversão.</param>
      <param name="culture" vsli:raw="Cultural information to respect during conversion.">Informações culturais a serem respeitadas durante a conversão.</param>
      <param name="value" vsli:raw="The object being converted.">O objeto sendo convertido.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; created from converting &lt;paramref name=&quot;value&quot; /&gt;.">O <see cref="T:System.Windows.Point" /> criado da conversão de <paramref name="value" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The specified object is NULL or is a type that cannot be converted to a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Gerada se o objeto especificado for NULL ou for um tipo que não possa ser convertido em um <see cref="T:System.Windows.Point" />.</exception>
    </member>
    <member name="M:System.Windows.PointConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; to a specified type.">Tenta converter um <see cref="T:System.Windows.Point" /> para um tipo especificado.</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">Fornece informações contextuais necessárias para conversão.</param>
      <param name="culture" vsli:raw="Cultural information to respect during conversion.">Informações culturais a serem respeitadas durante a conversão.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; to convert.">O <see cref="T:System.Windows.Point" /> a ser convertido.</param>
      <param name="destinationType" vsli:raw="The type to convert this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; to.">O tipo para o qual converter este <see cref="T:System.Windows.Point" />.</param>
      <returns vsli:raw="The object created from converting this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">O objeto criado da conversão deste <see cref="T:System.Windows.Point" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or is not a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;, or &lt;paramref name=&quot;destinationType&quot; /&gt; is not one of the valid types for conversion.">Gerada se <paramref name="value" /> é <see langword="null" /> ou não é um <see cref="T:System.Windows.Point" /> ou então se <paramref name="destinationType" /> não é um dos tipos válidos para conversão.</exception>
    </member>
    <member name="T:System.Windows.PropertyChangedCallback">
      <summary vsli:raw="Represents the callback that is invoked when the effective property value of a dependency property changes.">Representa o retorno de chamada que é invocado quando o valor efetivo da propriedade de uma propriedade de dependência é alterado.</summary>
      <param name="d" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; on which the property has changed value.">O <see cref="T:System.Windows.DependencyObject" /> no qual a propriedade alterou o valor.</param>
      <param name="e" vsli:raw="Event data that is issued by any event that tracks changes to the effective value of this property.">Os dados de evento que são emitidos por qualquer evento que rastreia as alterações no valor efetivo dessa propriedade.</param>
    </member>
    <member name="T:System.Windows.PropertyMetadata">
      <summary vsli:raw="Defines certain behavior aspects of a dependency property as it is applied to a specific type, including conditions it was registered with.">Define alguns aspectos do comportamento de uma propriedade de dependência conforme ela é aplicada a um tipo específico, incluindo as condições com as quais ela foi registrada.</summary>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.PropertyMetadata&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.PropertyMetadata" />.</summary>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor(System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.PropertyMetadata&quot; /&gt; class with a specified default value for the dependency property that this metadata will be applied to.">Inicializa uma nova instância da classe <see cref="T:System.Windows.PropertyMetadata" /> com um valor padrão especificado para a propriedade de dependência à qual estes metadados serão aplicados.</summary>
      <param name="defaultValue" vsli:raw="The default value to specify for a dependency property, usually provided as a value of some specific type.">O valor padrão a especificar para a propriedade de dependência, geralmente fornecido como um valor de um tipo específico.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;defaultValue&quot; /&gt; cannot be set to the value &lt;see cref=&quot;F:System.Windows.DependencyProperty.UnsetValue&quot; /&gt;.">
        <paramref name="defaultValue" /> não pode ser definido como o valor <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</exception>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.PropertyMetadata&quot; /&gt; class with the specified default value and &lt;see cref=&quot;T:System.Windows.PropertyChangedCallback&quot; /&gt; implementation reference.">Inicializa uma nova instância da classe <see cref="T:System.Windows.PropertyMetadata" /> com o valor padrão especificado e a referência de implementação <see cref="T:System.Windows.PropertyChangedCallback" />.</summary>
      <param name="defaultValue" vsli:raw="The default value of the dependency property, usually provided as a value of some specific type.">O valor padrão da propriedade de dependência, geralmente fornecido como um valor de um tipo específico.</param>
      <param name="propertyChangedCallback" vsli:raw="Reference to a handler implementation that is to be called by the property system whenever the effective value of the property changes.">Referência a uma implementação do manipulador que será chamada pelo sistema de propriedades sempre que o valor efetivo da propriedade for alterado.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;defaultValue&quot; /&gt; cannot be set to the value &lt;see cref=&quot;F:System.Windows.DependencyProperty.UnsetValue&quot; /&gt;.">
        <paramref name="defaultValue" /> não pode ser definido como o valor <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</exception>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.PropertyMetadata&quot; /&gt; class with the specified default value and callbacks.">Inicializa uma nova instância da classe <see cref="T:System.Windows.PropertyMetadata" /> com o valor padrão especificado e retornos de chamadas especificados.</summary>
      <param name="defaultValue" vsli:raw="The default value of the dependency property, usually provided as a value of some specific type.">O valor padrão da propriedade de dependência, geralmente fornecido como um valor de um tipo específico.</param>
      <param name="propertyChangedCallback" vsli:raw="Reference to a handler implementation that is to be called by the property system whenever the effective value of the property changes.">Referência a uma implementação do manipulador que será chamada pelo sistema de propriedades sempre que o valor efetivo da propriedade for alterado.</param>
      <param name="coerceValueCallback" vsli:raw="Reference to a handler implementation that is to be called whenever the property system calls &lt;see cref=&quot;M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)&quot; /&gt; against this property.">Uma referência a uma implementação do manipulador que será chamada sempre que o sistema de propriedades chamar <see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" /> nessa propriedade.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;defaultValue&quot; /&gt; cannot be set to the value &lt;see cref=&quot;F:System.Windows.DependencyProperty.UnsetValue&quot; /&gt;.">
        <paramref name="defaultValue" /> não pode ser definido como o valor <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</exception>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor(System.Windows.PropertyChangedCallback)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.PropertyMetadata&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Windows.PropertyChangedCallback&quot; /&gt; implementation reference.">Inicializa uma nova instância da classe <see cref="T:System.Windows.PropertyMetadata" /> com a referência da implementação <see cref="T:System.Windows.PropertyChangedCallback" /> especificada.</summary>
      <param name="propertyChangedCallback" vsli:raw="Reference to a handler implementation that is to be called by the property system whenever the effective value of the property changes.">Referência a uma implementação do manipulador que será chamada pelo sistema de propriedades sempre que o valor efetivo da propriedade for alterado.</param>
    </member>
    <member name="P:System.Windows.PropertyMetadata.CoerceValueCallback">
      <summary vsli:raw="Gets or sets a reference to a &lt;see cref=&quot;T:System.Windows.CoerceValueCallback&quot; /&gt; implementation specified in this metadata.">Obtém ou define uma referência para uma implementação de <see cref="T:System.Windows.CoerceValueCallback" /> especificada nesses metadados.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.CoerceValueCallback&quot; /&gt; implementation reference.">Uma referência de implantação de <see cref="T:System.Windows.CoerceValueCallback" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Cannot set a metadata property once it is applied to a dependency property operation.">Não é possível definir uma propriedade de metadados após sua aplicação a uma operação de propriedade de dependência.</exception>
    </member>
    <member name="P:System.Windows.PropertyMetadata.DefaultValue">
      <summary vsli:raw="Gets or sets the default value of the dependency property.">Obtém ou define um valor padrão da propriedade de dependência.</summary>
      <returns vsli:raw="The default value of the property. The default value on a &lt;see cref=&quot;T:System.Windows.PropertyMetadata&quot; /&gt; instance created with the parameterless constructor will be &lt;see cref=&quot;F:System.Windows.DependencyProperty.UnsetValue&quot; /&gt;.">O valor padrão da propriedade. O valor padrão em uma <see cref="T:System.Windows.PropertyMetadata" /> instância criada com o construtor sem parâmetros <see cref="F:System.Windows.DependencyProperty.UnsetValue" />será.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Cannot be set to the value &lt;see cref=&quot;F:System.Windows.DependencyProperty.UnsetValue&quot; /&gt; once created.">Não pode ser definido para o valor <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> após a criação.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Cannot set a metadata property once it is applied to a dependency property operation.">Não é possível definir uma propriedade de metadados após sua aplicação a uma operação de propriedade de dependência.</exception>
    </member>
    <member name="P:System.Windows.PropertyMetadata.IsSealed">
      <summary vsli:raw="Gets a value that determines whether the metadata has been applied to a property in some way, resulting in the immutable state of that metadata instance.">Obtém um valor que determina se os metadados foram aplicados a uma propriedade de alguma forma, resultando em um estado imutável daquela instância de metadados.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the metadata instance is immutable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />se a instância de metadados for imutável; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="M:System.Windows.PropertyMetadata.Merge(System.Windows.PropertyMetadata,System.Windows.DependencyProperty)">
      <summary vsli:raw="Merges this metadata with the base metadata.">Mescla esses metadados com os metadados de base.</summary>
      <param name="baseMetadata" vsli:raw="The base metadata to merge with this instance's values.">Os metadados de base a mesclar com valores dessa instância.</param>
      <param name="dp" vsli:raw="The dependency property to which this metadata is being applied.">A propriedade de dependência à qual estes metadados estão sendo aplicados.</param>
    </member>
    <member name="M:System.Windows.PropertyMetadata.OnApply(System.Windows.DependencyProperty,System.Type)">
      <summary vsli:raw="Called when this metadata has been applied to a property, which indicates that the metadata is being sealed.">Chamado quando esses metadados foram aplicados a uma propriedade, o que indica que os metadados estão sendo selados.</summary>
      <param name="dp" vsli:raw="The dependency property to which the metadata has been applied.">A propriedade de dependência à qual os metadados foram aplicados.</param>
      <param name="targetType" vsli:raw="The type associated with this metadata if this is type-specific metadata. If this is default metadata, this value is a null reference.">O tipo associado a esses metadados se eles forem metadados específicos do tipo. Se estes forem os metadados padrão, o valor será uma referência nula.</param>
    </member>
    <member name="P:System.Windows.PropertyMetadata.PropertyChangedCallback">
      <summary vsli:raw="Gets or sets a reference to a &lt;see cref=&quot;T:System.Windows.PropertyChangedCallback&quot; /&gt; implementation specified in this metadata.">Obtém ou define uma referência para uma implementação de <see cref="T:System.Windows.PropertyChangedCallback" /> especificada nesses metadados.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.PropertyChangedCallback&quot; /&gt; implementation reference.">Uma referência de implantação de <see cref="T:System.Windows.PropertyChangedCallback" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Cannot set a metadata property once it is applied to a dependency property operation.">Não é possível definir uma propriedade de metadados após sua aplicação a uma operação de propriedade de dependência.</exception>
    </member>
    <member name="T:System.Windows.Rect">
      <summary vsli:raw="Describes the width, height, and location of a rectangle.">Descreve a largura, altura e local de um retângulo.</summary>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure that has the specified x-coordinate, y-coordinate, width, and height.">Inicializa uma nova instância da estrutura <see cref="T:System.Windows.Rect" />, que tem a coordenada X, a coordenada Y, a largura e a altura especificadas.</summary>
      <param name="x" vsli:raw="The x-coordinate of the top-left corner of the rectangle.">A coordenada X do canto superior esquerdo do retângulo.</param>
      <param name="y" vsli:raw="The y-coordinate of the top-left corner of the rectangle.">A coordenada y do canto superior esquerdo do retângulo.</param>
      <param name="width" vsli:raw="The width of the rectangle.">A largura do retângulo.</param>
      <param name="height" vsli:raw="The height of the rectangle.">A altura do retângulo.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;width&quot; /&gt; is a negative value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;height&quot; /&gt; is a negative value.">
        <paramref name="width" /> é um valor negativo.  

ou - 
<paramref name="height" /> é um valor negativo.</exception>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Point)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure that is exactly large enough to contain the two specified points.">Inicializa uma nova instância da estrutura <see cref="T:System.Windows.Rect" /> que é exatamente grande o suficiente para conter os dois pontos especificados.</summary>
      <param name="point1" vsli:raw="The first point that the new rectangle must contain.">O primeiro ponto que o novo retângulo deve conter.</param>
      <param name="point2" vsli:raw="The second point that the new rectangle must contain.">O segundo ponto que o novo retângulo deve conter.</param>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Size)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure that has the specified top-left corner location and the specified width and height.">Inicializa uma nova instância da estrutura <see cref="T:System.Windows.Rect" /> que tem o local do canto superior esquerdo especificado e a altura e largura especificadas.</summary>
      <param name="location" vsli:raw="A point that specifies the location of the top-left corner of the rectangle.">Um ponto que especifica o local do canto superior esquerdo do retângulo.</param>
      <param name="size" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure that specifies the width and height of the rectangle.">Uma estrutura <see cref="T:System.Windows.Size" /> que especifica a largura e altura do retângulo.</param>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Vector)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure that is exactly large enough to contain the specified point and the sum of the specified point and the specified vector.">Inicializa uma nova instância da estrutura <see cref="T:System.Windows.Rect" /> com tamanho suficiente exatamente para conter o ponto especificado e a soma do ponto e do vetor especificados.</summary>
      <param name="point" vsli:raw="The first point the rectangle must contain.">O primeiro ponto que o retângulo deve conter.</param>
      <param name="vector" vsli:raw="The amount to offset the specified point. The resulting rectangle will be exactly large enough to contain both points.">O valor do deslocamento do ponto especificado. O retângulo resultante terá tamanho suficiente exatamente para conter os dois pontos.</param>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Windows.Size)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure that is of the specified size and is located at (0,0).">Inicializa uma nova instância da estrutura <see cref="T:System.Windows.Rect" /> que é do tamanho especificado e está localizada em (0,0).</summary>
      <param name="size" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure that specifies the width and height of the rectangle.">Uma estrutura <see cref="T:System.Windows.Size" /> que especifica a largura e altura do retângulo.</param>
    </member>
    <member name="P:System.Windows.Rect.Bottom">
      <summary vsli:raw="Gets the y-axis value of the bottom of the rectangle.">Obtém o valor do eixo y da parte inferior do retângulo.</summary>
      <returns vsli:raw="The y-axis value of the bottom of the rectangle. If the rectangle is empty, the value is &lt;see cref=&quot;F:System.Double.NegativeInfinity&quot; /&gt; .">O valor do eixo y da parte inferior do retângulo. Se o retângulo estiver vazio, o valor será <see cref="F:System.Double.NegativeInfinity" />.</returns>
    </member>
    <member name="P:System.Windows.Rect.BottomLeft">
      <summary vsli:raw="Gets the position of the bottom-left corner of the rectangle.">Obtém a posição do canto inferior esquerdo do retângulo</summary>
      <returns vsli:raw="The position of the bottom-left corner of the rectangle.">A posição do canto inferior esquerdo do retângulo.</returns>
    </member>
    <member name="P:System.Windows.Rect.BottomRight">
      <summary vsli:raw="Gets the position of the bottom-right corner of the rectangle.">Obtém a posição do canto inferior direito do retângulo.</summary>
      <returns vsli:raw="The position of the bottom-right corner of the rectangle.">A posição do canto inferior direito do retângulo.</returns>
    </member>
    <member name="M:System.Windows.Rect.Contains(System.Double,System.Double)">
      <summary vsli:raw="Indicates whether the rectangle contains the specified x-coordinate and y-coordinate.">Indica se o retângulo contém a coordenada x e a coordenada y especificadas.</summary>
      <param name="x" vsli:raw="The x-coordinate of the point to check.">A coordenada x do ponto a ser verificado.</param>
      <param name="y" vsli:raw="The y-coordinate of the point to check.">A coordenada y do ponto a ser verificado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if (&lt;paramref name=&quot;x&quot; /&gt;, &lt;paramref name=&quot;y&quot; /&gt;) is contained by the rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se (<paramref name="x" />, <paramref name="y" />) estiver contido pelo retângulo; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.Contains(System.Windows.Point)">
      <summary vsli:raw="Indicates whether the rectangle contains the specified point.">Indica se o retângulo que contém o ponto especificado.</summary>
      <param name="point" vsli:raw="The point to check.">O ponto a verificar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the rectangle contains the specified point; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o retângulo contiver o ponto especificado; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.Contains(System.Windows.Rect)">
      <summary vsli:raw="Indicates whether the rectangle contains the specified rectangle.">Indica se o retângulo contém o retângulo especificado.</summary>
      <param name="rect" vsli:raw="The rectangle to check.">O retângulo a ser verificado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;rect&quot; /&gt; is entirely contained by the rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o <paramref name="rect" /> estiver inteiramente contido pelo retângulo; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Rect.Empty">
      <summary vsli:raw="Gets a special value that represents a rectangle with no position or area.">Obtém um valor especial que representa um retângulo sem posição ou área.</summary>
      <returns vsli:raw="The empty rectangle, which has &lt;see cref=&quot;P:System.Windows.Rect.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Y&quot; /&gt; property values of &lt;see cref=&quot;F:System.Double.PositiveInfinity&quot; /&gt;, and has &lt;see cref=&quot;P:System.Windows.Rect.Width&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Height&quot; /&gt; property values of &lt;see cref=&quot;F:System.Double.NegativeInfinity&quot; /&gt;.">O retângulo vazio, que tem valores de propriedade <see cref="P:System.Windows.Rect.X" /> e <see cref="P:System.Windows.Rect.Y" /> de <see cref="F:System.Double.PositiveInfinity" /> e tem valores de propriedade <see cref="P:System.Windows.Rect.Width" /> e <see cref="P:System.Windows.Rect.Height" /> de <see cref="F:System.Double.NegativeInfinity" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.Equals(System.Object)">
      <summary vsli:raw="Indicates whether the specified object is equal to the current rectangle.">indica se o objeto especificado é igual ao retângulo atual.</summary>
      <param name="o" vsli:raw="The object to compare to the current rectangle.">O objeto a comparar ao retângulo atual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; and has the same &lt;see cref=&quot;P:System.Windows.Rect.Location&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Size&quot; /&gt; values as the current rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="o" /> for um <see cref="T:System.Windows.Rect" /> e tiver os mesmos valores <see cref="P:System.Windows.Rect.Location" /> e <see cref="P:System.Windows.Rect.Size" /> que o retângulo atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.Equals(System.Windows.Rect)">
      <summary vsli:raw="Indicates whether the specified rectangle is equal to the current rectangle.">indica se o retângulo especificado é igual ao retângulo atual.</summary>
      <param name="value" vsli:raw="The rectangle to compare to the current rectangle.">O retângulo a ser comparado ao retângulo atual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified rectangle has the same &lt;see cref=&quot;P:System.Windows.Rect.Location&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Size&quot; /&gt; values as the current rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o retângulo especificado tiver os mesmos valores <see cref="P:System.Windows.Rect.Location" /> e <see cref="P:System.Windows.Rect.Size" /> que o retângulo atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.Equals(System.Windows.Rect,System.Windows.Rect)">
      <summary vsli:raw="Indicates whether the specified rectangles are equal.">Indica se os retângulos especificados são iguais.</summary>
      <param name="rect1" vsli:raw="The first rectangle to compare.">O primeiro retângulo a ser comparado.</param>
      <param name="rect2" vsli:raw="The second rectangle to compare.">O segundo retângulo a ser comparado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the rectangles have the same &lt;see cref=&quot;P:System.Windows.Rect.Location&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Size&quot; /&gt; values; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se os retângulos tiverem os mesmos valores <see cref="P:System.Windows.Rect.Location" /> e <see cref="P:System.Windows.Rect.Size" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.GetHashCode">
      <summary vsli:raw="Creates a hash code for the rectangle.">Cria um código hash para o retângulo.</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure.">Um código hash para a estrutura <see cref="T:System.Windows.Rect" /> atual.</returns>
    </member>
    <member name="P:System.Windows.Rect.Height">
      <summary vsli:raw="Gets or sets the height of the rectangle.">Obtém ou define a altura do retângulo.</summary>
      <returns vsli:raw="A positive number that represents the height of the rectangle. The default is 0.">Um número positivo que representa a altura do retângulo. O padrão é 0.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.Height&quot; /&gt; is set to a negative value.">
        <see cref="P:System.Windows.Rect.Height" /> é definido como um valor negativo.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.Height&quot; /&gt; is set on an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <see cref="P:System.Windows.Rect.Height" /> está definido em um retângulo <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Inflate(System.Double,System.Double)">
      <summary vsli:raw="Expands or shrinks the rectangle by using the specified width and height amounts, in all directions.">Aumenta ou diminui o retângulo usando os valores de largura e altura especificados, em todas as direções.</summary>
      <param name="width" vsli:raw="The amount by which to expand or shrink the left and right sides of the rectangle.">A quantidade pela qual expandir ou reduzir os lados esquerdo e direito do retângulo.</param>
      <param name="height" vsli:raw="The amount by which to expand or shrink the top and bottom sides of the rectangle.">A quantidade pela qual expandir ou reduzir os lados superior e inferior do retângulo.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This method is called on the &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">Esse método é chamado no retângulo <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Double,System.Double)">
      <summary vsli:raw="Creates a rectangle that results from expanding or shrinking the specified rectangle by the specified width and height amounts, in all directions.">Cria um retângulo que é o resultado de expandir ou reduzir o retângulo especificado pelos valores especificados de largura e altura em todas as direções.</summary>
      <param name="rect" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure to modify.">A estrutura <see cref="T:System.Windows.Rect" /> a ser modificada.</param>
      <param name="width" vsli:raw="The amount by which to expand or shrink the left and right sides of the rectangle.">A quantidade pela qual expandir ou reduzir os lados esquerdo e direito do retângulo.</param>
      <param name="height" vsli:raw="The amount by which to expand or shrink the top and bottom sides of the rectangle.">A quantidade pela qual expandir ou reduzir os lados superior e inferior do retângulo.</param>
      <returns vsli:raw="The resulting rectangle.">O retângulo resultante.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;rect&quot; /&gt; is an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <paramref name="rect" /> é um retângulo <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Windows.Size)">
      <summary vsli:raw="Returns the rectangle that results from expanding the specified rectangle by the specified &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;, in all directions.">Retorna o retângulo resultante da expansão do retângulo indicado pelo <see cref="T:System.Windows.Size" /> especificado, em todos os sentidos.</summary>
      <param name="rect" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure to modify.">A estrutura <see cref="T:System.Windows.Rect" /> a ser modificada.</param>
      <param name="size" vsli:raw="Specifies the amount to expand the rectangle. The &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Size.Width&quot; /&gt; property specifies the amount to increase the rectangle's &lt;see cref=&quot;P:System.Windows.Rect.Left&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Right&quot; /&gt; properties. The &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Size.Height&quot; /&gt; property specifies the amount to increase the rectangle's &lt;see cref=&quot;P:System.Windows.Rect.Top&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Bottom&quot; /&gt; properties.">Especifica a quantidade para expandir o retângulo. A estrutura <see cref="T:System.Windows.Size" />, propriedade <see cref="P:System.Windows.Size.Width" />, especifica o valor para aumentar o <see cref="P:System.Windows.Rect.Left" /> do retângulo e as propriedades <see cref="P:System.Windows.Rect.Right" />. A estrutura <see cref="T:System.Windows.Size" />, propriedade <see cref="P:System.Windows.Size.Height" />, especifica o valor para aumentar o <see cref="P:System.Windows.Rect.Top" /> do retângulo e as propriedades <see cref="P:System.Windows.Rect.Bottom" />.</param>
      <returns vsli:raw="The resulting rectangle.">O retângulo resultante.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;rect&quot; /&gt; is an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <paramref name="rect" /> é um retângulo <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Inflate(System.Windows.Size)">
      <summary vsli:raw="Expands the rectangle by using the specified &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;, in all directions.">Expande o retângulo usando o <see cref="T:System.Windows.Size" /> especificado em todas as direções.</summary>
      <param name="size" vsli:raw="Specifies the amount to expand the rectangle. The &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Size.Width&quot; /&gt; property specifies the amount to increase the rectangle's &lt;see cref=&quot;P:System.Windows.Rect.Left&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Right&quot; /&gt; properties. The &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Size.Height&quot; /&gt; property specifies the amount to increase the rectangle's &lt;see cref=&quot;P:System.Windows.Rect.Top&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Bottom&quot; /&gt; properties.">Especifica a quantidade para expandir o retângulo. A estrutura <see cref="T:System.Windows.Size" />, propriedade <see cref="P:System.Windows.Size.Width" />, especifica o valor para aumentar o <see cref="P:System.Windows.Rect.Left" /> do retângulo e as propriedades <see cref="P:System.Windows.Rect.Right" />. A estrutura <see cref="T:System.Windows.Size" />, propriedade <see cref="P:System.Windows.Size.Height" />, especifica o valor para aumentar o <see cref="P:System.Windows.Rect.Top" /> do retângulo e as propriedades <see cref="P:System.Windows.Rect.Bottom" />.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This method is called on the &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">Esse método é chamado no retângulo <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Intersect(System.Windows.Rect)">
      <summary vsli:raw="Finds the intersection of the current rectangle and the specified rectangle, and stores the result as the current rectangle.">Localiza a interseção do retângulo atual e do retângulo especificado e armazena o resultado como o retângulo atual.</summary>
      <param name="rect" vsli:raw="The rectangle to intersect with the current rectangle.">O retângulo para fazer a interseção com o retângulo atual.</param>
    </member>
    <member name="M:System.Windows.Rect.Intersect(System.Windows.Rect,System.Windows.Rect)">
      <summary vsli:raw="Returns the intersection of the specified rectangles.">Retorna a interseção dos retângulos especificados.</summary>
      <param name="rect1" vsli:raw="The first rectangle to compare.">O primeiro retângulo a ser comparado.</param>
      <param name="rect2" vsli:raw="The second rectangle to compare.">O segundo retângulo a ser comparado.</param>
      <returns vsli:raw="The intersection of the two rectangles, or &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; if no intersection exists.">A interseção dos dois retângulos ou <see cref="P:System.Windows.Rect.Empty" /> se não existir interseção.</returns>
    </member>
    <member name="M:System.Windows.Rect.IntersectsWith(System.Windows.Rect)">
      <summary vsli:raw="Indicates whether the specified rectangle intersects with the current rectangle.">Indica se o retângulo especificado faz interseção com o retângulo atual.</summary>
      <param name="rect" vsli:raw="The rectangle to check.">O retângulo a ser verificado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified rectangle intersects with the current rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o retângulo especificado fizer interseção com o retângulo atual, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Rect.IsEmpty">
      <summary vsli:raw="Gets a value that indicates whether the rectangle is the &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">Obtém um valor que indica se o retângulo é o retângulo <see cref="P:System.Windows.Rect.Empty" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the rectangle is the &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o retângulo for o <see cref="P:System.Windows.Rect.Empty" /> retângulo, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Rect.Left">
      <summary vsli:raw="Gets the x-axis value of the left side of the rectangle.">Obtém o valor do eixo x do lado esquerdo do retângulo.</summary>
      <returns vsli:raw="The x-axis value of the left side of the rectangle.">O valor do eixo x do lado esquerdo do retângulo.</returns>
    </member>
    <member name="P:System.Windows.Rect.Location">
      <summary vsli:raw="Gets or sets the position of the top-left corner of the rectangle.">Obtém ou define a posição do canto superior esquerdo do retângulo.</summary>
      <returns vsli:raw="The position of the top-left corner of the rectangle. The default is (0, 0).">A posição do canto superior esquerdo do retângulo. O padrão é (0, 0).</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.Location&quot; /&gt; is set on an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <see cref="P:System.Windows.Rect.Location" /> está definido em um retângulo <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Offset(System.Double,System.Double)">
      <summary vsli:raw="Moves the rectangle by the specified horizontal and vertical amounts.">Move o retângulo pelas quantidades horizontal e vertical especificadas.</summary>
      <param name="offsetX" vsli:raw="The amount to move the rectangle horizontally.">O valor para mover o retângulo horizontalmente.</param>
      <param name="offsetY" vsli:raw="The amount to move the rectangle vertically.">O valor para mover o retângulo verticalmente.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This method is called on the &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">Esse método é chamado no retângulo <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Double,System.Double)">
      <summary vsli:raw="Returns a rectangle that is offset from the specified rectangle by using the specified horizontal and vertical amounts.">Retorna um retângulo que é deslocado do retângulo especificado usando os valores horizontais e verticais especificados.</summary>
      <param name="rect" vsli:raw="The rectangle to move.">O retângulo a ser movido.</param>
      <param name="offsetX" vsli:raw="The horizontal offset for the new rectangle.">O deslocamento horizontal para o novo retângulo.</param>
      <param name="offsetY" vsli:raw="The vertical offset for the new rectangle.">O deslocamento vertical para o novo retângulo.</param>
      <returns vsli:raw="The resulting rectangle.">O retângulo resultante.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;rect&quot; /&gt; is &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt;.">
        <paramref name="rect" /> é <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Windows.Vector)">
      <summary vsli:raw="Returns a rectangle that is offset from the specified rectangle by using the specified vector.">Retorna um retângulo que é deslocado do retângulo especificado usando o vetor especificado.</summary>
      <param name="rect" vsli:raw="The original rectangle.">O retângulo original.</param>
      <param name="offsetVector" vsli:raw="A vector that specifies the horizontal and vertical offsets for the new rectangle.">Um vetor que especifica os deslocamentos horizontais e verticais para o novo retângulo.</param>
      <returns vsli:raw="The resulting rectangle.">O retângulo resultante.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;rect&quot; /&gt; is &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt;.">
        <paramref name="rect" /> é <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Offset(System.Windows.Vector)">
      <summary vsli:raw="Moves the rectangle by the specified vector.">Move o retângulo pelo vetor especificado.</summary>
      <param name="offsetVector" vsli:raw="A vector that specifies the horizontal and vertical amounts to move the rectangle.">Um vetor que especifica as quantidades horizontais e verticais para mover o retângulo.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This method is called on the &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">Esse método é chamado no retângulo <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)">
      <summary vsli:raw="Compares two rectangles for exact equality.">Compara a igualdade exata de dois retângulos.</summary>
      <param name="rect1" vsli:raw="The first rectangle to compare.">O primeiro retângulo a ser comparado.</param>
      <param name="rect2" vsli:raw="The second rectangle to compare.">O segundo retângulo a ser comparado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the rectangles have the same &lt;see cref=&quot;P:System.Windows.Rect.Location&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Size&quot; /&gt; values; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se os retângulos tiverem os mesmos valores <see cref="P:System.Windows.Rect.Location" /> e <see cref="P:System.Windows.Rect.Size" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)">
      <summary vsli:raw="Compares two rectangles for inequality.">Compara dois retângulos quanto à desigualdade.</summary>
      <param name="rect1" vsli:raw="The first rectangle to compare.">O primeiro retângulo a ser comparado.</param>
      <param name="rect2" vsli:raw="The second rectangle to compare.">O segundo retângulo a ser comparado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the rectangles do not have the same &lt;see cref=&quot;P:System.Windows.Rect.Location&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Size&quot; /&gt; values; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se os retângulos não tiverem os mesmos valores <see cref="P:System.Windows.Rect.Location" /> e <see cref="P:System.Windows.Rect.Size" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.Parse(System.String)">
      <summary vsli:raw="Creates a new rectangle from the specified string representation.">Cria um novo retângulo da representação da cadeia de caracteres especificada.</summary>
      <param name="source" vsli:raw="The string representation of the rectangle, in the form &quot;x, y, width, height&quot;.">A representação de cadeia de caracteres do retângulo, no formato "x, y, largura, altura".</param>
      <returns vsli:raw="The resulting rectangle.">O retângulo resultante.</returns>
    </member>
    <member name="P:System.Windows.Rect.Right">
      <summary vsli:raw="Gets the x-axis value of the right side of the rectangle.">Obtém o valor do eixo x do lado direito do retângulo.</summary>
      <returns vsli:raw="The x-axis value of the right side of the rectangle.">O valor do eixo x do lado direito do retângulo.</returns>
    </member>
    <member name="M:System.Windows.Rect.Scale(System.Double,System.Double)">
      <summary vsli:raw="Multiplies the size of the current rectangle by the specified x and y values.">Multiplica o tamanho do retângulo atual pelos valores de x e y especificados.</summary>
      <param name="scaleX" vsli:raw="The scale factor in the x-direction.">O fator de escala na direção x.</param>
      <param name="scaleY" vsli:raw="The scale factor in the y-direction.">O fator de escala na direção y.</param>
    </member>
    <member name="P:System.Windows.Rect.Size">
      <summary vsli:raw="Gets or sets the width and height of the rectangle.">Obtém ou define a largura e a altura do retângulo.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure that specifies the width and height of the rectangle.">Uma estrutura <see cref="T:System.Windows.Size" /> que especifica a largura e altura do retângulo.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.Size&quot; /&gt; is set on an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <see cref="P:System.Windows.Rect.Size" /> está definido em um retângulo <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="Formats the value of the current instance using the specified format.">Formata o valor da instância atual usando o formato especificado.</summary>
      <param name="format" vsli:raw="The format to use.  &#xA;  &#xA; -or-  &#xA;  &#xA; A null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) to use the default format defined for the type of the &lt;see cref=&quot;T:System.IFormattable&quot; /&gt; implementation.">O formato a ser usado.  

ou - 
Uma referência nula (<see langword="Nothing" /> no Visual Basic) para usar o formato padrão definido para o tipo da implementação <see cref="T:System.IFormattable" />.</param>
      <param name="provider" vsli:raw="The provider to use to format the value.  &#xA;  &#xA; -or-  &#xA;  &#xA; A null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.">O provedor a ser usado para formatar o valor.  

ou - 
Uma referência nula (<see langword="Nothing" /> no Visual Basic) para obter as informações de formato numérico da configuração de localidade atual do sistema operacional.</param>
      <returns vsli:raw="A string representation of the rectangle.">Uma representação de cadeia de caracteres do retângulo.</returns>
    </member>
    <member name="P:System.Windows.Rect.Top">
      <summary vsli:raw="Gets the y-axis position of the top of the rectangle.">Obtém a posição do eixo y da parte superior do retângulo.</summary>
      <returns vsli:raw="The y-axis position of the top of the rectangle.">A posição do eixo y da parte superior do retângulo.</returns>
    </member>
    <member name="P:System.Windows.Rect.TopLeft">
      <summary vsli:raw="Gets the position of the top-left corner of the rectangle.">Obtém a posição do canto superior esquerdo do retângulo.</summary>
      <returns vsli:raw="The position of the top-left corner of the rectangle.">A posição do canto superior esquerdo do retângulo.</returns>
    </member>
    <member name="P:System.Windows.Rect.TopRight">
      <summary vsli:raw="Gets the position of the top-right corner of the rectangle.">Obtém a posição do canto superior direito do retângulo.</summary>
      <returns vsli:raw="The position of the top-right corner of the rectangle.">A posição do canto superior direito do retângulo.</returns>
    </member>
    <member name="M:System.Windows.Rect.ToString">
      <summary vsli:raw="Returns a string representation of the rectangle.">Retorna uma representação de cadeia de caracteres do retângulo.</summary>
      <returns vsli:raw="A string representation of the current rectangle. The string has the following form: &quot;&lt;see cref=&quot;P:System.Windows.Rect.X&quot; /&gt;,&lt;see cref=&quot;P:System.Windows.Rect.Y&quot; /&gt;,&lt;see cref=&quot;P:System.Windows.Rect.Width&quot; /&gt;,&lt;see cref=&quot;P:System.Windows.Rect.Height&quot; /&gt;&quot;.">Uma representação de cadeia de caracteres do retângulo atual. A cadeia de caracteres tem o seguinte formato: "<see cref="P:System.Windows.Rect.X" />,<see cref="P:System.Windows.Rect.Y" />,<see cref="P:System.Windows.Rect.Width" />,<see cref="P:System.Windows.Rect.Height" />".</returns>
    </member>
    <member name="M:System.Windows.Rect.ToString(System.IFormatProvider)">
      <summary vsli:raw="Returns a string representation of the rectangle by using the specified format provider.">Retorna uma representação de cadeia de caracteres do retângulo, usando o provedor de formato especificado.</summary>
      <param name="provider" vsli:raw="Culture-specific formatting information.">Informações de formatação específicas da cultura.</param>
      <returns vsli:raw="A string representation of the current rectangle that is determined by the specified format provider.">Uma representação de cadeia de caracteres do retângulo atual que é determinada pelo provedor de formato especificado.</returns>
    </member>
    <member name="M:System.Windows.Rect.Transform(System.Windows.Media.Matrix)">
      <summary vsli:raw="Transforms the rectangle by applying the specified matrix.">Transforma o retângulo aplicando a matriz especificada.</summary>
      <param name="matrix" vsli:raw="A matrix that specifies the transformation to apply.">Uma matriz que especifica a transformação a ser aplicada.</param>
    </member>
    <member name="M:System.Windows.Rect.Transform(System.Windows.Rect,System.Windows.Media.Matrix)">
      <summary vsli:raw="Returns the rectangle that results from applying the specified matrix to the specified rectangle.">Retorna o retângulo que resulta da aplicação da matriz especificada ao retângulo especificado.</summary>
      <param name="rect" vsli:raw="A rectangle that is the basis for the transformation.">Um retângulo que é a base para a transformação.</param>
      <param name="matrix" vsli:raw="A matrix that specifies the transformation to apply.">Uma matriz que especifica a transformação a ser aplicada.</param>
      <returns vsli:raw="The rectangle that results from the operation.">O retângulo que resulta da operação.</returns>
    </member>
    <member name="M:System.Windows.Rect.Union(System.Windows.Point)">
      <summary vsli:raw="Expands the current rectangle exactly enough to contain the specified point.">Expande o retângulo atual exatamente o suficiente para conter o ponto especificado.</summary>
      <param name="point" vsli:raw="The point to include.">O ponto a ser incluído.</param>
    </member>
    <member name="M:System.Windows.Rect.Union(System.Windows.Rect)">
      <summary vsli:raw="Expands the current rectangle exactly enough to contain the specified rectangle.">Expande o retângulo atual exatamente o suficiente para conter o retângulo especificado.</summary>
      <param name="rect" vsli:raw="The rectangle to include.">O retângulo a ser incluído.</param>
    </member>
    <member name="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Point)">
      <summary vsli:raw="Creates a rectangle that is exactly large enough to include the specified rectangle and the specified point.">Cria um retângulo que é exatamente grande o suficiente para incluir o retângulo especificado e o ponto especificado.</summary>
      <param name="rect" vsli:raw="The rectangle to include.">O retângulo a ser incluído.</param>
      <param name="point" vsli:raw="The point to include.">O ponto a ser incluído.</param>
      <returns vsli:raw="A rectangle that is exactly large enough to contain the specified rectangle and the specified point.">Um retângulo que é exatamente grande o suficiente para conter o retângulo especificado e o ponto especificado.</returns>
    </member>
    <member name="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Rect)">
      <summary vsli:raw="Creates a rectangle that is exactly large enough to contain the two specified rectangles.">Cria um retângulo que é exatamente grande o suficiente para conter os dois retângulos especificados.</summary>
      <param name="rect1" vsli:raw="The first rectangle to include.">O primeiro retângulo a incluir.</param>
      <param name="rect2" vsli:raw="The second rectangle to include.">O segundo retângulo a ser incluído.</param>
      <returns vsli:raw="The resulting rectangle.">O retângulo resultante.</returns>
    </member>
    <member name="P:System.Windows.Rect.Width">
      <summary vsli:raw="Gets or sets the width of the rectangle.">Obtém ou define a largura do retângulo.</summary>
      <returns vsli:raw="A positive number that represents the width of the rectangle. The default is 0.">Um número positivo que representa a largura do retângulo. O padrão é 0.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.Width&quot; /&gt; is set to a negative value.">
        <see cref="P:System.Windows.Rect.Width" /> é definido como um valor negativo.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.Width&quot; /&gt; is set on an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <see cref="P:System.Windows.Rect.Width" /> está definido em um retângulo <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="P:System.Windows.Rect.X">
      <summary vsli:raw="Gets or sets the x-axis value of the left side of the rectangle.">Obtém ou define o valor do eixo X do lado esquerdo do retângulo.</summary>
      <returns vsli:raw="The x-axis value of the left side of the rectangle.">O valor do eixo x do lado esquerdo do retângulo.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.X&quot; /&gt; is set on an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <see cref="P:System.Windows.Rect.X" /> está definido em um retângulo <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="P:System.Windows.Rect.Y">
      <summary vsli:raw="Gets or sets the y-axis value of the top side of the rectangle.">Obtém ou define o valor do eixo y do lado superior do retângulo.</summary>
      <returns vsli:raw="The y-axis value of the top side of the rectangle.">O valor do eixo y do lado superior do retângulo.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.Y&quot; /&gt; is set on an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <see cref="P:System.Windows.Rect.Y" /> está definido em um retângulo <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="T:System.Windows.RectConverter">
      <summary vsli:raw="Converts instances of other types to and from instances of &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">Converte instâncias de outros tipos de e para instâncias de <see cref="T:System.Windows.Rect" />.</summary>
    </member>
    <member name="M:System.Windows.RectConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.RectConverter&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.RectConverter" />.</summary>
    </member>
    <member name="M:System.Windows.RectConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an object can be converted from a given type to an instance of &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">Determina se um objeto pode ser convertido de um determinado tipo em uma instância de um <see cref="T:System.Windows.Rect" />.</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">Fornece informações contextuais necessárias para conversão.</param>
      <param name="sourceType" vsli:raw="The type of the source that is being evaluated for conversion.">O tipo de origem que está sendo avaliado para conversão.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the type can be converted to a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o tipo puder ser convertido para um <see cref="T:System.Windows.Rect" />, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.RectConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; can be converted to the specified type.">Determina se é possível converter um <see cref="T:System.Windows.Rect" /> no tipo especificado.</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">Fornece informações contextuais necessárias para conversão.</param>
      <param name="destinationType" vsli:raw="The desired type this &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; is being evaluated for conversion.">O tipo desejado para o qual se está avaliando converter este <see cref="T:System.Windows.Rect" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; can be converted to &lt;paramref name=&quot;destinationType&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se este <see cref="T:System.Windows.Rect" /> puder ser convertido em <paramref name="destinationType" />, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.RectConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert the specified object to a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">Tenta converter o objeto especificado em um <see cref="T:System.Windows.Rect" />.</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">Fornece informações contextuais necessárias para conversão.</param>
      <param name="culture" vsli:raw="Cultural information which is respected when converting.">Informações culturais que são respeitadas ao converter.</param>
      <param name="value" vsli:raw="The object being converted.">O objeto sendo convertido.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; created from converting &lt;paramref name=&quot;value&quot; /&gt;.">O <see cref="T:System.Windows.Rect" /> criado da conversão de <paramref name="value" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The specified object is NULL or is a type that cannot be converted to a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">Gerada se o objeto especificado for NULL ou for um tipo que não possa ser convertido em um <see cref="T:System.Windows.Rect" />.</exception>
    </member>
    <member name="M:System.Windows.RectConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; to the specified type.">Tenta converter um <see cref="T:System.Windows.Rect" /> para o tipo especificado.</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">Fornece informações contextuais necessárias para conversão.</param>
      <param name="culture" vsli:raw="Cultural information which is respected during conversion.">Informações culturais que são respeitadas durante a conversão.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; to convert.">O <see cref="T:System.Windows.Rect" /> a ser convertido.</param>
      <param name="destinationType" vsli:raw="The type to convert this &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; to.">O tipo para o qual converter este <see cref="T:System.Windows.Rect" />.</param>
      <returns vsli:raw="The object created from converting this &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">O objeto criado da conversão deste <see cref="T:System.Windows.Rect" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;value&quot; /&gt; is not a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; The &lt;paramref name=&quot;destinationType&quot; /&gt; is not one of the valid types for conversion.">
        <paramref name="value" /> é <see langword="null" />.  

ou - 
<paramref name="value" /> não é um <see cref="T:System.Windows.Rect" />.  

ou - 
O <paramref name="destinationType" /> não é um dos tipos válidos para conversão.</exception>
    </member>
    <member name="T:System.Windows.Size">
      <summary vsli:raw="Implements a structure that is used to describe the &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; of an object.">Implementa uma estrutura usada para descrever o <see cref="T:System.Windows.Size" /> de um objeto.</summary>
    </member>
    <member name="M:System.Windows.Size.#ctor(System.Double,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure and assigns it an initial &lt;paramref name=&quot;width&quot; /&gt; and &lt;paramref name=&quot;height&quot; /&gt;.">Inicializa uma nova instância da estrutura <see cref="T:System.Windows.Size" /> e atribui a ela um <paramref name="width" /> inicial e um <paramref name="height" />.</summary>
      <param name="width" vsli:raw="The initial width of the instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">A largura inicial da instância de <see cref="T:System.Windows.Size" />.</param>
      <param name="height" vsli:raw="The initial height of the instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">A altura inicial da instância de <see cref="T:System.Windows.Size" />.</param>
    </member>
    <member name="P:System.Windows.Size.Empty">
      <summary vsli:raw="Gets a value that represents a static empty &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Obtém um valor que representa um <see cref="T:System.Windows.Size" /> vazio estático.</summary>
      <returns vsli:raw="An empty instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Uma instância vazia do <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="M:System.Windows.Size.Equals(System.Object)">
      <summary vsli:raw="Compares an object to an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; for equality.">Compara a igualdade de um objeto com uma instância de <see cref="T:System.Windows.Size" />.</summary>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to compare.">O <see cref="T:System.Object" /> de comparação.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the sizes are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se os tamanhos forem iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Size.Equals(System.Windows.Size)">
      <summary vsli:raw="Compares a value to an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; for equality.">Compara a igualdade de um valor com uma instância de <see cref="T:System.Windows.Size" />.</summary>
      <param name="value" vsli:raw="The size to compare to this current instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">O tamanho a ser comparado com essa instância atual de <see cref="T:System.Windows.Size" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se as instâncias de <see cref="T:System.Windows.Size" /> forem iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Size.Equals(System.Windows.Size,System.Windows.Size)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; for equality.">Compara a igualdade de duas instâncias de <see cref="T:System.Windows.Size" />.</summary>
      <param name="size1" vsli:raw="The first instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to compare.">A primeira instância de <see cref="T:System.Windows.Size" /> a ser comparada.</param>
      <param name="size2" vsli:raw="The second instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to compare.">A segunda instância de <see cref="T:System.Windows.Size" /> a ser comparada.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se as instâncias de <see cref="T:System.Windows.Size" /> forem iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Size.GetHashCode">
      <summary vsli:raw="Gets the hash code for this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Obtém o código hash para esta instância de <see cref="T:System.Windows.Size" />.</summary>
      <returns vsli:raw="The hash code for this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">O código hash para essa instância de <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="P:System.Windows.Size.Height">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Windows.Size.Height&quot; /&gt; of this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Obtém ou define o <see cref="P:System.Windows.Size.Height" /> desta instância de <see cref="T:System.Windows.Size" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Windows.Size.Height&quot; /&gt; of this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;. The default is 0. The value cannot be negative.">O <see cref="P:System.Windows.Size.Height" /> dessa instância do <see cref="T:System.Windows.Size" />. O padrão é 0. O valor não pode ser negativo.</returns>
    </member>
    <member name="P:System.Windows.Size.IsEmpty">
      <summary vsli:raw="Gets a value that indicates whether this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; is &lt;see cref=&quot;P:System.Windows.Size.Empty&quot; /&gt;.">Obtém um valor que indica se esta instância de <see cref="T:System.Windows.Size" /> é <see cref="P:System.Windows.Size.Empty" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this instance of size is &lt;see cref=&quot;P:System.Windows.Size.Empty&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Se essa instância do tamanho for <see cref="P:System.Windows.Size.Empty" />; caso <see langword="false" />contrário,.</returns>
    </member>
    <member name="M:System.Windows.Size.op_Equality(System.Windows.Size,System.Windows.Size)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; for equality.">Compara a igualdade de duas instâncias de <see cref="T:System.Windows.Size" />.</summary>
      <param name="size1" vsli:raw="The first instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to compare.">A primeira instância de <see cref="T:System.Windows.Size" /> a ser comparada.</param>
      <param name="size2" vsli:raw="The second instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to compare.">A segunda instância de <see cref="T:System.Windows.Size" /> a ser comparada.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">true se as duas instâncias de <see cref="T:System.Windows.Size" /> forem iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Size.op_Explicit(System.Windows.Size)~System.Windows.Point">
      <summary vsli:raw="Explicitly converts an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to an instance of &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Converte explicitamente uma instância de <see cref="T:System.Windows.Size" /> em uma instância de <see cref="T:System.Windows.Point" />.</summary>
      <param name="size" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; value to be converted.">O valor <see cref="T:System.Windows.Size" /> a ser convertido.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; equal in value to this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Um <see cref="T:System.Windows.Point" /> com valor igual a esta instância de <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="M:System.Windows.Size.op_Explicit(System.Windows.Size)~System.Windows.Vector">
      <summary vsli:raw="Explicitly converts an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to an instance of &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Converte explicitamente uma instância de <see cref="T:System.Windows.Size" /> em uma instância de <see cref="T:System.Windows.Vector" />.</summary>
      <param name="size" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; value to be converted.">O valor <see cref="T:System.Windows.Size" /> a ser convertido.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; equal in value to this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Um <see cref="T:System.Windows.Vector" /> com valor igual a esta instância de <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="M:System.Windows.Size.op_Inequality(System.Windows.Size,System.Windows.Size)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; for inequality.">Compara duas instâncias de <see cref="T:System.Windows.Size" /> quanto à desigualdade.</summary>
      <param name="size1" vsli:raw="The first instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to compare.">A primeira instância de <see cref="T:System.Windows.Size" /> a ser comparada.</param>
      <param name="size2" vsli:raw="The second instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to compare.">A segunda instância de <see cref="T:System.Windows.Size" /> a ser comparada.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; are not equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se as instâncias de <see cref="T:System.Windows.Size" /> não forem iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Size.Parse(System.String)">
      <summary vsli:raw="Returns an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; from a converted &lt;see cref=&quot;T:System.String&quot; /&gt;.">Retorna uma instância de <see cref="T:System.Windows.Size" /> de um <see cref="T:System.String" /> convertido.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; value to parse to a &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; value.">Um valor <see cref="T:System.String" /> a ser analisado para um valor <see cref="T:System.Windows.Size" />.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Uma instância de <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="M:System.Windows.Size.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.">Este tipo ou membro dá suporte à infraestrutura Windows Presentation Foundation (WPF) e não se destina a ser usado diretamente do código.</summary>
      <param name="format" vsli:raw="The format to use.">O formato a ser usado.</param>
      <param name="provider" vsli:raw="The provider to use to format the value.">O provedor a ser usado para formatar o valor.</param>
      <returns vsli:raw="The value of the current instance in the specified format.">O valor da instância atual no formato especificado.</returns>
    </member>
    <member name="M:System.Windows.Size.ToString">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.String&quot; /&gt; that represents this &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; object.">Retorna um <see cref="T:System.String" /> que representa este objeto <see cref="T:System.Windows.Size" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that specifies the width followed by the height.">Um <see cref="T:System.String" /> que especifica a largura seguida pela altura.</returns>
    </member>
    <member name="M:System.Windows.Size.ToString(System.IFormatProvider)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.String&quot; /&gt; that represents this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Retorna um <see cref="T:System.String" /> que representa essa instância de <see cref="T:System.Windows.Size" />.</summary>
      <param name="provider" vsli:raw="An object that provides a way to control formatting.">Um objeto que fornece uma maneira de controlar a formatação.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that represents this &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; object.">Um <see cref="T:System.String" /> que representa este objeto <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="P:System.Windows.Size.Width">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Windows.Size.Width&quot; /&gt; of this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Obtém ou define o <see cref="P:System.Windows.Size.Width" /> desta instância de <see cref="T:System.Windows.Size" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Windows.Size.Width&quot; /&gt; of this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;. The default value is &lt;c&gt;0&lt;/c&gt;. The value cannot be negative.">O <see cref="P:System.Windows.Size.Width" /> dessa instância do <see cref="T:System.Windows.Size" />. O valor padrão é <c>0</c>. O valor não pode ser negativo.</returns>
    </member>
    <member name="T:System.Windows.SizeConverter">
      <summary vsli:raw="Converts instances of other types to and from instances of the &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; class.">Converte instâncias de outros tipos de e para instâncias da classe <see cref="T:System.Windows.Size" />.</summary>
    </member>
    <member name="M:System.Windows.SizeConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.SizeConverter&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.SizeConverter" />.</summary>
    </member>
    <member name="M:System.Windows.SizeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether a class can be converted from a given type to an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Determina se uma classe pode ser convertida de um determinado tipo em uma instância de um <see cref="T:System.Windows.Size" />.</summary>
      <param name="context" vsli:raw="Provides contextual information about a component.">Fornece informações contextuais sobre um componente.</param>
      <param name="sourceType" vsli:raw="Identifies the data type to evaluate for conversion.">Identifica o tipo de dados a ser avaliado para conversão.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;sourceType&quot; /&gt; can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o <paramref name="sourceType" /> pode ser convertido em uma instância de <see cref="T:System.Windows.Size" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.SizeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; can be converted to a different type.">Determina se uma instância de <see cref="T:System.Windows.Size" /> pode ser convertida em um tipo diferente.</summary>
      <param name="context" vsli:raw="Provides contextual information about a component.">Fornece informações contextuais sobre um componente.</param>
      <param name="destinationType" vsli:raw="Identifies the data type to evaluate for conversion.">Identifica o tipo de dados a ser avaliado para conversão.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; can be converted to the &lt;paramref name=&quot;destinationType&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se essa instância de <see cref="T:System.Windows.Size" /> puder ser convertida no <paramref name="destinationType" />, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.SizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert a specified object to an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Tenta converter um objeto especificado em uma instância de <see cref="T:System.Windows.Size" />.</summary>
      <param name="context" vsli:raw="Provides contextual information about a component.">Fornece informações contextuais sobre um componente.</param>
      <param name="culture" vsli:raw="Culture-specific information that should be respected during conversion.">Informações específicas de cultura que devem ser respeitadas durante a conversão.</param>
      <param name="value" vsli:raw="The source object that is being converted.">O objeto de origem que está sendo convertido.</param>
      <returns vsli:raw="The instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; that is created from the converted &lt;paramref name=&quot;source&quot; /&gt;.">A instância de <see cref="T:System.Windows.Size" /> que é criada com base no <paramref name="source" /> convertido.</returns>
    </member>
    <member name="M:System.Windows.SizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to a specified type.">Tenta converter uma instância de <see cref="T:System.Windows.Size" /> em um tipo especificado.</summary>
      <param name="context" vsli:raw="Provides contextual information about a component.">Fornece informações contextuais sobre um componente.</param>
      <param name="culture" vsli:raw="Culture-specific information that should be respected during conversion.">Informações específicas de cultura que devem ser respeitadas durante a conversão.</param>
      <param name="value" vsli:raw="The instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to convert.">A instância de <see cref="T:System.Windows.Size" /> a ser convertida.</param>
      <param name="destinationType" vsli:raw="The type that this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; is converted to.">O tipo para o qual esta instância de <see cref="T:System.Windows.Size" /> é convertida.</param>
      <returns vsli:raw="The object that is created from the converted instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">O objeto que é criado com base na instância convertida de <see cref="T:System.Windows.Size" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or is not an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;, or if the &lt;paramref name=&quot;destinationType&quot; /&gt; is not one of the valid destination types.">
        <paramref name="value" /> é <see langword="null" /> ou não é uma instância de <see cref="T:System.Windows.Size" /> ou se o <paramref name="destinationType" /> não é um dos tipos de destino válido.</exception>
    </member>
    <member name="T:System.Windows.SplashScreen">
      <summary vsli:raw="Provides a startup screen for a Windows Presentation Foundation (WPF) application.">Fornece uma tela de inicialização para um aplicativo WPF (Windows Presentation Foundation).</summary>
    </member>
    <member name="M:System.Windows.SplashScreen.#ctor(System.Reflection.Assembly,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.SplashScreen&quot; /&gt; class with the specified resource assembly.">Inicializa uma nova instância da classe <see cref="T:System.Windows.SplashScreen" /> com assembly do recurso especificado.</summary>
      <param name="resourceAssembly" vsli:raw="The assembly that contains the embedded resource.">O assembly que contém o recurso inserido.</param>
      <param name="resourceName" vsli:raw="The name of the embedded resource.">O nome do recurso inserido.</param>
    </member>
    <member name="M:System.Windows.SplashScreen.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.SplashScreen&quot; /&gt; class with the specified resource.">Inicializa uma nova instância da classe <see cref="T:System.Windows.SplashScreen" /> com recurso especificado.</summary>
      <param name="resourceName" vsli:raw="The name of the embedded resource.">O nome do recurso inserido.</param>
    </member>
    <member name="M:System.Windows.SplashScreen.Close(System.TimeSpan)">
      <summary vsli:raw="Closes the splash screen.">Fecha a tela inicial.</summary>
      <param name="fadeoutDuration" vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; that specifies how long it will take for the splash screen to fade after the close operation has been initiated.">Uma <see cref="T:System.TimeSpan" /> que especifica quanto tempo levará para a tela inicial esmaecer depois que a operação fechar foi iniciada.</param>
    </member>
    <member name="M:System.Windows.SplashScreen.Show(System.Boolean)">
      <summary vsli:raw="Displays the splash screen.">Exibe a tela inicial.</summary>
      <param name="autoClose" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to automatically close the splash screen; &lt;see langword=&quot;false&quot; /&gt; to close the splash screen manually.">
        <see langword="true" /> para fechar automaticamente a tela inicial; <see langword="false" /> para fechar a tela inicial manualmente.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="The resource specified in the constructor could not be found.">Não foi possível encontrar o recurso especificado no construtor.</exception>
    </member>
    <member name="M:System.Windows.SplashScreen.Show(System.Boolean,System.Boolean)">
      <summary vsli:raw="Displays the splash screen.">Exibe a tela inicial.</summary>
      <param name="autoClose" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to automatically close the splash screen; &lt;see langword=&quot;false&quot; /&gt; to close the splash screen manually.">
        <see langword="true" /> para fechar automaticamente a tela inicial; <see langword="false" /> para fechar a tela inicial manualmente.</param>
      <param name="topMost" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the splash screen window should use the WS_EX_TOPMOST style; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a janela da tela inicial precisar usar o estilo WS_EX_TOPMOST; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="T:System.Windows.Threading.Dispatcher">
      <summary vsli:raw="Provides services for managing the queue of work items for a thread.">Fornece serviços para gerenciar a fila de itens de trabalho de um thread.</summary>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Delegate,System.Object[])">
      <summary vsli:raw="Executes the specified delegate asynchronously with the specified arguments on the thread that the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; was created on.">Executa o delegado especificado de maneira assíncrona com os argumentos especificados no thread em que o <see cref="T:System.Windows.Threading.Dispatcher" /> foi criado.</summary>
      <param name="method" vsli:raw="The delegate to a method that takes parameters specified in &lt;paramref name=&quot;args&quot; /&gt;, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">O delegado para um método que usa os parâmetros especificados em <paramref name="args" />, que é enviado por push fila de eventos do <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the given method. Can be &lt;see langword=&quot;null&quot; /&gt;.">Uma matriz de objetos a serem passados como argumentos para o método em questão. Pode ser <see langword="null" />.</param>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.BeginInvoke&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">Um objeto, retornado imediatamente após <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> ser chamado, que pode ser usado para interagir com o delegado enquanto ele aguarda a execução na fila de eventos.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Delegate,System.Windows.Threading.DispatcherPriority,System.Object[])">
      <summary vsli:raw="Executes the specified delegate asynchronously with the specified arguments, at the specified priority, on the thread that the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; was created on.">Executa o delegado especificado assincronamente com os argumentos especificados, na prioridade especificada, no thread no qual o <see cref="T:System.Windows.Threading.Dispatcher" /> foi criado.</summary>
      <param name="method" vsli:raw="The delegate to a method that takes parameters specified in &lt;paramref name=&quot;args&quot; /&gt;, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">O delegado para um método que usa os parâmetros especificados em <paramref name="args" />, que é enviado por push fila de eventos do <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">A prioridade em que o método especificado é invocado, com relação às outras operações pendentes na fila de eventos do <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the given method. Can be &lt;see langword=&quot;null&quot; /&gt;.">Uma matriz de objetos a serem passados como argumentos para o método em questão. Pode ser <see langword="null" />.</param>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.BeginInvoke&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">Um objeto, retornado imediatamente após <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> ser chamado, que pode ser usado para interagir com o delegado enquanto ele aguarda a execução na fila de eventos.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate)">
      <summary vsli:raw="Executes the specified delegate asynchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Executa o delegado especificado de forma assíncrona na prioridade especificada no thread ao qual o <see cref="T:System.Windows.Threading.Dispatcher" /> está associado.</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">A prioridade em que o método especificado é invocado, com relação às outras operações pendentes na fila de eventos do <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="method" vsli:raw="The delegate to a method that takes no arguments, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">O delegado para um método que não usa argumentos, que é enviado por push para a fila de eventos do <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.BeginInvoke&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">Um objeto, retornado imediatamente após <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> ser chamado, que pode ser usado para interagir com o delegado enquanto ele aguarda a execução na fila de eventos.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Windows.Threading.DispatcherPriority&quot; /&gt;.">
        <paramref name="priority" /> não é um <see cref="T:System.Windows.Threading.DispatcherPriority" /> válido.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object)">
      <summary vsli:raw="Executes the specified delegate asynchronously at the specified priority and with the specified argument on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Executa o delegado especificado de forma assíncrona na prioridade especificada e com o argumento especificado no thread ao qual o <see cref="T:System.Windows.Threading.Dispatcher" /> está associado.</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">A prioridade em que o método especificado é invocado, com relação às outras operações pendentes na fila de eventos do <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="method" vsli:raw="A delegate to a method that takes one argument, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Um delegado para um método que usa um argumento, que é enviado por push para a fila de eventos do <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="arg" vsli:raw="The object to pass as an argument to the specified method.">O objeto a ser passado como um argumento para o método especificado.</param>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.BeginInvoke&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">Um objeto, retornado imediatamente após <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> ser chamado, que pode ser usado para interagir com o delegado enquanto ele aguarda a execução na fila de eventos.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Windows.Threading.DispatcherPriority&quot; /&gt;.">
        <paramref name="priority" /> não é um <see cref="T:System.Windows.Threading.DispatcherPriority" /> válido.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object,System.Object[])">
      <summary vsli:raw="Executes the specified delegate asynchronously at the specified priority and with the specified array of arguments on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Executa o delegado especificado de forma assíncrona na prioridade especificada e com a matriz de argumentos definida no thread ao qual o <see cref="T:System.Windows.Threading.Dispatcher" /> está associado.</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">A prioridade em que o método especificado é invocado, com relação às outras operações pendentes na fila de eventos do <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="method" vsli:raw="A delegate to a method that takes multiple arguments, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Um delegado de um método que usa vários argumentos, que é enviado por push para a fila de eventos de <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="arg" vsli:raw="The object to pass as an argument to the specified method.">O objeto a ser passado como um argumento para o método especificado.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the specified method.">Uma matriz de objetos a serem passados como argumentos para o método especificado.</param>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.BeginInvoke&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; queue.">Um objeto, é retornado imediatamente após <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> ser chamado, que pode ser usado para interagir com o delegado enquanto ele aguarda execução pendente na fila <see cref="T:System.Windows.Threading.Dispatcher" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;see cref=&quot;T:System.Windows.Threading.DispatcherPriority&quot; /&gt; is not a valid priority.">
        <see cref="T:System.Windows.Threading.DispatcherPriority" /> não é uma prioridade válida.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvokeShutdown(System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Initiates shutdown of the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; asynchronously.">Inicia o desligamento do <see cref="T:System.Windows.Threading.Dispatcher" /> de forma assíncrona.</summary>
      <param name="priority" vsli:raw="The priority at which to begin shutting down the dispatcher.">A prioridade no qual começar a desligar o dispatcher.</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.CheckAccess">
      <summary vsli:raw="Determines whether the calling thread is the thread associated with this &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Determina se o thread de chamada é o thread associado a esse <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the calling thread is the thread associated with this &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o thread de chamada é o thread associado a esse <see cref="T:System.Windows.Threading.Dispatcher" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.CurrentDispatcher">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; for the thread currently executing and creates a new &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; if one is not already associated with the thread.">Obtém o <see cref="T:System.Windows.Threading.Dispatcher" /> para o thread em execução no momento e cria um novo <see cref="T:System.Windows.Threading.Dispatcher" /> se um não estiver associado ao thread.</summary>
      <returns vsli:raw="The dispatcher associated with the current thread.">O dispatcher associado ao thread atual.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.DisableProcessing">
      <summary vsli:raw="Disables processing of the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; queue.">Desabilita o processamento da fila de <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <returns vsli:raw="A structure used to re-enable dispatcher processing.">Uma estrutura usada para habilitar novamente o processamento do dispatcher.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.ExitAllFrames">
      <summary vsli:raw="Requests that all frames exit, including nested frames.">Solicita que todos os quadros saiam, incluindo quadros aninhados.</summary>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.FromThread(System.Threading.Thread)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; for the specified thread.">Obtém o <see cref="T:System.Windows.Threading.Dispatcher" /> para o thread especificado.</summary>
      <param name="thread" vsli:raw="The thread to obtain the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; from.">O thread do qual obter o <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <returns vsli:raw="The dispatcher for &lt;paramref name=&quot;thread&quot; /&gt;.">O dispatcher do <paramref name="thread" />.</returns>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.HasShutdownFinished">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; has finished shutting down.">Determina se o <see cref="T:System.Windows.Threading.Dispatcher" /> terminou de desligar.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the dispatcher has finished shutting down; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Se o Dispatcher concluiu o desligamento; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.HasShutdownStarted">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is shutting down.">Determina se o <see cref="T:System.Windows.Threading.Dispatcher" /> está desligando.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; has started shutting down; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Se o <see cref="T:System.Windows.Threading.Dispatcher" /> iniciou o desligamento; caso <see langword="false" />contrário,.</returns>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.Hooks">
      <summary vsli:raw="Gets the collection of hooks that provide additional event information about the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Obtém a coleção de ganchos que fornecem informações adicionais do evento sobre o <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <returns vsli:raw="The hooks associated with this &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Os ganchos associados a esse <see cref="T:System.Windows.Threading.Dispatcher" />.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Action)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Action&quot; /&gt; synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Executa o <see cref="T:System.Action" /> especificado de forma síncrona no thread ao qual o <see cref="T:System.Windows.Threading.Dispatcher" /> está associado.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Um delegado a ser invocado pelo dispatcher.</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Action,System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Action&quot; /&gt; synchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Executa a <see cref="T:System.Action" /> especificada de forma síncrona na prioridade especificada no thread ao qual o <see cref="T:System.Windows.Threading.Dispatcher" /> está associado.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Um delegado a ser invocado pelo dispatcher.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">A prioridade que determina em qual ordem o retorno de chamada especificado é invocado em relação a outras operações pendentes no <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Action&quot; /&gt; synchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Executa a <see cref="T:System.Action" /> especificada de forma síncrona na prioridade especificada no thread ao qual o <see cref="T:System.Windows.Threading.Dispatcher" /> está associado.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Um delegado a ser invocado pelo dispatcher.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">A prioridade que determina em qual ordem o retorno de chamada especificado é invocado em relação a outras operações pendentes no <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="cancellationToken" vsli:raw="An object that indicates whether to cancel the action.">Um objeto que indica se a ação deve ser cancelada.</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken,System.TimeSpan)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Action&quot; /&gt; synchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Executa a <see cref="T:System.Action" /> especificada de forma síncrona na prioridade especificada no thread ao qual o <see cref="T:System.Windows.Threading.Dispatcher" /> está associado.</summary>
      <param name="callback" vsli:raw="An Action delegate to invoke through the dispatcher.">Um delegado a ser invocado pelo dispatcher.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">A prioridade que determina em qual ordem o retorno de chamada especificado é invocado em relação a outras operações pendentes no <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="cancellationToken" vsli:raw="An object that indicates whether to cancel the action.">Um objeto que indica se a ação deve ser cancelada.</param>
      <param name="timeout" vsli:raw="The maximum amount of time to wait for the operation to start. Once the operation has started, it will complete before this method returns. To specify an infinite wait, use a value of -1. In a same-thread call, any other negative value is converted to -1, resulting in an infinite wait. In a cross-thread call, any other negative value throws an &lt;see cref=&quot;T:System.ArgumentOutOfRangeException&quot; /&gt;.">A quantidade mínima de tempo de espera para a operação ser iniciada.</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.Object[])">
      <summary vsli:raw="Executes the specified delegate with the specified arguments synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Executa o delegado especificado com os argumentos de forma síncrona no thread ao qual o <see cref="T:System.Windows.Threading.Dispatcher" /> está associado.</summary>
      <param name="method" vsli:raw="A delegate to a method that takes parameters specified in &lt;paramref name=&quot;args&quot; /&gt;, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Um delegado para um método que usa os parâmetros especificados em <paramref name="args" />, que é enviado por push para a fila de eventos de <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the given method. Can be &lt;see langword=&quot;null&quot; /&gt;.">Uma matriz de objetos a serem passados como argumentos para o método em questão. Pode ser <see langword="null" />.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">O valor retornado do delegado que está sendo invocado ou <see langword="null" />, se o delegado não tiver um valor retornado.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.TimeSpan,System.Object[])">
      <summary vsli:raw="Executes the specified delegate within the designated time span at the specified priority with the specified arguments synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Executa o delegado especificado no período designado na prioridade especificada com os argumentos especificados de forma síncrona no thread ao qual o <see cref="T:System.Windows.Threading.Dispatcher" /> está associado.</summary>
      <param name="method" vsli:raw="A delegate to a method that takes parameters specified in &lt;paramref name=&quot;args&quot; /&gt;, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Um delegado para um método que usa os parâmetros especificados em <paramref name="args" />, que é enviado por push para a fila de eventos de <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="timeout" vsli:raw="The maximum amount of time to wait for the operation to start. However, once the operation starts, it will complete before this method returns. To specify an infinite wait, use a value of -1. In a same-thread call, any other negative value is converted to -1, resulting in an infinite wait. In a cross-thread call, any other negative value throws an &lt;see cref=&quot;T:System.ArgumentOutOfRangeException&quot; /&gt;.">O tempo máximo de espera para a operação ser concluída.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the given method. Can be &lt;see langword=&quot;null&quot; /&gt; if no arguments are needed.">Uma matriz de objetos a serem passados como argumentos para o método em questão. Pode ser <see langword="null" />.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">O valor retornado do delegado que está sendo invocado ou <see langword="null" />, se o delegado não tiver um valor retornado.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.Object[])">
      <summary vsli:raw="Executes the specified delegate within the designated time span at the specified priority with the specified arguments synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Executa o delegado especificado no período designado na prioridade especificada com os argumentos especificados de forma síncrona no thread ao qual o <see cref="T:System.Windows.Threading.Dispatcher" /> está associado.</summary>
      <param name="method" vsli:raw="A delegate to a method that takes parameters specified in &lt;paramref name=&quot;args&quot; /&gt;, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Um delegado para um método que usa os parâmetros especificados em <paramref name="args" />, que é enviado por push para a fila de eventos de <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="timeout" vsli:raw="The maximum amount of time to wait for the operation to start. Once the operation has started, it will complete before this method returns. To specify an infinite wait, use a value of -1. In a same-thread call, any other negative value is converted to -1, resulting in an infinite wait. In a cross-thread call, any other negative value throws an &lt;see cref=&quot;T:System.ArgumentOutOfRangeException&quot; /&gt;.">O tempo máximo de espera para a operação ser concluída.</param>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">A prioridade em que o método especificado é invocado, com relação às outras operações pendentes na fila de eventos do <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the given method. Can be &lt;see langword=&quot;null&quot; /&gt;.">Uma matriz de objetos a serem passados como argumentos para o método em questão. Pode ser <see langword="null" />.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">O valor retornado do delegado que está sendo invocado ou <see langword="null" />, se o delegado não tiver um valor retornado.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.Windows.Threading.DispatcherPriority,System.Object[])">
      <summary vsli:raw="Executes the specified delegate at the specified priority with the specified arguments synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Executa o delegado especificado na prioridade especificada com os argumentos especificados de forma síncrona no thread ao qual o <see cref="T:System.Windows.Threading.Dispatcher" /> está associado.</summary>
      <param name="method" vsli:raw="A delegate to a method that takes parameters specified in &lt;paramref name=&quot;args&quot; /&gt;, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Um delegado para um método que usa os parâmetros especificados em <paramref name="args" />, que é enviado por push para a fila de eventos de <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="priority" vsli:raw="The priority with which the specified method is invoked, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">A prioridade em que o método especificado é invocado, com relação às outras operações pendentes na fila de eventos do <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the given method. Can be &lt;see langword=&quot;null&quot; /&gt;.">Uma matriz de objetos a serem passados como argumentos para o método em questão. Pode ser <see langword="null" />.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">O valor retornado do delegado que está sendo invocado ou <see langword="null" />, se o delegado não tiver um valor retornado.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate)">
      <summary vsli:raw="Executes the specified delegate synchronously at the specified priority on the thread that the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Executa o delegado especificado de forma síncrona na prioridade especificada no thread ao qual o <see cref="T:System.Windows.Threading.Dispatcher" /> está associado.</summary>
      <param name="priority" vsli:raw="The priority with which the specified method is invoked, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">A prioridade em que o método especificado é invocado, com relação às outras operações pendentes na fila de eventos do <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="method" vsli:raw="A delegate to a method that takes no arguments, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Um delegado para um método que não usa argumentos, que é enviado por push para a fila de eventos de <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">O valor retornado do delegado que está sendo invocado ou <see langword="null" />, se o delegado não tiver um valor retornado.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is equal to &lt;see cref=&quot;F:System.Windows.Threading.DispatcherPriority.Inactive&quot; /&gt;.">
        <paramref name="priority" /> é igual a <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid priority.">
        <paramref name="priority" /> não é uma prioridade válida.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object)">
      <summary vsli:raw="Executes the specified delegate at the specified priority with the specified argument synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Executa o delegado especificado na prioridade especificada com o argumentos especificado de forma síncrona no thread ao qual o <see cref="T:System.Windows.Threading.Dispatcher" /> está associado.</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">A prioridade em que o método especificado é invocado, com relação às outras operações pendentes na fila de eventos do <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="method" vsli:raw="A delegate to a method that takes one argument, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Um delegado para um método que usa um argumento, que é enviado por push para a fila de eventos do <see cref="T:System.Windows.Threading.Dispatcher" /> .</param>
      <param name="arg" vsli:raw="An object to pass as an argument to the given method.">Um objeto a ser passado como um argumento para o método fornecido.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">O valor retornado do delegado que está sendo invocado ou <see langword="null" />, se o delegado não tiver um valor retornado.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is equal to &lt;see cref=&quot;F:System.Windows.Threading.DispatcherPriority.Inactive&quot; /&gt;.">
        <paramref name="priority" /> é igual a <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid priority.">
        <paramref name="priority" /> não é uma prioridade válida.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object,System.Object[])">
      <summary vsli:raw="Executes the specified delegate at the specified priority with the specified arguments synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Executa o delegado especificado na prioridade especificada com os argumentos especificados de forma síncrona no thread ao qual o <see cref="T:System.Windows.Threading.Dispatcher" /> está associado.</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">A prioridade em que o método especificado é invocado, com relação às outras operações pendentes na fila de eventos do <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="method" vsli:raw="A delegate to a method that takes multiple arguments, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Um delegado de um método que usa vários argumentos, que é enviado por push para a fila de eventos de <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="arg" vsli:raw="An object to pass as an argument to the given method.">Um objeto a ser passado como um argumento para o método fornecido.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the given method.">Uma matriz de objetos a serem passados como argumentos para o método em questão.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">O valor retornado do delegado que está sendo invocado ou <see langword="null" />, se o delegado não tiver um valor retornado.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is equal to &lt;see cref=&quot;F:System.Windows.Threading.DispatcherPriority.Inactive&quot; /&gt;.">
        <paramref name="priority" /> é igual a <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid priority.">
        <paramref name="priority" /> não é uma prioridade válida.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate)">
      <summary vsli:raw="Executes the specified delegate synchronously at the specified priority and with the specified time-out value on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; was created.">Executa o delegado especificado, de forma síncrona, com a prioridade especificada e com o valor de tempo limite especificado no thread em que <see cref="T:System.Windows.Threading.Dispatcher" /> foi criado.</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">A prioridade em que o método especificado é invocado, com relação às outras operações pendentes na fila de eventos do <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="timeout" vsli:raw="The maximum amount of time to wait for the operation to start. Once the operation has started, it will complete before this method returns. To specify an infinite wait, use a value of -1. In a same-thread call, any other negative value is converted to -1, resulting in an infinite wait. In a cross-thread call, any other negative value throws an &lt;see cref=&quot;T:System.ArgumentOutOfRangeException&quot; /&gt;.">O tempo máximo para esperar a conclusão da operação.</param>
      <param name="method" vsli:raw="The delegate to a method that takes no arguments, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">O delegado para um método que não usa argumentos, que é enviado por push para a fila de eventos do <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">O valor retornado do delegado que está sendo invocado ou <see langword="null" />, se o delegado não tiver um valor retornado.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate,System.Object)">
      <summary vsli:raw="Executes the specified delegate at the specified priority with the specified argument synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Executa o delegado especificado na prioridade especificada com o argumentos especificado de forma síncrona no thread ao qual o <see cref="T:System.Windows.Threading.Dispatcher" /> está associado.</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">A prioridade em que o método especificado é invocado, com relação às outras operações pendentes na fila de eventos do <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="timeout" vsli:raw="The maximum amount of time to wait for the operation to start. Once the operation has started, it will complete before this method returns. To specify an infinite wait, use a value of -1. In a same-thread call, any other negative value is converted to -1, resulting in an infinite wait. In a cross-thread call, any other negative value throws an &lt;see cref=&quot;T:System.ArgumentOutOfRangeException&quot; /&gt;.">O tempo máximo para esperar a conclusão da operação.</param>
      <param name="method" vsli:raw="A delegate to a method that takes multiple arguments, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Um delegado de um método que usa vários argumentos, que é enviado por push para a fila de eventos de <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="arg" vsli:raw="An object to pass as an argument to the given method. This can be &lt;see langword=&quot;null&quot; /&gt; if no arguments are needed.">Um objeto a ser passado como um argumento para o método fornecido. Pode ser <see langword="null" />, caso nenhum argumento seja necessário.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">O valor retornado do delegado que está sendo invocado ou <see langword="null" />, se o delegado não tiver um valor retornado.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is equal to &lt;see cref=&quot;F:System.Windows.Threading.DispatcherPriority.Inactive&quot; /&gt;.">
        <paramref name="priority" /> é igual a <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid priority.">
        <paramref name="priority" /> não é uma prioridade válida.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate,System.Object,System.Object[])">
      <summary vsli:raw="Executes the specified delegate at the specified priority with the specified arguments synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Executa o delegado especificado na prioridade especificada com os argumentos especificados de forma síncrona no thread ao qual o <see cref="T:System.Windows.Threading.Dispatcher" /> está associado.</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">A prioridade em que o método especificado é invocado, com relação às outras operações pendentes na fila de eventos do <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="timeout" vsli:raw="The maximum amount of time to wait for the operation to start. Once the operation has started, it will complete before this method returns. To specify an infinite wait, use a value of -1. In a same-thread call, any other negative value is converted to -1, resulting in an infinite wait. In a cross-thread call, any other negative value throws an &lt;see cref=&quot;T:System.ArgumentOutOfRangeException&quot; /&gt;.">O tempo máximo para esperar a conclusão da operação.</param>
      <param name="method" vsli:raw="A delegate to a method that takes multiple arguments, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Um delegado de um método que usa vários argumentos, que é enviado por push para a fila de eventos de <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="arg" vsli:raw="An object to pass as an argument to the specified method.">Um objeto a ser passado como um argumento para o método especificado.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the specified method.">Uma matriz de objetos a serem passados como argumentos para o método especificado.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">O valor retornado do delegado que está sendo invocado ou <see langword="null" />, se o delegado não tiver um valor retornado.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is equal to &lt;see cref=&quot;F:System.Windows.Threading.DispatcherPriority.Inactive&quot; /&gt;.">
        <paramref name="priority" /> é igual a <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Windows.Threading.DispatcherPriority&quot; /&gt;.">
        <paramref name="priority" /> não é um <see cref="T:System.Windows.Threading.DispatcherPriority" /> válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0})">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Func`1&quot; /&gt; synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Executa o <see cref="T:System.Func`1" /> especificado de forma síncrona no thread ao qual o <see cref="T:System.Windows.Threading.Dispatcher" /> está associado.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Um delegado a ser invocado pelo dispatcher.</param>
      <typeparam name="TResult" vsli:raw="The return value type of the specified delegate.">O tipo de valor retornado do delegado especificado.</typeparam>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Func`1&quot; /&gt; synchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Executa a <see cref="T:System.Func`1" /> especificada de forma síncrona na prioridade especificada no thread ao qual o <see cref="T:System.Windows.Threading.Dispatcher" /> está associado.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Um delegado a ser invocado pelo dispatcher.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">A prioridade que determina em qual ordem o retorno de chamada especificado é invocado em relação a outras operações pendentes no <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <typeparam name="TResult" vsli:raw="The return value type of the specified delegate.">O tipo de valor retornado do delegado especificado.</typeparam>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Func`1&quot; /&gt; synchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Executa a <see cref="T:System.Func`1" /> especificada de forma síncrona na prioridade especificada no thread ao qual o <see cref="T:System.Windows.Threading.Dispatcher" /> está associado.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Um delegado a ser invocado pelo dispatcher.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">A prioridade que determina em qual ordem o retorno de chamada especificado é invocado em relação a outras operações pendentes no <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="cancellationToken" vsli:raw="An object that indicates whether to cancel the operation.">Um objeto que indica se a operação deve ser cancelada.</param>
      <typeparam name="TResult" vsli:raw="The return value type of the specified delegate.">O tipo de valor retornado do delegado especificado.</typeparam>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken,System.TimeSpan)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Func`1&quot; /&gt; synchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Executa a <see cref="T:System.Func`1" /> especificada de forma síncrona na prioridade especificada no thread ao qual o <see cref="T:System.Windows.Threading.Dispatcher" /> está associado.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Um delegado a ser invocado pelo dispatcher.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">A prioridade que determina em qual ordem o retorno de chamada especificado é invocado em relação a outras operações pendentes no <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="cancellationToken" vsli:raw="An object that indicates whether to cancel the operation.">Um objeto que indica se a operação deve ser cancelada.</param>
      <param name="timeout" vsli:raw="The maximum amount of time to wait for the operation to start. Once the operation has started, it will complete before this method returns. To specify an infinite wait, use a value of -1. In a same-thread call, any other negative value is converted to -1, resulting in an infinite wait. In a cross-thread call, any other negative value throws an &lt;see cref=&quot;T:System.ArgumentOutOfRangeException&quot; /&gt;.">A quantidade mínima de tempo de espera para a operação ser iniciada.</param>
      <typeparam name="TResult" vsli:raw="The return value type of the specified delegate.">O tipo de valor retornado do delegado especificado.</typeparam>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Action&quot; /&gt; asynchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Executa o <see cref="T:System.Action" /> especificado de forma assíncrona no thread ao qual o <see cref="T:System.Windows.Threading.Dispatcher" /> está associado.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Um delegado a ser invocado pelo dispatcher.</param>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action)&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">Um objeto, retornado imediatamente após <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action)" /> ser chamado, que pode ser usado para interagir com o delegado enquanto ele aguarda a execução na fila de eventos.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Action&quot; /&gt; asynchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Executa o <see cref="T:System.Action" /> especificado de forma assíncrona na prioridade especificada no thread ao qual <see cref="T:System.Windows.Threading.Dispatcher" /> está associado.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Um delegado a ser invocado pelo dispatcher.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">A prioridade que determina em qual ordem o retorno de chamada especificado é invocado em relação a outras operações pendentes no <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority)&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">Um objeto, retornado imediatamente após <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority)" /> ser chamado, que pode ser usado para interagir com o delegado enquanto ele aguarda a execução na fila de eventos.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Action&quot; /&gt; asynchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Executa o <see cref="T:System.Action" /> especificado de forma assíncrona na prioridade especificada no thread ao qual <see cref="T:System.Windows.Threading.Dispatcher" /> está associado.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Um delegado a ser invocado pelo dispatcher.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">A prioridade que determina em qual ordem o retorno de chamada especificado é invocado em relação a outras operações pendentes no <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="cancellationToken" vsli:raw="An object that indicates whether to cancel the action.">Um objeto que indica se a ação deve ser cancelada.</param>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">Um objeto, retornado imediatamente após <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" /> ser chamado, que pode ser usado para interagir com o delegado enquanto ele aguarda a execução na fila de eventos.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0})">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Func`1&quot; /&gt; asynchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Executa o <see cref="T:System.Func`1" /> especificado de forma assíncrona no thread ao qual o <see cref="T:System.Windows.Threading.Dispatcher" /> está associado.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Um delegado a ser invocado pelo dispatcher.</param>
      <typeparam name="TResult" vsli:raw="The return value type of the specified delegate.">O tipo de valor retornado do delegado especificado.</typeparam>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0})&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">Um objeto, retornado imediatamente após <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0})" /> ser chamado, que pode ser usado para interagir com o delegado enquanto ele aguarda a execução na fila de eventos.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Func`1&quot; /&gt; asynchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Executa o <see cref="T:System.Func`1" /> especificado de forma assíncrona na prioridade especificada no thread ao qual <see cref="T:System.Windows.Threading.Dispatcher" /> está associado.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Um delegado a ser invocado pelo dispatcher.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">A prioridade que determina em qual ordem o retorno de chamada especificado é invocado em relação a outras operações pendentes no <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <typeparam name="TResult" vsli:raw="The return value type of the specified delegate.">O tipo de valor retornado do delegado especificado.</typeparam>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">Um objeto, retornado imediatamente após <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)" /> ser chamado, que pode ser usado para interagir com o delegado enquanto ele aguarda a execução na fila de eventos.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Func`1&quot; /&gt; asynchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Executa o <see cref="T:System.Func`1" /> especificado de forma assíncrona na prioridade especificada no thread ao qual <see cref="T:System.Windows.Threading.Dispatcher" /> está associado.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Um delegado a ser invocado pelo dispatcher.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">A prioridade que determina em qual ordem o retorno de chamada especificado é invocado em relação a outras operações pendentes no <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="cancellationToken" vsli:raw="An object that indicates whether to cancel the operation.">Um objeto que indica se a operação deve ser cancelada.</param>
      <typeparam name="TResult" vsli:raw="The return value type of the specified delegate.">O tipo de valor retornado do delegado especificado.</typeparam>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">Um objeto, retornado imediatamente após <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" /> ser chamado, que pode ser usado para interagir com o delegado enquanto ele aguarda a execução na fila de eventos.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeShutdown">
      <summary vsli:raw="Initiates the shutdown process of the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; synchronously.">Inicia o processo de desligamento do <see cref="T:System.Windows.Threading.Dispatcher" /> sincronicamente.</summary>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.PushFrame(System.Windows.Threading.DispatcherFrame)">
      <summary vsli:raw="Enters an execute loop.">Insere um loop de execução.</summary>
      <param name="frame" vsli:raw="The frame for the dispatcher to process.">O quadro para o dispatcher processar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;frame&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="frame" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Threading.Dispatcher.HasShutdownFinished&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;frame&quot; /&gt; is running on a different &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; Dispatcher processing has been disabled.">
        <see cref="P:System.Windows.Threading.Dispatcher.HasShutdownFinished" /> é <see langword="true" />  

ou - 
<paramref name="frame" /> está em execução em um <see cref="T:System.Windows.Threading.Dispatcher" /> diferente.  

ou - 
Processamento do Dispatcher foi desabilitado.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Run">
      <summary vsli:raw="Pushes the main execution frame on the event queue of the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Envia o quadro principal de execução na fila de eventos do <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="E:System.Windows.Threading.Dispatcher.ShutdownFinished">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; finishes shutting down.">Ocorre quando o <see cref="T:System.Windows.Threading.Dispatcher" /> conclui o desligamento.</summary>
    </member>
    <member name="E:System.Windows.Threading.Dispatcher.ShutdownStarted">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; begins to shut down.">Ocorre quando o <see cref="T:System.Windows.Threading.Dispatcher" /> inicia o desligamento.</summary>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.Thread">
      <summary vsli:raw="Gets the thread this &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Obtém o thread ao qual este <see cref="T:System.Windows.Threading.Dispatcher" /> está associado.</summary>
      <returns vsli:raw="The thread.">O thread.</returns>
    </member>
    <member name="E:System.Windows.Threading.Dispatcher.UnhandledException">
      <summary vsli:raw="Occurs when a thread exception is thrown and uncaught during execution of a delegate by way of &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.Invoke&quot; /&gt; or &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.BeginInvoke&quot; /&gt;.">Ocorre quando uma exceção de thread é lançada e não capturada durante a execução de um delegado por meio de <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> ou <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" />.</summary>
    </member>
    <member name="E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter">
      <summary vsli:raw="Occurs when a thread exception is thrown and uncaught during execution of a delegate by way of &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.Invoke&quot; /&gt; or &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.BeginInvoke&quot; /&gt; when in the filter stage.">Ocorre quando uma exceção de thread é lançada e não capturada durante a execução de um delegado por meio de <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> ou <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> quando no estágio de filtragem.</summary>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.ValidatePriority(System.Windows.Threading.DispatcherPriority,System.String)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Threading.DispatcherPriority&quot; /&gt; is a valid priority.">Determina se o <see cref="T:System.Windows.Threading.DispatcherPriority" /> especificado é uma prioridade válida.</summary>
      <param name="priority" vsli:raw="The priority to check.">A prioridade a ser verificada.</param>
      <param name="parameterName" vsli:raw="A string that will be returned by the exception that occurs if the priority is invalid.">Uma cadeia de caracteres que será retornada pela exceção que ocorre se a prioridade é inválida.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Windows.Threading.DispatcherPriority&quot; /&gt;.">
        <paramref name="priority" /> não é um <see cref="T:System.Windows.Threading.DispatcherPriority" /> válido.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.VerifyAccess">
      <summary vsli:raw="Determines whether the calling thread has access to this &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Determina se o thread de chamada tem acesso a este <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The calling thread does not have access to this &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">O thread de chamada não tem acesso a este <see cref="T:System.Windows.Threading.Dispatcher" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Yield">
      <summary vsli:raw="Creates an awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.">Cria um objeto aguardável que transfere o controle de volta para o dispatcher atual e fornece uma oportunidade para o dispatcher processar outros eventos de forma assíncrona.</summary>
      <returns vsli:raw="An awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.">Um objeto aguardável que transfere o controle de volta para o dispatcher atual e fornece uma oportunidade para o dispatcher processar outros eventos de forma assíncrona.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Yield(System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Creates an awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.  The work that occurs when control returns to the code awaiting the result of this method is scheduled with the specified priority.">Cria um objeto aguardável que transfere o controle de volta para o dispatcher atual e fornece uma oportunidade para o dispatcher processar outros eventos de forma assíncrona.  O trabalho que ocorre quando o controle retorna para o código aguardando o resultado deste método é agendado com a prioridade especificada.</summary>
      <param name="priority" vsli:raw="The priority at which to schedule the continuation.">A prioridade na qual agendar a continuação.</param>
      <returns vsli:raw="An awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.">Um objeto aguardável que transfere o controle de volta para o dispatcher atual e fornece uma oportunidade para o dispatcher processar outros eventos de forma assíncrona.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherEventArgs">
      <summary vsli:raw="Provides event data for &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; related events.">Fornece dados de eventos para eventos relacionados <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherEventArgs.Dispatcher">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; associated with this event.">O <see cref="T:System.Windows.Threading.Dispatcher" /> associado a este evento.</summary>
      <returns vsli:raw="The dispatcher.">O dispatcher.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherFrame">
      <summary vsli:raw="Represents an execution loop in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Representa um loop de execução no <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherFrame.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherFrame&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Threading.DispatcherFrame" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherFrame.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherFrame&quot; /&gt; class, by using the specified exit request flag.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Threading.DispatcherFrame" /> usando o sinalizador de solicitação de saída especificado.</summary>
      <param name="exitWhenRequested" vsli:raw="Indicates whether this frame will exit when all frames are requested to exit.">Indica se este quadro sairá quando for solicitado que todos os quadros saiam.</param>
    </member>
    <member name="P:System.Windows.Threading.DispatcherFrame.Continue">
      <summary vsli:raw="Gets or sets a value that indicates whether this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherFrame&quot; /&gt; should continue.">Obtém ou define um valor que indica se este <see cref="T:System.Windows.Threading.DispatcherFrame" /> deve continuar.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the frame should continue; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />Se o quadro deve continuar; caso contrário <see langword="false" />,.  O valor padrão é <see langword="true" />.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherHookEventArgs">
      <summary vsli:raw="Provides event data for &lt;see cref=&quot;T:System.Windows.Threading.DispatcherHooks&quot; /&gt; events.">Fornece dados de eventos para eventos <see cref="T:System.Windows.Threading.DispatcherHooks" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherHookEventArgs.#ctor(System.Windows.Threading.DispatcherOperation)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherHookEventArgs&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Threading.DispatcherHookEventArgs" />.</summary>
      <param name="operation" vsli:raw="The operation associated with the event.">A operação associada ao evento.</param>
    </member>
    <member name="P:System.Windows.Threading.DispatcherHookEventArgs.Dispatcher">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; associated with this event.">Obtém o <see cref="T:System.Windows.Threading.Dispatcher" /> associado a este evento.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; associated with this event.">O <see cref="T:System.Windows.Threading.Dispatcher" /> associado a este evento.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherHookEventArgs.Operation">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherOperation&quot; /&gt; associated with this event.">Obtém o <see cref="T:System.Windows.Threading.DispatcherOperation" /> associado a este evento.</summary>
      <returns vsli:raw="The operation.">A operação.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherHookEventHandler">
      <summary vsli:raw="Represents the method that will handle &lt;see cref=&quot;T:System.Windows.Threading.DispatcherHooks&quot; /&gt; related events.">Representa o método que manipulará eventos relacionados <see cref="T:System.Windows.Threading.DispatcherHooks" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">A fonte do evento.</param>
      <param name="e" vsli:raw="The event data.">Os dados do evento.</param>
    </member>
    <member name="T:System.Windows.Threading.DispatcherHooks">
      <summary vsli:raw="Provides additional event information about &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; processing.">Fornece informações de evento adicionais sobre o processamento de <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.DispatcherInactive">
      <summary vsli:raw="Occurs when the dispatcher has no more operations to process.">Ocorre quando o dispatcher não tem mais operações para processar.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationAborted">
      <summary vsli:raw="Occurs when an operation is aborted.">Ocorre quando uma operação é anulada.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationCompleted">
      <summary vsli:raw="Occurs when an operation completes.">Ocorre quando uma operação é concluída.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationPosted">
      <summary vsli:raw="Occurs when an operation is posted to the dispatcher.">Ocorre quando uma operação é postada para o dispatcher.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationPriorityChanged">
      <summary vsli:raw="Occurs when the priority of an operation is changed.">Ocorre quando a prioridade de uma operação é alterada.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationStarted">
      <summary vsli:raw="Occurs when an operation is invoked.">Ocorre quando uma operação é invocada.</summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherObject">
      <summary vsli:raw="Represents an object that is associated with a &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Representa um objeto associado a um <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherObject.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherObject&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Threading.DispatcherObject" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherObject.CheckAccess">
      <summary vsli:raw="Determines whether the calling thread has access to this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherObject&quot; /&gt;.">Determina se o thread de chamada tem acesso a este <see cref="T:System.Windows.Threading.DispatcherObject" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the calling thread has access to this object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o thread de chamada tiver acesso a esse objeto; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherObject.Dispatcher">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherObject&quot; /&gt; is associated with.">Obtém o <see cref="T:System.Windows.Threading.Dispatcher" /> ao qual este <see cref="T:System.Windows.Threading.DispatcherObject" /> está associado.</summary>
      <returns vsli:raw="The dispatcher.">O dispatcher.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherObject.VerifyAccess">
      <summary vsli:raw="Enforces that the calling thread has access to this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherObject&quot; /&gt;.">Impõe que o thread de chamada tenha acesso a este <see cref="T:System.Windows.Threading.DispatcherObject" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="the calling thread does not have access to this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherObject&quot; /&gt;.">O thread de chamada não tem acesso a este <see cref="T:System.Windows.Threading.DispatcherObject" />.</exception>
    </member>
    <member name="T:System.Windows.Threading.DispatcherOperation">
      <summary vsli:raw="Represents an object that is used to interact with an operation that has been posted to the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; queue.">Representa um objeto que é usado para interagir com uma operação que foi postada na fila do <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.Abort">
      <summary vsli:raw="Aborts the operation.">Anula a operação.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the operation was aborted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a operação tiver sido anulada, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="E:System.Windows.Threading.DispatcherOperation.Aborted">
      <summary vsli:raw="Occurs when the operation is aborted.">Ocorre quando a operação é anulada.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherOperation.Completed">
      <summary vsli:raw="Occurs when the operation has completed.">Ocorre quando a operação foi concluída.</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Dispatcher">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; that the operation was posted to.">Obtém o <see cref="T:System.Windows.Threading.Dispatcher" /> que em que a operação foi postada.</summary>
      <returns vsli:raw="The dispatcher.">O dispatcher.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.GetAwaiter">
      <summary vsli:raw="Returns an object that is notified when the asynchronous operation is finished.">Retorna um objeto que é notificado quando a operação assíncrona é concluída.</summary>
      <returns vsli:raw="An object that is notified when the asynchronous operation is finished.">Um objeto que é notificado quando a operação assíncrona é concluída.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.InvokeDelegateCore">
      <summary vsli:raw="Begins the operation that is associated with this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherOperation&quot; /&gt;.">Inicia a operação que está associada a este <see cref="T:System.Windows.Threading.DispatcherOperation" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;null&quot; /&gt; in all cases.">
        <see langword="null" /> em todos os casos.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Priority">
      <summary vsli:raw="Gets or sets the priority of the operation in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; queue.">Obtém ou define a prioridade da operação na fila <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <returns vsli:raw="The priority of the delegate on the queue.">A prioridade do delegado na fila.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Result">
      <summary vsli:raw="Gets the result of the operation after it has completed.">Obtém o resultado da operação após sua conclusão.</summary>
      <returns vsli:raw="The result of the operation -or- &lt;see langword=&quot;null&quot; /&gt; if the operation has not completed.">O resultado da operação-ou- <see langword="null" /> se a operação não foi concluída.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Status">
      <summary vsli:raw="Gets the current status of the operation.">Obtém o status atual da operação.</summary>
      <returns vsli:raw="The status of the operation.">O status da operação.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Task">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; that represents the current operation.">Obtém um <see cref="T:System.Threading.Tasks.Task`1" /> que representa a operação atual.</summary>
      <returns vsli:raw="An object that represents the current operation.">Um objeto que representa a operação atual.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.Wait">
      <summary vsli:raw="Waits for the operation to complete.">Aguarda a conclusão da operação</summary>
      <returns vsli:raw="The status of the operation.">O status da operação.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Threading.DispatcherOperation.Status&quot; /&gt; is equal to &lt;see cref=&quot;F:System.Windows.Threading.DispatcherOperationStatus.Executing&quot; /&gt;.  This can occur when waiting for an operation that is already executing on the same thread.">
        <see cref="P:System.Windows.Threading.DispatcherOperation.Status" /> é igual a <see cref="F:System.Windows.Threading.DispatcherOperationStatus.Executing" />.  Isso pode ocorrer ao esperar uma operação que já está em execução no mesmo thread.</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.Wait(System.TimeSpan)">
      <summary vsli:raw="Waits for the operation to complete in the specified period of time.">Aguarda a operação ser concluída no período especificado.</summary>
      <param name="timeout" vsli:raw="The maximum period of time to wait.">O período máximo de tempo de espera.</param>
      <returns vsli:raw="The status of the operation.">O status da operação.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Threading.DispatcherOperation.Status&quot; /&gt; is equal to &lt;see cref=&quot;F:System.Windows.Threading.DispatcherOperationStatus.Executing&quot; /&gt;.  This can occur when waiting for an operation that is already executing on the same thread.">
        <see cref="P:System.Windows.Threading.DispatcherOperation.Status" /> é igual a <see cref="F:System.Windows.Threading.DispatcherOperationStatus.Executing" />.  Isso pode ocorrer ao esperar uma operação que já está em execução no mesmo thread.</exception>
    </member>
    <member name="T:System.Windows.Threading.DispatcherOperation`1">
      <summary vsli:raw="Represents an object that is used to interact with an operation that has been posted to the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; queue and contains a &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt;.">Representa um objeto que é usado para interagir com uma operação que foi postada na fila do <see cref="T:System.Windows.Threading.Dispatcher" /> e contém um <see cref="T:System.Threading.Tasks.Task`1" />.</summary>
      <typeparam name="TResult" vsli:raw="The type that is returned by the &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt;.">O tipo que é retornado pelo <see cref="T:System.Threading.Tasks.Task`1" />.</typeparam>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation`1.GetAwaiter">
      <summary vsli:raw="Returns an object that awaits an asynchronous operation that returns a result.">Retorna um objeto que aguarda uma operação assíncrona que retorna um resultado.</summary>
      <returns vsli:raw="An object that awaits an asynchronous operation that returns a result.">Um objeto que aguarda uma operação assíncrona que retorna um resultado.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation`1.InvokeDelegateCore">
      <summary vsli:raw="Begins the operation that is associated with this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherOperation&quot; /&gt;.">Inicia a operação que está associada a este <see cref="T:System.Windows.Threading.DispatcherOperation" />.</summary>
      <returns vsli:raw="The result of the operation.">O resultado da operação.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation`1.Result">
      <summary vsli:raw="Gets the result of the operation after it has completed.">Obtém o resultado da operação após sua conclusão.</summary>
      <returns vsli:raw="The result of the operation.">O resultado da operação.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation`1.Task">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; that represents the current operation.">Obtém um <see cref="T:System.Threading.Tasks.Task`1" /> que representa a operação atual.</summary>
      <returns vsli:raw="An object that represents the current operation.">Um objeto que representa a operação atual.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherOperationCallback">
      <summary vsli:raw="Represents a delegate to use for dispatcher operations.">Representa um delegado a ser usado para operações do dispatcher.</summary>
      <param name="arg" vsli:raw="An argument passed to the callback.">Um argumento passado para o retorno de chamada.</param>
      <returns vsli:raw="The object returned by the callback.">O objeto retornado pelo retorno de chamada.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherOperationStatus">
      <summary vsli:raw="Describes the possible values for the status of a &lt;see cref=&quot;T:System.Windows.Threading.DispatcherOperation&quot; /&gt;.">Descreve os possíveis valores para o status de um <see cref="T:System.Windows.Threading.DispatcherOperation" />.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherOperationStatus.Aborted">
      <summary vsli:raw="The operation has aborted.">A operação foi anulada.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherOperationStatus.Completed">
      <summary vsli:raw="The operation is completed.">A operação foi concluída.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherOperationStatus.Executing">
      <summary vsli:raw="The operation started executing, but has not completed.">A operação iniciou a execução, mas não foi concluída.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherOperationStatus.Pending">
      <summary vsli:raw="The operation is pending and is still in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; queue.">A operação está pendente e ainda está na fila <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherPriority">
      <summary vsli:raw="Describes the priorities at which operations can be invoked by way of the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Descreve as prioridades nas quais as operações podem ser invocadas por meio do <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.ApplicationIdle">
      <summary vsli:raw="The enumeration value is 2. Operations are processed when the application is idle.">O valor de enumeração é 2.  As operações serão processadas quando o aplicativo estiver ocioso.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Background">
      <summary vsli:raw="The enumeration value is 4. Operations are processed after all other non-idle operations are completed.">O valor de enumeração é 4.  As operações serão processadas após a conclusão de todas as outras operações não ociosas.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.ContextIdle">
      <summary vsli:raw="The enumeration value is 3. Operations are processed after background operations have completed.">O valor de enumeração é 3.  As operações serão processadas após a conclusão das operações em segundo plano.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.DataBind">
      <summary vsli:raw="The enumeration value is 8. Operations are processed at the same priority as data binding.">O valor de enumeração é 8.  As operações serão processadas com a mesma prioridade que a vinculação de dados.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Inactive">
      <summary vsli:raw="The enumeration value is 0. Operations are not processed.">O valor de enumeração é 0.  As operações não são processadas.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Input">
      <summary vsli:raw="The enumeration value is 5. Operations are processed at the same priority as input.">O valor de enumeração é 5.  As operações são processadas com a mesma prioridade que a entrada.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Invalid">
      <summary vsli:raw="The enumeration value is -1. This is an invalid priority.">O valor de enumeração é -1.  Essa é uma prioridade inválida.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Loaded">
      <summary vsli:raw="The enumeration value is 6. Operations are processed when layout and render has finished but just before items at input priority are serviced. Specifically this is used when raising the Loaded event.">O valor de enumeração é 6.  As operações serão processadas quando o layout e a renderização tiverem terminado, mas antes que os itens com prioridade de entrada sejam atendidos. Especificamente, isso é usado ao gerar o evento Loaded.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Normal">
      <summary vsli:raw="The enumeration value is 9. Operations are processed at normal priority. This is the typical application priority.">O valor de enumeração é 9.  As operações serão processadas com prioridade normal.  Esta é a prioridade típica do aplicativo.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Render">
      <summary vsli:raw="The enumeration value is 7. Operations processed at the same priority as rendering.">O valor de enumeração é 7.  As operações serão processadas com a mesma prioridade que a renderização.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Send">
      <summary vsli:raw="The enumeration value is 10. Operations are processed before other asynchronous operations. This is the highest priority.">O valor de enumeração é 10.  As operações serão processadas antes de outras operações assíncronas.  Esta é a prioridade mais alta.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.SystemIdle">
      <summary vsli:raw="The enumeration value is 1. Operations are processed when the system is idle.">O valor de enumeração é 1.  As operações serão processadas quando o sistema estiver ocioso.</summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherPriorityAwaitable">
      <summary vsli:raw="Represents an awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.">Representa um objeto aguardável que transfere o controle de volta para o dispatcher atual e fornece uma oportunidade para o dispatcher processar outros eventos de forma assíncrona</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherPriorityAwaitable.GetAwaiter">
      <summary vsli:raw="Returns an object that waits for the completion of an asynchronous task.">Retorna um objeto que aguarda a conclusão de uma tarefa assíncrona.</summary>
      <returns vsli:raw="An object that waits for the completion of an asynchronous task.">Um objeto que aguarda a conclusão de uma tarefa assíncrona.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherPriorityAwaiter">
      <summary vsli:raw="Represents an object that waits for the completion of an asynchronous task.">Representa um objeto que aguarda a conclusão de uma tarefa assíncrona.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherPriorityAwaiter.GetResult">
      <summary vsli:raw="Ends the wait for the completion of the asynchronous task.">Termina a espera pela conclusão da tarefa assíncrona.</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherPriorityAwaiter.IsCompleted">
      <summary vsli:raw="Gets a value that indicates whether the asynchronous task has completed.">Obtém um valor que indica se a tarefa assíncrona foi concluída.</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; in all cases.">
        <see langword="false" /> em todos os casos.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherPriorityAwaiter.OnCompleted(System.Action)">
      <summary vsli:raw="Sets the action to perform when the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherPriorityAwaiter&quot; /&gt; object stops waiting for the asynchronous task to complete.">Define a ação a ser executada quando o objeto <see cref="T:System.Windows.Threading.DispatcherPriorityAwaiter" /> para de esperar a conclusão da tarefa assíncrona.</summary>
      <param name="continuation" vsli:raw="The action to perform when the wait operation completes.">A ação a ser executada quando a operação de espera é concluída.</param>
    </member>
    <member name="T:System.Windows.Threading.DispatcherProcessingDisabled">
      <summary vsli:raw="Represents the Dispatcher when it is in a disable state and provides a means to re-enable dispatcher processing.">Representa o Dispatcher quando ele está em um estado desabilitado e fornece um meio de habilitar o processamento do dispatcher novamente.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.Dispose">
      <summary vsli:raw="Re-enables dispatcher processing.">Habilita o processamento do dispatcher novamente.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Threading.DispatcherProcessingDisabled&quot; /&gt; object is equal to this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherProcessingDisabled&quot; /&gt; object.">Determina se o objeto <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> especificado é igual a este objeto <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" />.</summary>
      <param name="obj" vsli:raw="The object to evaluate for equality.">O objeto a ser avaliado quanto à igualdade.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified object is equal to this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherProcessingDisabled&quot; /&gt; object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o objeto especificado for igual a esse <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> objeto, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.GetHashCode">
      <summary vsli:raw="Gets a hash code for this instance.">Obtém um código hash para essa instância.</summary>
      <returns vsli:raw="A signed 32-bit integer hash code.">Um código hash do inteiro com sinal de 32 bits.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.op_Equality(System.Windows.Threading.DispatcherProcessingDisabled,System.Windows.Threading.DispatcherProcessingDisabled)">
      <summary vsli:raw="Determines whether two &lt;see cref=&quot;T:System.Windows.Threading.DispatcherProcessingDisabled&quot; /&gt; objects are equal.">Determina se dois objetos <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> são iguais.</summary>
      <param name="left" vsli:raw="The first object to compare.">O primeiro objeto a ser comparado.</param>
      <param name="right" vsli:raw="The second object to compare.">O segundo objeto a ser comparado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherProcessingDisabled&quot; /&gt; objects are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se os objetos <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> forem iguais, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.op_Inequality(System.Windows.Threading.DispatcherProcessingDisabled,System.Windows.Threading.DispatcherProcessingDisabled)">
      <summary vsli:raw="Determines whether two &lt;see cref=&quot;T:System.Windows.Threading.DispatcherProcessingDisabled&quot; /&gt; objects are not equal.">Determina se dois objetos <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> não são iguais.</summary>
      <param name="left" vsli:raw="The first object to compare.">O primeiro objeto a ser comparado.</param>
      <param name="right" vsli:raw="The second object to compare.">O segundo objeto a ser comparado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherProcessingDisabled&quot; /&gt; objects are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se os objetos <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> não forem iguais, do contrário, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherSynchronizationContext">
      <summary vsli:raw="Provides a synchronization context for Windows Presentation Foundation (WPF).">Fornece um contexto de sincronização para o WPF (Windows Presentation Foundation).</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt; class by using the current &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> usando o <see cref="T:System.Windows.Threading.Dispatcher" /> atual.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.#ctor(System.Windows.Threading.Dispatcher)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt; class by using the specified &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> usando o <see cref="T:System.Windows.Threading.Dispatcher" /> especificado.</summary>
      <param name="dispatcher" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; to associate this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt; with.">O <see cref="T:System.Windows.Threading.Dispatcher" /> a ser associado a este <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dispatcher&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dispatcher" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.#ctor(System.Windows.Threading.Dispatcher,System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt; class by using the specified &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> usando o <see cref="T:System.Windows.Threading.Dispatcher" /> especificado.</summary>
      <param name="dispatcher" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; to associate this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt; with.">O <see cref="T:System.Windows.Threading.Dispatcher" /> a ser associado a este <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />.</param>
      <param name="priority" vsli:raw="The priority used to send and post callback methods.">A prioridade usada para enviar e postar os métodos de retorno de chamada.</param>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.CreateCopy">
      <summary vsli:raw="Creates a copy of this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt;.">Cria uma cópia deste <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />.</summary>
      <returns vsli:raw="The copy of this synchronization context.">A cópia deste contexto de sincronização.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)">
      <summary vsli:raw="Invokes the callback in the synchronization context asynchronously.">Invoca o retorno de chamada no contexto de sincronização de forma assíncrona.</summary>
      <param name="d" vsli:raw="The delegate to call.">O delegado a ser chamado.</param>
      <param name="state" vsli:raw="The object passed to the delegate.">O objeto passado ao delegado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;d&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="d" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)">
      <summary vsli:raw="Invokes the callback in the synchronization context synchronously.">Invoca o retorno de chamada no contexto de sincronização de forma síncrona.</summary>
      <param name="d" vsli:raw="The delegate to call.">O delegado a ser chamado.</param>
      <param name="state" vsli:raw="The object passed to the delegate.">O objeto passado ao delegado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;d&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="d" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.Wait(System.IntPtr[],System.Boolean,System.Int32)">
      <summary vsli:raw="Waits for any or all the elements in the specified array to receive a signal.">Aguarda até que um ou todos os elementos da matriz especificada recebam um sinal.</summary>
      <param name="waitHandles" vsli:raw="An array that contains the native operating system handles.">Uma matriz que contém os identificadores do sistema operacional nativo.</param>
      <param name="waitAll" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to wait for all handles; &lt;see langword=&quot;false&quot; /&gt; to wait for any handle.">
        <see langword="true" /> para aguardar todos os identificadores, <see langword="false" /> para aguardar qualquer identificador.</param>
      <param name="millisecondsTimeout" vsli:raw="The number of milliseconds to wait, or &lt;see cref=&quot;F:System.Threading.Timeout.Infinite&quot; /&gt; (-1) to wait indefinitely.">O número de milissegundos para aguardar ou <see cref="F:System.Threading.Timeout.Infinite" /> (- 1) para aguardar indefinidamente.</param>
      <returns vsli:raw="The array index of the object that satisfied the wait.">O índice da matriz do objeto que atendeu à espera.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherTimer">
      <summary vsli:raw="A timer that is integrated into the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; queue which is processed at a specified interval of time and at a specified priority.">Um temporizador que é integrado à fila <see cref="T:System.Windows.Threading.Dispatcher" /> que é processada em um intervalo de tempo especificado e com uma prioridade especificada.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherTimer&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Threading.DispatcherTimer" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.#ctor(System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.EventHandler,System.Windows.Threading.Dispatcher)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherTimer&quot; /&gt; class which uses the specified time interval, priority, event handler, and &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Threading.DispatcherTimer" /> que usa o intervalo de tempo, a prioridade, o manipulador de eventos e o <see cref="T:System.Windows.Threading.Dispatcher" /> especificados.</summary>
      <param name="interval" vsli:raw="The period of time between ticks.">O período entre os tiques.</param>
      <param name="priority" vsli:raw="The priority at which to invoke the timer.">A prioridade na qual o temporizador deve ser invocado.</param>
      <param name="callback" vsli:raw="The event handler to call when the &lt;see cref=&quot;E:System.Windows.Threading.DispatcherTimer.Tick&quot; /&gt; event occurs.">O manipulador de eventos a ser chamado quando o evento de <see cref="E:System.Windows.Threading.DispatcherTimer.Tick" /> ocorrer.</param>
      <param name="dispatcher" vsli:raw="The dispatcher the timer is associated with.">O dispatcher ao qual o temporizador está associado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;callback&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;dispatcher&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="callback" /> é <see langword="null" />.

ou -
    &lt;code data-dev-comment-type="paramref"&gt;dispatcher&lt;/code&gt; é &lt;code data-dev-comment-type="langword"&gt;null&lt;/code&gt;.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;interval&quot; /&gt; is less than 0 or greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">
        <paramref name="interval" /> é menor que 0 ou maior que <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherTimer&quot; /&gt; class which processes timer events at the specified priority.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Threading.DispatcherTimer" /> que processa eventos de temporizador na prioridade especificada.</summary>
      <param name="priority" vsli:raw="The priority at which to invoke the timer.">A prioridade na qual o temporizador deve ser invocado.</param>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority,System.Windows.Threading.Dispatcher)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherTimer&quot; /&gt; class which runs on the specified &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; at the specified priority.">Inicializa uma nova instância da classe <see cref="T:System.Windows.Threading.DispatcherTimer" /> executada no <see cref="T:System.Windows.Threading.Dispatcher" /> especificado na prioridade especificada.</summary>
      <param name="priority" vsli:raw="The priority at which to invoke the timer.">A prioridade na qual o temporizador deve ser invocado.</param>
      <param name="dispatcher" vsli:raw="The dispatcher the timer is associated with.">O dispatcher ao qual o temporizador está associado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dispatcher&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dispatcher" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Threading.DispatcherTimer.Dispatcher">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; associated with this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherTimer&quot; /&gt;.">Obtém o <see cref="T:System.Windows.Threading.Dispatcher" /> associado a este <see cref="T:System.Windows.Threading.DispatcherTimer" />.</summary>
      <returns vsli:raw="The dispatcher.">O dispatcher.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherTimer.Interval">
      <summary vsli:raw="Gets or sets the period of time between timer ticks.">Obtém ou define o período entre os tiques do temporizador.</summary>
      <returns vsli:raw="The period of time between ticks. The default is 00:00:00.">O período entre os tiques. O padrão é 00:00:00.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;interval&quot; /&gt; is less than 0 or greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; milliseconds.">
        <paramref name="interval" /> é menor que 0 ou maior ou igual a <see cref="F:System.Int32.MaxValue" /> milissegundos.</exception>
    </member>
    <member name="P:System.Windows.Threading.DispatcherTimer.IsEnabled">
      <summary vsli:raw="Gets or sets a value that indicates whether the timer is running.">Obtém ou define um valor que indica se o temporizador está em execução.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the timer is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o temporizador estiver habilitado; caso contrário, <see langword="false" />.  O padrão é <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.Start">
      <summary vsli:raw="Starts the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherTimer&quot; /&gt;.">Inicia o <see cref="T:System.Windows.Threading.DispatcherTimer" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.Stop">
      <summary vsli:raw="Stops the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherTimer&quot; /&gt;.">Interrompe o <see cref="T:System.Windows.Threading.DispatcherTimer" />.</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherTimer.Tag">
      <summary vsli:raw="Gets or sets a user-defined data object.">Obtém ou define um objeto de dados definido pelo usuário.</summary>
      <returns vsli:raw="The user-defined data.  The default is &lt;see langword=&quot;null&quot; /&gt;.">Os dados definidos pelo usuário.  O padrão é <see langword="null" />.</returns>
    </member>
    <member name="E:System.Windows.Threading.DispatcherTimer.Tick">
      <summary vsli:raw="Occurs when the timer interval has elapsed.">Ocorre quando termina o intervalo do temporizador.</summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;&lt;see cref=&quot;E:System.Windows.Threading.Dispatcher.UnhandledException&quot; /&gt; event.">Fornece dados para o evento de <see cref="T:System.Windows.Threading.Dispatcher" /><see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" />.</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Exception">
      <summary vsli:raw="Gets the exception that was raised when executing code by way of the dispatcher.">Obtém a exceção foi gerada ao executar o código por meio de dispatcher.</summary>
      <returns vsli:raw="The exception.">A exceção.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Handled">
      <summary vsli:raw="Gets or sets whether the exception event has been handled.">Obtém ou define se o evento de exceção foi tratado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the exception was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a exceção foi tratada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherUnhandledExceptionEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Windows.Threading.Dispatcher.UnhandledException&quot; /&gt; event.">Representa o método que manipulará o evento de <see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" /> .</summary>
      <param name="sender" vsli:raw="The source of the event.">A fonte do evento.</param>
      <param name="e" vsli:raw="The event data.">Os dados do evento.</param>
    </member>
    <member name="T:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;&lt;see cref=&quot;E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter&quot; /&gt; event.">Fornece dados para o evento de <see cref="T:System.Windows.Threading.Dispatcher" /><see cref="E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter" />.</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.Exception">
      <summary vsli:raw="Gets the exception that was raised when executing code by way of the dispatcher.">Obtém a exceção foi gerada ao executar o código por meio de dispatcher.</summary>
      <returns vsli:raw="The exception.">A exceção.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch">
      <summary vsli:raw="Gets or sets whether the exception should be caught and the event handlers called.">Obtém ou define se a exceção deve ser capturada e os manipuladores de eventos chamados.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;E:System.Windows.Threading.Dispatcher.UnhandledException&quot; /&gt; should be raised; otherwise; &lt;see langword=&quot;false&quot; /&gt;.  The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />Se o <see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" /> deve ser gerado; caso contrário; <see langword="false" />.  O valor padrão é <see langword="true" />.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter&quot; /&gt; event.">Representa o método que manipulará o evento de <see cref="E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter" /> .</summary>
      <param name="sender" vsli:raw="The source of the event.">A fonte do evento.</param>
      <param name="e" vsli:raw="The event data.">Os dados do evento.</param>
    </member>
    <member name="T:System.Windows.ValidateValueCallback">
      <summary vsli:raw="Represents a method used as a callback that validates the effective value of a dependency property.">Representa um método usado como um retorno de chamada que valida o valor efetivo de uma propriedade de dependência.</summary>
      <param name="value" vsli:raw="The value to be validated.">O valor a ser validado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value was validated; &lt;see langword=&quot;false&quot; /&gt; if the submitted value was invalid.">
        <see langword="true" /> se o valor foi validado; <see langword="false" /> se o valor enviado era inválido.</returns>
    </member>
    <member name="T:System.Windows.Vector">
      <summary vsli:raw="Represents a displacement in 2-D space.">Representa um deslocamento de espaço 2D.</summary>
    </member>
    <member name="M:System.Windows.Vector.#ctor(System.Double,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure.">Inicializa uma nova instância da estrutura <see cref="T:System.Windows.Vector" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt;-offset of the new &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">O deslocamento de <see cref="P:System.Windows.Vector.X" /> do novo <see cref="T:System.Windows.Vector" />.</param>
      <param name="y" vsli:raw="The &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt;-offset of the new &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">O deslocamento de <see cref="P:System.Windows.Vector.Y" /> do novo <see cref="T:System.Windows.Vector" />.</param>
    </member>
    <member name="M:System.Windows.Vector.Add(System.Windows.Vector,System.Windows.Point)">
      <summary vsli:raw="Translates the specified point by the specified vector and returns the resulting point.">Move o ponto especificado pelo vetor especificado e retorna o ponto resultante.</summary>
      <param name="vector" vsli:raw="The amount to translate the specified point.">O valor para converter o ponto especificado.</param>
      <param name="point" vsli:raw="The point to translate.">O ponto a ser convertido.</param>
      <returns vsli:raw="The result of translating &lt;paramref name=&quot;point&quot; /&gt; by &lt;paramref name=&quot;vector&quot; /&gt;.">O resultado de converter <paramref name="point" /> por <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Add(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Adds two vectors and returns the result as a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure.">Adiciona dois vetores e retorna o resultado como uma estrutura de <see cref="T:System.Windows.Vector" />.</summary>
      <param name="vector1" vsli:raw="The first vector to add.">O primeiro vetor a ser adicionado.</param>
      <param name="vector2" vsli:raw="The second vector to add.">O segundo vetor a ser adicionado.</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;.">A soma de <paramref name="vector1" /> e <paramref name="vector2" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.AngleBetween(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Retrieves the angle, expressed in degrees, between the two specified vectors.">Recupera o ângulo, expressado em graus, entre os dois vetores especificados.</summary>
      <param name="vector1" vsli:raw="The first vector to evaluate.">O primeiro vetor a ser avaliado.</param>
      <param name="vector2" vsli:raw="The second vector to evaluate.">O segundo vetor a ser avaliado.</param>
      <returns vsli:raw="The angle, in degrees, between &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;.">O ângulo, em graus, entre <paramref name="vector1" /> e <paramref name="vector2" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.CrossProduct(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Calculates the cross product of two vectors.">Calcula o produto cruzado de dois vetores.</summary>
      <param name="vector1" vsli:raw="The first vector to evaluate.">O primeiro vetor a ser avaliado.</param>
      <param name="vector2" vsli:raw="The second vector to evaluate.">O segundo vetor a ser avaliado.</param>
      <returns vsli:raw="The cross product of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;. The following formula is used to calculate the cross product:  &#xA;  &#xA; &lt;c&gt;(Vector1.X * Vector2.Y) - (Vector1.Y * Vector2.X)&lt;/c&gt;">O produto cruzado de <paramref name="vector1" /> e <paramref name="vector2" />. A fórmula a seguir é usada para calcular o produto cruzado: 
 <c>(Vector1.X * Vector2.Y) - (Vector1.Y * Vector2.X)</c></returns>
    </member>
    <member name="M:System.Windows.Vector.Determinant(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Calculates the determinant of two vectors.">Calcula o determinante de dois vetores.</summary>
      <param name="vector1" vsli:raw="The first vector to evaluate.">O primeiro vetor a ser avaliado.</param>
      <param name="vector2" vsli:raw="The second vector to evaluate.">O segundo vetor a ser avaliado.</param>
      <returns vsli:raw="The determinant of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;.">O determinante de <paramref name="vector1" /> e <paramref name="vector2" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Divide(System.Windows.Vector,System.Double)">
      <summary vsli:raw="Divides the specified vector by the specified scalar and returns the result as a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Divide o vetor especificado pelo escalar especificado e retorna o resultado como um <see cref="T:System.Windows.Vector" />.</summary>
      <param name="vector" vsli:raw="The vector structure to divide.">A estrutura de vetor a ser dividida.</param>
      <param name="scalar" vsli:raw="The amount by which &lt;paramref name=&quot;vector&quot; /&gt; is divided.">A quantidade pela qual <paramref name="vector" /> é dividido.</param>
      <returns vsli:raw="The result of dividing &lt;paramref name=&quot;vector&quot; /&gt; by &lt;paramref name=&quot;scalar&quot; /&gt;.">O resultado da divisão de <paramref name="vector" /> por <paramref name="scalar" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure and, if it is, whether it has the same &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values as this vector.">Determina se o <see cref="T:System.Object" /> especificado é uma estrutura <see cref="T:System.Windows.Vector" /> e, se sim, se ele tem os mesmos valores de <see cref="P:System.Windows.Vector.X" /> e de <see cref="P:System.Windows.Vector.Y" /> que esse vetor.</summary>
      <param name="o" vsli:raw="The vector to compare.">O vetor a ser comparado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; and has the same &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values as this vector; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="o" /> for um <see cref="T:System.Windows.Vector" /> e tiver os mesmos valores de <see cref="P:System.Windows.Vector.X" /> e <see cref="P:System.Windows.Vector.Y" /> que esse vetor, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Equals(System.Windows.Vector)">
      <summary vsli:raw="Compares two vectors for equality.">Compara dois vetores quanto à igualdade.</summary>
      <param name="value" vsli:raw="The vector to compare with this vector.">O vetor a ser comparado com esse vetor.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; has the same &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values as this vector; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="value" /> tem os mesmos valores <see cref="P:System.Windows.Vector.X" /> e <see cref="P:System.Windows.Vector.Y" /> que esse vetor; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Equals(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Compares the two specified vectors for equality.">Compara os dois vetores especificados quanto à igualdade.</summary>
      <param name="vector1" vsli:raw="The first vector to compare.">O primeiro vetor a ser comparado.</param>
      <param name="vector2" vsli:raw="The second vector to compare.">O segundo vetor a ser comparado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; components of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se os componentes <see cref="P:System.Windows.Vector.X" /> e <see cref="P:System.Windows.Vector.Y" /> do <paramref name="vector1" /> e do <paramref name="vector2" /> forem iguais, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.GetHashCode">
      <summary vsli:raw="Returns the hash code for this vector.">Retorna o código hash desse vetor.</summary>
      <returns vsli:raw="The hash code for this instance.">O código hash para essa instância.</returns>
    </member>
    <member name="P:System.Windows.Vector.Length">
      <summary vsli:raw="Gets the length of this vector.">Obtém o tamanho desse vetor.</summary>
      <returns vsli:raw="The length of this vector.">O tamanho desse vetor.</returns>
    </member>
    <member name="P:System.Windows.Vector.LengthSquared">
      <summary vsli:raw="Gets the square of the length of this vector.">Obtém o quadrado do comprimento desse vetor.</summary>
      <returns vsli:raw="The square of the &lt;see cref=&quot;P:System.Windows.Vector.Length&quot; /&gt; of this vector.">O quadrado do <see cref="P:System.Windows.Vector.Length" /> desse vetor.</returns>
    </member>
    <member name="M:System.Windows.Vector.Multiply(System.Double,System.Windows.Vector)">
      <summary vsli:raw="Multiplies the specified scalar by the specified vector and returns the resulting &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Multiplica o escalar especificado pelo vetor especificado e retorna o <see cref="T:System.Windows.Vector" /> resultante.</summary>
      <param name="scalar" vsli:raw="The scalar to multiply.">O escalar a se multiplicar.</param>
      <param name="vector" vsli:raw="The vector to multiply.">O vetor a ser multiplicado.</param>
      <returns vsli:raw="The result of multiplying &lt;paramref name=&quot;scalar&quot; /&gt; and &lt;paramref name=&quot;vector&quot; /&gt;.">O resultado da multiplicação de <paramref name="scalar" /> por <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Double)">
      <summary vsli:raw="Multiplies the specified vector by the specified scalar and returns the resulting &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Multiplica o vetor especificado pelo escalar especificado e retorna o <see cref="T:System.Windows.Vector" /> resultante.</summary>
      <param name="vector" vsli:raw="The vector to multiply.">O vetor a ser multiplicado.</param>
      <param name="scalar" vsli:raw="The scalar to multiply.">O escalar a se multiplicar.</param>
      <returns vsli:raw="The result of multiplying &lt;paramref name=&quot;vector&quot; /&gt; and &lt;paramref name=&quot;scalar&quot; /&gt;.">O resultado da multiplicação de <paramref name="vector" /> por <paramref name="scalar" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Windows.Media.Matrix)">
      <summary vsli:raw="Transforms the coordinate space of the specified vector using the specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Transforma o espaço de coordenadas do vetor especificado usando a <see cref="T:System.Windows.Media.Matrix" /> especificada.</summary>
      <param name="vector" vsli:raw="The vector structure to transform.">A estrutura de vetor a transformar.</param>
      <param name="matrix" vsli:raw="The transformation to apply to &lt;paramref name=&quot;vector&quot; /&gt;.">A transformação a ser aplicada em <paramref name="vector" />.</param>
      <returns vsli:raw="The result of transforming &lt;paramref name=&quot;vector&quot; /&gt; by &lt;paramref name=&quot;matrix&quot; /&gt;.">O resultado da transformar <paramref name="vector" /> em <paramref name="matrix" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Calculates the dot product of the two specified vectors and returns the result as a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Calcula o produto escalar de dois vetores e retorna o resultado como <see cref="T:System.Double" />.</summary>
      <param name="vector1" vsli:raw="The first vector to multiply.">O primeiro vetor a ser multiplicado.</param>
      <param name="vector2" vsli:raw="The second vector structure to multiply.">A segunda estrutura do vetor a ser multiplicado.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Double&quot; /&gt; containing the scalar dot product of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;, which is calculated using the following formula:  &#xA;  &#xA; &lt;c&gt;(vector1.X * vector2.X) + (vector1.Y * vector2.Y)&lt;/c&gt;">Um <see cref="T:System.Double" /> que contém o produto escalar de <paramref name="vector1" /> e <paramref name="vector2" />, que é calculado utilizando a seguinte fórmula: 
 <c>(vector1.X * vector2.X) + (vector1.Y * vector2.Y)</c></returns>
    </member>
    <member name="M:System.Windows.Vector.Negate">
      <summary vsli:raw="Negates this vector. The vector has the same magnitude as before, but its direction is now opposite.">Nega este vetor. O vetor tem a mesma magnitude de antes, mas sua direção agora é oposta.</summary>
    </member>
    <member name="M:System.Windows.Vector.Normalize">
      <summary vsli:raw="Normalizes this vector.">Normaliza esse vetor.</summary>
    </member>
    <member name="M:System.Windows.Vector.op_Addition(System.Windows.Vector,System.Windows.Point)">
      <summary vsli:raw="Translates a point by the specified vector and returns the resulting point.">Converte um ponto pelo vetor especificado e retorna o ponto resultante.</summary>
      <param name="vector" vsli:raw="The vector used to translate &lt;paramref name=&quot;point&quot; /&gt;.">O vetor usado para converter <paramref name="point" />.</param>
      <param name="point" vsli:raw="The point to translate.">O ponto a ser convertido.</param>
      <returns vsli:raw="The result of translating &lt;paramref name=&quot;point&quot; /&gt; by &lt;paramref name=&quot;vector&quot; /&gt;.">O resultado de converter <paramref name="point" /> por <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Addition(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Adds two vectors and returns the result as a vector.">Adiciona dois vetores e retorna o resultado como um vetor.</summary>
      <param name="vector1" vsli:raw="The first vector to add.">O primeiro vetor a ser adicionado.</param>
      <param name="vector2" vsli:raw="The second vector to add.">O segundo vetor a ser adicionado.</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;.">A soma de <paramref name="vector1" /> e <paramref name="vector2" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Division(System.Windows.Vector,System.Double)">
      <summary vsli:raw="Divides the specified vector by the specified scalar and returns the resulting vector.">Divide o vetor especificado pelo escalar especificado e retorna o vetor resultante.</summary>
      <param name="vector" vsli:raw="The vector to divide.">O vetor a ser dividido.</param>
      <param name="scalar" vsli:raw="The scalar by which &lt;paramref name=&quot;vector&quot; /&gt; will be divided.">O escalar pelo qual <paramref name="vector" /> será dividido.</param>
      <returns vsli:raw="The result of dividing &lt;paramref name=&quot;vector&quot; /&gt; by &lt;paramref name=&quot;scalar&quot; /&gt;.">O resultado da divisão de <paramref name="vector" /> por <paramref name="scalar" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Equality(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Compares two vectors for equality.">Compara dois vetores quanto à igualdade.</summary>
      <param name="vector1" vsli:raw="The first vector to compare.">O primeiro vetor a ser comparado.</param>
      <param name="vector2" vsli:raw="The second vector to compare.">O segundo vetor a ser comparado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; components of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se os componentes <see cref="P:System.Windows.Vector.X" /> e <see cref="P:System.Windows.Vector.Y" /> de <paramref name="vector1" /> e <paramref name="vector2" /> forem iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Explicit(System.Windows.Vector)~System.Windows.Point">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; with the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values of this vector.">Cria um <see cref="T:System.Windows.Point" /> com os valores <see cref="P:System.Windows.Vector.X" /> e <see cref="P:System.Windows.Vector.Y" /> desse vetor.</summary>
      <param name="vector" vsli:raw="The vector to convert.">O vetor a ser convertido.</param>
      <returns vsli:raw="A point with &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt;- and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt;-coordinate values equal to the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; offset values of &lt;paramref name=&quot;vector&quot; /&gt;.">Um ponto com os valores de coordenada <see cref="P:System.Windows.Point.X" /> e <see cref="P:System.Windows.Point.Y" /> iguais aos valores <see cref="P:System.Windows.Vector.X" /> e <see cref="P:System.Windows.Vector.Y" /> de deslocamento do <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Explicit(System.Windows.Vector)~System.Windows.Size">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; from the offsets of this vector.">Cria um <see cref="T:System.Windows.Size" /> usando os deslocamentos desse vetor.</summary>
      <param name="vector" vsli:raw="The vector to convert.">O vetor a ser convertido.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; with a &lt;see cref=&quot;P:System.Windows.Size.Width&quot; /&gt; equal to the absolute value of this vector's &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; property and a &lt;see cref=&quot;P:System.Windows.Size.Height&quot; /&gt; equal to the absolute value of this vector's &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; property.">Um <see cref="T:System.Windows.Size" /> com uma <see cref="P:System.Windows.Size.Width" /> igual ao valor absoluto da propriedade <see cref="P:System.Windows.Vector.X" /> desse vetor e uma <see cref="P:System.Windows.Size.Height" /> igual ao valor absoluto da propriedade <see cref="P:System.Windows.Vector.Y" /> desse vetor.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Inequality(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Compares two vectors for inequality.">Compara dois vetores quanto à desigualdade.</summary>
      <param name="vector1" vsli:raw="The first vector to compare.">O primeiro vetor a ser comparado.</param>
      <param name="vector2" vsli:raw="The second vector to compare.">O segundo vetor a ser comparado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; components of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt; are different; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se os componentes <see cref="P:System.Windows.Vector.X" /> e <see cref="P:System.Windows.Vector.Y" /> de <paramref name="vector1" /> e <paramref name="vector2" /> forem diferentes, caso contrário <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Multiply(System.Double,System.Windows.Vector)">
      <summary vsli:raw="Multiplies the specified scalar by the specified vector and returns the resulting vector.">Multiplica o escalar especificado pelo vetor especificado e retorna o vetor resultante.</summary>
      <param name="scalar" vsli:raw="The scalar to multiply.">O escalar a se multiplicar.</param>
      <param name="vector" vsli:raw="The vector to multiply.">O vetor a ser multiplicado.</param>
      <returns vsli:raw="The result of multiplying &lt;paramref name=&quot;scalar&quot; /&gt; and &lt;paramref name=&quot;vector&quot; /&gt;.">O resultado da multiplicação de <paramref name="scalar" /> por <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Double)">
      <summary vsli:raw="Multiplies the specified vector by the specified scalar and returns the resulting vector.">Multiplica o vetor especificado pelo escalar especificado e retorna o vetor resultante.</summary>
      <param name="vector" vsli:raw="The vector to multiply.">O vetor a ser multiplicado.</param>
      <param name="scalar" vsli:raw="The scalar to multiply.">O escalar a se multiplicar.</param>
      <returns vsli:raw="The result of multiplying &lt;paramref name=&quot;vector&quot; /&gt; and &lt;paramref name=&quot;scalar&quot; /&gt;.">O resultado da multiplicação de <paramref name="vector" /> por <paramref name="scalar" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Windows.Media.Matrix)">
      <summary vsli:raw="Transforms the coordinate space of the specified vector using the specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Transforma o espaço de coordenadas do vetor especificado usando a <see cref="T:System.Windows.Media.Matrix" /> especificada.</summary>
      <param name="vector" vsli:raw="The vector to transform.">O vetor a ser transformado.</param>
      <param name="matrix" vsli:raw="The transformation to apply to &lt;paramref name=&quot;vector&quot; /&gt;.">A transformação a ser aplicada em <paramref name="vector" />.</param>
      <returns vsli:raw="The result of transforming &lt;paramref name=&quot;vector&quot; /&gt; by &lt;paramref name=&quot;matrix&quot; /&gt;.">O resultado da transformar <paramref name="vector" /> em <paramref name="matrix" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Calculates the dot product of the two specified vector structures and returns the result as a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Calcula o produto escalar das duas estruturas de vetor especificadas e retorna o resultado como um <see cref="T:System.Double" />.</summary>
      <param name="vector1" vsli:raw="The first vector to multiply.">O primeiro vetor a ser multiplicado.</param>
      <param name="vector2" vsli:raw="The second vector to multiply.">O segundo vetor a ser multiplicado.</param>
      <returns vsli:raw="Returns a &lt;see cref=&quot;T:System.Double&quot; /&gt; containing the scalar dot product of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;, which is calculated using the following formula:  &#xA;  &#xA; &lt;c&gt;vector1.X * vector2.X + vector1.Y * vector2.Y&lt;/c&gt;">Retorna um <see cref="T:System.Double" /> que contém o produto escalar de <paramref name="vector1" /> e <paramref name="vector2" />, que é calculado utilizando a seguinte fórmula: 
 <c>vector1.X * vector2.X + vector1.Y * vector2.Y</c></returns>
    </member>
    <member name="M:System.Windows.Vector.op_Subtraction(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Subtracts one specified vector from another.">Subtrai um vetor especificado de outro.</summary>
      <param name="vector1" vsli:raw="The vector from which &lt;paramref name=&quot;vector2&quot; /&gt; is subtracted.">O vetor do qual <paramref name="vector2" /> é subtraído.</param>
      <param name="vector2" vsli:raw="The vector to subtract from &lt;paramref name=&quot;vector1&quot; /&gt;.">O vetor a ser subtraído de <paramref name="vector1" />.</param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;.">A diferença entre <paramref name="vector1" /> e <paramref name="vector2" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_UnaryNegation(System.Windows.Vector)">
      <summary vsli:raw="Negates the specified vector.">Nega o vetor especificado.</summary>
      <param name="vector" vsli:raw="The vector to negate.">O vetor a ser negado.</param>
      <returns vsli:raw="A vector with &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values opposite of the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values of &lt;paramref name=&quot;vector&quot; /&gt;.">Um vetor com os valores <see cref="P:System.Windows.Vector.X" /> e <see cref="P:System.Windows.Vector.Y" /> opostos aos valores <see cref="P:System.Windows.Vector.X" /> e <see cref="P:System.Windows.Vector.Y" /> de <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Parse(System.String)">
      <summary vsli:raw="Converts a string representation of a vector into the equivalent &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure.">Converte uma representação de cadeia de caracteres de um vetor na estrutura <see cref="T:System.Windows.Vector" /> equivalente.</summary>
      <param name="source" vsli:raw="The string representation of the vector.">A representação de cadeia de caracteres do vetor.</param>
      <returns vsli:raw="The equivalent &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure.">A estrutura <see cref="T:System.Windows.Vector" /> equivalente.</returns>
    </member>
    <member name="M:System.Windows.Vector.Subtract(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Subtracts the specified vector from another specified vector.">Subtrai o vetor especificado de outro vetor especificado.</summary>
      <param name="vector1" vsli:raw="The vector from which &lt;paramref name=&quot;vector2&quot; /&gt; is subtracted.">O vetor do qual <paramref name="vector2" /> é subtraído.</param>
      <param name="vector2" vsli:raw="The vector to subtract from &lt;paramref name=&quot;vector1&quot; /&gt;.">O vetor a ser subtraído de <paramref name="vector1" />.</param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;.">A diferença entre <paramref name="vector1" /> e <paramref name="vector2" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. For a description of this member, see &lt;see cref=&quot;M:System.IFormattable.ToString(System.String,System.IFormatProvider)&quot; /&gt;.">Este membro dá suporte à infraestrutura Windows Presentation Foundation (WPF) e não se destina a ser usado diretamente do código. Para obter uma descrição desse membro, consulte <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />.</summary>
      <param name="format" vsli:raw="The string specifying the format to use.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; to use the default format defined for the type of the &lt;see cref=&quot;T:System.IFormattable&quot; /&gt; implementation.">A cadeia de caracteres que especifica o formato a ser usado.  

ou - 
<see langword="null" /> para usar o formato padrão definido para o tipo da implementação <see cref="T:System.IFormattable" />.</param>
      <param name="provider" vsli:raw="The &lt;see langword=&quot;IFormatProvider&quot; /&gt; to use to format the value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; to obtain the numeric format information from the current locale setting of the operating system.">O <see langword="IFormatProvider" /> a ser usado para formatar o valor.  

ou - 
<see langword="null" /> para obter as informações de formato numérico da configuração de localidade atual do sistema operacional.</param>
      <returns vsli:raw="A string containing the value of the current instance in the specified format.">Uma cadeia de caracteres que contém o valor da instância atual no formato especificado.</returns>
    </member>
    <member name="M:System.Windows.Vector.ToString">
      <summary vsli:raw="Returns the string representation of this &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure.">Retorna a representação de cadeia de caracteres dessa estrutura <see cref="T:System.Windows.Vector" />.</summary>
      <returns vsli:raw="A string that represents the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values of this &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Uma cadeia de caracteres que representa os valores <see cref="P:System.Windows.Vector.X" /> e <see cref="P:System.Windows.Vector.Y" /> desse <see cref="T:System.Windows.Vector" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.ToString(System.IFormatProvider)">
      <summary vsli:raw="Returns the string representation of this &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure with the specified formatting information.">Retorna a representação de cadeia de caracteres desta estrutura <see cref="T:System.Windows.Vector" /> com as informações de formatação especificadas.</summary>
      <param name="provider" vsli:raw="The culture-specific formatting information.">As informações de formatação específicas da cultura.</param>
      <returns vsli:raw="A string that represents the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values of this &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Uma cadeia de caracteres que representa os valores <see cref="P:System.Windows.Vector.X" /> e <see cref="P:System.Windows.Vector.Y" /> desse <see cref="T:System.Windows.Vector" />.</returns>
    </member>
    <member name="P:System.Windows.Vector.X">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; component of this vector.">Obtém ou define o componente <see cref="P:System.Windows.Vector.X" /> desse vetor.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; component of this vector. The default value is 0.">O componente <see cref="P:System.Windows.Vector.X" /> desse vetor. O valor padrão é 0.</returns>
    </member>
    <member name="P:System.Windows.Vector.Y">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; component of this vector.">Obtém ou define o componente <see cref="P:System.Windows.Vector.Y" /> desse vetor.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; component of this vector. The default value is 0.">O componente <see cref="P:System.Windows.Vector.Y" /> desse vetor. O valor padrão é 0.</returns>
    </member>
    <member name="T:System.Windows.VectorConverter">
      <summary vsli:raw="Converts instances of other types to and from a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Converte instâncias de outros tipos de e para um <see cref="T:System.Windows.Vector" />.</summary>
    </member>
    <member name="M:System.Windows.VectorConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure.">Inicializa uma nova instância da estrutura <see cref="T:System.Windows.Vector" />.</summary>
    </member>
    <member name="M:System.Windows.VectorConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Indicates whether an object can be converted from a given type to an instance of a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Indica se um objeto pode ser convertido de um determinado tipo em uma instância de um <see cref="T:System.Windows.Vector" />.</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">Descreve as informações de contexto de um tipo.</param>
      <param name="sourceType" vsli:raw="The source &lt;see cref=&quot;T:System.Type&quot; /&gt; that is being queried for conversion support.">O <see cref="T:System.Type" /> de origem que está sendo consultado quanto a suporte para conversão.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if objects of the specified type can be converted to a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se os objetos do tipo especificado podem ser convertidos em um <see cref="T:System.Windows.Vector" />, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.VectorConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether instances of &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; can be converted to the specified type.">Determina se é possível converter instâncias de <see cref="T:System.Windows.Vector" /> para o tipo especificado.</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">Descreve as informações de contexto de um tipo.</param>
      <param name="destinationType" vsli:raw="The desired type this &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; is being evaluated for conversion.">O tipo desejado para o qual se está avaliando converter este <see cref="T:System.Windows.Vector" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if instances of &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; can be converted to &lt;paramref name=&quot;destinationType&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se este instâncias de <see cref="T:System.Windows.Vector" /> puderem ser convertidas para <paramref name="destinationType" />, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.VectorConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Converts the specified object to a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Converte o objeto especificado em um <see cref="T:System.Windows.Vector" />.</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">Descreve as informações de contexto de um tipo.</param>
      <param name="culture" vsli:raw="Describes the &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; of the type being converted.">Descreve o <see cref="T:System.Globalization.CultureInfo" /> do tipo que está sendo convertido.</param>
      <param name="value" vsli:raw="The object being converted.">O objeto sendo convertido.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; created from converting &lt;paramref name=&quot;value&quot; /&gt;.">O <see cref="T:System.Windows.Vector" /> criado da conversão de <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Windows.VectorConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; to the specified type.">Converte a <see cref="T:System.Windows.Vector" /> especificada no tipo especificado.</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">Descreve as informações de contexto de um tipo.</param>
      <param name="culture" vsli:raw="Describes the &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; of the type being converted.">Descreve o <see cref="T:System.Globalization.CultureInfo" /> do tipo que está sendo convertido.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; to convert.">O <see cref="T:System.Windows.Vector" /> a ser convertido.</param>
      <param name="destinationType" vsli:raw="The type to convert this &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; to.">O tipo para o qual converter este <see cref="T:System.Windows.Vector" />.</param>
      <returns vsli:raw="The object created from converting this &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">O objeto criado da conversão deste <see cref="T:System.Windows.Vector" />.</returns>
    </member>
    <member name="T:System.Windows.WeakEventManager">
      <summary vsli:raw="Provides a base class for the event manager that is used in the weak event pattern. The manager adds and removes listeners for events (or callbacks) that also use the pattern.">Fornece uma classe base para o gerenciador de evento que é usado no padrão de evento fraco. O Gerenciador adiciona e remove os ouvintes de eventos (ou retornos de chamada) que também usam o padrão.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.#ctor">
      <summary vsli:raw="Initializes base class values when it is used as the initializer by the constructor of a derived class.">Inicializa os valores da classe base quando é usado como o inicializador pelo construtor de uma classe derivada.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)">
      <summary vsli:raw="Delivers the event being managed to each listener.">Fornece o evento que está sendo gerenciado a cada ouvinte.</summary>
      <param name="sender" vsli:raw="The object on which the event is being handled.">O objeto no qual o evento está sendo manipulado.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data for the event to deliver.">Um <see cref="T:System.EventArgs" /> que contém os dados do evento que o evento deve entregar.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)">
      <summary vsli:raw="Delivers the event being managed to each listener in the provided list.">Entrega o evento que está sendo gerenciado a cada ouvinte na lista fornecida.</summary>
      <param name="sender" vsli:raw="The object on which the event is being handled.">O objeto no qual o evento está sendo manipulado.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</param>
      <param name="list" vsli:raw="The provided &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">A <see cref="T:System.Windows.WeakEventManager.ListenerList" /> fornecida.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.GetCurrentManager(System.Type)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; implementation that is used for the provided type.">Retorna a implementação de <see cref="T:System.Windows.WeakEventManager" /> que é usada para o tipo fornecido.</summary>
      <param name="managerType" vsli:raw="The type to obtain the &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; for.">O tipo para o qual o <see cref="T:System.Windows.WeakEventManager" /> deve ser obtido.</param>
      <returns vsli:raw="The matching &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; implementation.">A implementação de <see cref="T:System.Windows.WeakEventManager" /> correspondente.</returns>
    </member>
    <member name="P:System.Windows.WeakEventManager.Item(System.Object)">
      <summary vsli:raw="Gets or sets the data being stored for the specified source.">Obtém ou define os dados que estão sendo armazenados para a origem especificada.</summary>
      <param name="source" vsli:raw="The zero-based index of the requested source.">O índice de base zero da origem solicitada.</param>
      <returns vsli:raw="Data being stored by the manager for this source.">Dados armazenados pelo gerente para esta fonte.</returns>
    </member>
    <member name="T:System.Windows.WeakEventManager.ListenerList">
      <summary vsli:raw="Provides a built-in collection list for storing listeners for a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt;.">Fornece uma lista de coleção interna para armazenar ouvintes de um <see cref="T:System.Windows.WeakEventManager" />.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt; class with the specified initial capacity.">Inicializa uma nova instância da classe <see cref="T:System.Windows.WeakEventManager.ListenerList" /> com a capacidade inicial especificada.</summary>
      <param name="capacity" vsli:raw="The number of items that should be allocated in the initial list.">O número de itens que devem ser alocados na lista inicial.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.Add(System.Windows.IWeakEventListener)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Windows.IWeakEventListener&quot; /&gt; object to the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Adiciona um objeto <see cref="T:System.Windows.IWeakEventListener" /> ao <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <param name="listener" vsli:raw="The listener element to add to the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">O elemento de ouvinte a ser adicionado ao <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.AddHandler(System.Delegate)">
      <summary vsli:raw="Adds an event handler to the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Adiciona um manipulador de eventos ao <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <param name="handler" vsli:raw="The event handler to add to the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">O manipulador de eventos a ser adicionado ao <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.BeginUse">
      <summary vsli:raw="Declares the list to be in use. This prevents direct changes to the list during iterations of the list items.">Declara a lista como em uso. Isso impede alterações diretas na lista durante as iterações dos itens da lista.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the list was already declared to be in use; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se a lista já tiver sido declarada como em uso, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.Clone">
      <summary vsli:raw="Creates a modifiable clone of this &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Cria um clone modificável desta <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <returns vsli:raw="A modifiable clone of the current object.">Um clone modificável do objeto atual.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.CopyTo(System.Windows.WeakEventManager.ListenerList)">
      <summary vsli:raw="Copies the current &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Copia a <see cref="T:System.Windows.WeakEventManager.ListenerList" /> atual para a <see cref="T:System.Windows.WeakEventManager.ListenerList" /> especificada</summary>
      <param name="newList" vsli:raw="The object to copy to.">O objeto ao qual será copiado.</param>
    </member>
    <member name="P:System.Windows.WeakEventManager.ListenerList.Count">
      <summary vsli:raw="Gets the number of items contained in the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Obtém o número de itens contidos no <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <returns vsli:raw="The number of items contained in the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">O número de itens contidos no <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.DeliverEvent(System.Object,System.EventArgs,System.Type)">
      <summary vsli:raw="Delivers the event being managed to each listener in the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Fornece o evento que está sendo gerenciado para cada ouvinte de <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <param name="sender" vsli:raw="The object that raised the event.">O objeto que gerencie o evento.</param>
      <param name="args" vsli:raw="An object that contains the event data.">Um objeto que contém os dados do evento.</param>
      <param name="managerType" vsli:raw="The type of the &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; that calls this method.">O tipo do <see cref="T:System.Windows.WeakEventManager" /> que chama esse método.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any of the listeners in the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt; refer to an object that has been garbage collected; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se um dos ouvintes na <see cref="T:System.Windows.WeakEventManager.ListenerList" /> se referir a um objeto que tenha sido coletado como lixo, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.WeakEventManager.ListenerList.Empty">
      <summary vsli:raw="Gets a value that represents an empty list for purposes of comparisons.">Obtém um valor que representa uma lista vazia para fins de comparações.</summary>
      <returns vsli:raw="The empty list representation.">A representação de lista vazia.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.EndUse">
      <summary vsli:raw="Unlocks the locked state initiated by &lt;see cref=&quot;M:System.Windows.WeakEventManager.ListenerList.BeginUse&quot; /&gt;.">Desbloqueia o estado bloqueado iniciado por <see cref="M:System.Windows.WeakEventManager.ListenerList.BeginUse" />.</summary>
    </member>
    <member name="P:System.Windows.WeakEventManager.ListenerList.IsEmpty">
      <summary vsli:raw="Gets a value that declares whether this &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt; is empty.">Obtém um valor que declara se esta <see cref="T:System.Windows.WeakEventManager.ListenerList" /> está vazia.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the list is empty; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />se a lista estiver vazia; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.Windows.WeakEventManager.ListenerList.Item(System.Int32)">
      <summary vsli:raw="Gets or sets a specific listener item in the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt; .">Obtém ou define um item de ouvinte específico na <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <param name="index" vsli:raw="The zero-based index of the listener in the list.">O índice de base zero do ouvinte na lista.</param>
      <returns vsli:raw="The item at that index, or a null reference if no item was at that index.">O item nesse índice ou uma referência nula se nenhum item estava nesse índice.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.PrepareForWriting(System.Windows.WeakEventManager.ListenerList@)">
      <summary vsli:raw="Checks to see whether the provided list is in use, and if so, sets the list reference parameter to a copy of that list rather than the original.">Verifica se a lista fornecida está em uso e nesse caso, define o parâmetro de referência da lista para uma cópia dessa lista, em vez da original.</summary>
      <param name="list" vsli:raw="The list to check for use state and potentially copy.">A lista a ser verificada quanto ao estado de uso e a ser possivelmente copiada.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the provided list was in use at the time of call and therefore the &lt;paramref name=&quot;list&quot; /&gt; parameter reference was reset to be a copy. &lt;see langword=&quot;false&quot; /&gt; if the provided list was not in use, in which case the &lt;paramref name=&quot;list&quot; /&gt; parameter reference remains unaltered.">
        <see langword="true" /> se a lista fornecida estava em uso no momento da chamada e, portanto, a referência de parâmetro <paramref name="list" /> foi redefinida para ser uma cópia. <see langword="false" /> se a lista fornecida não estava em uso e, nesse caso, a referência de parâmetro <paramref name="list" /> permanece inalterada.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.Purge">
      <summary vsli:raw="Removes all entries from the list where the underlying reference target is a null reference.">Remove todas as entradas da lista em que o destino da referência subjacente é uma referência nula.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if any entries were purged; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Retornará <see langword="true" /> se as entradas foram limpadas, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.Remove(System.Windows.IWeakEventListener)">
      <summary vsli:raw="Removes the first occurrence of a listener item from the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Remove a primeira ocorrência de um item de ouvinte do <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <param name="listener" vsli:raw="The item to remove.">O item a ser removido.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.RemoveHandler(System.Delegate)">
      <summary vsli:raw="Removes an event handler from the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Remove um manipulador de eventos da <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <param name="handler" vsli:raw="The event handler to remove from the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">O manipulador de eventos a ser removido da <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</param>
    </member>
    <member name="T:System.Windows.WeakEventManager.ListenerList`1">
      <summary vsli:raw="Provides a type-safe collection list for storing listeners for a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt;. This class defines a type parameter for the event data that is used.">Fornece uma lista de coleção fortemente tipada para armazenar ouvintes de um <see cref="T:System.Windows.WeakEventManager" />. Essa classe define um parâmetro de tipo para os dados de evento que são usados.</summary>
      <typeparam name="TEventArgs" vsli:raw="The type that holds the event data.">O tipo que mantém os dados do evento.</typeparam>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList`1.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList`1&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Windows.WeakEventManager.ListenerList`1" />.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList`1.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList`1&quot; /&gt; class with the specified initial capacity.">Inicializa uma nova instância da classe <see cref="T:System.Windows.WeakEventManager.ListenerList`1" /> com a capacidade inicial especificada.</summary>
      <param name="capacity" vsli:raw="The number of items that should be allocated in the initial list.">O número de itens que devem ser alocados na lista inicial.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList`1.Clone">
      <summary vsli:raw="Creates a modifiable clone of this &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;, making deep copies of the values.">Cria um clone modificável desta <see cref="T:System.Windows.WeakEventManager.ListenerList" />, fazendo cópias em profundidade dos valores.</summary>
      <returns vsli:raw="A modifiable clone of the current object. The cloned object's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property will be &lt;see langword=&quot;false&quot; /&gt; even if the source's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property was &lt;see langword=&quot;true&quot; /&gt;.">Um clone modificável do objeto atual. A propriedade <see cref="P:System.Windows.Freezable.IsFrozen" /> do objeto clonado será <see langword="false" />, mesmo se a propriedade <see cref="P:System.Windows.Freezable.IsFrozen" /> da origem tiver sido <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList`1.DeliverEvent(System.Object,System.EventArgs,System.Type)">
      <summary vsli:raw="Delivers the event being managed to each listener in the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList`1&quot; /&gt;.">Fornece o evento que está sendo gerenciado para cada ouvinte de <see cref="T:System.Windows.WeakEventManager.ListenerList`1" />.</summary>
      <param name="sender" vsli:raw="The object that raised the event.">O objeto que gerencie o evento.</param>
      <param name="e" vsli:raw="An object that contains the event data.">Um objeto que contém os dados do evento.</param>
      <param name="managerType" vsli:raw="The type of the &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; that calls this method.">O tipo do <see cref="T:System.Windows.WeakEventManager" /> que chama esse método.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any of the listeners in the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList`1&quot; /&gt; refer to an object that has been garbage collected; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se um dos ouvintes na <see cref="T:System.Windows.WeakEventManager.ListenerList`1" /> se referir a um objeto que tenha sido coletado como lixo, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.NewListenerList">
      <summary vsli:raw="Returns a new object to contain listeners to an event.">Retorna um novo objeto para conter os ouvintes de um evento.</summary>
      <returns vsli:raw="A new object to contain listeners to an event.">Um novo objeto para conter os ouvintes de um evento.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ProtectedAddHandler(System.Object,System.Delegate)">
      <summary vsli:raw="Adds the specified delegate as an event handler of the specified source.">Adiciona o delegado especificado como um manipulador de eventos de origem especificada.</summary>
      <param name="source" vsli:raw="The source object that the handler delegate subscribes to.">O objeto de origem que o representante do manipulador assina.</param>
      <param name="handler" vsli:raw="The delegate that handles the event that is raised by &lt;paramref name=&quot;source&quot; /&gt;.">O delegado que manipula o evento gerado por <paramref name="source" />.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ProtectedAddListener(System.Object,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Adds the provided listener to the provided source for the event being managed.">Adiciona o ouvinte fornecido à origem fornecida para o evento que está sendo gerenciado.</summary>
      <param name="source" vsli:raw="The source to attach listeners to.">A origem à qual os ouvintes devem ser anexados.</param>
      <param name="listener" vsli:raw="The listening class (which must implement &lt;see cref=&quot;T:System.Windows.IWeakEventListener&quot; /&gt;).">A classe de escuta (que deve implementar <see cref="T:System.Windows.IWeakEventListener" />).</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ProtectedRemoveHandler(System.Object,System.Delegate)">
      <summary vsli:raw="Removes the previously added handler from the specified source.">Remove o manipulador adicionado anteriormente da origem especificada.</summary>
      <param name="source" vsli:raw="The source to remove the handler from.">A origem da qual o manipulador deve ser removido.</param>
      <param name="handler" vsli:raw="The delegate to remove from &lt;paramref name=&quot;source&quot; /&gt;.">O delegado a ser removido de <paramref name="source" />.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ProtectedRemoveListener(System.Object,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Removes a previously added listener from the provided source.">Remove um ouvinte adicionado anteriormente da origem fornecida.</summary>
      <param name="source" vsli:raw="The source to remove listeners from.">A origem da qual os ouvintes devem ser removidos.</param>
      <param name="listener" vsli:raw="The listening class (which must implement &lt;see cref=&quot;T:System.Windows.IWeakEventListener&quot; /&gt;).">A classe de escuta (que deve implementar <see cref="T:System.Windows.IWeakEventListener" />).</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.Purge(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Removes inactive listener entries from the data list for the provided source. Returns &lt;see langword=&quot;true&quot; /&gt; if some entries were actually removed from the list.">Remove entradas do ouvinte inativo da lista de dados para a origem fornecida. Retornará <see langword="true" /> se algumas entradas realmente tiverem sido removidas da lista.</summary>
      <param name="source" vsli:raw="The source for events being listened to.">A origem de eventos que está sendo ouvida.</param>
      <param name="data" vsli:raw="The data to check. This object is expected to be a &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt; implementation.">Os dados a serem verificados. Espera-se que este objeto seja uma implementação de <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</param>
      <param name="purgeAll" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to stop listening to &lt;paramref name=&quot;source&quot; /&gt;, and completely remove all entries from &lt;paramref name=&quot;data&quot; /&gt;.">O <see langword="true" /> para parar de escutar <paramref name="source" /> e remover completamente todas as entradas de <paramref name="data" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if some entries were actually removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se algumas entradas foram removidas, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.WeakEventManager.ReadLock">
      <summary vsli:raw="Establishes a read-lock on the underlying data table, and returns an &lt;see cref=&quot;T:System.IDisposable&quot; /&gt;.">Estabelece um bloqueio de leitura na tabela de dados subjacente e retorna um <see cref="T:System.IDisposable" />.</summary>
      <returns vsli:raw="An object that can be used to establish a lock on the data table members and then be appropriately disposed with a &lt;see langword=&quot;using&quot; /&gt; construct.">Um objeto que pode ser usado para estabelecer um bloqueio nos membros da tabela de dados e, em seguida, ser descartado <see langword="using" /> adequadamente com uma construção.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.Remove(System.Object)">
      <summary vsli:raw="Removes all listeners for the specified source.">Remove todos os ouvintes da origem especificada.</summary>
      <param name="source" vsli:raw="The source to remove listener information for.">A origem da qual as informações de ouvinte devem ser removidas.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ScheduleCleanup">
      <summary vsli:raw="Requests that a purge of unused entries in the underlying listener list be performed on a lower priority thread.">Solicita que uma limpeza de entradas não usadas na lista de ouvintes subjacente seja executada em um thread de prioridade mais baixa.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.SetCurrentManager(System.Type,System.Windows.WeakEventManager)">
      <summary vsli:raw="Sets the current manager for the specified manager type.">Define o gerenciador atual para o tipo de gerenciador especificado.</summary>
      <param name="managerType" vsli:raw="The type to set the new event manager.">O tipo para definir o novo gerenciador de eventos.</param>
      <param name="manager" vsli:raw="The new event manager.">O novo gerenciador de eventos.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.StartListening(System.Object)">
      <summary vsli:raw="When overridden in a derived class, starts listening for the event being managed. After the &lt;see cref=&quot;M:System.Windows.WeakEventManager.StartListening(System.Object)&quot; /&gt; method is first called, the manager should be in the state of calling &lt;see cref=&quot;M:System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)&quot; /&gt; or &lt;see cref=&quot;M:System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)&quot; /&gt; whenever the relevant event from the provided source is handled.">Quando substituído em uma classe derivada, inicia a escuta para o evento que está sendo gerenciado. Depois que o método <see cref="M:System.Windows.WeakEventManager.StartListening(System.Object)" /> for chamado pela primeira vez, o gerenciador deverá estar no estado de chamada de <see cref="M:System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)" /> ou de <see cref="M:System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)" /> sempre que o evento relevante da origem fornecida for manipulado.</summary>
      <param name="source" vsli:raw="The source to begin listening on.">A origem na qual a escuta deve ser iniciada.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.StopListening(System.Object)">
      <summary vsli:raw="When overridden in a derived class, stops listening on the provided source for the event being managed.">Quando substituído em uma classe derivada, interrompe a escuta da origem fornecida para o evento que está sendo gerenciado.</summary>
      <param name="source" vsli:raw="The source to stop listening on.">A origem cuja escuta deve ser interrompida.</param>
    </member>
    <member name="P:System.Windows.WeakEventManager.WriteLock">
      <summary vsli:raw="Establishes a write-lock on the underlying data table, and returns an &lt;see cref=&quot;T:System.IDisposable&quot; /&gt;.">Estabelece um bloqueio de gravação na tabela de dados subjacente e retorna um <see cref="T:System.IDisposable" />.</summary>
      <returns vsli:raw="An object that can be used to establish a lock on the data table members and then be appropriately disposed with a &lt;see langword=&quot;using&quot; /&gt; construct.">Um objeto que pode ser usado para estabelecer um bloqueio nos membros da tabela de dados e, em seguida, ser descartado <see langword="using" /> adequadamente com uma construção.</returns>
    </member>
    <member name="T:System.Windows.WeakEventManager`2">
      <summary vsli:raw="Provides a type-safe &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; that enables you to specify the event handler to use for the &quot;weak event listener&quot; pattern. This class defines a type parameter for the source of the event and a type parameter for the event data that is used.">Fornece um <see cref="T:System.Windows.WeakEventManager" /> fortemente tipado que permite especificar o manipulador de eventos a ser usado para o padrão "ouvinte de evento fraco". Essa classe define um parâmetro de tipo para a origem do evento e um parâmetro de tipo para os dados de evento que são usados.</summary>
      <typeparam name="TEventSource" vsli:raw="The type that raises the event.">O tipo que gera o evento.</typeparam>
      <typeparam name="TEventArgs" vsli:raw="The type that holds the event data.">O tipo que mantém os dados do evento.</typeparam>
    </member>
    <member name="M:System.Windows.WeakEventManager`2.AddHandler(`0,System.String,System.EventHandler{`1})">
      <summary vsli:raw="Adds the specified event handler to the specified event.">Adiciona o manipulador de eventos especificado ao evento especificado.</summary>
      <param name="source" vsli:raw="The source object that raises the specified event.">O objeto de origem que gera o evento especificado.</param>
      <param name="eventName" vsli:raw="The name of the event to subscribe to.">O nome do evento que será assinado.</param>
      <param name="handler" vsli:raw="The delegate that handles the event.">O delegado que manipula o evento.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager`2.NewListenerList">
      <summary vsli:raw="Returns a new object to contain listeners to an event.">Retorna um novo objeto para conter os ouvintes de um evento.</summary>
      <returns vsli:raw="A new object to contain listeners to an event.">Um novo objeto para conter os ouvintes de um evento.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager`2.RemoveHandler(`0,System.String,System.EventHandler{`1})">
      <summary vsli:raw="Removes the specified event handler from the specified event.">Remove o manipulador de eventos especificado do evento especificado.</summary>
      <param name="source" vsli:raw="The source object that raises the specified event.">O objeto de origem que gera o evento especificado.</param>
      <param name="eventName" vsli:raw="The name of the event to remove the handler from.">O nome do evento do qual o manipulador será removido.</param>
      <param name="handler" vsli:raw="The delegate to remove.">O representante a ser removido</param>
    </member>
    <member name="M:System.Windows.WeakEventManager`2.StartListening(System.Object)">
      <summary vsli:raw="Starts listening for the event on the specified object.">Inicia a escuta para o evento no objeto especificado.</summary>
      <param name="source" vsli:raw="The object to that raises the event.">O objeto que gera o evento.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager`2.StopListening(System.Object)">
      <summary vsli:raw="Stops listening for the event on the specified object.">Interrompe a escuta para o evento no objeto especificado.</summary>
      <param name="source" vsli:raw="The object to that raises the event.">O objeto que gera o evento.</param>
    </member>
  </members>
</doc>