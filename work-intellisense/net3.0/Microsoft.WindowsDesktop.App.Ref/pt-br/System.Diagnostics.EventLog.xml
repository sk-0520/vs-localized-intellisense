<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Diagnostics.EventLog</name>
  </assembly>
  <members>
    <member name="T:System.Diagnostics.EntryWrittenEventArgs">
      <summary>Fornece dados para o evento de <see cref="E:System.Diagnostics.EventLog.EntryWritten" /> .</summary>
    </member>
    <member name="M:System.Diagnostics.EntryWrittenEventArgs.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.EntryWrittenEventArgs" />.</summary>
    </member>
    <member name="M:System.Diagnostics.EntryWrittenEventArgs.#ctor(System.Diagnostics.EventLogEntry)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.EntryWrittenEventArgs" /> com a entrada de log de eventos especificado.</summary>
      <param name="entry">Um <see cref="T:System.Diagnostics.EventLogEntry" /> que representa a entrada que foi gravada.</param>
    </member>
    <member name="P:System.Diagnostics.EntryWrittenEventArgs.Entry">
      <summary>Obtém a entrada de log de eventos que foram gravados no log.</summary>
      <returns>Um <see cref="T:System.Diagnostics.EventLogEntry" /> que representa a entrada que foi gravada no log de eventos.</returns>
    </member>
    <member name="T:System.Diagnostics.EntryWrittenEventHandler">
      <summary>Representa o método que manipulará o evento <see cref="E:System.Diagnostics.EventLog.EntryWritten" /> de um <see cref="T:System.Diagnostics.EventLog" />.</summary>
      <param name="sender">A fonte do evento.</param>
      <param name="e">Um <see cref="T:System.Diagnostics.EntryWrittenEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventBookmark">
      <summary>Representa um espaço reservado (indicador) dentro de um fluxo de eventos. Você pode usar o espaço reservado para marcar uma posição e retornar a essa posição em um fluxo de eventos. Uma instância desse objeto pode ser obtida de um objeto <see cref="T:System.Diagnostics.Eventing.Reader.EventRecord" />, caso em que ele corresponde à posição desse registro de evento.</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventKeyword">
      <summary>Representa uma palavra-chave para um evento. Palavras-chave são definidas em um provedor de eventos e são usadas para agrupar os eventos com outros eventos semelhantes (com base no uso dos eventos).</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventKeyword.DisplayName">
      <summary>Obtém o nome localizado da palavra-chave.</summary>
      <returns>Uma cadeia de caracteres que contém um nome localizado para essa palavra-chave.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventKeyword.Name">
      <summary>Obtém o nome não localizado da palavra-chave.</summary>
      <returns>Uma cadeia de caracteres que contém o nome não localizado desta palavra-chave.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventKeyword.Value">
      <summary>Obtém o valor numérico associado à palavra-chave.</summary>
      <returns>O valor numérico associado à palavra-chave.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLevel">
      <summary>Contém um nível de evento que é definido em um provedor de eventos. O nível significa a severidade do evento.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLevel.DisplayName">
      <summary>Obtém o nome localizado do nível de evento. O nome descreve o nível de gravidade dos eventos para os quais este nível é usado.</summary>
      <returns>Uma cadeia de caracteres que contém o nome localizado para o nível de evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLevel.Name">
      <summary>Obtém o nome não localizado do nível de evento.</summary>
      <returns>Uma cadeia de caracteres que contém o nome não localizado do nível de evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLevel.Value">
      <summary>Obtém o valor numérico do nível do evento.</summary>
      <returns>O valor numérico do nível de evento.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration">
      <summary>Contém informações estáticas e definições de configuração para um log de eventos. Muitas das definições de configurações foram definidas pelo provedor de eventos que criou o log.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.#ctor(System.String)">
      <summary>Inicializa um novo objeto <see cref="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" /> especificando o log de eventos local para o qual obter informações e definições de configuração.</summary>
      <param name="logName">O nome do log de eventos local para o qual obter informações e definições de configuração.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.#ctor(System.String,System.Diagnostics.Eventing.Reader.EventLogSession)">
      <summary>Inicializa um novo objeto <see cref="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" /> especificando o nome do log para o qual obter informações e definições de configuração. O log pode estar no computador local ou em um computador remoto, dependendo da sessão de log de eventos especificada.</summary>
      <param name="logName">O nome do log de eventos para o qual obter informações e definições de configuração.</param>
      <param name="session">A sessão de log de eventos usada para determinar o serviço de log de eventos ao qual o log especificado pertence. A sessão está conectada ao serviço do log de eventos no computador local ou em um computador remoto.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose">
      <summary>Libera todos os recursos usados por este objeto.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose(System.Boolean)">
      <summary>Libera os recursos não gerenciados usados por este objeto e, opcionalmente, libera os recursos gerenciados.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.IsClassicLog">
      <summary>Obtém um valor que indica se o log de eventos é um log de eventos clássico. Um log de eventos clássico é aquele que contém seus eventos definidos em um arquivo .mc em vez de um manifesto (arquivo .xml) usado pelo provedor de eventos.</summary>
      <returns>
        <see langword="true" />Se o log de eventos for um log clássico; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.IsEnabled">
      <summary>Obtém ou define um valor que indica se o log de eventos está habilitado ou desabilitado. Em um log habilitado é possível registrar eventos, o que não é possível em um log desabilitado.</summary>
      <returns>
        <see langword="true" />Se o log estiver habilitado; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogFilePath">
      <summary>Obtém ou define o caminho do diretório de arquivo para o local do arquivo em que os eventos são armazenados para o log.</summary>
      <returns>Uma cadeia de caracteres que contém o caminho para o arquivo de log de eventos.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogIsolation">
      <summary>Obtém um valor <see cref="T:System.Diagnostics.Eventing.Reader.EventLogIsolation" /> que especifica se o log de eventos é um aplicativo, o sistema ou o log de eventos personalizado.</summary>
      <returns>Um dos valores de enumeração.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogMode">
      <summary>Obtém ou define um valor <see cref="T:System.Diagnostics.Eventing.Reader.EventLogMode" /> que determina como os eventos são tratados quando o log de eventos fica cheio.</summary>
      <returns>Um dos valores de enumeração.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogName">
      <summary>Obtém o nome do log de eventos.</summary>
      <returns>O nome do log de eventos.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogType">
      <summary>Obtém um valor <see cref="T:System.Diagnostics.Eventing.Reader.EventLogType" /> que determina o tipo do log de eventos.</summary>
      <returns>Um dos valores de enumeração.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.MaximumSizeInBytes">
      <summary>Obtém ou define o tamanho máximo, em bytes, que o arquivo de log de eventos pode ter. Quando o arquivo alcança esse tamanho máximo, ele é considerado cheio.</summary>
      <returns>O tamanho máximo, em bytes, que o arquivo de log de eventos tem permissão para ser.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.OwningProviderName">
      <summary>Obtém o nome do provedor de eventos que criou esse log de eventos.</summary>
      <returns>O nome do provedor de eventos que criou esse log de eventos.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderBufferSize">
      <summary>Obtém o tamanho do buffer que usa o provedor de eventos para publicar eventos no log.</summary>
      <returns>O tamanho do buffer que o provedor de eventos usa para publicar eventos no log. Pode ser <see langword="null" />.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderControlGuid">
      <summary>Obtém o GUID (identificador global exclusivo) do log de eventos se o log for um log de depuração. Se este log não for um log de depuração, esse valor será <see langword="null" />.</summary>
      <returns>Um valor de GUID ou <see langword="null" /> se o log não for um log de depuração.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderKeywords">
      <summary>Obtém ou define a máscara de palavra-chave usada pelo provedor de eventos.</summary>
      <returns>A máscara de palavra-chave usada pelo provedor de <see langword="null" /> eventos ou se o provedor de eventos não definiu nenhuma palavra-chave.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderLatency">
      <summary>Obtém o tempo de latência máximo usado pelo provedor de eventos ao publicar eventos no log.</summary>
      <returns>O tempo de latência máximo usado pelo provedor de eventos ao publicar eventos no log ou <see langword="null" /> se nenhum tempo de latência foi especificado pelo provedor de eventos.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderLevel">
      <summary>Obtém ou define o nível máximo de evento (que define a gravidade do evento) que tem permissão para ser registrado no log de eventos. Esse valor é definido pelo provedor de eventos.</summary>
      <returns>O nível máximo de evento que pode ser registrado no log de eventos ou <see langword="null" /> se o nível máximo de evento não foi definido no provedor de eventos.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderMaximumNumberOfBuffers">
      <summary>Obtém o número máximo de buffers usado pelo provedor de eventos ao publicar eventos no log de eventos.</summary>
      <returns>O número máximo de buffers usados pelo provedor de eventos para publicar eventos no log de eventos. Este valor pode ser <see langword="null" />.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderMinimumNumberOfBuffers">
      <summary>Obtém o número mínimo de buffers usados pelo provedor de eventos ao publicar eventos no log de eventos.</summary>
      <returns>O número mínimo de buffers usados pelo provedor de eventos para publicar eventos no log de eventos. Este valor pode ser <see langword="null" />.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderNames">
      <summary>Obtém uma coleção enumerável dos nomes de todos os provedores de eventos que podem publicar eventos nesse log de eventos.</summary>
      <returns>Uma coleção enumerável de cadeias de caracteres que contém os nomes de provedores de eventos.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges">
      <summary>Salva as definições de configuração que</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SecurityDescriptor">
      <summary>Obtém ou define o descritor de segurança para o log de eventos. O descritor de segurança define os usuários e grupos de usuários que podem ler e gravar no log de eventos.</summary>
      <returns>Uma cadeia de caracteres que contém o descritor de segurança para o log de eventos.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogException">
      <summary>Representa a classe base para todas as exceções que são geradas quando ocorre um erro ao ler informações relacionadas ao log de eventos.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.Eventing.Reader.EventLogException" />.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.Int32)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.Eventing.Reader.EventLogException" /> com o código de erro para a exceção.</summary>
      <param name="errorCode">O código de erro para o erro que ocorreu durante a leitura ou configuração das informações relacionadas ao log de eventos. Para obter mais informações e uma lista de códigos de erro relacionados ao log de eventos, confira http://go.microsoft.com/fwlink/?LinkId=82629.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.Eventing.Reader.EventLogException" /> com dados serializados.</summary>
      <param name="serializationInfo">O objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que mantém os dados de objeto serializados sobre a exceção que está sendo lançada.</param>
      <param name="streamingContext">O objeto <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contém informações contextuais sobre a fonte ou o destino.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.Eventing.Reader.EventLogException" /> especificando a mensagem de erro que descreve a exceção atual.</summary>
      <param name="message">A mensagem de erro que descreve a exceção atual.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.String,System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.Eventing.Reader.EventLogException" /> com uma mensagem de erro e exceção interna.</summary>
      <param name="message">A mensagem de erro que descreve a exceção atual.</param>
      <param name="innerException">A instância Exceção que causou a exceção atual.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Define o objeto SerializationInfo com informações sobre a exceção.</summary>
      <param name="info">O objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contém os dados de objeto serializados sobre a exceção que é gerada.</param>
      <param name="context">O objeto <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contém informações contextuais sobre a fonte ou o destino.</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogException.Message">
      <summary>Obtém a mensagem de erro que descreve a exceção atual.</summary>
      <returns>Retorna uma cadeia de caracteres que contém a mensagem de erro que descreve a exceção atual.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogInformation">
      <summary>Permite acessar as propriedades de tempo de execução dos logs de eventos e arquivos de log de eventos ativos. Essas propriedades incluem o número de eventos no log, o tamanho do log, um valor que determina se o log está cheio e a última vez que o log foi acessado ou usado para gravação.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.Attributes">
      <summary>Obtém os atributos de arquivo do arquivo de log associados ao log.</summary>
      <returns>Retorna um valor inteiro. Esse valor pode ser nulo.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.CreationTime">
      <summary>Obtém a hora em que o arquivo de log associado ao log de eventos foi criado.</summary>
      <returns>Retorna um objeto <see cref="T:System.DateTime" />. Esse valor pode ser nulo.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.FileSize">
      <summary>Obtém o tamanho do arquivo, em bytes, associado ao log de eventos.</summary>
      <returns>Retorna um valor longo.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.IsLogFull">
      <summary>Obtém um valor booliano que determina se o arquivo de log atingiu seu tamanho máximo (o log está cheio).</summary>
      <returns>Retorna <see langword="true" /> se o log está cheio e retorna <see langword="false" /> se o log não está cheio.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.LastAccessTime">
      <summary>Obtém a última vez que o arquivo de log associado ao log de eventos foi acessado.</summary>
      <returns>Retorna um objeto <see cref="T:System.DateTime" />. Esse valor pode ser nulo.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.LastWriteTime">
      <summary>Obtém a última vez que dados foram gravados no arquivo de log associado ao log de eventos.</summary>
      <returns>Retorna um objeto <see cref="T:System.DateTime" />. Esse valor pode ser nulo.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.OldestRecordNumber">
      <summary>Obtém o número de registros de evento mais antigos no log de eventos.</summary>
      <returns>Retorna um valor longo que representa o número do registro de evento mais antigo no log de eventos. Esse valor pode ser nulo.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.RecordCount">
      <summary>Obtém o número de registros de evento no log de eventos.</summary>
      <returns>Retorna um valor longo que representa o número de registros de eventos no log de eventos. Esse valor pode ser nulo.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException">
      <summary>Representa a exceção gerada quando um provedor de eventos publica dados inválidos em um evento.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException" />.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException" /> com dados serializados.</summary>
      <param name="serializationInfo">O objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contém os dados de objeto serializados sobre a exceção que é gerada.</param>
      <param name="streamingContext">O objeto <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contém informações contextuais sobre a fonte ou o destino.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException" /> especificando a mensagem de erro que descreve a exceção atual.</summary>
      <param name="message">A mensagem de erro que descreve a exceção atual.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor(System.String,System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException" /> com uma mensagem de erro e exceção interna.</summary>
      <param name="message">A mensagem de erro que descreve a exceção atual.</param>
      <param name="innerException">A instância Exceção que causou a exceção atual.</param>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogIsolation">
      <summary>Define as permissões de acesso padrão para o log de eventos. Os valores de Aplicativo e do Sistema indicam que o log compartilha a ACL (lista de controle de acesso) com o log do Windows (os logs de eventos de Aplicativo ou Sistema) e compartilha a sessão de ETW (Rastreamento de Eventos para Windows) com outros logs do mesmo isolamento. Todos os canais com isolamento personalizado usam uma sessão ETW privada.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogIsolation.Application">
      <summary>O log compartilha a lista de controle de acesso com o log de eventos do Aplicativo e compartilha a sessão ETW com outros logs que têm o isolamento do Aplicativo.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogIsolation.Custom">
      <summary>O log de eventos é um log de eventos personalizado que usa sua própria sessão ETW privada.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogIsolation.System">
      <summary>O log compartilha a lista de controle de acesso com o log de eventos do Sistema e compartilha a sessão ETW com outros logs que têm o isolamento do Sistema.</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogLink">
      <summary>Representa um link entre um provedor de eventos e um log de eventos no qual o provedor publica os eventos. Não é possível criar uma instância para esse objeto.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogLink.DisplayName">
      <summary>Obtém o nome localizado do log de evento.</summary>
      <returns>Retorna uma cadeia de caracteres que contém o nome localizado do log de eventos.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogLink.IsImported">
      <summary>Obtém um valor booliano que determina se o log de eventos é importado, em vez de definido no provedor de eventos. Um log de eventos importado é definido em um provedor diferente.</summary>
      <returns>Retorna <see langword="true" /> se o log de eventos é importado pelo provedor de eventos <see langword="false" /> e retorna se o log de eventos não é importado pelo provedor de eventos.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogLink.LogName">
      <summary>Obtém o nome não localizado do log de eventos associado a este objeto.</summary>
      <returns>Retorna uma cadeia de caracteres que contém o nome não localizado do log de eventos associado a esse objeto.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogMode">
      <summary>Determina o comportamento do serviço de log de eventos que manipula um log de eventos quando o log atingir seu tamanho máximo permitido (quando o log de eventos estiver cheio).</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogMode.AutoBackup">
      <summary>Arquive o log quando estiver cheio, não substitua os eventos. O log será arquivado automaticamente quando necessário. Nenhum evento foi substituído.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogMode.Circular">
      <summary>Novos eventos continuam a ser armazenados quando o arquivo de log está cheio. Cada novo evento de entrada substitui o evento mais antigo no log.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogMode.Retain">
      <summary>Não substitua eventos. Limpe o log manualmente em vez de automaticamente.</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException">
      <summary>Representa a exceção que é gerada quando um log de eventos solicitado (geralmente especificado pelo nome do log de eventos ou o caminho para o arquivo de log de eventos) não existe.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException" />.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException" /> com dados serializados.</summary>
      <param name="serializationInfo">O objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contém os dados de objeto serializados sobre a exceção que é gerada.</param>
      <param name="streamingContext">O objeto <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contém informações contextuais sobre a fonte ou o destino.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException" /> especificando a mensagem de erro que descreve a exceção atual.</summary>
      <param name="message">A mensagem de erro que descreve a exceção atual.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException" /> com uma mensagem de erro e exceção interna.</summary>
      <param name="message">A mensagem de erro que descreve a exceção atual.</param>
      <param name="innerException">A instância Exceção que causou a exceção atual.</param>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogPropertySelector">
      <summary>Contém uma matriz de cadeias de caracteres que representa as consultas XPath para elementos na representação XML de um evento, que se baseia no Esquema de Evento. As consultas neste objeto são usadas para extrair valores de evento.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogPropertySelector.#ctor(System.Collections.Generic.IEnumerable{System.String})">
      <summary>Inicializa uma nova instância de classe <see cref="T:System.Diagnostics.Eventing.Reader.EventLogPropertySelector" />.</summary>
      <param name="propertyQueries">Consultas XPath usadas para extrair valores da representação XML do evento.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogPropertySelector.Dispose">
      <summary>Libera todos os recursos usados por este objeto.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogPropertySelector.Dispose(System.Boolean)">
      <summary>Libera os recursos não gerenciados usados por este objeto e, opcionalmente, libera os recursos gerenciados.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException">
      <summary>Representa a exceção que é gerada quando um nome do provedor de eventos especificado faz referência a um provedor de eventos desabilitado. Um provedor de eventos desabilitado não pode publicar eventos.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException" />.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException" /> com dados serializados.</summary>
      <param name="serializationInfo">O objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contém os dados de objeto serializados sobre a exceção que é gerada.</param>
      <param name="streamingContext">O objeto <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contém informações contextuais sobre a fonte ou o destino.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException" /> especificando a mensagem de erro que descreve a exceção atual.</summary>
      <param name="message">A mensagem de erro que descreve a exceção atual.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor(System.String,System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException" /> com uma mensagem de erro e exceção interna.</summary>
      <param name="message">A mensagem de erro que descreve a exceção atual.</param>
      <param name="innerException">A instância Exceção que causou a exceção atual.</param>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogQuery">
      <summary>Representa uma consulta de eventos em um log de eventos e as configurações que definem como e em qual computador a consulta é executada.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.Eventing.Reader.EventLogQuery" /> especificando o destino da consulta. O destino pode ser um log de eventos ou um arquivo de log ativo.</summary>
      <param name="path">O nome do log de eventos a ser consultado ou o caminho para o arquivo de log de eventos a ser consultado.</param>
      <param name="pathType">Especifica se a cadeia de caracteres usada no parâmetro de caminho especifica o nome de um log de eventos ou o caminho para um arquivo de log de eventos.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.Eventing.Reader.EventLogQuery" /> especificando o destino da consulta e a consulta de evento. O destino pode ser um log de eventos ou um arquivo de log ativo.</summary>
      <param name="path">O nome do log de eventos a ser consultado ou o caminho para o arquivo de log de eventos a ser consultado.</param>
      <param name="pathType">Especifica se a cadeia de caracteres usada no parâmetro de caminho especifica o nome de um log de eventos ou o caminho para um arquivo de log de eventos.</param>
      <param name="query">A consulta de evento usada para recuperar eventos que correspondem às condições da consulta.</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogQuery.ReverseDirection">
      <summary>Obtém ou define o valor booliano que determina se é necessário ler eventos do evento mais recente em um log de eventos para o evento mais antigo no log.</summary>
      <returns>Retorna <see langword="true" /> se os eventos são lidos do evento mais recente no log para o evento mais antigo e <see langword="false" /> retorna se os eventos são lidos a partir do evento mais antigo no log para o evento mais recente.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogQuery.Session">
      <summary>Obtém ou define a sessão que acessa o serviço do Log de Eventos no computador local ou em um computador remoto. Esse objeto pode ser configurado para acessar um log de eventos remoto com a criação de um objeto <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" /> ou um objeto <see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" /> com este objeto <see cref="T:System.Diagnostics.Eventing.Reader.EventLogQuery" />.</summary>
      <returns>Retorna um objeto <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" />.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogQuery.TolerateQueryErrors">
      <summary>Obtém ou define um valor booliano que determina se esta consulta continuará recuperar eventos quando a consulta tem um erro.</summary>
      <returns>
        <see langword="true" />indica que a consulta continuará a recuperar eventos, mesmo se a consulta falhar para alguns logs e <see langword="false" /> indicar que essa consulta não continuará a recuperar eventos quando a consulta falhar.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogReader">
      <summary>Permite que você leia os eventos de um log de eventos com base em uma consulta de evento. Os eventos que são lidos por esse objeto são retornados como objetos de <see cref="T:System.Diagnostics.Eventing.Reader.EventRecord" />.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" /> especificando uma consulta de evento.</summary>
      <param name="eventQuery">A consulta de evento usada para recuperar eventos.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" /> especificando uma consulta de evento e um indicador que é usado como posição inicial da consulta.</summary>
      <param name="eventQuery">A consulta de evento usada para recuperar eventos.</param>
      <param name="bookmark">O indicador (espaço reservado) usado como uma posição inicial no log de eventos ou fluxo de eventos. Somente eventos registrados em log após o evento do indicador serão retornados pela consulta.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" /> especificando um log de eventos ativo do qual recuperar os eventos.</summary>
      <param name="path">O nome do log de eventos do qual recuperar eventos.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" /> especificando o nome do log de eventos do qual recuperar eventos ou o caminho para um arquivo de log do qual recuperar eventos.</summary>
      <param name="path">O nome do log de eventos do qual recuperar eventos ou o caminho para o arquivo de log de eventos do qual recuperar eventos.</param>
      <param name="pathType">Especifica se a cadeia de caracteres usada no parâmetro de caminho especifica o nome de um log de eventos ou o caminho para um arquivo de log de eventos.</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogReader.BatchSize">
      <summary>Obtém ou define o número de eventos recuperados do fluxo de eventos em cada operação de leitura.</summary>
      <returns>Retorna um valor inteiro.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.CancelReading">
      <summary>Cancela a operação de consulta atual.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.Dispose">
      <summary>Libera todos os recursos usados por este objeto.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.Dispose(System.Boolean)">
      <summary>Libera os recursos não gerenciados usados por este objeto e, opcionalmente, libera os recursos gerenciados.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogReader.LogStatus">
      <summary>Obtém o status de cada log de eventos ou o arquivo de log associado à consulta de evento nesse objeto.</summary>
      <returns>Retorna uma lista de objetos <see cref="T:System.Diagnostics.Eventing.Reader.EventLogStatus" /> que contêm informações de status sobre um log de eventos associado à consulta de evento nesse objeto.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent">
      <summary>Lê o próximo evento retornado da consulta de evento neste objeto.</summary>
      <returns>Retorna um objeto <see cref="T:System.Diagnostics.Eventing.Reader.EventRecord" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent(System.TimeSpan)">
      <summary>Lê o próximo evento retornado da consulta de evento neste objeto.</summary>
      <param name="timeout">O tempo máximo para permitir que a operação de leitura seja executada antes de cancelá-la.</param>
      <returns>Retorna um objeto <see cref="T:System.Diagnostics.Eventing.Reader.EventRecord" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark)">
      <summary>Altera a posição no fluxo de eventos da qual o próximo evento lido virá especificando um evento de indicador. Nenhum evento registrado antes do evento do indicador ser recuperado.</summary>
      <param name="bookmark">O indicador (espaço reservado) usado como uma posição inicial no log de eventos ou fluxo de eventos. Somente eventos que foram registrados em log após o evento do indicador serão retornados pela consulta.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark,System.Int64)">
      <summary>Altera a posição no fluxo de eventos da qual o próximo evento lido virá especificando um evento de indicador e um número de eventos de deslocamento do indicador. Nenhum evento registrado antes do indicador e o deslocamento serem recuperados.</summary>
      <param name="bookmark">O indicador (espaço reservado) usado como uma posição inicial no log de eventos ou fluxo de eventos. Somente eventos que foram registrados em log após o evento do indicador serão retornados pela consulta.</param>
      <param name="offset">O número de eventos de deslocamento para alterar a posição do indicador.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.IO.SeekOrigin,System.Int64)">
      <summary>Altera a posição no fluxo de eventos da qual o próximo evento lido virá especificando uma posição inicial e um deslocamento dela. Nenhum evento registrado antes da posição inicial e o deslocamento serem recuperados.</summary>
      <param name="origin">Um valor da enumeração <see cref="T:System.IO.SeekOrigin" /> define onde no fluxo de eventos a consulta de eventos deve ser iniciada.</param>
      <param name="offset">O número de eventos de deslocamento a serem adicionados à origem.</param>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogReadingException">
      <summary>Representa uma exceção que é gerada quando ocorre um erro durante a leitura, consulta ou assinatura dos eventos em um log de eventos.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReadingException" />.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReadingException" /> com dados serializados.</summary>
      <param name="serializationInfo">O objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contém os dados de objeto serializados sobre a exceção que é gerada.</param>
      <param name="streamingContext">O objeto <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contém informações contextuais sobre a fonte ou o destino.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReadingException" /> especificando a mensagem de erro que descreve a exceção atual.</summary>
      <param name="message">A mensagem de erro que descreve a exceção atual.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor(System.String,System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReadingException" /> com uma mensagem de erro e exceção interna.</summary>
      <param name="message">A mensagem de erro que descreve a exceção atual.</param>
      <param name="innerException">A instância Exceção que causou a exceção atual.</param>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogRecord">
      <summary>Contém as propriedades de uma instância de evento para um evento que é recebido de um objeto <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" />. As propriedades do evento fornecem informações sobre o evento como o nome do computador em que o evento foi registrado e a hora em que o evento foi criado.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ActivityId">
      <summary>Obtém um GUID (identificador global exclusivo) para a atividade no processo para o qual um evento está envolvido. Isso permite aos consumidores agrupar atividades relacionadas.</summary>
      <returns>Retorna um valor GUID.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Bookmark">
      <summary>Obtém um espaço reservado (indicador) que corresponde a este evento. Isso pode ser usado como um espaço reservado em um fluxo de eventos.</summary>
      <returns>Retorna um objeto <see cref="T:System.Diagnostics.Eventing.Reader.EventBookmark" />.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ContainerLog">
      <summary>Obtém o nome do log de eventos ou arquivo de log de eventos no qual o evento é armazenado.</summary>
      <returns>Retorna uma cadeia de caracteres que contém o nome do log de eventos ou o arquivo de log de eventos no qual o evento é armazenado.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogRecord.Dispose(System.Boolean)">
      <summary>Libera os recursos não gerenciados usados por este objeto e, opcionalmente, libera os recursos gerenciados.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogRecord.FormatDescription">
      <summary>Obtém a mensagem de evento na localidade atual.</summary>
      <returns>Retorna uma cadeia de caracteres que contém a mensagem de evento na localidade atual.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogRecord.FormatDescription(System.Collections.Generic.IEnumerable{System.Object})">
      <summary>Obtém a mensagem de evento substituindo variáveis na mensagem pelos valores especificados.</summary>
      <param name="values">Os valores usados para substituir variáveis na mensagem do evento. Variáveis são representadas por %n, em que n é um número.</param>
      <returns>Retorna uma cadeia de caracteres que contém a mensagem de evento na localidade atual.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogRecord.GetPropertyValues(System.Diagnostics.Eventing.Reader.EventLogPropertySelector)">
      <summary>Obtém a enumeração dos valores das propriedades do evento fornecido pelo usuário ou os resultados de dados com base em XPath, se o evento tiver representação XML.</summary>
      <param name="propertySelector">Seleciona os valores de propriedade a serem retornados.</param>
      <returns>Retorna uma lista de objetos.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Id">
      <summary>Obtém o identificador para este evento. Todos os eventos com esse valor de identificador representam o mesmo tipo de evento.</summary>
      <returns>Retorna um valor inteiro. Esse valor pode ser nulo.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Keywords">
      <summary>Obtém a máscara de palavra-chave do evento. Obtenha o valor da propriedade <see cref="P:System.Diagnostics.Eventing.Reader.EventLogRecord.KeywordsDisplayNames" /> para obter o nome das palavras-chave usadas nesta máscara.</summary>
      <returns>Retorna um valor longo. Esse valor pode ser nulo.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.KeywordsDisplayNames">
      <summary>Obtém os nomes de exibição das palavras-chave usadas na máscara de palavra-chave para este evento.</summary>
      <returns>Retorna uma coleção enumerável de cadeias de caracteres que contêm os nomes de exibição das palavras-chave usadas na máscara de palavra-chaves para esse evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Level">
      <summary>Obtém o nível do evento. O nível significa a severidade do evento. Para o nome do nível, obtenha o valor da propriedade <see cref="P:System.Diagnostics.Eventing.Reader.EventLogRecord.LevelDisplayName" />.</summary>
      <returns>Retorna um valor de byte. Esse valor pode ser nulo.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.LevelDisplayName">
      <summary>Obtém o nome de exibição do nível para este evento.</summary>
      <returns>Retorna uma cadeia de caracteres que contém o nome para exibição do nível deste evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.LogName">
      <summary>Obtém o nome do log de eventos em que esse evento é registrado.</summary>
      <returns>Retorna uma cadeia de caracteres que contém um nome do log de eventos que contém esse evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.MachineName">
      <summary>Obtém o nome do computador no qual esse evento foi registrado.</summary>
      <returns>Retorna uma cadeia de caracteres que contém o nome do computador no qual esse evento foi registrado.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.MatchedQueryIds">
      <summary>Obtém uma lista de identificadores de consulta que corresponde a esse evento. Esse evento corresponde a uma consulta se a consulta o retornaria.</summary>
      <returns>Retorna uma coleção enumerável de valores inteiros.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Opcode">
      <summary>Obtém o opcode do evento. O opcode define um valor numérico que identifica a atividade ou um ponto dentro de uma atividade que o aplicativo estava executando quando disparou o evento. Para o nome do opcode, obtenha o valor da propriedade <see cref="P:System.Diagnostics.Eventing.Reader.EventLogRecord.OpcodeDisplayName" />.</summary>
      <returns>Retorna um valor curto. Esse valor pode ser nulo.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.OpcodeDisplayName">
      <summary>Obtém o nome de exibição do opcode para este evento.</summary>
      <returns>Retorna uma cadeia de caracteres que contém o nome de exibição do opcode para esse evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ProcessId">
      <summary>Obtém o identificador de processo para o provedor de eventos que registrou esse evento.</summary>
      <returns>Retorna um valor inteiro. Esse valor pode ser nulo.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Properties">
      <summary>Obtém as propriedades do evento fornecidas pelo usuário.</summary>
      <returns>Retorna uma lista de objetos <see cref="T:System.Diagnostics.Eventing.Reader.EventProperty" />.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ProviderId">
      <summary>Obtém o identificador global exclusivo (GUID) do provedor de eventos que publicou este evento.</summary>
      <returns>Retorna um valor GUID. Esse valor pode ser nulo.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ProviderName">
      <summary>Obtém o nome do provedor de eventos que publicou esse evento.</summary>
      <returns>Retorna uma cadeia de caracteres que contém o nome do provedor de eventos que publicou este evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Qualifiers">
      <summary>Obtém os números do qualificador que são usados para a identificação de evento.</summary>
      <returns>Retorna um valor inteiro. Esse valor pode ser nulo.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.RecordId">
      <summary>Obtém o identificador de registro de eventos do evento no log.</summary>
      <returns>Retorna um valor longo. Esse valor pode ser nulo.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.RelatedActivityId">
      <summary>Obtém um GUID (identificador global exclusivo) para uma atividade relacionada em um processo para o qual um evento está envolvido.</summary>
      <returns>Retorna um valor GUID. Esse valor pode ser nulo.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Task">
      <summary>Obtém um identificador de tarefa para uma parte de um aplicativo ou um componente que publica um evento. Uma tarefa é um valor de 16 bits com 16 valores principais reservados. Esse tipo permite que qualquer valor entre 0x0000 e 0xffef seja usado. Para o nome da tarefa, obtenha o valor da propriedade <see cref="P:System.Diagnostics.Eventing.Reader.EventLogRecord.TaskDisplayName" />.</summary>
      <returns>Retorna um valor inteiro. Esse valor pode ser nulo.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.TaskDisplayName">
      <summary>Obtém o nome de exibição da tarefa para o evento.</summary>
      <returns>Retorna uma cadeia de caracteres que contém o nome de exibição da tarefa para o evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ThreadId">
      <summary>Obtém o identificador de thread para que o thread no qual o provedor de eventos está sendo executado.</summary>
      <returns>Retorna um valor inteiro. Esse valor pode ser nulo.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.TimeCreated">
      <summary>Obtém a hora, no formato <see cref="T:System.DateTime" />, em que o evento foi criado.</summary>
      <returns>Retorna um valor <see cref="T:System.DateTime" />. O valor pode ser nulo.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogRecord.ToXml">
      <summary>Obtém uma representação XML do evento. Todas as propriedades do evento são representadas no XML evento. O XML está em conformidade com o esquema de evento.</summary>
      <returns>Retorna uma cadeia de caracteres que contém a representação XML do evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.UserId">
      <summary>Obtém o descritor de segurança do usuário cujo contexto é usado para publicar o evento.</summary>
      <returns>Retorna um valor <see cref="T:System.Security.Principal.SecurityIdentifier" />.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Version">
      <summary>Obtém o número de versão do evento.</summary>
      <returns>Retorna um valor de byte. Esse valor pode ser nulo.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogSession">
      <summary>Usado para acessar o serviço de Log de Eventos no computador local ou em um computador remoto para que você possa gerenciar e reunir informações sobre os logs de evento e os provedores de evento no computador.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor">
      <summary>Inicializa um novo objeto <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" /> e estabelece uma conexão com o serviço de Log de Eventos.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor(System.String)">
      <summary>Inicializa um novo objeto <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" /> e estabelece uma conexão com o serviço de Log de Eventos no computador especificado. As credenciais (nome de usuário e senha) do usuário que chama o método é usado para as credenciais para acessar o computador remoto.</summary>
      <param name="server">O nome do computador no qual se conectar ao serviço de Log de Eventos.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor(System.String,System.String,System.String,System.Security.SecureString,System.Diagnostics.Eventing.Reader.SessionAuthentication)">
      <summary>Inicializa um novo objeto <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" /> e estabelece uma conexão com o serviço de Log de Eventos no computador especificado. As credenciais especificadas (nome de usuário e senha) são usadas acessar o computador remoto.</summary>
      <param name="server">O nome do computador no qual se conectar ao serviço de Log de Eventos.</param>
      <param name="domain">O domínio do usuário especificado.</param>
      <param name="user">O nome de usuário usado para conectar-se ao computador remoto.</param>
      <param name="password">A senha usada para a conexão com o computador remoto.</param>
      <param name="logOnType">O tipo de conexão a ser usado para a conexão com o computador remoto.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.CancelCurrentOperations">
      <summary>Cancela as operações (como ler ou inscrever-se em um log de eventos) ativas no momento para o serviço de Log de Eventos ao qual esse objeto de sessão está conectado.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String)">
      <summary>Limpa os eventos do log de eventos especificado.</summary>
      <param name="logName">O nome do log de eventos do qual limpar todos os eventos.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String,System.String)">
      <summary>Limpa eventos do log de eventos especificado e salva os eventos limpos para o arquivo especificado.</summary>
      <param name="logName">O nome do log de eventos do qual limpar todos os eventos.</param>
      <param name="backupPath">O caminho para o arquivo no qual os eventos desmarcados serão salvos. O arquivo deve terminar em .evtx.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.Dispose">
      <summary>Libera todos os recursos usados por este objeto.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.Dispose(System.Boolean)">
      <summary>Libera os recursos não gerenciados usados por este objeto e, opcionalmente, libera os recursos gerenciados.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)">
      <summary>Exporta eventos para um arquivo de log externo. Os eventos são armazenados sem as mensagens de eventos.</summary>
      <param name="path">O nome do log de eventos do qual exportar eventos ou o caminho para o arquivo de log de eventos do qual exportar eventos.</param>
      <param name="pathType">Especifica se a cadeia de caracteres usada no parâmetro de caminho especifica o nome de um log de eventos ou o caminho para um arquivo de log de eventos.</param>
      <param name="query">A consulta usada para selecionar os eventos a serem exportados.  Somente os eventos retornados da consulta serão exportados.</param>
      <param name="targetFilePath">O caminho para o arquivo de log (termina em .evtx) no qual os eventos exportados serão armazenados depois que esse método for executado.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean)">
      <summary>Exporta eventos para um arquivo de log externo. Um sinalizador pode ser definido para indicar que o método continuará a exportar eventos, mesmo se a consulta especificada falhar para alguns logs de eventos. Os eventos são armazenados sem as mensagens de eventos.</summary>
      <param name="path">O nome do log de eventos do qual exportar eventos ou o caminho para o arquivo de log de eventos do qual exportar eventos.</param>
      <param name="pathType">Especifica se a cadeia de caracteres usada no parâmetro de caminho especifica o nome de um log de eventos ou o caminho para um arquivo de log de eventos.</param>
      <param name="query">A consulta usada para selecionar os eventos a serem exportados. Somente os eventos retornados da consulta serão exportados.</param>
      <param name="targetFilePath">O caminho para o arquivo de log (termina em .evtx) no qual os eventos exportados serão armazenados depois que esse método for executado.</param>
      <param name="tolerateQueryErrors">
        <see langword="true" /> indica que o método continuará exportando eventos mesmo se a consulta especificada falhar para alguns logs e <see langword="false" /> indica que esse método não continuará a exportar eventos quando a consulta especificada falhar.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)">
      <summary>Exporta os eventos e suas mensagens em um arquivo de log externo.</summary>
      <param name="path">O nome do log de eventos do qual exportar eventos ou o caminho para o arquivo de log de eventos do qual exportar eventos.</param>
      <param name="pathType">Especifica se a cadeia de caracteres usada no parâmetro de caminho especifica o nome de um log de eventos ou o caminho para um arquivo de log de eventos.</param>
      <param name="query">A consulta usada para selecionar os eventos a serem exportados.  Somente os eventos retornados da consulta serão exportados.</param>
      <param name="targetFilePath">O caminho para o arquivo de log (termina em .evtx) no qual os eventos exportados serão armazenados depois que esse método for executado.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean,System.Globalization.CultureInfo)">
      <summary>Exporta os eventos e suas mensagens em um arquivo de log externo. Um sinalizador pode ser definido para indicar que o método continuará a exportar eventos, mesmo se a consulta especificada falhar para alguns logs de eventos. As mensagens de evento serão exportadas no idioma especificado.</summary>
      <param name="path">O nome do log de eventos do qual exportar eventos ou o caminho para o arquivo de log de eventos do qual exportar eventos.</param>
      <param name="pathType">Especifica se a cadeia de caracteres usada no parâmetro de caminho especifica o nome de um log de eventos ou o caminho para um arquivo de log de eventos.</param>
      <param name="query">A consulta usada para selecionar os eventos a serem exportados.  Somente os eventos retornados da consulta serão exportados.</param>
      <param name="targetFilePath">O caminho para o arquivo de log (termina em .evtx) no qual os eventos exportados serão armazenados depois que esse método for executado.</param>
      <param name="tolerateQueryErrors">
        <see langword="true" /> indica que o método continuará exportando eventos mesmo se a consulta especificada falhar para alguns logs e <see langword="false" /> indica que esse método não continuará a exportar eventos quando a consulta especificada falhar.</param>
      <param name="targetCultureInfo">A cultura que especifica em que idioma as mensagens de eventos exportadas estarão.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.GetLogInformation(System.String,System.Diagnostics.Eventing.Reader.PathType)">
      <summary>Obtém um objeto que contém informações de tempo de execução do log de eventos especificado.</summary>
      <param name="logName">O nome do log de eventos sobre o qual obter informações ou o caminho para o arquivo de log de eventos sobre o qual obter informações.</param>
      <param name="pathType">Especifica se a cadeia de caracteres usada no parâmetro de caminho especifica o nome de um log de eventos ou o caminho para um arquivo de log de eventos.</param>
      <returns>Um objeto que contém informações sobre o log especificado.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.GetLogNames">
      <summary>Obtém uma coleção enumerável de todos os nomes de log de eventos que são registrados com o serviço de Log de Eventos.</summary>
      <returns>Uma coleção enumerável de cadeias de caracteres que contém os nomes de logs de eventos.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.GetProviderNames">
      <summary>Obtém uma coleção enumerável de todos os nomes de provedor de eventos que são registrados com o serviço de Log de Eventos. Um provedor de eventos é um aplicativo que publica os eventos em um log de evento.</summary>
      <returns>Uma coleção enumerável de cadeias de caracteres que contém os nomes de provedores de eventos.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogSession.GlobalSession">
      <summary>Obtém um objeto de sessão predefinido estático que está conectado ao serviço de Log de Eventos no computador local.</summary>
      <returns>Um objeto de sessão predefinido que está conectado ao serviço de log de eventos no computador local.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogStatus">
      <summary>Contém o código de status ou de erro para um log de eventos específico. Esse status pode ser usado para determinar se o log de eventos está disponível para uma operação.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogStatus.LogName">
      <summary>Obtém o nome do log de eventos para o qual o código de status é obtido.</summary>
      <returns>O nome do log de eventos para o qual o código de status é obtido.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogStatus.StatusCode">
      <summary>Obtém o código de status ou de erro para o log de eventos. Este status ou erro é o resultado de uma operação de leitura ou de assinatura no log de eventos.</summary>
      <returns>O código de status ou o código de erro para o log de eventos.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogType">
      <summary>Define o tipo de eventos que são registrados em um log de eventos. Cada log só pode conter um tipo de evento.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogType.Administrative">
      <summary>Esses eventos destinam-se primariamente aos usuários finais, administradores e suporte. Os eventos que são encontrados nos logs de tipo Administrativo indicam um problema e uma solução bem definida que um administrador pode efetuar. Um exemplo de um evento administrativo é um evento que ocorre quando ocorre uma falha ao conectar um aplicativo a uma impressora.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogType.Analytical">
      <summary>Eventos em um log de eventos analítico são publicados em grande volume. Eles descrevem a operação do programa e indicam os problemas que não podem ser tratados por intervenção do usuário.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogType.Debug">
      <summary>Eventos em um log de eventos do tipo de depuração são usados somente pelos desenvolvedores para diagnosticar um problema de depuração.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogType.Operational">
      <summary>Eventos em um log de eventos do tipo operacional são usados para analisar e diagnosticar um problema ou uma ocorrência. Eles podem ser usados para disparar ferramentas ou tarefas com base no problema ou na ocorrência. Um exemplo de evento operacional é um evento que ocorre quando uma impressora é adicionada ou removida de um sistema.</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogWatcher">
      <summary>Permite que você assine eventos recebidos. Sempre que um evento desejado for publicado em um log de eventos, o evento <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> será gerado e o método que manipula esse evento será executado.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" /> especificando uma consulta de evento.</summary>
      <param name="eventQuery">Especifica uma consulta para a assinatura do evento. Quando é registrado um evento que corresponde aos critérios expressos na consulta, o evento <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> é acionado.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" /> especificando uma consulta de evento e um indicador que é usado como posição inicial da consulta.</summary>
      <param name="eventQuery">Especifica uma consulta para a assinatura do evento. Quando é registrado um evento que corresponde aos critérios expressos na consulta, o evento <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> é acionado.</param>
      <param name="bookmark">O indicador (espaço reservado) usado como uma posição inicial no log de eventos ou fluxo de eventos. Somente eventos que foram registrados em log após o evento do indicador serão retornados pela consulta.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark,System.Boolean)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" /> especificando uma consulta de evento, um indicador que é usado como a posição inicial da consulta e um valor booliano que determina se é necessário ler os eventos que já existem no log de eventos.</summary>
      <param name="eventQuery">Especifica uma consulta para a assinatura do evento. Quando é registrado um evento que corresponde aos critérios expressos na consulta, o evento <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> é acionado.</param>
      <param name="bookmark">O indicador (espaço reservado) usado como uma posição inicial no log de eventos ou fluxo de eventos. Somente eventos que foram registrados em log após o evento do indicador serão retornados pela consulta.</param>
      <param name="readExistingEvents">Um valor booliano que determina se os eventos que já existem no log de eventos devem ser lidos. Se esse valor for <see langword="true" />, os eventos existentes serão lidos e se esse valor for <see langword="false" />, eles não serão lidos.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" /> especificando o nome ou caminho para um log de eventos.</summary>
      <param name="path">O caminho ou o nome do monitor de log de eventos para eventos. Se algum evento for registrado no log de eventos, o evento <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> será acionado.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.Dispose">
      <summary>Libera todos os recursos usados por este objeto.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.Dispose(System.Boolean)">
      <summary>Libera os recursos não gerenciados usados por este objeto e, opcionalmente, libera os recursos gerenciados.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogWatcher.Enabled">
      <summary>Obtém ou define um valor que indica se este objeto começa a entregar eventos para o evento delegado.</summary>
      <returns>
        <see langword="true" />Quando esse objeto pode entregar eventos para o representante de evento; <see langword="false" /> quando este objeto tiver parado a entrega.</returns>
    </member>
    <member name="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten">
      <summary>Permite configurar um delegado (método de manipulador de eventos) que é chamado sempre que um evento que é publicado corresponde aos critérios especificados na consulta de evento para esse objeto.</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventMetadata">
      <summary>Contém os metadados (propriedades e configurações) para um evento que é definido em um provedor de eventos.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Description">
      <summary>Obtém o modelo de descrição associado ao evento usando a localidade do thread atual para a linguagem de descrição.</summary>
      <returns>Uma cadeia de caracteres que contém o modelo de descrição associado ao evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Id">
      <summary>Obtém o identificador do evento que é definido no provedor de eventos.</summary>
      <returns>O identificador de evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Keywords">
      <summary>Obtém as palavras-chave associadas ao evento que é definido no provedor de evento.</summary>
      <returns>Uma coleção enumerável das palavras-chave associadas ao evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Level">
      <summary>Obtém o nível associado ao evento que é definido no provedor de eventos. O nível define a severidade do evento.</summary>
      <returns>O nível associado ao evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.LogLink">
      <summary>Obtém um link para o log de eventos que recebe esse evento quando o provedor o publica.</summary>
      <returns>Um link para o log de eventos.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Opcode">
      <summary>Obtém o opcode associado a este evento que é definido por um provedor de eventos. O opcode define um valor numérico que identifica a atividade ou um ponto dentro de uma atividade que o aplicativo estava executando quando disparou o evento.</summary>
      <returns>O opcode associado a este evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Task">
      <summary>Obtém a tarefa associada ao evento. Uma tarefa identifica uma parte de um aplicativo ou um componente que publica um evento.</summary>
      <returns>A tarefa associada ao evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Template">
      <summary>Obtém a cadeia de caracteres de modelo para o evento. Modelos são usados para descrever dados que são utilizados por um provedor quando um evento é publicado. Modelos, opcionalmente, especificam o XML que fornece a estrutura de um evento. O XML permite que os valores que o distribuidor de eventos fornece sejam inseridos durante a renderização de um evento.</summary>
      <returns>Uma cadeia de caracteres que contém o modelo para o evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Version">
      <summary>Obtém a versão do evento que qualifica o identificador de evento.</summary>
      <returns>Um valor de byte que contém a versão do evento.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventOpcode">
      <summary>Contém um opcode de evento que é definido em um provedor de eventos. Um opcode define um valor numérico que identifica a atividade ou um ponto dentro de uma atividade que o aplicativo estava executando quando disparou o evento.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventOpcode.DisplayName">
      <summary>Obtém o nome localizado de um opcode de evento.</summary>
      <returns>O nome localizado para um opcode de evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventOpcode.Name">
      <summary>Obtém o nome não localizado de um opcode de evento.</summary>
      <returns>O nome não localizado para um opcode de evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventOpcode.Value">
      <summary>Obtém o valor numérico associado ao opcode de eventos.</summary>
      <returns>O valor numérico associado ao opcode do evento.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventProperty">
      <summary>Contém o valor de uma propriedade de evento que é especificada pelo provedor de eventos quando o evento é publicado.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventProperty.Value">
      <summary>Obtém o valor de uma propriedade de evento que é especificada pelo provedor de eventos quando o evento é publicado.</summary>
      <returns>O valor da propriedade de evento.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventRecord">
      <summary>Define as propriedades de uma instância de eventos para um evento recebido de um objeto <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" />. As propriedades de evento fornecem informações sobre o evento, como o nome do computador no qual o evento foi registrado e o horário em que o evento foi criado. Esta é uma classe abstrata. A classe <see cref="T:System.Diagnostics.Eventing.Reader.EventLogRecord" /> implementa esta classe.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventRecord.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.Eventing.Reader.EventRecord" />.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.ActivityId">
      <summary>Obtém um GUID (identificador global exclusivo) para a atividade no processo para o qual um evento está envolvido. Isso permite aos consumidores agrupar atividades relacionadas.</summary>
      <returns>Retorna um valor GUID.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Bookmark">
      <summary>Obtém um espaço reservado (indicador) que corresponde a este evento. Isso pode ser usado como um espaço reservado em um fluxo de eventos.</summary>
      <returns>Retorna um objeto <see cref="T:System.Diagnostics.Eventing.Reader.EventBookmark" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventRecord.Dispose">
      <summary>Libera todos os recursos usados por este objeto.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventRecord.Dispose(System.Boolean)">
      <summary>Libera os recursos não gerenciados usados por este objeto e, opcionalmente, libera os recursos gerenciados.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventRecord.FormatDescription">
      <summary>Obtém a mensagem de evento na localidade atual.</summary>
      <returns>Retorna uma cadeia de caracteres que contém a mensagem de evento na localidade atual.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventRecord.FormatDescription(System.Collections.Generic.IEnumerable{System.Object})">
      <summary>Obtém a mensagem de evento substituindo variáveis na mensagem pelos valores especificados.</summary>
      <param name="values">Os valores usados para substituir variáveis na mensagem do evento. Variáveis são representadas por %n, em que n é um número.</param>
      <returns>Retorna uma cadeia de caracteres que contém a mensagem de evento na localidade atual.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Id">
      <summary>Obtém o identificador para este evento. Todos os eventos com esse valor de identificador representam o mesmo tipo de evento.</summary>
      <returns>Retorna um valor inteiro. Esse valor pode ser nulo.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Keywords">
      <summary>Obtém a máscara de palavra-chave do evento. Obtenha o valor da propriedade <see cref="P:System.Diagnostics.Eventing.Reader.EventRecord.KeywordsDisplayNames" /> para obter o nome das palavras-chave usadas nesta máscara.</summary>
      <returns>Retorna um valor longo. Esse valor pode ser nulo.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.KeywordsDisplayNames">
      <summary>Obtém os nomes de exibição das palavras-chave usadas na máscara de palavra-chave para este evento.</summary>
      <returns>Retorna uma coleção enumerável de cadeias de caracteres que contêm os nomes de exibição das palavras-chave usadas na máscara de palavra-chaves para esse evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Level">
      <summary>Obtém o nível do evento. O nível significa a severidade do evento. Para o nome do nível, obtenha o valor da propriedade <see cref="P:System.Diagnostics.Eventing.Reader.EventRecord.LevelDisplayName" />.</summary>
      <returns>Retorna um valor de byte. Esse valor pode ser nulo.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.LevelDisplayName">
      <summary>Obtém o nome de exibição do nível para este evento.</summary>
      <returns>Retorna uma cadeia de caracteres que contém o nome para exibição do nível deste evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.LogName">
      <summary>Obtém o nome do log de eventos em que esse evento é registrado.</summary>
      <returns>Retorna uma cadeia de caracteres que contém um nome do log de eventos que contém esse evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.MachineName">
      <summary>Obtém o nome do computador no qual esse evento foi registrado.</summary>
      <returns>Retorna uma cadeia de caracteres que contém o nome do computador no qual esse evento foi registrado.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Opcode">
      <summary>Obtém o opcode do evento. O opcode define um valor numérico que identifica a atividade ou um ponto dentro de uma atividade que o aplicativo estava executando quando disparou o evento. Para o nome do opcode, obtenha o valor da propriedade <see cref="P:System.Diagnostics.Eventing.Reader.EventRecord.OpcodeDisplayName" />.</summary>
      <returns>Retorna um valor curto. Esse valor pode ser nulo.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.OpcodeDisplayName">
      <summary>Obtém o nome de exibição do opcode para este evento.</summary>
      <returns>Retorna uma cadeia de caracteres que contém o nome de exibição do opcode para esse evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.ProcessId">
      <summary>Obtém o identificador de processo para o provedor de eventos que registrou esse evento.</summary>
      <returns>Retorna um valor inteiro. Esse valor pode ser nulo.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Properties">
      <summary>Obtém as propriedades do evento fornecidas pelo usuário.</summary>
      <returns>Retorna uma lista de objetos <see cref="T:System.Diagnostics.Eventing.Reader.EventProperty" />.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.ProviderId">
      <summary>Obtém o identificador global exclusivo (GUID) do provedor de eventos que publicou este evento.</summary>
      <returns>Retorna um valor GUID. Esse valor pode ser nulo.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.ProviderName">
      <summary>Obtém o nome do provedor de eventos que publicou esse evento.</summary>
      <returns>Retorna uma cadeia de caracteres que contém o nome do provedor de eventos que publicou este evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Qualifiers">
      <summary>Obtém os números do qualificador que são usados para a identificação de evento.</summary>
      <returns>Retorna um valor inteiro. Esse valor pode ser nulo.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.RecordId">
      <summary>Obtém o identificador de registro de eventos do evento no log.</summary>
      <returns>Retorna um valor longo. Esse valor pode ser nulo.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.RelatedActivityId">
      <summary>Obtém um GUID (identificador global exclusivo) para uma atividade relacionada em um processo para o qual um evento está envolvido.</summary>
      <returns>Retorna um valor GUID. Esse valor pode ser nulo.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Task">
      <summary>Obtém um identificador de tarefa para uma parte de um aplicativo ou um componente que publica um evento. Uma tarefa é um valor de 16 bits com 16 valores principais reservados. Esse tipo permite que qualquer valor entre 0x0000 e 0xffef seja usado. Para obter o nome da tarefa, obtenha o valor da propriedade <see cref="P:System.Diagnostics.Eventing.Reader.EventRecord.TaskDisplayName" />.</summary>
      <returns>Retorna um valor inteiro. Esse valor pode ser nulo.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.TaskDisplayName">
      <summary>Obtém o nome de exibição da tarefa para o evento.</summary>
      <returns>Retorna uma cadeia de caracteres que contém o nome de exibição da tarefa para o evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.ThreadId">
      <summary>Obtém o identificador de thread para que o thread no qual o provedor de eventos está sendo executado.</summary>
      <returns>Retorna um valor inteiro. Esse valor pode ser nulo.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.TimeCreated">
      <summary>Obtém a hora, no formato <see cref="T:System.DateTime" />, em que o evento foi criado.</summary>
      <returns>Retorna um valor <see cref="T:System.DateTime" />. O valor pode ser nulo.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventRecord.ToXml">
      <summary>Obtém uma representação XML do evento. Todas as propriedades do evento são representadas no XML evento. O XML está em conformidade com o esquema de evento.</summary>
      <returns>Retorna uma cadeia de caracteres que contém a representação XML do evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.UserId">
      <summary>Obtém o descritor de segurança do usuário cujo contexto é usado para publicar o evento.</summary>
      <returns>Retorna um valor <see cref="T:System.Security.Principal.SecurityIdentifier" />.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Version">
      <summary>Obtém o número de versão do evento.</summary>
      <returns>Retorna um valor de byte. Esse valor pode ser nulo.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs">
      <summary>Quando o <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> é acionado, uma instância do objeto é passada para o método de delegado que manipula o evento. Este objeto contém o evento que foi publicado para o log de eventos ou a exceção que ocorreu quando a assinatura do evento falhou.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs.EventException">
      <summary>Obtém a exceção que ocorreu quando a assinatura do evento falhou. A exceção contém uma descrição do motivo pelo qual a assinatura falhou.</summary>
      <returns>A exceção que ocorreu quando a assinatura do evento falhou.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs.EventRecord">
      <summary>Obtém o registro de evento que é publicado para o log de eventos. Esse evento corresponde aos critérios da consulta especificada na assinatura do evento.</summary>
      <returns>O registro do evento.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventTask">
      <summary>Contém uma tarefa de evento que é definida em um provedor de eventos. A tarefa identifica uma parte de um aplicativo ou um componente que publica um evento. Uma tarefa é um valor de 16 bits com 16 valores principais reservados.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventTask.DisplayName">
      <summary>Obtém o nome localizado da tarefa do evento.</summary>
      <returns>O nome localizado para a tarefa de evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventTask.EventGuid">
      <summary>Obtém o GUID (identificador global exclusivo) do evento associado à tarefa.</summary>
      <returns>O GUID do evento associado à tarefa.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventTask.Name">
      <summary>Obtém o nome não localizado da tarefa do evento.</summary>
      <returns>O nome não localizado da tarefa de evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventTask.Value">
      <summary>Obtém o valor numérico associado à tarefa.</summary>
      <returns>O valor numérico associado à tarefa.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.PathType">
      <summary>Especifica que uma cadeia de caracteres contém um nome de um log de eventos ou o caminho do sistema de arquivos para um arquivo de log de eventos.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.PathType.FilePath">
      <summary>Um parâmetro de caminho contém o caminho do sistema de arquivos para um arquivo de log de eventos.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.PathType.LogName">
      <summary>Um parâmetro de caminho contém o nome do log de eventos.</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.ProviderMetadata">
      <summary>Contém informações estáticas sobre um provedor de eventos, como o nome e a ID do provedor e a coleção de eventos definida no provedor.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" /> especificando o nome do provedor sobre o qual você deseja recuperar informações.</summary>
      <param name="providerName">O nome do provedor de eventos sobre o qual você deseja recuperar informações.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.#ctor(System.String,System.Diagnostics.Eventing.Reader.EventLogSession,System.Globalization.CultureInfo)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" /> especificando o nome do provedor sobre o qual você deseja recuperar informações, o serviço de log de eventos no qual o provedor está registrado e o idioma no qual você deseja retornar as informações.</summary>
      <param name="providerName">O nome do provedor de eventos sobre o qual você deseja recuperar informações.</param>
      <param name="session">O objeto <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" /> que especifica se as informações do provedor devem ser obtidas de um provedor no computador local ou de um provedor em um computador remoto.</param>
      <param name="targetCultureInfo">A cultura que especifica o idioma no qual as informações devem ser retornadas.</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.DisplayName">
      <summary>Obtém o nome localizado do provedor de eventos.</summary>
      <returns>Retorna uma cadeia de caracteres que contém o nome localizado do provedor de eventos.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.Dispose">
      <summary>Libera todos os recursos usados por este objeto.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.Dispose(System.Boolean)">
      <summary>Libera os recursos não gerenciados usados por este objeto e, opcionalmente, libera os recursos gerenciados.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Events">
      <summary>Obtém uma coleção enumerável de objetos <see cref="T:System.Diagnostics.Eventing.Reader.EventMetadata" /> e cada um deles representa um evento definido no provedor.</summary>
      <returns>Retorna uma coleção enumerável <see cref="T:System.Diagnostics.Eventing.Reader.EventMetadata" /> de objetos.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.HelpLink">
      <summary>Obtém a base da URL usada para formar solicitações de ajuda para os eventos neste provedor de eventos.</summary>
      <returns>Retorna um valor <see cref="T:System.Uri" />.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Id">
      <summary>Obtém o GUID (identificador global exclusivo) do provedor de eventos.</summary>
      <returns>Retorna o valor de GUID do provedor de eventos.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Keywords">
      <summary>Obtém uma coleção enumerável de objetos <see cref="T:System.Diagnostics.Eventing.Reader.EventKeyword" /> e cada um deles representa uma palavra-chave de evento definida no provedor de eventos.</summary>
      <returns>Retorna uma coleção enumerável <see cref="T:System.Diagnostics.Eventing.Reader.EventKeyword" /> de objetos.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Levels">
      <summary>Obtém uma coleção enumerável de objetos <see cref="T:System.Diagnostics.Eventing.Reader.EventLevel" /> e cada um deles representa um nível definido no provedor de eventos.</summary>
      <returns>Retorna uma coleção enumerável <see cref="T:System.Diagnostics.Eventing.Reader.EventLevel" /> de objetos.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.LogLinks">
      <summary>Obtém uma coleção enumerável de objetos <see cref="T:System.Diagnostics.Eventing.Reader.EventLogLink" /> e cada um deles representa um link para um log de eventos que é usado pelo provedor de eventos.</summary>
      <returns>Retorna uma coleção enumerável <see cref="T:System.Diagnostics.Eventing.Reader.EventLogLink" /> de objetos.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.MessageFilePath">
      <summary>Obtém o caminho do arquivo que contém o recurso de tabela de mensagens que contém as cadeias de caracteres associadas aos metadados do provedor.</summary>
      <returns>Retorna uma cadeia de caracteres que contém o caminho do arquivo de mensagem do provedor.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Name">
      <summary>Obtém o nome exclusivo do provedor de eventos.</summary>
      <returns>Retorna uma cadeia de caracteres que contém o nome exclusivo do provedor de eventos.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Opcodes">
      <summary>Obtém uma coleção enumerável de objetos <see cref="T:System.Diagnostics.Eventing.Reader.EventOpcode" /> e cada um deles representa um opcode definido no provedor de eventos.</summary>
      <returns>Retorna uma coleção enumerável <see cref="T:System.Diagnostics.Eventing.Reader.EventOpcode" /> de objetos.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.ParameterFilePath">
      <summary>Obtém o caminho do arquivo que contém o recurso de tabela de mensagem que contém as cadeias de caracteres usadas para substituições de parâmetro nas descrições de eventos.</summary>
      <returns>Retorna uma cadeia de caracteres que contém o caminho do arquivo que contém o recurso de tabela de mensagens que tem as cadeias de caracteres usadas para substituições de parâmetro em descrições de eventos.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.ResourceFilePath">
      <summary>Obtém o caminho para o arquivo que contém os metadados associados ao provedor.</summary>
      <returns>Retorna uma cadeia de caracteres que contém o caminho para o arquivo que contém os metadados associados ao provedor.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Tasks">
      <summary>Obtém uma coleção enumerável de objetos <see cref="T:System.Diagnostics.Eventing.Reader.EventTask" /> e cada um deles representa uma tarefa definida no provedor de eventos.</summary>
      <returns>Retorna uma coleção enumerável <see cref="T:System.Diagnostics.Eventing.Reader.EventTask" /> de objetos.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.SessionAuthentication">
      <summary>Define os valores para o tipo de autenticação usado durante um logon de RPC (chamada de procedimento remoto) para um servidor. Esse logon ocorre quando você cria um objeto <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" /> que especifica uma conexão a um computador remoto.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.SessionAuthentication.Default">
      <summary>Use o método de autenticação padrão durante o logon RPC. A autenticação padrão é equivalente a Negotiate.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.SessionAuthentication.Kerberos">
      <summary>Use a autenticação Kerberos durante o logon RPC.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.SessionAuthentication.Negotiate">
      <summary>Use o método de autenticação Negotiate durante o logon RPC. Isso permite que o aplicativo cliente selecionar o método de autenticação mais apropriado (NTLM ou Kerberos) para a situação.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.SessionAuthentication.Ntlm">
      <summary>Use a autenticação NTLM (Windows NT LAN Manager) durante o logon RPC.</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.StandardEventKeywords">
      <summary>Define as palavras-chave padrão que são anexadas aos eventos pelo provedor de eventos. Para obter mais informações sobre palavras-chave, consulte <see cref="T:System.Diagnostics.Eventing.Reader.EventKeyword" />.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.AuditFailure">
      <summary>Anexado a todos os eventos de auditoria de segurança com falha. Essa palavra-chave deve ser usada somente para eventos no Log de segurança.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.AuditSuccess">
      <summary>Anexado a todos os eventos de auditoria de segurança com êxito. Essa palavra-chave deve ser usada somente para eventos no Log de segurança.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.CorrelationHint">
      <summary>Anexado a eventos de transferência em que a ID da Atividade relacionada (ID de Correlação) é um valor computado e não tem garantia de ser exclusivo (não um GUID real).</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.CorrelationHint2">
      <summary>Anexado a eventos de transferência em que a ID da Atividade relacionada (ID de Correlação) é um valor computado e não tem garantia de ser exclusivo (não um GUID real).</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.EventLogClassic">
      <summary>Anexado a eventos que são acionados usando a função RaiseEvent.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.None">
      <summary>Esse valor indica que nenhuma filtragem na palavra-chave é executada quando o evento é publicado.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.ResponseTime">
      <summary>Anexado a todos os eventos de tempo de resposta.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.Sqm">
      <summary>Anexado a todos os eventos do SQM (Mecanismo de Qualidade de Serviço).</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.WdiContext">
      <summary>Anexado a todos os eventos de contexto da WDI (Infraestrutura de Diagnóstico do Windows).</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.WdiDiagnostic">
      <summary>Anexado a todos os eventos de diagnóstico da WDI (Infraestrutura de Diagnóstico do Windows).</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.StandardEventLevel">
      <summary>Define os níveis de evento padrão que são usados no serviço Log de Eventos. O nível define a severidade do evento. É possível definir níveis de evento personalizados além desses níveis padrão. Para obter mais informações sobre os níveis, consulte <see cref="T:System.Diagnostics.Eventing.Reader.EventLevel" />.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Critical">
      <summary>Esse nível corresponde a erros críticos, que são erros graves que causaram uma falha grave.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Error">
      <summary>Esse nível corresponde aos erros normais que significam um problema.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Informational">
      <summary>Esse nível corresponde às mensagens ou eventos informativos que não são erros. Esses eventos podem ajudar a rastrear o progresso ou o estado de um aplicativo.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.LogAlways">
      <summary>Esse valor indica que não é realizada a filtragem no nível durante a publicação do evento.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Verbose">
      <summary>Esse nível corresponde a eventos ou mensagens longas.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Warning">
      <summary>Esse nível corresponde a eventos de aviso. Por exemplo, um evento que é publicado porque um disco está se aproximando da capacidade total é um evento de aviso.</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.StandardEventOpcode">
      <summary>Define os opcodes padrão anexados aos eventos pelo provedor do evento. Para obter mais informações sobre opcodes, consulte <see cref="T:System.Diagnostics.Eventing.Reader.EventOpcode" />.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.DataCollectionStart">
      <summary>Um evento com este opcode é um evento de início da coleta do rastreamento.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.DataCollectionStop">
      <summary>Um evento com este opcode é um evento de interrupção da coleta do rastreamento.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Extension">
      <summary>Um evento com este opcode é um evento de extensão.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Info">
      <summary>Um evento com este opcode é um evento informativo.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Receive">
      <summary>Um evento com este opcode será publicado quando uma atividade em um aplicativo receber dados.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Reply">
      <summary>Um evento com este opcode será publicado após uma atividade em um aplicativo responder a um evento.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Resume">
      <summary>Um evento com este opcode será publicado após uma atividade em um aplicativo for retomada de um estado suspenso. O evento deve seguir um evento com o opcode Suspend.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Send">
      <summary>Um evento com este opcode será publicado quando uma atividade em um aplicativo transferir dados ou recursos do sistema para outra atividade.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Start">
      <summary>Um evento com este opcode será publicado quando um aplicativo iniciar uma nova transação ou atividade. Isso poderá ser inserido em outra transação ou atividade quando vários eventos com o opcode Start seguirem uns aos outros sem um evento com um opcode Stop.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Stop">
      <summary>Um evento com este opcode será publicado quando uma atividade ou transação em um aplicativo for encerrada. O evento corresponde ao último evento desemparelhado com um opcode Start.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Suspend">
      <summary>Um evento com este opcode será publicado quando uma atividade em um aplicativo for suspensa.</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.StandardEventTask">
      <summary>Define as tarefas padrão anexadas aos eventos pelo provedor de eventos. Para obter mais informações sobre tarefas, consulte <see cref="T:System.Diagnostics.Eventing.Reader.EventTask" />.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventTask.None">
      <summary>Nenhuma tarefa é usada para identificar uma parte de um aplicativo que publica um evento.</summary>
    </member>
    <member name="T:System.Diagnostics.EventInstance">
      <summary>Representa informações com neutralidade de idioma para uma entrada de log de eventos.</summary>
    </member>
    <member name="M:System.Diagnostics.EventInstance.#ctor(System.Int64,System.Int32)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.EventInstance" /> usando os identificadores de recurso especificados para a mensagem localizada e o texto da categoria da entrada do evento.</summary>
      <param name="instanceId">Um identificador de recurso que corresponde a uma cadeia de caracteres definida no arquivo de recurso da mensagem da origem do evento.</param>
      <param name="categoryId">Um identificador de recurso que corresponde a uma cadeia de caracteres definida no arquivo de recurso da categoria da origem do evento ou zero para não especificar nenhuma categoria para o evento.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">O parâmetro <paramref name="instanceId" /> é um valor negativo ou um valor maior do que <see cref="F:System.UInt32.MaxValue" />.  

ou - 
O parâmetro <paramref name="categoryId" /> é um valor negativo ou um valor maior do que <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Diagnostics.EventInstance.#ctor(System.Int64,System.Int32,System.Diagnostics.EventLogEntryType)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.EventInstance" /> usando os identificadores de recurso especificados para a mensagem localizada e o texto da categoria da entrada do evento e o tipo de entrada de log do evento especificado.</summary>
      <param name="instanceId">Um identificador de recurso que corresponde a uma cadeia de caracteres definida no arquivo de recurso da mensagem da origem do evento.</param>
      <param name="categoryId">Um identificador de recurso que corresponde a uma cadeia de caracteres definida no arquivo de recurso da categoria da origem do evento ou zero para não especificar nenhuma categoria para o evento.</param>
      <param name="entryType">Um valor <see cref="T:System.Diagnostics.EventLogEntryType" /> que indica o tipo do evento.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="entryType" /> não é um valor <see cref="T:System.Diagnostics.EventLogEntryType" /> válido.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="instanceId" /> é um valor negativo ou um valor maior do que <see cref="F:System.UInt32.MaxValue" />.  

ou - 
<paramref name="categoryId" /> é um valor negativo ou um valor maior do que <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="P:System.Diagnostics.EventInstance.CategoryId">
      <summary>Obtém ou define o identificador de recurso que especifica a categoria definida pelo aplicativo da entrada de evento.</summary>
      <returns>Um valor de categoria numérico ou identificador de recurso que corresponde a uma cadeia de caracteres definida no arquivo de recurso de categoria da origem do evento. O padrão é zero, o que significa que nenhuma categoria será exibida para a entrada do evento.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">A propriedade está definida com um valor negativo ou um valor maior que <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="P:System.Diagnostics.EventInstance.EntryType">
      <summary>Obtém ou define o tipo de evento da entrada de log do evento.</summary>
      <returns>Um <see cref="T:System.Diagnostics.EventLogEntryType" /> valor que indica o tipo de entrada de evento. O valor padrão é <see cref="F:System.Diagnostics.EventLogEntryType.Information" />.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">A propriedade não foi definida como um valor <see cref="T:System.Diagnostics.EventLogEntryType" /> válido.</exception>
    </member>
    <member name="P:System.Diagnostics.EventInstance.InstanceId">
      <summary>Obtém ou define o identificador de recurso que designa o texto da mensagem da entrada do evento.</summary>
      <returns>Um identificador de recurso que corresponde a uma cadeia de caracteres definida no arquivo de recurso da mensagem da origem do evento.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">A propriedade está definida com um valor negativo ou um valor maior que <see cref="F:System.UInt32.MaxValue" />.</exception>
    </member>
    <member name="T:System.Diagnostics.EventLog">
      <summary>Fornece interação com logs de eventos do Windows.</summary>
    </member>
    <member name="M:System.Diagnostics.EventLog.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.EventLog" />. Não associe a instância a nenhum log.</summary>
    </member>
    <member name="M:System.Diagnostics.EventLog.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.EventLog" />. Associa a instância a log no computador local.</summary>
      <param name="logName">O nome do log no computador local.</param>
      <exception cref="T:System.ArgumentNullException">O nome do log é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O nome do log é inválido.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.#ctor(System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.EventLog" />. Associa a instância a um log no computador especificado.</summary>
      <param name="logName">O nome do log no computador especificado.</param>
      <param name="machineName">O computador no qual o log existe.</param>
      <exception cref="T:System.ArgumentNullException">O nome do log é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O nome do log é inválido.  

ou -  

 O nome do computador é inválido.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.#ctor(System.String,System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.EventLog" />. Associa a instância a um log no computador especificado e cria ou atribui a origem indicada para o <see cref="T:System.Diagnostics.EventLog" />.</summary>
      <param name="logName">O nome do log no computador especificado</param>
      <param name="machineName">O computador no qual o log existe.</param>
      <param name="source">A origem das entradas de log de eventos.</param>
      <exception cref="T:System.ArgumentNullException">O nome do log é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O nome do log é inválido.  

ou -  

 O nome do computador é inválido.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.BeginInit">
      <summary>Começa a inicialização de um <see cref="T:System.Diagnostics.EventLog" /> usado em um formulário ou por outro componente. A inicialização ocorre em tempo de execução.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Diagnostics.EventLog" /> já foi inicializado.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.Clear">
      <summary>Remove todas as entradas do log de eventos.</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">Não foi possível limpar o log de eventos.  

ou -  

 Não é possível abrir o log. Um código de erro do Windows não está disponível.</exception>
      <exception cref="T:System.ArgumentException">Não há valor especificado para a propriedade <see cref="P:System.Diagnostics.EventLog.Log" />. Verifique se que o nome do log não é uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.InvalidOperationException">Log inexistente.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.Close">
      <summary>Fecha o log de eventos e libera os identificadores de leitura e gravação.</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">O identificador de leitura ou de gravação do log de evento não foi liberado com êxito.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.CreateEventSource(System.Diagnostics.EventSourceCreationData)">
      <summary>Estabelece uma origem do evento válido para a gravação de mensagens de evento localizadas, usando as propriedades de configuração especificadas para a origem do evento e o log de eventos correspondente.</summary>
      <param name="sourceData">As propriedades de configuração para a origem do evento e seu log de eventos de destino.</param>
      <exception cref="T:System.ArgumentException">O nome do computador especificado em <paramref name="sourceData" /> não é válido.  

ou - 
O nome da origem especificado em <paramref name="sourceData" /> é <see langword="null" />.  

ou - 
O nome do log especificado em <paramref name="sourceData" /> não é válido. Os nomes de log de eventos precisam serem compostos por caracteres imprimíveis e não podem incluir os caracteres “*”, “?” ou “\”.  

ou - 
O nome do log especificado em <paramref name="sourceData" /> não é válido para a criação de log do usuário. Os nomes de log de eventos AppEvent, SysEvent e SecEvent são reservados para uso do sistema.  

ou - 
O nome do log corresponde a um nome de origem de evento existente.  

ou - 
O nome da origem especificado no <paramref name="sourceData" /> resulta em um caminho de chave do Registro com mais de 254 caracteres.  

ou - 
Os primeiros oito caracteres do nome do log especificado em <paramref name="sourceData" /> não são exclusivos.  

ou - 
O nome da origem especificado em <paramref name="sourceData" /> já está registrado.  

ou - 
O nome de origem especificado no <paramref name="sourceData" /> corresponde a um nome de log de eventos existente.</exception>
      <exception cref="T:System.InvalidOperationException">Não foi possível abrir a chave do Registro para o log de eventos.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceData" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.CreateEventSource(System.String,System.String)">
      <summary>Estabelece o nome de origem especificado como uma origem de evento válida para gravar entradas em um log no computador local. Esse método também pode criar um novo log personalizado no computador local.</summary>
      <param name="source">O nome de origem com o qual o aplicativo está registrado no computador local.</param>
      <param name="logName">O nome do log no qual as entradas da fonte são gravadas. Os valores possíveis incluem Aplicativo, Sistema ou um log de eventos personalizado.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> é uma cadeia de caracteres vazia ("") ou <see langword="null" />.  

ou - 
<paramref name="logName" /> não é um nome válido de log de eventos. Os nomes de log de eventos devem conter caracteres imprimíveis e não podem incluir os caracteres “*”, “?” ou “\”.  

ou - 
<paramref name="logName" /> não é válido para a criação de log de usuário. Os nomes de log de eventos AppEvent, SysEvent e SecEvent são reservados para uso do sistema.  

ou - 
O nome do log corresponde a um nome de origem de evento existente.  

ou - 
O nome da origem resulta em um caminho de chave do Registro com mais de 254 caracteres.  

ou - 
Os 8 primeiros caracteres de <paramref name="logName" /> correspondem aos 8 primeiros caracteres de um log de eventos existente.  

ou - 
A fonte não pode ser registrada porque já existe no computador local.  

ou - 
O nome de origem corresponde a um nome de log de eventos existente.</exception>
      <exception cref="T:System.InvalidOperationException">Não foi possível abrir a chave do Registro do log de eventos no computador local.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.CreateEventSource(System.String,System.String,System.String)">
      <summary>Estabelece o nome de origem especificado como uma origem de evento válida para gravar entradas em um log no computador especificado. Também é possível usar esse método para criar um novo log personalizado no computador especificado.</summary>
      <param name="source">A origem pela qual o aplicativo está registrado no computador especificado.</param>
      <param name="logName">O nome do log no qual as entradas da fonte são gravadas. Os valores possíveis incluem Aplicativo, Sistema ou um log de eventos personalizado. Se você não especificar um valor, <paramref name="logName" /> o definirá com o padrão Aplicativo.</param>
      <param name="machineName">O nome do computador que registrará essa origem de evento ou "." para o computador local.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="machineName" /> não é um nome do computador válido.  

ou - 
<paramref name="source" /> é uma cadeia de caracteres vazia ("") ou <see langword="null" />.  

ou - 
<paramref name="logName" /> não é um nome válido de log de eventos. Os nomes de log de eventos devem conter caracteres imprimíveis e não podem incluir os caracteres “*”, “?” ou “\”.  

ou - 
<paramref name="logName" /> não é válido para a criação de log de usuário. Os nomes de log de eventos AppEvent, SysEvent e SecEvent são reservados para uso do sistema.  

ou - 
O nome do log corresponde a um nome de origem de evento existente.  

ou - 
O nome da origem resulta em um caminho de chave do Registro com mais de 254 caracteres.  

ou - 
Os oito primeiros caracteres de <paramref name="logName" /> correspondem aos oito primeiros caracteres de um log de eventos existente no computador especificado.  

ou - 
A origem não pode ser registrada porque já existe no computador especificado.  

ou - 
O nome da origem corresponde a um nome de origem de evento existente.</exception>
      <exception cref="T:System.InvalidOperationException">Não foi possível abrir a chave do Registro do log de eventos no computador especificado.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.Delete(System.String)">
      <summary>Remove um log de eventos do computador local.</summary>
      <param name="logName">O nome do log a ser excluído. Os possíveis valores incluem: Aplicativo, Segurança, Sistema e todos os outros logs de eventos personalizados no computador.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="logName" /> é uma cadeia de caracteres vazia ("") ou <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Não foi possível abrir a chave do Registro do log de eventos no computador local.  

ou -

 O log não existe no computador local.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Não foi possível limpar o log de eventos.  

ou -  

 Não é possível abrir o log. Um código de erro do Windows não está disponível.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.Delete(System.String,System.String)">
      <summary>Remove um log de eventos do computador especificado.</summary>
      <param name="logName">O nome do log a ser excluído. Os possíveis valores incluem: Aplicativo, Segurança, Sistema e todos os outros logs de eventos personalizados no computador especificado.</param>
      <param name="machineName">O nome do computador a ser excluído do log ou "." para o computador local.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="logName" /> é uma cadeia de caracteres vazia ("") ou <see langword="null" />.  

ou - 
<paramref name="machineName" /> não é um nome do computador válido.</exception>
      <exception cref="T:System.InvalidOperationException">Não foi possível abrir a chave do Registro do log de eventos no computador especificado.  

ou -

 O log não existe no computador especificado.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Não foi possível limpar o log de eventos.  

ou -  

 Não é possível abrir o log. Um código de erro do Windows não está disponível.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)">
      <summary>Remove o registro da origem do evento do log de eventos do computador local.</summary>
      <param name="source">O nome pelo qual o aplicativo está registrado no sistema de log de eventos.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="source" /> não existe no Registro do computador local.  

ou - 
Você não tem acesso para gravação na chave do Registro para o log de eventos.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.DeleteEventSource(System.String,System.String)">
      <summary>Remove o registro da fonte de eventos do aplicativo do computador especificado.</summary>
      <param name="source">O nome pelo qual o aplicativo está registrado no sistema de log de eventos.</param>
      <param name="machineName">O nome do computador do qual remover o registro ou "." para o computador local.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="machineName" /> é inválido.  

ou - 
O parâmetro <paramref name="source" /> não existe no Registro do computador especificado.  

ou - 
Você não tem acesso para gravação na chave do Registro para o log de eventos.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> não pode ser excluída porque no Registro, a chave do Registro pai para <paramref name="source" /> não contém uma subchave com o mesmo nome.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.Dispose(System.Boolean)">
      <summary>Libera os recursos não gerenciados usados pelo <see cref="T:System.Diagnostics.EventLog" /> e opcionalmente libera os recursos gerenciados.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
    </member>
    <member name="P:System.Diagnostics.EventLog.EnableRaisingEvents">
      <summary>Obtém ou define um valor que indica se o <see cref="T:System.Diagnostics.EventLog" /> recebe notificações do evento <see cref="E:System.Diagnostics.EventLog.EntryWritten" />.</summary>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Diagnostics.EventLog" /> receber uma notificação quando uma entrada for escrita no log; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">O log do evento está em um computador remoto.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.EndInit">
      <summary>Encerra a inicialização de um <see cref="T:System.Diagnostics.EventLog" /> usado em um formulário ou por outro componente. A inicialização ocorre em tempo de execução.</summary>
    </member>
    <member name="P:System.Diagnostics.EventLog.Entries">
      <summary>Obtém o conteúdo do log de eventos.</summary>
      <returns>Um <see cref="T:System.Diagnostics.EventLogEntryCollection" /> que contém as entradas no log de eventos. Cada entrada é associada a uma instância da classe <see cref="T:System.Diagnostics.EventLogEntry" />.</returns>
    </member>
    <member name="E:System.Diagnostics.EventLog.EntryWritten">
      <summary>Ocorre quando uma entrada é gravada em um log de eventos no computador local.</summary>
    </member>
    <member name="M:System.Diagnostics.EventLog.Exists(System.String)">
      <summary>Determina se o log existe no computador local.</summary>
      <param name="logName">O nome do log a ser pesquisado. Os possíveis valores incluem: Aplicativo, Segurança, Sistema, outros logs específicos do aplicativo (como aqueles associados ao Active Directory) ou qualquer log personalizado no computador.</param>
      <returns>
        <see langword="true" /> se o log existir no computador local; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">O logName é <see langword="null" /> ou o valor está vazio.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.Exists(System.String,System.String)">
      <summary>Determina se o log existe no computador especificado.</summary>
      <param name="logName">O log pelo qual pesquisar. Os possíveis valores incluem: Aplicativo, Segurança, Sistema, outros logs específicos do aplicativo (como aqueles associados ao Active Directory) ou qualquer log personalizado no computador.</param>
      <param name="machineName">O nome do computador no qual pesquisar pelo log ou "." para o computador local.</param>
      <returns>
        <see langword="true" /> se o log existir no computador especificado; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="machineName" /> está em um formato inválido. Verifique se que você usou a sintaxe apropriada para o computador no qual você está pesquisando.  

ou - 
O <paramref name="logName" /> é <see langword="null" /> ou o valor está vazio.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.GetEventLogs">
      <summary>Pesquisa todos os logs de eventos em um computador local e cria uma matriz de objetos <see cref="T:System.Diagnostics.EventLog" /> que contêm a lista.</summary>
      <returns>Uma matriz do tipo <see cref="T:System.Diagnostics.EventLog" /> que representa os logs no computador local.</returns>
      <exception cref="T:System.SystemException">Você não tem acesso de leitura ao Registro.  

ou -  

 Não há nenhum serviço de log de eventos no computador.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.GetEventLogs(System.String)">
      <summary>Pesquisa todos os logs de eventos em determinado computador e cria uma matriz de objetos <see cref="T:System.Diagnostics.EventLog" /> que contêm a lista.</summary>
      <param name="machineName">O computador no qual os logs de eventos serão pesquisados.</param>
      <returns>Uma matriz do tipo <see cref="T:System.Diagnostics.EventLog" /> que representa os logs em determinado computador.</returns>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="machineName" /> é um nome do computador inválido.</exception>
      <exception cref="T:System.InvalidOperationException">Você não tem acesso de leitura ao Registro.  

ou -  

 Não há nenhum serviço de log de eventos no computador.</exception>
    </member>
    <member name="P:System.Diagnostics.EventLog.Log">
      <summary>Obtém ou define o nome do log a ser lido ou gravado.</summary>
      <returns>O nome do log. Pode ser o log de Aplicativo, Sistema, Segurança ou um nome de log personalizado. O padrão é uma cadeia de caracteres vazia ("").</returns>
    </member>
    <member name="P:System.Diagnostics.EventLog.LogDisplayName">
      <summary>Obtém o nome amigável do log de eventos.</summary>
      <returns>Um nome que representa o log de eventos no Visualizador de Eventos do sistema.</returns>
      <exception cref="T:System.InvalidOperationException">O <see cref="P:System.Diagnostics.EventLog.Log" /> especificado não existe no Registro deste computador.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.LogNameFromSourceName(System.String,System.String)">
      <summary>Obtém o nome do log no qual a origem especificada é registrada.</summary>
      <param name="source">O nome da origem do evento.</param>
      <param name="machineName">O nome do computador no qual procurar ou "." para o computador local.</param>
      <returns>O nome do log associado à origem especificada no Registro.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLog.MachineName">
      <summary>Obtém ou define o nome do computador em que os eventos devem ser lidos ou gravados.</summary>
      <returns>O nome do servidor no qual reside o log de eventos. O padrão é o computador local (".").</returns>
      <exception cref="T:System.ArgumentException">O nome do computador é inválido.</exception>
    </member>
    <member name="P:System.Diagnostics.EventLog.MaximumKilobytes">
      <summary>Obtém ou define o tamanho máximo do log de eventos em quilobytes.</summary>
      <returns>O tamanho máximo do log de eventos em quilobytes. O padrão é 512, indicando um tamanho do arquivo máximo de 512 KB.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">O valor especificado é menor do que 64 ou maior que 4194240 ou é não um múltiplo par de 64.</exception>
      <exception cref="T:System.InvalidOperationException">O valor <see cref="P:System.Diagnostics.EventLog.Log" /> não é um nome de log válido.  

ou - 
Não foi possível abrir a chave do Registro do log de eventos no computador de destino.</exception>
    </member>
    <member name="P:System.Diagnostics.EventLog.MinimumRetentionDays">
      <summary>Obtém o número de dias para reter as entradas no log de eventos.</summary>
      <returns>O número de dias durante os quais as entradas no log de eventos são retidas. O valor padrão é 7.</returns>
    </member>
    <member name="M:System.Diagnostics.EventLog.ModifyOverflowPolicy(System.Diagnostics.OverflowAction,System.Int32)">
      <summary>Altera o comportamento configurado para gravar novas entradas quando o log de eventos atinge o tamanho máximo do arquivo.</summary>
      <param name="action">O comportamento de estouro para gravar novas entradas no log de eventos.</param>
      <param name="retentionDays">O número mínimo de dias durante os quais cada entrada de log de eventos é mantida. Este parâmetro será usado apenas se <paramref name="action" /> for definido como <see cref="F:System.Diagnostics.OverflowAction.OverwriteOlder" />.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="action" /> não é um valor <see cref="P:System.Diagnostics.EventLog.OverflowAction" /> válido.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="retentionDays" /> é menor do que um ou maior que 365.</exception>
      <exception cref="T:System.InvalidOperationException">O valor <see cref="P:System.Diagnostics.EventLog.Log" /> não é um nome de log válido.  

ou - 
Não foi possível abrir a chave do Registro do log de eventos no computador de destino.</exception>
    </member>
    <member name="P:System.Diagnostics.EventLog.OverflowAction">
      <summary>Obtém o comportamento configurado para armazenar novas entradas quando o log de eventos atinge o tamanho máximo do arquivo de log.</summary>
      <returns>O valor <see cref="T:System.Diagnostics.OverflowAction" /> que especifica o comportamento configurado para armazenar novas entradas quando o log de eventos atinge o tamanho máximo do log. O padrão é <see cref="F:System.Diagnostics.OverflowAction.OverwriteOlder" />.</returns>
    </member>
    <member name="M:System.Diagnostics.EventLog.RegisterDisplayName(System.String,System.Int64)">
      <summary>Especifica o nome localizado do log de eventos, que é exibido no Visualizador de Eventos do servidor.</summary>
      <param name="resourceFile">O caminho totalmente especificado para um arquivo de recurso localizado.</param>
      <param name="resourceId">O identificador de recurso que indexa uma cadeia de caracteres localizada dentro do arquivo de recurso.</param>
      <exception cref="T:System.InvalidOperationException">O valor <see cref="P:System.Diagnostics.EventLog.Log" /> não é um nome de log válido.  

ou - 
Não foi possível abrir a chave do Registro do log de eventos no computador de destino.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="resourceFile" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.Diagnostics.EventLog.Source">
      <summary>Obtém ou define o nome da fonte a ser registrado e usado ao gravar no log de eventos.</summary>
      <returns>O nome registrado com o log de eventos como uma fonte de entradas. O padrão é uma cadeia de caracteres vazia ("").</returns>
      <exception cref="T:System.ArgumentException">O nome da origem resulta em um caminho de chave do Registro com mais de 254 caracteres.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.SourceExists(System.String)">
      <summary>Determina se um evento de origem foi registrado no computador local.</summary>
      <param name="source">O nome da origem do evento.</param>
      <returns>
        <see langword="true" /> se a origem do evento for registrada no computador local; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.Security.SecurityException">
        <paramref name="source" /> não foi encontrado, mas alguns ou todos os logs de evento não puderam ser pesquisados.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.SourceExists(System.String,System.String)">
      <summary>Determina se uma origem do evento está registrada em um computador especificado.</summary>
      <param name="source">O nome da origem do evento.</param>
      <param name="machineName">O nome do computador no qual procurar, ou "." para o computador local.</param>
      <returns>
        <see langword="true" /> se a origem do evento for registrada no computador especificado; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="machineName" /> é um nome do computador inválido.</exception>
      <exception cref="T:System.Security.SecurityException">
        <paramref name="source" /> não foi encontrado, mas alguns ou todos os logs de evento não puderam ser pesquisados.</exception>
    </member>
    <member name="P:System.Diagnostics.EventLog.SynchronizingObject">
      <summary>Obtém ou define o objeto usado para realizar marshaling das chamadas do manipulador de eventos emitidas como resultado de um evento de gravação na entrada <see cref="T:System.Diagnostics.EventLog" />.</summary>
      <returns>O <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> usado para realizar marshaling de chamadas de manipulador de eventos emitidas <see cref="E:System.Diagnostics.EventLog.EntryWritten" /> como resultado de um evento no log de eventos.</returns>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String)">
      <summary>Grava uma entrada de tipo de informação, com o texto da mensagem fornecido, no log de eventos.</summary>
      <param name="message">A cadeia de caracteres a ser gravada no log de eventos.</param>
      <exception cref="T:System.ArgumentException">A propriedade <see cref="P:System.Diagnostics.EventLog.Source" /> do <see cref="T:System.Diagnostics.EventLog" /> não foi definida.  

ou - 
O método tentou registrar uma nova fonte de evento, mas o nome do computador em <see cref="P:System.Diagnostics.EventLog.MachineName" /> não é válido.  

ou - 
A origem já está registrada para um log de eventos diferente.  

ou - 
A cadeia de caracteres da mensagem tem mais de 31.839 bytes (32.766 em sistemas operacionais Windows anteriores ao Windows Vista).  

ou - 
O nome da origem resulta em um caminho de chave do Registro com mais de 254 caracteres.</exception>
      <exception cref="T:System.InvalidOperationException">Não foi possível abrir a chave do Registro para o log de eventos.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">O sistema operacional relatou um erro ao gravar a entrada de evento no log de eventos. Um código de erro do Windows não está disponível.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType)">
      <summary>Grava uma entrada de erro, aviso, informação, auditoria de êxito ou auditoria de falha com o texto da mensagem fornecido no log de eventos.</summary>
      <param name="message">A cadeia de caracteres a ser gravada no log de eventos.</param>
      <param name="type">Um dos valores de <see cref="T:System.Diagnostics.EventLogEntryType" />.</param>
      <exception cref="T:System.ArgumentException">A propriedade <see cref="P:System.Diagnostics.EventLog.Source" /> do <see cref="T:System.Diagnostics.EventLog" /> não foi definida.  

ou - 
O método tentou registrar uma nova fonte de evento, mas o nome do computador em <see cref="P:System.Diagnostics.EventLog.MachineName" /> não é válido.  

ou - 
A origem já está registrada para um log de eventos diferente.  

ou - 
A cadeia de caracteres da mensagem tem mais de 31.839 bytes (32.766 em sistemas operacionais Windows anteriores ao Windows Vista).  

ou - 
O nome da origem resulta em um caminho de chave do Registro com mais de 254 caracteres.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="type" /> não é um <see cref="T:System.Diagnostics.EventLogEntryType" /> válido.</exception>
      <exception cref="T:System.InvalidOperationException">Não foi possível abrir a chave do Registro para o log de eventos.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">O sistema operacional relatou um erro ao gravar a entrada de evento no log de eventos. Um código de erro do Windows não está disponível.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32)">
      <summary>Grava no log de eventos uma entrada com o texto da mensagem especificado e o identificador de evento definido pelo aplicativo.</summary>
      <param name="message">A cadeia de caracteres a ser gravada no log de eventos.</param>
      <param name="type">Um dos valores de <see cref="T:System.Diagnostics.EventLogEntryType" />.</param>
      <param name="eventID">O identificador específico do aplicativo para o evento.</param>
      <exception cref="T:System.ArgumentException">A propriedade <see cref="P:System.Diagnostics.EventLog.Source" /> do <see cref="T:System.Diagnostics.EventLog" /> não foi definida.  

ou - 
O método tentou registrar uma nova fonte de evento, mas o nome do computador em <see cref="P:System.Diagnostics.EventLog.MachineName" /> não é válido.  

ou - 
A origem já está registrada para um log de eventos diferente.  

ou - 
<paramref name="eventID" /> é menor que zero ou maior que <see cref="F:System.UInt16.MaxValue" />.  

ou - 
A cadeia de caracteres da mensagem tem mais de 31.839 bytes (32.766 em sistemas operacionais Windows anteriores ao Windows Vista).  

ou - 
O nome da origem resulta em um caminho de chave do Registro com mais de 254 caracteres.</exception>
      <exception cref="T:System.InvalidOperationException">Não foi possível abrir a chave do Registro para o log de eventos.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="type" /> não é um <see cref="T:System.Diagnostics.EventLogEntryType" /> válido.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">O sistema operacional relatou um erro ao gravar a entrada de evento no log de eventos. Um código de erro do Windows não está disponível.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16)">
      <summary>Grava uma entrada com o texto da mensagem especificado, o identificador de evento definido pelo aplicativo e a categoria definida pelo aplicativo no log de eventos.</summary>
      <param name="message">A cadeia de caracteres a ser gravada no log de eventos.</param>
      <param name="type">Um dos valores de <see cref="T:System.Diagnostics.EventLogEntryType" />.</param>
      <param name="eventID">O identificador específico do aplicativo para o evento.</param>
      <param name="category">A subcategoria específica do aplicativo associada à mensagem.</param>
      <exception cref="T:System.ArgumentException">A propriedade <see cref="P:System.Diagnostics.EventLog.Source" /> do <see cref="T:System.Diagnostics.EventLog" /> não foi definida.  

ou - 
O método tentou registrar uma nova fonte de evento, mas o nome do computador em <see cref="P:System.Diagnostics.EventLog.MachineName" /> não é válido.  

ou - 
A origem já está registrada para um log de eventos diferente.  

ou - 
<paramref name="eventID" /> é menor que zero ou maior que <see cref="F:System.UInt16.MaxValue" />.  

ou - 
A cadeia de caracteres da mensagem tem mais de 31.839 bytes (32.766 em sistemas operacionais Windows anteriores ao Windows Vista).  

ou - 
O nome da origem resulta em um caminho de chave do Registro com mais de 254 caracteres.</exception>
      <exception cref="T:System.InvalidOperationException">Não foi possível abrir a chave do Registro para o log de eventos.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="type" /> não é um <see cref="T:System.Diagnostics.EventLogEntryType" /> válido.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">O sistema operacional relatou um erro ao gravar a entrada de evento no log de eventos. Um código de erro do Windows não está disponível.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16,System.Byte[])">
      <summary>Grava uma entrada com o texto da mensagem fornecido, o identificador de eventos definido pelo aplicativo e a categoria definida por aplicativo no log de eventos e anexa dados binários à mensagem.</summary>
      <param name="message">A cadeia de caracteres a ser gravada no log de eventos.</param>
      <param name="type">Um dos valores de <see cref="T:System.Diagnostics.EventLogEntryType" />.</param>
      <param name="eventID">O identificador específico do aplicativo para o evento.</param>
      <param name="category">A subcategoria específica do aplicativo associada à mensagem.</param>
      <param name="rawData">Uma matriz de bytes que contém os dados binários associados à entrada.</param>
      <exception cref="T:System.ArgumentException">A propriedade <see cref="P:System.Diagnostics.EventLog.Source" /> do <see cref="T:System.Diagnostics.EventLog" /> não foi definida.  

ou - 
O método tentou registrar uma nova fonte de evento, mas o nome do computador em <see cref="P:System.Diagnostics.EventLog.MachineName" /> não é válido.  

ou - 
A origem já está registrada para um log de eventos diferente.  

ou - 
<paramref name="eventID" /> é menor que zero ou maior que <see cref="F:System.UInt16.MaxValue" />.  

ou - 
A cadeia de caracteres da mensagem tem mais de 31.839 bytes (32.766 em sistemas operacionais Windows anteriores ao Windows Vista).  

ou - 
O nome da origem resulta em um caminho de chave do Registro com mais de 254 caracteres.</exception>
      <exception cref="T:System.InvalidOperationException">Não foi possível abrir a chave do Registro para o log de eventos.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="type" /> não é um <see cref="T:System.Diagnostics.EventLogEntryType" /> válido.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">O sistema operacional relatou um erro ao gravar a entrada de evento no log de eventos. Um código de erro do Windows não está disponível.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String)">
      <summary>Grava uma entrada de tipo de informação com o texto da mensagem especificado no log de eventos usando a origem do evento registrada especificada.</summary>
      <param name="source">A origem pela qual o aplicativo está registrado no computador especificado.</param>
      <param name="message">A cadeia de caracteres a ser gravada no log de eventos.</param>
      <exception cref="T:System.ArgumentException">O valor <paramref name="source" /> é uma cadeia de caracteres vazia ("").  

ou - 
O valor <paramref name="source" /> é <see langword="null" />.  

ou - 
A cadeia de caracteres da mensagem tem mais de 31.839 bytes (32.766 em sistemas operacionais Windows anteriores ao Windows Vista).  

ou - 
O nome da origem resulta em um caminho de chave do Registro com mais de 254 caracteres.</exception>
      <exception cref="T:System.InvalidOperationException">Não foi possível abrir a chave do Registro para o log de eventos.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">O sistema operacional relatou um erro ao gravar a entrada de evento no log de eventos. Um código de erro do Windows não está disponível.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType)">
      <summary>Grava uma entrada de erro, aviso, informação, auditoria de êxito ou auditoria de falha com o texto da mensagem fornecido no log de eventos, usando a origem do evento registrado especificado.</summary>
      <param name="source">A origem pela qual o aplicativo está registrado no computador especificado.</param>
      <param name="message">A cadeia de caracteres a ser gravada no log de eventos.</param>
      <param name="type">Um dos valores de <see cref="T:System.Diagnostics.EventLogEntryType" />.</param>
      <exception cref="T:System.ArgumentException">O valor <paramref name="source" /> é uma cadeia de caracteres vazia ("").  

ou - 
O valor <paramref name="source" /> é <see langword="null" />.  

ou - 
A cadeia de caracteres da mensagem tem mais de 31.839 bytes (32.766 em sistemas operacionais Windows anteriores ao Windows Vista).  

ou - 
O nome da origem resulta em um caminho de chave do Registro com mais de 254 caracteres.</exception>
      <exception cref="T:System.InvalidOperationException">Não foi possível abrir a chave do Registro para o log de eventos.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="type" /> não é um <see cref="T:System.Diagnostics.EventLogEntryType" /> válido.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">O sistema operacional relatou um erro ao gravar a entrada de evento no log de eventos. Um código de erro do Windows não está disponível.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType,System.Int32)">
      <summary>Grava uma entrada com o texto da mensagem especificado e o identificador de evento definido pelo aplicativo no log de eventos, usando a fonte de evento registrada especificada.</summary>
      <param name="source">A origem pela qual o aplicativo está registrado no computador especificado.</param>
      <param name="message">A cadeia de caracteres a ser gravada no log de eventos.</param>
      <param name="type">Um dos valores de <see cref="T:System.Diagnostics.EventLogEntryType" />.</param>
      <param name="eventID">O identificador específico do aplicativo para o evento.</param>
      <exception cref="T:System.ArgumentException">O valor <paramref name="source" /> é uma cadeia de caracteres vazia ("").  

ou - 
O valor <paramref name="source" /> é <see langword="null" />.  

ou - 
<paramref name="eventID" /> é menor que zero ou maior que <see cref="F:System.UInt16.MaxValue" />.  

ou - 
A cadeia de caracteres da mensagem tem mais de 31.839 bytes (32.766 em sistemas operacionais Windows anteriores ao Windows Vista).  

ou - 
O nome da origem resulta em um caminho de chave do Registro com mais de 254 caracteres.</exception>
      <exception cref="T:System.InvalidOperationException">Não foi possível abrir a chave do Registro para o log de eventos.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="type" /> não é um <see cref="T:System.Diagnostics.EventLogEntryType" /> válido.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">O sistema operacional relatou um erro ao gravar a entrada de evento no log de eventos. Um código de erro do Windows não está disponível.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16)">
      <summary>Grava uma entrada com o texto da mensagem fornecido, o identificador de evento definido pelo aplicativo e a categoria definida pelo aplicativo no log de eventos, usando a fonte de evento registrada especificada. O <paramref name="category" /> pode ser usado pelo Visualizador de Eventos para filtrar eventos no log.</summary>
      <param name="source">A origem pela qual o aplicativo está registrado no computador especificado.</param>
      <param name="message">A cadeia de caracteres a ser gravada no log de eventos.</param>
      <param name="type">Um dos valores de <see cref="T:System.Diagnostics.EventLogEntryType" />.</param>
      <param name="eventID">O identificador específico do aplicativo para o evento.</param>
      <param name="category">A subcategoria específica do aplicativo associada à mensagem.</param>
      <exception cref="T:System.ArgumentException">O valor <paramref name="source" /> é uma cadeia de caracteres vazia ("").  

ou - 
O valor <paramref name="source" /> é <see langword="null" />.  

ou - 
<paramref name="eventID" /> é menor que zero ou maior que <see cref="F:System.UInt16.MaxValue" />.  

ou - 
A cadeia de caracteres da mensagem tem mais de 31.839 bytes (32.766 em sistemas operacionais Windows anteriores ao Windows Vista).  

ou - 
O nome da origem resulta em um caminho de chave do Registro com mais de 254 caracteres.</exception>
      <exception cref="T:System.InvalidOperationException">Não foi possível abrir a chave do Registro para o log de eventos.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="type" /> não é um <see cref="T:System.Diagnostics.EventLogEntryType" /> válido.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">O sistema operacional relatou um erro ao gravar a entrada de evento no log de eventos. Um código de erro do Windows não está disponível.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16,System.Byte[])">
      <summary>Grava uma entrada com o texto da mensagem fornecido, o identificador de eventos definido pelo aplicativo e a categoria definida por aplicativo no log de eventos (usando a fonte de evento registrada especificada) e anexa dados binários à mensagem.</summary>
      <param name="source">A origem pela qual o aplicativo está registrado no computador especificado.</param>
      <param name="message">A cadeia de caracteres a ser gravada no log de eventos.</param>
      <param name="type">Um dos valores de <see cref="T:System.Diagnostics.EventLogEntryType" />.</param>
      <param name="eventID">O identificador específico do aplicativo para o evento.</param>
      <param name="category">A subcategoria específica do aplicativo associada à mensagem.</param>
      <param name="rawData">Uma matriz de bytes que contém os dados binários associados à entrada.</param>
      <exception cref="T:System.ArgumentException">O valor <paramref name="source" /> é uma cadeia de caracteres vazia ("").  

ou - 
O valor <paramref name="source" /> é <see langword="null" />.  

ou - 
<paramref name="eventID" /> é menor que zero ou maior que <see cref="F:System.UInt16.MaxValue" />.  

ou - 
A cadeia de caracteres da mensagem tem mais de 31.839 bytes (32.766 em sistemas operacionais Windows anteriores ao Windows Vista).  

ou - 
O nome da origem resulta em um caminho de chave do Registro com mais de 254 caracteres.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="type" /> não é um <see cref="T:System.Diagnostics.EventLogEntryType" /> válido.</exception>
      <exception cref="T:System.InvalidOperationException">Não foi possível abrir a chave do Registro para o log de eventos.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">O sistema operacional relatou um erro ao gravar a entrada de evento no log de eventos. Um código de erro do Windows não está disponível.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEvent(System.Diagnostics.EventInstance,System.Byte[],System.Object[])">
      <summary>Grava uma entrada de log de eventos com os dados de evento, cadeias de caracteres de substituição de mensagem e os dados binários associados.</summary>
      <param name="instance">Uma instância <see cref="T:System.Diagnostics.EventInstance" /> que representa uma entrada de log de eventos localizada.</param>
      <param name="data">Uma matriz de bytes que contém os dados binários associados à entrada.</param>
      <param name="values">Uma matriz de cadeias de caracteres para mesclar o texto da mensagem da entrada de log de eventos.</param>
      <exception cref="T:System.ArgumentException">A propriedade <see cref="P:System.Diagnostics.EventLog.Source" /> do <see cref="T:System.Diagnostics.EventLog" /> não foi definida.  

ou - 
O método tentou registrar uma nova fonte de evento, mas o nome do computador em <see cref="P:System.Diagnostics.EventLog.MachineName" /> não é válido.  

ou - 
A origem já está registrada para um log de eventos diferente.  

ou - 
<paramref name="instance.InstanceId" /> é menor que zero ou maior que <see cref="F:System.UInt16.MaxValue" />.  

ou - 
<paramref name="values" /> tem mais de 256 elementos.  

ou - 
Um dos elementos <paramref name="values" /> é maior que 32766 bytes.  

ou - 
O nome da origem resulta em um caminho de chave do Registro com mais de 254 caracteres.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Não foi possível abrir a chave do Registro para o log de eventos.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">O sistema operacional relatou um erro ao gravar a entrada de evento no log de eventos. Um código de erro do Windows não está disponível.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEvent(System.Diagnostics.EventInstance,System.Object[])">
      <summary>Grava uma entrada localizada no log de eventos.</summary>
      <param name="instance">Uma instância <see cref="T:System.Diagnostics.EventInstance" /> que representa uma entrada de log de eventos localizada.</param>
      <param name="values">Uma matriz de cadeias de caracteres para mesclar o texto da mensagem da entrada de log de eventos.</param>
      <exception cref="T:System.ArgumentException">A propriedade <see cref="P:System.Diagnostics.EventLog.Source" /> do <see cref="T:System.Diagnostics.EventLog" /> não foi definida.  

ou - 
O método tentou registrar uma nova fonte de evento, mas o nome do computador em <see cref="P:System.Diagnostics.EventLog.MachineName" /> não é válido.  

ou - 
A origem já está registrada para um log de eventos diferente.  

ou - 
<paramref name="instance.InstanceId" /> é menor que zero ou maior que <see cref="F:System.UInt16.MaxValue" />.  

ou - 
<paramref name="values" /> tem mais de 256 elementos.  

ou - 
Um dos elementos <paramref name="values" /> é maior que 32766 bytes.  

ou - 
O nome da origem resulta em um caminho de chave do Registro com mais de 254 caracteres.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Não foi possível abrir a chave do Registro para o log de eventos.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">O sistema operacional relatou um erro ao gravar a entrada de evento no log de eventos. Um código de erro do Windows não está disponível.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEvent(System.String,System.Diagnostics.EventInstance,System.Byte[],System.Object[])">
      <summary>Grava uma entrada de log de eventos com os dados de evento, cadeias de caracteres de substituição de mensagem e os dados binários associados e usando a origem do evento registrada especificada.</summary>
      <param name="source">O nome da origem de evento registrada para o aplicativo no computador especificado.</param>
      <param name="instance">Uma instância <see cref="T:System.Diagnostics.EventInstance" /> que representa uma entrada de log de eventos localizada.</param>
      <param name="data">Uma matriz de bytes que contém os dados binários associados à entrada.</param>
      <param name="values">Uma matriz de cadeias de caracteres para mesclar o texto da mensagem da entrada de log de eventos.</param>
      <exception cref="T:System.ArgumentException">O valor <paramref name="source" /> é uma cadeia de caracteres vazia ("").  

ou - 
O valor <paramref name="source" /> é <see langword="null" />.  

ou - 
<paramref name="instance.InstanceId" /> é menor que zero ou maior que <see cref="F:System.UInt16.MaxValue" />.  

ou - 
<paramref name="values" /> tem mais de 256 elementos.  

ou - 
Um dos elementos <paramref name="values" /> é maior que 32766 bytes.  

ou - 
O nome da origem resulta em um caminho de chave do Registro com mais de 254 caracteres.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Não foi possível abrir a chave do Registro para o log de eventos.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">O sistema operacional relatou um erro ao gravar a entrada de evento no log de eventos. Um código de erro do Windows não está disponível.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEvent(System.String,System.Diagnostics.EventInstance,System.Object[])">
      <summary>Grava uma entrada de log de eventos com os dados do evento e as cadeias de caracteres de substituição de mensagem, usando a origem de evento registrada especificada.</summary>
      <param name="source">O nome da origem de evento registrada para o aplicativo no computador especificado.</param>
      <param name="instance">Uma instância <see cref="T:System.Diagnostics.EventInstance" /> que representa uma entrada de log de eventos localizada.</param>
      <param name="values">Uma matriz de cadeias de caracteres para mesclar o texto da mensagem da entrada de log de eventos.</param>
      <exception cref="T:System.ArgumentException">O valor <paramref name="source" /> é uma cadeia de caracteres vazia ("").  

ou - 
O valor <paramref name="source" /> é <see langword="null" />.  

ou - 
<paramref name="instance.InstanceId" /> é menor que zero ou maior que <see cref="F:System.UInt16.MaxValue" />.  

ou - 
<paramref name="values" /> tem mais de 256 elementos.  

ou - 
Um dos elementos <paramref name="values" /> é maior que 32766 bytes.  

ou - 
O nome da origem resulta em um caminho de chave do Registro com mais de 254 caracteres.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Não foi possível abrir a chave do Registro para o log de eventos.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">O sistema operacional relatou um erro ao gravar a entrada de evento no log de eventos. Um código de erro do Windows não está disponível.</exception>
    </member>
    <member name="T:System.Diagnostics.EventLogEntry">
      <summary>Encapsula um único registro no log de eventos. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.Category">
      <summary>Obtém o texto associado à propriedade <see cref="P:System.Diagnostics.EventLogEntry.CategoryNumber" /> dessa entrada.</summary>
      <returns>O texto de categoria específico ao aplicativo.</returns>
      <exception cref="T:System.Exception">Não foi possível alocar o espaço para uma das cadeias de caracteres de inserção associadas à categoria.</exception>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.CategoryNumber">
      <summary>Obtém o número de categoria da entrada de log de eventos.</summary>
      <returns>O número de categoria específico do aplicativo para essa entrada.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.Data">
      <summary>Obtém os dados binários associados à entrada.</summary>
      <returns>Uma matriz de bytes que contém os dados binários associados à entrada.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.EntryType">
      <summary>Obtém o tipo de evento dessa entrada.</summary>
      <returns>O tipo de evento associado à entrada no log de eventos.</returns>
    </member>
    <member name="M:System.Diagnostics.EventLogEntry.Equals(System.Diagnostics.EventLogEntry)">
      <summary>Realiza uma comparação entre duas entradas de log de eventos.</summary>
      <param name="otherEntry">O <see cref="T:System.Diagnostics.EventLogEntry" /> de comparação.</param>
      <returns>
        <see langword="true" /> se os objetos <see cref="T:System.Diagnostics.EventLogEntry" /> forem idênticos; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.EventID">
      <summary>Obtém o identificador de evento específico do aplicativo para a entrada do evento atual.</summary>
      <returns>O identificador específico do aplicativo para a mensagem do evento.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.Index">
      <summary>Obtém o índice desta entrada no log de eventos.</summary>
      <returns>O índice dessa entrada no log de eventos.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.InstanceId">
      <summary>Obtém o identificador de recurso que designa o texto da mensagem da entrada do evento.</summary>
      <returns>Um identificador de recurso que corresponde a uma definição de cadeia de caracteres no arquivo de recurso de mensagem da fonte do evento.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.MachineName">
      <summary>Obtém o nome do computador no qual esta entrada foi gerada.</summary>
      <returns>O nome do computador que contém o log de eventos.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.Message">
      <summary>Obtém a mensagem localizada associada a essa entrada de evento.</summary>
      <returns>O texto formatado e localizado da mensagem. Isso inclui cadeias de caracteres de substituição associadas.</returns>
      <exception cref="T:System.Exception">Não foi possível alocar o espaço para uma das cadeias de caracteres de inserção associadas à mensagem.</exception>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.ReplacementStrings">
      <summary>Obtém as cadeias de caracteres de substituição associadas à entrada de log de eventos.</summary>
      <returns>Uma matriz que contém as cadeias de caracteres de substituição armazenadas na entrada do evento.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.Source">
      <summary>Obtém o nome do aplicativo que gerou este evento.</summary>
      <returns>O nome registrado no log de eventos como a origem desse evento.</returns>
    </member>
    <member name="M:System.Diagnostics.EventLogEntry.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Popula um <see cref="T:System.Runtime.Serialization.SerializationInfo" /> com os dados necessários para serializar o objeto de destino.</summary>
      <param name="info">O <see cref="T:System.Runtime.Serialization.SerializationInfo" /> a ser preenchido com dados.</param>
      <param name="context">O destino (consulte <see cref="T:System.Runtime.Serialization.StreamingContext" />) dessa serialização.</param>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.TimeGenerated">
      <summary>Obtém a hora local em que esse evento foi gravado.</summary>
      <returns>A hora local em que esse evento foi gerado.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.TimeWritten">
      <summary>Obtém a hora local em que esse evento foi gravado no log.</summary>
      <returns>A hora local em que esse evento foi gravado no log.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.UserName">
      <summary>Obtém o nome do usuário que é responsável por esse evento.</summary>
      <returns>O SID (identificador de segurança) que identifica exclusivamente um usuário ou grupo.</returns>
      <exception cref="T:System.SystemException">Não foi possível obter as informações de conta para o SID do usuário.</exception>
    </member>
    <member name="T:System.Diagnostics.EventLogEntryCollection">
      <summary>Define o tamanho e os enumeradores para uma coleção de instâncias <see cref="T:System.Diagnostics.EventLogEntry" />.</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogEntryCollection.CopyTo(System.Diagnostics.EventLogEntry[],System.Int32)">
      <summary>Copia os elementos do <see cref="T:System.Diagnostics.EventLogEntryCollection" /> para uma matriz de instâncias <see cref="T:System.Diagnostics.EventLogEntry" />, começando em um índice de matriz específico.</summary>
      <param name="entries">A matriz unidimensional de instâncias <see cref="T:System.Diagnostics.EventLogEntry" /> que é o destino dos elementos copiados da coleção. A matriz deve ter indexação com base em zero.</param>
      <param name="index">O índice de base zero na matriz em que a cópia começa.</param>
    </member>
    <member name="P:System.Diagnostics.EventLogEntryCollection.Count">
      <summary>Obtém o número de entradas no log de eventos (ou seja, o número de elementos na coleção <see cref="T:System.Diagnostics.EventLogEntry" />).</summary>
      <returns>O número de entradas atualmente no log de eventos.</returns>
    </member>
    <member name="M:System.Diagnostics.EventLogEntryCollection.GetEnumerator">
      <summary>É compatível com uma iteração simples no objeto <see cref="T:System.Diagnostics.EventLogEntryCollection" />.</summary>
      <returns>Um objeto que pode ser usado para iterar na coleção.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntryCollection.Item(System.Int32)">
      <summary>Obtém uma entrada no log de eventos, com base em um índice iniciado em 0 (zero).</summary>
      <param name="index">O índice baseado em zero associado à entrada de log de eventos.</param>
      <returns>A entrada de log de eventos no local especificada pelo parâmetro <paramref name="index" />.</returns>
    </member>
    <member name="M:System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copia os elementos da coleção para um <see cref="T:System.Array" />, começando em um índice <see cref="T:System.Array" /> específico.</summary>
      <param name="array">O <see cref="T:System.Array" /> unidimensional que é o destino dos elementos copiados da coleção. O <see cref="T:System.Array" /> deve ter indexação com base em zero.</param>
      <param name="index">O índice com base em zero em <paramref name="array" /> no qual a cópia começa.</param>
    </member>
    <member name="P:System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Obtém um valor que indica se o acesso a <see cref="T:System.Diagnostics.EventLogEntryCollection" /> é sincronizado (thread-safe).</summary>
      <returns>
        <see langword="false" />Se o acesso à coleção não for sincronizado (thread-safe).</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#SyncRoot">
      <summary>Obtém um objeto que pode ser usado para sincronizar o acesso ao objeto <see cref="T:System.Diagnostics.EventLogEntryCollection" />.</summary>
      <returns>Um objeto que pode ser usado para sincronizar o acesso à coleção.</returns>
    </member>
    <member name="T:System.Diagnostics.EventLogEntryType">
      <summary>Especifica o tipo de evento de uma entrada de log de eventos.</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogEntryType.Error">
      <summary>Um evento de erro. Isso indica um problema significativo do qual o usuário deve estar ciente; geralmente, uma perda de funcionalidade ou de dados.</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogEntryType.FailureAudit">
      <summary>Um evento de auditoria com falha. Isso indica um evento de segurança que ocorre quando há falha em uma tentativa de acesso auditado; por exemplo, uma falha ao tentar abrir um arquivo.</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogEntryType.Information">
      <summary>Um evento de informações. Isso indica uma operação significativa bem-sucedida.</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogEntryType.SuccessAudit">
      <summary>Um evento de auditoria com êxito. Isso indica um evento de segurança que ocorre quando uma tentativa de acesso auditado é bem-sucedida; por exemplo, um logon com êxito.</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogEntryType.Warning">
      <summary>Um evento de aviso. Isso indica um problema que não é significativo imediatamente, mas que pode indicar condições que podem causar problemas futuros.</summary>
    </member>
    <member name="T:System.Diagnostics.EventLogTraceListener">
      <summary>Fornece um ouvinte simples que direciona a saída do rastreamento ou da depuração para um <see cref="T:System.Diagnostics.EventLog" />.</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.EventLogTraceListener" /> sem um ouvinte de rastreamento.</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.#ctor(System.Diagnostics.EventLog)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.EventLogTraceListener" /> usando o log de evento especificado.</summary>
      <param name="eventLog">O log de eventos de gravação.</param>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.EventLogTraceListener" /> usando a origem especificada.</summary>
      <param name="source">O nome da origem de um log de eventos existente.</param>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.Close">
      <summary>Fecha o log de eventos para que ele não receba mais a saída de rastreamento ou de depuração.</summary>
    </member>
    <member name="P:System.Diagnostics.EventLogTraceListener.EventLog">
      <summary>Obtém ou define o log de eventos de gravação.</summary>
      <returns>O log de eventos de gravação.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogTraceListener.Name">
      <summary>Obtém ou define o nome deste <see cref="T:System.Diagnostics.EventLogTraceListener" />.</summary>
      <returns>O nome deste ouvinte de rastreamento.</returns>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
      <summary>Grava as informações de rastreamento, um objeto de dados e informações de evento no log de eventos.</summary>
      <param name="eventCache">Um objeto que contém as informações atuais de ID de processo, ID de thread e rastreamento de pilha.</param>
      <param name="source">Um nome usado para identificar a saída, geralmente o nome do aplicativo que gerou o evento de rastreamento.</param>
      <param name="severity">Um dos valores de enumeração que especifica o tipo de evento que causou o rastreamento.</param>
      <param name="id">Um identificador numérico do evento. A combinação de <paramref name="source" /> e <paramref name="id" /> identifica um evento de maneira exclusiva.</param>
      <param name="data">O objeto de dados a ser gravado no fluxo ou arquivo de saída.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> não está especificado.  

ou - 
A cadeia de caracteres de entrada de log excede 32.766 caracteres.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
      <summary>Grava as informações de rastreamento, uma matriz de objetos de dados e informações de evento para o log de evento.</summary>
      <param name="eventCache">Um objeto que contém as informações atuais de ID de processo, ID de thread e rastreamento de pilha.</param>
      <param name="source">Um nome usado para identificar a saída, geralmente o nome do aplicativo que gerou o evento de rastreamento.</param>
      <param name="severity">Um dos valores de enumeração que especifica o tipo de evento que causou o rastreamento.</param>
      <param name="id">Um identificador numérico do evento. A combinação de <paramref name="source" /> e <paramref name="id" /> identifica um evento de maneira exclusiva.</param>
      <param name="data">Uma matriz de objetos de dados.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> não está especificado.  

ou - 
A cadeia de caracteres de entrada de log excede 32.766 caracteres.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
      <summary>Grava informações de rastreamento, uma mensagem e informações de evento no log de eventos.</summary>
      <param name="eventCache">Um objeto que contém as informações atuais de ID de processo, ID de thread e rastreamento de pilha.</param>
      <param name="source">Um nome usado para identificar a saída, geralmente o nome do aplicativo que gerou o evento de rastreamento.</param>
      <param name="severity">Um dos valores de enumeração que especifica o tipo de evento que causou o rastreamento.</param>
      <param name="id">Um identificador numérico do evento. A combinação de <paramref name="source" /> e <paramref name="id" /> identifica um evento de maneira exclusiva.</param>
      <param name="message">A mensagem de rastreamento.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> não está especificado.  

ou - 
A cadeia de caracteres de entrada de log excede 32.766 caracteres.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
      <summary>Grava informações de rastreamento, uma matriz de objetos formatados e informações de evento no log de eventos.</summary>
      <param name="eventCache">Um objeto que contém as informações atuais de ID de processo, ID de thread e rastreamento de pilha.</param>
      <param name="source">Um nome usado para identificar a saída, geralmente o nome do aplicativo que gerou o evento de rastreamento.</param>
      <param name="severity">Um dos valores de enumeração que especifica o tipo de evento que causou o rastreamento.</param>
      <param name="id">Um identificador numérico do evento. A combinação de <paramref name="source" /> e <paramref name="id" /> identifica um evento de maneira exclusiva.</param>
      <param name="format">Uma cadeia de caracteres de formato que contém zero ou mais itens de formato, que correspondem aos objetos na matriz <paramref name="args" />.</param>
      <param name="args">Uma matriz <see langword="object" /> que contém zero ou mais objetos a serem formatados.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> não está especificado.  

ou - 
A cadeia de caracteres de entrada de log excede 32.766 caracteres.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.Write(System.String)">
      <summary>Grava uma mensagem no log de eventos para essa instância.</summary>
      <param name="message">A mensagem a ser gravada.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="message" /> excede 32.766 caracteres.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.WriteLine(System.String)">
      <summary>Grava uma mensagem no log de eventos para essa instância.</summary>
      <param name="message">A mensagem a ser gravada.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="message" /> excede 32.766 caracteres.</exception>
    </member>
    <member name="T:System.Diagnostics.EventSourceCreationData">
      <summary>Representa as configurações usadas para criar uma fonte de log de eventos no computador local ou em um computador remoto.</summary>
    </member>
    <member name="M:System.Diagnostics.EventSourceCreationData.#ctor(System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.EventSourceCreationData" /> com uma origem do evento e nome de registro do evento especificados.</summary>
      <param name="source">O nome a ser registrado com o log de eventos como uma fonte de entradas.</param>
      <param name="logName">O nome do log no qual as entradas da origem são gravadas.</param>
    </member>
    <member name="P:System.Diagnostics.EventSourceCreationData.CategoryCount">
      <summary>Obtém ou define o número de categorias no arquivo de recurso da categoria.</summary>
      <returns>O número de categorias no arquivo de recurso de categoria. O valor padrão é zero.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">A propriedade está definida com um valor negativo ou um valor maior que <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="P:System.Diagnostics.EventSourceCreationData.CategoryResourceFile">
      <summary>Obtém ou define o caminho do arquivo de recurso que contém cadeias de caracteres da categoria para a origem.</summary>
      <returns>O caminho do arquivo de recurso da categoria. O padrão é uma cadeia de caracteres vazia ("").</returns>
    </member>
    <member name="P:System.Diagnostics.EventSourceCreationData.LogName">
      <summary>Obtém ou define o nome do log de eventos no qual a origem grava as entradas.</summary>
      <returns>O nome do log de eventos. Isso pode ser Aplicativo, Sistema ou um nome de log personalizado. O valor padrão é “Application”.</returns>
    </member>
    <member name="P:System.Diagnostics.EventSourceCreationData.MachineName">
      <summary>Obtém ou define o nome do computador em que a origem do evento é registrada.</summary>
      <returns>O nome do sistema no qual registrar a origem do evento. O padrão é o computador local (".").</returns>
      <exception cref="T:System.ArgumentException">O nome do computador é inválido.</exception>
    </member>
    <member name="P:System.Diagnostics.EventSourceCreationData.MessageResourceFile">
      <summary>Obtém ou define o caminho do arquivo de recurso da mensagem que contém a cadeia de caracteres de formatação de mensagem para a origem.</summary>
      <returns>O caminho do arquivo de recurso da mensagem. O padrão é uma cadeia de caracteres vazia ("").</returns>
    </member>
    <member name="P:System.Diagnostics.EventSourceCreationData.ParameterResourceFile">
      <summary>Obtém ou define o caminho do arquivo de recurso que contém as cadeias de caracteres do parâmetro da mensagem para a origem.</summary>
      <returns>O caminho do arquivo de recurso de parâmetro. O padrão é uma cadeia de caracteres vazia ("").</returns>
    </member>
    <member name="P:System.Diagnostics.EventSourceCreationData.Source">
      <summary>Obtém ou define o nome a ser registrado com o log de eventos como uma origem do evento.</summary>
      <returns>O nome a ser registrado com o log de eventos como uma fonte de entradas. O padrão é uma cadeia de caracteres vazia ("").</returns>
    </member>
    <member name="T:System.Diagnostics.OverflowAction">
      <summary>Especifica como lidar com as entradas em um log de eventos que atingiu seu tamanho máximo do arquivo.</summary>
    </member>
    <member name="F:System.Diagnostics.OverflowAction.DoNotOverwrite">
      <summary>Indica que as entradas existentes serão retidas quando o log de eventos estiver cheio e novas entradas forem descartadas.</summary>
    </member>
    <member name="F:System.Diagnostics.OverflowAction.OverwriteAsNeeded">
      <summary>Indica que cada nova entrada substitui a entrada mais antiga, quando o log de eventos está cheio.</summary>
    </member>
    <member name="F:System.Diagnostics.OverflowAction.OverwriteOlder">
      <summary>Indica que os novos eventos substituem eventos mais antigos que o especificado pelo valor da propriedade <see cref="P:System.Diagnostics.EventLog.MinimumRetentionDays" /> quando o log de eventos está cheio. Novos eventos serão descartados se o log de eventos estiver cheio e não houver eventos mais antigos que o especificado pelo valor da propriedade <see cref="P:System.Diagnostics.EventLog.MinimumRetentionDays" />.</summary>
    </member>
  </members>
</doc>