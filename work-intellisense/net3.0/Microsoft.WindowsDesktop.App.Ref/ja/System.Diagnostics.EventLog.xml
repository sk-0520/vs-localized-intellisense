<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Diagnostics.EventLog</name>
  </assembly>
  <members>
    <member name="T:System.Diagnostics.EntryWrittenEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Diagnostics.EventLog.EntryWritten&quot; /&gt; event.">
        <see cref="E:System.Diagnostics.EventLog.EntryWritten" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.Diagnostics.EntryWrittenEventArgs.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.EntryWrittenEventArgs&quot; /&gt; class.">
        <see cref="T:System.Diagnostics.EntryWrittenEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Diagnostics.EntryWrittenEventArgs.#ctor(System.Diagnostics.EventLogEntry)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.EntryWrittenEventArgs&quot; /&gt; class with the specified event log entry.">指定したイベント ログ エントリを使用して、<see cref="T:System.Diagnostics.EntryWrittenEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="entry" vsli:raw="An &lt;see cref=&quot;T:System.Diagnostics.EventLogEntry&quot; /&gt; that represents the entry that was written.">書き込まれたエントリを表す <see cref="T:System.Diagnostics.EventLogEntry" />。</param>
    </member>
    <member name="P:System.Diagnostics.EntryWrittenEventArgs.Entry">
      <summary vsli:raw="Gets the event log entry that was written to the log.">ログに書き込まれたイベント ログ エントリを取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Diagnostics.EventLogEntry&quot; /&gt; that represents the entry that was written to the event log.">イベント ログに書き込まれたエントリを表す <see cref="T:System.Diagnostics.EventLogEntry" />。</returns>
    </member>
    <member name="T:System.Diagnostics.EntryWrittenEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Diagnostics.EventLog.EntryWritten&quot; /&gt; event of an &lt;see cref=&quot;T:System.Diagnostics.EventLog&quot; /&gt;.">
        <see cref="T:System.Diagnostics.EventLog" /> の <see cref="E:System.Diagnostics.EventLog.EntryWritten" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender" vsli:raw="The source of the event.">イベントのソース。</param>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.Diagnostics.EntryWrittenEventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.Diagnostics.EntryWrittenEventArgs" />。</param>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventBookmark">
      <summary vsli:raw="Represents a placeholder (bookmark) within an event stream. You can use the placeholder to mark a position and return to this position in a stream of events. An instance of this object can be obtained from an &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventRecord&quot; /&gt; object, in which case it corresponds to the position of that event record.">イベント ストリーム内のプレースホルダー (ブックマーク) を表します。 プレースホルダーを使用すると、位置をマークして、イベントのストリーム内のその位置に戻ることができます。 このオブジェクトのインスタンスは、<see cref="T:System.Diagnostics.Eventing.Reader.EventRecord" /> オブジェクトから取得できます。その場合、そのインスタンスはそのイベント レコードの位置に対応します。</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventKeyword">
      <summary vsli:raw="Represents a keyword for an event. Keywords are defined in an event provider and are used to group the event with other similar events (based on the usage of the events).">イベントのキーワードを表します。 キーワードはイベント プロバイダーで定義され、イベントの使用方法に基づいてイベントを他の類似イベントと共にグループ化するために使用されます。</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventKeyword.DisplayName">
      <summary vsli:raw="Gets the localized name of the keyword.">キーワードのローカライズされた名前を取得します。</summary>
      <returns vsli:raw="A string that contains a localized name for this keyword.">このキーワードのローカライズされた名前を含む文字列。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventKeyword.Name">
      <summary vsli:raw="Gets the non-localized name of the keyword.">キーワードのローカライズされていない名前を取得します。</summary>
      <returns vsli:raw="A string that contains the non-localized name of this keyword.">このキーワードのローカライズされていない名前を含む文字列。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventKeyword.Value">
      <summary vsli:raw="Gets the numeric value associated with the keyword.">キーワードに関連付けられている数値を取得します。</summary>
      <returns vsli:raw="The numeric value associated with the keyword.">キーワードに関連付けられている数値。</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLevel">
      <summary vsli:raw="Contains an event level that is defined in an event provider. The level signifies the severity of the event.">イベント プロバイダーで定義されているイベント レベルを格納します。 このレベルは、イベントの重大度を示します。</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLevel.DisplayName">
      <summary vsli:raw="Gets the localized name for the event level. The name describes what severity level of events this level is used for.">イベント レベルのローカライズされた名前を取得します。 この名前は、このレベルが使用されているイベントの重大度レベルを示しています。</summary>
      <returns vsli:raw="A string that contains the localized name for the event level.">イベントレベルのローカライズされた名前を含む文字列。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLevel.Name">
      <summary vsli:raw="Gets the non-localized name of the event level.">イベント レベルのローカライズされていない名前を取得します。</summary>
      <returns vsli:raw="A string that contains the non-localized name of the event level.">イベントレベルのローカライズされていない名前を含む文字列。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLevel.Value">
      <summary vsli:raw="Gets the numeric value of the event level.">イベント レベルの数値を取得します。</summary>
      <returns vsli:raw="The numeric value of the event level.">イベントレベルの数値。</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration">
      <summary vsli:raw="Contains static information and configuration settings for an event log. Many of the configurations settings were defined by the event provider that created the log.">イベント ログの静的な情報および構成設定を格納します。 構成設定の多くは、ログを作成したイベント プロバイダーにより定義されています。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.#ctor(System.String)">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogConfiguration&quot; /&gt; object by specifying the local event log for which to get information and configuration settings.">情報および構成設定の取得対象となるローカル イベント ログを指定して、新しい <see cref="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" /> オブジェクトを初期化します。</summary>
      <param name="logName" vsli:raw="The name of the local event log for which to get information and configuration settings.">情報および構成設定の取得対象となるローカル イベント ログの名前。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.#ctor(System.String,System.Diagnostics.Eventing.Reader.EventLogSession)">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogConfiguration&quot; /&gt; object by specifying the name of the log for which to get information and configuration settings. The log can be on the local computer or a remote computer, based on the event log session specified.">情報および構成設定の取得対象となるログの名前を指定して、新しい <see cref="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" /> オブジェクトを初期化します。 このログは、指定したイベント ログ セッションに応じて、ローカル コンピューターまたはリモート コンピューター上に存在します。</summary>
      <param name="logName" vsli:raw="The name of the event log for which to get information and configuration settings.">情報および構成設定の取得対象となるイベント ログの名前。</param>
      <param name="session" vsli:raw="The event log session used to determine the event log service that the specified log belongs to. The session is either connected to the event log service on the local computer or a remote computer.">指定したログが属しているイベント ログ サービスを決定するために使用するイベント ログ セッション。 このセッションは、ローカル コンピューターまたはリモート コンピューター上のイベント ログ サービスに接続されています。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose">
      <summary vsli:raw="Releases all the resources used by this object.">このオブジェクトに使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by this object, and optionally releases the managed resources.">このオブジェクトに使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.IsClassicLog">
      <summary vsli:raw="Gets a value that indicates whether the event log is a classic event log. A classic event log is one that has its events defined in an .mc file instead of a manifest (.xml file) used by the event provider.">イベント ログが従来のイベント ログかどうかを示す値を取得します。 従来のイベント ログとは、そのイベントが、イベント プロバイダーで使用されるマニフェスト (.xml ファイル) ではなく、.mc ファイルで定義されているイベント ログです。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the event log is a classic log; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />イベントログが従来のログである場合は、それ以外<see langword="false" />の場合は。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.IsEnabled">
      <summary vsli:raw="Gets or sets a value that indicates whether the event log is enabled or disabled. An enabled log is one in which events can be logged, and a disabled log is one in which events cannot be logged.">イベント ログが有効か無効かを示す値を取得または設定します。 有効なログとはイベントを記録できるログで、無効なログとはイベントを記録できないログです。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the log is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />ログが有効な場合は。それ以外<see langword="false" />の場合は。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogFilePath">
      <summary vsli:raw="Gets or sets the file directory path to the location of the file where the events are stored for the log.">イベントをログに格納するファイルの場所へのファイル ディレクトリ パスを取得または設定します。</summary>
      <returns vsli:raw="A string that contains the path to the event log file.">イベントログファイルへのパスを含む文字列。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogIsolation">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogIsolation&quot; /&gt; value that specifies whether the event log is an application, system, or custom event log.">イベント ログが、アプリケーション、システム、またはカスタムのいずれのイベント ログであるかを示す <see cref="T:System.Diagnostics.Eventing.Reader.EventLogIsolation" /> 値を取得します。</summary>
      <returns vsli:raw="One of the enumeration values.">列挙値の 1 つ。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogMode">
      <summary vsli:raw="Gets or sets an &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogMode&quot; /&gt; value that determines how events are handled when the event log becomes full.">イベント ログがいっぱいになった場合のイベントの処理方法を決定する <see cref="T:System.Diagnostics.Eventing.Reader.EventLogMode" /> 値を取得または設定します。</summary>
      <returns vsli:raw="One of the enumeration values.">列挙値の 1 つ。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogName">
      <summary vsli:raw="Gets the name of the event log.">イベント ログの名前を取得します。</summary>
      <returns vsli:raw="The name of the event log.">イベント ログの名前。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogType">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogType&quot; /&gt; value that determines the type of the event log.">イベント ログの種類を判断する <see cref="T:System.Diagnostics.Eventing.Reader.EventLogType" /> 値を取得します。</summary>
      <returns vsli:raw="One of the enumeration values.">列挙値の 1 つ。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.MaximumSizeInBytes">
      <summary vsli:raw="Gets or sets the maximum size, in bytes, that the event log file is allowed to be. When the file reaches this maximum size, it is considered full.">イベント ログ ファイルの最大サイズ (バイト単位) を取得または設定します。 ファイルがこの最大サイズに達すると、いっぱいであると見なされます。</summary>
      <returns vsli:raw="The maximum size, in bytes, that the event log file is allowed to be.">イベントログファイルの許容最大サイズ (バイト単位)。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.OwningProviderName">
      <summary vsli:raw="Gets the name of the event provider that created this event log.">このイベント ログを作成したイベント プロバイダーの名前を取得します。</summary>
      <returns vsli:raw="The name of the event provider that created this event log.">このイベントログを作成したイベントプロバイダーの名前。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderBufferSize">
      <summary vsli:raw="Gets the size of the buffer that the event provider uses for publishing events to the log.">イベント プロバイダーがログにイベントを発行するために使用するバッファーのサイズを取得します。</summary>
      <returns vsli:raw="The size of the buffer that the event provider uses for publishing events to the log. It can be &lt;see langword=&quot;null&quot; /&gt;.">イベントプロバイダーがログにイベントを発行するために使用するバッファーのサイズ。 <see langword="null" />を指定できます。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderControlGuid">
      <summary vsli:raw="Gets the control globally unique identifier (GUID) for the event log if the log is a debug log. If this log is not a debug log, this value is &lt;see langword=&quot;null&quot; /&gt;.">イベント ログがデバッグ ログである場合に、そのログに対するコントロールのグローバル一意識別子 (GUID: Globally Unique Identifier) を取得します。 このログがデバッグ ログでない場合、この値は <see langword="null" /> になります。</summary>
      <returns vsli:raw="A GUID value, or &lt;see langword=&quot;null&quot; /&gt; if the log is not a debug log.">GUID 値。ログが<see langword="null" />デバッグログでない場合は。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderKeywords">
      <summary vsli:raw="Gets or sets the keyword mask used by the event provider.">イベント プロバイダーで使用されるキーワード マスクを取得または設定します。</summary>
      <returns vsli:raw="The keyword mask used by the event provider, or &lt;see langword=&quot;null&quot; /&gt; if the event provider did not define any keywords.">イベントプロバイダーによって使用されるキーワードマスク<see langword="null" /> 。イベントプロバイダーがキーワードを定義しなかった場合は。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderLatency">
      <summary vsli:raw="Gets the maximum latency time used by the event provider when publishing events to the log.">イベントをログに発行するときにイベント プロバイダーが使用する最大待機時間を取得します。</summary>
      <returns vsli:raw="The maximum latency time used by the event provider when publishing events to the log, or &lt;see langword=&quot;null&quot; /&gt; if no latency time was specified by the event provider.">イベントをログに発行するときにイベントプロバイダーによって使用される最大<see langword="null" />待機時間。イベントプロバイダーによって待機時間が指定されなかった場合は。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderLevel">
      <summary vsli:raw="Gets or sets the maximum event level (which defines the severity of the event) that is allowed to be logged in the event log. This value is defined by the event provider.">イベント ログに記録できる最大のイベント レベル (これはイベントの重大度レベルを定義します) を取得または設定します。 この値はイベント プロバイダーによって定義されます。</summary>
      <returns vsli:raw="The maximum event level that is allowed to be logged in the event log, or &lt;see langword=&quot;null&quot; /&gt; if the maximum event level was not defined in the event provider.">イベントログへの記録が許可される最大のイベントレベル。イベントプロバイダー <see langword="null" />で最大イベントレベルが定義されていない場合は。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderMaximumNumberOfBuffers">
      <summary vsli:raw="Gets the maximum number of buffers used by the event provider to publish events to the event log.">イベントをイベント ログに発行するときにイベント プロバイダーが使用するバッファーの最大数を取得します。</summary>
      <returns vsli:raw="The maximum number of buffers used by the event provider to publish events to the event log. This value can be &lt;see langword=&quot;null&quot; /&gt;.">イベントをイベントログに発行するためにイベントプロバイダーによって使用されるバッファーの最大数。 この値は、<see langword="null" /> の場合もあります。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderMinimumNumberOfBuffers">
      <summary vsli:raw="Gets the minimum number of buffers used by the event provider to publish events to the event log.">イベントをイベント ログに発行するときにイベント プロバイダーが使用するバッファーの最小数を取得します。</summary>
      <returns vsli:raw="The minimum number of buffers used by the event provider to publish events to the event log. This value can be &lt;see langword=&quot;null&quot; /&gt;.">イベントをイベントログに発行するためにイベントプロバイダーによって使用されるバッファーの最小数。 この値は、<see langword="null" /> の場合もあります。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderNames">
      <summary vsli:raw="Gets an enumerable collection of the names of all the event providers that can publish events to this event log.">このイベント ログにイベントを発行できるすべてのイベント プロバイダーの名前の列挙可能なコレクションを取得します。</summary>
      <returns vsli:raw="An enumerable collection of strings that contain the event provider names.">イベント プロバイダーの名前が格納された文字列の列挙可能なコレクションです。</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges">
      <summary vsli:raw="Saves the configuration settings that.">構成設定を保存します。</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SecurityDescriptor">
      <summary vsli:raw="Gets or sets the security descriptor of the event log. The security descriptor defines the users and groups of users that can read and write to the event log.">イベント ログのセキュリティ記述子を取得または設定します。 セキュリティ記述子は、イベント ログの読み書きができるユーザーおよびユーザーのグループを定義します。</summary>
      <returns vsli:raw="A string that contains the security descriptor for the event log.">イベントログのセキュリティ記述子を格納している文字列。</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogException">
      <summary vsli:raw="Represents the base class for all the exceptions that are thrown when an error occurs while reading event log related information.">イベント ログに関連する情報の読み取り中にエラーが発生した場合にスローされるすべての例外の基本クラスを表します。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogException&quot; /&gt; class.">
        <see cref="T:System.Diagnostics.Eventing.Reader.EventLogException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogException&quot; /&gt; class with the error code for the exception.">例外のエラー コードを使用して、<see cref="T:System.Diagnostics.Eventing.Reader.EventLogException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="errorCode" vsli:raw="The error code for the error that occurred while reading or configuring event log related information.">イベント ログに関連する情報の読み取り中または構成中に発生したエラーのエラー コード。 イベント ログに関連するエラー コードの詳細および一覧については、http://go.microsoft.com/fwlink/?LinkId=82629 を参照してください。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogException&quot; /&gt; class with serialized data.">シリアル化したデータを使用して、<see cref="T:System.Diagnostics.Eventing.Reader.EventLogException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="serializationInfo" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that holds the serialized object data about the exception being thrown.">スローされている例外に関するシリアル化済みオブジェクト データを保持している <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクト。</param>
      <param name="streamingContext" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; object that contains contextual information about the source or destination.">転送元または転送先に関する文脈情報を含んでいる <see cref="T:System.Runtime.Serialization.StreamingContext" /> オブジェクト。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogException&quot; /&gt; class by specifying the error message that describes the current exception.">現在の例外を説明するエラー メッセージを指定して、<see cref="T:System.Diagnostics.Eventing.Reader.EventLogException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The error message that describes the current exception.">現在の例外を説明するエラー メッセージ。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogException&quot; /&gt; class with an error message and inner exception.">エラー メッセージおよび内部例外を使用して、<see cref="T:System.Diagnostics.Eventing.Reader.EventLogException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The error message that describes the current exception.">現在の例外を説明するエラー メッセージ。</param>
      <param name="innerException" vsli:raw="The Exception instance that caused the current exception.">現在の例外の原因となった例外インスタンス。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Sets the SerializationInfo object with information about the exception.">例外に関する情報を使用して、SerializationInfo オブジェクトを設定します。</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that holds the serialized object data about the exception thrown.">スローされている例外に関するシリアル化済みオブジェクト データを保持している <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクト。</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; object that contains contextual information about the source or destination.">転送元または転送先に関する文脈情報を含んでいる <see cref="T:System.Runtime.Serialization.StreamingContext" /> オブジェクト。</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogException.Message">
      <summary vsli:raw="Gets the error message that describes the current exception.">現在の例外を説明するエラー メッセージを取得します。</summary>
      <returns vsli:raw="Returns a string that contains the error message that describes the current exception.">現在の例外を説明するエラー メッセージが格納された文字列を返します。</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogInformation">
      <summary vsli:raw="Allows you to access the run-time properties of active event logs and event log files. These properties include the number of events in the log, the size of the log, a value that determines whether the log is full, and the last time the log was written to or accessed.">アクティブなイベント ログおよびイベント ログ ファイルの、実行時に設定されるプロパティにアクセスできるようにします。 これらのプロパティには、ログ内のイベント数、ログのサイズ、ログがいっぱいかどうかを判断する値、およびログに最後に書き込んだ時刻や最後にアクセスした時刻が格納されます。</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.Attributes">
      <summary vsli:raw="Gets the file attributes of the log file associated with the log.">ログに関連付けられているログ ファイルのファイル属性を取得します。</summary>
      <returns vsli:raw="Returns an integer value. This value can be null.">整数値を返します。 この値は null の場合もあります。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.CreationTime">
      <summary vsli:raw="Gets the time that the log file associated with the event log was created.">イベント ログに関連付けられているログ ファイルが作成された時刻を取得します。</summary>
      <returns vsli:raw="Returns a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object. This value can be null.">
        <see cref="T:System.DateTime" /> オブジェクトを返します。 この値は null の場合もあります。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.FileSize">
      <summary vsli:raw="Gets the size of the file, in bytes, associated with the event log.">イベント ログに関連付けられているファイルのサイズ (バイト単位) を取得します。</summary>
      <returns vsli:raw="Returns a long value.">long 型の値を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.IsLogFull">
      <summary vsli:raw="Gets a Boolean value that determines whether the log file has reached its maximum size (the log is full).">ログ ファイルが最大サイズに達した (ログがいっぱい) かどうかを判断するブール値を取得します。</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if the log is full, and returns &lt;see langword=&quot;false&quot; /&gt; if the log is not full.">ログがいっぱいである場合は <see langword="true" /> を返します。ログがいっぱいではない場合は <see langword="false" /> を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.LastAccessTime">
      <summary vsli:raw="Gets the last time the log file associated with the event log was accessed.">イベント ログに関連付けられているログ ファイルがアクセスされた最後の時刻を取得します。</summary>
      <returns vsli:raw="Returns a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object. This value can be null.">
        <see cref="T:System.DateTime" /> オブジェクトを返します。 この値は null の場合もあります。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.LastWriteTime">
      <summary vsli:raw="Gets the last time data was written to the log file associated with the event log.">イベント ログに関連付けられているログ ファイルにデータが書き込まれた最後の時刻を取得します。</summary>
      <returns vsli:raw="Returns a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object. This value can be null.">
        <see cref="T:System.DateTime" /> オブジェクトを返します。 この値は null の場合もあります。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.OldestRecordNumber">
      <summary vsli:raw="Gets the number of the oldest event record in the event log.">イベント ログ内の最も古いイベント レコードの番号を取得します。</summary>
      <returns vsli:raw="Returns a long value that represents the number of the oldest event record in the event log. This value can be null.">イベント ログ内の最も古いイベント レコードの番号を表す long 型の値を返します。 この値は null の場合もあります。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.RecordCount">
      <summary vsli:raw="Gets the number of event records in the event log.">イベント ログ内のイベント レコードの数を取得します。</summary>
      <returns vsli:raw="Returns a long value that represents the number of event records in the event log. This value can be null.">イベント ログ内のイベント レコードの数を表す long 型の値を返します。 この値は null の場合もあります。</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException">
      <summary vsli:raw="Represents the exception thrown when an event provider publishes invalid data in an event.">イベント プロバイダーがイベントで無効なデータを発行したときにスローされる例外を表します。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException&quot; /&gt; class.">
        <see cref="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException&quot; /&gt; class with serialized data.">シリアル化したデータを使用して、<see cref="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="serializationInfo" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that holds the serialized object data about the exception thrown.">スローされている例外に関するシリアル化済みオブジェクト データを保持している <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクト。</param>
      <param name="streamingContext" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; object that contains contextual information about the source or destination.">転送元または転送先に関する文脈情報を含んでいる <see cref="T:System.Runtime.Serialization.StreamingContext" /> オブジェクト。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException&quot; /&gt; class by specifying the error message that describes the current exception.">現在の例外を説明するエラー メッセージを指定して、<see cref="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The error message that describes the current exception.">現在の例外を説明するエラー メッセージ。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException&quot; /&gt; class with an error message and inner exception.">エラー メッセージおよび内部例外を使用して、<see cref="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The error message that describes the current exception.">現在の例外を説明するエラー メッセージ。</param>
      <param name="innerException" vsli:raw="The Exception instance that caused the current exception.">現在の例外の原因となった例外インスタンス。</param>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogIsolation">
      <summary vsli:raw="Defines the default access permissions for the event log. The Application and System values indicate that the log shares the access control list (ACL) with the appropriate Windows log (the Application or System event logs) and share the Event Tracing for Windows (ETW) session with other logs of the same isolation. All channels with Custom isolation use a private ETW session.">イベント ログの既定のアクセス許可を定義します。 Application 値と System 値は、そのログがアクセス制御リスト (ACL: Access Control List) を該当する Windows ログ (アプリケーション イベント ログまたはシステム イベント ログ) と共有し、ETW (Event Tracing for Windows) セッションを同じ分離の他のログと共有することを示しています。 Custom 分離が設定されたすべてのチャネルは、プライベート ETW セッションを使用します。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogIsolation.Application">
      <summary vsli:raw="The log shares the access control list with the Application event log and shares the ETW session with other logs that have Application isolation.">このログは、アクセス制御リストをアプリケーション イベント ログと共有し、ETW セッションを Application 分離が設定された他のログと共有します。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogIsolation.Custom">
      <summary vsli:raw="The event log is a custom event log that uses its own private ETW session.">このイベント ログは、独自のプライベート ETW セッションを使用するカスタム イベント ログです。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogIsolation.System">
      <summary vsli:raw="The log shares the access control list with the System event log and shares the ETW session with other logs that have System isolation.">このログは、アクセス制御リストをシステム イベント ログと共有し、ETW セッションを System 分離が設定された他のログと共有します。</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogLink">
      <summary vsli:raw="Represents a link between an event provider and an event log that the provider publishes events into. This object cannot be instantiated.">イベント プロバイダーとそのイベント プロバイダーがイベントを発行する先のイベント ログの間のリンクを表します。 このオブジェクトはインスタンス化できません。</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogLink.DisplayName">
      <summary vsli:raw="Gets the localized name of the event log.">イベント ログのローカライズされた名前を取得します。</summary>
      <returns vsli:raw="Returns a string that contains the localized name of the event log.">イベント ログのローカライズされた名前が格納された文字列を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogLink.IsImported">
      <summary vsli:raw="Gets a Boolean value that determines whether the event log is imported, rather than defined in the event provider. An imported event log is defined in a different provider.">イベント ログが、イベント プロバイダーで定義されたのではなくインポートされたのかどうかを示すブール値を取得します。 インポートされたイベント ログは、別のプロバイダーで定義されます。</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if the event log is imported by the event provider, and returns &lt;see langword=&quot;false&quot; /&gt; if the event log is not imported by the event provider.">イベント ログがイベント プロバイダーによってインポートされている場合は <see langword="true" /> を返します。イベント ログがイベント プロバイダーによってインポートされていない場合は <see langword="false" /> を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogLink.LogName">
      <summary vsli:raw="Gets the non-localized name of the event log associated with this object.">このオブジェクトに関連付けられているイベント ログのローカライズされていない名前を取得します。</summary>
      <returns vsli:raw="Returns a string that contains the non-localized name of the event log associated with this object.">このオブジェクトに関連付けられているイベント ログのローカライズされていない名前が格納された文字列を返します。</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogMode">
      <summary vsli:raw="Determines the behavior for the event log service handles an event log when the log reaches its maximum allowed size (when the event log is full).">ログが最大サイズに達した (イベント ログがいっぱいになった) 場合にイベント ログを処理するイベント ログ サービスの動作を決定します。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogMode.AutoBackup">
      <summary vsli:raw="Archive the log when full, do not overwrite events. The log is automatically archived when necessary. No events are overwritten.">ログがいっぱいになったら、アーカイブします。イベントは上書きしません。 このログは、必要に応じて自動的にアーカイブされます。 イベントが上書きされることはありません。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogMode.Circular">
      <summary vsli:raw="New events continue to be stored when the log file is full. Each new incoming event replaces the oldest event in the log.">ログ ファイルがいっぱいになっても、新しいイベントの格納を継続します。 それぞれの新しい受信イベントで、ログ内の最も古いイベントが置き換えられます。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogMode.Retain">
      <summary vsli:raw="Do not overwrite events. Clear the log manually rather than automatically.">イベントを上書きしません。 ログは、自動ではなく手動でクリアします。</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException">
      <summary vsli:raw="Represents the exception that is thrown when a requested event log (usually specified by the name of the event log or the path to the event log file) does not exist.">要求されたイベント ログ (通常はイベント ログの名前またはイベント ログ ファイルのパスで指定されます) が存在しないときにスローされる例外を表します。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException&quot; /&gt; class.">
        <see cref="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException&quot; /&gt; class with serialized data.">シリアル化したデータを使用して、<see cref="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="serializationInfo" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that holds the serialized object data about the exception thrown.">スローされている例外に関するシリアル化済みオブジェクト データを保持している <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクト。</param>
      <param name="streamingContext" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; object that contains contextual information about the source or destination.">転送元または転送先に関する文脈情報を含んでいる <see cref="T:System.Runtime.Serialization.StreamingContext" /> オブジェクト。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException&quot; /&gt; class by specifying the error message that describes the current exception.">現在の例外を説明するエラー メッセージを指定して、<see cref="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The error message that describes the current exception.">現在の例外を説明するエラー メッセージ。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException&quot; /&gt; class with an error message and inner exception.">エラー メッセージおよび内部例外を使用して、<see cref="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The error message that describes the current exception.">現在の例外を説明するエラー メッセージ。</param>
      <param name="innerException" vsli:raw="The Exception instance that caused the current exception.">現在の例外の原因となった例外インスタンス。</param>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogPropertySelector">
      <summary vsli:raw="Contains an array of strings that represent XPath queries for elements in the XML representation of an event, which is based on the Event Schema. The queries in this object are used to extract values from the event.">イベントの XML 表現内の要素に対応する XPath クエリを表す文字列配列を格納します。これは、イベント スキーマに基づいています。 このオブジェクトのクエリは、イベントから値を抽出するために使用されます。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogPropertySelector.#ctor(System.Collections.Generic.IEnumerable{System.String})">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogPropertySelector&quot; /&gt; class instance.">
        <see cref="T:System.Diagnostics.Eventing.Reader.EventLogPropertySelector" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="propertyQueries" vsli:raw="XPath queries used to extract values from the XML representation of the event.">イベントの XML 表現から値を抽出するために使用する XPath クエリ。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogPropertySelector.Dispose">
      <summary vsli:raw="Releases all the resources used by this object.">このオブジェクトに使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogPropertySelector.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by this object, and optionally releases the managed resources.">このオブジェクトに使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException">
      <summary vsli:raw="Represents the exception that is thrown when a specified event provider name references a disabled event provider. A disabled event provider cannot publish events.">指定したイベント プロバイダー名で、無効にされたイベント プロバイダーが参照されている場合にスローされる例外を表します。 無効にされたイベント プロバイダーは、イベントを発行できません。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException&quot; /&gt; class.">
        <see cref="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException&quot; /&gt; class with serialized data.">シリアル化したデータを使用して、<see cref="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="serializationInfo" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that holds the serialized object data about the exception thrown.">スローされている例外に関するシリアル化済みオブジェクト データを保持している <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクト。</param>
      <param name="streamingContext" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; object that contains contextual information about the source or destination.">転送元または転送先に関する文脈情報を含んでいる <see cref="T:System.Runtime.Serialization.StreamingContext" /> オブジェクト。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException&quot; /&gt; class by specifying the error message that describes the current exception.">現在の例外を説明するエラー メッセージを指定して、<see cref="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The error message that describes the current exception.">現在の例外を説明するエラー メッセージ。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException&quot; /&gt; class with an error message and inner exception.">エラー メッセージおよび内部例外を使用して、<see cref="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The error message that describes the current exception.">現在の例外を説明するエラー メッセージ。</param>
      <param name="innerException" vsli:raw="The Exception instance that caused the current exception.">現在の例外の原因となった例外インスタンス。</param>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogQuery">
      <summary vsli:raw="Represents a query for events in an event log and the settings that define how the query is executed and on what computer the query is executed on.">イベント ログ内のイベントのクエリと、クエリの実行方法および実行対象のコンピューターを定義する設定を表します。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogQuery&quot; /&gt; class by specifying the target of the query. The target can be an active event log or a log file.">クエリのターゲットを指定して、<see cref="T:System.Diagnostics.Eventing.Reader.EventLogQuery" /> クラスの新しいインスタンスを初期化します。 ターゲットには、アクティブなイベント ログまたはログ ファイルを指定できます。</summary>
      <param name="path" vsli:raw="The name of the event log to query, or the path to the event log file to query.">照会するイベント ログの名前、または照会するイベント ログ ファイルのパス。</param>
      <param name="pathType" vsli:raw="Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file.">パスのパラメーターで使用する文字列でイベント ログの名前またはイベント ログ ファイルのパスを指定するかどうかを指定します。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogQuery&quot; /&gt; class by specifying the target of the query and the event query. The target can be an active event log or a log file.">クエリのターゲットおよびイベント クエリを指定して、<see cref="T:System.Diagnostics.Eventing.Reader.EventLogQuery" /> クラスの新しいインスタンスを初期化します。 ターゲットには、アクティブなイベント ログまたはログ ファイルを指定できます。</summary>
      <param name="path" vsli:raw="The name of the event log to query, or the path to the event log file to query.">照会するイベント ログの名前、または照会するイベント ログ ファイルのパス。</param>
      <param name="pathType" vsli:raw="Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file.">パスのパラメーターで使用する文字列でイベント ログの名前またはイベント ログ ファイルのパスを指定するかどうかを指定します。</param>
      <param name="query" vsli:raw="The event query used to retrieve events that match the query conditions.">クエリの条件に一致するイベントを取得するために使用するイベント クエリ。</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogQuery.ReverseDirection">
      <summary vsli:raw="Gets or sets the Boolean value that determines whether to read events from the newest event in an event log to the oldest event in the log.">イベント ログ内の最も新しいイベントからログ内の最も古いイベントの方向にイベントを読み取るのかどうかを指定するブール値を取得または設定します。</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if events are read from the newest event in the log to the oldest event, and returns &lt;see langword=&quot;false&quot; /&gt; if events are read from the oldest event in the log to the newest event.">ログ内の最も新しいイベントから最も古いイベントの方向にイベントが読み取られる場合は <see langword="true" /> を返します。ログ内の最も古いイベントから最も新しいイベントの方向にイベントが読み取られる場合は <see langword="false" /> を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogQuery.Session">
      <summary vsli:raw="Gets or sets the session that access the Event Log service on the local computer or a remote computer. This object can be set to access a remote event log by creating a &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogReader&quot; /&gt; object or an &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogWatcher&quot; /&gt; object with this &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogQuery&quot; /&gt; object.">ローカル コンピューターまたはリモート コンピューターのイベント ログ サービスにアクセスするセッションを取得または設定します。 このオブジェクトは、この <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" /> オブジェクトと共に <see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" /> オブジェクトまたは <see cref="T:System.Diagnostics.Eventing.Reader.EventLogQuery" /> オブジェクトを作成することで、リモート イベント ログにアクセスするように設定できます。</summary>
      <returns vsli:raw="Returns an &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogSession&quot; /&gt; object.">
        <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" /> オブジェクトを返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogQuery.TolerateQueryErrors">
      <summary vsli:raw="Gets or sets a Boolean value that determines whether this query will continue to retrieve events when the query has an error.">クエリにエラーがある場合、このクエリがイベントの取得を継続するのかどうかを指定するブール値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; indicates that the query will continue to retrieve events even if the query fails for some logs, and &lt;see langword=&quot;false&quot; /&gt; indicates that this query will not continue to retrieve events when the query fails.">
        <see langword="true" /> は、一部のログでクエリが失敗する場合でも、このクエリがイベントの取得を継続することを示します。<see langword="false" /> は、クエリが失敗した場合、このクエリがイベントの取得を継続しないことを示します。</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogReader">
      <summary vsli:raw="Enables you to read events from an event log based on an event query. The events that are read by this object are returned as &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventRecord&quot; /&gt; objects.">イベント クエリに基づいて、イベント ログからイベントを読み取ることができるようにします。 このオブジェクトによって読み取られるイベントは、<see cref="T:System.Diagnostics.Eventing.Reader.EventRecord" /> オブジェクトとして返されます。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogReader&quot; /&gt; class by specifying an event query.">イベント クエリを指定して、<see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="eventQuery" vsli:raw="The event query used to retrieve events.">イベントを取得するために使用するイベント クエリ。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogReader&quot; /&gt; class by specifying an event query and a bookmark that is used as starting position for the query.">イベント クエリ、およびクエリの開始位置として使用するブックマークを指定して、<see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="eventQuery" vsli:raw="The event query used to retrieve events.">イベントを取得するために使用するイベント クエリ。</param>
      <param name="bookmark" vsli:raw="The bookmark (placeholder) used as a starting position in the event log or stream of events. Only events logged after the bookmark event will be returned by the query.">イベント ログまたはイベント ストリーム内の開始位置として使用するブックマーク (プレースホルダー)。 ブックマーク イベントより後に記録されるイベントだけが、クエリによって返されます。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogReader&quot; /&gt; class by specifying an active event log to retrieve events from.">イベントの取得対象のアクティブなイベント ログを指定して、<see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="path" vsli:raw="The name of the event log to retrieve events from.">イベントの取得対象のイベント ログの名前。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogReader&quot; /&gt; class by specifying the name of an event log to retrieve events from or the path to a log file to retrieve events from.">イベントの取得対象のイベント ログの名前、またはイベントの取得対象のログ ファイルのパスを指定して、<see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="path" vsli:raw="The name of the event log to retrieve events from, or the path to the event log file to retrieve events from.">イベントの取得対象のイベント ログの名前、またはイベントの取得対象のイベント ログ ファイルのパス。</param>
      <param name="pathType" vsli:raw="Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file.">パスのパラメーターで使用する文字列でイベント ログの名前またはイベント ログ ファイルのパスを指定するかどうかを指定します。</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogReader.BatchSize">
      <summary vsli:raw="Gets or sets the number of events retrieved from the stream of events on every read operation.">読み取り操作のたびにイベントのストリームから取得されるイベントの数を取得または設定します。</summary>
      <returns vsli:raw="Returns an integer value.">整数値を返します。</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.CancelReading">
      <summary vsli:raw="Cancels the current query operation.">現在のクエリ操作をキャンセルします。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.Dispose">
      <summary vsli:raw="Releases all the resources used by this object.">このオブジェクトに使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by this object, and optionally releases the managed resources.">このオブジェクトに使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogReader.LogStatus">
      <summary vsli:raw="Gets the status of each event log or log file associated with the event query in this object.">このオブジェクト内のイベント クエリに関連付けられているイベント ログまたはログ ファイルごとのステータスを取得します。</summary>
      <returns vsli:raw="Returns a list of &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogStatus&quot; /&gt; objects that each contain status information about an event log associated with the event query in this object.">このオブジェクト内のイベント クエリに関連付けられたイベント ログに関するステータス情報がそれぞれに格納されている <see cref="T:System.Diagnostics.Eventing.Reader.EventLogStatus" /> オブジェクトのリストを返します。</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent">
      <summary vsli:raw="Reads the next event that is returned from the event query in this object.">このオブジェクト内のイベント クエリから返される次のイベントを読み取ります。</summary>
      <returns vsli:raw="Returns an &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventRecord&quot; /&gt; object.">
        <see cref="T:System.Diagnostics.Eventing.Reader.EventRecord" /> オブジェクトを返します。</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent(System.TimeSpan)">
      <summary vsli:raw="Reads the next event that is returned from the event query in this object.">このオブジェクト内のイベント クエリから返される次のイベントを読み取ります。</summary>
      <param name="timeout" vsli:raw="The maximum time to allow the read operation to run before canceling the operation.">キャンセルされるまでの、読み取り操作を実行できる最大時間。</param>
      <returns vsli:raw="Returns an &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventRecord&quot; /&gt; object.">
        <see cref="T:System.Diagnostics.Eventing.Reader.EventRecord" /> オブジェクトを返します。</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark)">
      <summary vsli:raw="Changes the position in the event stream where the next event that is read will come from by specifying a bookmark event. No events logged before the bookmark event will be retrieved.">ブックマーク イベントを指定して、読み取られる次のイベントの取得元になるイベント ストリーム内の位置を変更します。 ブックマーク イベントより前に記録されたイベントは取得されません。</summary>
      <param name="bookmark" vsli:raw="The bookmark (placeholder) used as a starting position in the event log or stream of events. Only events that have been logged after the bookmark event will be returned by the query.">イベント ログまたはイベント ストリーム内の開始位置として使用するブックマーク (プレースホルダー)。 ブックマーク イベントより後に記録されるイベントだけが、クエリによって返されます。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark,System.Int64)">
      <summary vsli:raw="Changes the position in the event stream where the next event that is read will come from by specifying a bookmark event and an offset number of events from the bookmark. No events logged before the bookmark plus the offset will be retrieved.">ブックマーク イベント、およびブックマークからのイベントのオフセット番号を指定して、読み取られる次のイベントの取得元になるイベント ストリーム内の位置を変更します。 ブックマーク イベントにオフセットを加えた位置より前に記録されたイベントは取得されません。</summary>
      <param name="bookmark" vsli:raw="The bookmark (placeholder) used as a starting position in the event log or stream of events. Only events that have been logged after the bookmark event will be returned by the query.">イベント ログまたはイベント ストリーム内の開始位置として使用するブックマーク (プレースホルダー)。 ブックマーク イベントより後に記録されるイベントだけが、クエリによって返されます。</param>
      <param name="offset" vsli:raw="The offset number of events to change the position of the bookmark.">ブックマークの位置を変更するためのイベントのオフセット番号。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.IO.SeekOrigin,System.Int64)">
      <summary vsli:raw="Changes the position in the event stream where the next event that is read will come from by specifying a starting position and an offset from the starting position. No events logged before the starting position plus the offset will be retrieved.">開始位置、および開始位置からのオフセットを指定して、読み取られる次のイベントの取得元になるイベント ストリーム内の位置を変更します。 開始位置にオフセットを加えた位置より前に記録されたイベントは取得されません。</summary>
      <param name="origin" vsli:raw="A value from the &lt;see cref=&quot;T:System.IO.SeekOrigin&quot; /&gt; enumeration defines where in the stream of events to start querying for events.">イベントのストリーム内でイベントに対してクエリを開始する位置を定義する <see cref="T:System.IO.SeekOrigin" /> 列挙値。</param>
      <param name="offset" vsli:raw="The offset number of events to add to the origin.">開始位置に追加するイベントのオフセット番号。</param>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogReadingException">
      <summary vsli:raw="Represents an exception that is thrown when an error occurred while reading, querying, or subscribing to the events in an event log.">イベント ログのイベントに対する読み取り、照会、またはサブスクライブ中にエラーが発生した場合にスローされる例外を表します。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogReadingException&quot; /&gt; class.">
        <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReadingException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogReadingException&quot; /&gt; class with serialized data.">シリアル化したデータを使用して、<see cref="T:System.Diagnostics.Eventing.Reader.EventLogReadingException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="serializationInfo" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that holds the serialized object data about the exception thrown.">スローされている例外に関するシリアル化済みオブジェクト データを保持している <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクト。</param>
      <param name="streamingContext" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; object that contains contextual information about the source or destination.">転送元または転送先に関する文脈情報を含んでいる <see cref="T:System.Runtime.Serialization.StreamingContext" /> オブジェクト。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogReadingException&quot; /&gt; class by specifying the error message that describes the current exception.">現在の例外を説明するエラー メッセージを指定して、<see cref="T:System.Diagnostics.Eventing.Reader.EventLogReadingException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The error message that describes the current exception.">現在の例外を説明するエラー メッセージ。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogReadingException&quot; /&gt; class with an error message and inner exception.">エラー メッセージおよび内部例外を使用して、<see cref="T:System.Diagnostics.Eventing.Reader.EventLogReadingException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The error message that describes the current exception.">現在の例外を説明するエラー メッセージ。</param>
      <param name="innerException" vsli:raw="The Exception instance that caused the current exception.">現在の例外の原因となった例外インスタンス。</param>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogRecord">
      <summary vsli:raw="Contains the properties of an event instance for an event that is received from an &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogReader&quot; /&gt; object. The event properties provide information about the event such as the name of the computer where the event was logged and the time that the event was created.">
        <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" /> オブジェクトから受信するイベントのイベント インスタンスのプロパティを格納します。 イベント プロパティは、イベントが記録されたコンピューターの名前やイベントが作成された時刻などのイベントに関する情報を提供します。</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ActivityId">
      <summary vsli:raw="Gets the globally unique identifier (GUID) for the activity in process for which the event is involved. This allows consumers to group related activities.">イベントに関連するプロセス内のアクティビティのグローバル一意識別子 (GUID: Globally Unique Identifier) を取得します。 これにより、コンシューマーは関連するアクティビティをグループ化できます。</summary>
      <returns vsli:raw="Returns a GUID value.">GUID 値を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Bookmark">
      <summary vsli:raw="Gets a placeholder (bookmark) that corresponds to this event. This can be used as a placeholder in a stream of events.">このイベントに対応するプレースホルダー (ブックマーク) を取得します。 これは、イベントのストリーム内でプレースホルダーとして使用できます。</summary>
      <returns vsli:raw="Returns a &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventBookmark&quot; /&gt; object.">
        <see cref="T:System.Diagnostics.Eventing.Reader.EventBookmark" /> オブジェクトを返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ContainerLog">
      <summary vsli:raw="Gets the name of the event log or the event log file in which the event is stored.">イベントが格納されるイベント ログまたはイベント ログ ファイルの名前を取得します。</summary>
      <returns vsli:raw="Returns a string that contains the name of the event log or the event log file in which the event is stored.">イベントが格納されるイベント ログまたはイベント ログ ファイルの名前を含む文字列を返します。</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogRecord.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by this object, and optionally releases the managed resources.">このオブジェクトに使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogRecord.FormatDescription">
      <summary vsli:raw="Gets the event message in the current locale.">現在のロケールでのイベント メッセージを取得します。</summary>
      <returns vsli:raw="Returns a string that contains the event message in the current locale.">現在のロケールでのイベント メッセージが格納された文字列を返します。</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogRecord.FormatDescription(System.Collections.Generic.IEnumerable{System.Object})">
      <summary vsli:raw="Gets the event message, replacing variables in the message with the specified values.">メッセージ内の変数を指定した値に置き換えたイベント メッセージを取得します。</summary>
      <param name="values" vsli:raw="The values used to replace variables in the event message. Variables are represented by %n, where n is a number.">イベント メッセージ内の変数を置き換えるために使用する値。 変数は %n で表されます。n は数字です。</param>
      <returns vsli:raw="Returns a string that contains the event message in the current locale.">現在のロケールでのイベント メッセージが格納された文字列を返します。</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogRecord.GetPropertyValues(System.Diagnostics.Eventing.Reader.EventLogPropertySelector)">
      <summary vsli:raw="Gets the enumeration of the values of the user-supplied event properties, or the results of XPath-based data if the event has XML representation.">ユーザーが指定したイベント プロパティの値の列挙体を返します。イベントが XML 表現を持つ場合は、XPath ベースのデータの結果を返します。</summary>
      <param name="propertySelector" vsli:raw="Selects the property values to return.">返すプロパティ値を選択します。</param>
      <returns vsli:raw="Returns a list of objects.">オブジェクトの一覧を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Id">
      <summary vsli:raw="Gets the identifier for this event. All events with this identifier value represent the same type of event.">このイベントの ID を取得します。 この ID 値を持つすべてのイベントは、同じ種類のイベントです。</summary>
      <returns vsli:raw="Returns an integer value. This value can be null.">整数値を返します。 この値は null の場合もあります。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Keywords">
      <summary vsli:raw="Gets the keyword mask of the event. Get the value of the &lt;see cref=&quot;P:System.Diagnostics.Eventing.Reader.EventLogRecord.KeywordsDisplayNames&quot; /&gt; property to get the name of the keywords used in this mask.">イベントのキーワード マスクを取得します。 このマスクで使用されるキーワードの名前を取得するには、<see cref="P:System.Diagnostics.Eventing.Reader.EventLogRecord.KeywordsDisplayNames" /> プロパティの値を取得します。</summary>
      <returns vsli:raw="Returns a long value. This value can be null.">long 型の値を返します。 この値は null の場合もあります。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.KeywordsDisplayNames">
      <summary vsli:raw="Gets the display names of the keywords used in the keyword mask for this event.">このイベントのキーワード マスクで使用されるキーワードの表示名を取得します。</summary>
      <returns vsli:raw="Returns an enumerable collection of strings that contain the display names of the keywords used in the keyword mask for this event.">このイベントのキーワード マスクで使用されるキーワードの表示名を含んでいる文字列の列挙可能なコレクションを返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Level">
      <summary vsli:raw="Gets the level of the event. The level signifies the severity of the event. For the name of the level, get the value of the &lt;see cref=&quot;P:System.Diagnostics.Eventing.Reader.EventLogRecord.LevelDisplayName&quot; /&gt; property.">イベントのレベルを取得します。 このレベルは、イベントの重大度を示します。 レベルの名前を参照するには、<see cref="P:System.Diagnostics.Eventing.Reader.EventLogRecord.LevelDisplayName" /> プロパティの値を取得します。</summary>
      <returns vsli:raw="Returns a byte value. This value can be null.">バイト値を返します。 この値は null の場合もあります。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.LevelDisplayName">
      <summary vsli:raw="Gets the display name of the level for this event.">このイベントのレベルの表示名を取得します。</summary>
      <returns vsli:raw="Returns a string that contains the display name of the level for this event.">このイベントのレベルの表示名が格納された文字列を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.LogName">
      <summary vsli:raw="Gets the name of the event log where this event is logged.">このイベントが記録されたイベント ログの名前を取得します。</summary>
      <returns vsli:raw="Returns a string that contains a name of the event log that contains this event.">このイベントを含むイベント ログの名前が格納された文字列を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.MachineName">
      <summary vsli:raw="Gets the name of the computer on which this event was logged.">このイベントが記録されたコンピューターの名前を取得します。</summary>
      <returns vsli:raw="Returns a string that contains the name of the computer on which this event was logged.">このイベントが記録されたコンピューターの名前が格納された文字列を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.MatchedQueryIds">
      <summary vsli:raw="Gets a list of query identifiers that this event matches. This event matches a query if the query would return this event.">このイベントに対応するクエリ ID の一覧を取得します。 クエリがこのイベントを返す場合、このイベントはそのクエリに対応します。</summary>
      <returns vsli:raw="Returns an enumerable collection of integer values.">整数値の列挙可能なコレクションを返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Opcode">
      <summary vsli:raw="Gets the opcode of the event. The opcode defines a numeric value that identifies the activity or a point within an activity that the application was performing when it raised the event. For the name of the opcode, get the value of the &lt;see cref=&quot;P:System.Diagnostics.Eventing.Reader.EventLogRecord.OpcodeDisplayName&quot; /&gt; property.">イベントのオペコードを取得します。 オペコードは、アプリケーションでイベントが発生したときに実行していたアクティビティまたはアクティビティ内のポイントを識別する数値を定義します。 オペコードの名前を参照するには、<see cref="P:System.Diagnostics.Eventing.Reader.EventLogRecord.OpcodeDisplayName" /> プロパティの値を取得します。</summary>
      <returns vsli:raw="Returns a short value. This value can be null.">short 型の値を返します。 この値は null の場合もあります。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.OpcodeDisplayName">
      <summary vsli:raw="Gets the display name of the opcode for this event.">このイベントのオペコードの表示名を取得します。</summary>
      <returns vsli:raw="Returns a string that contains the display name of the opcode for this event.">このイベントのオペコードの表示名が格納された文字列を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ProcessId">
      <summary vsli:raw="Gets the process identifier for the event provider that logged this event.">このイベントを記録するイベント プロバイダーのプロセス ID を取得します。</summary>
      <returns vsli:raw="Returns an integer value. This value can be null.">整数値を返します。 この値は null の場合もあります。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Properties">
      <summary vsli:raw="Gets the user-supplied properties of the event.">このイベントのユーザーが指定したプロパティを取得します。</summary>
      <returns vsli:raw="Returns a list of &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventProperty&quot; /&gt; objects.">
        <see cref="T:System.Diagnostics.Eventing.Reader.EventProperty" /> オブジェクトの一覧を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ProviderId">
      <summary vsli:raw="Gets the globally unique identifier (GUID) of the event provider that published this event.">このイベントを発行したイベント プロバイダーのグローバル一意識別子 (GUID: Globally Unique Identifier) を取得します。</summary>
      <returns vsli:raw="Returns a GUID value. This value can be null.">GUID 値を返します。 この値は null の場合もあります。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ProviderName">
      <summary vsli:raw="Gets the name of the event provider that published this event.">このイベントを発行したイベント プロバイダーの名前を取得します。</summary>
      <returns vsli:raw="Returns a string that contains the name of the event provider that published this event.">このイベントを発行したイベント プロバイダーの名前が格納された文字列を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Qualifiers">
      <summary vsli:raw="Gets qualifier numbers that are used for event identification.">イベントの識別に使用される修飾子番号を取得します。</summary>
      <returns vsli:raw="Returns an integer value. This value can be null.">整数値を返します。 この値は null の場合もあります。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.RecordId">
      <summary vsli:raw="Gets the event record identifier of the event in the log.">ログ内のイベントのイベント レコード ID を取得します。</summary>
      <returns vsli:raw="Returns a long value. This value can be null.">long 型の値を返します。 この値は null の場合もあります。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.RelatedActivityId">
      <summary vsli:raw="Gets a globally unique identifier (GUID) for a related activity in a process for which an event is involved.">イベントに関連するプロセス内の関連するアクティビティのグローバル一意識別子 (GUID: Globally Unique Identifier) を取得します。</summary>
      <returns vsli:raw="Returns a GUID value. This value can be null.">GUID 値を返します。 この値は null の場合もあります。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Task">
      <summary vsli:raw="Gets a task identifier for a portion of an application or a component that publishes an event. A task is a 16-bit value with 16 top values reserved. This type allows any value between 0x0000 and 0xffef to be used. For the name of the task, get the value of the &lt;see cref=&quot;P:System.Diagnostics.Eventing.Reader.EventLogRecord.TaskDisplayName&quot; /&gt; property.">イベントを発行するアプリケーションまたはコンポーネントの部分のタスク ID を取得します。 タスクは 16 ビット値で、最大の 16 個の値は予約済みです。 この型では、0x0000 ～ 0xffef の任意の値を使用できます。 タスクの名前を参照するには、<see cref="P:System.Diagnostics.Eventing.Reader.EventLogRecord.TaskDisplayName" /> プロパティの値を取得します。</summary>
      <returns vsli:raw="Returns an integer value. This value can be null.">整数値を返します。 この値は null の場合もあります。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.TaskDisplayName">
      <summary vsli:raw="Gets the display name of the task for the event.">イベントのタスクの表示名を取得します。</summary>
      <returns vsli:raw="Returns a string that contains the display name of the task for the event.">イベントのタスクの表示名が格納された文字列を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ThreadId">
      <summary vsli:raw="Gets the thread identifier for the thread that the event provider is running in.">イベント プロバイダーが実行されているスレッドのスレッド ID を取得します。</summary>
      <returns vsli:raw="Returns an integer value. This value can be null.">整数値を返します。 この値は null の場合もあります。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.TimeCreated">
      <summary vsli:raw="Gets the time, in &lt;see cref=&quot;T:System.DateTime&quot; /&gt; format, that the event was created.">イベントが作成された時刻を <see cref="T:System.DateTime" /> 形式で取得します。</summary>
      <returns vsli:raw="Returns a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value. The value can be null.">
        <see cref="T:System.DateTime" /> 値を返します。 この値は null の場合もあります。</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogRecord.ToXml">
      <summary vsli:raw="Gets the XML representation of the event. All of the event properties are represented in the event's XML. The XML conforms to the event schema.">イベントの XML 表現を取得します。 すべてのイベント プロパティは、そのイベントの XML の形式で表されます。 XML はイベント スキーマに準拠します。</summary>
      <returns vsli:raw="Returns a string that contains the XML representation of the event.">イベントの XML 表現が格納された文字列を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.UserId">
      <summary vsli:raw="Gets the security descriptor of the user whose context is used to publish the event.">イベントを発行するためにコンテキストを使用するユーザーのセキュリティ記述子を取得します。</summary>
      <returns vsli:raw="Returns a &lt;see cref=&quot;T:System.Security.Principal.SecurityIdentifier&quot; /&gt; value.">
        <see cref="T:System.Security.Principal.SecurityIdentifier" /> 値を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Version">
      <summary vsli:raw="Gets the version number for the event.">イベントのバージョン番号を取得します。</summary>
      <returns vsli:raw="Returns a byte value. This value can be null.">バイト値を返します。 この値は null の場合もあります。</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogSession">
      <summary vsli:raw="Used to access the Event Log service on the local computer or a remote computer so you can manage and gather information about the event logs and event providers on the computer.">ローカル コンピューターまたはリモート コンピューターのイベント ログ サービスへのアクセスに使用されます。これにより、コンピューター上のイベント ログおよびイベント プロバイダーに関する情報の管理と収集を行うことができます。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogSession&quot; /&gt; object, establishes a connection with the local Event Log service.">新しい <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" /> オブジェクトを初期化して、ローカルのイベント ログ サービスとの接続を確立します。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor(System.String)">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogSession&quot; /&gt; object, and establishes a connection with the Event Log service on the specified computer. The credentials (user name and password) of the user who calls the method is used for the credentials to access the remote computer.">新しい <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" /> オブジェクトを初期化して、指定したコンピューター上のイベント ログ サービスとの接続を確立します。 メソッドを呼び出すユーザーの資格情報 (ユーザー名およびパスワード) が、リモート コンピューターへのアクセスの資格情報に使用されます。</summary>
      <param name="server" vsli:raw="The name of the computer on which to connect to the Event Log service.">イベント ログ サービスに接続するコンピューターの名前。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor(System.String,System.String,System.String,System.Security.SecureString,System.Diagnostics.Eventing.Reader.SessionAuthentication)">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogSession&quot; /&gt; object, and establishes a connection with the Event Log service on the specified computer. The specified credentials (user name and password) are used for the credentials to access the remote computer.">新しい <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" /> オブジェクトを初期化して、指定したコンピューター上のイベント ログ サービスとの接続を確立します。 指定した資格情報 (ユーザー名およびパスワード) が、リモート コンピューターへのアクセスの資格情報に使用されます。</summary>
      <param name="server" vsli:raw="The name of the computer on which to connect to the Event Log service.">イベント ログ サービスに接続するコンピューターの名前。</param>
      <param name="domain" vsli:raw="The domain of the specified user.">指定したユーザーのドメイン。</param>
      <param name="user" vsli:raw="The user name used to connect to the remote computer.">リモート コンピューターへの接続に使用するユーザー名。</param>
      <param name="password" vsli:raw="The password used to connect to the remote computer.">リモート コンピューターへの接続に使用するパスワード。</param>
      <param name="logOnType" vsli:raw="The type of connection to use for the connection to the remote computer.">リモート コンピューターへの接続に使用される接続の種類。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.CancelCurrentOperations">
      <summary vsli:raw="Cancels any operations (such as reading an event log or subscribing to an event log) that are currently active for the Event Log service that this session object is connected to.">このセッション オブジェクトが接続するイベント ログ サービスの現在アクティブなあらゆる操作 (イベント ログの読み取り、イベント ログのサブスクライブなど) を取り消します。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String)">
      <summary vsli:raw="Clears events from the specified event log.">指定したイベント ログのイベントを消去します。</summary>
      <param name="logName" vsli:raw="The name of the event log to clear all the events from.">イベントをすべて消去するイベント ログの名前。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String,System.String)">
      <summary vsli:raw="Clears events from the specified event log, and saves the cleared events to the specified file.">指定したイベント ログからイベントを消去し、消去したイベントを指定したファイルに保存します。</summary>
      <param name="logName" vsli:raw="The name of the event log to clear all the events from.">イベントをすべて消去するイベント ログの名前。</param>
      <param name="backupPath" vsli:raw="The path to the file in which the cleared events will be saved. The file should end in .evtx.">消去したイベントを保存するファイルのパス。 ファイル名は、.evtx で終わる必要があります。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.Dispose">
      <summary vsli:raw="Releases all the resources used by this object.">このオブジェクトに使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by this object, and optionally releases the managed resources.">このオブジェクトに使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)">
      <summary vsli:raw="Exports events into an external log file. The events are stored without the event messages.">イベントを外部ログ ファイルにエクスポートします。 イベントは、イベント メッセージなしで格納されます。</summary>
      <param name="path" vsli:raw="The name of the event log to export events from, or the path to the event log file to export events from.">イベントのエクスポート元となるイベント ログの名前、またはイベントのエクスポート元となるイベント ログ ファイルのパス。</param>
      <param name="pathType" vsli:raw="Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file.">パスのパラメーターで使用する文字列でイベント ログの名前またはイベント ログ ファイルのパスを指定するかどうかを指定します。</param>
      <param name="query" vsli:raw="The query used to select the events to export.  Only the events returned from the query will be exported.">エクスポートするイベントの選択に使用するクエリ。  クエリから返されるイベントのみがエクスポートされます。</param>
      <param name="targetFilePath" vsli:raw="The path to the log file (ends in .evtx) in which the exported events will be stored after this method is executed.">このメソッドを実行した後に、エクスポートされたイベントが保存されるログ ファイル (末尾が .evtx) のパスです。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean)">
      <summary vsli:raw="Exports events into an external log file. A flag can be set to indicate that the method will continue exporting events even if the specified query fails for some logs. The events are stored without the event messages.">イベントを外部ログ ファイルにエクスポートします。 指定したクエリが一部のログで失敗した場合でも、メソッドによるイベントのエクスポートが続行されることを示すフラグを設定できます。 イベントは、イベント メッセージなしで格納されます。</summary>
      <param name="path" vsli:raw="The name of the event log to export events from, or the path to the event log file to export events from.">イベントのエクスポート元となるイベント ログの名前、またはイベントのエクスポート元となるイベント ログ ファイルのパス。</param>
      <param name="pathType" vsli:raw="Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file.">パスのパラメーターで使用する文字列でイベント ログの名前またはイベント ログ ファイルのパスを指定するかどうかを指定します。</param>
      <param name="query" vsli:raw="The query used to select the events to export. Only the events returned from the query will be exported.">エクスポートするイベントの選択に使用するクエリ。 クエリから返されるイベントのみがエクスポートされます。</param>
      <param name="targetFilePath" vsli:raw="The path to the log file (ends in .evtx) in which the exported events will be stored after this method is executed.">このメソッドを実行した後に、エクスポートされたイベントが保存されるログ ファイル (末尾が .evtx) のパスです。</param>
      <param name="tolerateQueryErrors" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; indicates that the method will continue exporting events even if the specified query fails for some logs, and &lt;see langword=&quot;false&quot; /&gt; indicates that this method will not continue to export events when the specified query fails.">
        <see langword="true" /> は、指定したクエリが一部のログで失敗した場合でも、メソッドによるイベントのエクスポートが続行されることを示します。<see langword="false" /> は、指定したクエリが失敗した場合、このメソッドによるイベントのエクスポートが続行されないことを示します。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)">
      <summary vsli:raw="Exports events and their messages into an external log file.">イベントとそのメッセージを外部のログ ファイルにエクスポートします。</summary>
      <param name="path" vsli:raw="The name of the event log to export events from, or the path to the event log file to export events from.">イベントのエクスポート元となるイベント ログの名前、またはイベントのエクスポート元となるイベント ログ ファイルのパス。</param>
      <param name="pathType" vsli:raw="Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file.">パスのパラメーターで使用する文字列でイベント ログの名前またはイベント ログ ファイルのパスを指定するかどうかを指定します。</param>
      <param name="query" vsli:raw="The query used to select the events to export.  Only the events returned from the query will be exported.">エクスポートするイベントの選択に使用するクエリ。  クエリから返されるイベントのみがエクスポートされます。</param>
      <param name="targetFilePath" vsli:raw="The path to the log file (ends in .evtx) in which the exported events will be stored after this method is executed.">このメソッドを実行した後に、エクスポートされたイベントが保存されるログ ファイル (末尾が .evtx) のパスです。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean,System.Globalization.CultureInfo)">
      <summary vsli:raw="Exports events and their messages into an external log file. A flag can be set to indicate that the method will continue exporting events even if the specified query fails for some logs. The event messages are exported in the specified language.">イベントとそのメッセージを外部のログ ファイルにエクスポートします。 指定したクエリが一部のログで失敗した場合でも、メソッドによるイベントのエクスポートが続行されることを示すフラグを設定できます。 イベント メッセージは、指定した言語でエクスポートされます。</summary>
      <param name="path" vsli:raw="The name of the event log to export events from, or the path to the event log file to export events from.">イベントのエクスポート元となるイベント ログの名前、またはイベントのエクスポート元となるイベント ログ ファイルのパス。</param>
      <param name="pathType" vsli:raw="Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file.">パスのパラメーターで使用する文字列でイベント ログの名前またはイベント ログ ファイルのパスを指定するかどうかを指定します。</param>
      <param name="query" vsli:raw="The query used to select the events to export.  Only the events returned from the query will be exported.">エクスポートするイベントの選択に使用するクエリ。  クエリから返されるイベントのみがエクスポートされます。</param>
      <param name="targetFilePath" vsli:raw="The path to the log file (ends in .evtx) in which the exported events will be stored after this method is executed.">このメソッドを実行した後に、エクスポートされたイベントが保存されるログ ファイル (末尾が .evtx) のパスです。</param>
      <param name="tolerateQueryErrors" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; indicates that the method will continue exporting events even if the specified query fails for some logs, and &lt;see langword=&quot;false&quot; /&gt; indicates that this method will not continue to export events when the specified query fails.">
        <see langword="true" /> は、指定したクエリが一部のログで失敗した場合でも、メソッドによるイベントのエクスポートが続行されることを示します。<see langword="false" /> は、指定したクエリが失敗した場合、このメソッドによるイベントのエクスポートが続行されないことを示します。</param>
      <param name="targetCultureInfo" vsli:raw="The culture that specifies which language that the exported event messages will be in.">エクスポートされるイベント メッセージに含まれる言語を指定するカルチャ。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.GetLogInformation(System.String,System.Diagnostics.Eventing.Reader.PathType)">
      <summary vsli:raw="Gets an object that contains runtime information for the specified event log.">指定したイベント ログのランタイム情報を格納するオブジェクトを取得します。</summary>
      <param name="logName" vsli:raw="The name of the event log to get information about, or the path to the event log file to get information about.">情報を取得する対象のイベント ログの名前、または、情報を取得する対象のイベント ログ ファイルのパス。</param>
      <param name="pathType" vsli:raw="Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file.">パスのパラメーターで使用する文字列でイベント ログの名前またはイベント ログ ファイルのパスを指定するかどうかを指定します。</param>
      <returns vsli:raw="An object that contains information about the specified log.">指定したログに関する情報が格納されたオブジェクトです。</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.GetLogNames">
      <summary vsli:raw="Gets an enumerable collection of all the event log names that are registered with the Event Log service.">イベント ログ サービスに登録されているすべてのイベント ログ名の列挙可能なコレクションを取得します。</summary>
      <returns vsli:raw="An enumerable collection of strings that contain the event log names.">イベント ログ名を格納する文字列の列挙可能なコレクションです。</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.GetProviderNames">
      <summary vsli:raw="Gets an enumerable collection of all the event provider names that are registered with the Event Log service. An event provider is an application that publishes events to an event log.">イベント ログ サービスに登録されているすべてのイベント プロバイダー名の列挙可能なコレクションを取得します。 イベント プロバイダーは、イベントをイベント ログに発行するアプリケーションです。</summary>
      <returns vsli:raw="An enumerable collection of strings that contain the event provider names.">イベント プロバイダーの名前が格納された文字列の列挙可能なコレクションです。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogSession.GlobalSession">
      <summary vsli:raw="Gets a static predefined session object that is connected to the Event Log service on the local computer.">ローカル コンピューターのイベント ログ サービスに接続される静的な定義済みのセッション オブジェクトを取得します。</summary>
      <returns vsli:raw="A predefined session object that is connected to the Event Log service on the local computer.">ローカルコンピューターのイベントログサービスに接続されている定義済みのセッションオブジェクト。</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogStatus">
      <summary vsli:raw="Contains the status code or error code for a specific event log. This status can be used to determine if the event log is available for an operation.">特定のイベント ログのステータス コードまたはエラー コードを格納します。 このステータスは、イベント ログの操作ができるかどうかを判断するために使用できます。</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogStatus.LogName">
      <summary vsli:raw="Gets the name of the event log for which the status code is obtained.">ステータス コードの取得対象のイベント ログの名前を取得します。</summary>
      <returns vsli:raw="The name of the event log for which the status code is obtained.">ステータスコードを取得する対象のイベントログの名前。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogStatus.StatusCode">
      <summary vsli:raw="Gets the status code or error code for the event log. This status or error is the result of a read or subscription operation on the event log.">イベント ログのステータス コードまたはエラー コードを取得します。 このステータスまたはエラーは、このイベント ログに対する読み取り操作またはサブスクリプション操作の結果です。</summary>
      <returns vsli:raw="The status code or error code for the event log.">イベントログのステータスコードまたはエラーコード。</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogType">
      <summary vsli:raw="Defines the type of events that are logged in an event log. Each log can only contain one type of event.">イベント ログに記録されるイベントの種類を定義します。 各ログに含めることができるイベントの種類は 1 つだけです。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogType.Administrative">
      <summary vsli:raw="These events are primarily for end users, administrators, and support. The events that are found in the Administrative type logs indicate a problem and a well-defined solution that an administrator can act on. An example of an administrative event is an event that occurs when an application fails to connect to a printer.">これらのイベントは、主にエンド ユーザー、管理者、およびサポートで使用されます。 管理用のログに格納されているイベントは、問題と、管理者が実施できるわかりやすい解決策を示しています。 管理イベントの例としては、アプリケーションがプリンターへの接続に失敗したときに発生するイベントがあります。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogType.Analytical">
      <summary vsli:raw="Events in an analytic event log are published in high volume. They describe program operation and indicate problems that cannot be handled by user intervention.">分析用のイベント ログのイベントは、大量に発行されます。 これらは、プログラム操作を記述し、ユーザーの介入によって処理できない問題を示しています。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogType.Debug">
      <summary vsli:raw="Events in a debug type event log are used solely by developers to diagnose a problem for debugging.">デバッグ用のイベント ログのイベントは、開発者がデバッグで問題を診断するためにだけ使用されます。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogType.Operational">
      <summary vsli:raw="Events in an operational type event log are used for analyzing and diagnosing a problem or occurrence. They can be used to trigger tools or tasks based on the problem or occurrence. An example of an operational event is an event that occurs when a printer is added or removed from a system.">運営用のイベント ログのイベントは、問題や現象を解析および診断するために使用されます。 これらは、問題や現象に基づいてツールやタスクをトリガーするために使用できます。 運営用のイベントの例としては、システムに対してプリンターを追加または削除したときに発生するイベントがあります。</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogWatcher">
      <summary vsli:raw="Allows you to subscribe to incoming events. Each time a desired event is published to an event log, the &lt;see cref=&quot;E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten&quot; /&gt; event is raised, and the method that handles this event will be executed.">受信イベントにサブスクライブできます。 目的のイベントがイベント ログに発行されるたびに <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> イベントが発生し、このイベントを処理するメソッドが実行されます。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogWatcher&quot; /&gt; class by specifying an event query.">イベント クエリを指定して、<see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="eventQuery" vsli:raw="Specifies a query for the event subscription. When an event is logged that matches the criteria expressed in the query, then the &lt;see cref=&quot;E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten&quot; /&gt; event is raised.">イベント サブスクリプションに対するクエリを指定します。 クエリ内に表現された基準を満たすイベントが記録されると、<see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> イベントが発生します。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogWatcher&quot; /&gt; class by specifying an event query and a bookmark that is used as starting position for the query.">イベント クエリ、およびクエリの開始位置として使用するブックマークを指定して、<see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="eventQuery" vsli:raw="Specifies a query for the event subscription. When an event is logged that matches the criteria expressed in the query, then the &lt;see cref=&quot;E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten&quot; /&gt; event is raised.">イベント サブスクリプションに対するクエリを指定します。 クエリ内に表現された基準を満たすイベントが記録されると、<see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> イベントが発生します。</param>
      <param name="bookmark" vsli:raw="The bookmark (placeholder) used as a starting position in the event log or stream of events. Only events that have been logged after the bookmark event will be returned by the query.">イベント ログまたはイベント ストリーム内の開始位置として使用するブックマーク (プレースホルダー)。 ブックマーク イベントより後に記録されるイベントだけが、クエリによって返されます。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogWatcher&quot; /&gt; class by specifying an event query, a bookmark that is used as starting position for the query, and a Boolean value that determines whether to read the events that already exist in the event log.">イベント クエリ、クエリの開始位置として使用するブックマーク、およびイベント ログに既に存在するイベントを読み取るかどうかを指定するブール値を指定して、<see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="eventQuery" vsli:raw="Specifies a query for the event subscription. When an event is logged that matches the criteria expressed in the query, then the &lt;see cref=&quot;E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten&quot; /&gt; event is raised.">イベント サブスクリプションに対するクエリを指定します。 クエリ内に表現された基準を満たすイベントが記録されると、<see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> イベントが発生します。</param>
      <param name="bookmark" vsli:raw="The bookmark (placeholder) used as a starting position in the event log or stream of events. Only events that have been logged after the bookmark event will be returned by the query.">イベント ログまたはイベント ストリーム内の開始位置として使用するブックマーク (プレースホルダー)。 ブックマーク イベントより後に記録されるイベントだけが、クエリによって返されます。</param>
      <param name="readExistingEvents" vsli:raw="A Boolean value that determines whether to read the events that already exist in the event log. If this value is &lt;see langword=&quot;true&quot; /&gt;, then the existing events are read and if this value is &lt;see langword=&quot;false&quot; /&gt;, then the existing events are not read.">イベント ログに既に存在するイベントを読み取るかどうかを指定するブール値。 この値が <see langword="true" /> の場合は既存のイベントが読み取られ、この値が <see langword="false" /> の場合は既存のイベントが読み取られません。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogWatcher&quot; /&gt; class by specifying the name or path to an event log.">イベント ログの名前またはパスを指定して、<see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="path" vsli:raw="The path or name of the event log monitor for events. If any event is logged in this event log, then the &lt;see cref=&quot;E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten&quot; /&gt; event is raised.">イベントを監視するイベント ログのパスまたは名前。 このイベント ログにいずれかのイベントが記録されると、<see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> イベントが発生します。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.Dispose">
      <summary vsli:raw="Releases all the resources used by this object.">このオブジェクトに使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by this object, and optionally releases the managed resources.">このオブジェクトに使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogWatcher.Enabled">
      <summary vsli:raw="Gets or sets a value that indicates whether this object starts delivering events to the event delegate.">このオブジェクトがイベント デリゲートへのイベント配信を開始するかどうかを示す値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; when this object can deliver events to the event delegate; &lt;see langword=&quot;false&quot; /&gt; when this object has stopped delivery.">
        <see langword="true" />このオブジェクトがイベントデリゲートにイベントを配信できる場合は。<see langword="false" />このオブジェクトの配信が停止されたとき。</returns>
    </member>
    <member name="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten">
      <summary vsli:raw="Allows setting a delegate (event handler method) that gets called every time an event is published that matches the criteria specified in the event query for this object.">このオブジェクトに対するイベント クエリに指定された基準を満たすイベントが発行されるたびに呼び出されるデリゲート (イベント ハンドラー メソッド) を設定できます。</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventMetadata">
      <summary vsli:raw="Contains the metadata (properties and settings) for an event that is defined in an event provider.">イベント プロバイダーで定義されているイベントのメタデータ (プロパティおよび設定) を保持します。</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Description">
      <summary vsli:raw="Gets the description template associated with the event using the current thread locale for the description language.">説明の言語に対応する現在のスレッド ロケールを使用して、イベントに関連付けられた説明のテンプレートを取得します。</summary>
      <returns vsli:raw="A string that contains the description template associated with the event.">イベントに関連付けられている説明テンプレートを表す文字列です。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Id">
      <summary vsli:raw="Gets the identifier of the event that is defined in the event provider.">イベント プロバイダーで定義されているイベントの ID を取得します。</summary>
      <returns vsli:raw="The event identifier.">イベント識別子。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Keywords">
      <summary vsli:raw="Gets the keywords associated with the event that is defined in the event provider.">イベント プロバイダーで定義されているイベントに関連付けられたキーワードを取得します。</summary>
      <returns vsli:raw="An enumerable collection of the keywords associated with the event.">イベントに関連付けられているキーワードの列挙可能なコレクション。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Level">
      <summary vsli:raw="Gets the level associated with the event that is defined in the event provider. The level defines the severity of the event.">イベント プロバイダーで定義されているイベントに関連付けられたレベルを取得します。 このレベルは、イベントの重大度レベルを定義します。</summary>
      <returns vsli:raw="The level associated with the event.">イベントに関連付けられているレベル。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.LogLink">
      <summary vsli:raw="Gets a link to the event log that receives this event when the provider publishes this event.">プロバイダーがこのイベントを発行したときにこのイベントを受信するイベント ログへのリンクを取得します。</summary>
      <returns vsli:raw="A link to the event log.">イベントログへのリンク。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Opcode">
      <summary vsli:raw="Gets the opcode associated with this event that is defined by an event provider. The opcode defines a numeric value that identifies the activity or a point within an activity that the application was performing when it raised the event.">イベント プロバイダーで定義されているこのイベントに関連付けられたオペコードを取得します。 オペコードは、アプリケーションでイベントが発生したときに実行していたアクティビティまたはアクティビティ内のポイントを識別する数値を定義します。</summary>
      <returns vsli:raw="The opcode associated with this event.">このイベントに関連付けられているオペコード。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Task">
      <summary vsli:raw="Gets the task associated with the event. A task identifies a portion of an application or a component that publishes an event.">イベントに関連付けられているタスクを取得します。 タスクは、イベントを発行するアプリケーションまたはコンポーネントの部分を識別します。</summary>
      <returns vsli:raw="The task associated with the event.">イベントに関連付けられているタスク。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Template">
      <summary vsli:raw="Gets the template string for the event. Templates are used to describe data that is used by a provider when an event is published. Templates optionally specify XML that provides the structure of an event. The XML allows values that the event publisher provides to be inserted during the rendering of an event.">イベントのテンプレート文字列を取得します。 テンプレートは、イベントの発行時にプロバイダーによって使用されるデータを記述するために使用します。 必要に応じて、テンプレートでイベントの構造を示す XML を指定することもできます。 XML を使用すると、イベントを表示する際にイベントの発行者が提供する値を挿入できます。</summary>
      <returns vsli:raw="A string that contains the template for the event.">イベントのテンプレートを格納している文字列。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Version">
      <summary vsli:raw="Gets the version of the event that qualifies the event identifier.">イベント ID を修飾するイベントのバージョンを取得します。</summary>
      <returns vsli:raw="A byte value that contains the version of the event.">イベントのバージョンを含むバイト値。</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventOpcode">
      <summary vsli:raw="Contains an event opcode that is defined in an event provider. An opcode defines a numeric value that identifies the activity or a point within an activity that the application was performing when it raised the event.">イベント プロバイダーで定義されているイベント オペコードを格納します。 オペコードは、アプリケーションでイベントが発生したときに実行していたアクティビティまたはアクティビティ内のポイントを識別する数値を定義します。</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventOpcode.DisplayName">
      <summary vsli:raw="Gets the localized name for an event opcode.">イベント オペコードのローカライズされた名前を取得します。</summary>
      <returns vsli:raw="The localized name for an event opcode.">イベントオペコードのローカライズされた名前。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventOpcode.Name">
      <summary vsli:raw="Gets the non-localized name for an event opcode.">イベント オペコードのローカライズされていない名前を取得します。</summary>
      <returns vsli:raw="The non-localized name for an event opcode.">イベントオペコードのローカライズされていない名前。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventOpcode.Value">
      <summary vsli:raw="Gets the numeric value associated with the event opcode.">イベント オペコードに関連付けられている数値を取得します。</summary>
      <returns vsli:raw="The numeric value associated with the event opcode.">イベントオペコードに関連付けられている数値。</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventProperty">
      <summary vsli:raw="Contains the value of an event property that is specified by the event provider when the event is published.">イベントが発行されたときにイベント プロバイダーによって指定されるイベント プロパティの値を格納します。</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventProperty.Value">
      <summary vsli:raw="Gets the value of the event property that is specified by the event provider when the event is published.">イベントが発行されたときにイベント プロバイダーによって指定されるイベント プロパティの値を取得します。</summary>
      <returns vsli:raw="The value of the event property.">イベントプロパティの値。</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventRecord">
      <summary vsli:raw="Defines the properties of an event instance for an event that is received from an &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogReader&quot; /&gt; object. The event properties provide information about the event such as the name of the computer where the event was logged and the time the event was created. This class is an abstract class. The &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogRecord&quot; /&gt; class implements this class.">
        <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" /> オブジェクトから受信するイベントのイベント インスタンスのプロパティを定義します。 イベント プロパティは、イベントが記録されたコンピューターの名前やイベントが作成された時刻などのイベントに関する情報を提供します。 このクラスは抽象クラスです。 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogRecord" /> クラスは、このクラスを実装します。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventRecord.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventRecord&quot; /&gt; class.">
        <see cref="T:System.Diagnostics.Eventing.Reader.EventRecord" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.ActivityId">
      <summary vsli:raw="Gets the globally unique identifier (GUID) for the activity in process for which the event is involved. This allows consumers to group related activities.">イベントに関連するプロセス内のアクティビティのグローバル一意識別子 (GUID: Globally Unique Identifier) を取得します。 これにより、コンシューマーは関連するアクティビティをグループ化できます。</summary>
      <returns vsli:raw="Returns a GUID value.">GUID 値を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Bookmark">
      <summary vsli:raw="Gets a placeholder (bookmark) that corresponds to this event. This can be used as a placeholder in a stream of events.">このイベントに対応するプレースホルダー (ブックマーク) を取得します。 これは、イベントのストリーム内でプレースホルダーとして使用できます。</summary>
      <returns vsli:raw="Returns a &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventBookmark&quot; /&gt; object.">
        <see cref="T:System.Diagnostics.Eventing.Reader.EventBookmark" /> オブジェクトを返します。</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventRecord.Dispose">
      <summary vsli:raw="Releases all the resources used by this object.">このオブジェクトに使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventRecord.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by this object, and optionally releases the managed resources.">このオブジェクトに使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventRecord.FormatDescription">
      <summary vsli:raw="Gets the event message in the current locale.">現在のロケールでのイベント メッセージを取得します。</summary>
      <returns vsli:raw="Returns a string that contains the event message in the current locale.">現在のロケールでのイベント メッセージが格納された文字列を返します。</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventRecord.FormatDescription(System.Collections.Generic.IEnumerable{System.Object})">
      <summary vsli:raw="Gets the event message, replacing variables in the message with the specified values.">メッセージ内の変数を指定した値に置き換えたイベント メッセージを取得します。</summary>
      <param name="values" vsli:raw="The values used to replace variables in the event message. Variables are represented by %n, where n is a number.">イベント メッセージ内の変数を置き換えるために使用する値。 変数は %n で表されます。n は数字です。</param>
      <returns vsli:raw="Returns a string that contains the event message in the current locale.">現在のロケールでのイベント メッセージが格納された文字列を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Id">
      <summary vsli:raw="Gets the identifier for this event. All events with this identifier value represent the same type of event.">このイベントの ID を取得します。 この ID 値を持つすべてのイベントは、同じ種類のイベントです。</summary>
      <returns vsli:raw="Returns an integer value. This value can be null.">整数値を返します。 この値は null の場合もあります。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Keywords">
      <summary vsli:raw="Gets the keyword mask of the event. Get the value of the &lt;see cref=&quot;P:System.Diagnostics.Eventing.Reader.EventRecord.KeywordsDisplayNames&quot; /&gt; property to get the name of the keywords used in this mask.">イベントのキーワード マスクを取得します。 このマスクで使用されるキーワードの名前を取得するには、<see cref="P:System.Diagnostics.Eventing.Reader.EventRecord.KeywordsDisplayNames" /> プロパティの値を取得します。</summary>
      <returns vsli:raw="Returns a long value. This value can be null.">long 型の値を返します。 この値は null の場合もあります。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.KeywordsDisplayNames">
      <summary vsli:raw="Gets the display names of the keywords used in the keyword mask for this event.">このイベントのキーワード マスクで使用されるキーワードの表示名を取得します。</summary>
      <returns vsli:raw="Returns an enumerable collection of strings that contain the display names of the keywords used in the keyword mask for this event.">このイベントのキーワード マスクで使用されるキーワードの表示名を含んでいる文字列の列挙可能なコレクションを返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Level">
      <summary vsli:raw="Gets the level of the event. The level signifies the severity of the event. For the name of the level, get the value of the &lt;see cref=&quot;P:System.Diagnostics.Eventing.Reader.EventRecord.LevelDisplayName&quot; /&gt; property.">イベントのレベルを取得します。 このレベルは、イベントの重大度を示します。 レベルの名前を参照するには、<see cref="P:System.Diagnostics.Eventing.Reader.EventRecord.LevelDisplayName" /> プロパティの値を取得します。</summary>
      <returns vsli:raw="Returns a byte value. This value can be null.">バイト値を返します。 この値は null の場合もあります。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.LevelDisplayName">
      <summary vsli:raw="Gets the display name of the level for this event.">このイベントのレベルの表示名を取得します。</summary>
      <returns vsli:raw="Returns a string that contains the display name of the level for this event.">このイベントのレベルの表示名が格納された文字列を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.LogName">
      <summary vsli:raw="Gets the name of the event log where this event is logged.">このイベントが記録されたイベント ログの名前を取得します。</summary>
      <returns vsli:raw="Returns a string that contains a name of the event log that contains this event.">このイベントを含むイベント ログの名前が格納された文字列を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.MachineName">
      <summary vsli:raw="Gets the name of the computer on which this event was logged.">このイベントが記録されたコンピューターの名前を取得します。</summary>
      <returns vsli:raw="Returns a string that contains the name of the computer on which this event was logged.">このイベントが記録されたコンピューターの名前が格納された文字列を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Opcode">
      <summary vsli:raw="Gets the opcode of the event. The opcode defines a numeric value that identifies the activity or a point within an activity that the application was performing when it raised the event. For the name of the opcode, get the value of the &lt;see cref=&quot;P:System.Diagnostics.Eventing.Reader.EventRecord.OpcodeDisplayName&quot; /&gt; property.">イベントのオペコードを取得します。 オペコードは、アプリケーションでイベントが発生したときに実行していたアクティビティまたはアクティビティ内のポイントを識別する数値を定義します。 オペコードの名前を参照するには、<see cref="P:System.Diagnostics.Eventing.Reader.EventRecord.OpcodeDisplayName" /> プロパティの値を取得します。</summary>
      <returns vsli:raw="Returns a short value. This value can be null.">short 型の値を返します。 この値は null の場合もあります。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.OpcodeDisplayName">
      <summary vsli:raw="Gets the display name of the opcode for this event.">このイベントのオペコードの表示名を取得します。</summary>
      <returns vsli:raw="Returns a string that contains the display name of the opcode for this event.">このイベントのオペコードの表示名が格納された文字列を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.ProcessId">
      <summary vsli:raw="Gets the process identifier for the event provider that logged this event.">このイベントを記録するイベント プロバイダーのプロセス ID を取得します。</summary>
      <returns vsli:raw="Returns an integer value. This value can be null.">整数値を返します。 この値は null の場合もあります。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Properties">
      <summary vsli:raw="Gets the user-supplied properties of the event.">このイベントのユーザーが指定したプロパティを取得します。</summary>
      <returns vsli:raw="Returns a list of &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventProperty&quot; /&gt; objects.">
        <see cref="T:System.Diagnostics.Eventing.Reader.EventProperty" /> オブジェクトの一覧を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.ProviderId">
      <summary vsli:raw="Gets the globally unique identifier (GUID) of the event provider that published this event.">このイベントを発行したイベント プロバイダーのグローバル一意識別子 (GUID: Globally Unique Identifier) を取得します。</summary>
      <returns vsli:raw="Returns a GUID value. This value can be null.">GUID 値を返します。 この値は null の場合もあります。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.ProviderName">
      <summary vsli:raw="Gets the name of the event provider that published this event.">このイベントを発行したイベント プロバイダーの名前を取得します。</summary>
      <returns vsli:raw="Returns a string that contains the name of the event provider that published this event.">このイベントを発行したイベント プロバイダーの名前が格納された文字列を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Qualifiers">
      <summary vsli:raw="Gets qualifier numbers that are used for event identification.">イベントの識別に使用される修飾子番号を取得します。</summary>
      <returns vsli:raw="Returns an integer value. This value can be null.">整数値を返します。 この値は null の場合もあります。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.RecordId">
      <summary vsli:raw="Gets the event record identifier of the event in the log.">ログ内のイベントのイベント レコード ID を取得します。</summary>
      <returns vsli:raw="Returns a long value. This value can be null.">long 型の値を返します。 この値は null の場合もあります。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.RelatedActivityId">
      <summary vsli:raw="Gets a globally unique identifier (GUID) for a related activity in a process for which an event is involved.">イベントに関連するプロセス内の関連するアクティビティのグローバル一意識別子 (GUID: Globally Unique Identifier) を取得します。</summary>
      <returns vsli:raw="Returns a GUID value. This value can be null.">GUID 値を返します。 この値は null の場合もあります。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Task">
      <summary vsli:raw="Gets a task identifier for a portion of an application or a component that publishes an event. A task is a 16-bit value with 16 top values reserved. This type allows any value between 0x0000 and 0xffef to be used. To obtain the task name, get the value of the &lt;see cref=&quot;P:System.Diagnostics.Eventing.Reader.EventRecord.TaskDisplayName&quot; /&gt; property.">イベントを発行するアプリケーションまたはコンポーネントの部分のタスク ID を取得します。 タスクは 16 ビット値で、最大の 16 個の値は予約済みです。 この型では、0x0000 ～ 0xffef の任意の値を使用できます。 タスクの名前を取得するには、<see cref="P:System.Diagnostics.Eventing.Reader.EventRecord.TaskDisplayName" /> プロパティの値を取得します。</summary>
      <returns vsli:raw="Returns an integer value. This value can be null.">整数値を返します。 この値は null の場合もあります。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.TaskDisplayName">
      <summary vsli:raw="Gets the display name of the task for the event.">イベントのタスクの表示名を取得します。</summary>
      <returns vsli:raw="Returns a string that contains the display name of the task for the event.">イベントのタスクの表示名が格納された文字列を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.ThreadId">
      <summary vsli:raw="Gets the thread identifier for the thread that the event provider is running in.">イベント プロバイダーが実行されているスレッドのスレッド ID を取得します。</summary>
      <returns vsli:raw="Returns an integer value. This value can be null.">整数値を返します。 この値は null の場合もあります。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.TimeCreated">
      <summary vsli:raw="Gets the time, in &lt;see cref=&quot;T:System.DateTime&quot; /&gt; format, that the event was created.">イベントが作成された時刻を <see cref="T:System.DateTime" /> 形式で取得します。</summary>
      <returns vsli:raw="Returns a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value. The value can be null.">
        <see cref="T:System.DateTime" /> 値を返します。 この値は null の場合もあります。</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventRecord.ToXml">
      <summary vsli:raw="Gets the XML representation of the event. All of the event properties are represented in the event XML. The XML conforms to the event schema.">イベントの XML 表現を取得します。 すべてのイベント プロパティは、そのイベントの XML の形式で表されます。 XML はイベント スキーマに準拠します。</summary>
      <returns vsli:raw="Returns a string that contains the XML representation of the event.">イベントの XML 表現が格納された文字列を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.UserId">
      <summary vsli:raw="Gets the security descriptor of the user whose context is used to publish the event.">イベントを発行するためにコンテキストを使用するユーザーのセキュリティ記述子を取得します。</summary>
      <returns vsli:raw="Returns a &lt;see cref=&quot;T:System.Security.Principal.SecurityIdentifier&quot; /&gt; value.">
        <see cref="T:System.Security.Principal.SecurityIdentifier" /> 値を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Version">
      <summary vsli:raw="Gets the version number for the event.">イベントのバージョン番号を取得します。</summary>
      <returns vsli:raw="Returns a byte value. This value can be null.">バイト値を返します。 この値は null の場合もあります。</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs">
      <summary vsli:raw="When the &lt;see cref=&quot;E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten&quot; /&gt; event is raised, an instance of this object is passed to the delegate method that handles the event. This object contains the event that was published to the event log or the exception that occurred when the event subscription failed.">
        <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> イベントが発生したときに、そのイベントを処理するデリゲート メソッドにこのオブジェクトのインスタンスが渡されます。 このオブジェクトには、イベント ログに発行されたイベント、またはイベント サブスクリプションが失敗したときに発生した例外が格納されています。</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs.EventException">
      <summary vsli:raw="Gets the exception that occurred when the event subscription failed. The exception has a description of why the subscription failed.">イベント サブスクリプションが失敗したときに発生した例外を取得します。 この例外には、サブスクリプションが失敗した理由の記述が含まれています。</summary>
      <returns vsli:raw="The exception that occurred when the event subscription failed.">イベントサブスクリプションが失敗したときに発生した例外。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs.EventRecord">
      <summary vsli:raw="Gets the event record that is published to the event log. This event matches the criteria from the query specified in the event subscription.">イベント ログに発行されたイベント レコードを取得します。 このイベントは、イベント サブスクリプションで指定されたクエリの基準に一致します。</summary>
      <returns vsli:raw="The event record.">イベントレコード。</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventTask">
      <summary vsli:raw="Contains an event task that is defined in an event provider. The task identifies a portion of an application or a component that publishes an event. A task is a 16-bit value with 16 top values reserved.">イベント プロバイダーで定義されているイベント タスクを格納します。 このタスクは、イベントを発行するアプリケーションまたはコンポーネントの部分を識別します。 タスクは 16 ビット値で、最大の 16 個の値は予約済みです。</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventTask.DisplayName">
      <summary vsli:raw="Gets the localized name for the event task.">イベント タスクのローカライズされた名前を取得します。</summary>
      <returns vsli:raw="The localized name for the event task.">イベントタスクのローカライズされた名前。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventTask.EventGuid">
      <summary vsli:raw="Gets the event globally unique identifier (GUID) associated with the task.">タスクに関連付けられた、イベントのグローバル一意識別子 (GUID: Globally Unique Identifier) を取得します。</summary>
      <returns vsli:raw="The event GUID associated with the task.">タスクに関連付けられているイベント GUID。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventTask.Name">
      <summary vsli:raw="Gets the non-localized name of the event task.">イベント タスクのローカライズされていない名前を取得します。</summary>
      <returns vsli:raw="The non-localized name of the event task.">イベントタスクのローカライズされていない名前。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventTask.Value">
      <summary vsli:raw="Gets the numeric value associated with the task.">タスクに関連付けられている数値を取得します。</summary>
      <returns vsli:raw="The numeric value associated with the task.">タスクに関連付けられている数値。</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.PathType">
      <summary vsli:raw="Specifies that a string contains a name of an event log or the file system path to an event log file.">文字列に、イベント ログの名前が格納されているか、またはイベント ログ ファイルのファイル システム パスが格納されているかを指定します。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.PathType.FilePath">
      <summary vsli:raw="A path parameter contains the file system path to an event log file.">path パラメーターに、イベント ログ ファイルのファイル システム パスが格納されます。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.PathType.LogName">
      <summary vsli:raw="A path parameter contains the name of the event log.">path パラメーターに、イベント ログの名前が格納されます。</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.ProviderMetadata">
      <summary vsli:raw="Contains static information about an event provider, such as the name and id of the provider, and the collection of events defined in the provider.">プロバイダーの名前と ID、プロバイダーで定義されているイベントのコレクションなど、イベント プロバイダーに関する静的な情報を格納します。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.ProviderMetadata&quot; /&gt; class by specifying the name of the provider that you want to retrieve information about.">情報の取得対象となるプロバイダーの名前を指定して、<see cref="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="providerName" vsli:raw="The name of the event provider that you want to retrieve information about.">情報の取得対象となるイベント プロバイダーの名前。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.#ctor(System.String,System.Diagnostics.Eventing.Reader.EventLogSession,System.Globalization.CultureInfo)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.ProviderMetadata&quot; /&gt; class by specifying the name of the provider that you want to retrieve information about, the event log service that the provider is registered with, and the language that you want to return the information in.">情報の取得対象となるプロバイダーの名前、プロバイダーが登録されているイベント ログ サービス、および情報を返す際の言語を指定して、<see cref="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="providerName" vsli:raw="The name of the event provider that you want to retrieve information about.">情報の取得対象となるイベント プロバイダーの名前。</param>
      <param name="session" vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogSession&quot; /&gt; object that specifies whether to get the provider information from a provider on the local computer or a provider on a remote computer.">プロバイダー情報をローカル コンピューターのプロバイダーから取得するのか、またはリモート コンピューターのプロバイダーから取得するのかを指定する <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" /> オブジェクト。</param>
      <param name="targetCultureInfo" vsli:raw="The culture that specifies the language that the information should be returned in.">情報を返す際の言語を指定するカルチャ。</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.DisplayName">
      <summary vsli:raw="Gets the localized name of the event provider.">イベント プロバイダーのローカライズされた名前を取得します。</summary>
      <returns vsli:raw="Returns a string that contains the localized name of the event provider.">イベント プロバイダーのローカライズされた名前が格納された文字列を返します。</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.Dispose">
      <summary vsli:raw="Releases all the resources used by this object.">このオブジェクトに使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by this object, and optionally releases the managed resources.">このオブジェクトに使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Events">
      <summary vsli:raw="Gets an enumerable collection of &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventMetadata&quot; /&gt; objects, each of which represents an event that is defined in the provider.">
        <see cref="T:System.Diagnostics.Eventing.Reader.EventMetadata" /> オブジェクトの列挙可能なコレクションを取得します。各オブジェクトは、プロバイダーで定義されているイベントを表します。</summary>
      <returns vsli:raw="Returns an enumerable collection of &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventMetadata&quot; /&gt; objects.">
        <see cref="T:System.Diagnostics.Eventing.Reader.EventMetadata" /> オブジェクトの列挙可能なコレクションを返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.HelpLink">
      <summary vsli:raw="Gets the base of the URL used to form help requests for the events in this event provider.">このイベント プロバイダーのイベントに対するヘルプ要求を作成するために使用する URL のベースを取得します。</summary>
      <returns vsli:raw="Returns a &lt;see cref=&quot;T:System.Uri&quot; /&gt; value.">
        <see cref="T:System.Uri" /> 値を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Id">
      <summary vsli:raw="Gets the globally unique identifier (GUID) for the event provider.">イベント プロバイダーのグローバル一意識別子 (GUID: Globally Unique Identifier) を取得します。</summary>
      <returns vsli:raw="Returns the GUID value for the event provider.">イベント プロバイダーの GUID 値を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Keywords">
      <summary vsli:raw="Gets an enumerable collection of &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventKeyword&quot; /&gt; objects, each of which represent an event keyword that is defined in the event provider.">
        <see cref="T:System.Diagnostics.Eventing.Reader.EventKeyword" /> オブジェクトの列挙可能なコレクションを取得します。各オブジェクトは、イベント プロバイダーで定義されているイベント キーワードを表します。</summary>
      <returns vsli:raw="Returns an enumerable collection of &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventKeyword&quot; /&gt; objects.">
        <see cref="T:System.Diagnostics.Eventing.Reader.EventKeyword" /> オブジェクトの列挙可能なコレクションを返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Levels">
      <summary vsli:raw="Gets an enumerable collection of &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLevel&quot; /&gt; objects, each of which represent a level that is defined in the event provider.">
        <see cref="T:System.Diagnostics.Eventing.Reader.EventLevel" /> オブジェクトの列挙可能なコレクションを取得します。各オブジェクトは、イベント プロバイダーで定義されているレベルを表します。</summary>
      <returns vsli:raw="Returns an enumerable collection of &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLevel&quot; /&gt; objects.">
        <see cref="T:System.Diagnostics.Eventing.Reader.EventLevel" /> オブジェクトの列挙可能なコレクションを返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.LogLinks">
      <summary vsli:raw="Gets an enumerable collection of &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogLink&quot; /&gt; objects, each of which represent a link to an event log that is used by the event provider.">
        <see cref="T:System.Diagnostics.Eventing.Reader.EventLogLink" /> オブジェクトの列挙可能なコレクションを取得します。各オブジェクトは、イベント プロバイダーで使用されているイベント ログへのリンクを表します。</summary>
      <returns vsli:raw="Returns an enumerable collection of &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogLink&quot; /&gt; objects.">
        <see cref="T:System.Diagnostics.Eventing.Reader.EventLogLink" /> オブジェクトの列挙可能なコレクションを返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.MessageFilePath">
      <summary vsli:raw="Gets the path of the file that contains the message table resource that has the strings associated with the provider metadata.">プロバイダーのメタデータに関連付けられている文字列を含むメッセージ テーブル リソースが格納されたファイルのパスを取得します。</summary>
      <returns vsli:raw="Returns a string that contains the path of the provider message file.">プロバイダーのメッセージ ファイルのパスが格納された文字列を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Name">
      <summary vsli:raw="Gets the unique name of the event provider.">イベント プロバイダーの一意の名前を取得します。</summary>
      <returns vsli:raw="Returns a string that contains the unique name of the event provider.">イベント プロバイダーの一意の名前が格納された文字列を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Opcodes">
      <summary vsli:raw="Gets an enumerable collection of &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventOpcode&quot; /&gt; objects, each of which represent an opcode that is defined in the event provider.">
        <see cref="T:System.Diagnostics.Eventing.Reader.EventOpcode" /> オブジェクトの列挙可能なコレクションを取得します。各オブジェクトは、イベント プロバイダーで定義されているオペコードを表します。</summary>
      <returns vsli:raw="Returns an enumerable collection of &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventOpcode&quot; /&gt; objects.">
        <see cref="T:System.Diagnostics.Eventing.Reader.EventOpcode" /> オブジェクトの列挙可能なコレクションを返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.ParameterFilePath">
      <summary vsli:raw="Gets the path of the file that contains the message table resource that has the strings used for parameter substitutions in event descriptions.">イベントの説明にあるパラメーターの代用に使用される文字列を含むメッセージ テーブル リソースが格納されたファイルのパスを取得します。</summary>
      <returns vsli:raw="Returns a string that contains the path of the file that contains the message table resource that has the strings used for parameter substitutions in event descriptions.">イベントの説明にあるパラメーターの代用に使用される文字列を含むメッセージ テーブル リソースを格納するファイルのパスが格納された文字列を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.ResourceFilePath">
      <summary vsli:raw="Gets the path to the file that contains the metadata associated with the provider.">プロバイダーに関連付けられているメタデータを格納するファイルのパスを取得します。</summary>
      <returns vsli:raw="Returns a string that contains the path to the file that contains the metadata associated with the provider.">プロバイダーに関連付けられているメタデータを格納するファイルのパスが格納された文字列を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Tasks">
      <summary vsli:raw="Gets an enumerable collection of &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventTask&quot; /&gt; objects, each of which represent a task that is defined in the event provider.">
        <see cref="T:System.Diagnostics.Eventing.Reader.EventTask" /> オブジェクトの列挙可能なコレクションを取得します。各オブジェクトは、イベント プロバイダーで定義されているタスクを表します。</summary>
      <returns vsli:raw="Returns an enumerable collection of &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventTask&quot; /&gt; objects.">
        <see cref="T:System.Diagnostics.Eventing.Reader.EventTask" /> オブジェクトの列挙可能なコレクションを返します。</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.SessionAuthentication">
      <summary vsli:raw="Defines values for the type of authentication used during a Remote Procedure Call (RPC) login to a server. This login occurs when you create a &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogSession&quot; /&gt; object that specifies a connection to a remote computer.">サーバーにリモート プロシージャ コール (RPC: Remote Procedure Call) ログインするときに使用する認証の種類の値を定義します。 このログインは、リモート コンピューターへの接続を指定する <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" /> オブジェクトを作成するときに発生します。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.SessionAuthentication.Default">
      <summary vsli:raw="Use the default authentication method during RPC login. The default authentication is equivalent to Negotiate.">RPC ログイン時に、既定の認証方法を使用します。 既定の認証はネゴシエートと同じです。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.SessionAuthentication.Kerberos">
      <summary vsli:raw="Use Kerberos authentication during RPC login.">RPC ログイン時に、Kerberos 認証を使用します。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.SessionAuthentication.Negotiate">
      <summary vsli:raw="Use the Negotiate authentication method during RPC login. This allows the client application to select the most appropriate authentication method (NTLM or Kerberos) for the situation.">RPC ログイン時に、ネゴシエート認証方法を使用します。 これにより、状況に応じて最適な認証方法 (NTLM または Kerberos) をクライアント アプリケーションで選択できます。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.SessionAuthentication.Ntlm">
      <summary vsli:raw="Use Windows NT LAN Manager (NTLM) authentication during RPC login.">RPC ログイン時に、Windows NT LAN Manager (NTLM) 認証を使用します。</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.StandardEventKeywords">
      <summary vsli:raw="Defines the standard keywords that are attached to events by the event provider. For more information about keywords, see &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventKeyword&quot; /&gt;.">イベント プロバイダーによりイベントにアタッチされる標準のキーワードを定義します。 キーワードの詳細については、「<see cref="T:System.Diagnostics.Eventing.Reader.EventKeyword" />」を参照してください。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.AuditFailure">
      <summary vsli:raw="Attached to all failed security audit events. This keyword should only be used for events in the Security log.">失敗したすべてのセキュリティ監査イベントにアタッチされます。 このキーワードは、セキュリティ ログ内のイベントにだけ使用してください。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.AuditSuccess">
      <summary vsli:raw="Attached to all successful security audit events. This keyword should only be used for events in the Security log.">成功したすべてのセキュリティ監査イベントにアタッチされます。 このキーワードは、セキュリティ ログ内のイベントにだけ使用してください。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.CorrelationHint">
      <summary vsli:raw="Attached to transfer events where the related Activity ID (Correlation ID) is a computed value and is not guaranteed to be unique (not a real GUID).">関連アクティビティ ID (相関 ID) が算出された値で、一意であるとは限らない (実際の GUID ではない) 転送イベントにアタッチされます。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.CorrelationHint2">
      <summary vsli:raw="Attached to transfer events where the related Activity ID (Correlation ID) is a computed value and is not guaranteed to be unique (not a real GUID).">関連アクティビティ ID (相関 ID) が算出された値で、一意であるとは限らない (実際の GUID ではない) 転送イベントにアタッチされます。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.EventLogClassic">
      <summary vsli:raw="Attached to events which are raised using the RaiseEvent function.">RaiseEvent 関数を使用して発生するイベントにアタッチされます。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.None">
      <summary vsli:raw="This value indicates that no filtering on keyword is performed when the event is published.">この値は、イベントの発行時にキーワードに関するフィルター処理が行われなかったことを示します。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.ResponseTime">
      <summary vsli:raw="Attached to all response time events.">すべての応答時間イベントにアタッチされます。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.Sqm">
      <summary vsli:raw="Attached to all Service Quality Mechanism (SQM) events.">すべての SQM (Service Quality Mechanism) イベントにアタッチされます。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.WdiContext">
      <summary vsli:raw="Attached to all Windows Diagnostic Infrastructure (WDI) context events.">すべての Windows 診断インフラストラクチャ (WDI: Windows Diagnostic Infrastructure) コンテキスト イベントにアタッチされます。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.WdiDiagnostic">
      <summary vsli:raw="Attached to all Windows Diagnostic Infrastructure (WDI) diagnostic events.">すべての Windows 診断インフラストラクチャ (WDI: Windows Diagnostic Infrastructure) 診断イベントにアタッチされます。</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.StandardEventLevel">
      <summary vsli:raw="Defines the standard event levels that are used in the Event Log service. The level defines the severity of the event. Custom event levels can be defined beyond these standard levels. For more information about levels, see &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLevel&quot; /&gt;.">イベント ログ サービスで使用される標準のイベント レベルを定義します。 このレベルは、イベントの重大度レベルを定義します。 これらの標準レベルの他、カスタムのイベント レベルを定義できます。 レベルの詳細については、「<see cref="T:System.Diagnostics.Eventing.Reader.EventLevel" />」を参照してください。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Critical">
      <summary vsli:raw="This level corresponds to critical errors, which is a serious error that has caused a major failure.">このレベルは、重大なエラーに対応します。これは、主要なエラーを発生させる深刻なエラーです。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Error">
      <summary vsli:raw="This level corresponds to normal errors that signify a problem.">このレベルは、問題を示す通常のエラーに対応します。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Informational">
      <summary vsli:raw="This level corresponds to informational events or messages that are not errors. These events can help trace the progress or state of an application.">このレベルは、エラーではない情報イベントまたは情報メッセージに対応します。 これらのイベントは、アプリケーションの進行状況や状態を追跡するのに役立ちます。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.LogAlways">
      <summary vsli:raw="This value indicates that not filtering on the level is done during the event publishing.">この値は、イベントの発行時にレベルに関するフィルター処理が行われなかったことを示します。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Verbose">
      <summary vsli:raw="This level corresponds to lengthy events or messages.">このレベルは、詳細なイベントまたはメッセージに対応します。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Warning">
      <summary vsli:raw="This level corresponds to warning events. For example, an event that gets published because a disk is nearing full capacity is a warning event.">このレベルは、警告イベントに対応します。 たとえば、ディスクの空き容量がほとんどないために発行されたイベントは、警告イベントです。</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.StandardEventOpcode">
      <summary vsli:raw="Defines the standard opcodes that are attached to events by the event provider. For more information about opcodes, see &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventOpcode&quot; /&gt;.">イベント プロバイダーによりイベントにアタッチされる標準のオペコードを定義します。 オペコードの詳細については、「<see cref="T:System.Diagnostics.Eventing.Reader.EventOpcode" />」を参照してください。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.DataCollectionStart">
      <summary vsli:raw="An event with this opcode is a trace collection start event.">このオペコードがあるイベントは、トレース コレクションの開始イベントです。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.DataCollectionStop">
      <summary vsli:raw="An event with this opcode is a trace collection stop event.">このオペコードがあるイベントは、トレース コレクションの停止イベントです。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Extension">
      <summary vsli:raw="An event with this opcode is an extension event.">このオペコードがあるイベントは、拡張イベントです。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Info">
      <summary vsli:raw="An event with this opcode is an informational event.">このオペコードがあるイベントは、情報イベントです。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Receive">
      <summary vsli:raw="An event with this opcode is published when one activity in an application receives data.">このオペコードがあるイベントは、アプリケーション内のアクティビティがデータを受信したときに発行されます。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Reply">
      <summary vsli:raw="An event with this opcode is published after an activity in an application replies to an event.">このオペコードがあるイベントは、アプリケーション内のアクティビティがイベントに応答した後に発行されます。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Resume">
      <summary vsli:raw="An event with this opcode is published after an activity in an application resumes from a suspended state. The event should follow an event with the Suspend opcode.">このオペコードがあるイベントは、アプリケーション内のアクティビティが中断状態から再開した後に発行されます。 このイベントは、Suspend オペコードがあるイベントに続いて発行されます。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Send">
      <summary vsli:raw="An event with this opcode is published when one activity in an application transfers data or system resources to another activity.">このオペコードがあるイベントは、アプリケーション内のアクティビティがデータまたはシステム リソースを別のアクティビティに転送したときに発行されます。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Start">
      <summary vsli:raw="An event with this opcode is published when an application starts a new transaction or activity. This can be embedded into another transaction or activity when multiple events with the Start opcode follow each other without an event with a Stop opcode.">このオペコードがあるイベントは、アプリケーションが新しいトランザクションまたはアクティビティを開始したときに発行されます。 Start オペコードがあるイベントが、Stop オペコードのあるイベントを介さずに複数個連続している場合は、別のトランザクションまたはアクティビティに埋め込まれている可能性があります。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Stop">
      <summary vsli:raw="An event with this opcode is published when an activity or a transaction in an application ends. The event corresponds to the last unpaired event with a Start opcode.">このオペコードがあるイベントは、アプリケーション内のアクティビティまたはトランザクションが終了したときに発行されます。 このイベントは、Start オペコードがあり、対になっていない直前のイベントに対応しています。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Suspend">
      <summary vsli:raw="An event with this opcode is published when an activity in an application is suspended.">このオペコードがあるイベントは、アプリケーション内のアクティビティが中断されたときに発行されます。</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.StandardEventTask">
      <summary vsli:raw="Defines the standard tasks that are attached to events by the event provider. For more information about tasks, see &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventTask&quot; /&gt;.">イベント プロバイダーによりイベントにアタッチされる標準のタスクを定義します。 タスクの詳細については、「<see cref="T:System.Diagnostics.Eventing.Reader.EventTask" />」を参照してください。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventTask.None">
      <summary vsli:raw="No task is used to identify a portion of an application that publishes an event.">タスクを使用せずに、イベントを発行するアプリケーションの部分を識別します。</summary>
    </member>
    <member name="T:System.Diagnostics.EventInstance">
      <summary vsli:raw="Represents language-neutral information for an event log entry.">イベント ログ エントリの言語に中立的な情報を表します。</summary>
    </member>
    <member name="M:System.Diagnostics.EventInstance.#ctor(System.Int64,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.EventInstance&quot; /&gt; class using the specified resource identifiers for the localized message and category text of the event entry.">イベント エントリのローカライズされたメッセージおよびカテゴリ テキストに指定されたリソース識別子を使用して、<see cref="T:System.Diagnostics.EventInstance" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="instanceId" vsli:raw="A resource identifier that corresponds to a string defined in the message resource file of the event source.">イベント ソースのメッセージ リソース ファイルで定義された文字列に対応するリソース識別子。</param>
      <param name="categoryId" vsli:raw="A resource identifier that corresponds to a string defined in the category resource file of the event source, or zero to specify no category for the event.">イベント ソースのカテゴリ リソース ファイルで定義された文字列に対応するリソース識別子。イベントにカテゴリを指定しない場合は、ゼロになります。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;instanceId&quot; /&gt; parameter is a negative value or a value larger than &lt;see cref=&quot;F:System.UInt32.MaxValue&quot;&gt;UInt32.MaxValue&lt;/see&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;categoryId&quot; /&gt; parameter is a negative value or a value larger than &lt;see cref=&quot;F:System.UInt16.MaxValue&quot;&gt;UInt16.MaxValue&lt;/see&gt;.">
        <paramref name="instanceId" /> パラメーターは、負の値または <see cref="F:System.UInt32.MaxValue" /> より大きい値です。  

または - 
<paramref name="categoryId" /> パラメーターは、負の値または <see cref="F:System.UInt16.MaxValue" /> より大きい値です。</exception>
    </member>
    <member name="M:System.Diagnostics.EventInstance.#ctor(System.Int64,System.Int32,System.Diagnostics.EventLogEntryType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.EventInstance&quot; /&gt; class using the specified resource identifiers for the localized message and category text of the event entry and the specified event log entry type.">イベント エントリのローカライズされたメッセージとカテゴリ テキストに指定されたリソース識別子および指定されたイベント ログ エントリの種類を使用して、<see cref="T:System.Diagnostics.EventInstance" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="instanceId" vsli:raw="A resource identifier that corresponds to a string defined in the message resource file of the event source.">イベント ソースのメッセージ リソース ファイルで定義された文字列に対応するリソース識別子。</param>
      <param name="categoryId" vsli:raw="A resource identifier that corresponds to a string defined in the category resource file of the event source, or zero to specify no category for the event.">イベント ソースのカテゴリ リソース ファイルで定義された文字列に対応するリソース識別子。イベントにカテゴリを指定しない場合は、ゼロになります。</param>
      <param name="entryType" vsli:raw="An &lt;see cref=&quot;T:System.Diagnostics.EventLogEntryType&quot; /&gt; value that indicates the event type.">イベントの種類を示す <see cref="T:System.Diagnostics.EventLogEntryType" /> 値。</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;entryType&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Diagnostics.EventLogEntryType&quot; /&gt; value.">
        <paramref name="entryType" /> は有効な <see cref="T:System.Diagnostics.EventLogEntryType" /> 値ではありません。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;instanceId&quot; /&gt; is a negative value or a value larger than &lt;see cref=&quot;F:System.UInt32.MaxValue&quot;&gt;UInt32.MaxValue&lt;/see&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;categoryId&quot; /&gt; is a negative value or a value larger than &lt;see cref=&quot;F:System.UInt16.MaxValue&quot;&gt;UInt16.MaxValue&lt;/see&gt;.">
        <paramref name="instanceId" /> は、負の値または <see cref="F:System.UInt32.MaxValue" /> より大きい値です。  

または - 
<paramref name="categoryId" /> は、負の値または <see cref="F:System.UInt16.MaxValue" /> より大きい値です。</exception>
    </member>
    <member name="P:System.Diagnostics.EventInstance.CategoryId">
      <summary vsli:raw="Gets or sets the resource identifier that specifies the application-defined category of the event entry.">イベント エントリのアプリケーション定義のカテゴリを指定するリソース識別子を取得または設定します。</summary>
      <returns vsli:raw="A numeric category value or resource identifier that corresponds to a string defined in the category resource file of the event source. The default is zero, which signifies that no category will be displayed for the event entry.">イベント ソースのカテゴリ リソース ファイルで定義された文字列に対応するカテゴリ値またはリソース識別子。 既定値はゼロです。これは、イベント エントリに対してカテゴリが表示されないことを示します。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The property is set to a negative value or to a value larger than &lt;see cref=&quot;F:System.UInt16.MaxValue&quot;&gt;UInt16.MaxValue&lt;/see&gt;.">プロパティが負の値または <see cref="F:System.UInt16.MaxValue" /> より大きい値に設定されています。</exception>
    </member>
    <member name="P:System.Diagnostics.EventInstance.EntryType">
      <summary vsli:raw="Gets or sets the event type of the event log entry.">イベント ログ エントリのイベントの種類を取得または設定します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Diagnostics.EventLogEntryType&quot; /&gt; value that indicates the event entry type. The default value is &lt;see cref=&quot;F:System.Diagnostics.EventLogEntryType.Information&quot; /&gt;.">イベント エントリの種類を示す <see cref="T:System.Diagnostics.EventLogEntryType" /> 値。 既定値は <see cref="F:System.Diagnostics.EventLogEntryType.Information" /> です。</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="The property is not set to a valid &lt;see cref=&quot;T:System.Diagnostics.EventLogEntryType&quot; /&gt; value.">プロパティが有効な <see cref="T:System.Diagnostics.EventLogEntryType" /> 値に設定されていません。</exception>
    </member>
    <member name="P:System.Diagnostics.EventInstance.InstanceId">
      <summary vsli:raw="Gets or sets the resource identifier that designates the message text of the event entry.">イベント エントリのメッセージ テキストを指定するリソース識別子を取得または設定します。</summary>
      <returns vsli:raw="A resource identifier that corresponds to a string defined in the message resource file of the event source.">イベント ソースのメッセージ リソース ファイルで定義された文字列に対応するリソース識別子。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The property is set to a negative value or to a value larger than &lt;see cref=&quot;F:System.UInt32.MaxValue&quot;&gt;UInt32.MaxValue&lt;/see&gt;.">プロパティが負の値または <see cref="F:System.UInt32.MaxValue" /> より大きい値に設定されています。</exception>
    </member>
    <member name="T:System.Diagnostics.EventLog">
      <summary vsli:raw="Provides interaction with Windows event logs.">Windows イベント ログとの相互作用を提供します。</summary>
    </member>
    <member name="M:System.Diagnostics.EventLog.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.EventLog&quot; /&gt; class. Does not associate the instance with any log.">
        <see cref="T:System.Diagnostics.EventLog" /> クラスの新しいインスタンスを初期化します。 このインスタンスは、ログとは関連付けられません。</summary>
    </member>
    <member name="M:System.Diagnostics.EventLog.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.EventLog&quot; /&gt; class. Associates the instance with a log on the local computer.">
        <see cref="T:System.Diagnostics.EventLog" /> クラスの新しいインスタンスを初期化します。 ローカル コンピューター上のログにインスタンスを関連付けます。</summary>
      <param name="logName" vsli:raw="The name of the log on the local computer.">ローカル コンピューター上のログの名前。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The log name is &lt;see langword=&quot;null&quot; /&gt;.">ログ名が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The log name is invalid.">ログ名が無効です。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.EventLog&quot; /&gt; class. Associates the instance with a log on the specified computer.">
        <see cref="T:System.Diagnostics.EventLog" /> クラスの新しいインスタンスを初期化します。 指定したコンピューター上のログにインスタンスを関連付けます。</summary>
      <param name="logName" vsli:raw="The name of the log on the specified computer.">指定したコンピューター上のログの名前。</param>
      <param name="machineName" vsli:raw="The computer on which the log exists.">ログが存在するコンピューター。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The log name is &lt;see langword=&quot;null&quot; /&gt;.">ログ名が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The log name is invalid.  &#xA;  &#xA; -or-  &#xA;  &#xA; The computer name is invalid.">ログ名が無効です。  

または -  

 コンピューター名が無効です。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.#ctor(System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.EventLog&quot; /&gt; class. Associates the instance with a log on the specified computer and creates or assigns the specified source to the &lt;see cref=&quot;T:System.Diagnostics.EventLog&quot; /&gt;.">
        <see cref="T:System.Diagnostics.EventLog" /> クラスの新しいインスタンスを初期化します。 指定したコンピューター上のログにインスタンスを関連付け、指定したソースを作成するか、または <see cref="T:System.Diagnostics.EventLog" /> に割り当てます。</summary>
      <param name="logName" vsli:raw="The name of the log on the specified computer.">指定したコンピューター上のログの名前。</param>
      <param name="machineName" vsli:raw="The computer on which the log exists.">ログが存在するコンピューター。</param>
      <param name="source" vsli:raw="The source of event log entries.">イベント ログ エントリのソース。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The log name is &lt;see langword=&quot;null&quot; /&gt;.">ログ名が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The log name is invalid.  &#xA;  &#xA; -or-  &#xA;  &#xA; The computer name is invalid.">ログ名が無効です。  

または -  

 コンピューター名が無効です。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.BeginInit">
      <summary vsli:raw="Begins the initialization of an &lt;see cref=&quot;T:System.Diagnostics.EventLog&quot; /&gt; used on a form or used by another component. The initialization occurs at runtime.">フォームまたは別のコンポーネントで使用される <see cref="T:System.Diagnostics.EventLog" /> の初期化を開始します。 初期化は実行時に発生します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;T:System.Diagnostics.EventLog&quot; /&gt; is already initialized.">
        <see cref="T:System.Diagnostics.EventLog" /> は、既に初期化されています。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.Clear">
      <summary vsli:raw="Removes all entries from the event log.">イベント ログからすべてのエントリを削除します。</summary>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The event log was not cleared successfully.  &#xA;  &#xA; -or-  &#xA;  &#xA; The log cannot be opened. A Windows error code is not available.">イベント ログが正常に消去されませんでした。  

または -  

 ログを開くことができません。 Windows のエラー コードは使用できません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="A value is not specified for the &lt;see cref=&quot;P:System.Diagnostics.EventLog.Log&quot; /&gt; property. Make sure the log name is not an empty string.">
        <see cref="P:System.Diagnostics.EventLog.Log" /> プロパティの値が指定されていません。 ログ名が空の文字列でないことを確認してください。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The log does not exist.">ログが存在しません。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.Close">
      <summary vsli:raw="Closes the event log and releases read and write handles.">イベント ログを閉じ、読み取りハンドルと書き込みハンドルを解放します。</summary>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The event log's read handle or write handle was not released successfully.">イベント ログの読み取りハンドルまたは書き込みハンドルが解放されませんでした。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.CreateEventSource(System.Diagnostics.EventSourceCreationData)">
      <summary vsli:raw="Establishes a valid event source for writing localized event messages, using the specified configuration properties for the event source and the corresponding event log.">イベント ソースおよび対応するイベント ログに指定された構成プロパティを使用して、ローカライズされたイベント メッセージを書き込むための有効なイベント ソースを設定します。</summary>
      <param name="sourceData" vsli:raw="The configuration properties for the event source and its target event log.">イベント ソースおよび対象のイベント ログの構成プロパティ。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The computer name specified in &lt;paramref name=&quot;sourceData&quot; /&gt; is not valid.  &#xA;  &#xA;-or-&#xA;  &#xA; The source name specified in &lt;paramref name=&quot;sourceData&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; The log name specified in &lt;paramref name=&quot;sourceData&quot; /&gt; is not valid. Event log names must consist of printable characters and cannot include the characters '*', '?', or '\'.  &#xA;  &#xA;-or-&#xA;  &#xA; The log name specified in &lt;paramref name=&quot;sourceData&quot; /&gt; is not valid for user log creation. The Event log names AppEvent, SysEvent, and SecEvent are reserved for system use.  &#xA;  &#xA;-or-&#xA;  &#xA; The log name matches an existing event source name.  &#xA;  &#xA;-or-&#xA;  &#xA; The source name specified in &lt;paramref name=&quot;sourceData&quot; /&gt; results in a registry key path longer than 254 characters.  &#xA;  &#xA;-or-&#xA;  &#xA; The first 8 characters of the log name specified in &lt;paramref name=&quot;sourceData&quot; /&gt; are not unique.  &#xA;  &#xA;-or-&#xA;  &#xA; The source name specified in &lt;paramref name=&quot;sourceData&quot; /&gt; is already registered.  &#xA;  &#xA;-or-&#xA;  &#xA; The source name specified in &lt;paramref name=&quot;sourceData&quot; /&gt; matches an existing event log name.">
        <paramref name="sourceData" /> で指定されたコンピューター名が無効です。  
または 
<paramref name="sourceData" /> で指定されたソース名が <see langword="null" /> です。  

または - 
<paramref name="sourceData" /> で指定されたログ名が無効です。 イベント ログ名は、印字可能な文字で構成されている必要があります。文字 '*'、'?'、または '\' を含めないでください。  

または - 
<paramref name="sourceData" /> で指定されたログ名は、ユーザー ログの作成には無効です。 イベント ログ名 AppEvent、SysEvent、および SecEvent は、システムで使用するために予約されています。  

または - 
ログ名が既存のイベント ソース名に一致します。  

または - 
<paramref name="sourceData" /> で指定されたソース名は、254 文字を超えるレジストリ キーのパスになります。  

または - 
<paramref name="sourceData" /> で指定されたログ名の最初の 8 文字が一意ではありません。  

または - 
<paramref name="sourceData" /> で指定されたソース名は既に登録されています。  

または - 
<paramref name="sourceData" /> で指定されたソース名が既存のイベント ログ名に一致しません。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The registry key for the event log could not be opened.">イベント ログのレジストリ キーを開けませんでした。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;sourceData&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="sourceData" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.CreateEventSource(System.String,System.String)">
      <summary vsli:raw="Establishes the specified source name as a valid event source for writing entries to a log on the local computer. This method can also create a new custom log on the local computer.">ローカル コンピューター上のログにエントリを書き込むための有効なイベント ソースとして指定したソース名を設定します。 また、このメソッドによってローカル コンピューター上に新しいカスタム ログを作成することもできます。</summary>
      <param name="source" vsli:raw="The source name by which the application is registered on the local computer.">アプリケーションをローカル コンピューター上に登録するときに使用するソース名。</param>
      <param name="logName" vsli:raw="The name of the log the source's entries are written to. Possible values include Application, System, or a custom event log.">ソースのエントリが書き込まれるログの名前。 指定できる値は、"Application"、"System"、またはカスタム イベント ログです。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is an empty string (&quot;&quot;) or &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;logName&quot; /&gt; is not a valid event log name. Event log names must consist of printable characters, and cannot include the characters '*', '?', or '\'.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;logName&quot; /&gt; is not valid for user log creation. The event log names AppEvent, SysEvent, and SecEvent are reserved for system use.  &#xA;  &#xA;-or-&#xA;  &#xA; The log name matches an existing event source name.  &#xA;  &#xA;-or-&#xA;  &#xA; The source name results in a registry key path longer than 254 characters.  &#xA;  &#xA;-or-&#xA;  &#xA; The first 8 characters of &lt;paramref name=&quot;logName&quot; /&gt; match the first 8 characters of an existing event log name.  &#xA;  &#xA;-or-&#xA;  &#xA; The source cannot be registered because it already exists on the local computer.  &#xA;  &#xA;-or-&#xA;  &#xA; The source name matches an existing event log name.">
        <paramref name="source" /> が空の文字列 ("") または <see langword="null" />  

または - 
<paramref name="logName" /> が有効なイベント ログ名ではありません。 イベント ログ名は、印字可能な文字で構成されている必要があります。文字 '*'、'?'、または '\' を含めないでください。  

または - 
<paramref name="logName" /> はユーザー ログの作成に有効ではありません。 イベント ログ名 AppEvent、SysEvent、および SecEvent は、システムで使用するために予約されています。  


または 
ログ名が既存のイベント ソース名に一致します。  
または 
ソース名は、254 文字を超えるレジストリ キーのパスになります。  

または - 
<paramref name="logName" /> の最初の 8 文字が既存のイベント ログ名の最初の 8 文字に一致します。  

または - 
ローカル コンピューター上に既にソースが存在するため、ソースを登録できません。  

または - 
ソース名が既存のイベント ログ名に一致します。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The registry key for the event log could not be opened on the local computer.">ローカル コンピューター上のイベント ログのレジストリ キーを開けませんでした。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.CreateEventSource(System.String,System.String,System.String)">
      <summary vsli:raw="Establishes the specified source name as a valid event source for writing entries to a log on the specified computer. This method can also be used to create a new custom log on the specified computer.">指定したコンピューター上のログにエントリを書き込むための有効なイベント ソースとして指定したソース名を設定します。 このメソッドを使用して、指定したコンピューター上に新しいカスタム ログを作成することもできます。</summary>
      <param name="source" vsli:raw="The source by which the application is registered on the specified computer.">アプリケーションを指定されたコンピューターに登録するために使用されるソース。</param>
      <param name="logName" vsli:raw="The name of the log the source's entries are written to. Possible values include Application, System, or a custom event log. If you do not specify a value, &lt;paramref name=&quot;logName&quot; /&gt; defaults to Application.">ソースのエントリが書き込まれるログの名前。 指定できる値は、"Application"、"System"、またはカスタム イベント ログです。 値を指定しなかった場合、<paramref name="logName" /> は既定によりアプリケーションに設定されます。</param>
      <param name="machineName" vsli:raw="The name of the computer to register this event source with, or &quot;.&quot; for the local computer.">このイベント ソースを登録するコンピューターの名前。ローカル コンピューターの場合は "."。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;machineName&quot; /&gt; is not a valid computer name.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;source&quot; /&gt; is an empty string (&quot;&quot;) or &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;logName&quot; /&gt; is not a valid event log name. Event log names must consist of printable characters, and cannot include the characters '*', '?', or '\'.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;logName&quot; /&gt; is not valid for user log creation. The event log names AppEvent, SysEvent, and SecEvent are reserved for system use.  &#xA;  &#xA;-or-&#xA;  &#xA; The log name matches an existing event source name.  &#xA;  &#xA;-or-&#xA;  &#xA; The source name results in a registry key path longer than 254 characters.  &#xA;  &#xA;-or-&#xA;  &#xA; The first 8 characters of &lt;paramref name=&quot;logName&quot; /&gt; match the first 8 characters of an existing event log name on the specified computer.  &#xA;  &#xA;-or-&#xA;  &#xA; The source cannot be registered because it already exists on the specified computer.  &#xA;  &#xA;-or-&#xA;  &#xA; The source name matches an existing event source name.">
        <paramref name="machineName" /> が有効なコンピューター名ではありません。  

または - 
<paramref name="source" /> が空の文字列 ("") または <see langword="null" />  

または - 
<paramref name="logName" /> が有効なイベント ログ名ではありません。 イベント ログ名は、印字可能な文字で構成されている必要があります。文字 '*'、'?'、または '\' を含めないでください。  

または - 
<paramref name="logName" /> はユーザー ログの作成に有効ではありません。 イベント ログ名 AppEvent、SysEvent、および SecEvent は、システムで使用するために予約されています。  


または 
ログ名が既存のイベント ソース名に一致します。  

または - 
ソース名は、254 文字を超えるレジストリ キーのパスになります。  

または - 
<paramref name="logName" /> の最初の 8 文字が指定したコンピューター上の既存のイベント ログ名の最初の 8 文字に一致します。  

または - 
指定したコンピューター上に既にソースが存在するため、ソースを登録できません。  

または - 
ソース名が既存のイベント ソース名に一致します。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The registry key for the event log could not be opened on the specified computer.">指定したコンピューター上のイベント ログのレジストリ キーを開けませんでした。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.Delete(System.String)">
      <summary vsli:raw="Removes an event log from the local computer.">ローカル コンピューターからイベント ログを削除します。</summary>
      <param name="logName" vsli:raw="The name of the log to delete. Possible values include: Application, Security, System, and any custom event logs on the computer.">削除するログの名前。 次のような値となる場合があります。アプリケーション、セキュリティ、システム、およびコンピューター上の任意のカスタム イベント ログ。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;logName&quot; /&gt; is an empty string (&quot;&quot;) or &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="logName" /> が空の文字列 ("") または <see langword="null" /></exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The registry key for the event log could not be opened on the local computer.  &#xA;  &#xA;-or-&#xA;  &#xA; The log does not exist on the local computer.">ローカル コンピューター上のイベント ログのレジストリ キーを開けませんでした。  

または -

 ローカル コンピューター上にログが存在しません。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The event log was not cleared successfully.  &#xA;  &#xA; -or-  &#xA;  &#xA; The log cannot be opened. A Windows error code is not available.">イベント ログが正常に消去されませんでした。  

または -  

 ログを開くことができません。 Windows のエラー コードは使用できません。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.Delete(System.String,System.String)">
      <summary vsli:raw="Removes an event log from the specified computer.">指定したコンピューターからイベント ログを削除します。</summary>
      <param name="logName" vsli:raw="The name of the log to delete. Possible values include: Application, Security, System, and any custom event logs on the specified computer.">削除するログの名前。 次のような値となる場合があります。アプリケーション、セキュリティ、システム、および指定したコンピューター上の任意のカスタム イベント ログ。</param>
      <param name="machineName" vsli:raw="The name of the computer to delete the log from, or &quot;.&quot; for the local computer.">ログを削除するコンピューターの名前。ローカル コンピューターの場合は "."。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;logName&quot; /&gt; is an empty string (&quot;&quot;) or &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;machineName&quot; /&gt; is not a valid computer name.">
        <paramref name="logName" /> が空の文字列 ("") または <see langword="null" />  

または - 
<paramref name="machineName" /> が有効なコンピューター名ではありません。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The registry key for the event log could not be opened on the specified computer.  &#xA;  &#xA;-or-&#xA;  &#xA; The log does not exist on the specified computer.">指定したコンピューター上のイベント ログのレジストリ キーを開けませんでした。  
または
 指定したコンピューター上にログが存在しません。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The event log was not cleared successfully.  &#xA;  &#xA; -or-  &#xA;  &#xA; The log cannot be opened. A Windows error code is not available.">イベント ログが正常に消去されませんでした。  

または -  

 ログを開くことができません。 Windows のエラー コードは使用できません。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)">
      <summary vsli:raw="Removes the event source registration from the event log of the local computer.">ローカル コンピューターのイベント ログからイベント ソースの登録を削除します。</summary>
      <param name="source" vsli:raw="The name by which the application is registered in the event log system.">イベント ログ システムにアプリケーションを登録するときに使用する名前。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; parameter does not exist in the registry of the local computer.  &#xA;  &#xA;-or-&#xA;  &#xA; You do not have write access on the registry key for the event log.">ローカル コンピューターのレジストリに <paramref name="source" /> パラメーターがありません。  

または - 
イベント ログのレジストリ キーに対する書き込みアクセス許可がありません。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.DeleteEventSource(System.String,System.String)">
      <summary vsli:raw="Removes the application's event source registration from the specified computer.">指定したコンピューターからアプリケーションのイベント ソース登録を削除します。</summary>
      <param name="source" vsli:raw="The name by which the application is registered in the event log system.">イベント ログ システムにアプリケーションを登録するときに使用する名前。</param>
      <param name="machineName" vsli:raw="The name of the computer to remove the registration from, or &quot;.&quot; for the local computer.">登録を削除するコンピューターの名前。ローカル コンピューターの場合は "."。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;machineName&quot; /&gt; parameter is invalid.  &#xA;  &#xA;-or-&#xA;  &#xA; The &lt;paramref name=&quot;source&quot; /&gt; parameter does not exist in the registry of the specified computer.  &#xA;  &#xA;-or-&#xA;  &#xA; You do not have write access on the registry key for the event log.">
        <paramref name="machineName" /> パラメーターが正しくありません。  

または - 
指定したコンピューターのレジストリに <paramref name="source" /> パラメーターがありません。  

または 
イベント ログのレジストリ キーに対する書き込みアクセス許可がありません。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; cannot be deleted because in the registry, the parent registry key for &lt;paramref name=&quot;source&quot; /&gt; does not contain a subkey with the same name.">レジストリで <paramref name="source" /> の親レジストリ キーに同じ名前のサブキーが含まれないため、<paramref name="source" /> は削除できません。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Diagnostics.EventLog&quot; /&gt;, and optionally releases the managed resources.">
        <see cref="T:System.Diagnostics.EventLog" /> が使用しているアンマネージド リソースを解放します。オプションとして、マネージド リソースを解放することもできます。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="P:System.Diagnostics.EventLog.EnableRaisingEvents">
      <summary vsli:raw="Gets or sets a value indicating whether the &lt;see cref=&quot;T:System.Diagnostics.EventLog&quot; /&gt; receives &lt;see cref=&quot;E:System.Diagnostics.EventLog.EntryWritten&quot; /&gt; event notifications.">
        <see cref="T:System.Diagnostics.EventLog" /> が <see cref="E:System.Diagnostics.EventLog.EntryWritten" /> イベント通知を受信するかどうかを示す値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Diagnostics.EventLog&quot; /&gt; receives notification when an entry is written to the log; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">エントリがログに書き込まれたときに <see cref="T:System.Diagnostics.EventLog" /> が通知を受信する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The event log is on a remote computer.">イベント ログは、リモート コンピューター上にあります。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.EndInit">
      <summary vsli:raw="Ends the initialization of an &lt;see cref=&quot;T:System.Diagnostics.EventLog&quot; /&gt; used on a form or by another component. The initialization occurs at runtime.">フォームまたは別のコンポーネントで使用される <see cref="T:System.Diagnostics.EventLog" /> の初期化を終了します。 初期化は実行時に発生します。</summary>
    </member>
    <member name="P:System.Diagnostics.EventLog.Entries">
      <summary vsli:raw="Gets the contents of the event log.">イベント ログの内容を取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Diagnostics.EventLogEntryCollection&quot; /&gt; holding the entries in the event log. Each entry is associated with an instance of the &lt;see cref=&quot;T:System.Diagnostics.EventLogEntry&quot; /&gt; class.">イベント ログのエントリを保持している <see cref="T:System.Diagnostics.EventLogEntryCollection" />。 1 つのエントリが <see cref="T:System.Diagnostics.EventLogEntry" /> クラスの 1 つのインスタンスに関連付けられます。</returns>
    </member>
    <member name="E:System.Diagnostics.EventLog.EntryWritten">
      <summary vsli:raw="Occurs when an entry is written to an event log on the local computer.">ローカル コンピューター上のイベント ログにエントリが書き込まれたときに発生します。</summary>
    </member>
    <member name="M:System.Diagnostics.EventLog.Exists(System.String)">
      <summary vsli:raw="Determines whether the log exists on the local computer.">ローカル コンピューター上にログが存在するかどうかを確認します。</summary>
      <param name="logName" vsli:raw="The name of the log to search for. Possible values include: Application, Security, System, other application-specific logs (such as those associated with Active Directory), or any custom log on the computer.">検索するログの名前。 次のような値となる場合があります。アプリケーション、セキュリティ、システム、アプリケーション固有のその他のログ (Active Directory に関連するログなど)、またはコンピューター上の任意のカスタム ログ。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the log exists on the local computer; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">ローカル コンピューター上にログが存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The logName is &lt;see langword=&quot;null&quot; /&gt; or the value is empty.">logName が <see langword="null" /> です。または値が空です。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.Exists(System.String,System.String)">
      <summary vsli:raw="Determines whether the log exists on the specified computer.">指定したコンピューター上にログが存在するかどうかを確認します。</summary>
      <param name="logName" vsli:raw="The log for which to search. Possible values include: Application, Security, System, other application-specific logs (such as those associated with Active Directory), or any custom log on the computer.">検索するログ。 次のような値となる場合があります。アプリケーション、セキュリティ、システム、アプリケーション固有のその他のログ (Active Directory に関連するログなど)、またはコンピューター上の任意のカスタム ログ。</param>
      <param name="machineName" vsli:raw="The name of the computer on which to search for the log, or &quot;.&quot; for the local computer.">ログ検索の対象となるコンピューターの名前。ローカル コンピューターの場合は "."。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the log exists on the specified computer; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定したコンピューター上にログが存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;machineName&quot; /&gt; parameter is an invalid format. Make sure you have used proper syntax for the computer on which you are searching.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;logName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or the value is empty.">
        <paramref name="machineName" /> パラメーターの書式が無効です。 検索しているコンピューターに対して正しい構文を使用したかどうかを確認してください。  

または - 
<paramref name="logName" /> が <see langword="null" /> です。または値が空です。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.GetEventLogs">
      <summary vsli:raw="Searches for all event logs on the local computer and creates an array of &lt;see cref=&quot;T:System.Diagnostics.EventLog&quot; /&gt; objects that contain the list.">ローカル コンピューター上のすべてのイベント ログを検索し、リストを格納する <see cref="T:System.Diagnostics.EventLog" /> オブジェクトの配列を作成します。</summary>
      <returns vsli:raw="An array of type &lt;see cref=&quot;T:System.Diagnostics.EventLog&quot; /&gt; that represents the logs on the local computer.">ローカル コンピューター上のログを表す <see cref="T:System.Diagnostics.EventLog" /> 型の配列。</returns>
      <exception cref="T:System.SystemException" vsli:raw="You do not have read access to the registry.  &#xA;  &#xA; -or-  &#xA;  &#xA; There is no event log service on the computer.">レジストリの読み取りアクセス許可がありません。  

または -  

 コンピューター上にイベント ログ サービスがありません。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.GetEventLogs(System.String)">
      <summary vsli:raw="Searches for all event logs on the given computer and creates an array of &lt;see cref=&quot;T:System.Diagnostics.EventLog&quot; /&gt; objects that contain the list.">指定したコンピューター上のすべてのイベント ログを検索し、リストを格納する <see cref="T:System.Diagnostics.EventLog" /> オブジェクトの配列を作成します。</summary>
      <param name="machineName" vsli:raw="The computer on which to search for event logs.">イベント ログの検索対象となるコンピューター。</param>
      <returns vsli:raw="An array of type &lt;see cref=&quot;T:System.Diagnostics.EventLog&quot; /&gt; that represents the logs on the given computer.">指定したコンピューター上のログを表す <see cref="T:System.Diagnostics.EventLog" /> 型の配列。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;machineName&quot; /&gt; parameter is an invalid computer name.">
        <paramref name="machineName" /> パラメーターに無効なコンピューター名が指定されています。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="You do not have read access to the registry.  &#xA;  &#xA; -or-  &#xA;  &#xA; There is no event log service on the computer.">レジストリの読み取りアクセス許可がありません。  

または -  

 コンピューター上にイベント ログ サービスがありません。</exception>
    </member>
    <member name="P:System.Diagnostics.EventLog.Log">
      <summary vsli:raw="Gets or sets the name of the log to read from or write to.">読み取るログまたは書き込むログの名前を取得または設定します。</summary>
      <returns vsli:raw="The name of the log. This can be Application, System, Security, or a custom log name. The default is an empty string (&quot;&quot;).">ログの名前。 ログ名には、アプリケーション ログ名、システム ログ名、セキュリティ ログ名、またはカスタム ログ名を指定できます。 既定値は、空の文字列 ("") です。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLog.LogDisplayName">
      <summary vsli:raw="Gets the event log's friendly name.">イベント ログの表示名を取得します。</summary>
      <returns vsli:raw="A name that represents the event log in the system's event viewer.">システムのイベント ビューアーのイベント ログを表す名前。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The specified &lt;see cref=&quot;P:System.Diagnostics.EventLog.Log&quot; /&gt; does not exist in the registry for this computer.">このコンピューターのレジストリに、指定した <see cref="P:System.Diagnostics.EventLog.Log" /> が存在しません。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.LogNameFromSourceName(System.String,System.String)">
      <summary vsli:raw="Gets the name of the log to which the specified source is registered.">指定したソースが登録されているログの名前を取得します。</summary>
      <param name="source" vsli:raw="The name of the event source.">イベント ソースの名前。</param>
      <param name="machineName" vsli:raw="The name of the computer on which to look, or &quot;.&quot; for the local computer.">検索対象のコンピューターの名前。ローカル コンピューターの場合は "."。</param>
      <returns vsli:raw="The name of the log associated with the specified source in the registry.">レジストリ内で指定したソースに関連付けられているログの名前。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLog.MachineName">
      <summary vsli:raw="Gets or sets the name of the computer on which to read or write events.">イベントを読み取るコンピューターまたは書き込むコンピューターの名前を取得または設定します。</summary>
      <returns vsli:raw="The name of the server on which the event log resides. The default is the local computer (&quot;.&quot;).">イベント ログが存在するサーバーの名前。 既定値はローカル コンピューター (".") です。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The computer name is invalid.">コンピューター名が無効です。</exception>
    </member>
    <member name="P:System.Diagnostics.EventLog.MaximumKilobytes">
      <summary vsli:raw="Gets or sets the maximum event log size in kilobytes.">イベント ログの最大サイズを KB 単位で取得または設定します。</summary>
      <returns vsli:raw="The maximum event log size in kilobytes. The default is 512, indicating a maximum file size of 512 kilobytes.">イベント ログの最大サイズ。単位は KB です。 既定値は、512 KB の最大ファイル サイズを示す 512 です。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The specified value is less than 64, or greater than 4194240, or not an even multiple of 64.">指定した値が 64 未満か、4194240 を超える値です。または、64 の倍数ではありません。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.EventLog.Log&quot; /&gt; value is not a valid log name.  &#xA;  &#xA;-or-&#xA;  &#xA; The registry key for the event log could not be opened on the target computer.">
        <see cref="P:System.Diagnostics.EventLog.Log" /> 値が有効なログ名ではありません。  

または - 
ターゲット コンピューター上のイベント ログのレジストリ キーを開けませんでした。</exception>
    </member>
    <member name="P:System.Diagnostics.EventLog.MinimumRetentionDays">
      <summary vsli:raw="Gets the number of days to retain entries in the event log.">イベント ログ内のエントリを保持する日数を取得します。</summary>
      <returns vsli:raw="The number of days that entries in the event log are retained. The default value is 7.">イベント ログ内のエントリが保持される日数。 既定値は 7 です。</returns>
    </member>
    <member name="M:System.Diagnostics.EventLog.ModifyOverflowPolicy(System.Diagnostics.OverflowAction,System.Int32)">
      <summary vsli:raw="Changes the configured behavior for writing new entries when the event log reaches its maximum file size.">イベント ログが最大ファイル サイズに達した場合に、新しいエントリを書き込むように構成された動作を変更します。</summary>
      <param name="action" vsli:raw="The overflow behavior for writing new entries to the event log.">イベント ログに新しいエントリを書き込むためのオーバーフロー動作。</param>
      <param name="retentionDays" vsli:raw="The minimum number of days each event log entry is retained. This parameter is used only if &lt;paramref name=&quot;action&quot; /&gt; is set to &lt;see cref=&quot;F:System.Diagnostics.OverflowAction.OverwriteOlder&quot; /&gt;.">イベント ログの各エントリが保持される最小日数。 このパラメーターは、<paramref name="action" /> が <see cref="F:System.Diagnostics.OverflowAction.OverwriteOlder" /> に設定されている場合にのみ使用されます。</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;action&quot; /&gt; is not a valid &lt;see cref=&quot;P:System.Diagnostics.EventLog.OverflowAction&quot; /&gt; value.">
        <paramref name="action" /> は有効な <see cref="P:System.Diagnostics.EventLog.OverflowAction" /> 値ではありません。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;retentionDays&quot; /&gt; is less than one, or larger than 365.">
        <paramref name="retentionDays" /> が 1 未満であるか、365 を超えています。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.EventLog.Log&quot; /&gt; value is not a valid log name.  &#xA;  &#xA;-or-&#xA;  &#xA; The registry key for the event log could not be opened on the target computer.">
        <see cref="P:System.Diagnostics.EventLog.Log" /> 値が有効なログ名ではありません。  

または - 
ターゲット コンピューター上のイベント ログのレジストリ キーを開けませんでした。</exception>
    </member>
    <member name="P:System.Diagnostics.EventLog.OverflowAction">
      <summary vsli:raw="Gets the configured behavior for storing new entries when the event log reaches its maximum log file size.">イベント ログが最大ファイル サイズに達した場合に、新しいエントリを格納するように構成された動作を取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.OverflowAction&quot; /&gt; value that specifies the configured behavior for storing new entries when the event log reaches its maximum log size. The default is &lt;see cref=&quot;F:System.Diagnostics.OverflowAction.OverwriteOlder&quot; /&gt;.">イベント ログが最大サイズに達した場合に、新しいエントリを格納するために構成された動作を指定する <see cref="T:System.Diagnostics.OverflowAction" /> 値。 既定値は、<see cref="F:System.Diagnostics.OverflowAction.OverwriteOlder" /> です。</returns>
    </member>
    <member name="M:System.Diagnostics.EventLog.RegisterDisplayName(System.String,System.Int64)">
      <summary vsli:raw="Specifies the localized name of the event log, which is displayed in the server Event Viewer.">イベント ログのローカライズされた名前を指定します。これは、サーバーのイベント ビューアーに表示されます。</summary>
      <param name="resourceFile" vsli:raw="The fully specified path to a localized resource file.">ローカライズされたリソース ファイルの完全指定パス。</param>
      <param name="resourceId" vsli:raw="The resource identifier that indexes a localized string within the resource file.">リソース ファイル内のローカライズされた文字列のインデックスを示すリソース識別子。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.EventLog.Log&quot; /&gt; value is not a valid log name.  &#xA;  &#xA;-or-&#xA;  &#xA; The registry key for the event log could not be opened on the target computer.">
        <see cref="P:System.Diagnostics.EventLog.Log" /> 値が有効なログ名ではありません。  

または - 
ターゲット コンピューター上のイベント ログのレジストリ キーを開けませんでした。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;resourceFile&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="resourceFile" /> は <see langword="null" />です。</exception>
    </member>
    <member name="P:System.Diagnostics.EventLog.Source">
      <summary vsli:raw="Gets or sets the source name to register and use when writing to the event log.">イベント ログを書き込むときに登録して使用するソース名を取得または設定します。</summary>
      <returns vsli:raw="The name registered with the event log as a source of entries. The default is an empty string (&quot;&quot;).">エントリのソースとしてイベント ログに登録される名前。 既定値は、空の文字列 ("") です。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The source name results in a registry key path longer than 254 characters.">ソース名は、254 文字を超えるレジストリ キーのパスになります。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.SourceExists(System.String)">
      <summary vsli:raw="Determines whether an event source is registered on the local computer.">ローカル コンピューターにイベント ソースが登録されているかどうかを確認します。</summary>
      <param name="source" vsli:raw="The name of the event source.">イベント ソースの名前。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the event source is registered on the local computer; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">ローカル コンピューターにイベント ソースが存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; was not found, but some or all of the event logs could not be searched.">
        <paramref name="source" /> が見つかりませんでしたが、イベント ログの一部またはすべてが検索できませんでした。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.SourceExists(System.String,System.String)">
      <summary vsli:raw="Determines whether an event source is registered on a specified computer.">指定したコンピューターにイベント ソースが登録されているかどうかを確認します。</summary>
      <param name="source" vsli:raw="The name of the event source.">イベント ソースの名前。</param>
      <param name="machineName" vsli:raw="The name the computer on which to look, or &quot;.&quot; for the local computer.">検索対象のコンピューターの名前。ローカル コンピューターの場合は "."。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the event source is registered on the given computer; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定したコンピューターにイベント ソースが登録されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;machineName&quot; /&gt; is an invalid computer name.">
        <paramref name="machineName" /> が無効なコンピューター名です。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; was not found, but some or all of the event logs could not be searched.">
        <paramref name="source" /> が見つかりませんでしたが、イベント ログの一部またはすべてが検索できませんでした。</exception>
    </member>
    <member name="P:System.Diagnostics.EventLog.SynchronizingObject">
      <summary vsli:raw="Gets or sets the object used to marshal the event handler calls issued as a result of an &lt;see cref=&quot;T:System.Diagnostics.EventLog&quot; /&gt; entry written event.">
        <see cref="T:System.Diagnostics.EventLog" /> エントリ書き込みイベントの結果として発行されるイベント ハンドラー呼び出しをマーシャリングするために使用するオブジェクトを取得または設定します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ISynchronizeInvoke&quot; /&gt; used to marshal event-handler calls issued as a result of an &lt;see cref=&quot;E:System.Diagnostics.EventLog.EntryWritten&quot; /&gt; event on the event log.">イベント ログの <see cref="E:System.Diagnostics.EventLog.EntryWritten" /> イベントの結果として発行されるイベント ハンドラー呼び出しをマーシャリングするために使用する <see cref="T:System.ComponentModel.ISynchronizeInvoke" />。</returns>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String)">
      <summary vsli:raw="Writes an information type entry, with the given message text, to the event log.">種類が Information のエントリを、指定したメッセージ テキストと共にイベント ログに書き込みます。</summary>
      <param name="message" vsli:raw="The string to write to the event log.">イベント ログに書き込む文字列。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.EventLog.Source&quot; /&gt; property of the &lt;see cref=&quot;T:System.Diagnostics.EventLog&quot; /&gt; has not been set.  &#xA;  &#xA; -or-  &#xA;  &#xA; The method attempted to register a new event source, but the computer name in &lt;see cref=&quot;P:System.Diagnostics.EventLog.MachineName&quot; /&gt; is not valid.  &#xA;  &#xA;-or-&#xA;  &#xA; The source is already registered for a different event log.  &#xA;  &#xA;-or-&#xA;  &#xA; The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).  &#xA;  &#xA;-or-&#xA;  &#xA; The source name results in a registry key path longer than 254 characters.">
        <see cref="P:System.Diagnostics.EventLog.Source" /> の <see cref="T:System.Diagnostics.EventLog" /> プロパティが設定されていません。  

または - 
メソッドが新しいイベント ソースを登録しようとしましたが、<see cref="P:System.Diagnostics.EventLog.MachineName" /> のコンピューター名が無効です。  

または 
ソースは既に別のイベント ログに登録されています。  

または - 
メッセージ文字列は 31,839 バイト (Windows Vista より前の Windows オペレーティング システムでは 32,766 バイト) を超えています。  

または 
ソース名は、254 文字を超えるレジストリ キーのパスになります。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The registry key for the event log could not be opened.">イベント ログのレジストリ キーを開けませんでした。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The operating system reported an error when writing the event entry to the event log. A Windows error code is not available.">イベント エントリをイベント ログに書き込むときにオペレーティング システムからエラーが報告されました。 Windows のエラー コードは使用できません。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType)">
      <summary vsli:raw="Writes an error, warning, information, success audit, or failure audit entry with the given message text to the event log.">エラー、警告、情報、監査正常終了、または監査エラー エントリを、指定したメッセージ テキストと共にイベント ログに書き込みます。</summary>
      <param name="message" vsli:raw="The string to write to the event log.">イベント ログに書き込む文字列。</param>
      <param name="type" vsli:raw="One of the &lt;see cref=&quot;T:System.Diagnostics.EventLogEntryType&quot; /&gt; values.">
        <see cref="T:System.Diagnostics.EventLogEntryType" /> 値のいずれか。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.EventLog.Source&quot; /&gt; property of the &lt;see cref=&quot;T:System.Diagnostics.EventLog&quot; /&gt; has not been set.  &#xA;  &#xA; -or-  &#xA;  &#xA; The method attempted to register a new event source, but the computer name in &lt;see cref=&quot;P:System.Diagnostics.EventLog.MachineName&quot; /&gt; is not valid.  &#xA;  &#xA;-or-&#xA;  &#xA; The source is already registered for a different event log.  &#xA;  &#xA;-or-&#xA;  &#xA; The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).  &#xA;  &#xA;-or-&#xA;  &#xA; The source name results in a registry key path longer than 254 characters.">
        <see cref="P:System.Diagnostics.EventLog.Source" /> の <see cref="T:System.Diagnostics.EventLog" /> プロパティが設定されていません。  
または 
メソッドが新しいイベント ソースを登録しようとしましたが、<see cref="P:System.Diagnostics.EventLog.MachineName" /> のコンピューター名が無効です。  

または - 
ソースは既に別のイベント ログに登録されています。  

または 
メッセージ文字列は 31,839 バイト (Windows Vista より前の Windows オペレーティング システムでは 32,766 バイト) を超えています。  
または 
ソース名は、254 文字を超えるレジストリ キーのパスになります。</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Diagnostics.EventLogEntryType&quot; /&gt;.">
        <paramref name="type" /> は有効な <see cref="T:System.Diagnostics.EventLogEntryType" /> ではありません。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The registry key for the event log could not be opened.">イベント ログのレジストリ キーを開けませんでした。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The operating system reported an error when writing the event entry to the event log. A Windows error code is not available.">イベント エントリをイベント ログに書き込むときにオペレーティング システムからエラーが報告されました。 Windows のエラー コードは使用できません。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32)">
      <summary vsli:raw="Writes an entry with the given message text and application-defined event identifier to the event log.">エントリを、指定したメッセージ テキストおよびアプリケーション定義のイベント識別子と共にイベント ログに書き込みます。</summary>
      <param name="message" vsli:raw="The string to write to the event log.">イベント ログに書き込む文字列。</param>
      <param name="type" vsli:raw="One of the &lt;see cref=&quot;T:System.Diagnostics.EventLogEntryType&quot; /&gt; values.">
        <see cref="T:System.Diagnostics.EventLogEntryType" /> 値のいずれか 1 つ。</param>
      <param name="eventID" vsli:raw="The application-specific identifier for the event.">イベントの、アプリケーション固有の識別子。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.EventLog.Source&quot; /&gt; property of the &lt;see cref=&quot;T:System.Diagnostics.EventLog&quot; /&gt; has not been set.  &#xA;  &#xA; -or-  &#xA;  &#xA; The method attempted to register a new event source, but the computer name in &lt;see cref=&quot;P:System.Diagnostics.EventLog.MachineName&quot; /&gt; is not valid.  &#xA;  &#xA;-or-&#xA;  &#xA; The source is already registered for a different event log.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;eventID&quot; /&gt; is less than zero or greater than &lt;see cref=&quot;F:System.UInt16.MaxValue&quot;&gt;UInt16.MaxValue&lt;/see&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).  &#xA;  &#xA;-or-&#xA;  &#xA; The source name results in a registry key path longer than 254 characters.">
        <see cref="P:System.Diagnostics.EventLog.Source" /> の <see cref="T:System.Diagnostics.EventLog" /> プロパティが設定されていません。  
または 
メソッドが新しいイベント ソースを登録しようとしましたが、<see cref="P:System.Diagnostics.EventLog.MachineName" /> のコンピューター名が無効です。  
または 
ソースは既に別のイベント ログに登録されています。  

または - 
<paramref name="eventID" /> が 0 未満であるか、<see cref="F:System.UInt16.MaxValue" /> を超えています。  

または - 
メッセージ文字列は 31,839 バイト (Windows Vista より前の Windows オペレーティング システムでは 32,766 バイト) を超えています。  


または 
ソース名は、254 文字を超えるレジストリ キーのパスになります。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The registry key for the event log could not be opened.">イベント ログのレジストリ キーを開けませんでした。</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Diagnostics.EventLogEntryType&quot; /&gt;.">
        <paramref name="type" /> は有効な <see cref="T:System.Diagnostics.EventLogEntryType" /> ではありません。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The operating system reported an error when writing the event entry to the event log. A Windows error code is not available.">イベント エントリをイベント ログに書き込むときにオペレーティング システムからエラーが報告されました。 Windows のエラー コードは使用できません。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16)">
      <summary vsli:raw="Writes an entry with the given message text, application-defined event identifier, and application-defined category to the event log.">指定したメッセージ テキスト、アプリケーション定義のイベント識別子、およびアプリケーション定義のカテゴリと共にエントリをイベント ログに書き込みます。</summary>
      <param name="message" vsli:raw="The string to write to the event log.">イベント ログに書き込む文字列。</param>
      <param name="type" vsli:raw="One of the &lt;see cref=&quot;T:System.Diagnostics.EventLogEntryType&quot; /&gt; values.">
        <see cref="T:System.Diagnostics.EventLogEntryType" /> 値のいずれか。</param>
      <param name="eventID" vsli:raw="The application-specific identifier for the event.">イベントの、アプリケーション固有の識別子。</param>
      <param name="category" vsli:raw="The application-specific subcategory associated with the message.">メッセージと関連付けられた、アプリケーション固有のサブカテゴリ。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.EventLog.Source&quot; /&gt; property of the &lt;see cref=&quot;T:System.Diagnostics.EventLog&quot; /&gt; has not been set.  &#xA;  &#xA; -or-  &#xA;  &#xA; The method attempted to register a new event source, but the computer name in &lt;see cref=&quot;P:System.Diagnostics.EventLog.MachineName&quot; /&gt; is not valid.  &#xA;  &#xA;-or-&#xA;  &#xA; The source is already registered for a different event log.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;eventID&quot; /&gt; is less than zero or greater than &lt;see cref=&quot;F:System.UInt16.MaxValue&quot;&gt;UInt16.MaxValue&lt;/see&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).  &#xA;  &#xA;-or-&#xA;  &#xA; The source name results in a registry key path longer than 254 characters.">
        <see cref="P:System.Diagnostics.EventLog.Source" /> の <see cref="T:System.Diagnostics.EventLog" /> プロパティが設定されていません。  

または - 
メソッドが新しいイベント ソースを登録しようとしましたが、<see cref="P:System.Diagnostics.EventLog.MachineName" /> のコンピューター名が無効です。  

または - 
ソースは既に別のイベント ログに登録されています。  

または - 
<paramref name="eventID" /> が 0 未満であるか、<see cref="F:System.UInt16.MaxValue" /> を超えています。  

または - 
メッセージ文字列は 31,839 バイト (Windows Vista より前の Windows オペレーティング システムでは 32,766 バイト) を超えています。  

または - 
ソース名は、254 文字を超えるレジストリ キーのパスになります。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The registry key for the event log could not be opened.">イベント ログのレジストリ キーを開けませんでした。</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Diagnostics.EventLogEntryType&quot; /&gt;.">
        <paramref name="type" /> は有効な <see cref="T:System.Diagnostics.EventLogEntryType" /> ではありません。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The operating system reported an error when writing the event entry to the event log. A Windows error code is not available.">イベント エントリをイベント ログに書き込むときにオペレーティング システムからエラーが報告されました。 Windows のエラー コードは使用できません。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16,System.Byte[])">
      <summary vsli:raw="Writes an entry with the given message text, application-defined event identifier, and application-defined category to the event log, and appends binary data to the message.">指定したメッセージ テキスト、アプリケーション定義のイベント識別子、およびアプリケーション定義のカテゴリと共にエントリをイベント ログに書き込み、メッセージにバイナリ データを付加します。</summary>
      <param name="message" vsli:raw="The string to write to the event log.">イベント ログに書き込む文字列。</param>
      <param name="type" vsli:raw="One of the &lt;see cref=&quot;T:System.Diagnostics.EventLogEntryType&quot; /&gt; values.">
        <see cref="T:System.Diagnostics.EventLogEntryType" /> 値のいずれか 1 つ。</param>
      <param name="eventID" vsli:raw="The application-specific identifier for the event.">イベントの、アプリケーション固有の識別子。</param>
      <param name="category" vsli:raw="The application-specific subcategory associated with the message.">メッセージと関連付けられた、アプリケーション固有のサブカテゴリ。</param>
      <param name="rawData" vsli:raw="An array of bytes that holds the binary data associated with the entry.">エントリに関連付けられているバイナリ データを保持するバイト配列。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.EventLog.Source&quot; /&gt; property of the &lt;see cref=&quot;T:System.Diagnostics.EventLog&quot; /&gt; has not been set.  &#xA;  &#xA; -or-  &#xA;  &#xA; The method attempted to register a new event source, but the computer name in &lt;see cref=&quot;P:System.Diagnostics.EventLog.MachineName&quot; /&gt; is not valid.  &#xA;  &#xA;-or-&#xA;  &#xA; The source is already registered for a different event log.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;eventID&quot; /&gt; is less than zero or greater than &lt;see cref=&quot;F:System.UInt16.MaxValue&quot;&gt;UInt16.MaxValue&lt;/see&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).  &#xA;  &#xA;-or-&#xA;  &#xA; The source name results in a registry key path longer than 254 characters.">
        <see cref="P:System.Diagnostics.EventLog.Source" /> の <see cref="T:System.Diagnostics.EventLog" /> プロパティが設定されていません。  

または - 
メソッドが新しいイベント ソースを登録しようとしましたが、<see cref="P:System.Diagnostics.EventLog.MachineName" /> のコンピューター名が無効です。  

または - 
ソースは既に別のイベント ログに登録されています。  


または 
 <paramref name="eventID" /> が 0 未満であるか、<see cref="F:System.UInt16.MaxValue" /> を超えています。  
または 
メッセージ文字列は 31,839 バイト (Windows Vista より前の Windows オペレーティング システムでは 32,766 バイト) を超えています。  
または 
ソース名は、254 文字を超えるレジストリ キーのパスになります。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The registry key for the event log could not be opened.">イベント ログのレジストリ キーを開けませんでした。</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Diagnostics.EventLogEntryType&quot; /&gt;.">
        <paramref name="type" /> は有効な <see cref="T:System.Diagnostics.EventLogEntryType" /> ではありません。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The operating system reported an error when writing the event entry to the event log. A Windows error code is not available.">イベント エントリをイベント ログに書き込むときにオペレーティング システムからエラーが報告されました。 Windows のエラー コードは使用できません。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String)">
      <summary vsli:raw="Writes an information type entry with the given message text to the event log, using the specified registered event source.">指定した登録イベント ソースを使用して、種類が Information のエントリを、指定したメッセージ テキストと共にイベント ログに書き込みます。</summary>
      <param name="source" vsli:raw="The source by which the application is registered on the specified computer.">アプリケーションを指定されたコンピューターに登録するために使用されるソース。</param>
      <param name="message" vsli:raw="The string to write to the event log.">イベント ログに書き込む文字列。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; value is an empty string (&quot;&quot;).  &#xA;  &#xA;-or-&#xA;  &#xA; The &lt;paramref name=&quot;source&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).  &#xA;  &#xA;-or-&#xA;  &#xA; The source name results in a registry key path longer than 254 characters.">
        <paramref name="source" /> 値が空の文字列 ("") です。  

または - 
<paramref name="source" /> 値は <see langword="null" /> です。  

または - 
メッセージ文字列は 31,839 バイト (Windows Vista より前の Windows オペレーティング システムでは 32,766 バイト) を超えています。  

または - 
ソース名は、254 文字を超えるレジストリ キーのパスになります。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The registry key for the event log could not be opened.">イベント ログのレジストリ キーを開けませんでした。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The operating system reported an error when writing the event entry to the event log. A Windows error code is not available.">イベント エントリをイベント ログに書き込むときにオペレーティング システムからエラーが報告されました。 Windows のエラー コードは使用できません。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType)">
      <summary vsli:raw="Writes an error, warning, information, success audit, or failure audit entry with the given message text to the event log, using the specified registered event source.">指定した登録イベント ソースを使用して、エラー、警告、情報、監査正常終了、または監査エラー エントリを、指定したメッセージ テキストと共にイベント ログに書き込みます。</summary>
      <param name="source" vsli:raw="The source by which the application is registered on the specified computer.">アプリケーションを指定されたコンピューターに登録するために使用されるソース。</param>
      <param name="message" vsli:raw="The string to write to the event log.">イベント ログに書き込む文字列。</param>
      <param name="type" vsli:raw="One of the &lt;see cref=&quot;T:System.Diagnostics.EventLogEntryType&quot; /&gt; values.">
        <see cref="T:System.Diagnostics.EventLogEntryType" /> 値のいずれか 1 つ。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; value is an empty string (&quot;&quot;).  &#xA;  &#xA;-or-&#xA;  &#xA; The &lt;paramref name=&quot;source&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).  &#xA;  &#xA;-or-&#xA;  &#xA; The source name results in a registry key path longer than 254 characters.">
        <paramref name="source" /> 値が空の文字列 ("") です。  

または - 
<paramref name="source" /> 値は <see langword="null" /> です。  

または 
メッセージ文字列は 31,839 バイト (Windows Vista より前の Windows オペレーティング システムでは 32,766 バイト) を超えています。  

または - 
ソース名は、254 文字を超えるレジストリ キーのパスになります。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The registry key for the event log could not be opened.">イベント ログのレジストリ キーを開けませんでした。</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Diagnostics.EventLogEntryType&quot; /&gt;.">
        <paramref name="type" /> は有効な <see cref="T:System.Diagnostics.EventLogEntryType" /> ではありません。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The operating system reported an error when writing the event entry to the event log. A Windows error code is not available.">イベント エントリをイベント ログに書き込むときにオペレーティング システムからエラーが報告されました。 Windows のエラー コードは使用できません。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType,System.Int32)">
      <summary vsli:raw="Writes an entry with the given message text and application-defined event identifier to the event log, using the specified registered event source.">指定した登録イベント ソースを使用して、指定したメッセージ テキストおよびアプリケーション定義のイベント識別子と共にエントリをイベント ログに書き込みます。</summary>
      <param name="source" vsli:raw="The source by which the application is registered on the specified computer.">アプリケーションを指定されたコンピューターに登録するために使用されるソース。</param>
      <param name="message" vsli:raw="The string to write to the event log.">イベント ログに書き込む文字列。</param>
      <param name="type" vsli:raw="One of the &lt;see cref=&quot;T:System.Diagnostics.EventLogEntryType&quot; /&gt; values.">
        <see cref="T:System.Diagnostics.EventLogEntryType" /> 値のいずれか 1 つ。</param>
      <param name="eventID" vsli:raw="The application-specific identifier for the event.">イベントの、アプリケーション固有の識別子。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; value is an empty string (&quot;&quot;).  &#xA;  &#xA;-or-&#xA;  &#xA; The &lt;paramref name=&quot;source&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;eventID&quot; /&gt; is less than zero or greater than &lt;see cref=&quot;F:System.UInt16.MaxValue&quot;&gt;UInt16.MaxValue&lt;/see&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).  &#xA;  &#xA;-or-&#xA;  &#xA; The source name results in a registry key path longer than 254 characters.">
        <paramref name="source" /> 値が空の文字列 ("") です。  

または - 
<paramref name="source" /> 値は <see langword="null" /> です。  

または 
 <paramref name="eventID" /> が 0 未満であるか、<see cref="F:System.UInt16.MaxValue" /> を超えています。  

または - 
メッセージ文字列は 31,839 バイト (Windows Vista より前の Windows オペレーティング システムでは 32,766 バイト) を超えています。  

または - 
ソース名は、254 文字を超えるレジストリ キーのパスになります。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The registry key for the event log could not be opened.">イベント ログのレジストリ キーを開けませんでした。</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Diagnostics.EventLogEntryType&quot; /&gt;.">
        <paramref name="type" /> は有効な <see cref="T:System.Diagnostics.EventLogEntryType" /> ではありません。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The operating system reported an error when writing the event entry to the event log. A Windows error code is not available.">イベント エントリをイベント ログに書き込むときにオペレーティング システムからエラーが報告されました。 Windows のエラー コードは使用できません。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16)">
      <summary vsli:raw="Writes an entry with the given message text, application-defined event identifier, and application-defined category to the event log, using the specified registered event source. The &lt;paramref name=&quot;category&quot; /&gt; can be used by the Event Viewer to filter events in the log.">指定した登録イベント ソースを使用して、メッセージ テキスト、アプリケーション定義のイベント識別子、およびアプリケーション定義のカテゴリと共にエントリをイベント ログに書き込みます。 <paramref name="category" /> は、イベント ビューアーでログ内のイベントをフィルター処理するときに使用できます。</summary>
      <param name="source" vsli:raw="The source by which the application is registered on the specified computer.">アプリケーションを指定されたコンピューターに登録するために使用されるソース。</param>
      <param name="message" vsli:raw="The string to write to the event log.">イベント ログに書き込む文字列。</param>
      <param name="type" vsli:raw="One of the &lt;see cref=&quot;T:System.Diagnostics.EventLogEntryType&quot; /&gt; values.">
        <see cref="T:System.Diagnostics.EventLogEntryType" /> 値のいずれか 1 つ。</param>
      <param name="eventID" vsli:raw="The application-specific identifier for the event.">イベントの、アプリケーション固有の識別子。</param>
      <param name="category" vsli:raw="The application-specific subcategory associated with the message.">メッセージと関連付けられた、アプリケーション固有のサブカテゴリ。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; value is an empty string (&quot;&quot;).  &#xA;  &#xA;-or-&#xA;  &#xA; The &lt;paramref name=&quot;source&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;eventID&quot; /&gt; is less than zero or greater than &lt;see cref=&quot;F:System.UInt16.MaxValue&quot;&gt;UInt16.MaxValue&lt;/see&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).  &#xA;  &#xA;-or-&#xA;  &#xA; The source name results in a registry key path longer than 254 characters.">
        <paramref name="source" /> 値が空の文字列 ("") です。  
または 
<paramref name="source" /> 値は <see langword="null" /> です。  

または - 
<paramref name="eventID" /> が 0 未満であるか、<see cref="F:System.UInt16.MaxValue" /> を超えています。  

または 
メッセージ文字列は 31,839 バイト (Windows Vista より前の Windows オペレーティング システムでは 32,766 バイト) を超えています。  

または - 
ソース名は、254 文字を超えるレジストリ キーのパスになります。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The registry key for the event log could not be opened.">イベント ログのレジストリ キーを開けませんでした。</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Diagnostics.EventLogEntryType&quot; /&gt;.">
        <paramref name="type" /> は有効な <see cref="T:System.Diagnostics.EventLogEntryType" /> ではありません。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The operating system reported an error when writing the event entry to the event log. A Windows error code is not available.">イベント エントリをイベント ログに書き込むときにオペレーティング システムからエラーが報告されました。 Windows のエラー コードは使用できません。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16,System.Byte[])">
      <summary vsli:raw="Writes an entry with the given message text, application-defined event identifier, and application-defined category to the event log (using the specified registered event source) and appends binary data to the message.">指定した登録イベント ソースを使用して、指定したメッセージ テキスト、アプリケーション定義のイベント識別子、およびアプリケーション定義のカテゴリと共にエントリをイベント ログに書き込み、メッセージにバイナリ データを付加します。</summary>
      <param name="source" vsli:raw="The source by which the application is registered on the specified computer.">アプリケーションを指定されたコンピューターに登録するために使用されるソース。</param>
      <param name="message" vsli:raw="The string to write to the event log.">イベント ログに書き込む文字列。</param>
      <param name="type" vsli:raw="One of the &lt;see cref=&quot;T:System.Diagnostics.EventLogEntryType&quot; /&gt; values.">
        <see cref="T:System.Diagnostics.EventLogEntryType" /> 値のいずれか。</param>
      <param name="eventID" vsli:raw="The application-specific identifier for the event.">イベントの、アプリケーション固有の識別子。</param>
      <param name="category" vsli:raw="The application-specific subcategory associated with the message.">メッセージと関連付けられた、アプリケーション固有のサブカテゴリ。</param>
      <param name="rawData" vsli:raw="An array of bytes that holds the binary data associated with the entry.">エントリに関連付けられているバイナリ データを保持するバイト配列。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; value is an empty string (&quot;&quot;).  &#xA;  &#xA;-or-&#xA;  &#xA; The &lt;paramref name=&quot;source&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;eventID&quot; /&gt; is less than zero or greater than &lt;see cref=&quot;F:System.UInt16.MaxValue&quot;&gt;UInt16.MaxValue&lt;/see&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).  &#xA;  &#xA;-or-&#xA;  &#xA; The source name results in a registry key path longer than 254 characters.">
        <paramref name="source" /> 値が空の文字列 ("") です。  

または - 
<paramref name="source" /> 値は <see langword="null" /> です。  

または 
 <paramref name="eventID" /> が 0 未満であるか、<see cref="F:System.UInt16.MaxValue" /> を超えています。  

または - 
メッセージ文字列は 31,839 バイト (Windows Vista より前の Windows オペレーティング システムでは 32,766 バイト) を超えています。  

または 
ソース名は、254 文字を超えるレジストリ キーのパスになります。</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Diagnostics.EventLogEntryType&quot; /&gt;.">
        <paramref name="type" /> は有効な <see cref="T:System.Diagnostics.EventLogEntryType" /> ではありません。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The registry key for the event log could not be opened.">イベント ログのレジストリ キーを開けませんでした。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The operating system reported an error when writing the event entry to the event log. A Windows error code is not available.">イベント エントリをイベント ログに書き込むときにオペレーティング システムからエラーが報告されました。 Windows のエラー コードは使用できません。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEvent(System.Diagnostics.EventInstance,System.Byte[],System.Object[])">
      <summary vsli:raw="Writes an event log entry with the given event data, message replacement strings, and associated binary data.">指定したイベント データ、メッセージ置換文字列、および関連するバイナリ データと共にイベント ログ エントリを書き込みます。</summary>
      <param name="instance" vsli:raw="An &lt;see cref=&quot;T:System.Diagnostics.EventInstance&quot; /&gt; instance that represents a localized event log entry.">ローカライズされたイベント ログ エントリを表す <see cref="T:System.Diagnostics.EventInstance" /> インスタンス。</param>
      <param name="data" vsli:raw="An array of bytes that holds the binary data associated with the entry.">エントリに関連付けられているバイナリ データを保持するバイト配列。</param>
      <param name="values" vsli:raw="An array of strings to merge into the message text of the event log entry.">イベント ログ エントリのメッセージ テキストにマージする文字列の配列。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.EventLog.Source&quot; /&gt; property of the &lt;see cref=&quot;T:System.Diagnostics.EventLog&quot; /&gt; has not been set.  &#xA;  &#xA; -or-  &#xA;  &#xA; The method attempted to register a new event source, but the computer name in &lt;see cref=&quot;P:System.Diagnostics.EventLog.MachineName&quot; /&gt; is not valid.  &#xA;  &#xA;-or-&#xA;  &#xA; The source is already registered for a different event log.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;instance.InstanceId&quot; /&gt; is less than zero or greater than &lt;see cref=&quot;F:System.UInt16.MaxValue&quot;&gt;UInt16.MaxValue&lt;/see&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;values&quot; /&gt; has more than 256 elements.  &#xA;  &#xA;-or-&#xA;  &#xA; One of the &lt;paramref name=&quot;values&quot; /&gt; elements is longer than 32766 bytes.  &#xA;  &#xA;-or-&#xA;  &#xA; The source name results in a registry key path longer than 254 characters.">
        <see cref="P:System.Diagnostics.EventLog.Source" /> の <see cref="T:System.Diagnostics.EventLog" /> プロパティが設定されていません。  
または 
メソッドが新しいイベント ソースを登録しようとしましたが、<see cref="P:System.Diagnostics.EventLog.MachineName" /> のコンピューター名が無効です。  

または - 
ソースは既に別のイベント ログに登録されています。  

または - 
<paramref name="instance.InstanceId" /> が 0 未満であるか、<see cref="F:System.UInt16.MaxValue" /> を超えています。  


または 
 <paramref name="values" /> には 256 を超える要素が格納されています。  
または 
<paramref name="values" /> 要素の 1 つが 32766 バイトを超えています。  
または 
ソース名は、254 文字を超えるレジストリ キーのパスになります。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The registry key for the event log could not be opened.">イベント ログのレジストリ キーを開けませんでした。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The operating system reported an error when writing the event entry to the event log. A Windows error code is not available.">イベント エントリをイベント ログに書き込むときにオペレーティング システムからエラーが報告されました。 Windows のエラー コードは使用できません。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEvent(System.Diagnostics.EventInstance,System.Object[])">
      <summary vsli:raw="Writes a localized entry to the event log.">ローカライズされたエントリをイベント ログに書き込みます。</summary>
      <param name="instance" vsli:raw="An &lt;see cref=&quot;T:System.Diagnostics.EventInstance&quot; /&gt; instance that represents a localized event log entry.">ローカライズされたイベント ログ エントリを表す <see cref="T:System.Diagnostics.EventInstance" /> インスタンス。</param>
      <param name="values" vsli:raw="An array of strings to merge into the message text of the event log entry.">イベント ログ エントリのメッセージ テキストにマージする文字列の配列。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.EventLog.Source&quot; /&gt; property of the &lt;see cref=&quot;T:System.Diagnostics.EventLog&quot; /&gt; has not been set.  &#xA;  &#xA; -or-  &#xA;  &#xA; The method attempted to register a new event source, but the computer name in &lt;see cref=&quot;P:System.Diagnostics.EventLog.MachineName&quot; /&gt; is not valid.  &#xA;  &#xA;-or-&#xA;  &#xA; The source is already registered for a different event log.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;instance.InstanceId&quot; /&gt; is less than zero or greater than &lt;see cref=&quot;F:System.UInt16.MaxValue&quot;&gt;UInt16.MaxValue&lt;/see&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;values&quot; /&gt; has more than 256 elements.  &#xA;  &#xA;-or-&#xA;  &#xA; One of the &lt;paramref name=&quot;values&quot; /&gt; elements is longer than 32766 bytes.  &#xA;  &#xA;-or-&#xA;  &#xA; The source name results in a registry key path longer than 254 characters.">
        <see cref="P:System.Diagnostics.EventLog.Source" /> の <see cref="T:System.Diagnostics.EventLog" /> プロパティが設定されていません。  
または 
メソッドが新しいイベント ソースを登録しようとしましたが、<see cref="P:System.Diagnostics.EventLog.MachineName" /> のコンピューター名が無効です。  
または 
ソースは既に別のイベント ログに登録されています。  

または - 
<paramref name="instance.InstanceId" /> が 0 未満であるか、<see cref="F:System.UInt16.MaxValue" /> を超えています。  

または 
 <paramref name="values" /> には 256 を超える要素が格納されています。  
または 
<paramref name="values" /> 要素の 1 つが 32766 バイトを超えています。  

または - 
ソース名は、254 文字を超えるレジストリ キーのパスになります。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The registry key for the event log could not be opened.">イベント ログのレジストリ キーを開けませんでした。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The operating system reported an error when writing the event entry to the event log. A Windows error code is not available.">イベント エントリをイベント ログに書き込むときにオペレーティング システムからエラーが報告されました。 Windows のエラー コードは使用できません。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEvent(System.String,System.Diagnostics.EventInstance,System.Byte[],System.Object[])">
      <summary vsli:raw="Writes an event log entry with the given event data, message replacement strings, and associated binary data, and using the specified registered event source.">指定した登録イベント ソースを使用して、指定したイベント データ、メッセージ置換文字列、および関連するバイナリ データと共にイベント ログ エントリを書き込みます。</summary>
      <param name="source" vsli:raw="The name of the event source registered for the application on the specified computer.">指定したコンピューター上のアプリケーションに登録されるイベント ソースの名前。</param>
      <param name="instance" vsli:raw="An &lt;see cref=&quot;T:System.Diagnostics.EventInstance&quot; /&gt; instance that represents a localized event log entry.">ローカライズされたイベント ログ エントリを表す <see cref="T:System.Diagnostics.EventInstance" /> インスタンス。</param>
      <param name="data" vsli:raw="An array of bytes that holds the binary data associated with the entry.">エントリに関連付けられているバイナリ データを保持するバイト配列。</param>
      <param name="values" vsli:raw="An array of strings to merge into the message text of the event log entry.">イベント ログ エントリのメッセージ テキストにマージする文字列の配列。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; value is an empty string (&quot;&quot;).  &#xA;  &#xA;-or-&#xA;  &#xA; The &lt;paramref name=&quot;source&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;instance.InstanceId&quot; /&gt; is less than zero or greater than &lt;see cref=&quot;F:System.UInt16.MaxValue&quot;&gt;UInt16.MaxValue&lt;/see&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;values&quot; /&gt; has more than 256 elements.  &#xA;  &#xA;-or-&#xA;  &#xA; One of the &lt;paramref name=&quot;values&quot; /&gt; elements is longer than 32766 bytes.  &#xA;  &#xA;-or-&#xA;  &#xA; The source name results in a registry key path longer than 254 characters.">
        <paramref name="source" /> 値が空の文字列 ("") です。  
または 
<paramref name="source" /> 値は <see langword="null" /> です。  

または - 
<paramref name="instance.InstanceId" /> が 0 未満であるか、<see cref="F:System.UInt16.MaxValue" /> を超えています。  

または - 
<paramref name="values" /> には 256 を超える要素が格納されています。  

または - 
<paramref name="values" /> 要素の 1 つが 32766 バイトを超えています。  

または - 
ソース名は、254 文字を超えるレジストリ キーのパスになります。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The registry key for the event log could not be opened.">イベント ログのレジストリ キーを開けませんでした。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The operating system reported an error when writing the event entry to the event log. A Windows error code is not available.">イベント エントリをイベント ログに書き込むときにオペレーティング システムからエラーが報告されました。 Windows のエラー コードは使用できません。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEvent(System.String,System.Diagnostics.EventInstance,System.Object[])">
      <summary vsli:raw="Writes an event log entry with the given event data and message replacement strings, using the specified registered event source.">指定した登録イベント ソースを使用して、指定したイベント データとメッセージ置換文字列と共にイベント ログ エントリを書き込みます。</summary>
      <param name="source" vsli:raw="The name of the event source registered for the application on the specified computer.">指定したコンピューター上のアプリケーションに登録されるイベント ソースの名前。</param>
      <param name="instance" vsli:raw="An &lt;see cref=&quot;T:System.Diagnostics.EventInstance&quot; /&gt; instance that represents a localized event log entry.">ローカライズされたイベント ログ エントリを表す <see cref="T:System.Diagnostics.EventInstance" /> インスタンス。</param>
      <param name="values" vsli:raw="An array of strings to merge into the message text of the event log entry.">イベント ログ エントリのメッセージ テキストにマージする文字列の配列。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; value is an empty string (&quot;&quot;).  &#xA;  &#xA;-or-&#xA;  &#xA; The &lt;paramref name=&quot;source&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;instance.InstanceId&quot; /&gt; is less than zero or greater than &lt;see cref=&quot;F:System.UInt16.MaxValue&quot;&gt;UInt16.MaxValue&lt;/see&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;values&quot; /&gt; has more than 256 elements.  &#xA;  &#xA;-or-&#xA;  &#xA; One of the &lt;paramref name=&quot;values&quot; /&gt; elements is longer than 32766 bytes.  &#xA;  &#xA;-or-&#xA;  &#xA; The source name results in a registry key path longer than 254 characters.">
        <paramref name="source" /> 値が空の文字列 ("") です。  

または - 
<paramref name="source" /> 値は <see langword="null" /> です。  

または - 
<paramref name="instance.InstanceId" /> が 0 未満であるか、<see cref="F:System.UInt16.MaxValue" /> を超えています。  


または 
 <paramref name="values" /> には 256 を超える要素が格納されています。  
または 
<paramref name="values" /> 要素の 1 つが 32766 バイトを超えています。  

または - 
ソース名は、254 文字を超えるレジストリ キーのパスになります。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The registry key for the event log could not be opened.">イベント ログのレジストリ キーを開けませんでした。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The operating system reported an error when writing the event entry to the event log. A Windows error code is not available.">イベント エントリをイベント ログに書き込むときにオペレーティング システムからエラーが報告されました。 Windows のエラー コードは使用できません。</exception>
    </member>
    <member name="T:System.Diagnostics.EventLogEntry">
      <summary vsli:raw="Encapsulates a single record in the event log. This class cannot be inherited.">イベント ログの単一レコードをカプセル化します。 このクラスは継承できません。</summary>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.Category">
      <summary vsli:raw="Gets the text associated with the &lt;see cref=&quot;P:System.Diagnostics.EventLogEntry.CategoryNumber&quot; /&gt; property for this entry.">このエントリの <see cref="P:System.Diagnostics.EventLogEntry.CategoryNumber" /> プロパティに関連付けられているテキストを取得します。</summary>
      <returns vsli:raw="The application-specific category text.">アプリケーション固有のカテゴリ テキスト。</returns>
      <exception cref="T:System.Exception" vsli:raw="The space could not be allocated for one of the insertion strings associated with the category.">カテゴリに関連付けられている挿入文字列の 1 つに空白を割り当てることはできませんでした。</exception>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.CategoryNumber">
      <summary vsli:raw="Gets the category number of the event log entry.">イベント ログ エントリのカテゴリ番号を取得します。</summary>
      <returns vsli:raw="The application-specific category number for this entry.">このエントリのアプリケーション固有のカテゴリ番号。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.Data">
      <summary vsli:raw="Gets the binary data associated with the entry.">エントリに関連付けられているバイナリ データを取得します。</summary>
      <returns vsli:raw="An array of bytes that holds the binary data associated with the entry.">エントリに関連付けられているバイナリ データを保持するバイト配列。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.EntryType">
      <summary vsli:raw="Gets the event type of this entry.">エントリのイベントの種類を取得します。</summary>
      <returns vsli:raw="The event type that is associated with the entry in the event log.">イベント ログ内のエントリに関連付けられているイベントの種類。</returns>
    </member>
    <member name="M:System.Diagnostics.EventLogEntry.Equals(System.Diagnostics.EventLogEntry)">
      <summary vsli:raw="Performs a comparison between two event log entries.">2 つのイベント ログ エントリを比較します。</summary>
      <param name="otherEntry" vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.EventLogEntry&quot; /&gt; to compare.">比較対象の <see cref="T:System.Diagnostics.EventLogEntry" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Diagnostics.EventLogEntry&quot; /&gt; objects are identical; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Diagnostics.EventLogEntry" /> オブジェクトが同じ場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.EventID">
      <summary vsli:raw="Gets the application-specific event identifier for the current event entry.">現在のイベント エントリのアプリケーション固有のイベント識別子を取得します。</summary>
      <returns vsli:raw="The application-specific identifier for the event message.">イベント メッセージの、アプリケーション固有の識別子。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.Index">
      <summary vsli:raw="Gets the index of this entry in the event log.">イベント ログでのエントリのインデックスを取得します。</summary>
      <returns vsli:raw="The index of this entry in the event log.">イベント ログに存在するエントリのインデックス。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.InstanceId">
      <summary vsli:raw="Gets the resource identifier that designates the message text of the event entry.">イベント エントリのメッセージ テキストを指定するリソース識別子を取得します。</summary>
      <returns vsli:raw="A resource identifier that corresponds to a string definition in the message resource file of the event source.">イベント ソースのメッセージ リソース ファイルの文字列定義に対応するリソース識別子。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.MachineName">
      <summary vsli:raw="Gets the name of the computer on which this entry was generated.">エントリを生成したコンピューターの名前を取得します。</summary>
      <returns vsli:raw="The name of the computer that contains the event log.">イベント ログを格納しているコンピューターの名前。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.Message">
      <summary vsli:raw="Gets the localized message associated with this event entry.">イベント エントリに関連付けられているローカライズ済みのメッセージを取得します。</summary>
      <returns vsli:raw="The formatted, localized text for the message. This includes associated replacement strings.">メッセージ用の書式設定されローカライズされたテキスト。 これには関連付けられた置換文字列が含まれます。</returns>
      <exception cref="T:System.Exception" vsli:raw="The space could not be allocated for one of the insertion strings associated with the message.">メッセージに関連付けられている挿入文字列の 1 つに空白を割り当てることはできませんでした。</exception>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.ReplacementStrings">
      <summary vsli:raw="Gets the replacement strings associated with the event log entry.">イベント ログ エントリに関連付けられている置換文字列を取得します。</summary>
      <returns vsli:raw="An array that holds the replacement strings stored in the event entry.">イベント エントリに格納されている置換文字列を保持する配列。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.Source">
      <summary vsli:raw="Gets the name of the application that generated this event.">イベントを発生させたアプリケーションの名前を取得します。</summary>
      <returns vsli:raw="The name registered with the event log as the source of this event.">イベントのソースとしてイベント ログに登録される名前。</returns>
    </member>
    <member name="M:System.Diagnostics.EventLogEntry.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; with the data needed to serialize the target object.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> に、オブジェクトをシリアル化するために必要なデータを設定します。</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to populate with data.">データの読み込み先となる <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context" vsli:raw="The destination (see &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;) for this serialization.">このシリアル化のシリアル化先 (<see cref="T:System.Runtime.Serialization.StreamingContext" /> を参照)。</param>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.TimeGenerated">
      <summary vsli:raw="Gets the local time at which this event was generated.">イベントが生成された現地時間を取得します。</summary>
      <returns vsli:raw="The local time at which this event was generated.">イベントが生成された現地時間。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.TimeWritten">
      <summary vsli:raw="Gets the local time at which this event was written to the log.">イベントがログに書き込まれた現地時間を取得します。</summary>
      <returns vsli:raw="The local time at which this event was written to the log.">イベントがログに書き込まれた現地時間。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.UserName">
      <summary vsli:raw="Gets the name of the user who is responsible for this event.">イベントを発生させたユーザーの名前を取得します。</summary>
      <returns vsli:raw="The security identifier (SID) that uniquely identifies a user or group.">ユーザーまたはグループを一意に識別するセキュリティ識別子 (SID: Security Identifier)。</returns>
      <exception cref="T:System.SystemException" vsli:raw="Account information could not be obtained for the user's SID.">ユーザーの SID に対するアカウント情報を取得できませんでした。</exception>
    </member>
    <member name="T:System.Diagnostics.EventLogEntryCollection">
      <summary vsli:raw="Defines size and enumerators for a collection of &lt;see cref=&quot;T:System.Diagnostics.EventLogEntry&quot; /&gt; instances.">
        <see cref="T:System.Diagnostics.EventLogEntry" /> インスタンスのコレクションのサイズと列挙子を定義します。</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogEntryCollection.CopyTo(System.Diagnostics.EventLogEntry[],System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Diagnostics.EventLogEntryCollection&quot; /&gt; to an array of &lt;see cref=&quot;T:System.Diagnostics.EventLogEntry&quot; /&gt; instances, starting at a particular array index.">
        <see cref="T:System.Diagnostics.EventLogEntryCollection" /> の要素を、<see cref="T:System.Diagnostics.EventLogEntry" /> インスタンスの配列にコピーします (インスタンス配列の特定の配列インデックスからコピーが開始されます)。</summary>
      <param name="entries" vsli:raw="The one-dimensional array of &lt;see cref=&quot;T:System.Diagnostics.EventLogEntry&quot; /&gt; instances that is the destination of the elements copied from the collection. The array must have zero-based indexing.">コレクションからコピーされる要素のコピー先である <see cref="T:System.Diagnostics.EventLogEntry" /> インスタンスの 1 次元配列。 配列には、0 から始まるインデックスが設定されている必要があります。</param>
      <param name="index" vsli:raw="The zero-based index in the array at which copying begins.">配列内のコピーを開始する位置を示す、0 から始まるインデックスです。</param>
    </member>
    <member name="P:System.Diagnostics.EventLogEntryCollection.Count">
      <summary vsli:raw="Gets the number of entries in the event log (that is, the number of elements in the &lt;see cref=&quot;T:System.Diagnostics.EventLogEntry&quot; /&gt; collection).">イベント ログのエントリ数 (<see cref="T:System.Diagnostics.EventLogEntry" /> コレクション内の要素数) を取得します。</summary>
      <returns vsli:raw="The number of entries currently in the event log.">現時点でイベント ログに存在するエントリの数。</returns>
    </member>
    <member name="M:System.Diagnostics.EventLogEntryCollection.GetEnumerator">
      <summary vsli:raw="Supports a simple iteration over the &lt;see cref=&quot;T:System.Diagnostics.EventLogEntryCollection&quot; /&gt; object.">
        <see cref="T:System.Diagnostics.EventLogEntryCollection" /> オブジェクトに対する単純な反復処理をサポートします。</summary>
      <returns vsli:raw="An object that can be used to iterate over the collection.">コレクションを反復処理するために使用できるオブジェクト。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntryCollection.Item(System.Int32)">
      <summary vsli:raw="Gets an entry in the event log, based on an index that starts at 0 (zero).">0 (ゼロ) から始まるインデックスに基づいて、イベント ログのエントリを取得します。</summary>
      <param name="index" vsli:raw="The zero-based index that is associated with the event log entry.">イベント ログ エントリに関連付けられた、0 から始まるインデックス。</param>
      <returns vsli:raw="The event log entry at the location that is specified by the &lt;paramref name=&quot;index&quot; /&gt; parameter.">
        <paramref name="index" /> パラメーターで指定した位置にあるイベント ログ エントリ。</returns>
    </member>
    <member name="M:System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of the collection to an &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at a particular &lt;see cref=&quot;T:System.Array&quot; /&gt; index.">コレクションの要素を <see cref="T:System.Array" /> にコピーします。<see cref="T:System.Array" /> の特定のインデックスからコピーが開始されます。</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements that are copied from the collection. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">コレクションの要素のコピー先となる 1 次元の <see cref="T:System.Array" />。 <see cref="T:System.Array" /> には、0 から始まるインデックス番号が必要です。</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">コピーの開始位置とする <paramref name="array" /> のインデックス (0 から始まる)。</param>
    </member>
    <member name="P:System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether access to the &lt;see cref=&quot;T:System.Diagnostics.EventLogEntryCollection&quot; /&gt; is synchronized (thread-safe).">
        <see cref="T:System.Diagnostics.EventLogEntryCollection" /> へのアクセスが同期されている (スレッド セーフである) かどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; if access to the collection is not synchronized (thread-safe).">コレクションへのアクセスが同期されていない (スレッド セーフでない) 場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Diagnostics.EventLogEntryCollection&quot; /&gt; object.">
        <see cref="T:System.Diagnostics.EventLogEntryCollection" /> オブジェクトへのアクセスを同期するために使用できるオブジェクトを取得します。</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the collection.">コレクションへのアクセスを同期するために使用できるオブジェクト。</returns>
    </member>
    <member name="T:System.Diagnostics.EventLogEntryType">
      <summary vsli:raw="Specifies the event type of an event log entry.">イベント ログ エントリのイベントの種類を指定します。</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogEntryType.Error">
      <summary vsli:raw="An error event. This indicates a significant problem the user should know about; usually a loss of functionality or data.">エラー イベント。 ユーザーに知らせる必要がある重大な問題を示します。通常は、機能またはデータの損失です。</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogEntryType.FailureAudit">
      <summary vsli:raw="A failure audit event. This indicates a security event that occurs when an audited access attempt fails; for example, a failed attempt to open a file.">監査エラーイベント。 ファイルを開けなかった場合など、監査アクセスに失敗した場合に発生するセキュリティ イベントを示します。</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogEntryType.Information">
      <summary vsli:raw="An information event. This indicates a significant, successful operation.">情報イベント。 有効で成功した操作を示します。</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogEntryType.SuccessAudit">
      <summary vsli:raw="A success audit event. This indicates a security event that occurs when an audited access attempt is successful; for example, logging on successfully.">成功した監査イベント。 たとえば、ログオンに成功した場合のように、監査アクセスに成功した場合に発生するセキュリティ イベントを示します。</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogEntryType.Warning">
      <summary vsli:raw="A warning event. This indicates a problem that is not immediately significant, but that may signify conditions that could cause future problems.">警告イベント。 緊急を要する問題ではありませんが、今後問題の原因となりうることを示します。</summary>
    </member>
    <member name="T:System.Diagnostics.EventLogTraceListener">
      <summary vsli:raw="Provides a simple listener that directs tracing or debugging output to an &lt;see cref=&quot;T:System.Diagnostics.EventLog&quot; /&gt;.">トレース出力またはデバッグ出力を <see cref="T:System.Diagnostics.EventLog" /> に転送する簡単なリスナーを提供します。</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.EventLogTraceListener&quot; /&gt; class without a trace listener.">トレース リスナーを指定せずに、<see cref="T:System.Diagnostics.EventLogTraceListener" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.#ctor(System.Diagnostics.EventLog)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.EventLogTraceListener&quot; /&gt; class using the specified event log.">イベント ログを指定して、<see cref="T:System.Diagnostics.EventLogTraceListener" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="eventLog" vsli:raw="The event log to write to.">書き込み先のイベント ログ。</param>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.EventLogTraceListener&quot; /&gt; class using the specified source.">ソースを指定して、<see cref="T:System.Diagnostics.EventLogTraceListener" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="source" vsli:raw="The name of an existing event log source.">既存のイベント ログ ソースの名前。</param>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.Close">
      <summary vsli:raw="Closes the event log so that it no longer receives tracing or debugging output.">イベント ログを終了して、トレース出力またはデバッグ出力を受信しないようにします。</summary>
    </member>
    <member name="P:System.Diagnostics.EventLogTraceListener.EventLog">
      <summary vsli:raw="Gets or sets the event log to write to.">書き込み先となるイベント ログを取得または設定します。</summary>
      <returns vsli:raw="The event log to write to.">書き込み先のイベント ログ。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogTraceListener.Name">
      <summary vsli:raw="Gets or sets the name of this &lt;see cref=&quot;T:System.Diagnostics.EventLogTraceListener&quot; /&gt;.">この <see cref="T:System.Diagnostics.EventLogTraceListener" /> の名前を取得または設定します。</summary>
      <returns vsli:raw="The name of this trace listener.">トレース リスナーの名前。</returns>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
      <summary vsli:raw="Writes trace information, a data object, and event information to the event log.">トレース情報、データ オブジェクト、およびイベント情報をイベント ログに書き込みます。</summary>
      <param name="eventCache" vsli:raw="An object that contains the current process ID, thread ID, and stack trace information.">現在のプロセス ID、スレッド ID、およびスタック トレース情報を格納しているオブジェクト。</param>
      <param name="source" vsli:raw="A name used to identify the output; typically the name of the application that generated the trace event.">出力を識別するために使用される名前。通常は、トレース イベントを生成したアプリケーションの名前。</param>
      <param name="severity" vsli:raw="One of the enumeration values that specifies the type of event that has caused the trace.">トレースを発生させたイベントの種類を指定する列挙値の 1 つ。</param>
      <param name="id" vsli:raw="A numeric identifier for the event. The combination of &lt;paramref name=&quot;source&quot; /&gt; and &lt;paramref name=&quot;id&quot; /&gt; uniquely identifies an event.">イベントの数値識別子。 <paramref name="source" /> および <paramref name="id" /> の組み合わせにより、イベントが一意に識別されます。</param>
      <param name="data" vsli:raw="A data object to write to the output file or stream.">出力ファイルまたは出力ストリームに書き込むデータ オブジェクト。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is not specified.  &#xA;  &#xA; -or-  &#xA;  &#xA; The log entry string exceeds 32,766 characters.">
        <paramref name="source" /> が指定されていません。  
または 
ログ エントリの文字列の長さが 32,766 文字を超えています。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
      <summary vsli:raw="Writes trace information, an array of data objects, and event information to the event log.">トレース情報、データ オブジェクトの配列、およびイベント情報をイベント ログに書き込みます。</summary>
      <param name="eventCache" vsli:raw="An object that contains the current process ID, thread ID, and stack trace information.">現在のプロセス ID、スレッド ID、およびスタック トレース情報を格納しているオブジェクト。</param>
      <param name="source" vsli:raw="A name used to identify the output; typically the name of the application that generated the trace event.">出力を識別するために使用される名前。通常は、トレース イベントを生成したアプリケーションの名前。</param>
      <param name="severity" vsli:raw="One of the enumeration values that specifies the type of event that has caused the trace.">トレースを発生させたイベントの種類を指定する列挙値の 1 つ。</param>
      <param name="id" vsli:raw="A numeric identifier for the event. The combination of &lt;paramref name=&quot;source&quot; /&gt; and &lt;paramref name=&quot;id&quot; /&gt; uniquely identifies an event.">イベントの数値識別子。 <paramref name="source" /> および <paramref name="id" /> の組み合わせにより、イベントが一意に識別されます。</param>
      <param name="data" vsli:raw="An array of data objects.">データ オブジェクトの配列。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is not specified.  &#xA;  &#xA; -or-  &#xA;  &#xA; The log entry string exceeds 32,766 characters.">
        <paramref name="source" /> が指定されていません。  

または - 
ログ エントリの文字列の長さが 32,766 文字を超えています。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
      <summary vsli:raw="Writes trace information, a message, and event information to the event log.">トレース情報、メッセージ、およびイベント情報をイベント ログに書き込みます。</summary>
      <param name="eventCache" vsli:raw="An object that contains the current process ID, thread ID, and stack trace information.">現在のプロセス ID、スレッド ID、およびスタック トレース情報を格納しているオブジェクト。</param>
      <param name="source" vsli:raw="A name used to identify the output; typically the name of the application that generated the trace event.">出力を識別するために使用される名前。通常は、トレース イベントを生成したアプリケーションの名前。</param>
      <param name="severity" vsli:raw="One of the enumeration values that specifies the type of event that has caused the trace.">トレースを発生させたイベントの種類を指定する列挙値の 1 つ。</param>
      <param name="id" vsli:raw="A numeric identifier for the event. The combination of &lt;paramref name=&quot;source&quot; /&gt; and &lt;paramref name=&quot;id&quot; /&gt; uniquely identifies an event.">イベントの数値識別子。 <paramref name="source" /> および <paramref name="id" /> の組み合わせにより、イベントが一意に識別されます。</param>
      <param name="message" vsli:raw="The trace message.">トレース メッセージ。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is not specified.  &#xA;  &#xA; -or-  &#xA;  &#xA; The log entry string exceeds 32,766 characters.">
        <paramref name="source" /> が指定されていません。  

または - 
ログ エントリの文字列の長さが 32,766 文字を超えています。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
      <summary vsli:raw="Writes trace information, a formatted array of objects, and event information to the event log.">トレース情報、オブジェクトの書式付き配列、およびイベント情報をイベント ログに書き込みます。</summary>
      <param name="eventCache" vsli:raw="An object that contains the current process ID, thread ID, and stack trace information.">現在のプロセス ID、スレッド ID、およびスタック トレース情報を格納しているオブジェクト。</param>
      <param name="source" vsli:raw="A name used to identify the output; typically the name of the application that generated the trace event.">出力を識別するために使用される名前。通常は、トレース イベントを生成したアプリケーションの名前。</param>
      <param name="severity" vsli:raw="One of the enumeration values that specifies the type of event that has caused the trace.">トレースを発生させたイベントの種類を指定する列挙値の 1 つ。</param>
      <param name="id" vsli:raw="A numeric identifier for the event. The combination of &lt;paramref name=&quot;source&quot; /&gt; and &lt;paramref name=&quot;id&quot; /&gt; uniquely identifies an event.">イベントの数値識別子。 <paramref name="source" /> および <paramref name="id" /> の組み合わせにより、イベントが一意に識別されます。</param>
      <param name="format" vsli:raw="A format string that contains zero or more format items that correspond to objects in the &lt;paramref name=&quot;args&quot; /&gt; array.">0 個以上の書式項目を格納している書式指定文字列。<paramref name="args" /> 配列内のオブジェクトに対応します。</param>
      <param name="args" vsli:raw="An &lt;see langword=&quot;object&quot; /&gt; array containing zero or more objects to format.">0 個以上の書式設定対象オブジェクトを含んだ <see langword="object" /> 配列。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is not specified.  &#xA;  &#xA; -or-  &#xA;  &#xA; The log entry string exceeds 32,766 characters.">
        <paramref name="source" /> が指定されていません。  

または - 
ログ エントリの文字列の長さが 32,766 文字を超えています。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.Write(System.String)">
      <summary vsli:raw="Writes a message to the event log for this instance.">このインスタンスのイベント ログにメッセージを書き込みます。</summary>
      <param name="message" vsli:raw="The message to write.">書き込むメッセージ。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;message&quot; /&gt; exceeds 32,766 characters.">
        <paramref name="message" /> が 32,766 文字を超えています。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.WriteLine(System.String)">
      <summary vsli:raw="Writes a message to the event log for this instance.">このインスタンスのイベント ログにメッセージを書き込みます。</summary>
      <param name="message" vsli:raw="The message to write.">書き込むメッセージ。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;message&quot; /&gt; exceeds 32,766 characters.">
        <paramref name="message" /> が 32,766 文字を超えています。</exception>
    </member>
    <member name="T:System.Diagnostics.EventSourceCreationData">
      <summary vsli:raw="Represents the configuration settings used to create an event log source on the local computer or a remote computer.">ローカル コンピューターまたはリモート コンピューターでイベント ログ ソースを作成するために使用される構成設定を表します。</summary>
    </member>
    <member name="M:System.Diagnostics.EventSourceCreationData.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.EventSourceCreationData&quot; /&gt; class with a specified event source and event log name.">指定したイベント ソースおよびイベント ログ名を使用して、<see cref="T:System.Diagnostics.EventSourceCreationData" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="source" vsli:raw="The name to register with the event log as a source of entries.">エントリのソースとしてイベント ログに登録する名前。</param>
      <param name="logName" vsli:raw="The name of the log to which entries from the source are written.">ソースのエントリが書き込まれるログの名前。</param>
    </member>
    <member name="P:System.Diagnostics.EventSourceCreationData.CategoryCount">
      <summary vsli:raw="Gets or sets the number of categories in the category resource file.">カテゴリ リソース ファイル内のカテゴリの数を取得または設定します。</summary>
      <returns vsli:raw="The number of categories in the category resource file. The default value is zero.">カテゴリ リソース ファイル内のカテゴリの数。 既定値は 0 です。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The property is set to a negative value or to a value larger than &lt;see cref=&quot;F:System.UInt16.MaxValue&quot;&gt;UInt16.MaxValue&lt;/see&gt;.">プロパティが負の値または <see cref="F:System.UInt16.MaxValue" /> より大きい値に設定されています。</exception>
    </member>
    <member name="P:System.Diagnostics.EventSourceCreationData.CategoryResourceFile">
      <summary vsli:raw="Gets or sets the path of the resource file that contains category strings for the source.">ソースのカテゴリ文字列が格納されたリソース ファイルのパスを取得または設定します。</summary>
      <returns vsli:raw="The path of the category resource file. The default is an empty string (&quot;&quot;).">カテゴリ リソース ファイルのパス。 既定値は、空の文字列 ("") です。</returns>
    </member>
    <member name="P:System.Diagnostics.EventSourceCreationData.LogName">
      <summary vsli:raw="Gets or sets the name of the event log to which the source writes entries.">ソースがエントリを書き込むイベント ログの名前を取得または設定します。</summary>
      <returns vsli:raw="The name of the event log. This can be Application, System, or a custom log name. The default value is &quot;Application.&quot;">イベント ログの名前。 ログ名には、アプリケーション ログ名、システム ログ名、またはカスタム ログ名を指定できます。 既定値は "Application" です。</returns>
    </member>
    <member name="P:System.Diagnostics.EventSourceCreationData.MachineName">
      <summary vsli:raw="Gets or sets the name of the computer on which to register the event source.">イベント ソースを登録するコンピューターの名前を取得または設定します。</summary>
      <returns vsli:raw="The name of the system on which to register the event source. The default is the local computer (&quot;.&quot;).">イベント ソースを登録するシステムの名前。 既定値はローカル コンピューター (".") です。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The computer name is invalid.">コンピューター名が無効です。</exception>
    </member>
    <member name="P:System.Diagnostics.EventSourceCreationData.MessageResourceFile">
      <summary vsli:raw="Gets or sets the path of the message resource file that contains message formatting strings for the source.">ソースのメッセージ書式指定文字列が格納されたメッセージ リソース ファイルのパスを取得または設定します。</summary>
      <returns vsli:raw="The path of the message resource file. The default is an empty string (&quot;&quot;).">メッセージ リソース ファイルのパス。 既定値は、空の文字列 ("") です。</returns>
    </member>
    <member name="P:System.Diagnostics.EventSourceCreationData.ParameterResourceFile">
      <summary vsli:raw="Gets or sets the path of the resource file that contains message parameter strings for the source.">ソースのメッセージ パラメーター文字列が格納されたリソース ファイルのパスを取得または設定します。</summary>
      <returns vsli:raw="The path of the parameter resource file. The default is an empty string (&quot;&quot;).">パラメーター リソース ファイルのパス。 既定値は、空の文字列 ("") です。</returns>
    </member>
    <member name="P:System.Diagnostics.EventSourceCreationData.Source">
      <summary vsli:raw="Gets or sets the name to register with the event log as an event source.">イベント ソースとしてイベント ログに登録する名前を取得または設定します。</summary>
      <returns vsli:raw="The name to register with the event log as a source of entries. The default is an empty string (&quot;&quot;).">エントリのソースとしてイベント ログに登録する名前。 既定値は、空の文字列 ("") です。</returns>
    </member>
    <member name="T:System.Diagnostics.OverflowAction">
      <summary vsli:raw="Specifies how to handle entries in an event log that has reached its maximum file size.">最大ファイル サイズに達したイベント ログ内のエントリの処理方法を指定します。</summary>
    </member>
    <member name="F:System.Diagnostics.OverflowAction.DoNotOverwrite">
      <summary vsli:raw="Indicates that existing entries are retained when the event log is full and new entries are discarded.">イベント ログがいっぱいになった場合、既存のエントリを保持し、新規のエントリが破棄されることを示します。</summary>
    </member>
    <member name="F:System.Diagnostics.OverflowAction.OverwriteAsNeeded">
      <summary vsli:raw="Indicates that each new entry overwrites the oldest entry when the event log is full.">イベント ログがいっぱいになった場合、最も古いエントリが新規のエントリで上書きされることを示します。</summary>
    </member>
    <member name="F:System.Diagnostics.OverflowAction.OverwriteOlder">
      <summary vsli:raw="Indicates that new events overwrite events older than specified by the &lt;see cref=&quot;P:System.Diagnostics.EventLog.MinimumRetentionDays&quot; /&gt; property value when the event log is full. New events are discarded if the event log is full and there are no events older than specified by the &lt;see cref=&quot;P:System.Diagnostics.EventLog.MinimumRetentionDays&quot; /&gt; property value.">イベント ログがいっぱいになった場合、<see cref="P:System.Diagnostics.EventLog.MinimumRetentionDays" /> プロパティ値の指定よりも古いイベントが新規のイベントで上書きされることを示します。 イベント ログがいっぱいになり、<see cref="P:System.Diagnostics.EventLog.MinimumRetentionDays" /> プロパティ値の指定よりも古いイベントが存在しない場合、新規のイベントは破棄されます。</summary>
    </member>
  </members>
</doc>