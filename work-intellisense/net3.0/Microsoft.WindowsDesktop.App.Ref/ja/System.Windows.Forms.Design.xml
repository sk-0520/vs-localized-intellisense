<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Windows.Forms.Design</name>
  </assembly>
  <members>
    <member name="T:System.ComponentModel.Design.ComponentDesigner">
      <summary>コンポーネントのデザイン モードの動作を拡張します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.#ctor">
      <summary>
        <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ActionLists">
      <summary>デザイナーに関連付けられているコンポーネントでサポートされているデザイン時アクション リストを取得します。</summary>
      <returns>デザイナーに関連付けられているコンポーネントでサポートされているデザイン時アクション リスト。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.AssociatedComponents">
      <summary>デザイナーで管理されているコンポーネントに関連付けられているコンポーネントのコレクションを取得します。</summary>
      <returns>デザイナーで管理されているコンポーネントに関連付けられているコンポーネント。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.Component">
      <summary>デザイナーがデザインするコンポーネントを取得します。</summary>
      <returns>デザイナーで管理されているコンポーネント。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.Dispose">
      <summary>
        <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> によって使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.Dispose(System.Boolean)">
      <summary>
        <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.DoDefaultAction">
      <summary>コンポーネントの既定イベントに対するメソッド シグネチャをソース コード ファイル内に作成し、コード内のその位置にカーソルを移動します。</summary>
      <exception cref="T:System.ComponentModel.Design.CheckoutException">ソース コード管理プログラムにチェックインされているファイルのチェックアウトの試行が失敗しました。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.GetService(System.Type)">
      <summary>デザイナーのコンポーネントのデザイン モード サイトから、指定した型のサービスの取得を試みます。</summary>
      <param name="serviceType">要求するサービスの型。</param>
      <returns>要求したサービスを実装しているオブジェクト。サービスを解決できない場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute">
      <summary>関連付けられているコンポーネントの継承の種類を示す属性を取得します。</summary>
      <returns>関連付けられているコンポーネントの <see cref="T:System.ComponentModel.InheritanceAttribute" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.Inherited">
      <summary>コンポーネントが継承されているかどうかを示す値を取得します。</summary>
      <returns>コンポーネントが継承されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>指定したコンポーネントをデザイナーで表示、編集、デザインできるように準備します。</summary>
      <param name="component">デザイナーで操作する対象のコンポーネント。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InitializeExistingComponent(System.Collections.IDictionary)">
      <summary>既存のコンポーネントを再初期化します。</summary>
      <param name="defaultValues">プロパティに適用する既定値の名前/値のディクショナリ。 既定値を指定しない場合は <see langword="null" /> にします。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InitializeNewComponent(System.Collections.IDictionary)">
      <summary>新しく作成したコンポーネントを初期化します。</summary>
      <param name="defaultValues">プロパティに適用する既定値の名前/値のディクショナリ。 既定値を指定しない場合は <see langword="null" /> にします。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InitializeNonDefault">
      <summary>既定値以外の値に既に初期化されている、インポートされたコンポーネントの設定値を初期化します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InvokeGetInheritanceAttribute(System.ComponentModel.Design.ComponentDesigner)">
      <summary>指定した <see cref="T:System.ComponentModel.InheritanceAttribute" /> の <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> を取得します。</summary>
      <param name="toInvoke">継承属性を取得する対象の <see cref="T:System.ComponentModel.Design.ComponentDesigner" />。</param>
      <returns>指定したデザイナーの <see cref="T:System.ComponentModel.InheritanceAttribute" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.OnSetComponentDefaults">
      <summary>コンポーネントの既定のプロパティを設定します。</summary>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ParentComponent">
      <summary>このデザイナーの親コンポーネントを取得します。</summary>
      <returns>このデザイナーの親コンポーネント。このデザイナーがルート コンポーネントでない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PostFilterAttributes(System.Collections.IDictionary)">
      <summary>デザイナーが、<see cref="T:System.ComponentModel.TypeDescriptor" /> を通じて公開する一連の属性から、項目を変更または削除できるようにします。</summary>
      <param name="attributes">コンポーネントのクラスの属性。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PostFilterEvents(System.Collections.IDictionary)">
      <summary>デザイナーが、<see cref="T:System.ComponentModel.TypeDescriptor" /> を通じて公開する一連のイベントから、項目を変更または削除できるようにします。</summary>
      <param name="events">コンポーネントのクラスのイベント。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PostFilterProperties(System.Collections.IDictionary)">
      <summary>デザイナーが、<see cref="T:System.ComponentModel.TypeDescriptor" /> を通じて公開する一連のプロパティから、項目を変更または削除できるようにします。</summary>
      <param name="properties">コンポーネントのクラスのプロパティ。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PreFilterAttributes(System.Collections.IDictionary)">
      <summary>デザイナーが、<see cref="T:System.ComponentModel.TypeDescriptor" /> を通じて公開する一連の属性に項目を追加できるようにします。</summary>
      <param name="attributes">コンポーネントのクラスの属性。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PreFilterEvents(System.Collections.IDictionary)">
      <summary>デザイナーが、<see cref="T:System.ComponentModel.TypeDescriptor" /> を通じて公開する一連のイベントに項目を追加できるようにします。</summary>
      <param name="events">コンポーネントのクラスのイベント。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>デザイナーが、<see cref="T:System.ComponentModel.TypeDescriptor" /> を通じて公開する一連のプロパティに項目を追加できるようにします。</summary>
      <param name="properties">コンポーネントのクラスのプロパティ。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanged(System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
      <summary>コンポーネントが変更されたことを <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> に通知します。</summary>
      <param name="member">変更されたメンバーを示す <see cref="T:System.ComponentModel.MemberDescriptor" />。</param>
      <param name="oldValue">変更前のメンバーの値。</param>
      <param name="newValue">変更後のメンバーの値。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanging(System.ComponentModel.MemberDescriptor)">
      <summary>コンポーネントが変更されようとしていることを <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> に通知します。</summary>
      <param name="member">変更されようとしているメンバーを示す <see cref="T:System.ComponentModel.MemberDescriptor" />。</param>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ShadowProperties">
      <summary>ユーザー設定値をオーバーライドするプロパティ値のコレクションを取得します。</summary>
      <returns>デザイン ドキュメントのシャドウ プロパティを示す <see cref="T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection">
      <summary>特定のプロパティに対して継承された既定値や割り当てられた値をオーバーライドするシャドウ プロパティのコレクションを表します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Contains(System.String)">
      <summary>指定した名前と一致するプロパティがコレクション内にあるかどうかを示します。</summary>
      <param name="propertyName">コレクション内にあるかどうかを調べるプロパティの名前。</param>
      <returns>プロパティがコレクション内にある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Item(System.String)">
      <summary>指定したインデックスにあるオブジェクトを取得または設定します。</summary>
      <param name="propertyName">コレクション内にあるかどうかを調べるプロパティの名前。</param>
      <returns>指定したプロパティの値がコレクション内にある場合は、その値。 それ以外の場合、シャドウ プロパティ値が適用されないプロパティの現在の値が取得されます。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterAttributes(System.Collections.IDictionary)">
      <summary>このメンバーの説明については、<see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)" /> メソッドのトピックを参照してください。</summary>
      <param name="attributes">コンポーネントのクラスの <see cref="T:System.Attribute" /> オブジェクト。 属性のディクショナリ内でのキーは、属性の <see cref="P:System.Attribute.TypeId" /> 値です。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterEvents(System.Collections.IDictionary)">
      <summary>このメンバーの説明については、<see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)" /> メソッドのトピックを参照してください。</summary>
      <param name="events">コンポーネントのクラスのイベントを表す <see cref="T:System.ComponentModel.EventDescriptor" /> オブジェクト。 イベントのディクショナリ内でのキーは、イベント名です。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterProperties(System.Collections.IDictionary)">
      <summary>このメンバーの説明については、<see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)" /> メソッドのトピックを参照してください。</summary>
      <param name="properties">コンポーネントのクラスのプロパティを表す <see cref="T:System.ComponentModel.PropertyDescriptor" /> オブジェクト。 プロパティのディクショナリ内でのキーは、プロパティ名です。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterAttributes(System.Collections.IDictionary)">
      <summary>このメンバーの説明については、<see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)" /> メソッドのトピックを参照してください。</summary>
      <param name="attributes">コンポーネントのクラスの <see cref="T:System.Attribute" /> オブジェクト。 属性のディクショナリ内でのキーは、属性の <see cref="P:System.Attribute.TypeId" /> 値です。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterEvents(System.Collections.IDictionary)">
      <summary>このメンバーの説明については、<see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)" /> メソッドのトピックを参照してください。</summary>
      <param name="events">コンポーネントのクラスのイベントを表す <see cref="T:System.ComponentModel.EventDescriptor" /> オブジェクト。 イベントのディクショナリ内でのキーは、イベント名です。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterProperties(System.Collections.IDictionary)">
      <summary>このメンバーの説明については、<see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)" /> メソッドのトピックを参照してください。</summary>
      <param name="properties">コンポーネントのクラスのプロパティを表す <see cref="T:System.ComponentModel.PropertyDescriptor" /> オブジェクト。 プロパティのディクショナリ内でのキーは、プロパティ名です。</param>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#ITreeDesigner#Children">
      <summary>このメンバーの説明については、<see cref="P:System.ComponentModel.Design.ITreeDesigner.Children" /> プロパティを参照してください。</summary>
      <returns>現在の親デザイナーに格納された <see cref="T:System.Collections.ICollection" /> デザイナーのコレクションを含む <see cref="T:System.ComponentModel.Design.IDesigner" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#ITreeDesigner#Parent">
      <summary>このメンバーの説明については、<see cref="P:System.ComponentModel.Design.ITreeDesigner.Parent" /> プロパティを参照してください。</summary>
      <returns>親デザイナーを表す <see cref="T:System.ComponentModel.Design.IDesigner" />。または、親がないときは <see langword="null" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.Verbs">
      <summary>デサイナに関連付けられているコンポーネントがサポートしているデザイン時の動詞を取得します。</summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> オブジェクトの <see cref="T:System.ComponentModel.Design.DesignerVerb" />。デザイナー動詞がない場合は <see langword="null" />。 この既定の実装は、常に <see langword="null" /> を返します。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionHeaderItem">
      <summary>スマート タグ パネルの静的ヘッダー項目を表します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionHeaderItem.#ctor(System.String)">
      <summary>指定した名前文字列を使用して、<see cref="T:System.ComponentModel.Design.DesignerActionHeaderItem" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="displayName">ヘッダーで表示されるテキスト。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionHeaderItem.#ctor(System.String,System.String)">
      <summary>指定した名前とカテゴリ文字列を使用して、<see cref="T:System.ComponentModel.Design.DesignerActionHeaderItem" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="displayName">ヘッダーで表示されるテキスト。</param>
      <param name="category">パネル エントリのグループ化を定義する、大文字と小文字が区別される <see cref="T:System.String" />。</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionItem">
      <summary>スマート タグ パネルのパネル項目を表す型の基本クラスを提供します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItem.#ctor(System.String,System.String,System.String)">
      <summary>
        <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="displayName">この項目のパネル テキスト。</param>
      <param name="category">パネル エントリのグループ化を定義する、大文字と小文字が区別される <see cref="T:System.String" />。</param>
      <param name="description">ツールヒントやステータス バーで使用する可能性がある、この項目の補足テキスト。</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.AllowAssociate">
      <summary>この項目を同じ <see cref="P:System.ComponentModel.Design.DesignerActionItem.Category" /> プロパティ値を持つ項目のグループに配置できるかどうかを示す値を取得または設定します。</summary>
      <returns>項目をグループ化できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.Category">
      <summary>項目のグループ名を取得します。</summary>
      <returns>項目がメンバーとなっているグループを表す文字列。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.Description">
      <summary>項目の補足テキストを取得します。</summary>
      <returns>項目を説明するテキストを格納している <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.DisplayName">
      <summary>この項目のテキストを取得します。</summary>
      <returns>項目の表示テキストを格納している <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.Properties">
      <summary>プログラマ定義のキーと値のペアを格納するために使用できるコレクションへの参照を取得します。</summary>
      <returns>
        <see cref="T:System.Collections.IDictionary" /> を実装するコレクション。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.ShowInSourceView">
      <summary>この項目がソース コード ビューに表示されるかどうかを示す値を取得または設定します。</summary>
      <returns>この項目がソース コード ビューに表示される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionItemCollection">
      <summary>
        <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> オブジェクトのコレクションを表します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.#ctor">
      <summary>
        <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Add(System.ComponentModel.Design.DesignerActionItem)">
      <summary>指定した <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> を現在のコレクションに追加します。</summary>
      <param name="value">追加する <see cref="T:System.ComponentModel.Design.DesignerActionItem" />。</param>
      <returns>値が追加された位置の <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> ‏インデックス。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Contains(System.ComponentModel.Design.DesignerActionItem)">
      <summary>
        <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> に特定の要素が格納されているかどうかを判断します。</summary>
      <param name="value">
        <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> 内で検索される <see cref="T:System.ComponentModel.Design.DesignerActionItem" />。</param>
      <returns>指定した値が <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> に含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.CopyTo(System.ComponentModel.Design.DesignerActionItem[],System.Int32)">
      <summary>指定した配列インデックスを開始位置として、現在のコレクションの要素を指定した配列にコピーします。</summary>
      <param name="array">現在のコレクションから要素がコピーされる 1 次元の <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> 配列。 配列には、0 から始まるインデックスが設定されている必要があります。</param>
      <param name="index">コピーの開始位置とする <paramref name="array" /> のインデックス (0 から始まる)。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.IndexOf(System.ComponentModel.Design.DesignerActionItem)">
      <summary>コレクション内での指定した項目のインデックスを調べます。</summary>
      <param name="value">コレクション内で検索する <see cref="T:System.ComponentModel.Design.DesignerActionItem" />。</param>
      <returns>
        <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> 全体を対象に <paramref name="value" /> を検索し、見つかった場合は、インデックス番号の最も小さい要素の 0 から始まるインデックス番号、それ以外の場合は -1。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Insert(System.Int32,System.ComponentModel.Design.DesignerActionItem)">
      <summary>
        <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> 内の指定したインデックスの位置に要素を挿入します。</summary>
      <param name="index">
        <paramref name="value" /> を挿入する位置の、0 から始まるインデックス。</param>
      <param name="value">挿入する <see cref="T:System.ComponentModel.Design.DesignerActionItem" />。</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItemCollection.Item(System.Int32)">
      <summary>指定したインデックスにある要素を取得または設定します。</summary>
      <param name="index">要素の、0 から始まるインデックス。</param>
      <returns>指定されたインデックス位置にある <see cref="T:System.ComponentModel.Design.DesignerActionItem" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Remove(System.ComponentModel.Design.DesignerActionItem)">
      <summary>特定のオブジェクトが <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> 内にあるときに、最初に出現したものを削除します。</summary>
      <param name="value">
        <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> から削除する <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />。</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionList">
      <summary>スマート タグ パネルの作成に使用する項目のリストを定義する型の基本クラスを提供します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionList.#ctor(System.ComponentModel.IComponent)">
      <summary>
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="component">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> に関連するコンポーネント。</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionList.AutoShow">
      <summary>スマート タグ パネルの作成時に、スマート タグ パネルを自動的に表示する必要があるかどうかを示す値を取得または設定します。</summary>
      <returns>所有側のコンポーネントの作成時に、パネルを表示する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionList.Component">
      <summary>
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> に関連するコンポーネントを取得します。</summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> に関連するコンポーネント。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionList.GetService(System.Type)">
      <summary>
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> に関連付けられたコンポーネントが提供するサービスを表すオブジェクトを返します。</summary>
      <param name="serviceType">
        <see cref="T:System.ComponentModel.Component" /> が提供するサービス。</param>
      <returns>
        <see cref="T:System.Object" /> で提供されるサービスを表す <see cref="T:System.ComponentModel.Component" />。 <see cref="T:System.ComponentModel.Component" /> が指定されたサービスを提供しない場合、この値は <see langword="null" /> です。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems">
      <summary>リストに含まれる <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> オブジェクトのコレクションを返します。</summary>
      <returns>このリスト内の項目を含む <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> 配列。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListCollection">
      <summary>
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> オブジェクトのコレクションを表します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.#ctor">
      <summary>
        <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> クラスの新しいインスタンスを既定の設定で初期化します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.#ctor(System.ComponentModel.Design.DesignerActionList[])">
      <summary>指定したパネル項目を使用して、<see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="value">コレクションに読み込む <see cref="T:System.ComponentModel.Design.DesignerActionList" /> オブジェクトの配列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Add(System.ComponentModel.Design.DesignerActionList)">
      <summary>指定した <see cref="T:System.ComponentModel.Design.DesignerActionList" /> を現在のコレクションに追加します。</summary>
      <param name="value">追加する <see cref="T:System.ComponentModel.Design.DesignerActionList" />。</param>
      <returns>コレクションの内部リストで新しい要素を挿入する位置。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.AddRange(System.ComponentModel.Design.DesignerActionList[])">
      <summary>指定した <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 配列の要素を現在のコレクションの末尾に追加します。</summary>
      <param name="value">追加する <see cref="T:System.ComponentModel.Design.DesignerActionList" /> オブジェクトの配列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.AddRange(System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>指定した <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> の要素を現在のコレクションの末尾に追加します。</summary>
      <param name="value">追加する <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Contains(System.ComponentModel.Design.DesignerActionList)">
      <summary>コレクションに特定の値が格納されているかどうかを示します。</summary>
      <param name="value">検索対象の <see cref="T:System.ComponentModel.Design.DesignerActionList" />。</param>
      <returns>指定した値がコレクションに格納されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.CopyTo(System.ComponentModel.Design.DesignerActionList[],System.Int32)">
      <summary>指定した配列インデックスを開始位置として、現在のコレクションの要素を指定した配列にコピーします。</summary>
      <param name="array">現在のコレクションからコピーされる要素のコピー先である <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 型の 1 次元配列。 配列には、0 から始まるインデックスが設定されている必要があります。</param>
      <param name="index">コピーの開始位置とする <paramref name="array" /> のインデックス (0 から始まる)。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> が 0 未満です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> が多次元です。  

または - 
現在のコレクションの要素数が、<paramref name="index" /> からコピー先の配列の末尾までに格納できる数を超えています。</exception>
      <exception cref="T:System.InvalidCastException">現在のコレクションの要素をコピー先配列の型にキャストする際に問題が発生しました。ダウンキャストの失敗が原因と思われます。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.IndexOf(System.ComponentModel.Design.DesignerActionList)">
      <summary>コレクション内での指定した項目のインデックスを調べます。</summary>
      <param name="value">コレクション内で検索する <see cref="T:System.ComponentModel.Design.DesignerActionList" />。</param>
      <returns>内部リストに存在する場合は <paramref name="value" /> のインデックス。それ以外の場合は -1。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Insert(System.Int32,System.ComponentModel.Design.DesignerActionList)">
      <summary>コレクション内の指定した位置に、指定した <see cref="T:System.ComponentModel.Design.DesignerActionList" /> を挿入します。</summary>
      <param name="index">
        <paramref name="value" /> を挿入する位置の、0 から始まるインデックス。</param>
      <param name="value">コレクションに挿入する <see cref="T:System.ComponentModel.Design.DesignerActionList" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> が 0 未満か、現在のコレクションの要素数を超える値です。</exception>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListCollection.Item(System.Int32)">
      <summary>指定したインデックスにある要素を取得または設定します。</summary>
      <param name="index">要素の、0 から始まるインデックス。</param>
      <returns>指定されたインデックス位置にある <see cref="T:System.ComponentModel.Design.DesignerActionList" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.OnValidate(System.Object)">
      <summary>値を検証するときに、追加のカスタム プロセスを実行します。</summary>
      <param name="value">検証対象のオブジェクト。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Remove(System.ComponentModel.Design.DesignerActionList)">
      <summary>最初に見つかった特定の <see cref="T:System.ComponentModel.Design.DesignerActionList" /> をコレクションから削除します。</summary>
      <param name="value">現在のコレクションから削除する <see cref="T:System.ComponentModel.Design.DesignerActionList" />。</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs">
      <summary>
        <see cref="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.#ctor(System.Object,System.ComponentModel.Design.DesignerActionListsChangedType,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>
        <see cref="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="relatedObject">コレクションに関連付けられたオブジェクト。</param>
      <param name="changeType">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> がコレクションに追加されたのか、またはコレクションから削除されたのかを指定する値。</param>
      <param name="actionLists">アクションが適用された後のリスト要素のコレクション。</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.ActionLists">
      <summary>このイベントに関連付けられている <see cref="T:System.ComponentModel.Design.DesignerActionList" /> オブジェクトのコレクションを取得します。</summary>
      <returns>コレクションの現在の状態を表す <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.ChangeType">
      <summary>要素が <see cref="T:System.ComponentModel.Design.DesignerActionList" /> オブジェクトのコレクションに追加されたのか、またはコレクションから削除されたのかを示すフラグを取得します。</summary>
      <returns>変更の種類を示す <see cref="T:System.ComponentModel.Design.DesignerActionListsChangedType" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.RelatedObject">
      <summary>
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> オブジェクトのコレクションに関連付けられたオブジェクトを取得します。</summary>
      <returns>管理されている <see cref="T:System.Object" /> に関連付けられている <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListsChangedEventHandler">
      <summary>
        <see cref="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged" /> の <see cref="T:System.ComponentModel.Design.DesignerActionService" /> イベントを処理するメソッドを表します。 このクラスは継承できません。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベント データを格納している <see cref="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs" />。</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListsChangedType">
      <summary>
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> オブジェクトのコレクションで発生する変更の種類を指定します。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionListsChangedType.ActionListsAdded">
      <summary>1 つ以上の <see cref="T:System.ComponentModel.Design.DesignerActionList" /> オブジェクトがコレクションに追加されました。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionListsChangedType.ActionListsRemoved">
      <summary>1 つ以上の <see cref="T:System.ComponentModel.Design.DesignerActionList" /> オブジェクトがコレクションから削除されました。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionMethodItem">
      <summary>
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> から派生したクラスのメソッドに関連付けられているスマート タグ パネル項目を表します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String)">
      <summary>メソッド名と表示名を指定して、<see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="actionList">この項目に関連付けられたメソッドを持つ <see cref="T:System.ComponentModel.Design.DesignerActionList" />。</param>
      <param name="memberName">パネル項目を通じて呼び出す、<see cref="T:System.ComponentModel.Design.DesignerActionList" /> から派生したクラスでのメソッド名 (大文字と小文字は区別される)。</param>
      <param name="displayName">この項目のパネル テキスト。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.Boolean)">
      <summary>指定したメソッド名と表示名、および項目が他のユーザー インターフェイスのコンテキストで表示されるかどうかを示すフラグを使用して、<see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="actionList">この項目に関連付けられたメソッドを持つ <see cref="T:System.ComponentModel.Design.DesignerActionList" />。</param>
      <param name="memberName">パネル項目を通じて呼び出す、<see cref="T:System.ComponentModel.Design.DesignerActionList" /> から派生したクラスでのメソッド名 (大文字と小文字は区別される)。</param>
      <param name="displayName">この項目のパネル テキスト。</param>
      <param name="includeAsDesignerVerb">関連付けられたメソッドもデザイナー動詞として扱うかどうかを指定するフラグ。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String)">
      <summary>メソッド名、表示名、およびカテゴリ名を指定して、<see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="actionList">この項目に関連付けられたメソッドを持つ <see cref="T:System.ComponentModel.Design.DesignerActionList" />。</param>
      <param name="memberName">パネル項目を通じて呼び出す、<see cref="T:System.ComponentModel.Design.DesignerActionList" /> から派生したクラスでのメソッド名 (大文字と小文字は区別される)。</param>
      <param name="displayName">この項目のパネル テキスト。</param>
      <param name="category">パネル上の同様の項目をグループ化するために使用する、大文字と小文字が区別される <see cref="T:System.String" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.Boolean)">
      <summary>指定したメソッド名、表示名、およびカテゴリ名と、項目が他のユーザー インターフェイスのコンテキストで表示されるかどうかを示すフラグを使用して、<see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="actionList">この項目に関連付けられたメソッドを持つ <see cref="T:System.ComponentModel.Design.DesignerActionList" />。</param>
      <param name="memberName">パネル項目を通じて呼び出す、<see cref="T:System.ComponentModel.Design.DesignerActionList" /> から派生したクラスでのメソッド名 (大文字と小文字は区別される)。</param>
      <param name="displayName">この項目のパネル テキスト。</param>
      <param name="category">パネル上の同様の項目をグループ化するために使用する、大文字と小文字が区別される <see cref="T:System.String" />。</param>
      <param name="includeAsDesignerVerb">関連付けられたメソッドも、関連付けられたコンポーネントのデザイナー動詞として扱うかどうかを指定するフラグ。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.String)">
      <summary>指定したメソッド名とカテゴリ名、および表示テキストと説明テキストを使用して、<see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="actionList">この項目に関連付けられたメソッドを持つ <see cref="T:System.ComponentModel.Design.DesignerActionList" />。</param>
      <param name="memberName">パネル項目を通じて呼び出す、<see cref="T:System.ComponentModel.Design.DesignerActionList" /> から派生したクラスでのメソッド名 (大文字と小文字は区別される)。</param>
      <param name="displayName">この項目のパネル テキスト。</param>
      <param name="category">パネル上の同様の項目をグループ化するために使用する、大文字と小文字が区別される <see cref="T:System.String" />。</param>
      <param name="description">ツールヒントやステータス バーで使用する、この項目の補足テキスト。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.String,System.Boolean)">
      <summary>指定したメソッド名とカテゴリ名、表示テキストと説明テキスト、および項目が他のユーザー インターフェイスのコンテキストで表示されるかどうかを示すフラグを使用して、<see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="actionList">この項目に関連付けられたメソッドを持つ <see cref="T:System.ComponentModel.Design.DesignerActionList" />。</param>
      <param name="memberName">パネル項目を通じて呼び出す、<see cref="T:System.ComponentModel.Design.DesignerActionList" /> から派生したクラスでのメソッド名 (大文字と小文字は区別される)。</param>
      <param name="displayName">この項目のパネル テキスト。</param>
      <param name="category">パネル上の同様の項目をグループ化するために使用する、大文字と小文字が区別される <see cref="T:System.String" />。</param>
      <param name="description">ツールヒントやステータス バーで使用する、この項目の補足テキスト。</param>
      <param name="includeAsDesignerVerb">関連付けられたメソッドも、関連付けられたコンポーネントのデザイナー動詞として扱うかどうかを指定するフラグ。</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb">
      <summary>
        <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> が他のユーザー インターフェイスのコンテキストで表示されることを示す値を取得します。</summary>
      <returns>項目がショートカット メニューで使用される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.Invoke">
      <summary>
        <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> に関連付けられているメソッドをプログラムによって実行します。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.ComponentModel.Design.DesignerActionMethodItem.MemberName" /> で指定されたメソッドが見つかりません。</exception>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionMethodItem.MemberName">
      <summary>この <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> が関連付けられているメソッドの名前を取得します。</summary>
      <returns>関連付けられているメソッドの名前を格納する <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionMethodItem.RelatedComponent">
      <summary>現在のパネルに <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> オブジェクトを提供するコンポーネントを取得または設定します。</summary>
      <returns>項目を提供するコンポーネント。このコンポーネントには、項目を提供するデザイナーが関連付けられている必要があります。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionPropertyItem">
      <summary>
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> から派生したクラス内のプロパティに関連付けられているパネル項目を表します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String)">
      <summary>プロパティ名と表示名を指定して、<see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="memberName">このパネル項目に関連付けられているプロパティの、大文字と小文字が区別される名前。</param>
      <param name="displayName">この項目のパネル テキスト。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String,System.String)">
      <summary>指定したプロパティ名とカテゴリ名、および表示テキストを使用して、<see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="memberName">このパネル項目に関連付けられているプロパティの、大文字と小文字が区別される名前。</param>
      <param name="displayName">この項目のパネル テキスト。</param>
      <param name="category">パネル上の同様の項目をグループ化するために使用する、大文字と小文字が区別される <see cref="T:System.String" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String,System.String,System.String)">
      <summary>指定したプロパティ名とカテゴリ名、および表示テキストと説明テキストを使用して、<see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="memberName">このパネル項目に関連付けられているプロパティの、大文字と小文字が区別される名前。</param>
      <param name="displayName">この項目のパネル テキスト。</param>
      <param name="category">パネル上の同様の項目をグループ化するために使用する、大文字と小文字が区別される <see cref="T:System.String" />。</param>
      <param name="description">ツールヒントやステータス バーで使用する、この項目の補足テキスト。</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionPropertyItem.MemberName">
      <summary>この項目が関連付けられているプロパティの名前を取得します。</summary>
      <returns>関連付けられているプロパティの名前を格納する <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionPropertyItem.RelatedComponent">
      <summary>現在のパネルに項目を提供するコンポーネントを取得または設定します。</summary>
      <returns>項目を提供するコンポーネント。このコンポーネントには、<see cref="T:System.ComponentModel.Design.DesignerActionItem" /> オブジェクトを提供する、関連付けられたデザイナーが必要です。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionService">
      <summary>コンポーネントの <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> オブジェクトのコレクションを管理するデザイン時サービスを確立します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.#ctor(System.IServiceProvider)">
      <summary>
        <see cref="T:System.ComponentModel.Design.DesignerActionService" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="serviceProvider">現在のデザイン時環境のサービス プロバイダー。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)">
      <summary>管理されているスマート タグの現在のコレクションに、<see cref="T:System.ComponentModel.Design.DesignerActionList" /> を追加します。</summary>
      <param name="comp">スマート タグを関連付ける <see cref="T:System.ComponentModel.IComponent" />。</param>
      <param name="actionList">追加した新しいスマート タグ項目を格納する <see cref="T:System.ComponentModel.Design.DesignerActionList" />。</param>
      <exception cref="T:System.ArgumentNullException">一方または両方のパラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>管理されているスマート タグの現在のコレクションに、<see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> を追加します。</summary>
      <param name="comp">スマート タグを関連付ける <see cref="T:System.ComponentModel.IComponent" />。</param>
      <param name="designerActionListCollection">追加した新しいスマート タグ項目を格納する <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />。</param>
      <exception cref="T:System.ArgumentNullException">一方または両方のパラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Clear">
      <summary>すべてのコンポーネントを管理対象から外し、プッシュ モデルのすべてのスマート タグ リストを消去します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Contains(System.ComponentModel.IComponent)">
      <summary>現在のスマート タグ サービスが、指定したコンポーネントのアクション リストを管理しているかどうかを判断します。</summary>
      <param name="comp">検索対象の <see cref="T:System.ComponentModel.IComponent" />。</param>
      <returns>コンポーネントが現在のサービスによって管理されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="comp" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged">
      <summary>コンポーネントの <see cref="T:System.ComponentModel.Design.DesignerActionList" /> が削除または追加されたときに発生します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Dispose">
      <summary>
        <see cref="T:System.ComponentModel.Design.DesignerActionService" /> クラスによって使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Dispose(System.Boolean)">
      <summary>
        <see cref="T:System.ComponentModel.Design.DesignerActionService" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent)">
      <summary>コンポーネントに関連付けられているスマート タグ項目リストのコレクションを返します。</summary>
      <param name="component">スマート タグが関連付けられているコンポーネント。</param>
      <returns>指定したコンポーネントのスマート タグのコレクション。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="comp" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent,System.Windows.Forms.Design.ComponentActionsType)">
      <param name="component" />
      <param name="type" />
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>コンポーネントに関連付けられているプル モデルのスマート タグを取得します。</summary>
      <param name="component">スマート タグが関連付けられているコンポーネント。</param>
      <param name="actionLists">関連付けられているスマート タグの追加先となるコレクション。</param>
      <exception cref="T:System.ArgumentNullException">一方または両方のパラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>コンポーネントに関連付けられているプッシュ モデルのスマート タグを取得します。</summary>
      <param name="component">スマート タグが関連付けられているコンポーネント。</param>
      <param name="actionLists">関連付けられているスマート タグの追加先となるコレクション。</param>
      <exception cref="T:System.ArgumentNullException">一方または両方のパラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.Design.DesignerActionList)">
      <summary>現在のサービスによって管理されているすべてのコンポーネントから、指定したスマート タグ リストを削除します。</summary>
      <param name="actionList">削除するスマート タグのリスト。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="actionList" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent)">
      <summary>指定したコンポーネントに関連付けられているすべてのスマート タグ リストを削除します。</summary>
      <param name="comp">スマート タグの関連付けを解除するコンポーネント。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="comp" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)">
      <summary>指定したコンポーネントから、指定したスマート タグ リストを削除します。</summary>
      <param name="comp">スマート タグの関連付けを解除するコンポーネント。</param>
      <param name="actionList">削除するスマート タグ リスト。</param>
      <exception cref="T:System.ArgumentNullException">一方または両方のパラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionTextItem">
      <summary>スマート タグ パネルの静的テキスト項目を表します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionTextItem.#ctor(System.String,System.String)">
      <summary>
        <see cref="T:System.ComponentModel.Design.DesignerActionTextItem" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="displayName">この項目のパネル テキスト。</param>
      <param name="category">パネル上の同様のアイテムをグループ化するために使用するカテゴリ。</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIService">
      <summary>スマート タグ パネルのユーザー インターフェイス (UI) を管理します。 このクラスは継承できません。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange">
      <summary>スマート タグ パネルの表示または非表示が要求された場合に発生します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.Dispose">
      <summary>
        <see cref="T:System.ComponentModel.Design.DesignerActionUIService" /> クラスによって使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.HideUI(System.ComponentModel.IComponent)">
      <summary>コンポーネントのスマート タグ パネルを非表示にします。</summary>
      <param name="component">スマート タグ パネルを非表示にするコンポーネント。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.Refresh(System.ComponentModel.IComponent)">
      <summary>スマート タグ パネルを更新します。</summary>
      <param name="component">更新する <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.ShouldAutoShow(System.ComponentModel.IComponent)">
      <summary>スマート タグ パネルを自動的に表示するかどうかを示します。</summary>
      <param name="component">自動的に表示する <see cref="T:System.ComponentModel.IComponent" />。</param>
      <returns>スマート タグ パネルを自動的に表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.ShowUI(System.ComponentModel.IComponent)">
      <summary>コンポーネントのスマート タグ パネルを表示します。</summary>
      <param name="component">スマート タグ パネルを表示するコンポーネント。</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs">
      <summary>
        <see cref="E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.#ctor(System.Object,System.ComponentModel.Design.DesignerActionUIStateChangeType)">
      <summary>
        <see cref="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="relatedObject">パネルに関連付けられたオブジェクト。</param>
      <param name="changeType">パネルが表示されているかまたは非表示になっているかを指定する値。</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.ChangeType">
      <summary>スマート タグ パネルが表示されているかまたは非表示になっているかを示すフラグを取得します。</summary>
      <returns>パネルの状態を示す <see cref="T:System.ComponentModel.Design.DesignerActionUIStateChangeType" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.RelatedObject">
      <summary>スマート タグ パネルに関連付けられたオブジェクトを取得します。</summary>
      <returns>スマート タグ パネルに関連付けられた <see cref="T:System.Object" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventHandler">
      <summary>
        <see cref="E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange" /> の <see cref="T:System.ComponentModel.Design.DesignerActionUIService" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントの発生元の <see cref="T:System.Object" />。</param>
      <param name="e">イベント固有の情報。</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIStateChangeType">
      <summary>スマート タグ パネルの表示状態を指定します。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionUIStateChangeType.Hide">
      <summary>スマート タグ パネルが非表示にされます。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionUIStateChangeType.Refresh">
      <summary>スマート タグ パネルが再表示されます。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionUIStateChangeType.Show">
      <summary>スマート タグ パネルが表示されます。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerCommandSet">
      <summary>スマート タグ機能またはデザイナー動詞機能を提供する、<see cref="T:System.ComponentModel.Design.ComponentDesigner" /> から派生していないデザイン時ツールの基本クラスを表します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerCommandSet.#ctor">
      <summary>
        <see cref="T:System.ComponentModel.Design.DesignerCommandSet" /> クラスのインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerCommandSet.ActionLists">
      <summary>デザインされるコンポーネントに関連付けられたすべてのスマート タグのコレクションを取得します。</summary>
      <returns>デザインされるコンポーネントに関連付けられたスマート タグを格納する <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerCommandSet.GetCommands(System.String)">
      <summary>コマンド オブジェクトのコレクションを返します。</summary>
      <param name="name">
        <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> または <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> を示す、返すコレクションの型。</param>
      <returns>指定された型 (<see cref="T:System.ComponentModel.Design.DesignerActionList" /> または <see cref="T:System.ComponentModel.Design.DesignerVerb" />) のコマンド オブジェクトを格納するコレクション。 基本実装では、常に <see langword="null" /> を返します。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerCommandSet.Verbs">
      <summary>デザインされるコンポーネントに関連付けられたすべてのデザイナー動詞のコレクションを取得します。</summary>
      <returns>デザインされるコンポーネントに関連付けられたデザイナー動詞を格納する <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurface">
      <summary>コンポーネントをデザインするためのユーザー インターフェイスを提供します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor">
      <summary>
        <see cref="T:System.ComponentModel.Design.DesignSurface" /> クラスの新しいインスタンスを初期化します。</summary>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.ComponentModel.Design.DesignSurface" /> にアタッチした <see cref="T:System.ComponentModel.Design.IDesignerHost" /> は破棄されています。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider)">
      <summary>
        <see cref="T:System.ComponentModel.Design.DesignSurface" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="parentProvider">親サービス プロバイダー。サービスの解決に使用する親が存在しない場合は <see langword="null" />。</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.ComponentModel.Design.DesignSurface" /> にアタッチした <see cref="T:System.ComponentModel.Design.IDesignerHost" /> は破棄されています。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)">
      <summary>
        <see cref="T:System.ComponentModel.Design.DesignSurface" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="parentProvider">親サービス プロバイダー。サービスの解決に使用する親が存在しない場合は <see langword="null" />。</param>
      <param name="rootComponentType">作成するルート コンポーネントの型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rootComponent" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.ComponentModel.Design.DesignSurface" /> にアタッチした <see cref="T:System.ComponentModel.Design.IDesignerHost" /> は破棄されています。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor(System.Type)">
      <summary>
        <see cref="T:System.ComponentModel.Design.DesignSurface" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="rootComponentType">作成するルート コンポーネントの型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rootComponent" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.ComponentModel.Design.DesignSurface" /> にアタッチした <see cref="T:System.ComponentModel.Design.IDesignerHost" /> は破棄されています。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)">
      <summary>指定したデザイナー ローダーを使用して、読み込みプロセスを開始します。</summary>
      <param name="loader">デザイナーの読み込みに使用するデザイナー ローダー。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="loader" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.ComponentModel.Design.DesignSurface" /> にアタッチした <see cref="T:System.ComponentModel.Design.IDesignerHost" /> は破棄されています。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)">
      <summary>読み込みプロセスを開始します。</summary>
      <param name="rootComponentType">デザイン モードで作成するコンポーネントの型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rootComponentType" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.ComponentModel.Design.DesignSurface" /> にアタッチした <see cref="T:System.ComponentModel.Design.IDesignerHost" /> は破棄されています。</exception>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.ComponentContainer">
      <summary>デザイン サーフェイス内の <see cref="T:System.ComponentModel.IContainer" /> 実装を取得します。</summary>
      <returns>デザイン サーフェイス内の <see cref="T:System.ComponentModel.IContainer" /> 実装。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.ComponentModel.Design.DesignSurface" /> にアタッチした <see cref="T:System.ComponentModel.Design.IDesignerHost" /> は破棄されています。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateComponent(System.Type)">
      <summary>コンポーネントのインスタンスを作成します。</summary>
      <param name="componentType">作成するコンポーネントの型。</param>
      <returns>新規作成したコンポーネント。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="componentType" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.ComponentModel.Design.DesignSurface" /> にアタッチした <see cref="T:System.ComponentModel.Design.IDesignerHost" /> は破棄されています。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
      <summary>コンテナーにコンポーネントが追加されたときに、デザイナーを作成します。</summary>
      <param name="component">デザイナーを作成する必要のあるコンポーネント。</param>
      <param name="rootDesigner">ルート デザイナーを作成する場合は <see langword="true" />。通常のデザイナーを作成する場合は <see langword="false" />。</param>
      <returns>要求したデザイナーのインスタンス。一致するデザイナーが見つからない場合は <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.ComponentModel.Design.DesignSurface" /> にアタッチした <see cref="T:System.ComponentModel.Design.IDesignerHost" /> は破棄されています。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateInstance(System.Type)">
      <summary>指定された型のインスタンスを作成します。</summary>
      <param name="type">作成する型。</param>
      <returns>新しく作成されたオブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.ComponentModel.Design.DesignSurface" /> にアタッチした <see cref="T:System.ComponentModel.Design.IDesignerHost" /> は破棄されています。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent)">
      <summary>コントロールまたはコンポーネントの入れ子に適したコンテナーを作成します。</summary>
      <param name="owningComponent">入れ子になったコンテナーを管理するコンポーネント。</param>
      <returns>入れ子になったコンテナー。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owningComponent" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.ComponentModel.Design.DesignSurface" /> にアタッチした <see cref="T:System.ComponentModel.Design.IDesignerHost" /> は破棄されています。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)">
      <summary>コントロールまたはコンポーネントの入れ子に適したコンテナーを作成します。</summary>
      <param name="owningComponent">入れ子になったコンテナーを管理するコンポーネント。</param>
      <param name="containerName">入れ子になったコンテナーの追加の名前。</param>
      <returns>入れ子になったコンテナー。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owningComponent" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.ComponentModel.Design.DesignSurface" /> にアタッチした <see cref="T:System.ComponentModel.Design.IDesignerHost" /> は破棄されています。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.Dispose">
      <summary>
        <see cref="T:System.ComponentModel.Design.DesignSurface" /> で使用したリソースを解放します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
      <summary>
        <see cref="T:System.ComponentModel.Design.DesignSurface" /> で使用したリソースを解放します。</summary>
      <param name="disposing">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Disposed">
      <summary>デザイン サーフェイスが破棄されたときに発生します。</summary>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.DtelLoading">
      <summary>デザイン時エラー一覧が読み込まれているかどうかを示す値を取得します。</summary>
      <returns>
        <see langword="true" />デザイン時エラー一覧が読み込まれている場合は。それ以外<see langword="false" />の場合は。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.Flush">
      <summary>デザイン サーフェイスへの変更をシリアル化します。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Flushed">
      <summary>
        <see cref="M:System.ComponentModel.Design.DesignSurface.Flush" /> の <see cref="T:System.ComponentModel.Design.DesignSurface" /> メソッドが呼び出されたときに発生します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.GetService(System.Type)">
      <summary>サービス コンテナーからサービスを取得します。</summary>
      <param name="serviceType">取得するサービスの型。</param>
      <returns>
        <paramref name="serviceType" /> を実装するオブジェクト、または serviceType の派生クラスであるオブジェクト。サービス コンテナーにサービスが存在しない場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.IsLoaded">
      <summary>デザイン サーフェイスが現在読み込まれているかどうかを示す値を取得します。</summary>
      <returns>デザイン サーフェイスが現在読み込まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Loaded">
      <summary>デザイナーの読み込みが完了したときに発生します。</summary>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.LoadErrors">
      <summary>読み込みエラーのコレクションまたは void コレクションを返します。</summary>
      <returns>読み込みエラーの <see cref="T:System.Collections.ICollection" />。</returns>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Loading">
      <summary>デザイナーの読み込みを開始する直前に発生します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnLoaded(System.ComponentModel.Design.LoadedEventArgs)">
      <summary>
        <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" /> イベントを発生させます。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.ComponentModel.Design.LoadedEventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnLoading(System.EventArgs)">
      <summary>
        <see cref="E:System.ComponentModel.Design.DesignSurface.Loading" /> イベントを発生させます。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnUnloaded(System.EventArgs)">
      <summary>
        <see cref="E:System.ComponentModel.Design.DesignSurface.Unloaded" /> イベントを発生させます。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnUnloading(System.EventArgs)">
      <summary>
        <see cref="E:System.ComponentModel.Design.DesignSurface.Unloading" /> イベントを発生させます。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnViewActivate(System.EventArgs)">
      <summary>
        <see cref="E:System.ComponentModel.Design.DesignSurface.ViewActivated" /> イベントを発生させます。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.ServiceContainer">
      <summary>サービス コンテナーを取得します。</summary>
      <returns>デザイン サーフェイスに含まれるデザイナーにすべてのサービスを提供するサービス コンテナー。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.ComponentModel.Design.DesignSurface" /> にアタッチした <see cref="T:System.ComponentModel.Design.IDesignerHost" /> は破棄されています。</exception>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Unloaded">
      <summary>デザイナーのアンロードを終了したときに発生します。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Unloading">
      <summary>デザイナーのアンロードを開始する直前に発生します。</summary>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.View">
      <summary>ルート デザイナーのビューを取得します。</summary>
      <returns>ルート デザイナーのビュー。</returns>
      <exception cref="T:System.InvalidOperationException">デザイン サーフェイスが読み込まれていないか、デザイナー ローダーがルート デザイナーをまだ作成していません。または、デザイン サーフェイスの読み込みは終了しましたが、読み込みに失敗しました。 詳細については、<see cref="P:System.Exception.InnerException" /> のトピックを参照してください。</exception>
      <exception cref="T:System.NotSupportedException">デザイナーは読み込まれましたが、このデザイン サーフェイスと互換性のあるビューを提供しません。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.ComponentModel.Design.DesignSurface" /> にアタッチした <see cref="T:System.ComponentModel.Design.IDesignerHost" /> は破棄されています。</exception>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.ViewActivated">
      <summary>
        <see cref="M:System.ComponentModel.Design.IDesignerHost.Activate" /> メソッドが <see cref="T:System.ComponentModel.Design.IDesignerHost" /> に対して呼び出されたときに発生します。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.ExceptionCollection">
      <summary>例外のコレクションを表します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ExceptionCollection.#ctor(System.Collections.ArrayList)">
      <summary>
        <see cref="T:System.ComponentModel.Design.ExceptionCollection" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="exceptions">コレクションに読み込むオブジェクトを格納している <see cref="T:System.Exception" /> 型の配列。</param>
    </member>
    <member name="P:System.ComponentModel.Design.ExceptionCollection.Exceptions">
      <summary>例外のコレクションを表す <see cref="T:System.Exception" /> オブジェクトの配列を取得します。</summary>
      <returns>例外のコレクションを表す <see cref="T:System.Exception" /> 配列。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ExceptionCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> に、<see cref="T:System.ComponentModel.Design.ExceptionCollection" /> をシリアル化するために必要なデータを設定します。</summary>
      <param name="info">データの読み込み先となる <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context">このシリアル化のシリアル化先 (<see cref="T:System.Runtime.Serialization.StreamingContext" /> を参照)。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> は <see langword="null" />です。</exception>
    </member>
    <member name="T:System.ComponentModel.Design.IMultitargetHelperService">
      <summary>デザイン時環境のマルチ ターゲットの型名解決サービスを定義します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IMultitargetHelperService.GetAssemblyQualifiedName(System.Type)">
      <summary>ターゲット フレームワークの型をアセンブリ修飾名に解決します。</summary>
      <param name="type">解決する型。</param>
      <returns>ターゲット フレームワークにおける <paramref name="type" /> の <see cref="P:System.Type.AssemblyQualifiedName" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.InheritanceService">
      <summary>継承されたコンポーネントを識別するための一連のメソッドを提供します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.#ctor">
      <summary>
        <see cref="T:System.ComponentModel.Design.InheritanceService" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.AddInheritedComponents(System.ComponentModel.IComponent,System.ComponentModel.IContainer)">
      <summary>指定したコンポーネントによって継承されたコンポーネントを <see cref="T:System.ComponentModel.Design.InheritanceService" /> に追加します。</summary>
      <param name="component">指定したコンテナーに追加する継承されたコンポーネントの検索対象となるコンポーネント。</param>
      <param name="container">継承されたコンポーネントの追加対象となるコンテナー。</param>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.AddInheritedComponents(System.Type,System.ComponentModel.IComponent,System.ComponentModel.IContainer)">
      <summary>指定したコンポーネントによって継承された指定した型のコンポーネントを <see cref="T:System.ComponentModel.Design.InheritanceService" /> に追加します。</summary>
      <param name="type">検索対象となる基本型。</param>
      <param name="component">指定したコンテナーに追加する継承されたコンポーネントの検索対象となるコンポーネント。</param>
      <param name="container">継承されたコンポーネントの追加対象となるコンテナー。</param>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.Dispose">
      <summary>
        <see cref="T:System.ComponentModel.Design.InheritanceService" /> によって使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.Dispose(System.Boolean)">
      <summary>
        <see cref="T:System.ComponentModel.Design.InheritanceService" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.GetInheritanceAttribute(System.ComponentModel.IComponent)">
      <summary>指定したコンポーネントの継承属性を取得します。</summary>
      <param name="component">継承属性の取得対象となるコンポーネント。</param>
      <returns>このコンポーネントの作成元の継承レベルを記述する <see cref="T:System.ComponentModel.InheritanceAttribute" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.IgnoreInheritedMember(System.Reflection.MemberInfo,System.ComponentModel.IComponent)">
      <summary>指定したメンバーを無視するかどうかを示します。</summary>
      <param name="member">確認対象となるメンバー。 このメンバーは、<see cref="T:System.Reflection.FieldInfo" /> または <see cref="T:System.Reflection.MethodInfo" /> のいずれかです。</param>
      <param name="component">このメンバーのバインド先となるコンポーネント インスタンス。</param>
      <returns>指定したメンバーを、継承されたコンポーネントのセットに含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.LoadedEventArgs">
      <summary>
        <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" /> イベントのデータを提供します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.LoadedEventArgs.#ctor(System.Boolean,System.Collections.ICollection)">
      <summary>
        <see cref="T:System.ComponentModel.Design.LoadedEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="succeeded">デザイナーの読み込みが正常に実行された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="errors">デザイナーが読み込みを実行している最中に発生したエラーのコレクション。</param>
    </member>
    <member name="P:System.ComponentModel.Design.LoadedEventArgs.Errors">
      <summary>デザイナーが読み込みを実行している最中に発生したエラーのコレクションを取得します。</summary>
      <returns>デザイナーが読み込みを実行している最中に発生したエラーのコレクション。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.LoadedEventArgs.HasSucceeded">
      <summary>デザイナーの読み込みが正常に実行されたかどうかを示す値を取得します。</summary>
      <returns>デザイナーの読み込みが正常に実行された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.LoadedEventHandler">
      <summary>
        <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" /> クラスの <see cref="T:System.ComponentModel.Design.DesignSurface" /> イベントを処理するメソッドを表します。 このクラスは継承できません。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベント データを格納している <see cref="T:System.ComponentModel.Design.LoadedEventArgs" />。</param>
    </member>
    <member name="T:System.ComponentModel.Design.ProjectTargetFrameworkAttribute">
      <summary>プロジェクトのターゲット フレームワークを指定します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ProjectTargetFrameworkAttribute.#ctor(System.String)">
      <summary>
        <see cref="T:System.ComponentModel.Design.ProjectTargetFrameworkAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="targetFrameworkMoniker">プロジェクトのターゲット フレームワーク。</param>
    </member>
    <member name="P:System.ComponentModel.Design.ProjectTargetFrameworkAttribute.TargetFrameworkMoniker">
      <summary>プロジェクトのターゲット フレームワークを取得します。</summary>
      <returns>プロジェクトのターゲット フレームワーク。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService">
      <summary>コンポーネントのセットをシリアル化ストアにシリアル化します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.#ctor">
      <summary>
        <see cref="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.#ctor(System.IServiceProvider)">
      <summary>サービスを解決するサービス プロバイダーを指定して、<see cref="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="provider">サービスの解決に使用する <see cref="T:System.IServiceProvider" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore">
      <summary>新しい <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> を作成します。</summary>
      <returns>新しいシリアル化ストア。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore)">
      <summary>指定したストアを逆シリアル化し、オブジェクトのコレクションを生成します。</summary>
      <param name="store">オブジェクトの逆シリアル化元である <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</param>
      <returns>逆シリアル化されたコンポーネントのコレクション。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> は、サポートされている型のシリアル化ストアではありません。 <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" /> によって返されたストアを使用してください。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)">
      <summary>指定したストアを逆シリアル化し、逆シリアル化された <see cref="T:System.ComponentModel.IContainer" /> オブジェクトを指定した <see cref="T:System.ComponentModel.IComponent" /> に追加します。</summary>
      <param name="store">オブジェクトの逆シリアル化元である <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</param>
      <param name="container">
        <see cref="T:System.ComponentModel.IComponent" /> オブジェクトの追加先となるコンテナー。</param>
      <returns>逆シリアル化されたコンポーネントのコレクション。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> または <paramref name="container" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> は、サポートされている型のシリアル化ストアではありません。 <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" /> によって返されたストアを使用してください。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean,System.Boolean)">
      <summary>指定した <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> を指定したコンテナーに逆シリアル化します。オプションで、既定のプロパティ値を適用することもできます。</summary>
      <param name="store">オブジェクトの逆シリアル化元である <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</param>
      <param name="container">データの適用先であるオブジェクトのコンテナー。</param>
      <param name="validateRecycledTypes">再利用される型を検証する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="applyDefaults">既定のプロパティ値を適用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> または <paramref name="container" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> は、サポートされている型のシリアル化ストアではありません。 <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" /> によって返されたストアを使用してください。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.LoadStore(System.IO.Stream)">
      <summary>指定したストリームから <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> を読み込みます。</summary>
      <param name="stream">
        <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> の読み取り元のストリーム。</param>
      <returns>読み込まれた <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
        <paramref name="stream" /> はシークをサポートしていますが、長さが 0 です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)">
      <summary>指定したオブジェクトを指定した <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> にシリアル化します。</summary>
      <param name="store">
        <paramref name="value" /> をシリアル化した結果を格納する <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</param>
      <param name="value">シリアル化するオブジェクト。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> または <paramref name="value" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> が閉じているか、または <paramref name="store" /> がサポートされている型のシリアル化ストアではありません。 <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" /> によって返されたストアを使用してください。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.SerializeAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)">
      <summary>既定のプロパティ値から成る、指定したオブジェクトをシリアル化します。</summary>
      <param name="store">
        <paramref name="value" /> をシリアル化した結果を格納する <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</param>
      <param name="value">シリアル化するオブジェクト。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> または <paramref name="value" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> が閉じているか、または <paramref name="store" /> がサポートされている型のシリアル化ストアではありません。 <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" /> によって返されたストアを使用してください。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>指定されたオブジェクトの指定されたメンバーをシリアル化します。</summary>
      <param name="store">
        <paramref name="member" /> をシリアル化した結果を格納する <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</param>
      <param name="owningObject">
        <paramref name="member" /> を所有するオブジェクト。</param>
      <param name="member">指定したメンバー。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" />、<paramref name="owningObject" />、または <paramref name="member" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> が閉じられているか、<paramref name="store" /> がサポートされている型のシリアル化ストアではありません。 <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" /> によって返されたストアを使用してください。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>指定したオブジェクトの指定したメンバーをシリアル化しますが、既定のプロパティ値を含むメンバーもシリアル化します。</summary>
      <param name="store">
        <paramref name="member" /> をシリアル化した結果を格納する <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</param>
      <param name="owningObject">
        <paramref name="member" /> を所有するオブジェクト。</param>
      <param name="member">指定したメンバー。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" />、<paramref name="owningObject" />、または <paramref name="member" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> が閉じられているか、<paramref name="store" /> がサポートされている型のシリアル化ストアではありません。 <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" /> によって返されたストアを使用してください。</exception>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomSerializer">
      <summary>オブジェクト グラフを一連の CodeDOM ステートメントにシリアル化します。 このクラスは、シリアライザーの抽象基本クラスを提供します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.#ctor">
      <summary>
        <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>指定したシリアル化された CodeDOM オブジェクトを逆シリアル化してオブジェクトに戻します。</summary>
      <param name="manager">逆シリアル化処理中に使用されるシリアル化マネージャー インターフェイス。</param>
      <param name="codeObject">逆シリアル化の対象となる、シリアル化された CodeDOM オブジェクト。</param>
      <returns>逆シリアル化された CodeDOM オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> または <paramref name="codeObject" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="codeObject" /> はサポートされないコード要素です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.DeserializeStatementToInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)">
      <summary>1 つのステートメントを逆シリアル化します。</summary>
      <param name="manager">シリアル化に使用するシリアル化マネージャー。</param>
      <param name="statement">逆シリアル化するステートメント。</param>
      <returns>
        <paramref name="statement" /> の逆シリアル化の結果のオブジェクト インスタンス。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.GetTargetComponentName(System.CodeDom.CodeStatement,System.CodeDom.CodeExpression,System.Type)">
      <summary>特定のステートメントが属する必要のあるステートメント グループを決定します。</summary>
      <param name="statement">グループを決定する対象の <see cref="T:System.CodeDom.CodeStatement" />。</param>
      <param name="expression">
        <paramref name="statement" /> が削減された対象の <see cref="T:System.CodeDom.CodeExpression" />。</param>
      <param name="targetType">
        <see cref="T:System.Type" /> の <paramref name="statement" />。</param>
      <returns>
        <paramref name="statement" /> をグループ化する必要がある対象のコンポーネントの名前。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>特定のオブジェクトをシリアル化して、CodeDOM オブジェクトを生成します。</summary>
      <param name="manager">シリアル化時に使用するシリアル化マネージャー。</param>
      <param name="value">シリアル化するオブジェクト。</param>
      <returns>シリアル化されたオブジェクトを表す CodeDOM オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> または <paramref name="value" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeAbsolute(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>既定値を考慮して特定のオブジェクトをシリアル化します。</summary>
      <param name="manager">シリアル化に使用するシリアル化マネージャー。</param>
      <param name="value">シリアル化するオブジェクト。</param>
      <returns>
        <paramref name="value" /> を表す CodeDom オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> または <paramref name="value" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeMember(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>指定されたオブジェクトの指定されたメンバーをシリアル化します。</summary>
      <param name="manager">シリアル化に使用するシリアル化マネージャー。</param>
      <param name="owningObject">
        <paramref name="member" /> がアタッチされているオブジェクト。</param>
      <param name="member">シリアル化するメンバー。</param>
      <returns>
        <paramref name="member" /> のシリアル化された状態を表す <see cref="T:System.CodeDom.CodeStatementCollection" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />、<paramref name="owningObject" />、または <paramref name="member" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="member" /> がシリアル化可能な型ではありません。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>既定値を考慮して、指定されたメンバーをシリアル化します。</summary>
      <param name="manager">シリアル化に使用するシリアル化マネージャー。</param>
      <param name="owningObject">
        <paramref name="member" /> がアタッチされているオブジェクト。</param>
      <param name="member">シリアル化するメンバー。</param>
      <returns>
        <paramref name="member" /> を表す CodeDom オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />、<paramref name="owningObject" />、または <paramref name="member" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="member" /> がシリアル化可能な型ではありません。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeToReferenceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>指定した値を CodeDOM 式にシリアル化します。</summary>
      <param name="manager">シリアル化時に使用するシリアル化マネージャー。</param>
      <param name="value">シリアル化するオブジェクト。</param>
      <returns>シリアル化された値。 このメソッドは、指定した値の参照式を取得できない場合、または値をシリアル化できない場合に <see langword="null" /> を返します。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomSerializerBase">
      <summary>
        <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> の各クラスの基本クラスを提供します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
      <summary>指定した式をメモリ内オブジェクトに逆シリアル化します。</summary>
      <param name="manager">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="name">式の結果として作成されるオブジェクトの名前。 オブジェクトに名前を付ける必要がない場合は、<see langword="null" /> でもかまいません。</param>
      <param name="expression">解釈する <see cref="T:System.CodeDom.CodeExpression" />。</param>
      <returns>
        <paramref name="expression" /> の解釈の結果として作成されたオブジェクト。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)">
      <summary>指定した型のインスタンスを返します。</summary>
      <param name="manager">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="type">返されるインスタンスの <see cref="T:System.Type" />。</param>
      <param name="parameters">
        <paramref name="type" /> のコンストラクターに渡すパラメーター。</param>
      <param name="name">逆シリアル化されたオブジェクトの名前。</param>
      <param name="addToContainer">このオブジェクトをデザイン コンテナーに追加する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 この値を有効にするには、オブジェクトが <see cref="T:System.ComponentModel.IComponent" /> を実装していることが必要です。</param>
      <returns>
        <paramref name="type" /> のインスタンス。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> または <paramref name="type" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
      <summary>インバリアント カルチャのリソース バンドルから、指定したオブジェクトのプロパティを逆シリアル化します。</summary>
      <param name="manager">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value">プロパティを逆シリアル化する対象となるオブジェクト。</param>
      <param name="filter">逆シリアル化するプロパティをフィルター処理する <see cref="T:System.Attribute" /> 配列。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)">
      <summary>CodeDOM ステートメントを解釈して実行することにより、ステートメントを逆シリアル化します。</summary>
      <param name="manager">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="statement">逆シリアル化を行う対象の <see cref="T:System.CodeDom.CodeStatement" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
      <summary>プロジェクトのターゲット バージョンの .NET Framework で定義されている属性のコレクションを取得します。</summary>
      <param name="manager">シリアル化マネージャー。</param>
      <param name="type">対象の型。</param>
      <returns>プロジェクトのターゲット バージョンの .NET Framework で定義されている属性のコレクション。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>プロジェクトのターゲット バージョンの .NET Framework で定義されている属性のコレクションを取得します。</summary>
      <param name="manager">シリアル化マネージャー。</param>
      <param name="instance">対象の型のオブジェクト。</param>
      <returns>プロジェクトのターゲット バージョンの .NET Framework で定義されている属性のコレクション。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
      <summary>プロジェクトのターゲット バージョンの .NET Framework で定義されているイベントのコレクションを取得します。</summary>
      <param name="manager">シリアル化マネージャー。</param>
      <param name="instance">対象の型のオブジェクト。</param>
      <param name="attributes">ターゲット バージョンの .NET Framework に渡す属性の配列。</param>
      <returns>プロジェクトのターゲット バージョンの .NET Framework で定義されているイベントのコレクション。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>指定したオブジェクトの式を返します。</summary>
      <param name="manager">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value">式の取得対象となるオブジェクト。</param>
      <returns>
        <paramref name="value" /> を表す <see cref="T:System.CodeDom.CodeExpression" />。<paramref name="value" /> の既存の式が存在しない場合は <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
      <summary>プロジェクトのターゲット バージョンの .NET Framework で定義されているプロパティのコレクションを取得します。</summary>
      <param name="manager">シリアル化マネージャー。</param>
      <param name="instance">対象の型のオブジェクト。</param>
      <param name="attributes">ターゲット バージョンの .NET Framework に渡す属性の配列。</param>
      <returns>プロジェクトのターゲット バージョンの .NET Framework で定義されているプロパティのコレクション。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
      <summary>型のメタデータから生成されたリフレクション型を取得します。</summary>
      <param name="manager">シリアル化マネージャー。</param>
      <param name="type">使用するメタデータを持つ型。</param>
      <returns>
        <paramref name="type" /> のメタデータから生成されたリフレクション型。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>オブジェクトのメタデータから生成されたリフレクション型を取得します。</summary>
      <param name="manager">シリアル化マネージャー。</param>
      <param name="instance">使用するメタデータを持つオブジェクト。</param>
      <returns>
        <paramref name="object" /> のメタデータから生成されたリフレクション型。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>指定したオブジェクト値のシリアライザーを検索します。</summary>
      <param name="manager">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value">取得するシリアライザーを指定するオブジェクト。</param>
      <returns>
        <paramref name="value" /> に適合する <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> または <paramref name="value" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
      <summary>指定した型のシリアライザーを検索します。</summary>
      <param name="manager">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="valueType">取得するシリアライザーを指定する <see cref="T:System.Type" />。</param>
      <returns>
        <paramref name="valueType" /> に適合する <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> または <paramref name="valueType" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider(System.IServiceProvider,System.Object)">
      <summary>型のフィルター処理に使用できる、ターゲット バージョンの .NET Framework を認識する <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> を取得します。</summary>
      <param name="provider">型説明のプロバイダー サービス。</param>
      <param name="instance">
        <paramref name="provider" /> が <see langword="null" /> の場合に、型説明のプロバイダー サービスの派生元にすることができるオブジェクト。</param>
      <returns>.NET Framework を認識する型説明のプロバイダー。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>指定したオブジェクトの一意の名前を返します。</summary>
      <param name="manager">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value">名前の取得対象となるオブジェクト。</param>
      <returns>
        <paramref name="value" /> の一意の名前。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> または <paramref name="value" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>指定したオブジェクトがシリアル化されているかどうかを示す値を返します。</summary>
      <param name="manager">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value">以前のシリアル化のテスト対象となるオブジェクト。</param>
      <returns>
        <paramref name="value" /> がシリアル化されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> または <paramref name="value" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
      <summary>指定したオブジェクトがシリアル化されているかどうかを示す値を返します。オプションで、あらかじめ設定された式を考慮することもできます。</summary>
      <param name="manager">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value">以前のシリアル化のテスト対象となるオブジェクト。</param>
      <param name="honorPreset">あらかじめ設定された式を含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <returns>
        <paramref name="value" /> がシリアル化されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> または <paramref name="value" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)">
      <summary>指定したオブジェクトの作成を表す式を返します。</summary>
      <param name="manager">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value">シリアル化するオブジェクト。</param>
      <param name="isComplete">
        <paramref name="value" /> が完全にシリアル化されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <returns>
        <paramref name="value" /> の作成を表す式。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> または <paramref name="value" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)">
      <summary>指定されたイベントを指定されたステートメントのコレクションにシリアル化します。</summary>
      <param name="manager">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="statements">イベントをシリアル化した結果を格納する <see cref="T:System.CodeDom.CodeStatementCollection" />。</param>
      <param name="value">
        <paramref name="descriptor" /> のバインド先となるオブジェクト。</param>
      <param name="descriptor">シリアル化するイベントを指定する <see cref="T:System.ComponentModel.EventDescriptor" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />、<paramref name="value" />、<paramref name="statements" />、または <paramref name="descriptor" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException">
        <see cref="T:System.ComponentModel.Design.IEventBindingService" /> が使用できません。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
      <summary>指定されたイベントを指定されたステートメントのコレクションにシリアル化します。</summary>
      <param name="manager">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="statements">イベントをシリアル化した結果を格納する <see cref="T:System.CodeDom.CodeStatementCollection" />。</param>
      <param name="value">イベントをシリアル化する対象となるオブジェクト。</param>
      <param name="filter">シリアル化するイベントをフィルター処理する <see cref="T:System.Attribute" /> 配列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />、<paramref name="value" />、または <paramref name="statements" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
      <summary>指定されたオブジェクトのプロパティを指定されたステートメントのコレクションにシリアル化します。</summary>
      <param name="manager">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="statements">プロパティをシリアル化した結果を格納する <see cref="T:System.CodeDom.CodeStatementCollection" />。</param>
      <param name="value">プロパティをシリアル化する対象となるオブジェクト。</param>
      <param name="filter">シリアル化するプロパティをフィルター処理する <see cref="T:System.Attribute" /> 配列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />、<paramref name="value" />、または <paramref name="statements" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
      <summary>指定されたオブジェクトのプロパティをインバリアント カルチャのリソース バンドルにシリアル化します。</summary>
      <param name="manager">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="statements">使用しません。</param>
      <param name="value">プロパティがシリアル化されるオブジェクト。</param>
      <param name="filter">シリアル化するプロパティをフィルター処理する <see cref="T:System.Attribute" /> 配列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />、<paramref name="value" />、または <paramref name="statements" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.PropertyDescriptor)">
      <summary>指定したオブジェクトのプロパティをシリアル化します。</summary>
      <param name="manager">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="statements">プロパティをシリアル化した結果を格納する <see cref="T:System.CodeDom.CodeStatementCollection" />。</param>
      <param name="value">プロパティをシリアル化する対象となるオブジェクト。</param>
      <param name="propertyToSerialize">シリアル化するプロパティ。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />、<paramref name="value" />、<paramref name="statements" />、または <paramref name="propertyToSerialize" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
      <summary>指定したオブジェクトを、指定したリソース名のリソース バンドルにシリアル化します。</summary>
      <param name="manager">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="resourceName">
        <paramref name="value" /> をシリアル化した結果を格納するリソース バンドルの名前。</param>
      <param name="value">シリアル化するオブジェクト。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
      <summary>指定したオブジェクトを、指定したリソース名のリソース バンドルにシリアル化します。</summary>
      <param name="manager">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="resourceName">
        <paramref name="value" /> をシリアル化した結果を格納するリソース バンドルの名前。</param>
      <param name="value">シリアル化するオブジェクト。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>指定したオブジェクトを式にシリアル化します。</summary>
      <param name="manager">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value">シリアル化するオブジェクト。 <see langword="null" /> の可能性があります。</param>
      <returns>
        <paramref name="value" /> をシリアル化できる場合は <see cref="T:System.CodeDom.CodeExpression" /> オブジェクト。それ以外の場合は <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>指定したオブジェクトを式にシリアル化します。</summary>
      <param name="manager">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value">シリアル化するオブジェクト。</param>
      <returns>シリアル化された式として <paramref name="value" /> を格納している <see cref="T:System.CodeDom.CodeExpression" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
      <summary>指定したオブジェクトをインバリアント カルチャに適した式にシリアル化します。</summary>
      <param name="manager">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value">シリアル化するオブジェクト。</param>
      <param name="ensureInvariant">インバリアント カルチャにシリアル化する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <returns>シリアル化された式として <paramref name="value" /> を格納している <see cref="T:System.CodeDom.CodeExpression" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression)">
      <summary>オブジェクトを式に関連付けます。</summary>
      <param name="manager">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value">シリアル化するオブジェクト。</param>
      <param name="expression">
        <paramref name="value" /> を関連付ける <see cref="T:System.CodeDom.CodeExpression" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />、<paramref name="value" />、または <paramref name="expression" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression,System.Boolean)">
      <summary>必要に応じて事前設定された式を指定し、オブジェクトを式に関連付けます。</summary>
      <param name="manager">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value">シリアル化するオブジェクト。</param>
      <param name="expression">
        <paramref name="value" /> を関連付ける <see cref="T:System.CodeDom.CodeExpression" />。</param>
      <param name="isPreset">あらかじめ設定された式を指定する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException">
      <summary>シリアル化エラーの行番号情報を取得できる場合にスローされる例外。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.Exception,System.CodeDom.CodeLinePragma)">
      <summary>例外と行情報を指定して、<see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="ex">スローされる例外。</param>
      <param name="linePragma">例外が発生した位置を示す <see cref="T:System.CodeDom.CodeLinePragma" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.Exception,System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>
        <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="ex">スローされる例外。</param>
      <param name="manager">内容の抽出対象となる <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> オブジェクト。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Manager" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>指定したシリアル化データとコンテキストを使用して、<see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info">
        <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> がシリアル化または逆シリアル化していたオブジェクトを、シリアル化または逆シリアル化するために使用したデータを格納します。</param>
      <param name="context">例外を生成したストリームの転送元および転送先を記述し、そのコンテキストと追加の呼び出し元定義のコンテキストを保持するためのシリアル化の手段を提供します。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.String,System.CodeDom.CodeLinePragma)">
      <summary>メッセージと行情報を指定して、<see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外を説明するメッセージ。</param>
      <param name="linePragma">例外が発生した位置を示す <see cref="T:System.CodeDom.CodeLinePragma" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.String,System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>
        <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外を説明するメッセージ。</param>
      <param name="manager">内容の抽出対象となる <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> オブジェクト。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Manager" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>パラメーター名と追加の例外情報を使用して <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクトを設定します。</summary>
      <param name="info">
        <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> がシリアル化または逆シリアル化していたオブジェクトを、シリアル化または逆シリアル化するために使用したデータを格納します。</param>
      <param name="context">例外を生成したストリームの転送元および転送先を記述し、そのコンテキストと追加の呼び出し元定義のコンテキストを保持するためのシリアル化の手段を提供します。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.CodeDomSerializerException.LinePragma">
      <summary>この例外に関連付けられているエラーの行情報を取得または設定します。</summary>
      <returns>エラーの行情報を示す <see cref="T:System.CodeDom.CodeLinePragma" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer">
      <summary>コレクションをシリアル化します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.#ctor">
      <summary>
        <see cref="T:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.MethodSupportsSerialization(System.Reflection.MethodInfo)">
      <summary>
        <paramref name="method" /> によるシリアル化のサポートを検証します。</summary>
      <param name="method">シリアル化属性を確認する対象の <see cref="T:System.Reflection.MethodInfo" />。</param>
      <returns>
        <paramref name="method" /> がシリアル化をサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="method" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>指定したコレクションをシリアル化して、CodeDOM オブジェクトを生成します。</summary>
      <param name="manager">シリアル化中に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value">シリアル化するオブジェクト。</param>
      <returns>
        <paramref name="value" /> を表す CodeDOM オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> または <paramref name="value" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.SerializeCollection(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeExpression,System.Type,System.Collections.ICollection,System.Collections.ICollection)">
      <summary>指定したコレクションをシリアル化します。</summary>
      <param name="manager">シリアル化中に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="targetExpression">コレクションを参照する <see cref="T:System.CodeDom.CodeExpression" />。</param>
      <param name="targetType">コレクションの <see cref="T:System.Type" />。</param>
      <param name="originalCollection">シリアル化するコレクション。</param>
      <param name="valuesToSerialize">シリアル化する値。</param>
      <returns>シリアル化プロセスが正常に実行された場合はシリアル化されたコレクション。それ以外の場合は <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />、<paramref name="targetType" />、<paramref name="originalCollection" />、または <paramref name="valuesToSerialize" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
      <summary>
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> インターフェイスの実装を提供します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor">
      <summary>
        <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor(System.IServiceProvider)">
      <summary>指定したサービス プロバイダーで <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="provider">
        <see cref="T:System.IServiceProvider" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="provider" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container">
      <summary>このシリアル化マネージャーのコンテナーを取得または設定します。</summary>
      <returns>シリアル化マネージャーがコンポーネントを追加する <see cref="T:System.ComponentModel.IContainer" />。</returns>
      <exception cref="T:System.InvalidOperationException">シリアル化マネージャーに、アクティブなシリアル化セッションが存在します。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
      <summary>型のインスタンスを作成します。</summary>
      <param name="type">作成するインスタンスの型。</param>
      <param name="arguments">型のコンストラクターのパラメーター。 パラメーターなしのコンストラクターを呼び出すには、これが <see langword="null" /> でも空のコレクションでもかまいません。</param>
      <param name="name">オブジェクトに付ける名前。 <see langword="null" /> の場合、オブジェクトに名前は付けられません。ただし、オブジェクトをコンテナーに追加し、そのコンテナーによってオブジェクトに名前が付けられる場合を除きます。</param>
      <param name="addToContainer">オブジェクトが <see cref="T:System.ComponentModel.IComponent" /> を実装しているときに、コンテナーにオブジェクトを追加する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <returns>
        <paramref name="type" /> で指定した型の新しいインスタンス。</returns>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
        <paramref name="type" /> は、<paramref name="arguments" /> に格納されたパラメーターを取得するコンストラクターを持ちません。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession">
      <summary>新しいシリアル化セッションを作成します。</summary>
      <returns>新しいシリアル化セッションを表す <see cref="T:System.IDisposable" />。</returns>
      <exception cref="T:System.InvalidOperationException">シリアル化マネージャーは、既にセッション内に存在します。 <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> のこのバージョンは、同時セッションをサポートしていません。</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors">
      <summary>シリアル化または逆シリアル化の実行時に発生したエラーのリストを取得します。</summary>
      <returns>シリアル化または逆シリアル化の実行時に発生したエラーのリスト。</returns>
      <exception cref="T:System.InvalidOperationException">このプロパティは、シリアル化セッション外部でアクセスされました。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType(System.String)">
      <summary>指定された型名に対応する型を取得します。</summary>
      <param name="typeName">取得する型の名前。</param>
      <returns>指定された型。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)">
      <summary>指定したオブジェクト型のシリアライザーを取得します。</summary>
      <param name="objectType">シリアライザーの取得対象となるオブジェクトの型。</param>
      <param name="serializerType">取得するシリアライザーの型。</param>
      <returns>
        <paramref name="objectType" /> のシリアライザー。見つからない場合は <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="objectType" /> または <paramref name="serializerType" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService(System.Type)">
      <summary>要求したサービスを取得します。</summary>
      <param name="serviceType">取得するサービスの型。</param>
      <returns>要求したサービス。サービスを解決できない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType(System.String)">
      <summary>要求された型を取得します。</summary>
      <param name="typeName">取得する型の名前。</param>
      <returns>要求された型。型を解決できない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)">
      <summary>
        <see cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" /> イベントを発生させます。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.ComponentModel.Design.Serialization.ResolveNameEventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)">
      <summary>
        <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated" /> イベントを発生させます。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)">
      <summary>
        <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed" /> イベントを発生させます。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames">
      <summary>
        <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> メソッドが、コンテナーに指定した名前が存在することをチェックする必要があるかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> が指定したコンポーネント名を渡す場合は <see langword="true" />。<see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> がコンテナーに指定した名前が存在するかどうかチェックする場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
      <exception cref="T:System.InvalidOperationException">このプロパティは、シリアル化セッション内から変更されました。</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider">
      <summary>シリアル化マネージャーの <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> プロパティにプロパティを提供する際に使用する必要のあるオブジェクトを取得します。</summary>
      <returns>シリアル化マネージャーの <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> プロパティにプロパティを提供する際に使用する必要のあるオブジェクト。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances">
      <summary>
        <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> が型の新しいインスタンスを常に作成するかどうかを示す値が取得または設定されます。</summary>
      <returns>
        <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> が既存のインスタンスを返す場合は <see langword="true" />。<see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> が型の新しいインスタンスを作成する場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
      <exception cref="T:System.InvalidOperationException">シリアル化マネージャーに、アクティブなシリアル化セッションが存在します。</exception>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated">
      <summary>セッションが作成されるときに発生します。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed">
      <summary>セッションが破棄されるときに発生します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
      <summary>シリアル化マネージャーにカスタムのシリアル化プロバイダーを追加します。</summary>
      <param name="provider">追加するシリアル化プロバイダー。</param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context">
      <summary>このシリアル化セッションのコンテキスト スタックを取得します。</summary>
      <returns>データを格納する <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" />。</returns>
      <exception cref="T:System.InvalidOperationException">このプロパティは、シリアル化セッション外部でアクセスされました。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
      <summary>
        <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> メソッドを実装します。</summary>
      <param name="type">作成するデータ型。</param>
      <param name="arguments">型のコンストラクターに渡す引数。</param>
      <param name="name">オブジェクトの名前。 この名前は、<see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" /> を使用して後からオブジェクトにアクセスするときに使用できます。 <see langword="null" /> が渡された場合でもオブジェクトは作成されますが、そのオブジェクトには名前を指定する方法ではアクセスできません。</param>
      <param name="addToContainer">このオブジェクトをデザイン コンテナーに追加する場合は <see langword="true" />。 この値を有効にするには、オブジェクトが <see cref="T:System.ComponentModel.IComponent" /> を実装していることが必要です。</param>
      <returns>新しく作成したオブジェクト インスタンス。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)">
      <summary>指定した名前の作成済みオブジェクトのインスタンスを取得します。</summary>
      <param name="name">取得するオブジェクトの名前。</param>
      <returns>指定した名前を持つオブジェクトのインスタンス。その名前のオブジェクトが見つからない場合は <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.InvalidOperationException">このプロパティは、シリアル化セッション外部でアクセスされました。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)">
      <summary>指定したオブジェクトの名前を取得します。</summary>
      <param name="value">名前の取得対象となるオブジェクト。</param>
      <returns>オブジェクトの名前。オブジェクトに名前がない場合は <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.InvalidOperationException">このプロパティは、シリアル化セッション外部でアクセスされました。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer(System.Type,System.Type)">
      <summary>指定したオブジェクト型に対応する、要求された型のシリアライザーを取得します。</summary>
      <param name="objectType">シリアライザーを取得する対象のオブジェクトの型。</param>
      <param name="serializerType">取得するシリアライザーの型。</param>
      <returns>要求されたシリアライザーのインスタンス。該当するシリアライザーが見つからない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType(System.String)">
      <summary>指定した名前の型を取得します。</summary>
      <param name="typeName">読み込まれる型の完全修飾名。</param>
      <returns>型のインスタンス。型を読み込めない場合は <see langword="null" />。</returns>
      <exception cref="T:System.InvalidOperationException">このプロパティは、シリアル化セッション外部でアクセスされました。</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties">
      <summary>
        <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> プロパティを実装します。</summary>
      <returns>シリアル化されるプロパティを格納している <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
      <summary>以前に追加したシリアル化プロバイダーを削除します。</summary>
      <param name="provider">削除する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError(System.Object)">
      <summary>シリアル化における回復可能なエラーの報告に使用します。</summary>
      <param name="errorInformation">エラー情報を格納しているオブジェクト。通常は、<see cref="T:System.String" /> 型または <see cref="T:System.Exception" /> 型のオブジェクト。</param>
      <exception cref="T:System.InvalidOperationException">このプロパティは、シリアル化セッション外部でアクセスされました。</exception>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ResolveName">
      <summary>
        <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" /> が、指定した名前をシリアル化マネージャーの名前テーブルで見つけることができない場合に発生します。</summary>
      <exception cref="T:System.InvalidOperationException">シリアル化マネージャーにアクティブなシリアル化セッションが存在しません。</exception>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SerializationComplete">
      <summary>シリアル化が完了したときに発生します。</summary>
      <exception cref="T:System.InvalidOperationException">シリアル化マネージャーにアクティブなシリアル化セッションが存在しません。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)">
      <summary>指定したオブジェクトの名前を設定します。</summary>
      <param name="instance">名前を設定するオブジェクト。</param>
      <param name="name">オブジェクトの名前として使用する <see cref="T:System.String" />。</param>
      <exception cref="T:System.ArgumentNullException">一方または両方のパラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">インスタンスによって指定されたオブジェクトに既に名前が付いているか、<paramref name="name" /> が別の名前付きオブジェクトによって既に使用されています。</exception>
      <exception cref="T:System.InvalidOperationException">このプロパティは、シリアル化セッション外部でアクセスされました。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#IServiceProvider#GetService(System.Type)">
      <summary>このメンバーの説明については、<see cref="M:System.IServiceProvider.GetService(System.Type)" /> メソッドのトピックを参照してください。</summary>
      <param name="serviceType">取得対象となるサービスの型を指定するオブジェクト。</param>
      <returns>
        <paramref name="serviceType" /> 型のサービス オブジェクト。  

または - 
<paramref name="serviceType" /> 型のサービス オブジェクトがない場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes">
      <summary>
        <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> メソッドによって、一致する名前が同じ型を参照していることが検査されるかどうかを示す値が取得または設定されます。</summary>
      <returns>
        <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> が型を検査する場合は <see langword="true" />。検査しない場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
      <exception cref="T:System.InvalidOperationException">シリアル化マネージャーに、アクティブなシリアル化セッションが存在します。</exception>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.ExpressionContext">
      <summary>シリアライザー間でコンテキストの状態を渡す方法を提供します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object)">
      <summary>指定した式と所有者を使用して、<see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="expression">指定したコード式。</param>
      <param name="expressionType">指定したコード式の型。</param>
      <param name="owner">指定したコード式の所有者。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" />、<paramref name="expressionType" />、または <paramref name="owner" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object,System.Object)">
      <summary>現在の値を指定して、<see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="expression">指定したコード式。</param>
      <param name="expressionType">指定したコード式の型。</param>
      <param name="owner">指定したコード式の所有者。</param>
      <param name="presetValue">指定したコード式の事前定義された値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" />、<paramref name="expressionType" />、または <paramref name="owner" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.Expression">
      <summary>このコンテキストが表す式を取得します。</summary>
      <returns>このコンテキストが表す式。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.ExpressionType">
      <summary>式の <see cref="T:System.Type" /> を取得します。</summary>
      <returns>式の <see cref="T:System.Type" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.Owner">
      <summary>この式を所有するオブジェクトを取得します。</summary>
      <returns>この式を所有するオブジェクト。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue">
      <summary>式の事前定義された値を取得します。</summary>
      <returns>式の事前定義された値。割り当てられていない場合は <see langword="null" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer">
      <summary>オブジェクト グラフ内のリフレクション プリミティブをシリアル化するための基本クラスを提供します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer.#ctor">
      <summary>
        <see cref="T:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor,System.CodeDom.CodeStatementCollection)">
      <summary>指定した値にあるメンバー記述子をシリアル化してステートメント コレクションにします。</summary>
      <param name="manager">シリアル化に使用するシリアル化マネージャー。</param>
      <param name="value">メンバーのバインド先となるオブジェクト。</param>
      <param name="descriptor">シリアル化するメンバーの記述子。</param>
      <param name="statements">
        <paramref name="descriptor" /> のシリアル化先の <see cref="T:System.CodeDom.CodeStatementCollection" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer.ShouldSerialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>指定したメンバーをシリアル化する必要があるかどうかを判断します。</summary>
      <param name="manager">シリアル化に使用するシリアル化マネージャー。</param>
      <param name="value">メンバーのバインド先となるオブジェクト。</param>
      <param name="descriptor">シリアル化するメンバーの記述子。</param>
      <returns>
        <paramref name="descriptor" /> によって記述されているメンバーをシリアル化する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection">
      <summary>
        <see cref="T:System.ComponentModel.Design.Serialization.StatementContext" /> によって提供されるステートメントのテーブルを保持します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.ContainsKey(System.Object)">
      <summary>指定したステートメントの所有者がテーブルに格納されているかどうかを判断します。</summary>
      <param name="statementOwner">ステートメント コレクションの所有者。</param>
      <returns>テーブル内に <paramref name="statementOwner" /> が存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="statementOwner" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.GetEnumerator">
      <summary>
        <see cref="T:System.Collections.IEnumerator" /> の <see cref="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection" />を返します。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> の <see cref="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ObjectStatementCollection.Item(System.Object)">
      <summary>指定した所有者のステートメント コレクションを取得します。</summary>
      <param name="statementOwner">ステートメント コレクションの所有者。</param>
      <returns>
        <paramref name="statementOwner" /> のステートメント コレクション。テーブル内に <paramref name="statementOwner" /> がない場合は <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="statementOwner" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.Populate(System.Collections.ICollection)">
      <summary>ステートメント テーブルに、ステートメントの所有者のコレクションを設定します。</summary>
      <param name="statementOwners">テーブルに追加するステートメントの所有者のコレクション。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="statementOwner" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.Populate(System.Object)">
      <summary>ステートメント テーブルに、ステートメントの所有者を設定します。</summary>
      <param name="owner">テーブルに追加するステートメントの所有者。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owner" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>このメンバーの説明については、<see cref="M:System.Collections.IEnumerable.GetEnumerator" /> メソッドのトピックを参照してください。</summary>
      <returns>コレクションを反復処理するために使用できる <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.RootContext">
      <summary>
        <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> は、ルート コンテキストを追加して、ルート オブジェクトの定義を提供します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.RootContext.#ctor(System.CodeDom.CodeExpression,System.Object)">
      <summary>
        <see cref="T:System.ComponentModel.Design.Serialization.RootContext" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="expression">オブジェクト グラフのルート オブジェクトを表す式。</param>
      <param name="value">オブジェクト グラフのルート オブジェクト。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> または <paramref name="value" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.RootContext.Expression">
      <summary>オブジェクト グラフのルート オブジェクトを表す式を取得します。</summary>
      <returns>オブジェクト グラフのルート オブジェクトを表す <see cref="T:System.CodeDom.CodeExpression" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.RootContext.Value">
      <summary>オブジェクト グラフのルート オブジェクトを取得します。</summary>
      <returns>オブジェクト グラフのルート オブジェクト。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext">
      <summary>シリアライザーが既定値を処理する必要があるかどうかを指定します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.#ctor">
      <summary>
        <see cref="T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.#ctor(System.ComponentModel.MemberDescriptor)">
      <summary>特定のメンバーにバインドするオプションを指定して、<see cref="T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="member">このコンテキストのバインド先となるメンバー。 <see langword="null" /> の可能性があります。</param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.Member">
      <summary>このコンテキストのバインド先となるメンバーを取得します。</summary>
      <returns>このコンテキストのバインド先となるメンバー。このコンテキストがオブジェクトのすべてのメンバーにバインドされる場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.ShouldSerialize(System.ComponentModel.MemberDescriptor)">
      <summary>指定したメンバーをこのコンテキストでシリアル化するかどうかを示す値を取得します。</summary>
      <param name="member">シリアル化のためにチェックされるメンバー。</param>
      <returns>指定したメンバーをこのコンテキストでシリアル化する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.StatementContext">
      <summary>ステートメントのシリアル化先となる場所を提供します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.StatementContext.#ctor">
      <summary>
        <see cref="T:System.ComponentModel.Design.Serialization.StatementContext" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.StatementContext.StatementCollection">
      <summary>ステートメント コンテキストが提供するステートメントのコレクションを取得します。</summary>
      <returns>ステートメント コンテキストが提供するステートメントを格納している <see cref="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer">
      <summary>オブジェクトを新しい型にシリアル化します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.#ctor">
      <summary>
        <see cref="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
      <summary>指定した型宣言を逆シリアル化します。</summary>
      <param name="manager">シリアル化に使用するシリアル化マネージャー。</param>
      <param name="declaration">シリアル化に使用する型宣言。</param>
      <returns>ルート オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> または <paramref name="typeDecl" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)">
      <summary>メンバーのシリアル化に使用するステートメントが格納されたメソッドを返します。</summary>
      <param name="manager">シリアル化に使用するシリアル化マネージャー。</param>
      <param name="declaration">シリアル化に使用する型宣言。</param>
      <param name="value">シリアル化に使用する値。</param>
      <returns>指定したメンバーのすべての初期化コードを出力するために使用されるメソッド。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />、<paramref name="typeDecl" />、または <paramref name="value" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
      <summary>逆シリアル化中に解釈されるメソッドの配列を返します。</summary>
      <param name="manager">シリアル化に使用するシリアル化マネージャー。</param>
      <param name="declaration">シリアル化に使用する型宣言。</param>
      <returns>逆シリアル化中に解釈されるメソッドの <see cref="T:System.CodeDom.CodeMemberMethod" /> 配列。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> または <paramref name="typeDecl" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
      <summary>ルートを定義する新しい型宣言を作成することによって、オブジェクト ルートをシリアル化します。</summary>
      <param name="manager">シリアル化に使用するシリアル化マネージャー。</param>
      <param name="root">シリアル化するオブジェクト。</param>
      <param name="members">省略可能なメンバーのコレクション。 <see langword="null" /> または空になる場合があります。</param>
      <returns>ルート オブジェクトを定義する <see cref="T:System.CodeDom.CodeTypeDeclaration" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> または <paramref name="root" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="T:System.ComponentModel.Design.UndoEngine">
      <summary>標準の元に戻したりやり直したりするデザイン時の機能を指定します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.#ctor(System.IServiceProvider)">
      <summary>
        <see cref="T:System.ComponentModel.Design.UndoEngine" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="provider">親サービス プロバイダー。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="provider" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.NotSupportedException">必要なサービスが見つかりません。 必要なサービスについては、<see cref="T:System.ComponentModel.Design.UndoEngine" /> のトピックを参照してください。 このサービスが削除されている場合は、必ず代わりのサービスを提供します。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.AddUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)">
      <summary>
        <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> を、元に戻すスタックに追加します。</summary>
      <param name="unit">追加する取り消し単位。</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.CreateUndoUnit(System.String,System.Boolean)">
      <summary>新しい <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> を作成します。</summary>
      <param name="name">作成する単位の名前。</param>
      <param name="primary">入れ子になっている一連の単位のうち最初の単位を作成する場合は <see langword="true" />。以降の入れ子になっている単位を作成する場合は <see langword="false" />。</param>
      <returns>指定した名前の新しい <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.DiscardUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)">
      <summary>
        <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> を破棄します。</summary>
      <param name="unit">破棄する単位。</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.Dispose">
      <summary>
        <see cref="T:System.ComponentModel.Design.UndoEngine" /> によって使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.Dispose(System.Boolean)">
      <summary>
        <see cref="T:System.ComponentModel.Design.UndoEngine" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.Enabled">
      <summary>
        <see cref="T:System.ComponentModel.Design.UndoEngine" /> を有効または無効にします。</summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.UndoEngine" /> が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.GetRequiredService(System.Type)">
      <summary>要求したサービスを取得します。</summary>
      <param name="serviceType">取得するサービスの型。</param>
      <returns>見つかった場合には、要求されたサービス。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceType" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="serviceType" /> が要求されましたが、見つかりません。 このサービスが削除されている場合は、必ず代わりのサービスを提供します。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.GetService(System.Type)">
      <summary>要求したサービスを取得します。</summary>
      <param name="serviceType">取得するサービスの型。</param>
      <returns>要求されたサービス。要求されたサービスが見つからない場合は <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceType" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.OnUndoing(System.EventArgs)">
      <summary>
        <see cref="E:System.ComponentModel.Design.UndoEngine.Undoing" /> イベントを発生させます。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.OnUndone(System.EventArgs)">
      <summary>
        <see cref="E:System.ComponentModel.Design.UndoEngine.Undone" /> イベントを発生させます。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="E:System.ComponentModel.Design.UndoEngine.Undoing">
      <summary>元に戻す操作が実行される直前に発生します。</summary>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoInProgress">
      <summary>元に戻す操作が実行中であることを示します。</summary>
      <returns>元に戻す操作を実行中の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="E:System.ComponentModel.Design.UndoEngine.Undone">
      <summary>元に戻す操作が実行された直後に発生します。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.UndoEngine.UndoUnit">
      <summary>ユーザーが元に戻すことができる処理の単位をカプセル化します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.#ctor(System.ComponentModel.Design.UndoEngine,System.String)">
      <summary>
        <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="engine">この取り消し単位を所有するアンドゥ エンジン。</param>
      <param name="name">この取り消し単位の名前。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="engine" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Close">
      <summary>アンドゥ エンジンから呼び出しを受け取ってこの単位を閉じます。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentAdded(System.ComponentModel.Design.ComponentEventArgs)">
      <summary>
        <see cref="T:System.ComponentModel.Design.UndoEngine" /> イベントに応答し、<see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded" /> からの呼び出しを受け取ります。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentAdding(System.ComponentModel.Design.ComponentEventArgs)">
      <summary>
        <see cref="T:System.ComponentModel.Design.UndoEngine" /> イベントに応答し、<see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding" /> からの呼び出しを受け取ります。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentChanged(System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>
        <see cref="T:System.ComponentModel.Design.UndoEngine" /> イベントに応答し、<see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" /> からの呼び出しを受け取ります。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentChanging(System.ComponentModel.Design.ComponentChangingEventArgs)">
      <summary>
        <see cref="T:System.ComponentModel.Design.UndoEngine" /> イベントに応答し、<see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" /> からの呼び出しを受け取ります。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRemoved(System.ComponentModel.Design.ComponentEventArgs)">
      <summary>
        <see cref="T:System.ComponentModel.Design.UndoEngine" /> イベントに応答し、<see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved" /> からの呼び出しを受け取ります。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRemoving(System.ComponentModel.Design.ComponentEventArgs)">
      <summary>
        <see cref="T:System.ComponentModel.Design.UndoEngine" /> イベントに応答し、<see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving" /> からの呼び出しを受け取ります。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRename(System.ComponentModel.Design.ComponentRenameEventArgs)">
      <summary>
        <see cref="T:System.ComponentModel.Design.UndoEngine" /> イベントに応答し、<see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" /> からの呼び出しを受け取ります。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.ComponentModel.Design.ComponentRenameEventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.GetService(System.Type)">
      <summary>要求したサービスのインスタンスを取得します。</summary>
      <param name="serviceType">取得するサービスの型。</param>
      <returns>指定したサービスのインスタンス。サービスを解決できない場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoUnit.IsEmpty">
      <summary>
        <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> にイベントが格納されていないかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> にイベントが格納されていない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoUnit.Name">
      <summary>
        <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> の名前を取得します。</summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> の名前。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ToString">
      <summary>単位の現在の名前を表す <see cref="T:System.String" /> を返します。</summary>
      <returns>単位の現在の名前を表す <see cref="T:System.String" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo">
      <summary>元に戻す操作またはやり直し操作を実行します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore">
      <summary>元に戻す操作を実行するために <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> によって呼び出されます。</summary>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine">
      <summary>親の <see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" /> を取得します。</summary>
      <returns>この <see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" /> の割り当て先である <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />。</returns>
    </member>
    <member name="T:System.Drawing.Design.IToolboxItemProvider">
      <summary>ツールボックス項目のコレクションを公開します。</summary>
    </member>
    <member name="P:System.Drawing.Design.IToolboxItemProvider.Items">
      <summary>
        <see cref="T:System.Drawing.Design.ToolboxItem" /> オブジェクトのコレクションを取得します。</summary>
      <returns>
        <see cref="T:System.Drawing.Design.ToolboxItem" /> オブジェクトのコレクション。</returns>
    </member>
    <member name="T:System.Drawing.Design.IToolboxService">
      <summary>開発環境でツールボックスの管理とクエリを行うメソッドとプロパティを提供します。</summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddCreator(System.Drawing.Design.ToolboxItemCreatorCallback,System.String)">
      <summary>指定したデータ形式のツールボックス アイテム クリエーターを新規に追加します。</summary>
      <param name="creator">ツールボックス項目を呼び出したときにコンポーネントを作成できる <see cref="T:System.Drawing.Design.ToolboxItemCreatorCallback" />。</param>
      <param name="format">クリエーターが処理するデータ形式。</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddCreator(System.Drawing.Design.ToolboxItemCreatorCallback,System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary>指定したデータ形式とデザイナー ホストに対する新規のツールボックス アイテム クリエーターを追加します。</summary>
      <param name="creator">ツールボックス項目を呼び出したときにコンポーネントを作成できる <see cref="T:System.Drawing.Design.ToolboxItemCreatorCallback" />。</param>
      <param name="format">クリエーターが処理するデータ形式。</param>
      <param name="host">クリエーターに関連付けるデザイナー ホストを表す <see cref="T:System.ComponentModel.Design.IDesignerHost" />。</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddLinkedToolboxItem(System.Drawing.Design.ToolboxItem,System.ComponentModel.Design.IDesignerHost)">
      <summary>指定したプロジェクト リンク済みのツールボックス項目をツールボックスに追加します。</summary>
      <param name="toolboxItem">ツールボックスに追加するリンク済みの <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <param name="host">現在のデザイン ドキュメントの <see cref="T:System.ComponentModel.Design.IDesignerHost" />。</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddLinkedToolboxItem(System.Drawing.Design.ToolboxItem,System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary>指定したプロジェクト リンク済みのツールボックス項目を、指定したカテゴリのツールボックスに追加します。</summary>
      <param name="toolboxItem">ツールボックスに追加するリンク済みの <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <param name="category">ツールボックス項目を追加するツールボックス項目カテゴリ。</param>
      <param name="host">現在のデザイン ドキュメントの <see cref="T:System.ComponentModel.Design.IDesignerHost" />。</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary>指定したツールボックス項目をツールボックスに追加します。</summary>
      <param name="toolboxItem">ツールボックスに追加する <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddToolboxItem(System.Drawing.Design.ToolboxItem,System.String)">
      <summary>指定したツールボックス項目を、指定したカテゴリのツールボックスに追加します。</summary>
      <param name="toolboxItem">ツールボックスに追加する <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <param name="category">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> を追加するツールボックス項目カテゴリ。</param>
    </member>
    <member name="P:System.Drawing.Design.IToolboxService.CategoryNames">
      <summary>現在ツールボックスにあるすべてのツール カテゴリの名前を取得します。</summary>
      <returns>ツール カテゴリを格納している <see cref="T:System.Drawing.Design.CategoryNameCollection" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.DeserializeToolboxItem(System.Object)">
      <summary>シリアル化形式で、ツールボックス項目を表す指定したオブジェクトからツールボックス項目を取得します。</summary>
      <param name="serializedObject">取得する <see cref="T:System.Drawing.Design.ToolboxItem" /> を格納しているオブジェクト。</param>
      <returns>シリアル化オブジェクトから作成した <see cref="T:System.Drawing.Design.ToolboxItem" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.DeserializeToolboxItem(System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary>指定したデザイナー ホストを使用して、シリアル化形式で、ツールボックス項目を表す指定したオブジェクトからツールボックス項目を取得します。</summary>
      <param name="serializedObject">取得する <see cref="T:System.Drawing.Design.ToolboxItem" /> を格納しているオブジェクト。</param>
      <param name="host">この <see cref="T:System.ComponentModel.Design.IDesignerHost" /> に関連付ける <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <returns>逆シリアル化から作成する <see cref="T:System.Drawing.Design.ToolboxItem" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetSelectedToolboxItem">
      <summary>現在選択されているツールボックス項目を取得します。</summary>
      <returns>現在選択されている <see cref="T:System.Drawing.Design.ToolboxItem" />、または、ツールボックス項目が選択されていない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetSelectedToolboxItem(System.ComponentModel.Design.IDesignerHost)">
      <summary>すべてのデザイナーで使用できるか、指定したデザイナーをサポートしている場合は、現在選択されているツールボックス項目を取得します。</summary>
      <param name="host">選択されたツールを返すために、関連付ける必要がある <see cref="T:System.ComponentModel.Design.IDesignerHost" />。</param>
      <returns>現在選択されている <see cref="T:System.Drawing.Design.ToolboxItem" />、または、ツールボックス項目が現在選択されていない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetToolboxItems">
      <summary>ツールボックスからツールボックス項目のコレクション全体を取得します。</summary>
      <returns>現在のツールボックス項目を格納している <see cref="T:System.Drawing.Design.ToolboxItemCollection" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetToolboxItems(System.ComponentModel.Design.IDesignerHost)">
      <summary>ツールボックスから指定したデザイナー ホストに関連付けられているツールボックス項目のコレクションを取得します。</summary>
      <param name="host">取得するツールボックス項目に関連付けられている <see cref="T:System.ComponentModel.Design.IDesignerHost" />。</param>
      <returns>指定したデザイナー ホストに関連付けられている現在のツールボックス項目を格納している <see cref="T:System.Drawing.Design.ToolboxItemCollection" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetToolboxItems(System.String)">
      <summary>指定したカテゴリと一致するツールボックスからツールボックス項目のコレクションを取得します。</summary>
      <param name="category">すべてのツールボックス項目の取得元のツールボックス項目カテゴリ。</param>
      <returns>指定したカテゴリに関連付けられている現在のツールボックス項目を格納している <see cref="T:System.Drawing.Design.ToolboxItemCollection" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetToolboxItems(System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary>ツールボックスから指定したデザイナー ホストとカテゴリに関連付けられているツールボックス項目のコレクションを取得します。</summary>
      <param name="category">ツールボックス項目の取得元のツールボックス項目カテゴリ。</param>
      <param name="host">取得するツールボックス項目に関連付けられている <see cref="T:System.ComponentModel.Design.IDesignerHost" />。</param>
      <returns>指定したカテゴリとデザイナー ホストに関連付けられている現在のツールボックス項目を格納している <see cref="T:System.Drawing.Design.ToolboxItemCollection" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.IsSupported(System.Object,System.Collections.ICollection)">
      <summary>シリアル化ツールボックス項目を表す指定したオブジェクトが、指定した属性と一致するかどうかを示す値を取得します。</summary>
      <param name="serializedObject">取得する <see cref="T:System.Drawing.Design.ToolboxItem" /> を格納しているオブジェクト。</param>
      <param name="filterAttributes">シリアル化オブジェクトのテスト対象の属性を格納している <see cref="T:System.Collections.ICollection" />。</param>
      <returns>オブジェクトが指定した属性と一致する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.IsSupported(System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary>シリアル化ツールボックス項目を表す指定したオブジェクトが、指定したデザイナー ホストで使用できるかどうかを示す値を取得します。</summary>
      <param name="serializedObject">取得する <see cref="T:System.Drawing.Design.ToolboxItem" /> を格納しているオブジェクト。</param>
      <param name="host">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> のサポートをテストする <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <returns>指定したオブジェクトが、指定したデザイナー ホストと互換性を持つ場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.IsToolboxItem(System.Object)">
      <summary>指定したオブジェクトがシリアル化ツールボックス項目かどうかを示す値を取得します。</summary>
      <param name="serializedObject">検査するオブジェクト。</param>
      <returns>オブジェクトがツールボックス項目オブジェクトを格納している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.IsToolboxItem(System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary>指定したデザイナー ホストを使用して、指定したオブジェクトがシリアル化ツールボックス項目かどうかを示す値を取得します。</summary>
      <param name="serializedObject">検査するオブジェクト。</param>
      <param name="host">要求を行っている <see cref="T:System.ComponentModel.Design.IDesignerHost" />。</param>
      <returns>オブジェクトがツールボックス項目オブジェクトを格納している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.Refresh">
      <summary>ツールボックス項目の状態を更新します。</summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.RemoveCreator(System.String)">
      <summary>指定したデータ形式の、以前に追加したツールボックス アイテム クリエーターを削除します。</summary>
      <param name="format">削除するクリエーターのデータ形式。</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.RemoveCreator(System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary>追加した指定のデータ形式とデザイナー ホストに関連付けられたツールボックス クリエーターを削除します。</summary>
      <param name="format">削除するクリエーターのデータ形式。</param>
      <param name="host">削除するクリエーターに関連付けられた <see cref="T:System.ComponentModel.Design.IDesignerHost" />。</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.RemoveToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary>ツールボックスから、指定したツールボックス項目を削除します。</summary>
      <param name="toolboxItem">ツールボックスから削除する <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.RemoveToolboxItem(System.Drawing.Design.ToolboxItem,System.String)">
      <summary>ツールボックスから、指定したツールボックス項目を削除します。</summary>
      <param name="toolboxItem">ツールボックスから削除する <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <param name="category">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> の削除元のツールボックス項目カテゴリ。</param>
    </member>
    <member name="P:System.Drawing.Design.IToolboxService.SelectedCategory">
      <summary>ツールボックスで現在選択されているツール カテゴリの名前を取得または設定します。</summary>
      <returns>現在選択されているカテゴリの名前。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.SelectedToolboxItemUsed">
      <summary>選択したツールが使用されたことをツールボックス サービスに通知します。</summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.SerializeToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary>指定したツールボックス項目を表すシリアル化オブジェクトを取得します。</summary>
      <param name="toolboxItem">シリアル化する <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <returns>指定した <see cref="T:System.Drawing.Design.ToolboxItem" /> を表すオブジェクト。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.SetCursor">
      <summary>現在選択されているツールを表すカーソルに、現在のアプリケーションのカーソルを設定します。</summary>
      <returns>現在選択されているツールによってカーソルを設定する場合は <see langword="true" />。ツールが選択されていなくて、カーソルを標準 Windows カーソルに設定する場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.SetSelectedToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary>指定したツールボックス項目を選択します。</summary>
      <param name="toolboxItem">選択する <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
    </member>
    <member name="T:System.Drawing.Design.IToolboxUser">
      <summary>現在選択されているツールボックス項目を設定し、デザイナーが特定のツールボックス項目をサポートしているかどうかを示すインターフェイスを定義します。</summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary>指定したツールが現在のデザイナーでサポートされているかどうかを示す値を取得します。</summary>
      <param name="tool">ツールボックスでサポートされているかどうかをテストする対象の <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <returns>ツールボックスでツールがサポートされていて有効にできる場合は <see langword="true" />。ドキュメント デザイナーでツールの使用方法が認識されない場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary>指定したツールを選択します。</summary>
      <param name="tool">選択する <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
    </member>
    <member name="T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs">
      <summary>ツールボックスにコンポーネントが追加されると発生する <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreated" /> イベントにデータを提供します。</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxComponentsCreatedEventArgs.#ctor(System.ComponentModel.IComponent[])">
      <summary>
        <see cref="T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="components">ツールボックスに含めるコンポーネント。</param>
    </member>
    <member name="P:System.Drawing.Design.ToolboxComponentsCreatedEventArgs.Components">
      <summary>ツールボックスに追加するコンポーネントを格納している配列を取得または設定します。</summary>
      <returns>ツールボックスに追加するコンポーネントを示す <see cref="T:System.ComponentModel.IComponent" /> 型の配列。</returns>
    </member>
    <member name="T:System.Drawing.Design.ToolboxComponentsCreatedEventHandler">
      <summary>
        <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreated" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントに対してデータを提供する <see cref="T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs" />。</param>
    </member>
    <member name="T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs">
      <summary>ツールボックスにコンポーネントが追加されると発生する <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreating" /> イベントにデータを提供します。</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxComponentsCreatingEventArgs.#ctor(System.ComponentModel.Design.IDesignerHost)">
      <summary>
        <see cref="T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="host">要求を行っているデザイナー ホスト。</param>
    </member>
    <member name="P:System.Drawing.Design.ToolboxComponentsCreatingEventArgs.DesignerHost">
      <summary>ツールボックス コンポーネントの作成を要求した <see cref="T:System.ComponentModel.Design.IDesignerHost" /> のインスタンスを取得または設定します。</summary>
      <returns>ツールボックス コンポーネントの作成を要求した <see cref="T:System.ComponentModel.Design.IDesignerHost" />。ツールボックス項目にデザイナー ホストが提供されていない場合は <see langword="null" />。</returns>
    </member>
    <member name="T:System.Drawing.Design.ToolboxComponentsCreatingEventHandler">
      <summary>
        <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreating" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントに対してデータを提供する <see cref="T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs" />。</param>
    </member>
    <member name="T:System.Drawing.Design.ToolboxItem">
      <summary>ツールボックス項目の基本の実装を提供します。</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.#ctor">
      <summary>
        <see cref="T:System.Drawing.Design.ToolboxItem" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.#ctor(System.Type)">
      <summary>指定した型のコンポーネントを作成する <see cref="T:System.Drawing.Design.ToolboxItem" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="toolType">ツールボックス項目が作成する <see cref="T:System.ComponentModel.IComponent" /> の型。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> がロックされています。</exception>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.AssemblyName">
      <summary>ツールボックス項目が作成する型が含まれるアセンブリの名前を取得または設定します。</summary>
      <returns>作成する型が含まれるアセンブリを示す <see cref="T:System.Reflection.AssemblyName" />。</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Bitmap">
      <summary>ツールボックスでツールボックス項目を表すビットマップを取得または設定します。</summary>
      <returns>ツールボックスでツールボックス項目を表す <see cref="T:System.Drawing.Bitmap" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CheckUnlocked">
      <summary>ツールボックス項目が現在ロックされている場合は、例外がスローされます。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> がロックされています。</exception>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Company">
      <summary>この <see cref="T:System.Drawing.Design.ToolboxItem" /> の会社名を取得または設定します。</summary>
      <returns>この <see cref="T:System.String" /> の会社を指定する <see cref="T:System.Drawing.Design.ToolboxItem" />。</returns>
    </member>
    <member name="E:System.Drawing.Design.ToolboxItem.ComponentsCreated">
      <summary>コンポーネントが作成された直後に発生します。</summary>
    </member>
    <member name="E:System.Drawing.Design.ToolboxItem.ComponentsCreating">
      <summary>コンポーネントが作成されるときに発生します。</summary>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.ComponentType">
      <summary>この <see cref="T:System.Drawing.Design.ToolboxItem" /> のコンポーネントの型を取得します。</summary>
      <returns>この <see cref="T:System.String" /> のコンポーネントの型を指定する <see cref="T:System.Drawing.Design.ToolboxItem" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponents">
      <summary>ツールボックス項目で作成するように設定されているコンポーネントを作成します。</summary>
      <returns>作成された <see cref="T:System.ComponentModel.IComponent" /> オブジェクトの配列。</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponents(System.ComponentModel.Design.IDesignerHost)">
      <summary>指定したデザイナー ホストを使用して、ツールボックス項目で作成するように設定されているコンポーネントを作成します。</summary>
      <param name="host">コンポーネントの作成時に使用する <see cref="T:System.ComponentModel.Design.IDesignerHost" />。</param>
      <returns>作成された <see cref="T:System.ComponentModel.IComponent" /> オブジェクトの配列。</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponents(System.ComponentModel.Design.IDesignerHost,System.Collections.IDictionary)">
      <summary>指定したデザイナー ホストおよび既定値を使用して、ツールボックス項目で作成するように設定されているコンポーネントを作成します。</summary>
      <param name="host">コンポーネントの作成時に使用する <see cref="T:System.ComponentModel.Design.IDesignerHost" />。</param>
      <param name="defaultValues">コンポーネントの初期化に使用するプロパティ名/値ペアの既定値のディクショナリ。</param>
      <returns>作成された <see cref="T:System.ComponentModel.IComponent" /> オブジェクトの配列。</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponentsCore(System.ComponentModel.Design.IDesignerHost)">
      <summary>ツールボックス項目が呼び出されたときに、コンポーネントまたはコンポーネントの配列を作成します。</summary>
      <param name="host">ツールボックス項目をホストする <see cref="T:System.ComponentModel.Design.IDesignerHost" />。</param>
      <returns>作成された <see cref="T:System.ComponentModel.IComponent" /> オブジェクトの配列。</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponentsCore(System.ComponentModel.Design.IDesignerHost,System.Collections.IDictionary)">
      <summary>ツールボックス項目が呼び出されたときに、コンポーネントの配列を作成します。</summary>
      <param name="host">コンポーネントの作成時に使用するデザイナー ホスト。</param>
      <param name="defaultValues">コンポーネントの初期化に使用するプロパティ名/値ペアの既定値のディクショナリ。</param>
      <returns>作成された <see cref="T:System.ComponentModel.IComponent" /> オブジェクトの配列。</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.DependentAssemblies">
      <summary>ツールボックス項目の <see cref="T:System.Reflection.AssemblyName" /> を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Reflection.AssemblyName" /> オブジェクトの配列。</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Description">
      <summary>この <see cref="T:System.Drawing.Design.ToolboxItem" /> の説明を取得または設定します。</summary>
      <returns>この <see cref="T:System.String" /> の説明を指定する <see cref="T:System.Drawing.Design.ToolboxItem" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Deserialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>指定したシリアル化情報オブジェクトから、このツールボックス項目の状態を読み込みます。</summary>
      <param name="info">読み込み元の <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context">ストリーム特性を示す <see cref="T:System.Runtime.Serialization.StreamingContext" />。</param>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.DisplayName">
      <summary>ツールボックス項目の表示名を取得または設定します。</summary>
      <returns>ツールボックス項目の表示名。</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Equals(System.Object)">
      <summary>2 つの <see cref="T:System.Drawing.Design.ToolboxItem" /> インスタンスが等しいかどうかを判断します。</summary>
      <param name="obj">現在の <see cref="T:System.Drawing.Design.ToolboxItem" /> と比較する <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <returns>指定した <see langword="true" /> が現在の <see cref="T:System.Drawing.Design.ToolboxItem" /> と等しい場合は <see cref="T:System.Drawing.Design.ToolboxItem" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Filter">
      <summary>ツールボックス項目が対象のコンポーネントで使用できるかどうかを決定するフィルターを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" /> オブジェクトの <see cref="T:System.ComponentModel.ToolboxItemFilterAttribute" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.FilterPropertyValue(System.String,System.Object)">
      <summary>プロパティ値を返す前に、フィルター処理をします。</summary>
      <param name="propertyName">フィルター処理の対象となるプロパティの名前。</param>
      <param name="value">プロパティのフィルター処理に使用する値。</param>
      <returns>フィルター処理済みのプロパティ値。</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.GetHashCode">
      <summary>このインスタンスのハッシュ コードを返します。</summary>
      <returns>現在の <see cref="T:System.Drawing.Design.ToolboxItem" /> のハッシュ コード。</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.GetType(System.ComponentModel.Design.IDesignerHost)">
      <summary>ツールボックス項目に関連付けられた型にアクセスできるようにします。</summary>
      <param name="host">
        <see cref="T:System.ComponentModel.Design.ITypeResolutionService" /> を照会するためのデザイナー ホスト。</param>
      <returns>ツールボックス項目に関連付けられた型。</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.GetType(System.ComponentModel.Design.IDesignerHost,System.Reflection.AssemblyName,System.String,System.Boolean)">
      <summary>指定した型のインスタンスを作成します。オプションで、指定したデザイナー ホストとアセンブリの名前を使用します。</summary>
      <param name="host">現在のドキュメントの <see cref="T:System.ComponentModel.Design.IDesignerHost" />。 この値は、<see langword="null" /> でもかまいません。</param>
      <param name="assemblyName">読み込む型が含まれるアセンブリを示す <see cref="T:System.Reflection.AssemblyName" />。 この値は、<see langword="null" /> でもかまいません。</param>
      <param name="typeName">インスタンスを作成する型の名前。</param>
      <param name="reference">デザイナー ホストの参照のセットに、指定した型を含むアセンブリへの参照を追加するかどうかを示す値。</param>
      <returns>指定した型が見つかった場合は、その型のインスタンス。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeName" /> が指定されていません。</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Initialize(System.Type)">
      <summary>作成する型を指定して、現在のツールボックス項目を初期化します。</summary>
      <param name="type">ツールボックス項目が作成する <see cref="T:System.Type" />。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> がロックされています。</exception>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.IsTransient">
      <summary>ツールボックス項目が遷移的かどうかを示す値を取得します。</summary>
      <returns>アプリケーションが終了したときに、ツールボックス項目をツールボックス データベースに格納しない場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Lock">
      <summary>ツールボックス項目をロックして、プロパティが変更されないようにします。</summary>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Locked">
      <summary>
        <see cref="T:System.Drawing.Design.ToolboxItem" /> がロックされているかどうかを示す値を取得します。</summary>
      <returns>ツールボックス項目がロックされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.OnComponentsCreated(System.Drawing.Design.ToolboxComponentsCreatedEventArgs)">
      <summary>
        <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreated" /> イベントを発生させます。</summary>
      <param name="args">イベントに対してデータを提供する <see cref="T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs" />。</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.OnComponentsCreating(System.Drawing.Design.ToolboxComponentsCreatingEventArgs)">
      <summary>
        <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreating" /> イベントを発生させます。</summary>
      <param name="args">イベントに対してデータを提供する <see cref="T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs" />。</param>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.OriginalBitmap">
      <summary>この項目のツールボックスに使用する元のビットマップを取得または設定します。</summary>
      <returns>ツールボックスでツールボックス項目を表す <see cref="T:System.Drawing.Bitmap" />。</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Properties">
      <summary>プロパティのディクショナリを取得します。</summary>
      <returns>名前/値ペアのディクショナリ (名前がプロパティ名に、値がプロパティ値になります)。</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Serialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>指定したシリアル化情報オブジェクトに、このツールボックス項目の状態を保存します。</summary>
      <param name="info">保存先の <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context">ストリーム特性を示す <see cref="T:System.Runtime.Serialization.StreamingContext" />。</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>このメンバーの説明については、<see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> メソッドのトピックを参照してください。</summary>
      <param name="info">データの読み込み先となる <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context">このシリアル化のシリアル化先 (<see cref="T:System.Runtime.Serialization.StreamingContext" /> を参照)。</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.ToString">
      <summary>現在の <see cref="T:System.String" /> を表す <see cref="T:System.Drawing.Design.ToolboxItem" /> を返します</summary>
      <returns>現在の <see cref="T:System.Drawing.Design.ToolboxItem" /> を表す <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.TypeName">
      <summary>ツールボックス項目が呼び出されたときに作成する <see cref="T:System.ComponentModel.IComponent" /> の型の完全限定名を取得または設定します。</summary>
      <returns>このツールボックス項目で作成されるコンポーネントの型の完全限定名。</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.ValidatePropertyType(System.String,System.Object,System.Type,System.Boolean)">
      <summary>オブジェクトが特定の型であるかどうかを検証します。</summary>
      <param name="propertyName">検証するプロパティの名前。</param>
      <param name="value">検証の対象となる値 (省略可能)。</param>
      <param name="expectedType">そのプロパティに予測される型。</param>
      <param name="allowNull">
        <see langword="true" /> を許容する場合は <see langword="null" />。それ以外の場合は <see langword="false" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> が <see langword="null" /> で、<paramref name="allowNull" /> が <see langword="false" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> が、<paramref name="expectedType" /> で指定された型に該当しません。</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.ValidatePropertyValue(System.String,System.Object)">
      <summary>プロパティ ディクショナリに割り当てる前にプロパティを検証します。</summary>
      <param name="propertyName">検証するプロパティの名前。</param>
      <param name="value">検証の対象となる値。</param>
      <returns>検証に使用された値。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> が <see langword="null" /> で、<paramref name="propertyName" /> が "IsTransient" です。</exception>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Version">
      <summary>この <see cref="T:System.Drawing.Design.ToolboxItem" /> のバージョンを取得します。</summary>
      <returns>この <see cref="T:System.String" /> のバージョンを指定する <see cref="T:System.Drawing.Design.ToolboxItem" />。</returns>
    </member>
    <member name="T:System.Drawing.Design.ToolboxItemCollection">
      <summary>ツールボックス項目のコレクションを表します。</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.#ctor(System.Drawing.Design.ToolboxItem[])">
      <summary>指定したツールボックス項目の配列を使用して、<see cref="T:System.Drawing.Design.ToolboxItemCollection" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="value">コレクションに格納するツールボックス項目を格納している <see cref="T:System.Drawing.Design.ToolboxItem" /> 型の配列。</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.#ctor(System.Drawing.Design.ToolboxItemCollection)">
      <summary>指定したコレクションを使用して、<see cref="T:System.Drawing.Design.ToolboxItemCollection" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="value">新しいコレクションに格納する <see cref="T:System.Drawing.Design.ToolboxItemCollection" />。</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.Contains(System.Drawing.Design.ToolboxItem)">
      <summary>指定した <see cref="T:System.Drawing.Design.ToolboxItem" /> がコレクションに格納されているかどうかを示します。</summary>
      <param name="value">コレクションで検索する <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <returns>コレクションに指定したオブジェクトが格納されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.CopyTo(System.Drawing.Design.ToolboxItem[],System.Int32)">
      <summary>指定したインデックスを開始位置として、指定した配列にコレクションをコピーします。</summary>
      <param name="array">コピー先の配列。</param>
      <param name="index">コピーの開始位置を示すインデックス。</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.IndexOf(System.Drawing.Design.ToolboxItem)">
      <summary>指定した <see cref="T:System.Drawing.Design.ToolboxItem" /> がコレクション内に存在する場合は、そのインデックスを取得します。</summary>
      <param name="value">コレクション内のインデックスを取得する対象の <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <returns>指定した <see cref="T:System.Drawing.Design.ToolboxItem" /> のインデックス。</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItemCollection.Item(System.Int32)">
      <summary>指定されたインデックス位置にある <see cref="T:System.Drawing.Design.ToolboxItem" /> を取得します。</summary>
      <param name="index">取得または設定するオブジェクトのインデックス。</param>
      <returns>コレクション内の有効な各インデックスにある <see cref="T:System.Drawing.Design.ToolboxItem" />。</returns>
    </member>
    <member name="T:System.Drawing.Design.ToolboxItemCreatorCallback">
      <summary>
        <see cref="T:System.Drawing.Design.ToolboxItem" /> を作成できるコールバック機構を提供します。</summary>
      <param name="serializedObject">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> を作成するデータを含むオブジェクト。</param>
      <param name="format">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> を作成するクリップボード データ形式の名前。</param>
      <returns>
        <paramref name="serializedObject" /> で指定された逆シリアル化 <see cref="T:System.Drawing.Design.ToolboxItem" /> オブジェクト。</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.UCOMITypeLib">
      <summary>代わりに、<see cref="T:System.Runtime.InteropServices.ComTypes.ITypeLib" /> を使用してください。</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)">
      <summary>ヘルプ ファイルのライブラリ ヘルプ トピックのライブラリ ドキュメント文字列、完全なヘルプ ファイル名とパス、およびコンテキスト識別子を取得します。</summary>
      <param name="index">ドキュメントが返される型の説明のインデックス。</param>
      <param name="strName">指定した項目の名前を格納している文字列を返します。</param>
      <param name="strDocString">指定した項目のドキュメント文字列を格納している文字列を返します。</param>
      <param name="dwHelpContext">指定した項目に関連付けられたヘルプ コンテキスト識別子を返します。</param>
      <param name="strHelpFile">ヘルプ ファイルの完全限定名を格納している文字列を返します。</param>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.GetLibAttr(System.IntPtr@)">
      <summary>ライブラリの属性を格納している構造体を取得します。</summary>
      <param name="ppTLibAttr">正常に返された場合は、ライブラリの属性を格納している構造体。</param>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.GetTypeInfoCount">
      <summary>タイプ ライブラリにある型の説明の数を返します。</summary>
      <returns>タイプ ライブラリにある型の説明の数。</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.GetTypeInfoType(System.Int32,System.Runtime.InteropServices.ComTypes.TYPEKIND@)">
      <summary>型の説明の型を取得します。</summary>
      <param name="index">タイプ ライブラリ内の型の説明のインデックス</param>
      <param name="pTKind">型の説明に関する <see langword="TYPEKIND" /> 列挙体への参照。</param>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.IsName(System.String,System.Int32)">
      <summary>渡された文字列がライブラリで記述される型またはメンバーの名前を格納しているかどうかを示します。</summary>
      <param name="szNameBuf">テストする文字列。</param>
      <param name="lHashVal">
        <paramref name="szNameBuf" /> のハッシュ値。</param>
      <returns>
        <paramref name="szNameBuf" /> がタイプ ライブラリに存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.ReleaseTLibAttr(System.IntPtr)">
      <summary>
        <see cref="T:System.Runtime.InteropServices.TYPELIBATTR" /> から初めに取得した <see cref="M:System.Runtime.InteropServices.UCOMITypeLib.GetLibAttr(System.IntPtr@)" /> を解放します。</summary>
      <param name="pTLibAttr">解放する <see langword="TLIBATTR" />。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.AxImporter">
      <summary>ActiveX コントロールをインポートし、デザイナーからアクセスできるラッパーを生成します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.#ctor(System.Windows.Forms.Design.AxImporter.Options)">
      <summary>
        <see cref="T:System.Windows.Forms.Design.AxImporter" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="options">使用する ActiveX コントロール インポーターのオプションを示す <see cref="T:System.Windows.Forms.Design.AxImporter.Options" />。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.AxImporter.IReferenceResolver">
      <summary>ActiveX ライブラリ、COM タイプ ライブラリまたはアセンブリ、あるいはマネージド アセンブリへの参照を解決するメソッドを提供します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveActiveXReference(System.Runtime.InteropServices.UCOMITypeLib)">
      <summary>ActiveX コントロールを含む、指定したタイプ ライブラリへの参照を解決します。</summary>
      <param name="typeLib">解決される参照の参照先の <see cref="T:System.Runtime.InteropServices.UCOMITypeLib" />。</param>
      <returns>アセンブリへの絶対パス。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveComReference(System.Reflection.AssemblyName)">
      <summary>COM コンポーネントを含む、指定したアセンブリへの参照を解決します。</summary>
      <param name="name">解決される参照の参照先のアセンブリを示す <see cref="T:System.Reflection.AssemblyName" />。</param>
      <returns>アセンブリへの絶対パス。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveComReference(System.Runtime.InteropServices.UCOMITypeLib)">
      <summary>COM コンポーネントを含んでいる指定したタイプ ライブラリへの参照を解決します。</summary>
      <param name="typeLib">解決される参照の参照先の <see cref="T:System.Runtime.InteropServices.UCOMITypeLib" />。</param>
      <returns>アセンブリへの絶対パス。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveManagedReference(System.String)">
      <summary>指定したアセンブリへの参照を解決します。</summary>
      <param name="assemName">解決される参照の参照先のアセンブリの名前。</param>
      <returns>アセンブリへの絶対パス。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.AxImporter.Options">
      <summary>
        <see cref="T:System.Windows.Forms.Design.AxImporter" /> のオプションのセットを表します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.Options.#ctor">
      <summary>
        <see cref="T:System.Windows.Forms.Design.AxImporter.Options" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.delaySign">
      <summary>生成されたアセンブリが、厳密な名前を持っていて後で署名されるかどうかを指定します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.genSources">
      <summary>タイプ ライブラリ ラッパーのソースを生成するかどうかを指定します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.ignoreRegisteredOcx">
      <summary>登録されたバージョンに依存せず、コマンド ラインからの入力のみを使用するかどうかを指定します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.keyContainer">
      <summary>生成されたアセンブリの厳密な名前キー コンテナーを格納しているファイルへのパスを指定します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.keyFile">
      <summary>生成されたアセンブリの厳密な名前キーを格納しているファイルへのパスを指定します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.keyPair">
      <summary>生成されたアセンブリに対して使用される厳密な名前を指定します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.msBuildErrors">
      <summary>Microsoft ビルド エンジン (MSBuild) 形式でエラーを出力するかどうかを指定します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.noLogo">
      <summary>コントロールのインポート時に、ActiveX インポーター ツールのロゴを表示するかどうかを指定します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.outputDirectory">
      <summary>生成されたアセンブリの作成先ディレクトリへのパスを指定します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.outputName">
      <summary>ActiveX コントロール ラッパーを生成する対象のファイル名を指定します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.overwriteRCW">
      <summary>アセンブリを生成するときに、既存のファイルを上書きするかどうかを指定します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.publicKey">
      <summary>生成されたアセンブリの署名に使用する公開キーを指定します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.references">
      <summary>アセンブリの生成時に、型と参照を解決するために使用する <see cref="T:System.Windows.Forms.Design.AxImporter.IReferenceResolver" /> を指定します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.silentMode">
      <summary>サイレント モードでコンパイルするかどうかを指定します。サイレント モードは、コンパイル時に表示される情報を限定して生成します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.verboseMode">
      <summary>詳細モードでコンパイルするかどうかを指定します。詳細モードは、コンパイル時に表示される情報をより多く生成します。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.Adorner">
      <summary>ユーザー インターフェイス関連の <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> オブジェクトのコレクションを管理します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.#ctor">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Adorner.BehaviorService">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> に関連付けられている <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> に関連付けられている <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Adorner.Enabled">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> が有効になっているかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Adorner.Glyphs">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> コレクションを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> オブジェクトのコレクション。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.Invalidate">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> を適用して、装飾ウィンドウを最新表示にします。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.Invalidate(System.Drawing.Rectangle)">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> を適用して、指定した <see cref="T:System.Drawing.Rectangle" /> 内で装飾ウィンドウを最新表示にします。</summary>
      <param name="rectangle">無効にする領域。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.Invalidate(System.Drawing.Region)">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> を適用して、指定した <see cref="T:System.Drawing.Region" /> 内で装飾ウィンドウを最新表示にします。</summary>
      <param name="region">無効化する <see cref="T:System.Drawing.Region" />。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.Behavior">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> によって管理される <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> オブジェクトを表します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.#ctor">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.#ctor(System.Boolean,System.Windows.Forms.Design.Behavior.BehaviorService)">
      <summary>指定した <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> を使用して、<see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="callParentBehavior">親動作が存在すると、呼び出す必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="behaviorService">使用する <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callParentBehavior" /> が <see langword="true" /> で、<paramref name="behaviorService" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Behavior.Cursor">
      <summary>この動作に対して表示する必要のあるカーソルを取得します。</summary>
      <returns>この動作に対して表示する必要のあるカーソルを表す <see cref="T:System.Windows.Forms.Cursor" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Behavior.DisableAllCommands">
      <summary>
        <see cref="T:System.ComponentModel.Design.MenuCommand" /> オブジェクトを無効にする必要があるかどうかを示す値を取得します。</summary>
      <returns>
        <see langword="true" />この<see langword="false" /><see cref="T:System.ComponentModel.Design.MenuCommand" /> が<see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />アクティブな場合に、デザイナーが受け取るすべてのオブジェクトの状態を<c>Enabled</c>に設定する必要がある場合は。それ以外の場合は。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.FindCommand(System.ComponentModel.Design.CommandID)">
      <summary>コマンドを受け取ります。</summary>
      <param name="commandId">
        <see cref="T:System.ComponentModel.Design.CommandID" /> オブジェクト。</param>
      <returns>
        <see cref="T:System.ComponentModel.Design.MenuCommand" />。 既定では、<see cref="M:System.Windows.Forms.Design.Behavior.Behavior.FindCommand(System.ComponentModel.Design.CommandID)" /> は <see langword="null" /> を返します。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragDrop(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)">
      <summary>カスタムのドラッグ アンド ドロップ動作を許可します。</summary>
      <param name="g">ドラッグ アンド ドロップ動作を呼び出す <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> オブジェクト。</param>
      <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragEnter(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)">
      <summary>カスタムの領域内へのドラッグ動作を許可します。</summary>
      <param name="g">領域内へのドラッグ動作を呼び出す <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragLeave(System.Windows.Forms.Design.Behavior.Glyph,System.EventArgs)">
      <summary>カスタムの領域外へのドラッグ動作を許可します。</summary>
      <param name="g">領域外へのドラッグ動作を呼び出す <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragOver(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)">
      <summary>カスタムの領域上へのドラッグ動作を許可します。</summary>
      <param name="g">領域上へのドラッグ動作を呼び出す <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnGiveFeedback(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary>カスタムのドラッグ アンド ドロップ フィードバック動作を許可します。</summary>
      <param name="g">ドラッグ アンド ドロップ フィードバック動作を呼び出す <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnLoseCapture(System.Windows.Forms.Design.Behavior.Glyph,System.EventArgs)">
      <summary>マウスのキャプチャが失われたときに装飾ウィンドウによって呼び出されます。</summary>
      <param name="g">ドラッグ アンド ドロップ フィードバック動作を呼び出す <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> の装飾ウィンドウにダブルクリック メッセージが渡されると呼び出されます。</summary>
      <param name="g">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <param name="button">クリックされたボタンを示す <see cref="T:System.Windows.Forms.MouseButtons" /> 値。</param>
      <param name="mouseLoc">クリックが発生した位置。</param>
      <returns>メッセージが処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDown(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> の装飾ウィンドウにマウスダウン メッセージが渡されると呼び出されます。</summary>
      <param name="g">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <param name="button">クリックされたボタンを示す <see cref="T:System.Windows.Forms.MouseButtons" /> 値。</param>
      <param name="mouseLoc">クリックが発生した位置。</param>
      <returns>メッセージが処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseEnter(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> の装飾ウィンドウにマウスエンター メッセージが渡されると呼び出されます。</summary>
      <param name="g">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <returns>メッセージが処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseHover(System.Windows.Forms.Design.Behavior.Glyph,System.Drawing.Point)">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> の装飾ウィンドウにマウスホバー メッセージが渡されると呼び出されます。</summary>
      <param name="g">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <param name="mouseLoc">ホバーが発生した位置。</param>
      <returns>メッセージが処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseLeave(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> の装飾ウィンドウにマウスリーブ メッセージが渡されると呼び出されます。</summary>
      <param name="g">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <returns>メッセージが処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseMove(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> の装飾ウィンドウにマウス移動メッセージが渡されると呼び出されます。</summary>
      <param name="g">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <param name="button">クリックされたボタンを示す <see cref="T:System.Windows.Forms.MouseButtons" /> 値。</param>
      <param name="mouseLoc">移動が発生した位置。</param>
      <returns>メッセージが処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseUp(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons)">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> の装飾ウィンドウにマウスアップ メッセージが渡されると呼び出されます。</summary>
      <param name="g">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <param name="button">クリックされたボタンを示す <see cref="T:System.Windows.Forms.MouseButtons" /> 値。</param>
      <returns>メッセージが処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnQueryContinueDrag(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.QueryContinueDragEventArgs)">
      <summary>装飾ウィンドウから適切な <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> またはヒット テストされた <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> にこのドラッグ アンド ドロップ イベントが送信されます。</summary>
      <param name="g">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" />。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs">
      <summary>
        <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag" /> イベントおよび <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs.#ctor(System.Collections.ICollection)">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="dragComponents">現在ドラッグ中の <see cref="T:System.Collections.ICollection" /> オブジェクトの <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs.DragComponents">
      <summary>現在ドラッグ中の <see cref="T:System.ComponentModel.IComponent" /> オブジェクトのリストを取得します。</summary>
      <returns>現在ドラッグ中の <see cref="T:System.Collections.ICollection" /> オブジェクトの <see cref="T:System.ComponentModel.IComponent" />。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventHandler">
      <summary>
        <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag" /> の <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag" /> イベントおよび <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> イベントを処理するメソッドを表します。 このクラスは継承できません。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs" />。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorService">
      <summary>デザイナーのユーザー インターフェイスを管理します。 このクラスは継承できません。</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorService.Adorners">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> を取得します。</summary>
      <returns>Adorner のコレクション</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowGraphics">
      <summary>装飾ウィンドウの <see cref="T:System.Drawing.Graphics" /> を取得します。</summary>
      <returns>装飾ウィンドウの <see cref="T:System.Drawing.Graphics" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowPointToScreen(System.Drawing.Point)">
      <summary>装飾ウィンドウの <see cref="T:System.Drawing.Point" /> を画面座標に変換します。</summary>
      <param name="p">変換する <see cref="T:System.Drawing.Point" /> 値。</param>
      <returns>画面座標に変換された <see cref="T:System.Drawing.Point" /> の値。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowToScreen">
      <summary>画面座標での装飾ウィンドウの位置を取得します。</summary>
      <returns>装飾ウィンドウの左上隅からの、画面座標での位置。</returns>
    </member>
    <member name="E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> がドラッグ アンド ドロップ操作を開始すると発生します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.ControlRectInAdornerWindow(System.Windows.Forms.Control)">
      <summary>
        <see cref="T:System.Drawing.Rectangle" /> の境界 <see cref="T:System.Windows.Forms.Control" /> を返します。</summary>
      <param name="c">移動する <see cref="T:System.Windows.Forms.Control" />。</param>
      <returns>装飾ウィンドウ座標に平行移動された <see cref="T:System.Drawing.Rectangle" /> の境界を表す <see cref="T:System.Windows.Forms.Control" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.ControlToAdornerWindow(System.Windows.Forms.Control)">
      <summary>装飾ウィンドウ座標に平行移動された <see cref="T:System.Windows.Forms.Control" /> の位置を返します。</summary>
      <param name="c">移動する <see cref="T:System.Windows.Forms.Control" />。</param>
      <returns>装飾ウィンドウ座標における <paramref name="c" /> の位置を示す <see cref="T:System.Drawing.Point" /> の値。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorService.CurrentBehavior">
      <summary>動作スタックの先頭にある <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> を削除せずに取得します。</summary>
      <returns>動作スタックの先頭にある <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Dispose">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> によって使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> がドラッグ操作を完了すると発生します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.GetNextBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>動作スタック内の指定された <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> の直後にある <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> を返します。</summary>
      <param name="behavior">返す <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> の前にある <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />。</param>
      <returns>動作スタック内で <paramref name="behavior" /> の直後にある <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />。次に続く動作がない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Invalidate">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> の装飾ウィンドウを無効にします。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Invalidate(System.Drawing.Rectangle)">
      <summary>装飾ウィンドウ内の、<see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> の指定された領域を無効にします。</summary>
      <param name="rect">無効にする四角形領域。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Invalidate(System.Drawing.Region)">
      <summary>装飾ウィンドウ内の、<see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> の指定された領域を無効にします。</summary>
      <param name="r">無効にする領域。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.MapAdornerWindowPoint(System.IntPtr,System.Drawing.Point)">
      <summary>ハンドルの座標システムの位置を装飾ウィンドウ座標に変換します。</summary>
      <param name="handle">装飾ウィンドウのハンドル。</param>
      <param name="pt">ハンドルの座標システムの <see cref="T:System.Drawing.Point" />。</param>
      <returns>装飾ウィンドウ座標の <see cref="T:System.Drawing.Point" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.PopBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>スタックの先頭にある <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> を削除し、返します。</summary>
      <param name="behavior">スタックから削除する <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />。</param>
      <returns>スタックから削除された <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> スタックが空です。</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.PushBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>動作スタックに <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> をプッシュします。</summary>
      <param name="behavior">プッシュする <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="behavior" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.PushCaptureBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>動作スタックに <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> をプッシュし、動作に対してマウスのキャプチャを割り当てます。</summary>
      <param name="behavior">プッシュする <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="behavior" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.ScreenToAdornerWindow(System.Drawing.Point)">
      <summary>画面座標の位置が <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> の装飾ウィンドウ座標に変換されます。</summary>
      <param name="p">変換する <see cref="T:System.Drawing.Point" /> 値。</param>
      <returns>装飾ウィンドウ座標に変換された <see cref="T:System.Drawing.Point" /> の値。</returns>
    </member>
    <member name="E:System.Windows.Forms.Design.Behavior.BehaviorService.Synchronize">
      <summary>現在の選択項目を更新する必要がある場合に発生します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.SyncSelection">
      <summary>すべての選択グリフを同期させます。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection">
      <summary>厳密に型指定されたコレクションに <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> オブジェクトを格納します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.#ctor(System.Windows.Forms.Design.Behavior.Adorner[])">
      <summary>指定した配列を使用して、<see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="value">コレクションに読み込む <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 型の配列。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.#ctor(System.Windows.Forms.Design.Behavior.BehaviorService)">
      <summary>指定した <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 参照を使用して、<see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="behaviorService">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 参照。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.#ctor(System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection)">
      <summary>既存の <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> を使用して、<see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="value">コレクションへの読み込み元の <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Add(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary>指定した値の <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> を <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> に追加します。</summary>
      <param name="value">コレクションの末尾に追加する <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />。</param>
      <returns>新しい要素が挿入された位置のインデックス。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.AddRange(System.Windows.Forms.Design.Behavior.Adorner[])">
      <summary>配列の要素を <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> の末尾にコピーします。</summary>
      <param name="value">コレクションの末尾にコピーする <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 型の配列。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.AddRange(System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection)">
      <summary>別の <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> の内容をコレクションの末尾に追加します。</summary>
      <param name="value">コレクションの末尾に追加する <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Contains(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary>指定した <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> が <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> に格納されているかどうかを示す値を取得します。</summary>
      <param name="value">検索する <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />。</param>
      <returns>
        <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> がコレクションに含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" /></returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.CopyTo(System.Windows.Forms.Design.Behavior.Adorner[],System.Int32)">
      <summary>1 次元の <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> の指定したインデックス位置に <see cref="T:System.Array" /> の値をコピーします。</summary>
      <param name="array">
        <see cref="T:System.Array" /> の値のコピー先である 1 次元の <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />。</param>
      <param name="index">
        <paramref name="array" /> 内のコピー開始位置を示すインデックス。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> が多次元です。
または
<see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> の要素数が、<paramref name="index" /> と <paramref name="array" /> の末尾との間に格納できる数を超えています。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> は <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> は、<paramref name="array" /> の下限を下回っています。</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.GetEnumerator">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> インスタンスを反復処理できる列挙子を返します。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> インスタンスの <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.IndexOf(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 内の <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> のインデックスを返します。</summary>
      <param name="value">検索する <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />。</param>
      <returns>見つかった場合は、<see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> における <paramref name="value" /> の <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> のインデックス。それ以外の場合は -1。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Insert(System.Int32,System.Windows.Forms.Design.Behavior.Adorner)">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 内の指定したインデックス位置に、<see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> を挿入します。</summary>
      <param name="index">
        <paramref name="value" /> を挿入する位置の 0 から始まるインデックス番号。</param>
      <param name="value">挿入する <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Item(System.Int32)">
      <summary>指定したインデックスにある要素を取得または設定します。</summary>
      <param name="index">要素の、0 から始まるインデックス。</param>
      <returns>
        <paramref name="index" /> で指定された <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 要素。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Remove(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> から特定の <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> を削除します。</summary>
      <param name="value">
        <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> から削除する <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> がコレクション内で見つかりません。</exception>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> に対する反復処理をサポートします。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.#ctor(System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection)">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="mappings">列挙子を作成する対象の <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.Current">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 内の現在の要素を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 内の現在の要素。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.MoveNext">
      <summary>列挙子を <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> の次の要素に進めます。</summary>
      <returns>列挙子が次の要素に正常に進んだ場合は <see langword="true" />。列挙子がコレクションの末尾を越えた場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.Reset">
      <summary>列挙子を初期位置、つまりコレクションの最初の要素の前に設定します。</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.System#Collections#IEnumerator#Current">
      <summary>このメンバーの説明については、<see cref="P:System.Collections.IEnumerator.Current" /> プロパティを参照してください。</summary>
      <returns>コレクション内の現在の <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.ComponentGlyph">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> をコンポーネントに関連付けます。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.#ctor(System.ComponentModel.IComponent)">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.ComponentGlyph" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="relatedComponent">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> を関連付けるコンポーネント。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.#ctor(System.ComponentModel.IComponent,System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.ComponentGlyph" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="relatedComponent">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> を関連付けるコンポーネント。</param>
      <param name="behavior">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> を関連付ける <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.GetHitTest(System.Drawing.Point)">
      <summary>指定したポイントでのマウス クリックが <see cref="T:System.Windows.Forms.Design.Behavior.ComponentGlyph" /> によって処理されるかどうかを示します。</summary>
      <param name="p">ヒット テストを行うポイント。</param>
      <returns>
        <see cref="T:System.Windows.Forms.Cursor" /> が <paramref name="p" /> に関連付けられている場合は <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。それ以外の場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.Paint(System.Windows.Forms.PaintEventArgs)">
      <summary>描画ロジックを提供します。</summary>
      <param name="pe">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> の <see cref="P:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowGraphics" /> を格納している <see cref="T:System.Windows.Forms.PaintEventArgs" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.ComponentGlyph.RelatedComponent">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> に関連付けられているコンポーネントを取得します。</summary>
      <returns>
        <see cref="T:System.ComponentModel.IComponent" /> に関連付けられた <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> をコントロールに関連付けます。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.#ctor(System.Drawing.Rectangle,System.Windows.Forms.Cursor,System.ComponentModel.IComponent,System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="bounds">
        <see cref="T:System.Drawing.Rectangle" /> の境界を表す <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <param name="cursor">マウス ポインターが <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> の上にある場合に表示されるカーソルを表す <see cref="T:System.Windows.Forms.Cursor" />。</param>
      <param name="relatedComponent">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> を関連付けるコンポーネント。</param>
      <param name="behavior">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> を関連付ける <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.#ctor(System.Drawing.Rectangle,System.Windows.Forms.Cursor,System.ComponentModel.IComponent,System.Windows.Forms.Design.ControlDesigner)">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="bounds">
        <see cref="T:System.Drawing.Rectangle" /> の境界を表す <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <param name="cursor">マウス ポインターが <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> の上にある場合に表示されるカーソルを表す <see cref="T:System.Windows.Forms.Cursor" />。</param>
      <param name="relatedComponent">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> を関連付けるコンポーネント。</param>
      <param name="designer">
        <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> を関連付ける <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.Bounds">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> の範囲を取得します。</summary>
      <returns>
        <see cref="T:System.Drawing.Rectangle" /> の範囲を表す <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.GetHitTest(System.Drawing.Point)">
      <summary>指定したポイントでのマウス クリックが <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> によって処理されるかどうかを示します。</summary>
      <param name="p">ヒット テストを行うポイント。</param>
      <returns>
        <see cref="T:System.Windows.Forms.Cursor" /> が <paramref name="p" /> に関連付けられている場合は <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。それ以外の場合は <see langword="null" />。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.Glyph">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> によって管理される単一のユーザー インターフェイス (UI) エンティティを表します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.#ctor(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="behavior">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> に関連付けられている <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。 <see langword="null" /> の可能性があります。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Glyph.Behavior">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> に関連付けられている <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> に関連付けられている <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。動作がない場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Glyph.Bounds">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> の範囲を取得します。</summary>
      <returns>
        <see cref="T:System.Drawing.Rectangle" /> の範囲を表す <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.GetHitTest(System.Drawing.Point)">
      <summary>ヒット テストのロジックを提供します。</summary>
      <param name="p">ヒット テストを行うポイント。</param>
      <returns>
        <see cref="T:System.Windows.Forms.Cursor" /> が <paramref name="p" /> に関連付けられている場合は <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。それ以外の場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.Paint(System.Windows.Forms.PaintEventArgs)">
      <summary>描画ロジックを提供します。</summary>
      <param name="pe">イベント データを格納している <see cref="T:System.Windows.Forms.PaintEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.SetBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> に関連付けられている <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> を変更します。</summary>
      <param name="behavior">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> に関連付ける <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.GlyphCollection">
      <summary>厳密に型指定されたコレクションに <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> オブジェクトを格納します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.#ctor">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.#ctor(System.Windows.Forms.Design.Behavior.Glyph[])">
      <summary>指定した <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> 配列を使用して、<see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="value">コレクションに読み込む <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 型の配列。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.#ctor(System.Windows.Forms.Design.Behavior.GlyphCollection)">
      <summary>別の <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> に基づいて、<see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="value">コレクションに読み込む <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Add(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>指定した値の <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> を <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> に追加します。</summary>
      <param name="value">コレクションの末尾に追加する <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <returns>新しい要素が挿入された位置のインデックス。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.AddRange(System.Windows.Forms.Design.Behavior.Glyph[])">
      <summary>配列の要素を <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> の末尾にコピーします。</summary>
      <param name="value">コレクションの末尾にコピーする <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 型の配列。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.AddRange(System.Windows.Forms.Design.Behavior.GlyphCollection)">
      <summary>別の <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> の内容をコレクションの末尾に追加します。</summary>
      <param name="value">コレクションの末尾に追加する <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Contains(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>指定した <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> が <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> に格納されているかどうかを示す値を取得します。</summary>
      <param name="value">検索する <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <returns>
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> がコレクションに含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.CopyTo(System.Windows.Forms.Design.Behavior.Glyph[],System.Int32)">
      <summary>1 次元の <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> の指定したインデックス位置に <see cref="T:System.Array" /> の値をコピーします。</summary>
      <param name="array">
        <see cref="T:System.Array" /> の値のコピー先である 1 次元の <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />。</param>
      <param name="index">
        <paramref name="array" /> 内のコピー開始位置を示すインデックス。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.IndexOf(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 内の <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> のインデックスを返します。</summary>
      <param name="value">検索する <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <returns>見つかった場合は、<see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> における <paramref name="value" /> の <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> のインデックス。それ以外の場合は -1。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Insert(System.Int32,System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> を <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> 内の指定されたインデックス位置に挿入します。</summary>
      <param name="index">
        <paramref name="value" /> を挿入する位置の 0 から始まるインデックス番号。</param>
      <param name="value">挿入する <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.GlyphCollection.Item(System.Int32)">
      <summary>指定したインデックスにある要素を取得または設定します。</summary>
      <param name="index">要素の、0 から始まるインデックス。</param>
      <returns>指定したインデックス位置にある <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 要素。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Remove(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> から特定の <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> を削除します。</summary>
      <param name="value">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> から削除する <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> のデザイナーの選択状態を表します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.GlyphSelectionType.NotSelected">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> が選択されていません。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.GlyphSelectionType.Selected">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> が選択されています。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.GlyphSelectionType.SelectedPrimary">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> が主要選択になっています。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.SnapLine">
      <summary>コンテナー内のコントロールのデザイン時にレイアウト操作を支援するために、ユーザー インターフェイス (UI) に動的に作成される水平の線分と垂直の線分を表します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32)">
      <summary>スナップ線の種類とオフセットを指定して、<see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="type">作成する <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" />。 スナップ線の相対的な位置と方向を表します。</param>
      <param name="offset">所有しているコントロールの左上隅の原点に対する、スナップ線のピクセル単位の位置。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32,System.String)">
      <summary>スナップ線の種類、オフセット、およびフィルター名を指定して、<see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="type">作成する <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" />。 スナップ線の相対的な位置と方向を表します。</param>
      <param name="offset">所有しているコントロールの左上隅の原点に対する、スナップ線のピクセル単位の位置。</param>
      <param name="filter">プログラマが定義したスナップ線のカテゴリを指定するために使用する <see cref="T:System.String" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32,System.String,System.Windows.Forms.Design.Behavior.SnapLinePriority)">
      <summary>スナップ線の種類、オフセット、フィルター名、および優先順位を指定して、<see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="type">作成する <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" />。 スナップ線の相対的な位置と方向を表します。</param>
      <param name="offset">所有しているコントロールの左上隅の原点に対する、スナップ線のピクセル単位の位置。</param>
      <param name="filter">プログラマが定義したスナップ線のカテゴリを指定するために使用する <see cref="T:System.String" />。</param>
      <param name="priority">スナップ線の <see cref="T:System.Windows.Forms.Design.Behavior.SnapLinePriority" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32,System.Windows.Forms.Design.Behavior.SnapLinePriority)">
      <summary>スナップ線の種類、オフセット、および優先順位を指定して、<see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="type">作成する <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" />。 スナップ線の相対的な位置と方向を表します。</param>
      <param name="offset">所有しているコントロールの左上隅の原点に対する、スナップ線のピクセル単位の位置。</param>
      <param name="priority">スナップ線の <see cref="T:System.Windows.Forms.Design.Behavior.SnapLinePriority" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.AdjustOffset(System.Int32)">
      <summary>スナップ線の <see cref="P:System.Windows.Forms.Design.Behavior.SnapLine.Offset" /> プロパティを調整します。</summary>
      <param name="adjustment">スナップ線のオフセットを変更するためのピクセル数。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.Filter">
      <summary>このスナップ線に関連付けられている、プログラマが定義したフィルター カテゴリを取得します。</summary>
      <returns>フィルター カテゴリを定義する <see cref="T:System.String" />。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.IsHorizontal">
      <summary>スナップ線が水平方向かどうかを示す値を取得します。</summary>
      <returns>スナップ線が水平の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.IsVertical">
      <summary>スナップ線が垂直方向かどうかを示す値を取得します。</summary>
      <returns>スナップ線が垂直の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.Offset">
      <summary>関連付けられたコントロールの原点からのスナップ線のオフセットをピクセル数で取得します。</summary>
      <returns>スナップ線のオフセット (ピクセル単位)。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.Priority">
      <summary>スナップ線の相対的な優先順位を示す値を取得します。</summary>
      <returns>スナップ線の優先順位カテゴリを表す <see cref="T:System.Windows.Forms.Design.Behavior.SnapLinePriority" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.ShouldSnap(System.Windows.Forms.Design.Behavior.SnapLine,System.Windows.Forms.Design.Behavior.SnapLine)">
      <summary>指定した <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> が別の <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> とスナップする必要があるかどうかを示す値を返します。</summary>
      <param name="line1">指定された <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />。</param>
      <param name="line2">指定した <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> のスナップ対象となる <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />。</param>
      <returns>
        <paramref name="line1" /> を <paramref name="line2" /> にスナップする必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.SnapLineType">
      <summary>大まかな位置と方向を示す、スナップ線の種類を取得します。</summary>
      <returns>スナップ線の方向と、コントロールの端に対する大まかな相対位置を表す <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.ToString">
      <summary>現在のスナップ線の文字列形式を返します。</summary>
      <returns>現在の <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> を表す <see cref="T:System.String" />。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.SnapLinePriority">
      <summary>スナップ線の相対的な重要度を指定します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.Always">
      <summary>現在のすべてのスナップ線の中で最も高い優先順位に相当する優先順位カテゴリです。 このカテゴリのスナップ線は常にアクティブになることを表します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.High">
      <summary>優先順位が最も高いカテゴリです。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.Low">
      <summary>優先順位が最も低いカテゴリです。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.Medium">
      <summary>優先順位が中間のカテゴリです。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.SnapLineType">
      <summary>スナップ線の方向と相対的な位置を指定します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Baseline">
      <summary>通常、コントロールの基本的な内部機能に関連付けられた水平のスナップ線です。たとえば、<see cref="T:System.Windows.Forms.Label" /> コントロールの文字列の基本の線になります。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Bottom">
      <summary>通常、コントロールの下端に合わせて配置される水平のスナップ線です。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Horizontal">
      <summary>通常、コントロールの端に関連付けられない水平のスナップ線です。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Left">
      <summary>通常、コントロールの左端に合わせて配置される垂直のスナップ線です。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Right">
      <summary>通常、コントロールの右端に合わせて配置される垂直のスナップ線です。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Top">
      <summary>通常、コントロールの上端に合わせて配置される水平のスナップ線です。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Vertical">
      <summary>通常、コントロールの端に関連付けられない垂直のスナップ線です。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ComponentActionsType" />
    <member name="F:System.Windows.Forms.Design.ComponentActionsType.All" />
    <member name="F:System.Windows.Forms.Design.ComponentActionsType.Component" />
    <member name="F:System.Windows.Forms.Design.ComponentActionsType.Service" />
    <member name="T:System.Windows.Forms.Design.ComponentDocumentDesigner">
      <summary>入れ子になったコンポーネントをサポートするルート デザイン ドキュメントのデザイン モードの動作を拡張するための基本デザイナー クラス。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.#ctor">
      <summary>
        <see cref="T:System.Windows.Forms.Design.ComponentDocumentDesigner" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.Control">
      <summary>デザイナーのコントロールを取得します。</summary>
      <returns>デザイナーが編集している <see cref="T:System.Windows.Forms.Control" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.Dispose(System.Boolean)">
      <summary>
        <see cref="T:System.Windows.Forms.Design.ComponentDocumentDesigner" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary>指定したツールがデザイナーでサポートされているかどうかを示す値を取得します。</summary>
      <param name="tool">ツールボックスでのサポートを確認するために使用する <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <returns>ツールがツールボックスで有効になる場合は <see langword="true" />。ドキュメント デザイナーがツールの使用方法を認識しない場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>コンポーネントを指定して、デザイナーを初期化します。</summary>
      <param name="component">デザイナーに関連付ける <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>
        <see cref="T:System.ComponentModel.TypeDescriptor" /> を通じてコンポーネントが公開するプロパティのセットを調整します。</summary>
      <param name="properties">コンポーネントのクラスのプロパティが格納されている <see cref="T:System.Collections.IDictionary" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#IRootDesigner#GetView(System.ComponentModel.Design.ViewTechnology)">
      <summary>このメンバーの説明については、<see cref="T:System.ComponentModel.Design.ViewTechnology" /> のトピックを参照してください。</summary>
      <param name="technology">特定のビュー技術を示す <see cref="T:System.ComponentModel.Design.ViewTechnology" />。</param>
      <returns>デザイナーのビューを表すオブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#IRootDesigner#SupportedTechnologies">
      <summary>このメンバーの詳細については、「<see cref="P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies" />」をご覧ください。</summary>
      <returns>サポートされている <see cref="T:System.ComponentModel.Design.ViewTechnology" /> 値の配列。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#ITypeDescriptorFilterService#FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)">
      <summary>このメンバーの詳細については、「<see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />」をご覧ください。</summary>
      <param name="component">属性をフィルター処理する対象のコンポーネント。</param>
      <param name="attributes">変更できる属性のディクショナリ。</param>
      <returns>フィルター処理した一連の属性をキャッシュに保存する場合は <see langword="true" />。フィルター サービスが再照会する必要がある場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#ITypeDescriptorFilterService#FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)">
      <summary>このメンバーの説明については、<see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" /> のトピックを参照してください。</summary>
      <param name="component">イベントをフィルター処理する対象のコンポーネント。</param>
      <param name="events">変更できるイベントのディクショナリ。</param>
      <returns>フィルター処理した一連のイベントをキャッシュに保存する場合は <see langword="true" />。フィルター サービスが再照会する必要がある場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#ITypeDescriptorFilterService#FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)">
      <summary>このメンバーの詳細については、「<see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />」をご覧ください。</summary>
      <param name="component">プロパティをフィルター処理する対象のコンポーネント。</param>
      <param name="properties">変更できるプロパティのディクショナリ。</param>
      <returns>フィルター処理した一連のプロパティをキャッシュに保存する場合は <see langword="true" />。フィルター サービスが再照会する必要がある場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#Drawing#Design#IToolboxUser#GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary>このメンバーの詳細については、「<see cref="M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)" />」をご覧ください。</summary>
      <param name="tool">ツールボックスでサポートされているかどうかをテストする対象の <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <returns>ツールボックスでツールがサポートされていて有効にできる場合は <see langword="true" />。ドキュメント デザイナーでツールの使用方法が認識されない場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#Drawing#Design#IToolboxUser#ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary>このメンバーの詳細については、「<see cref="M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)" />」をご覧ください。</summary>
      <param name="tool">選択する <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.TrayAutoArrange">
      <summary>デザイナーのコンポーネント トレイが自動配置モードであるかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see langword="true" />デザイナーのコンポーネントトレイが自動配置モードの場合は。それ以外<see langword="false" />の場合は。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.TrayLargeIcon">
      <summary>デザイナーのコンポーネント トレイが大きいアイコンを使うモードかどうかを示す値を、取得または設定します。</summary>
      <returns>コンポーネント トレイが大きいアイコンを使うモードである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ComponentTray">
      <summary>デザイナーのコンポーネント トレイの動作を提供します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.#ctor(System.ComponentModel.Design.IDesigner,System.IServiceProvider)">
      <summary>指定したデザイナーおよびサービス プロバイダーを使用して、<see cref="T:System.Windows.Forms.Design.ComponentTray" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="mainDesigner">現在のプロジェクトの主なデザイナーまたはドキュメント デザイナーである <see cref="T:System.ComponentModel.Design.IDesigner" />。</param>
      <param name="serviceProvider">デザイン時サービスを取得するために使用できる <see cref="T:System.IServiceProvider" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.AddComponent(System.ComponentModel.IComponent)">
      <summary>コンポーネントをトレイに追加します。</summary>
      <param name="component">トレイに追加する <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentTray.AutoArrange">
      <summary>トレイの項目を自動的に配置するかどうかを示す値を取得または設定します。</summary>
      <returns>トレイの項目を自動的に配置する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.CanCreateComponentFromTool(System.Drawing.Design.ToolboxItem)">
      <summary>指定したツールを使用して新しいコンポーネントを作成できるかどうかを示す値を取得します。</summary>
      <param name="tool">テスト対象の <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <returns>指定したツールを使用してコンポーネントを作成できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.CanDisplayComponent(System.ComponentModel.IComponent)">
      <summary>指定したコンポーネントを表示できるかどうかを示す値を取得します。</summary>
      <param name="component">テスト対象の <see cref="T:System.ComponentModel.IComponent" />。</param>
      <returns>コンポーネントを表示できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentTray.ComponentCount">
      <summary>トレイに格納されているコンポーネントの数を取得します。</summary>
      <returns>トレイ内のコンポーネントの数。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.CreateComponentFromTool(System.Drawing.Design.ToolboxItem)">
      <summary>指定したツールボックス項目からコンポーネントを作成し、そのコンポーネントを現在のドキュメントに追加して、コンポーネント トレイのコンポーネントを表示します。</summary>
      <param name="tool">コンポーネントの作成元の <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.DisplayError(System.Exception)">
      <summary>指定した例外に関する情報と共にエラー メッセージをユーザーに表示します。</summary>
      <param name="e">情報を表示する例外。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.Dispose(System.Boolean)">
      <summary>
        <see cref="T:System.Windows.Forms.Design.ComponentTray" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetLocation(System.ComponentModel.IComponent)">
      <summary>コンポーネント トレイの左上隅に対して相対的に、指定したコンポーネントの位置を取得します。</summary>
      <param name="receiver">位置を取得する対象の <see cref="T:System.ComponentModel.IComponent" />。</param>
      <returns>指定したコンポーネントの座標を示す <see cref="T:System.Drawing.Point" />。または、指定したコンポーネントがコンポーネント トレイで見つからない場合は空の <see cref="T:System.Drawing.Point" />。 空の <see cref="T:System.Drawing.Point" /> の <see cref="P:System.Drawing.Point.IsEmpty" /> プロパティは <see langword="true" /> に等しく、通常、<see cref="P:System.Drawing.Point.X" /> プロパティおよび <see cref="P:System.Drawing.Point.Y" /> プロパティはそれぞれ 0 です。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetNextComponent(System.ComponentModel.IComponent,System.Boolean)">
      <summary>このメソッドは、<see cref="M:System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)" /> と同じように、起点のコンポーネントを指定するとトレイ内でその次にあるコンポーネントを返します。</summary>
      <param name="component">列挙を開始するコンポーネント。</param>
      <param name="forward">リストの順方向に列挙する場合は <see langword="true" />。逆方向に列挙する場合は <see langword="false" />。</param>
      <returns>コンポーネント トレイ内の次のコンポーネント。リストの最後 (<paramref name="forward" /> が <see langword="null" /> の場合は最初) に到達した場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetService(System.Type)">
      <summary>要求したサービスの型を取得します。</summary>
      <param name="serviceType">取得するサービスの型。</param>
      <returns>要求したサービスのインスタンス。サービスが見つからない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetTrayLocation(System.ComponentModel.IComponent)">
      <summary>
        <see langword="Location" /> エクステンダー プロパティの値を取得します。</summary>
      <param name="receiver">位置エクステンダー プロパティを受け取る <see cref="T:System.ComponentModel.IComponent" />。</param>
      <returns>
        <paramref name="receiver" /> の位置を表す <see cref="T:System.Drawing.Point" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.IsTrayComponent(System.ComponentModel.IComponent)">
      <summary>コンポーネント トレイにコンポーネントが存在するかどうかをテストします。</summary>
      <param name="comp">コンポーネント トレイ内に存在するかどうかをテストするコンポーネント。</param>
      <returns>
        <paramref name="comp" /> がトレイに表示される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary>オブジェクトをドラッグして、コンポーネント トレイにドロップすると呼び出されます。</summary>
      <param name="de">イベントに対してデータを提供する <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary>オブジェクトをコンポーネント トレイ上にドラッグし、コンポーネント トレイ上の領域に入れると呼び出されます。</summary>
      <param name="de">イベントに対してデータを提供する <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragLeave(System.EventArgs)">
      <summary>オブジェクトをコンポーネント トレイ上の領域からドラッグすると呼び出されます。</summary>
      <param name="e">イベントに対してデータを提供する <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary>コンポーネント トレイ上にオブジェクトをドラッグすると呼び出されます。</summary>
      <param name="de">イベントに対してデータを提供する <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary>OLE ドラッグ アンド ドロップ操作中に呼び出されて、オブジェクトを特定の位置にドロップした結果について、コンポーネント トレイからユーザーにフィードバックを返せるようにします。</summary>
      <param name="gfevent">イベントに対してデータを提供する <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.Layout" /> イベントを発生させます。</summary>
      <param name="levent">イベント データを格納している <see cref="T:System.Windows.Forms.LayoutEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnLostCapture">
      <summary>マウス ドラッグによる選択操作がキャンセルされると呼び出されます。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
      <summary>コンポーネント トレイ上でマウスをダブルクリックすると呼び出されます。</summary>
      <param name="e">イベントに対してデータを提供する <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>マウス ボタンが押されると呼び出されます。</summary>
      <param name="e">イベントに対してデータを提供する <see cref="T:System.Windows.Forms.MouseEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>マウス カーソルの位置を変更すると呼び出されます。</summary>
      <param name="e">イベントに対してデータを提供する <see cref="T:System.Windows.Forms.MouseEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>マウス ボタンを離すと呼び出されます。</summary>
      <param name="e">イベントに対してデータを提供する <see cref="T:System.Windows.Forms.MouseEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>コンポーネント トレイのビューを再表示する必要があるときに呼び出されます。</summary>
      <param name="pe">イベントに対してデータを提供する <see cref="T:System.Windows.Forms.PaintEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnSetCursor">
      <summary>マウス カーソルを設定するために呼び出されます。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.RemoveComponent(System.ComponentModel.IComponent)">
      <summary>指定したコンポーネントをトレイから削除します。</summary>
      <param name="component">トレイから削除する <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.SetLocation(System.ComponentModel.IComponent,System.Drawing.Point)">
      <summary>指定したコンポーネントの位置を、指定した位置に設定します。</summary>
      <param name="receiver">位置を設定する対象の <see cref="T:System.ComponentModel.IComponent" />。</param>
      <param name="location">指定したコンポーネントの新しい位置を示す <see cref="T:System.Drawing.Point" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.SetTrayLocation(System.ComponentModel.IComponent,System.Drawing.Point)">
      <summary>
        <see langword="Location" /> エクステンダー プロパティの値を設定します。</summary>
      <param name="receiver">位置エクステンダー プロパティを受け取る <see cref="T:System.ComponentModel.IComponent" />。</param>
      <param name="location">
        <paramref name="receiver" /> の位置を表す <see cref="T:System.Drawing.Point" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentTray.ShowLargeIcons">
      <summary>トレイが、大きいアイコン表示でトレイ内の各コンポーネントを表すかどうかを示す値を取得または設定します。</summary>
      <returns>大きいアイコンで表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.System#ComponentModel#IExtenderProvider#CanExtend(System.Object)">
      <summary>このメンバーの説明については、<see cref="M:System.ComponentModel.IExtenderProvider.CanExtend(System.Object)" /> のトピックを参照してください。</summary>
      <param name="extendee">エクステンダー プロパティを受け取るオブジェクト。</param>
      <returns>オブジェクトが、指定したオブジェクトに対してエクステンダー プロパティを提供できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.WndProc(System.Windows.Forms.Message@)">
      <summary>Windows メッセージを処理します。</summary>
      <param name="m">処理対象の <see cref="T:System.Windows.Forms.Message" />。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.ControlDesigner">
      <summary>
        <see cref="T:System.Windows.Forms.Control" /> のデザイン モードの動作を拡張します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.#ctor">
      <summary>
        <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ControlDesigner.accessibilityObj">
      <summary>デザイナーのアクセシビリティ オブジェクトを指定します。</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.AccessibilityObject">
      <summary>コントロールに割り当てられた <see cref="T:System.Windows.Forms.AccessibleObject" /> を取得します。</summary>
      <returns>コントロールに割り当てられた <see cref="T:System.Windows.Forms.AccessibleObject" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.AssociatedComponents">
      <summary>デザイナーで管理されているコンポーネントに関連付けられているコンポーネントのコレクションを取得します。</summary>
      <returns>デザイナーで管理されているコンポーネントに関連付けられているコンポーネント。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.AutoResizeHandles">
      <summary>
        <see cref="P:System.Windows.Forms.Control.AutoSize" /> プロパティの値に基づいてサイズ変更ハンドルを割り当てるかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="P:System.Windows.Forms.Control.AutoSize" /> プロパティと <see langword="true" /> プロパティの値に基づいてサイズ変更ハンドルを割り当てる場合は <see langword="AutoSizeMode" />。それ以外の場合は <see langword="false" /> です。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.BaseWndProc(System.Windows.Forms.Message@)">
      <summary>Windows メッセージを処理します。</summary>
      <param name="m">処理対象の <see cref="T:System.Windows.Forms.Message" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.BehaviorService">
      <summary>デザイン環境から <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> です。サービスを利用できない場合は <see langword="null" /> です。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.CanBeParentedTo(System.ComponentModel.Design.IDesigner)">
      <summary>このデザイナーのコントロールが、指定したデザイナーのコントロールを親として持つことができるかどうかを示します。</summary>
      <param name="parentDesigner">チェック対象のコントロールを管理する <see cref="T:System.ComponentModel.Design.IDesigner" />。</param>
      <returns>指定したデザイナーで管理されるコントロールがこのデザイナーで管理されるコントロールの親になることができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.Control">
      <summary>デザイナーがデザインするコントロールを取得します。</summary>
      <returns>デザイナーがデザインするコントロール。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject">
      <summary>
        <see cref="T:System.Windows.Forms.AccessibleObject" /> の <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> を提供します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.#ctor(System.Windows.Forms.Design.ControlDesigner,System.Windows.Forms.Control)">
      <summary>デザイナーとコントロールを指定して、<see cref="T:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="designer">アクセスできるオブジェクトの <see cref="T:System.Windows.Forms.Design.ControlDesigner" />。</param>
      <param name="control">アクセスできるオブジェクトの <see cref="T:System.Windows.Forms.Control" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Bounds">
      <summary>デザイナーのユーザー補助オブジェクトの境界を定義するポイントを取得します。</summary>
      <returns>デザイナーのユーザー補助オブジェクトの境界を示す <see cref="T:System.Drawing.Rectangle" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.DefaultAction">
      <summary>指定したオブジェクトの既定のアクションを説明する文字列を取得します。</summary>
      <returns>指定したオブジェクトの既定のアクションの説明。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Description">
      <summary>指定したオブジェクトの外観を説明する文字列を取得します。</summary>
      <returns>ユーザーから見たオブジェクトの外観の説明。説明がない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetChild(System.Int32)">
      <summary>指定されたインデックスに対応するアクセス可能な子を取得します。</summary>
      <param name="index">アクセス可能な子の 0 から始まるインデックス。</param>
      <returns>指定したインデックスに対応する子ユーザー補助オブジェクトを表す <see cref="T:System.Windows.Forms.AccessibleObject" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetChildCount">
      <summary>ユーザー補助オブジェクトに属する子の数を取得します。</summary>
      <returns>ユーザー補助オブジェクトに属する子の数。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetFocused">
      <summary>キーボード フォーカスを持つオブジェクトを取得します。</summary>
      <returns>現在フォーカスを取得している子を示す <see cref="T:System.Windows.Forms.AccessibleObject" />。 オブジェクト自体がフォーカスを取得している場合は、呼び出し元のオブジェクトを返します。 どのオブジェクトにもフォーカスがない場合は、<see langword="null" /> を返します。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetSelected">
      <summary>現在選択されている子を取得します。</summary>
      <returns>現在選択されている子を表す <see cref="T:System.Windows.Forms.AccessibleObject" />。 オブジェクト自体が選択されている場合は、呼び出し元のオブジェクトを返します。 現在選択されている子がなく、オブジェクト自体がフォーカスを受け取っていない場合は、<see langword="null" /> を返します。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.HitTest(System.Int32,System.Int32)">
      <summary>指定した画面座標にある子オブジェクトを取得します。</summary>
      <param name="x">水平画面座標。</param>
      <param name="y">垂直画面座標。</param>
      <returns>指定した画面座標にある子オブジェクトを表す <see cref="T:System.Windows.Forms.AccessibleObject" />。 オブジェクト自体が指定した位置にある場合は、呼び出し元のオブジェクトを返します。 テスト位置にオブジェクトがない場合は、<see langword="null" /> を返します。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Name">
      <summary>オブジェクト名を取得または設定します。</summary>
      <returns>オブジェクト名。設定されていない場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Parent">
      <summary>ユーザー補助オブジェクトの親を取得します。</summary>
      <returns>ユーザー補助オブジェクトの親を表す <see cref="T:System.Windows.Forms.AccessibleObject" />。親オブジェクトがない場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Role">
      <summary>ユーザー補助オブジェクトのロールを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.AccessibleRole" /> 値の 1 つ。役割が指定されていない場合は <see cref="F:System.Windows.Forms.AccessibleRole.None" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.State">
      <summary>ユーザー補助オブジェクトの状態を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.AccessibleStates" /> 値の 1 つ。状態が設定されていない場合は <see cref="F:System.Windows.Forms.AccessibleStates.None" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Value">
      <summary>ユーザー補助オブジェクトの値を取得または設定します。</summary>
      <returns>ユーザー補助オブジェクトの値 (オブジェクトに設定された値がない場合は <see langword="null" />)。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.DefWndProc(System.Windows.Forms.Message@)">
      <summary>Windows メッセージの既定の処理を提供します。</summary>
      <param name="m">処理対象の <see cref="T:System.Windows.Forms.Message" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.DisplayError(System.Exception)">
      <summary>指定した例外に関する情報をユーザーに表示します。</summary>
      <param name="e">表示する <see cref="T:System.Exception" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.Dispose(System.Boolean)">
      <summary>
        <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.EnableDesignMode(System.Windows.Forms.Control,System.String)">
      <summary>子コントロールに対するデザイン時の機能を有効にします。</summary>
      <param name="child">デザイン モードを有効にする子コントロール。</param>
      <param name="name">エンド ユーザーに公開する <paramref name="child" /> の名前。</param>
      <returns>デザイン時に子コントロールを有効にできる場合は <see langword="true" /> です。ホストのインフラストラクチャがサポートしていない場合は <see langword="false" /> です。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="child" /> または <paramref name="name" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.EnableDragDrop(System.Boolean)">
      <summary>デザイン中のコントロールに対して、ドラッグ アンド ドロップのサポートを有効または無効にします。</summary>
      <param name="value">コントロールのドラッグ アンド ドロップのサポートを有効にする場合は <see langword="true" />。コントロールのドラッグ アンド ドロップのサポートを行わない場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.EnableDragRect">
      <summary>ドラッグ四角形をこのデザイナー コンポーネントに描画できるかどうかを示す値を取得します。</summary>
      <returns>ドラッグ四角形を描画できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.GetControlGlyph(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary>このコントロールのバインドを表す <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> を返します。</summary>
      <param name="selectionType">選択の状態を指定する <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> 値。</param>
      <returns>このコントロールのバインドを表す <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.GetGlyphs(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary>標準コントロールの選択境界線とグラブ ハンドルを表す <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> オブジェクトのコレクションを取得します。</summary>
      <param name="selectionType">選択の状態を指定する <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> 値。</param>
      <returns>
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> オブジェクトのコレクション。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.GetHitTest(System.Drawing.Point)">
      <summary>指定した点でのマウス クリックがコントロールによって処理されるかどうかを示します。</summary>
      <param name="point">マウスがクリックされた位置を画面座標で示す <see cref="T:System.Drawing.Point" />。</param>
      <returns>指定した点でのクリックがコントロールによって処理される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.HookChildControls(System.Windows.Forms.Control)">
      <summary>指定したコントロールの子コントロールからのメッセージをデザイナーにルーティングします。</summary>
      <param name="firstChild">処理対象の最初の子 <see cref="T:System.Windows.Forms.Control" />。 このメソッドは、コントロールの子に対して再帰的に自分自身を呼び出す場合があります。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.InheritanceAttribute">
      <summary>デザイナーの <see cref="T:System.ComponentModel.InheritanceAttribute" /> を取得します。</summary>
      <returns>デザイナーがルート デザイナーの場合は <see cref="F:System.ComponentModel.InheritanceAttribute.Inherited" /> です。それ以外の場合は親デザイナーの <see cref="P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute" /> プロパティの値です。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>コンポーネントを指定して、デザイナーを初期化します。</summary>
      <param name="component">デザイナーを関連付ける対象の <see cref="T:System.ComponentModel.IComponent" />。 このコンポーネントは、常に、<see cref="T:System.Windows.Forms.Control" /> のインスタンスであるか、そこから派生している必要があります。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.InitializeExistingComponent(System.Collections.IDictionary)">
      <summary>既存のコンポーネントを再初期化します。</summary>
      <param name="defaultValues">プロパティに適用する既定値の名前/値のディクショナリ。 既定値を指定しない場合は <see langword="null" /> にします。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.InitializeNewComponent(System.Collections.IDictionary)">
      <summary>新しく作成したコンポーネントを初期化します。</summary>
      <param name="defaultValues">プロパティに適用する既定値の名前/値のディクショナリ。 既定値を指定しない場合は <see langword="null" /> にします。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.InternalControlDesigner(System.Int32)">
      <summary>
        <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> の指定されたインデックス位置の内部コントロール デザイナーを返します。</summary>
      <param name="internalControlIndex">内部コントロール デザイナーを選択するために指定するインデックス。 このインデックスは 0 から始まります。</param>
      <returns>指定したインデックス位置にある <see cref="T:System.Windows.Forms.Design.ControlDesigner" />。</returns>
    </member>
    <member name="F:System.Windows.Forms.Design.ControlDesigner.InvalidPoint">
      <summary>無効な <see cref="T:System.Drawing.Point" /> の値を表すローカルの <see cref="T:System.Drawing.Point" /> を定義します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.NumberOfInternalControlDesigners">
      <summary>
        <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> 内の内部コントロール デザイナーの数を返します。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> 内の内部コントロール デザイナーの数です。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnContextMenu(System.Int32,System.Int32)">
      <summary>コンテキスト メニューを表示し、コンテキスト メニューが表示される直前に追加処理を実行する機会を提供します。</summary>
      <param name="x">コンテキスト メニューを表示する位置の x 座標。</param>
      <param name="y">コンテキスト メニューを表示する位置の y 座標。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnCreateHandle">
      <summary>制御ハンドルが作成された直後に、追加処理を実行する機会を提供します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragComplete(System.Windows.Forms.DragEventArgs)">
      <summary>ドラッグ アンド ドロップ操作をクリーンアップするための呼び出しを受信します。</summary>
      <param name="de">イベントに対してデータを提供する <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary>ドラッグ アンド ドロップ オブジェクトがコントロールのデザイナー ビューにドロップされると呼び出しを受信します。</summary>
      <param name="de">イベントに対してデータを提供する <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary>ドラッグ アンド ドロップ操作がコントロールのデザイナー ビューに入ると呼び出しを受信します。</summary>
      <param name="de">イベントに対してデータを提供する <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragLeave(System.EventArgs)">
      <summary>ドラッグ アンド ドロップ操作がコントロールのデザイナー ビューを離れると呼び出しを受信します。</summary>
      <param name="e">イベントに対してデータを提供する <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary>ドラッグ アンド ドロップ オブジェクトがコントロールのデザイナー ビュー上にドラッグされると呼び出しを受信します。</summary>
      <param name="de">イベントに対してデータを提供する <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary>ドラッグ アンド ドロップの操作中に呼び出しを受信し、ドラッグ操作のマウスの位置に基づいてビジュアル キューを提供します。</summary>
      <param name="e">イベントに対してデータを提供する <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragBegin(System.Int32,System.Int32)">
      <summary>コンポーネント上でマウスの左ボタンをしばらく押したままにすると応答して呼び出しを受信します。</summary>
      <param name="x">マウスの位置の x 座標 (画面座標)。</param>
      <param name="y">マウスの位置の y 座標 (画面座標)。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragEnd(System.Boolean)">
      <summary>ドラッグ アンド ドロップ操作の終了時に呼び出しを受信し、操作を完了またはキャンセルします。</summary>
      <param name="cancel">ドラッグをキャンセルする場合は <see langword="true" />。ドラッグをコミットする場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragMove(System.Int32,System.Int32)">
      <summary>ドラッグ アンド ドロップ操作中にマウスが移動するたびに呼び出しを受信します。</summary>
      <param name="x">マウスの位置の x 座標 (画面座標)。</param>
      <param name="y">マウスの位置の y 座標 (画面座標)。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseEnter">
      <summary>マウスが最初にコントロールに入ると呼び出しを受信します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseHover">
      <summary>マウスがコントロールの上にあるときに呼び出しを受信します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseLeave">
      <summary>マウスが最初にコントロールに入ると呼び出しを受信します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnPaintAdornments(System.Windows.Forms.PaintEventArgs)">
      <summary>デザイナーが管理しているコントロールが表面を描画したときに呼び出しを受信し、デザイナーがコントロールの一番上に追加の表示要素を描画できるようにします。</summary>
      <param name="pe">デザイナーがコントロールに描画するために使用できる <see cref="T:System.Windows.Forms.PaintEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnSetComponentDefaults">
      <summary>デザイナーが初期化されるときに呼び出されます。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnSetCursor">
      <summary>カーソルを設定する必要があるたびに呼び出しを受信します。</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ParentComponent">
      <summary>
        <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> の親コンポーネントを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> の親コンポーネントです。親コンポーネントがない場合は <see langword="null" /> です。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ParticipatesWithSnapLines">
      <summary>ドラッグ操作中に <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> でスナップ線を配置できるかどうかを示す値を取得します。</summary>
      <returns>プライマリ ドラッグ コントロールが <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> の上にあるときに、このデザイナーでドラッグ操作中にスナップ線を配置できる場合は <see langword="true" /> です。それ以外の場合は <see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>
        <see cref="T:System.ComponentModel.TypeDescriptor" /> を通じてコンポーネントが公開するプロパティのセットを調整します。</summary>
      <param name="properties">コンポーネントのクラスのプロパティが格納されている <see cref="T:System.Collections.IDictionary" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.SelectionRules">
      <summary>コンポーネントの移動機能を示す選択規則を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.Design.SelectionRules" /> 値のビットごとの組み合わせ。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.SnapLines">
      <summary>このコントロールの有効な配置ポイントを表す <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> オブジェクトの一覧を取得します。</summary>
      <returns>このコントロールの有効な配置ポイントを表す <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> オブジェクトの一覧。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.UnhookChildControls(System.Windows.Forms.Control)">
      <summary>指定したコントロールの子に対するメッセージを親デザイナーではなく各コントロールにルーティングします。</summary>
      <param name="firstChild">処理対象の最初の子 <see cref="T:System.Windows.Forms.Control" />。 このメソッドは、コントロールの子に対して再帰的に自分自身を呼び出す場合があります。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.WndProc(System.Windows.Forms.Message@)">
      <summary>Windows メッセージを処理し、必要に応じてコントロールにルーティングします。</summary>
      <param name="m">処理対象の <see cref="T:System.Windows.Forms.Message" />。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.DesignerActionListsChangedEventArgs">
      <summary>
        <see cref="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DesignerActionListsChangedEventArgs.#ctor(System.Object,System.Windows.Forms.Design.DesignerActionListsChangedType,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>関連オブジェクト、変更の種類、および関連オブジェクトの残りのアクション リストを指定して、<see cref="T:System.Windows.Forms.Design.DesignerActionListsChangedEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="relatedObject">関連するオブジェクト。</param>
      <param name="changeType">変更の種類を指定する列挙値の 1 つ。</param>
      <param name="actionLists">関連するオブジェクトの残りのアクション リストを表すコレクション。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerActionListsChangedEventArgs.ActionLists">
      <summary>関連するオブジェクトの残りのアクション リストを含むコレクションを取得します。</summary>
      <returns>関連するオブジェクトの残りのアクションリストを含むコレクションです。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerActionListsChangedEventArgs.ChangeType">
      <summary>イベントを発生させる原因となった変更の種類を取得します。</summary>
      <returns>変更の種類を指定する列挙値の1つ。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerActionListsChangedEventArgs.RelatedObject">
      <summary>イベントに関連付けられているオブジェクトを取得します。</summary>
      <returns>イベントに関連付けられているオブジェクト。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.DesignerActionListsChangedEventHandler">
      <param name="sender" />
      <param name="e" />
    </member>
    <member name="T:System.Windows.Forms.Design.DesignerActionListsChangedType" />
    <member name="F:System.Windows.Forms.Design.DesignerActionListsChangedType.ActionListsAdded" />
    <member name="F:System.Windows.Forms.Design.DesignerActionListsChangedType.ActionListsRemoved" />
    <member name="T:System.Windows.Forms.Design.DesignerActionUIService" />
    <member name="E:System.Windows.Forms.Design.DesignerActionUIService.DesignerActionUIStateChange" />
    <member name="M:System.Windows.Forms.Design.DesignerActionUIService.Dispose" />
    <member name="M:System.Windows.Forms.Design.DesignerActionUIService.HideUI(System.ComponentModel.IComponent)">
      <param name="component" />
    </member>
    <member name="M:System.Windows.Forms.Design.DesignerActionUIService.Refresh(System.ComponentModel.IComponent)">
      <param name="component" />
    </member>
    <member name="M:System.Windows.Forms.Design.DesignerActionUIService.ShouldAutoShow(System.ComponentModel.IComponent)">
      <param name="component" />
    </member>
    <member name="M:System.Windows.Forms.Design.DesignerActionUIService.ShowUI(System.ComponentModel.IComponent)">
      <param name="component" />
    </member>
    <member name="T:System.Windows.Forms.Design.DesignerCommandSet" />
    <member name="M:System.Windows.Forms.Design.DesignerCommandSet.#ctor" />
    <member name="P:System.Windows.Forms.Design.DesignerCommandSet.ActionLists" />
    <member name="M:System.Windows.Forms.Design.DesignerCommandSet.GetCommands(System.String)">
      <param name="name" />
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerCommandSet.Verbs" />
    <member name="T:System.Windows.Forms.Design.DesignerOptions">
      <summary>デザイナーのオプション値の取得と設定へのアクセスを提供します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DesignerOptions.#ctor">
      <summary>
        <see cref="T:System.Windows.Forms.Design.DesignerOptions" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.EnableInSituEditing">
      <summary>
        <see cref="T:System.Windows.Forms.ToolStrip" /> コントロールのインプレース編集を有効または無効にする値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.ToolStrip" /> コントロールのインプレース編集が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.GridSize">
      <summary>グリッド単位の大きさを表す <see cref="T:System.Drawing.Size" /> を取得または設定します。</summary>
      <returns>グリッド単位の大きさを表す <see cref="T:System.Drawing.Size" /> です。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.ObjectBoundSmartTagAutoShow">
      <summary>作成時にコンポーネントのスマート タグ パネルをデザイナーに自動的に表示するかどうかを指定する値を取得または設定します。</summary>
      <returns>作成時にコンポーネントのスマート タグ パネルが自動的に開く場合は <see langword="true" /> です。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.ShowGrid">
      <summary>デザイナーのグリッドを有効または無効にする値を取得または設定します。</summary>
      <returns>グリッドが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.SnapToGrid">
      <summary>グリッド座標にコントロールを自動的に配置する機能を有効または無効にする値を取得または設定します。</summary>
      <returns>スナップが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.UseOptimizedCodeGeneration">
      <summary>コンポーネント キャッシュを有効または無効にする値を取得または設定します。</summary>
      <returns>コンポーネント キャッシュが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.UseSmartTags">
      <summary>デザイナーのスマート タグを有効または無効にする値を取得または設定します。</summary>
      <returns>デザイナーのスマート タグが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.UseSnapLines">
      <summary>デザイナーのスナップ線を有効または無効にする値を取得または設定します。</summary>
      <returns>デザイナーのスナップ線が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.DocumentDesigner">
      <summary>入れ子になったコントロールをサポートし、スクロール メッセージを受け取る <see cref="T:System.Windows.Forms.Control" /> に対して、デザイン モード動作を拡張し、ルートレベルのデザイン モード ビューを提供するための基本デザイナー クラス。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.#ctor">
      <summary>
        <see cref="T:System.Windows.Forms.Design.DocumentDesigner" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.Dispose(System.Boolean)">
      <summary>
        <see cref="T:System.Windows.Forms.Design.DocumentDesigner" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.EnsureMenuEditorService(System.ComponentModel.IComponent)">
      <summary>メニュー エディター サービスが存在するかどうかを確認し、まだ存在しない場合は作成します。</summary>
      <param name="c">確認対象の <see cref="T:System.ComponentModel.IComponent" /> にコンテキスト メニュー サービスがあります。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.GetGlyphs(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> オブジェクトを表す <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> を取得します。</summary>
      <param name="selectionType">選択の状態を指定する <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> 値。</param>
      <returns>
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> オブジェクトのコレクション。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary>指定したツールがデザイナーでサポートされているかどうかを示します。</summary>
      <param name="tool">ツールボックスでのサポートを確認するために使用する <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <returns>ツールがツールボックスで有効になる場合は <see langword="true" />。ドキュメント デザイナーがツールの使用方法を認識しない場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>コンポーネントを指定して、デザイナーを初期化します。</summary>
      <param name="component">デザイナーに関連付ける <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="F:System.Windows.Forms.Design.DocumentDesigner.menuEditorService">
      <summary>menuEditorService 変数を <see langword="null" /> に初期化します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.OnContextMenu(System.Int32,System.Int32)">
      <summary>コンテキスト メニューを表示する必要があるときに呼び出されます。</summary>
      <param name="x">コンテキスト メニューを表示する位置の水平画面座標。</param>
      <param name="y">コンテキスト メニューを表示する位置の垂直画面座標。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.OnCreateHandle">
      <summary>デザイナーのハンドルが作成された直後に呼び出されます。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>
        <see cref="T:System.ComponentModel.TypeDescriptor" /> を通じてコンポーネントが公開するプロパティのセットを調整します。</summary>
      <param name="properties">コンポーネントのクラスのプロパティが格納されている <see cref="T:System.Collections.IDictionary" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.DocumentDesigner.SelectionRules">
      <summary>デザイナーの <see cref="T:System.Windows.Forms.Design.SelectionRules" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.Design.SelectionRules" /> 値のビットごとの組み合わせ。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.System#ComponentModel#Design#IRootDesigner#GetView(System.ComponentModel.Design.ViewTechnology)">
      <summary>このメンバーの詳細については、「<see cref="T:System.ComponentModel.Design.ViewTechnology" />」をご覧ください。</summary>
      <param name="technology">特定のビュー技術を示す <see cref="T:System.ComponentModel.Design.ViewTechnology" />。</param>
      <returns>デザイナーのビューを表すオブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DocumentDesigner.System#ComponentModel#Design#IRootDesigner#SupportedTechnologies">
      <summary>このメンバーの詳細については、「<see cref="P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies" />」をご覧ください。</summary>
      <returns>サポートされている <see cref="T:System.ComponentModel.Design.ViewTechnology" /> 値の配列。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.System#Drawing#Design#IToolboxUser#GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary>このメンバーの詳細については、「<see cref="M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)" />」をご覧ください。</summary>
      <param name="tool">ツールボックスでサポートされているかどうかをテストする対象の <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <returns>ツールボックスでツールがサポートされていて有効にできる場合は <see langword="true" />。ドキュメント デザイナーでツールの使用方法が認識されない場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.System#Drawing#Design#IToolboxUser#ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary>このメンバーの詳細については、「<see cref="M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)" />」をご覧ください。</summary>
      <param name="tool">選択する <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary>指定したツールを選択します。</summary>
      <param name="tool">コンポーネントを作成する対象の <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.WndProc(System.Windows.Forms.Message@)">
      <summary>Windows メッセージを処理します。</summary>
      <param name="m">処理対象の <see cref="T:System.Windows.Forms.Message" />。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.EventHandlerService">
      <summary>現在のドキュメントのイベント ハンドラーを系統的に管理する手段を提供します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.#ctor(System.Windows.Forms.Control)">
      <summary>
        <see cref="T:System.Windows.Forms.Design.EventHandlerService" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="focusWnd">デザイン中の <see cref="T:System.Windows.Forms.Control" />。</param>
    </member>
    <member name="E:System.Windows.Forms.Design.EventHandlerService.EventHandlerChanged">
      <summary>OnEventHandlerChanged イベントを発生させます。</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.EventHandlerService.FocusWindow">
      <summary>イベント ハンドラーがアタッチされるコントロールを取得します。</summary>
      <returns>コンストラクターによってアタッチされた <see cref="T:System.Windows.Forms.Control" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.GetHandler(System.Type)">
      <summary>指定された種類の、現在アクティブなイベント ハンドラーを取得します。</summary>
      <param name="handlerType">取得するハンドラーの種類。</param>
      <returns>ハンドラーのインスタンス。要求された種類のハンドラーがない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.PopHandler(System.Object)">
      <summary>指定されたハンドラーをスタックから削除します。</summary>
      <param name="handler">スタックから削除するハンドラー。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.PushHandler(System.Object)">
      <summary>スタックに新しいイベント ハンドラーをプッシュします。</summary>
      <param name="handler">スタックに追加するハンドラー。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.IContainsThemedScrollbarWindows">
      <summary>Visual Studio デザイナーで表示するときに取得するウィンドウのスクロール バーがどのように構成される必要があるかという情報を取得するメソッドを定義します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.IContainsThemedScrollbarWindows.ThemedScrollbarWindows">
      <summary>Visual Studio デザイナーで表示される際、ウィンドウとどのようにスクロール バーが構成される必要があるかを示す <see cref="T:System.Windows.Forms.Design.ThemedScrollbarWindow" /> オブジェクトの列挙体を取得します。</summary>
      <returns>Visual Studio デザイナーで表示される際、ウィンドウとどのようにスクロール バーにテーマが設定される必要があるかを示す列挙型オブジェクト。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ImageListCodeDomSerializer">
      <summary>文字列ディクショナリをシリアル化します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListCodeDomSerializer.#ctor">
      <summary>
        <see cref="T:System.Windows.Forms.Design.ImageListCodeDomSerializer" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>指定したシリアル化された CodeDOM (Code Document Object Model) オブジェクトを逆シリアル化してオブジェクトに戻します。</summary>
      <param name="manager">逆シリアル化処理中に使用されるシリアル化マネージャー インターフェイス。</param>
      <param name="codeObject">逆シリアル化の対象となる、シリアル化された CodeDOM オブジェクト。</param>
      <returns>逆シリアル化された CodeDOM オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> または <paramref name="codeObject" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>指定されたオブジェクトを CodeDOM (Code Document Object Model) オブジェクトにシリアル化します。</summary>
      <param name="manager">シリアル化時に使用するシリアル化マネージャー。</param>
      <param name="value">シリアル化するオブジェクト。</param>
      <returns>シリアル化されたオブジェクトを表す CodeDOM オブジェクト。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.IMenuEditorService">
      <summary>メニュー編集サービスにアクセスできるようにします。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.IMenuEditorService.GetMenu">
      <summary>現在のメニューを取得します。</summary>
      <returns>現在の <see cref="T:System.Windows.Forms.Menu" /> です。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.IMenuEditorService.IsActive">
      <summary>現在のメニューがアクティブかどうかを示します。</summary>
      <returns>現在のメニューがアクティブである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.IMenuEditorService.MessageFilter(System.Windows.Forms.Message@)">
      <summary>エディター サービスが Win32 メッセージを受け取ることができるようにします。</summary>
      <param name="m">処理対象の <see cref="T:System.Windows.Forms.Message" />。</param>
      <returns>そのメッセージがコントロール用である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.IMenuEditorService.SetMenu(System.Windows.Forms.Menu)">
      <summary>指定したメニューをフォームに表示するように設定します。</summary>
      <param name="menu">レンダリングする <see cref="T:System.Windows.Forms.Menu" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.IMenuEditorService.SetSelection(System.Windows.Forms.MenuItem)">
      <summary>現在のメニューで選択されているメニュー項目を設定します。</summary>
      <param name="item">現在選択されているメニュー項目として設定する <see cref="T:System.Windows.Forms.MenuItem" />。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.MenuCommands">
      <summary>それぞれホスト環境によって提供されたコマンド関数に対応する <see cref="T:System.ComponentModel.Design.CommandID" /> フィールドのセットを定義します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.MenuCommands.#ctor">
      <summary>
        <see cref="T:System.Windows.Forms.Design.MenuCommands" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.ComponentTrayMenu">
      <summary>コンポーネント トレイ メニューにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.ContainerMenu">
      <summary>コンテナー メニューにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.DesignerProperties">
      <summary>デザイナーのプロパティ ページにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.EditLabel">
      <summary>ラベル編集ハンドラーにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyCancel">
      <summary>キャンセル キー ハンドラーにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyDefaultAction">
      <summary>既定のキー ハンドラーにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyEnd">
      <summary>End キー ハンドラーにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyHome">
      <summary>Home キー ハンドラーにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyInvokeSmartTag">
      <summary>スマート タグの呼び出しハンドラーにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveDown">
      <summary>下移動キー ハンドラーにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveLeft">
      <summary>左移動キー ハンドラーにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveRight">
      <summary>右移動キー ハンドラーにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveUp">
      <summary>上移動キー ハンドラーにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeDown">
      <summary>ナッジ下キー ハンドラーにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeHeightDecrease">
      <summary>ナッジ高さ減少キー ハンドラーにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeHeightIncrease">
      <summary>ナッジ高さ増加キー ハンドラーにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeLeft">
      <summary>ナッジ左キー ハンドラーにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeRight">
      <summary>ナッジ右キー ハンドラーにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeUp">
      <summary>ナッジ上キー ハンドラーにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeWidthDecrease">
      <summary>ナッジ幅減少キー ハンドラーにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeWidthIncrease">
      <summary>ナッジ幅増加キー ハンドラーにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyReverseCancel">
      <summary>反転キャンセル キー ハンドラーにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySelectNext">
      <summary>次選択キー ハンドラーにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySelectPrevious">
      <summary>前選択キー ハンドラーにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyShiftEnd">
      <summary>Shift + End キー ハンドラーにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyShiftHome">
      <summary>Shift + Home キー ハンドラーにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeHeightDecrease">
      <summary>サイズ高さ減少キー ハンドラーにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeHeightIncrease">
      <summary>サイズ高さ増加キー ハンドラーにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeWidthDecrease">
      <summary>サイズ幅減少キー ハンドラーにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeWidthIncrease">
      <summary>サイズ幅増加キー ハンドラーにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyTabOrderSelect">
      <summary>タブ オーダー選択キー ハンドラーにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.SelectionMenu">
      <summary>選択メニューにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.SetStatusRectangle">
      <summary>ステータスを表す四角形を設定するために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.SetStatusText">
      <summary>ステータスを表す四角形のテキストを設定するために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.TraySelectionMenu">
      <summary>トレイ選択メニューにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ParentControlDesigner">
      <summary>入れ子にされたコントロールをサポートする <see cref="T:System.Windows.Forms.Control" /> のデザイン モードの動作を拡張します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.#ctor">
      <summary>
        <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.AddPaddingSnapLines(System.Collections.ArrayList@)">
      <summary>埋め込みスナップ線を追加します。</summary>
      <param name="snapLines">
        <see cref="T:System.Collections.ArrayList" /> オブジェクトを格納している <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.AllowControlLasso">
      <summary>選択されたコントロールに親が再指定されるかどうかを示す値を取得します。</summary>
      <returns>デザイナー画面上でなげなわツールによってコントロールが選択された場合に、このデザイナーのコントロールが親になるようにする場合は <see langword="true" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.AllowGenericDragBox">
      <summary>ツールボックス項目をデザイナー画面にドラッグしたときに、ジェネリック ダイアログ ボックスを描画するかどうかを示す値を取得します。</summary>
      <returns>ツールボックス項目をデザイナー画面にドラッグしたときにジェネリック ダイアログ ボックスを描画する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.AllowSetChildIndexOnDrop">
      <summary>ドラッグしたコントロールを <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" /> にドロップしたときに、ドラッグしたコントロールの z オーダーを維持するかどうかを示す値を取得します。</summary>
      <returns>ドラッグしたコントロールを <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" /> にドロップしたときに、ドラッグしたコントロールの z オーダーを維持する場合は <see langword="true" />。それ以外の場合は、<see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CanAddComponent(System.ComponentModel.IComponent)">
      <summary>親コンテナーにコンポーネントが追加されたときに呼び出されます。</summary>
      <param name="component">エラーがないかどうかを調べる対象のコンポーネント。</param>
      <returns>
        <paramref name="component" /> を追加できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CanParent(System.Windows.Forms.Control)">
      <summary>指定したコントロールをこのデザイナーによって管理されるコントロールの子にできるかどうかを示します。</summary>
      <param name="control">テスト対象の <see cref="T:System.Windows.Forms.Control" />。</param>
      <returns>指定したコントロールをこのデザイナーによって管理されるコントロールの子にできる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CanParent(System.Windows.Forms.Design.ControlDesigner)">
      <summary>指定したデザイナーによって管理されるコントロールを、このデザイナーによって管理されるコントロールの子にできるかどうかを示します。</summary>
      <param name="controlDesigner">テスト対象のコントロールのデザイナー。</param>
      <returns>指定したデザイナーによって管理されるコントロールをこのデザイナーによって管理されるコントロールの子にできる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem)">
      <summary>指定したツールからコンポーネントまたはコントロールを作成し、それを現在のデザイン ドキュメントに追加します。</summary>
      <param name="tool">コンポーネントの作成元の <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem,System.Drawing.Point)">
      <summary>指定したツールからコンポーネントまたはコントロールを作成し、それを現在のデザイン ドキュメントの指定した位置に追加します。</summary>
      <param name="tool">コンポーネントの作成元の <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <param name="location">コンポーネントを中心に配置する、デザイン時ビューの画面座標の <see cref="T:System.Drawing.Point" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem,System.Drawing.Rectangle)">
      <summary>指定したツールからコンポーネントまたはコントロールを作成し、それを現在のデザイン ドキュメントの指定した四角形の境界内に追加します。</summary>
      <param name="tool">コンポーネントの作成元の <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <param name="bounds">ツールから作成されたコンポーネントの位置とサイズを示す <see cref="T:System.Drawing.Rectangle" />。 <see cref="P:System.Drawing.Rectangle.X" /> の <see cref="P:System.Drawing.Rectangle.Y" /> 値と <see cref="T:System.Drawing.Rectangle" /> 値は、コンポーネントの左上隅のデザイン時ビューの画面座標を示します。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateToolCore(System.Drawing.Design.ToolboxItem,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>すべての <see cref="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem)" /> メソッドのコア機能を提供します。</summary>
      <param name="tool">コンポーネントの作成元の <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <param name="x">サイズが指定されている場合は、ツールの左端の位置のデザイン時ビュー座標の水平位置。サイズが指定されていない場合は、ツールの中心のデザイン時ビュー座標の水平位置。</param>
      <param name="y">サイズが指定されている場合は、ツールの上端の位置のデザイン時ビュー座標の垂直位置。サイズが指定されていない場合は、ツールの中心のデザイン時ビュー座標の垂直位置。</param>
      <param name="width">ツールの幅。 <paramref name="hasSize" /> パラメーターが <see langword="false" /> に設定されている場合、このパラメーターは無視されます。</param>
      <param name="height">ツールの高さ。 <paramref name="hasSize" /> パラメーターが <see langword="false" /> に設定されている場合、このパラメーターは無視されます。</param>
      <param name="hasLocation">コンポーネントの位置が指定されている場合は <see langword="true" />。コンポーネントが現在選択されているコントロールの中心に配置される場合は <see langword="false" />。</param>
      <param name="hasSize">コンポーネントのサイズが指定されている場合は <see langword="true" />。コンポーネントの既定の高さの値と幅の値が使用される場合は <see langword="false" />。</param>
      <returns>ツールから作成されたコンポーネントの配列。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.DefaultControlLocation">
      <summary>デザイナーに追加されたコントロールの既定の位置を取得します。</summary>
      <returns>デザイナーに追加されたコントロールの既定の位置を示す <see cref="T:System.Drawing.Point" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.Dispose(System.Boolean)">
      <summary>
        <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" /> が使用しているアンマネージド リソースを解放します。オプションとして、マネージド リソースを解放することもできます。</summary>
      <param name="disposing">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.DrawGrid">
      <summary>このデザイナーのコントロールにグリッドを描画するかどうかを示す値を取得または設定します。</summary>
      <returns>デザイナーのコントロールにグリッドを描画する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.EnableDragRect">
      <summary>デザイナーによってドラッグ四角形が描画されるかどうかを示す値を取得します。</summary>
      <returns>ドラッグ四角形が描画される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetControl(System.Object)">
      <summary>指定したコンポーネントのデザイナーからコントロールを取得します。</summary>
      <param name="component">コントロールを取得する対象のコンポーネント。</param>
      <returns>指定したコンポーネントが属する <see cref="T:System.Windows.Forms.Control" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetControlGlyph(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary>コントロールの境界を表す本体グリフを取得します。</summary>
      <param name="selectionType">選択の状態を指定する <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> 値。</param>
      <returns>コントロールの境界を表す本体グリフ。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetGlyphs(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary>標準コントロールの選択境界線とグラブ ハンドルを表す <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> オブジェクトのコレクションを取得します。</summary>
      <param name="selectionType">選択の状態を指定する <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> 値。</param>
      <returns>
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> オブジェクトのコレクション。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetParentForComponent(System.ComponentModel.IComponent)">
      <summary>コンポーネントを追加する際に、デザイン中のコントロール、または <see cref="T:System.ComponentModel.Container" /> が返されるかどうかを判断するために、派生クラスで使用されます。</summary>
      <param name="component">親 <see cref="T:System.Windows.Forms.Control" /> を取得する対象のコンポーネント。</param>
      <returns>
        <see cref="T:System.Windows.Forms.Control" /> コンポーネントの親。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetUpdatedRect(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Boolean)">
      <summary>グリッド配置モードが有効な場合は、指定した四角形の位置をグリッドの配置に合わせて更新します。</summary>
      <param name="originalRect">更新されるコンポーネントの初期位置を示す <see cref="T:System.Drawing.Rectangle" />。</param>
      <param name="dragRect">コンポーネントの新しい位置を示す <see cref="T:System.Drawing.Rectangle" />。</param>
      <param name="updateSize">変更があった場合は、四角形のサイズを更新する <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <returns>デザイン時ビューの画面座標の、コンポーネントの位置を示す四角形。 変更がなかった場合、このメソッドは元の四角形を返します。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.GridSize">
      <summary>デザイナーがグリッド描画モードのときに描画されるグリッドの各四角形のサイズを取得または設定します。</summary>
      <returns>フォームまたはユーザー コントロールに描画されたグリッドの各四角形のサイズを表す <see cref="T:System.Drawing.Size" />。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.Drawing.Size" /> が、<see cref="P:System.Windows.Forms.Design.ParentControlDesigner.GridSize" /> に許可された範囲の外にあります。 既定の最小値は 2、既定の最大値は 200 です。</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>コンポーネントを指定して、デザイナーを初期化します。</summary>
      <param name="component">デザイナーに関連付ける <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.InitializeNewComponent(System.Collections.IDictionary)">
      <summary>新しく作成したコンポーネントを初期化します。</summary>
      <param name="defaultValues">プロパティに適用する既定値の名前/値のディクショナリ。 既定値を指定しない場合は <see langword="null" /> にします。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.InvokeCreateTool(System.Windows.Forms.Design.ParentControlDesigner,System.Drawing.Design.ToolboxItem)">
      <summary>指定した <see cref="T:System.Drawing.Design.ToolboxItem" /> からツールを作成します。</summary>
      <param name="toInvoke">ツールを使用する <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" />。</param>
      <param name="tool">ツールの作成元の <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.MouseDragTool">
      <summary>ドラッグ操作中に、デザイナーに有効なツールがあるかどうかを示す値を取得します。</summary>
      <returns>コンポーネントを作成する場合、ドラッグされているツール。ツールがない場合は、<see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragComplete(System.Windows.Forms.DragEventArgs)">
      <summary>ドラッグ アンド ドロップ操作をクリーンアップするために呼び出されます。</summary>
      <param name="de">イベントに対してデータを提供する <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary>ドラッグ アンド ドロップ オブジェクトがコントロールのデザイナー ビューにドロップされると呼び出されます。</summary>
      <param name="de">イベントに対してデータを提供する <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary>ドラッグ アンド ドロップ操作がコントロールのデザイナー ビューに入ると呼び出されます。</summary>
      <param name="de">イベントに対してデータを提供する <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragLeave(System.EventArgs)">
      <summary>ドラッグ アンド ドロップ操作がコントロールのデザイナー ビューを離れると呼び出されます。</summary>
      <param name="e">イベントに対してデータを提供する <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary>ドラッグ アンド ドロップ オブジェクトがコントロールのデザイナー ビュー上にドラッグされると呼び出されます。</summary>
      <param name="de">イベントに対してデータを提供する <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnMouseDragBegin(System.Int32,System.Int32)">
      <summary>コンポーネント上でマウスの左ボタンをしばらく押したままにすると応答して呼び出されます。</summary>
      <param name="x">マウスの位置の x 座標 (画面座標)。</param>
      <param name="y">マウスの位置の y 座標 (画面座標)。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnMouseDragEnd(System.Boolean)">
      <summary>ドラッグ アンド ドロップ操作の終了時に呼び出され、操作を完了またはキャンセルします。</summary>
      <param name="cancel">ドラッグ操作をキャンセルする場合は <see langword="true" />。ドラッグ操作をコミットする場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnMouseDragMove(System.Int32,System.Int32)">
      <summary>ドラッグ アンド ドロップ操作中にマウスが移動するたびに呼び出されます。</summary>
      <param name="x">マウスの位置の x 座標 (画面座標)。</param>
      <param name="y">マウスの位置の y 座標 (画面座標)。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnPaintAdornments(System.Windows.Forms.PaintEventArgs)">
      <summary>デザイナーが管理しているコントロールが表面を描画したときに呼び出され、デザイナーがコントロールの一番上に追加の表示要素を描画できるようにします。</summary>
      <param name="pe">イベントに対してデータを提供する <see cref="T:System.Windows.Forms.PaintEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnSetCursor">
      <summary>現在のマウス カーソルを変更できるようにします。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>
        <see cref="T:System.ComponentModel.TypeDescriptor" /> を通じてコンポーネントが公開するプロパティのセットを調整します。</summary>
      <param name="properties">コンポーネントのクラスのプロパティが格納されている <see cref="T:System.Collections.IDictionary" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.SnapLines">
      <summary>このコントロールの有効な配置ポイントを表す <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> オブジェクトの一覧を取得します。</summary>
      <returns>このコントロールの有効な配置ポイントを表す <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> オブジェクトの一覧。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ScrollableControlDesigner">
      <summary>スクロール メッセージを受け取る <see cref="T:System.Windows.Forms.Control" /> のデザイン モードの動作を拡張する基本デザイナー クラス。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ScrollableControlDesigner.#ctor">
      <summary>
        <see cref="T:System.Windows.Forms.Design.ScrollableControlDesigner" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ScrollableControlDesigner.GetHitTest(System.Drawing.Point)">
      <summary>指定した点でのマウス クリックがコントロールによって処理されるかどうかを示します。</summary>
      <param name="pt">マウスがクリックされた位置を画面座標で示す <see cref="T:System.Drawing.Point" />。</param>
      <returns>指定した点でのクリックがコントロールによって処理される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ScrollableControlDesigner.WndProc(System.Windows.Forms.Message@)">
      <summary>Windows メッセージを処理し、WM_HSCROLL メッセージおよび WM_VSCROLL メッセージをデザイン時にコントロールへ渡します。</summary>
      <param name="m">処理対象の <see cref="T:System.Windows.Forms.Message" />。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.SelectionRules">
      <summary>コンポーネントの選択規則を示すために使用する識別子を定義します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.AllSizeable">
      <summary>コンポーネントがすべての方向のサイズ変更をサポートすることを示します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.BottomSizeable">
      <summary>コンポーネントが下からのサイズ変更をサポートすることを示します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.LeftSizeable">
      <summary>コンポーネントが左からのサイズ変更をサポートすることを示します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.Locked">
      <summary>コンポーネントがコンテナーにロックされていることを示します。 この列挙体の <see cref="F:System.Windows.Forms.Design.SelectionRules.Moveable" />、<see cref="F:System.Windows.Forms.Design.SelectionRules.AllSizeable" />、<see cref="F:System.Windows.Forms.Design.SelectionRules.BottomSizeable" />、<see cref="F:System.Windows.Forms.Design.SelectionRules.LeftSizeable" />、<see cref="F:System.Windows.Forms.Design.SelectionRules.RightSizeable" />、<see cref="F:System.Windows.Forms.Design.SelectionRules.TopSizeable" /> の各ビット フラグをオーバーライドします。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.Moveable">
      <summary>コンポーネントが画面上で移動するための位置プロパティをサポートすることを示します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.None">
      <summary>特別な選択属性を示しません。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.RightSizeable">
      <summary>コンポーネントが右からのサイズ変更をサポートすることを示します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.TopSizeable">
      <summary>コンポーネントが上からのサイズ変更をサポートすることを示します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.Visible">
      <summary>コンポーネントになんらかの形式で表示されるユーザー インターフェイスがあり、選択サービスがこのユーザー インターフェイスの周りに選択境界線を描画していることを示します。 選択されているコンポーネントにこの規則が設定されている場合は、コンポーネントが <see cref="T:System.ComponentModel.IComponent" /> を実装していて、対応するデザイナー インスタンスに関連付けられていると想定できます。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ThemedScrollbarMode">
      <summary>Visual Studio デザイナーで、ウィンドウとその子のスクロール バーが構成されるかどうかを示す値。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarMode.All">
      <summary>ウィンドウとそのすべての子のスクロール バーにはテーマが設定されます。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarMode.None">
      <summary>ウィンドウとそのすべての子にはテーマが設定されません。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarMode.OnlyTopLevel">
      <summary>ウィンドウのスクロール バーにはテーマが設定されますが、そのすべての子のスクロール バーにはテーマが設定されません。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ThemedScrollbarWindow">
      <summary>ウィンドウと、Visual Studio デザイナーでウィンドウのスクロール バーがどのように構成されるかを示す値を表します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarWindow.Handle">
      <summary>ウィンドウ ハンドル。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarWindow.Mode">
      <summary>Visual Studio デザイナーで、ウィンドウのスクロール バーがどのように構成されるかを示す値。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService">
      <summary>Windows フォーム デザイナーのオプション値の取得と設定へのアクセスを提供します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.WindowsFormsDesignerOptionService.#ctor">
      <summary>
        <see cref="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.WindowsFormsDesignerOptionService.CompatibilityOptions">
      <summary>
        <see cref="T:System.Windows.Forms.Design.DesignerOptions" /> によって公開されている <see cref="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.Design.DesignerOptions" /> によって公開される <see cref="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.WindowsFormsDesignerOptionService.PopulateOptionCollection(System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection)">
      <summary>
        <see cref="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" /> を値を読み込みます。</summary>
      <param name="options">値を読み込むコレクション。</param>
    </member>
  </members>
</doc>