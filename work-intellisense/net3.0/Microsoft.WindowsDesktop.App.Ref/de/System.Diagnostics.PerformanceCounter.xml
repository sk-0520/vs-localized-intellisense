<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Diagnostics.PerformanceCounter</name>
  </assembly>
  <members>
    <member name="T:System.Diagnostics.CounterCreationData">
      <summary>Definiert den Zählertyp, Namen und Hilfetext für einen benutzerdefinierten Zähler.</summary>
    </member>
    <member name="M:System.Diagnostics.CounterCreationData.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.CounterCreationData" />-Klasse zu einem Zähler von Typ <see langword="NumberOfItems32" /> mit leerem Namen und Hilfetexten.</summary>
    </member>
    <member name="M:System.Diagnostics.CounterCreationData.#ctor(System.String,System.String,System.Diagnostics.PerformanceCounterType)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.CounterCreationData" />-Klasse zu einem Zähler des angegebenen Typs mit angegebenem Zählernamen und Hilfetexten.</summary>
      <param name="counterName">Der Name des Zählers, der in seiner Kategorie eindeutig sein muss.</param>
      <param name="counterHelp">Der Text, der das Verhalten des Zählers beschreibt.</param>
      <param name="counterType">Ein <see cref="T:System.Diagnostics.PerformanceCounterType" />, der das Verhalten des Zählers angibt.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Sie haben einen Wert für <paramref name="counterType" /> angegeben, der kein Member der <see cref="T:System.Diagnostics.PerformanceCounterType" />-Enumeration ist.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="counterHelp" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Diagnostics.CounterCreationData.CounterHelp">
      <summary>Ruft die Beschreibung des benutzerdefinierten Zählers ab oder legt diese fest.</summary>
      <returns>Der Text, der das Verhalten des Zählers beschreibt.</returns>
      <exception cref="T:System.ArgumentNullException">Der angegebene Wert ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Diagnostics.CounterCreationData.CounterName">
      <summary>Ruft den Namen des benutzerdefinierten Zählers ab oder legt diesen fest.</summary>
      <returns>Ein in seiner Kategorie eindeutiger Name für den Zähler.</returns>
      <exception cref="T:System.ArgumentNullException">Der angegebene Wert ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Der angegebene Wert liegt nicht in einem Bereich zwischen 1 und 80 Zeichen oder enthält doppelte Anführungszeichen, Steuerzeichen oder führende bzw. nachstehende Leerzeichen.</exception>
    </member>
    <member name="P:System.Diagnostics.CounterCreationData.CounterType">
      <summary>Ruft den Leistungsindikatortyp des benutzerdefinierten Zählers ab oder legt diesen fest.</summary>
      <returns>Ein <see cref="T:System.Diagnostics.PerformanceCounterType" />, der das Verhalten des Leistungsindikators definiert.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Sie haben einen Typ angegeben, der kein Member der <see cref="T:System.Diagnostics.PerformanceCounterType" />-Enumeration ist.</exception>
    </member>
    <member name="T:System.Diagnostics.CounterCreationDataCollection">
      <summary>Stellt eine stark typisierte Auflistung von <see cref="T:System.Diagnostics.CounterCreationData" />-Objekten bereit.</summary>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.CounterCreationDataCollection" />-Klasse ohne zugeordnete <see cref="T:System.Diagnostics.CounterCreationData" />-Instanzen.</summary>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.#ctor(System.Diagnostics.CounterCreationData[])">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.CounterCreationDataCollection" />-Klasse unter Verwendung des angegebenen Arrays von <see cref="T:System.Diagnostics.CounterCreationData" />-Instanzen.</summary>
      <param name="value">Ein Array von <see cref="T:System.Diagnostics.CounterCreationData" />-Instanzen, mit denen diese <see cref="T:System.Diagnostics.CounterCreationDataCollection" /> initialisiert werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.#ctor(System.Diagnostics.CounterCreationDataCollection)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.CounterCreationDataCollection" />-Klasse unter Verwendung der angegebenen Auflistung von <see cref="T:System.Diagnostics.CounterCreationData" />-Instanzen.</summary>
      <param name="value">Eine <see cref="T:System.Diagnostics.CounterCreationDataCollection" />, die <see cref="T:System.Diagnostics.CounterCreationData" />-Instanzen enthält, mit denen diese <see cref="T:System.Diagnostics.CounterCreationDataCollection" /> initialisiert werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.Add(System.Diagnostics.CounterCreationData)">
      <summary>Fügt der Auflistung eine Instanz der <see cref="T:System.Diagnostics.CounterCreationData" />-Klasse hinzu.</summary>
      <param name="value">Ein <see cref="T:System.Diagnostics.CounterCreationData" />-Objekt, das an die vorhandene Auflistung angefügt werden soll.</param>
      <returns>Der Index des neuen <see cref="T:System.Diagnostics.CounterCreationData" />-Objekts.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> ist kein <see cref="T:System.Diagnostics.CounterCreationData" />-Objekt.</exception>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.AddRange(System.Diagnostics.CounterCreationData[])">
      <summary>Fügt der Auflistung das angegebene Array von <see cref="T:System.Diagnostics.CounterCreationData" />-Instanzen hinzu.</summary>
      <param name="value">Ein Array von <see cref="T:System.Diagnostics.CounterCreationData" />-Instanzen, das an die vorhandene Auflistung angefügt werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.AddRange(System.Diagnostics.CounterCreationDataCollection)">
      <summary>Fügt der Auflistung die angegebene Auflistung von <see cref="T:System.Diagnostics.CounterCreationData" />-Instanzen hinzu.</summary>
      <param name="value">Eine Auflistung von <see cref="T:System.Diagnostics.CounterCreationData" />-Instanzen, die an die vorhandene Auflistung angefügt werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.Contains(System.Diagnostics.CounterCreationData)">
      <summary>Bestimmt, ob eine <see cref="T:System.Diagnostics.CounterCreationData" />-Instanz in der Auflistung vorhanden ist.</summary>
      <param name="value">Das <see cref="T:System.Diagnostics.CounterCreationData" />-Objekt, das in der Auflistung gesucht werden soll.</param>
      <returns>
        <see langword="true" />, wenn das angegebene <see cref="T:System.Diagnostics.CounterCreationData" />-Objekt in der Auflistung vorhanden ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.CopyTo(System.Diagnostics.CounterCreationData[],System.Int32)">
      <summary>Kopiert die Elemente der <see cref="T:System.Diagnostics.CounterCreationData" /> in ein Array, beginnend am angegebenen Index des Arrays.</summary>
      <param name="array">Ein Array von <see cref="T:System.Diagnostics.CounterCreationData" />-Instanzen, die der Auflistung hinzugefügt werden sollen.</param>
      <param name="index">Der Speicherort, an dem die neuen Instanzen hinzugefügt werden sollen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als 0.</exception>
      <exception cref="T:System.ArgumentException">Die Anzahl der Elemente in der <see cref="T:System.Diagnostics.CounterCreationDataCollection" /> ist größer als der verfügbare Platz vom <paramref name="index" /> bis zum Ende des Zielarrays.</exception>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.IndexOf(System.Diagnostics.CounterCreationData)">
      <summary>Gibt den Index eines <see cref="T:System.Diagnostics.CounterCreationData" />-Objekts in der Auflistung zurück.</summary>
      <param name="value">Das <see cref="T:System.Diagnostics.CounterCreationData" />-Objekt, das in der Auflistung gesucht werden soll.</param>
      <returns>Der nullbasierte Index der angegebenen <see cref="T:System.Diagnostics.CounterCreationData" />, wenn sich dieser in der Auflistung befindet, andernfalls -1.</returns>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.Insert(System.Int32,System.Diagnostics.CounterCreationData)">
      <summary>Fügt ein <see cref="T:System.Diagnostics.CounterCreationData" />-Objekt am angegebenen Index in die Auflistung ein.</summary>
      <param name="index">Der nullbasierte Index der Position, an der die <see cref="T:System.Diagnostics.CounterCreationData" />-Instanz eingefügt werden soll.</param>
      <param name="value">Die in die Auflistung einzufügende <see cref="T:System.Diagnostics.CounterCreationData" />-Klasse.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> ist kein <see cref="T:System.Diagnostics.CounterCreationData" />-Objekt.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als 0.  

oder - 
<paramref name="index" /> ist größer als die Anzahl der Elemente in der Auflistung.</exception>
    </member>
    <member name="P:System.Diagnostics.CounterCreationDataCollection.Item(System.Int32)">
      <summary>Indiziert die <see cref="T:System.Diagnostics.CounterCreationData" />-Auflistung.</summary>
      <param name="index">Ein Index in der <see cref="T:System.Diagnostics.CounterCreationDataCollection" />.</param>
      <returns>Der Auflistungsindex für den Zugriff auf einzelne Elemente der Auflistung.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als 0.  

oder - 
<paramref name="index" /> ist größer oder gleich der Anzahl von Elementen in der Auflistung.</exception>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.OnValidate(System.Object)">
      <summary>Überprüft das angegebene Objekt, um zu bestimmen, ob es ein gültiger <see cref="T:System.Diagnostics.CounterCreationData" />-Typ ist.</summary>
      <param name="value">Das zu validierende Objekt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> ist kein <see cref="T:System.Diagnostics.CounterCreationData" />-Objekt.</exception>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.Remove(System.Diagnostics.CounterCreationData)">
      <summary>Entfernt ein <see cref="T:System.Diagnostics.CounterCreationData" />-Objekt aus der Auflistung.</summary>
      <param name="value">Die aus der Auflistung zu entfernende <see cref="T:System.Diagnostics.CounterCreationData" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> ist kein <see cref="T:System.Diagnostics.CounterCreationData" />-Objekt.  

oder - 
Der <paramref name="value" /> ist in der Auflistung nicht vorhanden.</exception>
    </member>
    <member name="T:System.Diagnostics.CounterSample">
      <summary>Definiert eine Struktur, die die unformatierten Daten für einen Leistungsindikator enthält.</summary>
    </member>
    <member name="M:System.Diagnostics.CounterSample.#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Diagnostics.PerformanceCounterType)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.CounterSample" />-Struktur und legt die <see cref="P:System.Diagnostics.CounterSample.CounterTimeStamp" />-Eigenschaft auf 0 (null) fest.</summary>
      <param name="rawValue">Der numerische Wert, der der Leistungsindikatormessung zugeordnet ist.</param>
      <param name="baseValue">Ein optionaler, Basisrohwert für den Zähler, der nur dann zu verwenden ist, wenn die Messung auf mehreren Zählern basiert.</param>
      <param name="counterFrequency">Das Intervall, in dem der Zähler gelesen wird.</param>
      <param name="systemFrequency">Das Intervall, in dem das System aus dem Zähler liest.</param>
      <param name="timeStamp">Der unformatierte Zeitstempel.</param>
      <param name="timeStamp100nSec">Der unformatierte Zeitstempel mit hoher Zuverlässigkeit.</param>
      <param name="counterType">Ein <see cref="T:System.Diagnostics.PerformanceCounterType" />-Objekt, das den Typ des Zählers angibt, für den diese Messung eine Momentaufnahme ist.</param>
    </member>
    <member name="M:System.Diagnostics.CounterSample.#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Diagnostics.PerformanceCounterType,System.Int64)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.CounterSample" />-Struktur und legt die <see cref="P:System.Diagnostics.CounterSample.CounterTimeStamp" />-Eigenschaft auf den übergebenen Wert fest.</summary>
      <param name="rawValue">Der numerische Wert, der der Leistungsindikatormessung zugeordnet ist.</param>
      <param name="baseValue">Ein optionaler, Basisrohwert für den Zähler, der nur dann zu verwenden ist, wenn die Messung auf mehreren Zählern basiert.</param>
      <param name="counterFrequency">Das Intervall, in dem der Zähler gelesen wird.</param>
      <param name="systemFrequency">Das Intervall, in dem das System aus dem Zähler liest.</param>
      <param name="timeStamp">Der unformatierte Zeitstempel.</param>
      <param name="timeStamp100nSec">Der unformatierte Zeitstempel mit hoher Zuverlässigkeit.</param>
      <param name="counterType">Ein <see cref="T:System.Diagnostics.PerformanceCounterType" />-Objekt, das den Typ des Zählers angibt, für den diese Messung eine Momentaufnahme ist.</param>
      <param name="counterTimeStamp">Der Zeitpunkt, zu dem die Messung ausgeführt wurde.</param>
    </member>
    <member name="P:System.Diagnostics.CounterSample.BaseValue">
      <summary>Ruft einen optionalen, unformatierten Basisrohwert für den Zähler ab.</summary>
      <returns>Der unformatierte Basisrohwert, der nur dann verwendet wird, wenn die Messung auf mehreren Zählern basiert.</returns>
    </member>
    <member name="M:System.Diagnostics.CounterSample.Calculate(System.Diagnostics.CounterSample)">
      <summary>Berechnet die Leistungsdaten des Zählers unter Verwendung eines einzelnen Messpunktes. Diese Methode wird i. d. R. für nicht berechnete Leistungsindikatortypen verwendet.</summary>
      <param name="counterSample">Die als Basispunkt für die Berechnung der Leistungsdaten zu verwendende <see cref="T:System.Diagnostics.CounterSample" />-Struktur.</param>
      <returns>Der berechnete Leistungswert.</returns>
    </member>
    <member name="M:System.Diagnostics.CounterSample.Calculate(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)">
      <summary>Berechnet die Leistungsdaten des Zählers unter Verwendung zweier Messpunkte. Diese Methode wird i. d. R. für berechnete Leistungsindikatortypen, z. B. Durchschnittswerte, verwendet.</summary>
      <param name="counterSample">Die als Basispunkt für die Berechnung der Leistungsdaten zu verwendende <see cref="T:System.Diagnostics.CounterSample" />-Struktur.</param>
      <param name="nextCounterSample">Die als Endpunkt für die Berechnung der Leistungsdaten zu verwendende <see cref="T:System.Diagnostics.CounterSample" />-Struktur.</param>
      <returns>Der berechnete Leistungswert.</returns>
    </member>
    <member name="P:System.Diagnostics.CounterSample.CounterFrequency">
      <summary>Ruft das unformatierte Zählerintervall ab.</summary>
      <returns>Das Intervall, in dem der Zähler gelesen wird.</returns>
    </member>
    <member name="P:System.Diagnostics.CounterSample.CounterTimeStamp">
      <summary>Ruft den Timestamp des Zählers ab.</summary>
      <returns>Der Zeitpunkt, zu dem die Messung ausgeführt wurde.</returns>
    </member>
    <member name="P:System.Diagnostics.CounterSample.CounterType">
      <summary>Ruft den Leistungsindikatortyp ab.</summary>
      <returns>Ein <see cref="T:System.Diagnostics.PerformanceCounterType" />-Objekt, das den Typ des Zählers angibt, für den diese Messung eine Momentaufnahme ist.</returns>
    </member>
    <member name="F:System.Diagnostics.CounterSample.Empty">
      <summary>Definiert eine leere, nicht initialisierte Leistungsindikatormessung vom Typ <see langword="NumberOfItems32" />.</summary>
    </member>
    <member name="M:System.Diagnostics.CounterSample.Equals(System.Diagnostics.CounterSample)">
      <summary>Gibt an, ob die angegebene <see cref="T:System.Diagnostics.CounterSample" />-Struktur und die aktuelle <see cref="T:System.Diagnostics.CounterSample" />-Struktur gleich sind.</summary>
      <param name="sample">Die mit dieser Instanz zu vergleichende <see cref="T:System.Diagnostics.CounterSample" />-Struktur.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="sample" /> gleich der aktuellen Instanz ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.CounterSample.Equals(System.Object)">
      <summary>Gibt an, ob die angegebene Struktur eine <see cref="T:System.Diagnostics.CounterSample" />-Struktur ist und mit der aktuellen <see cref="T:System.Diagnostics.CounterSample" />-Struktur identisch ist.</summary>
      <param name="o">Die mit der aktuellen Struktur zu vergleichende <see cref="T:System.Diagnostics.CounterSample" />-Struktur.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="o" /> eine <see cref="T:System.Diagnostics.CounterSample" />-Struktur und mit der aktuellen Instanz identisch ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.CounterSample.GetHashCode">
      <summary>Ruft einen Hashcode für die aktuelle Zählermessung ab.</summary>
      <returns>Ein Hashcode für die aktuelle Zählermessung.</returns>
    </member>
    <member name="M:System.Diagnostics.CounterSample.op_Equality(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)">
      <summary>Gibt einen Wert zurück, der angibt, ob zwei <see cref="T:System.Diagnostics.CounterSample" />-Strukturen gleich sind.</summary>
      <param name="a">Eine <see cref="T:System.Diagnostics.CounterSample" />-Struktur.</param>
      <param name="b">Eine weitere <see cref="T:System.Diagnostics.CounterSample" />-Struktur, die mit der vom <paramref name="a" />-Parameter angegebenen Struktur verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="a" /> und <paramref name="b" /> gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.CounterSample.op_Inequality(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)">
      <summary>Gibt einen Wert zurück, der angibt, ob zwei <see cref="T:System.Diagnostics.CounterSample" />-Strukturen ungleich sind.</summary>
      <param name="a">Eine <see cref="T:System.Diagnostics.CounterSample" />-Struktur.</param>
      <param name="b">Eine weitere <see cref="T:System.Diagnostics.CounterSample" />-Struktur, die mit der vom <paramref name="a" />-Parameter angegebenen Struktur verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="a" /> und <paramref name="b" /> ungleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.CounterSample.RawValue">
      <summary>Ruft den Rohwert des Zählers ab.</summary>
      <returns>Der numerische Wert, der der Leistungsindikatormessung zugeordnet ist.</returns>
    </member>
    <member name="P:System.Diagnostics.CounterSample.SystemFrequency">
      <summary>Ruft das unformatierte Systemintervall ab.</summary>
      <returns>Das Intervall, in dem das System aus dem Zähler liest.</returns>
    </member>
    <member name="P:System.Diagnostics.CounterSample.TimeStamp">
      <summary>Ruft den unformatierten Timestamp ab.</summary>
      <returns>Der Systemtimestamp.</returns>
    </member>
    <member name="P:System.Diagnostics.CounterSample.TimeStamp100nSec">
      <summary>Ruft den unformatierten Timestamp mit hoher Zuverlässigkeit ab.</summary>
      <returns>Der in 0,1 Millisekunden dargestellte Systemzeitstempel.</returns>
    </member>
    <member name="T:System.Diagnostics.CounterSampleCalculator">
      <summary>Stellt eine Reihe von Hilfsfunktionen für die Analyse der Leistungsindikatordaten bereit.</summary>
    </member>
    <member name="M:System.Diagnostics.CounterSampleCalculator.ComputeCounterValue(System.Diagnostics.CounterSample)">
      <summary>Berechnet den ermittelten Wert einer einzigen Basiszählermessung.</summary>
      <param name="newSample">Ein <see cref="T:System.Diagnostics.CounterSample" />, das die vom System zuletzt ausgeführte Messung angibt.</param>
      <returns>Eine Gleitkommadarstellung des ermittelten Werts für den Leistungsindikator.</returns>
    </member>
    <member name="M:System.Diagnostics.CounterSampleCalculator.ComputeCounterValue(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)">
      <summary>Berechnet den ermittelten Wert zweier Basiszählermessungen.</summary>
      <param name="oldSample">Ein <see cref="T:System.Diagnostics.CounterSample" />, das eine vom System ausgeführte vorherige Messung angibt.</param>
      <param name="newSample">Ein <see cref="T:System.Diagnostics.CounterSample" />, das die vom System zuletzt ausgeführte Messung angibt.</param>
      <returns>Eine Gleitkommadarstellung des ermittelten Werts für den Leistungsindikator.</returns>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="oldSample" /> verwendet einen Zählertyp, der von <paramref name="newSample" /> abweicht.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Der <paramref name="newSample" />-Zählertyp weist einen PDH (Performance Data Helper)-Fehler auf. Weitere Informationen finden Sie im Abschnitt Win32- und COM-Entwicklung dieser Dokumentation unter "Überprüfen von Rückgabewerten der PDH-Schnittstelle".</exception>
    </member>
    <member name="T:System.Diagnostics.ICollectData">
      <summary>Bereitet Leistungsdaten für die Leistungs-DLL vor, die beim Verwenden von Leistungsindikatoren vom System geladen wird.</summary>
    </member>
    <member name="M:System.Diagnostics.ICollectData.CloseData">
      <summary>Wird von der Funktion zum Schließen der Leistungsdaten der Leistungs-DLL aufgerufen.</summary>
    </member>
    <member name="M:System.Diagnostics.ICollectData.CollectData(System.Int32,System.IntPtr,System.IntPtr,System.Int32,System.IntPtr@)">
      <summary>Erfasst die Leistungsdaten für die Leistung-DLL.</summary>
      <param name="id">Der Call-Index.</param>
      <param name="valueName">Ein Zeiger auf eine Unicode-Zeichenfolgenliste mit den angeforderten Objektbezeichnern.</param>
      <param name="data">Ein Zeiger auf den Datenpuffer.</param>
      <param name="totalBytes">Ein Zeiger auf eine Anzahl von Bytes.</param>
      <param name="res">Enthält bei Rückgabe dieser Methode einen <see cref="T:System.IntPtr" /> auf das erste Byte nach den Daten; -1 für einen Fehler oder -2, wenn ein größerer Puffer erforderlich ist. Dieser Parameter wird nicht initialisiert übergeben.</param>
    </member>
    <member name="T:System.Diagnostics.InstanceData">
      <summary>Enthält die einer Leitungsindikatormessung zugeordneten Instanzdaten.</summary>
    </member>
    <member name="M:System.Diagnostics.InstanceData.#ctor(System.String,System.Diagnostics.CounterSample)">
      <summary>Initialisiert eine neue Instanz der InstanceData-Klasse unter Verwendung der angegebenen Messung und der angegebenen Leistungsindikatorinstanz.</summary>
      <param name="instanceName">Der Name einer Instanz, die dem Leistungsindikator zugeordnet ist.</param>
      <param name="sample">Ein <see cref="T:System.Diagnostics.CounterSample" />, das der Instanz entnommen wurde, die durch den <paramref name="instanceName" />-Parameter angegeben wird.</param>
    </member>
    <member name="P:System.Diagnostics.InstanceData.InstanceName">
      <summary>Ruft den diesen Instanzdaten zugeordneten Instanznamen ab.</summary>
      <returns>Der Name einer Instanz, die dem Leistungsindikator zugeordnet ist.</returns>
    </member>
    <member name="P:System.Diagnostics.InstanceData.RawValue">
      <summary>Ruft den unformatierten Datenwert ab, der der Leistungsindikatormessung zugeordnet ist.</summary>
      <returns>Der Rohwert, der von der Leistungsindikatormessung gelesen wurde, die der <see cref="P:System.Diagnostics.InstanceData.Sample" />-Eigenschaft zugeordnet ist.</returns>
    </member>
    <member name="P:System.Diagnostics.InstanceData.Sample">
      <summary>Ruft die Leistungsindikatormessung ab, in der diese Daten generiert wurden.</summary>
      <returns>Ein <see cref="T:System.Diagnostics.CounterSample" />, das der Instanz entnommen wurde, die durch die <see cref="P:System.Diagnostics.InstanceData.InstanceName" />-Eigenschaft angegeben wird.</returns>
    </member>
    <member name="T:System.Diagnostics.InstanceDataCollection">
      <summary>Stellt eine stark typisierte Auflistung von <see cref="T:System.Diagnostics.InstanceData" />-Objekten bereit.</summary>
    </member>
    <member name="M:System.Diagnostics.InstanceDataCollection.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.InstanceDataCollection" />-Klasse unter Verwendung des angegebenen Leistungsindikators, der eine Leistungsindikatorinstanz definiert.</summary>
      <param name="counterName">Der Name des Zählers, der häufig die zu messende Größe beschreibt.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="counterName" />-Parameter ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.InstanceDataCollection.Contains(System.String)">
      <summary>Bestimmt, ob in der Auflistung eine Leistungsinstanz mit einem angegebenen Namen vorhanden ist, der von einem der indizierten <see cref="T:System.Diagnostics.InstanceData" />-Objekte bezeichnet wird.</summary>
      <param name="instanceName">Der Name der Instanz, die in der Auflistung gesucht werden soll.</param>
      <returns>
        <see langword="true" />, wenn die Instanz in der Auflistung vorhanden ist, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="instanceName" />-Parameter ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.InstanceDataCollection.CopyTo(System.Diagnostics.InstanceData[],System.Int32)">
      <summary>Kopiert die Elemente in der Auflistung in das angegebene eindimensionale Array, beginnend beim angegebenen Index.</summary>
      <param name="instances">Das eindimensionale <see cref="T:System.Array" />, das das Ziel der aus der Auflistung kopierten Werte ist.</param>
      <param name="index">Der nullbasierte Indexwert, an dem die neuen Instanzen eingefügt werden sollen.</param>
    </member>
    <member name="P:System.Diagnostics.InstanceDataCollection.CounterName">
      <summary>Ruft den Namen des Leistungsindikators ab, dessen Instanzdaten Sie abrufen möchten.</summary>
      <returns>Der Name des Leistungsindikators.</returns>
    </member>
    <member name="P:System.Diagnostics.InstanceDataCollection.Item(System.String)">
      <summary>Ruft die Instanzdaten ab, die diesem Zähler zugeordnet sind. Dies ist i. d. R. eine Gruppe von Rohdaten-Zählerwerten.</summary>
      <param name="instanceName">Der Name der Instanz der Leistungsindikatorkategorie oder eine leere Zeichenfolge (""), wenn die Kategorie eine einzelne Instanz enthält.</param>
      <returns>Ein <see cref="T:System.Diagnostics.InstanceData" />-Element, mit dem das <see cref="T:System.Diagnostics.InstanceDataCollection" />-Objekt indiziert wird.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="instanceName" />-Parameter ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Diagnostics.InstanceDataCollection.Keys">
      <summary>Ruft die Objekt- und Zählerregistrierungsschlüssel für die Objekte ab, die diesen Instanzdaten zugeordnet sind.</summary>
      <returns>Eine <see cref="T:System.Collections.ICollection" />, die eine Gruppe von objektspezifischen Registrierungsschlüsseln repräsentiert.</returns>
    </member>
    <member name="P:System.Diagnostics.InstanceDataCollection.Values">
      <summary>Ruft die Rohdaten-Zählerwerte ab, die die Instanzdaten für den Zähler enthalten.</summary>
      <returns>Eine <see cref="T:System.Collections.ICollection" />, die die Rohdatenwerte des Zählers darstellt.</returns>
    </member>
    <member name="T:System.Diagnostics.InstanceDataCollectionCollection">
      <summary>Stellt eine stark typisierte Auflistung von <see cref="T:System.Diagnostics.InstanceDataCollection" />-Objekten bereit.</summary>
    </member>
    <member name="M:System.Diagnostics.InstanceDataCollectionCollection.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.InstanceDataCollectionCollection" />-Klasse.</summary>
    </member>
    <member name="M:System.Diagnostics.InstanceDataCollectionCollection.Contains(System.String)">
      <summary>Bestimmt, ob für den angegebenen Zähler, der durch eines der indizierten <see cref="T:System.Diagnostics.InstanceDataCollection" />-Objekte bezeichnet wird, in der Auflistung eine Auflistung von Instanzdaten vorhanden ist.</summary>
      <param name="counterName">Der Name des Leistungsindikators.</param>
      <returns>
        <see langword="true" />, wenn eine Auflistung der Instanzdaten, die den angegebenen Zähler enthält, in der Auflistung vorhanden ist, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="counterName" />-Parameter ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.InstanceDataCollectionCollection.CopyTo(System.Diagnostics.InstanceDataCollection[],System.Int32)">
      <summary>Kopiert ein Array von <see cref="T:System.Diagnostics.InstanceDataCollection" />-Instanzen am angegebenen Index in die Auflistung.</summary>
      <param name="counters">Ein Array von <see cref="T:System.Diagnostics.InstanceDataCollection" />-Instanzen, die durch die enthaltenen Zähler bezeichnet werden, die der Auflistung hinzugefügt werden sollen.</param>
      <param name="index">Der Speicherort, an dem die neuen Instanzen hinzugefügt werden sollen.</param>
    </member>
    <member name="P:System.Diagnostics.InstanceDataCollectionCollection.Item(System.String)">
      <summary>Ruft die Instanzdaten für den angegebenen Zähler ab.</summary>
      <param name="counterName">Der Name des Leistungsindikators.</param>
      <returns>Ein <see cref="T:System.Diagnostics.InstanceDataCollection" />-Element, mit dem das <see cref="T:System.Diagnostics.InstanceDataCollectionCollection" />-Objekt indiziert wird.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="counterName" />-Parameter ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Diagnostics.InstanceDataCollectionCollection.Keys">
      <summary>Ruft die Objekt- und Zählerregistrierungsschlüssel für die Objekte ab, die dieser Auflistung von Instanzdaten zugeordnet sind.</summary>
      <returns>Eine <see cref="T:System.Collections.ICollection" />, die eine Gruppe von objektspezifischen Registrierungsschlüsseln repräsentiert.</returns>
    </member>
    <member name="P:System.Diagnostics.InstanceDataCollectionCollection.Values">
      <summary>Ruft die Instanzdaten ab, die die Auflistung von Instanzen für den Zähler enthalten.</summary>
      <returns>Eine <see cref="T:System.Collections.ICollection" />, die die Instanzen des Zählers und die zugeordneten Datenwerte darstellt.</returns>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounter">
      <summary>Stellt eine Windows NT-Leistungsindikatorkomponente dar.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.#ctor">
      <summary>Initialisiert eine neue, schreibgeschützte Instanz der <see cref="T:System.Diagnostics.PerformanceCounter" />-Klasse, ohne diese Instanz einem System- oder benutzerdefinierten Leistungsindikator zuzuordnen.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String)">
      <summary>Initialisiert eine neue, schreibgeschützte Instanz der <see cref="T:System.Diagnostics.PerformanceCounter" />-Klasse und ordnet sie dem angegebenen System- oder benutzerdefinierten Leistungsindikator auf dem lokalen Computer zu. Für diesen Konstruktor muss die Kategorie eine einzelne Instanz besitzen.</summary>
      <param name="categoryName">Der Name der Leistungsindikatorkategorie (bzw. des Leistungsobjekts), der dieser Leistungsindikator zugeordnet ist.</param>
      <param name="counterName">Der Name des Leistungsindikators.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="categoryName" /> ist eine leere Zeichenfolge ("").  

oder - 
<paramref name="counterName" /> ist eine leere Zeichenfolge ("").  

oder - 
Die angegebene Kategorie ist nicht vorhanden.  

oder - 
Die angegebene Kategorie ist als eine Kategorie mit mehreren Instanzen markiert und erfordert, dass der Leistungsindikator mit einem Instanznamen erstellt wird.  

oder - 
<paramref name="categoryName" /> und <paramref name="counterName" /> wurden in verschiedenen Sprachen lokalisiert.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryName" /> oder <paramref name="counterName" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Beim Zugreifen auf eine System-API ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Ohne Administratorrechte ausgeführter Code hat versucht, einen Leistungsindikator zu lesen.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.PerformanceCounter" />-Klasse im schreibgeschützten oder Lese-/Schreibmodus und ordnet sie dem angegebenen System- oder benutzerdefinierten Leistungsindikator auf dem lokalen Computer zu. Für diesen Konstruktor muss die Kategorie eine einzelne Instanz enthalten.</summary>
      <param name="categoryName">Der Name der Leistungsindikatorkategorie (bzw. des Leistungsobjekts), der dieser Leistungsindikator zugeordnet ist.</param>
      <param name="counterName">Der Name des Leistungsindikators.</param>
      <param name="readOnly">
        <see langword="true" />, um im schreibgeschützten Modus auf den Zähler zuzugreifen (wobei sich der Zähler selbst jedoch im Lese-/Schreibmodus befinden kann), <see langword="false" />, um im Lese-/Schreibmodus auf den Zähler zuzugreifen.</param>
      <exception cref="T:System.InvalidOperationException">Der <paramref name="categoryName" /> ist eine leere Zeichenfolge ("").  

oder - 
Der <paramref name="counterName" /> ist eine leere Zeichenfolge ("").  

oder - 
Die angegebene Kategorie ist nicht vorhanden. (Wenn <paramref name="readOnly" /><see langword="true" /> ist.)  

oder - 
Die angegebene Kategorie ist keine benutzerdefinierte .NET Framework-Kategorie (wenn <paramref name="readOnly" /><see langword="false" /> ist).  

oder - 
Die angegebene Kategorie ist als eine Kategorie mit mehreren Instanzen markiert und erfordert, dass der Leistungsindikator mit einem Instanznamen erstellt wird.  

oder - 
<paramref name="categoryName" /> und <paramref name="counterName" /> wurden in verschiedenen Sprachen lokalisiert.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryName" /> oder <paramref name="counterName" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Beim Zugreifen auf eine System-API ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Ohne Administratorrechte ausgeführter Code hat versucht, einen Leistungsindikator zu lesen.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String)">
      <summary>Initialisiert eine neue, schreibgeschützte Instanz der <see cref="T:System.Diagnostics.PerformanceCounter" />-Klasse und ordnet sie dem angegebenen System- oder benutzerdefinierten Leistungsindikator sowie der angegebenen Kategorieinstanz auf dem lokalen Computer zu.</summary>
      <param name="categoryName">Der Name der Leistungsindikatorkategorie (bzw. des Leistungsobjekts), der dieser Leistungsindikator zugeordnet ist.</param>
      <param name="counterName">Der Name des Leistungsindikators.</param>
      <param name="instanceName">Der Name der Instanz der Leistungsindikatorkategorie oder eine leere Zeichenfolge (""), wenn die Kategorie eine einzelne Instanz enthält.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="categoryName" /> ist eine leere Zeichenfolge ("").  

oder - 
<paramref name="counterName" /> ist eine leere Zeichenfolge ("").  

oder - 
Die angegebene Kategorie ist ungültig.  

oder - 
Die angegebene Kategorie ist als eine Kategorie mit mehreren Instanzen markiert und erfordert, dass der Leistungsindikator mit einem Instanznamen erstellt wird.  

oder - 
<paramref name="instanceName" /> ist länger als 127 Zeichen.  

oder - 
<paramref name="categoryName" /> und <paramref name="counterName" /> wurden in verschiedenen Sprachen lokalisiert.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryName" /> oder <paramref name="counterName" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Beim Zugreifen auf eine System-API ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Ohne Administratorrechte ausgeführter Code hat versucht, einen Leistungsindikator zu lesen.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.PerformanceCounter" />-Klasse im schreibgeschützten oder Lese-/Schreibmodus und ordnet sie dem angegebenen System- oder benutzerdefinierten Leistungsindikator und der angegebenen Kategorieinstanz auf dem lokalen Computer zu.</summary>
      <param name="categoryName">Der Name der Leistungsindikatorkategorie (bzw. des Leistungsobjekts), der dieser Leistungsindikator zugeordnet ist.</param>
      <param name="counterName">Der Name des Leistungsindikators.</param>
      <param name="instanceName">Der Name der Instanz der Leistungsindikatorkategorie oder eine leere Zeichenfolge (""), wenn die Kategorie eine einzelne Instanz enthält.</param>
      <param name="readOnly">
        <see langword="true" />, um im schreibgeschützten Modus auf einen Zähler zuzugreifen, <see langword="false" />, um im Lese-/Schreibmodus auf einen Zähler zuzugreifen.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="categoryName" /> ist eine leere Zeichenfolge ("").  

oder - 
<paramref name="counterName" /> ist eine leere Zeichenfolge ("").  

oder - 
Die angeforderte Einstellung für die Lese-/Schreibberechtigung ist für diesen Zähler ungültig.  

oder - 
Die angegebene Kategorie ist nicht vorhanden (wenn <paramref name="readOnly" /><see langword="true" /> ist).  

oder - 
Die angegebene Kategorie ist keine benutzerdefinierte .NET Framework-Kategorie (wenn <paramref name="readOnly" /><see langword="false" /> ist).  

oder - 
Die angegebene Kategorie ist als eine Kategorie mit mehreren Instanzen markiert und erfordert, dass der Leistungsindikator mit einem Instanznamen erstellt wird.  

oder - 
<paramref name="instanceName" /> ist länger als 127 Zeichen.  

oder - 
<paramref name="categoryName" /> und <paramref name="counterName" /> wurden in verschiedenen Sprachen lokalisiert.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryName" /> oder <paramref name="counterName" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Beim Zugreifen auf eine System-API ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Ohne Administratorrechte ausgeführter Code hat versucht, einen Leistungsindikator zu lesen.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Initialisiert eine neue, schreibgeschützte Instanz der <see cref="T:System.Diagnostics.PerformanceCounter" />-Klasse und ordnet sie dem angegebenen System- oder benutzerdefinierten Leistungsindikator sowie der angegebenen Kategorieinstanz auf dem angegebenen Computer zu.</summary>
      <param name="categoryName">Der Name der Leistungsindikatorkategorie (bzw. des Leistungsobjekts), der dieser Leistungsindikator zugeordnet ist.</param>
      <param name="counterName">Der Name des Leistungsindikators.</param>
      <param name="instanceName">Der Name der Instanz der Leistungsindikatorkategorie oder eine leere Zeichenfolge (""), wenn die Kategorie eine einzelne Instanz enthält.</param>
      <param name="machineName">Der Computer, auf dem der Leistungsindikator sowie die ihm zugeordnete Kategorie vorhanden sind.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="categoryName" /> ist eine leere Zeichenfolge ("").  

oder - 
<paramref name="counterName" /> ist eine leere Zeichenfolge ("").  

oder - 
Die angeforderte Einstellung für die Lese-/Schreibberechtigung ist für diesen Zähler ungültig.  

oder - 
Der Zähler ist auf dem angegebenen Computer nicht vorhanden.  

oder - 
Die angegebene Kategorie ist als eine Kategorie mit mehreren Instanzen markiert und erfordert, dass der Leistungsindikator mit einem Instanznamen erstellt wird.  

oder - 
<paramref name="instanceName" /> ist länger als 127 Zeichen.  

oder - 
<paramref name="categoryName" /> und <paramref name="counterName" /> wurden in verschiedenen Sprachen lokalisiert.</exception>
      <exception cref="T:System.ArgumentException">Der <paramref name="machineName" />-Parameter ist ungültig.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryName" /> oder <paramref name="counterName" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Beim Zugreifen auf eine System-API ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Ohne Administratorrechte ausgeführter Code hat versucht, einen Leistungsindikator zu lesen.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.BeginInit">
      <summary>Beginnt die Initialisierung einer <see cref="T:System.Diagnostics.PerformanceCounter" />-Instanz für die Verwendung in einem Formular oder durch eine andere Komponente. Die Initialisierung erfolgt zur Laufzeit.</summary>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounter.CategoryName">
      <summary>Ruft den Namen der Leistungsindikatorkategorie für diesen Leistungsindikator ab oder legt diesen fest.</summary>
      <returns>Der Name der Leistungsindikatorkategorie (bzw. des Leistungsobjekts), der dieser Leistungsindikator zugeordnet ist.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Diagnostics.PerformanceCounter.CategoryName" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.Close">
      <summary>Beendet den Leistungsindikator und gibt sämtliche von dieser Leistungsindikatorinstanz reservierten Ressourcen frei.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.CloseSharedResources">
      <summary>Setzt die von den Zählern angeforderte gemeinsame Verwendung der Leistungsindikatorenbibliothek zurück.</summary>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounter.CounterHelp">
      <summary>Ruft die Beschreibung für diesen Leistungsindikator ab.</summary>
      <returns>Eine Beschreibung des Elements oder der Menge, die dieser Leistungsindikator misst.</returns>
      <exception cref="T:System.InvalidOperationException">Die <see cref="T:System.Diagnostics.PerformanceCounter" />-Instanz ist keinem Leistungsindikator zugeordnet.  

oder - 
Die <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" />-Eigenschaft wird auf <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> festgelegt, wenn der globale gemeinsam genutzte Speicherbereich verwendet wird.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Ohne Administratorrechte ausgeführter Code hat versucht, einen Leistungsindikator zu lesen.</exception>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounter.CounterName">
      <summary>Ruft den Namen des Leistungsindikators ab, der dieser <see cref="T:System.Diagnostics.PerformanceCounter" />-Instanz zugeordnet ist, oder legt diesen fest.</summary>
      <returns>Der Name des Zählers, der i. d. R. die zu messende Menge beschreibt. Dieser Name wird im Dialogfeld Leistungsindikatoren hinzufügen des MMC-Snap-Ins Leistungsindikator-Manager in der Zählerliste angezeigt.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Diagnostics.PerformanceCounter.CounterName" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounter.CounterType">
      <summary>Ruft den Zählertyp des zugeordneten Leistungsindikators ab.</summary>
      <returns>Ein <see cref="T:System.Diagnostics.PerformanceCounterType" />, der sowohl die Interaktionsweise zwischen Zähler und Überwachungsanwendung als auch die Art der enthaltenen Werte beschreibt (z. B. berechnet oder nicht berechnet).</returns>
      <exception cref="T:System.InvalidOperationException">Die Instanz ist keinem Leistungsindikator ordnungsgemäß zugeordnet.  

oder - 
Die <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" />-Eigenschaft wird auf <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> festgelegt, wenn der globale gemeinsam genutzte Speicherbereich verwendet wird.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Ohne Administratorrechte ausgeführter Code hat versucht, einen Leistungsindikator zu lesen.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.Decrement">
      <summary>Dekrementiert durch eine effiziente atomare Operation den zugeordneten Leistungsindikator um eins.</summary>
      <returns>Der dekrementierte Zählerwert.</returns>
      <exception cref="T:System.InvalidOperationException">Der Zähler ist schreibgeschützt, sodass er von der Anwendung nicht dekrementiert werden kann.  

oder - 
Die Instanz ist keinem Leistungsindikator ordnungsgemäß zugeordnet.  

oder - 
Die <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" />-Eigenschaft wird auf <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> festgelegt, wenn der globale gemeinsam genutzte Speicherbereich verwendet wird.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Beim Zugreifen auf eine System-API ist ein Fehler aufgetreten.</exception>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounter.DefaultFileMappingSize">
      <summary>Gibt die Größe des globalen Speichers (in Bytes) an, der von den Leistungsindikatoren gemeinsam genutzt wird. Die Standardgröße ist 524.288 Bytes.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.EndInit">
      <summary>Beendet die Initialisierung einer <see cref="T:System.Diagnostics.PerformanceCounter" />-Instanz, die in einem Formular oder von einer anderen Komponente verwendet wird. Die Initialisierung erfolgt zur Laufzeit.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.Increment">
      <summary>Inkrementiert durch eine effiziente atomare Operation den zugeordneten Leistungsindikator um eins.</summary>
      <returns>Der inkrementelle Zählerwert.</returns>
      <exception cref="T:System.InvalidOperationException">Der Zähler ist schreibgeschützt, sodass er von der Anwendung nicht inkrementiert werden kann.  

oder - 
Die Instanz ist keinem Leistungsindikator ordnungsgemäß zugeordnet.  

oder - 
Die <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" />-Eigenschaft wird auf <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> festgelegt, wenn der globale gemeinsam genutzte Speicherbereich verwendet wird.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Beim Zugreifen auf eine System-API ist ein Fehler aufgetreten.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.IncrementBy(System.Int64)">
      <summary>Inkrementiert oder dekrementiert durch eine effiziente atomare Operation den Wert des zugeordneten Leistungsindikators um einen angegebenen Betrag.</summary>
      <param name="value">Der Wert, um den inkrementiert werden soll. (Durch einen negativen Wert wird der Zähler dekrementiert.)</param>
      <returns>Der neue Zählerwert.</returns>
      <exception cref="T:System.InvalidOperationException">Der Zähler ist schreibgeschützt, sodass er von der Anwendung nicht inkrementiert werden kann.  

oder - 
Die Instanz ist keinem Leistungsindikator ordnungsgemäß zugeordnet.  

oder - 
Die <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" />-Eigenschaft wird auf <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> festgelegt, wenn der globale gemeinsam genutzte Speicherbereich verwendet wird.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Beim Zugreifen auf eine System-API ist ein Fehler aufgetreten.</exception>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounter.InstanceLifetime">
      <summary>Ruft die Lebenszeit eines Prozesses ab oder legt diese fest.</summary>
      <returns>Einer der <see cref="T:System.Diagnostics.PerformanceCounterInstanceLifetime" />-Werte. Die Standardeinstellung ist <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Global" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Der festgelegte Wert ist kein Member der <see cref="T:System.Diagnostics.PerformanceCounterInstanceLifetime" />-Enumeration.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> wird festgelegt, nachdem der <see cref="T:System.Diagnostics.PerformanceCounter" /> initialisiert wurde.</exception>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounter.InstanceName">
      <summary>Ruft einen Instanznamen für diesen Leistungsindikator ab oder legt diesen fest.</summary>
      <returns>Der Name der Instanz der Leistungsindikatorkategorie oder eine leere Zeichenfolge (""), wenn der Zähler ein Einzelinstanzzähler ist.</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounter.MachineName">
      <summary>Ruft den Computernamen für diesen Leistungsindikator ab oder legt diesen fest.</summary>
      <returns>Der Server, auf dem der Leistungsindikator sowie die ihm zugeordnete Kategorie vorhanden sind.</returns>
      <exception cref="T:System.ArgumentException">Das <see cref="P:System.Diagnostics.PerformanceCounter.MachineName" />-Format ist ungültig.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.NextSample">
      <summary>Ruft eine Zählermessung ab und gibt dafür den unformatierten bzw. nicht berechneten Wert zurück.</summary>
      <returns>Ein <see cref="T:System.Diagnostics.CounterSample" />, das den nächsten Rohwert darstellt, den das System für diesen Zähler abruft.</returns>
      <exception cref="T:System.InvalidOperationException">Die Instanz ist keinem Leistungsindikator ordnungsgemäß zugeordnet.  

oder - 
Die <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" />-Eigenschaft wird auf <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> festgelegt, wenn der globale gemeinsam genutzte Speicherbereich verwendet wird.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Beim Zugreifen auf eine System-API ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Ohne Administratorrechte ausgeführter Code hat versucht, einen Leistungsindikator zu lesen.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.NextValue">
      <summary>Ruft eine Zählermessung ab und gibt den dafür berechneten Wert zurück.</summary>
      <returns>Der nächste berechnete Wert, den das System für diesen Zähler abruft.</returns>
      <exception cref="T:System.InvalidOperationException">Die Instanz ist keinem Leistungsindikator ordnungsgemäß zugeordnet.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Beim Zugreifen auf eine System-API ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Ohne Administratorrechte ausgeführter Code hat versucht, einen Leistungsindikator zu lesen.</exception>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounter.RawValue">
      <summary>Ruft den unformatierten bzw. nicht berechneten Wert dieses Zählers ab oder legt diesen fest.</summary>
      <returns>Der Rohwert des Zählers.</returns>
      <exception cref="T:System.InvalidOperationException">Sie versuchen, den Rohwert des Zählers festzulegen, der Zähler ist jedoch schreibgeschützt.  

oder - 
Die Instanz ist keinem Leistungsindikator ordnungsgemäß zugeordnet.  

oder - 
Die <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" />-Eigenschaft wird auf <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> festgelegt, wenn der globale gemeinsam genutzte Speicherbereich verwendet wird.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Beim Zugreifen auf eine System-API ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Ohne Administratorrechte ausgeführter Code hat versucht, einen Leistungsindikator zu lesen.</exception>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounter.ReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob sich diese <see cref="T:System.Diagnostics.PerformanceCounter" />-Instanz im schreibgeschützten Modus befindet, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn sich die <see cref="T:System.Diagnostics.PerformanceCounter" />-Instanz im schreibgeschützten Modus befindet (auch wenn der Zähler selbst ein benutzerdefinierter .NET Framework-Leistungsindikator ist). <see langword="false" />, wenn sie sich im Lese-/Schreibmodus befindet. Der Standardwert wird durch den Konstruktor festgelegt.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.RemoveInstance">
      <summary>Löscht die von der <see cref="T:System.Diagnostics.PerformanceCounter" />-Eigenschaft des <see cref="P:System.Diagnostics.PerformanceCounter.InstanceName" />-Objekts angegebene Kategorieinstanz.</summary>
      <exception cref="T:System.InvalidOperationException">Dieser Zähler ist schreibgeschützt, sodass die der Kategorie zugeordneten Instanzen nicht entfernt werden können.  

oder - 
Die Instanz ist keinem Leistungsindikator ordnungsgemäß zugeordnet.  

oder - 
Die <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" />-Eigenschaft wird auf <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> festgelegt, wenn der globale gemeinsam genutzte Speicherbereich verwendet wird.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Beim Zugreifen auf eine System-API ist ein Fehler aufgetreten.</exception>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterCategory">
      <summary>Stellt ein Leistungsobjekt dar, das eine Kategorie von Leistungsindikatoren definiert.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.PerformanceCounterCategory" />-Klasse, lässt die <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />-Eigenschaft leer und legt die <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />-Eigenschaft auf den lokalen Computer fest.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.PerformanceCounterCategory" />-Klasse, legt die <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />-Eigenschaft auf den angegebenen Wert und die <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />-Eigenschaft auf den lokalen Computer fest.</summary>
      <param name="categoryName">Der Name der Leistungsindikatorkategorie oder des Leistungsobjekts, der bzw. dem diese <see cref="T:System.Diagnostics.PerformanceCounterCategory" />-Instanz zugeordnet werden soll.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="categoryName" /> ist eine leere Zeichenfolge ("").</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryName" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.#ctor(System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.PerformanceCounterCategory" />-Klasse und legt die <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />-Eigenschaft und die <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />-Eigenschaft auf die angegebenen Werte fest.</summary>
      <param name="categoryName">Der Name der Leistungsindikatorkategorie oder des Leistungsobjekts, der bzw. dem diese <see cref="T:System.Diagnostics.PerformanceCounterCategory" />-Instanz zugeordnet werden soll.</param>
      <param name="machineName">Der Computer, auf dem die Leistungsindikatorkategorie und die zugeordneten Indikatoren vorhanden sind.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="categoryName" /> ist eine leere Zeichenfolge ("").  

oder - 
Die Syntax für <paramref name="machineName" /> ist ungültig.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryName" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterCategory.CategoryHelp">
      <summary>Ruft den Hilfetext zu dieser Kategorie ab.</summary>
      <returns>Eine Beschreibung des Leistungsobjekts, das von dieser Kategorie gemessen wird.</returns>
      <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />-Eigenschaft ist <see langword="null" />. Der Kategoriename muss vor dem Abrufen der Hilfe für die Kategorie festgelegt werden.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Fehler beim Aufruf einer zugrunde liegenden System-API.</exception>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterCategory.CategoryName">
      <summary>Ruft den Namen des Leistungsobjekts ab, das diese Kategorie definiert, oder legt diesen fest.</summary>
      <returns>Der Name der Leistungsindikatorkategorie oder des Leistungsobjekts, der bzw. dem diese <see cref="T:System.Diagnostics.PerformanceCounterCategory" />-Instanz zugeordnet werden soll.</returns>
      <exception cref="T:System.ArgumentException">Der <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> ist eine leere Zeichenfolge ("").</exception>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterCategory.CategoryType">
      <summary>Ruft den Typ der Leistungsindikatorkategorie ab.</summary>
      <returns>Einer der <see cref="T:System.Diagnostics.PerformanceCounterCategoryType" />-Werte.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)">
      <summary>Bestimmt, ob der angegebene Zähler in dieser Kategorie registriert ist. Dies wird durch die <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />-Eigenschaft und die <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />-Eigenschaft angegeben.</summary>
      <param name="counterName">Der Name des gesuchten Leistungsindikators.</param>
      <returns>
        <see langword="true" />, wenn der Zähler in der Kategorie registriert ist, die durch die <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />-Eigenschaft und die <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />-Eigenschaft angegeben wird, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="counterName" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />-Eigenschaft wurde nicht festgelegt.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Fehler beim Aufruf einer zugrunde liegenden System-API.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Ohne Administratorrechte ausgeführter Code hat versucht, einen Leistungsindikator zu lesen.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String,System.String)">
      <summary>Bestimmt, ob der angegebene Indikator in der angegebenen Kategorie auf dem lokalen Computer registriert ist.</summary>
      <param name="counterName">Der Name des gesuchten Leistungsindikators.</param>
      <param name="categoryName">Der Name der Leistungsindikatorkategorie oder des Leistungsobjekts, der bzw. dem der angegebene Leistungsindikator zugeordnet ist.</param>
      <returns>
        <see langword="true" />, wenn der Zähler in der angegebenen Kategorie auf dem lokalen Computer registriert ist, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryName" /> ist <see langword="null" />.  

oder - 
<paramref name="counterName" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Der <paramref name="categoryName" /> ist eine leere Zeichenfolge ("").</exception>
      <exception cref="T:System.InvalidOperationException">Der Kategorienname ist nicht vorhanden.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Fehler beim Aufruf einer zugrunde liegenden System-API.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Ohne Administratorrechte ausgeführter Code hat versucht, einen Leistungsindikator zu lesen.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String,System.String,System.String)">
      <summary>Bestimmt, ob der angegebene Indikator in der angegebenen Kategorie auf einem Remotecomputer registriert ist.</summary>
      <param name="counterName">Der Name des gesuchten Leistungsindikators.</param>
      <param name="categoryName">Der Name der Leistungsindikatorkategorie oder des Leistungsobjekts, der bzw. dem der angegebene Leistungsindikator zugeordnet ist.</param>
      <param name="machineName">Der Name des Computers, auf dem die Leistungsindikatorkategorie und die zugeordneten Zähler vorhanden sind.</param>
      <returns>
        <see langword="true" />, wenn der Zähler in der angegebenen Kategorie auf dem angegebenen Computer registriert ist, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryName" /> ist <see langword="null" />.  

oder - 
<paramref name="counterName" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Der <paramref name="categoryName" /> ist eine leere Zeichenfolge ("").  

oder - 
<paramref name="machineName" /> ist ungültig.</exception>
      <exception cref="T:System.InvalidOperationException">Der Kategorienname ist nicht vorhanden.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Fehler beim Aufruf einer zugrunde liegenden System-API.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Ohne Administratorrechte ausgeführter Code hat versucht, einen Leistungsindikator zu lesen.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.CounterCreationDataCollection)">
      <summary>Registriert die benutzerdefinierte Leistungsindikatorkategorie, die die angegebenen Zähler enthält, auf dem lokalen Computer.</summary>
      <param name="categoryName">Der Name der benutzerdefinierten Leistungsindikatorkategorie, die erstellt und im System registriert werden soll.</param>
      <param name="categoryHelp">Eine Beschreibung der benutzerdefinierten Kategorie.</param>
      <param name="counterData">Eine <see cref="T:System.Diagnostics.CounterCreationDataCollection" />, die die als Bestandteil der neuen Kategorie zu erstellenden Zähler angibt.</param>
      <returns>Eine <see cref="T:System.Diagnostics.PerformanceCounterCategory" />, die der neuen benutzerdefinierten Kategorie oder dem Leistungsobjekt zugeordnet ist.</returns>
      <exception cref="T:System.ArgumentException">Ein in der <paramref name="counterData" />-Auflistung angegebener Zählername ist <see langword="null" /> oder eine leere Zeichenfolge ("").  

oder - 
Ein in der <paramref name="counterData" />-Auflistung angegebener Zähler ist bereits vorhanden.  

oder - 
Die Syntax des <paramref name="counterName" />-Parameters ist ungültig. Sie enthält möglicherweise umgekehrte Schrägstriche ("\") oder ist länger als 80 Zeichen.</exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="categoryName" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Die Kategorie ist auf dem lokalen Computer bereits vorhanden.  

oder - 
Das Layout der <paramref name="counterData" />-Auflistung ist bezüglich der Basiszähler falsch. Auf einen Zähler des Typs <see langword="AverageCount64" />, <see langword="AverageTimer32" />, <see langword="CounterMultiTimer" />, <see langword="CounterMultiTimerInverse" />, <see langword="CounterMultiTimer100Ns" />, <see langword="CounterMultiTimer100NsInverse" />, <see langword="RawFraction" />, <see langword="SampleFraction" /> oder <see langword="SampleCounter" /> muss unmittelbar einer der Basiszählertypen folgen (<see langword="AverageBase" />, <see langword="MultiBase" />, <see langword="RawBase" /> oder <see langword="SampleBase" />).</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Fehler beim Aufruf einer zugrunde liegenden System-API.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Ohne Administratorrechte ausgeführter Code hat versucht, einen Leistungsindikator zu lesen.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.PerformanceCounterCategoryType,System.Diagnostics.CounterCreationDataCollection)">
      <summary>Registriert die benutzerdefinierte Leistungsindikatorkategorie, die die angegebenen Zähler enthält, auf dem lokalen Computer.</summary>
      <param name="categoryName">Der Name der benutzerdefinierten Leistungsindikatorkategorie, die erstellt und im System registriert werden soll.</param>
      <param name="categoryHelp">Eine Beschreibung der benutzerdefinierten Kategorie.</param>
      <param name="categoryType">Einer der <see cref="T:System.Diagnostics.PerformanceCounterCategoryType" />-Werte.</param>
      <param name="counterData">Eine <see cref="T:System.Diagnostics.CounterCreationDataCollection" />, die die als Bestandteil der neuen Kategorie zu erstellenden Zähler angibt.</param>
      <returns>Eine <see cref="T:System.Diagnostics.PerformanceCounterCategory" />, die der neuen benutzerdefinierten Kategorie oder dem Leistungsobjekt zugeordnet ist.</returns>
      <exception cref="T:System.ArgumentException">Ein in der <paramref name="counterData" />-Auflistung angegebener Zählername ist <see langword="null" /> oder eine leere Zeichenfolge ("").  

oder - 
Ein in der <paramref name="counterData" />-Auflistung angegebener Zähler ist bereits vorhanden.  

oder - 
Die Syntax für <paramref name="counterName" /> ist ungültig. Sie enthält möglicherweise umgekehrte Schrägstriche ("\") oder ist länger als 80 Zeichen.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryName" /> ist <see langword="null" />.  

oder - 
<paramref name="counterData" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="categoryType" />-Wert liegt außerhalb des Bereichs der folgenden Werte: <see langword="MultiInstance" />, <see langword="SingleInstance" />, oder <see langword="Unknown" />.</exception>
      <exception cref="T:System.InvalidOperationException">Die Kategorie ist auf dem lokalen Computer bereits vorhanden.  

oder - 
Das Layout der <paramref name="counterData" />-Auflistung ist bezüglich der Basiszähler falsch. Auf einen Zähler des Typs <see langword="AverageCount64" />, <see langword="AverageTimer32" />, <see langword="CounterMultiTimer" />, <see langword="CounterMultiTimerInverse" />, <see langword="CounterMultiTimer100Ns" />, <see langword="CounterMultiTimer100NsInverse" />, <see langword="RawFraction" />, <see langword="SampleFraction" /> oder <see langword="SampleCounter" /> muss unmittelbar einer der Basiszählertypen folgen (<see langword="AverageBase" />, <see langword="MultiBase" />, <see langword="RawBase" /> oder <see langword="SampleBase" />).</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Fehler beim Aufruf einer zugrunde liegenden System-API.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Ohne Administratorrechte ausgeführter Code hat versucht, einen Leistungsindikator zu lesen.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.PerformanceCounterCategoryType,System.String,System.String)">
      <summary>Registriert die benutzerdefinierte Leistungsindikatorkategorie, die einen einzelnen Indikator vom Typ <see cref="F:System.Diagnostics.PerformanceCounterType.NumberOfItems32" /> enthält, auf dem lokalen Computer.</summary>
      <param name="categoryName">Der Name der benutzerdefinierten Leistungsindikatorkategorie, die erstellt und im System registriert werden soll.</param>
      <param name="categoryHelp">Eine Beschreibung der benutzerdefinierten Kategorie.</param>
      <param name="categoryType">Einer der <see cref="T:System.Diagnostics.PerformanceCounterCategoryType" />-Werte, der angibt, ob die Kategorie <see cref="F:System.Diagnostics.PerformanceCounterCategoryType.MultiInstance" />, <see cref="F:System.Diagnostics.PerformanceCounterCategoryType.SingleInstance" /> oder <see cref="F:System.Diagnostics.PerformanceCounterCategoryType.Unknown" /> ist.</param>
      <param name="counterName">Der Name eines neuen Zählers, der als Bestandteil der neuen Kategorie erstellt werden soll.</param>
      <param name="counterHelp">Eine Beschreibung des Zählers, der der neuen benutzerdefinierten Kategorie zugeordnet ist.</param>
      <returns>Eine <see cref="T:System.Diagnostics.PerformanceCounterCategory" />, die der neuen Systemkategorie oder dem Leistungsobjekt zugeordnet ist.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="counterName" /> ist <see langword="null" /> oder eine leere Zeichenfolge ("").  

oder - 
Der von <paramref name="counterName" /> angegebene Zähler ist bereits vorhanden.  

oder - 
Die Syntax für <paramref name="counterName" /> ist ungültig. Sie enthält möglicherweise umgekehrte Schrägstriche ("\") oder ist länger als 80 Zeichen.</exception>
      <exception cref="T:System.InvalidOperationException">Die Kategorie ist auf dem lokalen Computer bereits vorhanden.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryName" /> ist <see langword="null" />.  

oder - 
<paramref name="counterHelp" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Fehler beim Aufruf einer zugrunde liegenden System-API.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Ohne Administratorrechte ausgeführter Code hat versucht, einen Leistungsindikator zu lesen.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.String,System.String)">
      <summary>Registriert eine benutzerdefinierte Leistungsindikatorkategorie, die einen einzelnen Indikator vom Typ <see langword="NumberOfItems32" /> enthält, auf dem lokalen Computer.</summary>
      <param name="categoryName">Der Name der benutzerdefinierten Leistungsindikatorkategorie, die erstellt und im System registriert werden soll.</param>
      <param name="categoryHelp">Eine Beschreibung der benutzerdefinierten Kategorie.</param>
      <param name="counterName">Der Name eines neuen Indikators vom Typ <see langword="NumberOfItems32" />, der als Bestandteil der neuen Kategorie erstellt werden soll.</param>
      <param name="counterHelp">Eine Beschreibung des Zählers, der der neuen benutzerdefinierten Kategorie zugeordnet ist.</param>
      <returns>Eine <see cref="T:System.Diagnostics.PerformanceCounterCategory" />, die der neuen Systemkategorie oder dem Leistungsobjekt zugeordnet ist.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="counterName" /> ist <see langword="null" /> oder eine leere Zeichenfolge ("").  

oder - 
Der von <paramref name="counterName" /> angegebene Zähler ist bereits vorhanden.  

oder - 
Die Syntax für <paramref name="counterName" /> ist ungültig. Sie enthält möglicherweise umgekehrte Schrägstriche ("\") oder ist länger als 80 Zeichen.</exception>
      <exception cref="T:System.InvalidOperationException">Die Kategorie ist auf dem lokalen Computer bereits vorhanden.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryName" /> ist <see langword="null" />.  

oder - 
<paramref name="counterHelp" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Fehler beim Aufruf einer zugrunde liegenden System-API.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Ohne Administratorrechte ausgeführter Code hat versucht, einen Leistungsindikator zu lesen.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.Delete(System.String)">
      <summary>Entfernt die Kategorie und die zugeordneten Indikatoren vom lokalen Computer.</summary>
      <param name="categoryName">Der Name der zu löschenden benutzerdefinierten Leistungsindikatorkategorie.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="categoryName" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Die Syntax des <paramref name="categoryName" />-Parameters ist ungültig. Sie enthält möglicherweise umgekehrte Schrägstriche ("\") oder ist länger als 80 Zeichen.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Fehler beim Aufruf einer zugrunde liegenden System-API.</exception>
      <exception cref="T:System.InvalidOperationException">Die Kategorie ist keine benutzerdefinierte Kategorie und kann daher nicht gelöscht werden.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Ohne Administratorrechte ausgeführter Code hat versucht, einen Leistungsindikator zu lesen.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)">
      <summary>Bestimmt, ob die Kategorie auf dem lokalen Computer registriert ist.</summary>
      <param name="categoryName">Der Name der gesuchten Leistungsindikatorkategorie.</param>
      <returns>
        <see langword="true" />, wenn die Kategorie registriert ist, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="categoryName" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Der <paramref name="categoryName" />-Parameter ist eine leere Zeichenfolge ("").</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Fehler beim Aufruf einer zugrunde liegenden System-API.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Ohne Administratorrechte ausgeführter Code hat versucht, einen Leistungsindikator zu lesen.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String,System.String)">
      <summary>Bestimmt, ob die Kategorie auf dem angegebenen Computer registriert ist.</summary>
      <param name="categoryName">Der Name der gesuchten Leistungsindikatorkategorie.</param>
      <param name="machineName">Der Name des Computers, auf dem die Kategorie gesucht wird.</param>
      <returns>
        <see langword="true" />, wenn die Kategorie registriert ist, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="categoryName" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Der <paramref name="categoryName" />-Parameter ist eine leere Zeichenfolge ("").  

oder - 
Der <paramref name="machineName" />-Parameter ist ungültig.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Fehler beim Aufruf einer zugrunde liegenden System-API.</exception>
      <exception cref="T:System.IO.IOException">Der Netzwerkpfad kann nicht gefunden werden.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.  

oder -  

 Ohne Administratorrechte ausgeführter Code hat versucht, einen Leistungsindikator zu lesen.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.GetCategories">
      <summary>Ruft eine Liste der auf dem lokalen Computer registrierten Leistungsindikatorkategorien ab.</summary>
      <returns>Ein Array von <see cref="T:System.Diagnostics.PerformanceCounterCategory" />-Objekten, das die auf dem lokalen Computer registrierten Kategorien angibt.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">Fehler beim Aufruf einer zugrunde liegenden System-API.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Ohne Administratorrechte ausgeführter Code hat versucht, einen Leistungsindikator zu lesen.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.GetCategories(System.String)">
      <summary>Ruft eine Liste der auf dem angegebenen Computer registrierten Leistungsindikatorkategorien ab.</summary>
      <param name="machineName">Der zu durchsuchende Computer.</param>
      <returns>Ein Array von <see cref="T:System.Diagnostics.PerformanceCounterCategory" />-Objekten, das die auf dem angegebenen Computer registrierten Kategorien angibt.</returns>
      <exception cref="T:System.ArgumentException">Der <paramref name="machineName" />-Parameter ist ungültig.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Fehler beim Aufruf einer zugrunde liegenden System-API.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Ohne Administratorrechte ausgeführter Code hat versucht, einen Leistungsindikator zu lesen.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.GetCounters">
      <summary>Ruft eine Liste von Indikatoren in einer Leistungsindikatorkategorie ab, die genau eine Instanz enthält.</summary>
      <returns>Ein Array von <see cref="T:System.Diagnostics.PerformanceCounter" />-Objekten, das die Zähler angibt, die dieser Leistungsindikatorkategorie mit einzelner Instanz zugeordnet sind.</returns>
      <exception cref="T:System.ArgumentException">Die Kategorie ist keine einzelne Instanz.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Fehler beim Aufruf einer zugrunde liegenden System-API.</exception>
      <exception cref="T:System.InvalidOperationException">Die Kategorie hat keine zugeordnete Instanz.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Ohne Administratorrechte ausgeführter Code hat versucht, einen Leistungsindikator zu lesen.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.GetCounters(System.String)">
      <summary>Ruft eine Liste von Indikatoren in einer Leistungsindikatorkategorie ab, die mindestens eine Instanz enthält.</summary>
      <param name="instanceName">Die Leistungsobjektinstanz, für die die Liste der zugeordneten Indikatoren abgerufen werden soll.</param>
      <returns>Ein Array von <see cref="T:System.Diagnostics.PerformanceCounter" />-Objekten, das die Zähler angibt, die der angegebenen Objektinstanz dieser Leistungsindikatorkategorie zugeordnet sind.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="instanceName" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />-Eigenschaft für diese <see cref="T:System.Diagnostics.PerformanceCounterCategory" />-Instanz wurde nicht festgelegt.  

oder - 
Die Kategorie enthält nicht die durch den <paramref name="instanceName" />-Parameter angegebene Instanz.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Fehler beim Aufruf einer zugrunde liegenden System-API.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Ohne Administratorrechte ausgeführter Code hat versucht, einen Leistungsindikator zu lesen.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.GetInstanceNames">
      <summary>Ruft die Liste der Leistungsobjektinstanzen ab, die dieser Kategorie zugeordnet sind.</summary>
      <returns>Ein Array von Zeichenfolgen, das die Namen der Leistungsobjektinstanzen darstellt, die dieser Kategorie zugeordnet sind, oder, wenn die Kategorie nur eine Leistungsobjektinstanz enthält, ein Array mit einzelnem Eintrag, das eine leere Zeichenfolge ("") enthält.</returns>
      <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />-Eigenschaft ist <see langword="null" />. Die Eigenschaft wurde möglicherweise nicht festgelegt.  

oder - 
Die Kategorie hat keine zugeordnete Instanz.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Fehler beim Aufruf einer zugrunde liegenden System-API.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Ohne Administratorrechte ausgeführter Code hat versucht, einen Leistungsindikator zu lesen.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)">
      <summary>Bestimmt, ob die angegebene Leistungsobjektinstanz in der Kategorie vorhanden ist, die durch die <see cref="T:System.Diagnostics.PerformanceCounterCategory" />-Eigenschaft dieses <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />-Objekts bezeichnet wird.</summary>
      <param name="instanceName">Die gesuchte Leistungsobjektinstanz in dieser Leistungsindikatorkategorie.</param>
      <returns>
        <see langword="true" />, wenn die Kategorie die angegebene Leistungsobjektinstanz enthält, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />-Eigenschaft ist <see langword="null" />. Die Eigenschaft wurde möglicherweise nicht festgelegt.</exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="instanceName" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Fehler beim Aufruf einer zugrunde liegenden System-API.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Ohne Administratorrechte ausgeführter Code hat versucht, einen Leistungsindikator zu lesen.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String,System.String)">
      <summary>Bestimmt, ob die angegebene Kategorie auf dem lokalen Computer die angegebene Leistungsobjektinstanz enthält.</summary>
      <param name="instanceName">Die gesuchte Leistungsobjektinstanz.</param>
      <param name="categoryName">Die zu durchsuchende Leistungsindikatorkategorie.</param>
      <returns>
        <see langword="true" />, wenn die Kategorie die angegebene Leistungsobjektinstanz enthält, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="instanceName" />-Parameter ist <see langword="null" />.  

oder - 
Der <paramref name="categoryName" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Der <paramref name="categoryName" />-Parameter ist eine leere Zeichenfolge ("").</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Fehler beim Aufruf einer zugrunde liegenden System-API.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Ohne Administratorrechte ausgeführter Code hat versucht, einen Leistungsindikator zu lesen.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String,System.String,System.String)">
      <summary>Bestimmt, ob eine angegebene Kategorie auf dem angegebenen Computer die angegebene Leistungsobjektinstanz enthält.</summary>
      <param name="instanceName">Die gesuchte Leistungsobjektinstanz.</param>
      <param name="categoryName">Die zu durchsuchende Leistungsindikatorkategorie.</param>
      <param name="machineName">Der Name des Computers, auf dem das Paar von Kategorieinstanzen gesucht werden soll.</param>
      <returns>
        <see langword="true" />, wenn die Kategorie die angegebene Leistungsobjektinstanz enthält, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="instanceName" />-Parameter ist <see langword="null" />.  

oder - 
Der <paramref name="categoryName" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Der <paramref name="categoryName" />-Parameter ist eine leere Zeichenfolge ("").  

oder - 
Der <paramref name="machineName" />-Parameter ist ungültig.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Fehler beim Aufruf einer zugrunde liegenden System-API.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Ohne Administratorrechte ausgeführter Code hat versucht, einen Leistungsindikator zu lesen.</exception>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterCategory.MachineName">
      <summary>Ruft den Namen des Computers ab, auf dem diese Kategorie vorhanden ist, oder legt diesen fest.</summary>
      <returns>Der Name des Computers, auf dem die Leistungsindikatorkategorie und die zugeordneten Zähler vorhanden sind.</returns>
      <exception cref="T:System.ArgumentException">Die Syntax für <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> ist ungültig.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.ReadCategory">
      <summary>Liest sämtliche Daten für Indikator- und Leistungsobjektinstanzen, die dieser Leistungsindikatorkategorie zugeordnet sind.</summary>
      <returns>Eine <see cref="T:System.Diagnostics.InstanceDataCollectionCollection" />, die die Daten für Zähler- und Leistungsobjektinstanzen für die Kategorie enthält.</returns>
      <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />-Eigenschaft ist <see langword="null" />. Die Eigenschaft wurde möglicherweise nicht festgelegt.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Fehler beim Aufruf einer zugrunde liegenden System-API.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Ohne Administratorrechte ausgeführter Code hat versucht, einen Leistungsindikator zu lesen.</exception>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterCategoryType">
      <summary>Gibt an, ob die Leistungsindikatorkategorie mehrere Instanzen haben kann.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterCategoryType.MultiInstance">
      <summary>Die Leistungsindikatorkategorie kann mehrere Instanzen haben.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterCategoryType.SingleInstance">
      <summary>Die Leistungsindikatorkategorie kann nur eine einzelne Instanz haben.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterCategoryType.Unknown">
      <summary>Die Instanzfunktionalität für die Leistungsindikatorkategorie ist unbekannt.</summary>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterInstanceLifetime">
      <summary>Gibt die Lebensdauer einer Leistungsindikatorinstanz an.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Global">
      <summary>Entfernen Sie die Leistungsindikatorinstanz, wenn keine Zähler die Prozesskategorie verwenden.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process">
      <summary>Entfernen Sie die Leistungsindikatorinstanz, wenn der Prozess geschlossen wird.</summary>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterManager">
      <summary>Bereitet Leistungsdaten für die Bibliothek performance.dll vor, die beim Verwenden von Leistungsindikatoren vom System geladen wird.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterManager.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.PerformanceCounterManager" />-Klasse.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterManager.System#Diagnostics#ICollectData#CloseData">
      <summary>Wird von der Leistungsindikator-DLL zum Schließen der Leistungsdaten aufgerufen</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterManager.System#Diagnostics#ICollectData#CollectData(System.Int32,System.IntPtr,System.IntPtr,System.Int32,System.IntPtr@)">
      <summary>Routine für die Leistungsdatenauflistung. Wird von der Leistungsindikator-DLL PerfCount aufgerufen.</summary>
      <param name="callIdx">Der Call-Index.</param>
      <param name="valueNamePtr">Ein Zeiger auf eine Unicode-Zeichenfolgenliste mit den angeforderten Objektbezeichnern.</param>
      <param name="dataPtr">Ein Zeiger auf den Datenpuffer.</param>
      <param name="totalBytes">Ein Zeiger auf eine Anzahl von Bytes.</param>
      <param name="res">Enthält nach dem Beenden dieser Methode einen <see cref="T:System.IntPtr" /> mit einem Wert von -1.</param>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterType">
      <summary>Gibt die Formel an, mit der die <see cref="M:System.Diagnostics.PerformanceCounter.NextValue" />-Methode für eine <see cref="T:System.Diagnostics.PerformanceCounter" />-Instanz berechnet wird.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.AverageBase">
      <summary>Ein Basiszähler, der für die Berechnung der Durchschnittswerte von Zeit oder Anzahl verwendet wird, z. B. <see langword="AverageTimer32" /> und <see langword="AverageCount64" />. Speichert den Nenner für die Berechnung eines Indikators, um "Zeit pro Operation" oder "Anzahl pro Operation" auszugeben.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.AverageCount64">
      <summary>Ein Durchschnittsindikator, der die durchschnittliche Anzahl der während einer Operation verarbeiteten Elemente anzeigt. Indikatoren dieses Typs zeigen das Verhältnis der verarbeiteten Elemente und der Anzahl der durchgeführten Operationen an. Dieses Verhältnis wird durch Vergleich der Anzahl der innerhalb des letzten Zeitintervalls verarbeiteten Elemente mit der Anzahl der in diesem Intervall durchgeführten Operationen berechnet. Zähler dieses Typs enthalten „Physikalischer Datenträger\ Mittlere Bytes/Übertragung“.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.AverageTimer32">
      <summary>Ein Durchschnittsindikator, der die durchschnittliche Dauer eines Prozesses oder einer Operation angibt. Indikatoren dieses Typs geben das Verhältnis der Gesamtdauer des Messintervalls und der Anzahl der während dieser Zeit durchgeführten Prozesse oder Operationen an. Dieser Indikatortyp misst die Zeit in Ticks der Systemuhr. Zähler dieses Typs enthalten „Physikalischer Datenträger\ Mittlere Sek./Übertragung“.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CounterDelta32">
      <summary>Ein Differenzindikator, der die Änderung des gemessenen Attributs zwischen den beiden letzten Messintervallen anzeigt.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CounterDelta64">
      <summary>Ein Differenzindikator, der die Änderung des gemessenen Attributs zwischen den beiden letzten Messintervallen anzeigt. Er unterscheidet sich vom <see langword="CounterDelta32" />-Indikatortyp nur dadurch, dass er größere Felder verwendet, um größere Werte verarbeiten zu können.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CounterMultiBase">
      <summary>Ein Basisindikator, der die Anzahl der gemessenen Elemente angibt. Er wird als Nenner bei Durchschnittsberechnungen von Zeitwerten für mehrere gleichartige Elemente verwendet. Wird mit <see langword="CounterMultiTimer" />, <see langword="CounterMultiTimerInverse" />, <see langword="CounterMultiTimer100Ns" /> und <see langword="CounterMultiTimer100NsInverse" /> verwendet.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CounterMultiTimer">
      <summary>Ein Prozentindikator, der die Aktivitätsdauer mindestens einer Komponente als prozentualen Teil der Gesamtdauer des Messintervalls darstellt. Da der Zähler die Aktivitätsdauer von gleichzeitig aktiven Komponenten angibt, kann das prozentuale Ergebnis 100 Prozent überschreiten. Dieser Indikatortyp unterscheidet sich von <see langword="CounterMultiTimer100Ns" /> dadurch, dass die Zeit nicht in Einheiten von 100 Nanosekunden, sondern in Ticks des Systemzeitgebers gemessen wird. Dieser Indikatortyp ist ein Multitimer.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CounterMultiTimer100Ns">
      <summary>Ein Prozentindikator, der die Aktivitätsdauer mindestens einer Komponente als prozentualen Teil der Gesamtdauer des Messintervalls anzeigt. Die Zeit wird dabei in Einheiten von 100 Nanosekunden (ns) gemessen. Dieser Indikatortyp ist ein Multitimer.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CounterMultiTimer100NsInverse">
      <summary>Ein Prozentindikator, der die Aktivitätsdauer mindestens einer Komponente als prozentualen Teil der Gesamtdauer des Messintervalls anzeigt. Die Zeit wird bei diesem Indikatortyp in Einheiten von 100 Nanosekunden (ns) gemessen. Die Aktivitätszeit wird ermittelt, indem die Zeit gemessen wird, in der die Komponenten nicht aktiv waren, und das Ergebnis vom Produkt von 100 Prozent mit der Anzahl der überwachten Objekte subtrahiert wird. Dieser Indikatortyp ist ein inverser Multitimer.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CounterMultiTimerInverse">
      <summary>Ein Prozentindikator, der die Aktivitätsdauer mindestens einer Komponente als prozentualen Teil der Gesamtdauer des Messintervalls anzeigt. Die Aktivitätszeit wird ermittelt, indem die Zeit gemessen wird, in der die Komponenten nicht aktiv waren, und das Ergebnis vom Produkt von 100 Prozent mit der Anzahl der überwachten Objekte subtrahiert wird. Dieser Indikatortyp ist ein inverser Multitimer. Dies unterscheidet sich von CounterMultiTimer100NsInverse dadurch, dass die Zeit nicht in Einheiten von 100 Nanosekunden, sondern in Zeiteinheiten des Systemzeitgebers gemessen wird.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CounterTimer">
      <summary>Ein Prozentindikator, der die mittlere Aktivitätsdauer einer Komponente als prozentualen Anteil der Gesamtdauer des Messintervalls anzeigt.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CounterTimerInverse">
      <summary>Ein Prozentindikator, der den durchschnittlichen prozentualen Anteil der während eines Messintervalls beobachteten Aktivitätsdauer anzeigt. Der Wert dieser Indikatoren wird berechnet, indem der prozentuale Anteil der Aktivitätsdauer des Dienstes von 100 Prozent subtrahiert wird. Dies ist ein inverser Indikatortyp. Dies ist mit CounterTimer100NsInv identisch, außer dass die Zeit nicht in Einheiten von 100 Nanosekunden, sondern in Zeiteinheiten des Systemzeitgebers gemessen wird.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CountPerTimeInterval32">
      <summary>Ein Durchschnittsindikator, der die durchschnittliche Länge einer Warteschlange für eine Ressource über einen Zeitraum wiedergibt. Er zeigt den Quotienten aus der Differenz der während der letzten zwei Messintervalle beobachteten Warteschlangenlängen und der Dauer des Intervalls an. Dieser Typ eines Indikators wird i. d. R. zum Überwachen der Anzahl der Elemente verwendet, die sich in der Warteschlange oder im Wartezustand befinden.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CountPerTimeInterval64">
      <summary>Ein Durchschnittsindikator, der die durchschnittliche Länge einer Warteschlange für eine Ressource über einen Zeitraum wiedergibt. Zähler dieses Typs zeigen den Quotienten aus der Differenz der während der letzten zwei Messintervalle beobachteten Warteschlangenlängen und der Dauer des Intervalls an. Dieser Indikatortyp unterscheidet sich von <see langword="CountPerTimeInterval32" /> nur dadurch, dass er größere Felder verwendet, um größere Werte verarbeiten zu können. Dieser Typ eines Indikators wird i. d. R. zum Überwachen umfangreicher oder sehr zahlreicher Elemente verwendet, die sich in der Warteschlange oder im Wartezustand befinden.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.ElapsedTime">
      <summary>Ein Differenzzeitgeber, der die Gesamtzeit zwischen dem Startzeitpunkt der Komponente oder des Prozesses und dem Zeitpunkt der Berechnung dieses Werts anzeigt. Zähler dieses Typs enthalten „System\ Systembetriebszeit“.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.NumberOfItems32">
      <summary>Ein unmittelbarer Indikator, der den zuletzt beobachteten Wert anzeigt. Wird z. B. verwendet, um einen einfachen Zähler für Elemente oder Operationen zu verwalten. Zähler dieses Typs enthalten „Arbeitsspeicher\Verfügbare Bytes“.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.NumberOfItems64">
      <summary>Ein unmittelbarer Indikator, der den zuletzt beobachteten Wert anzeigt. Wird z. B. verwendet, um einen einfachen Zähler für eine sehr große Anzahl von Elementen oder Operationen zu verwalten. Er unterscheidet sich von <see langword="NumberOfItems32" /> nur dadurch, dass er größere Felder verwendet, um größere Werte verarbeiten zu können.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX32">
      <summary>Ein unmittelbarer Indikator, der den zuletzt beobachteten Wert im Hexadezimalformat anzeigt. Wird z. B. verwendet, um einen einfachen Zähler für Elemente oder Operationen zu verwalten.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX64">
      <summary>Ein unmittelbarer Indikator, der den zuletzt beobachteten Wert anzeigt. Wird z. B. verwendet, um einen einfachen Zähler für eine sehr große Anzahl von Elementen oder Operationen zu verwalten. Er unterscheidet sich von <see langword="NumberOfItemsHEX32" /> nur dadurch, dass er größere Felder verwendet, um größere Werte verarbeiten zu können.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond32">
      <summary>Ein Differenzindikator, der die mittlere Anzahl der pro Sekunde des Messintervalls durchgeführten Operationen anzeigt. Indikatoren dieses Typs messen die Zeit in Ticks der Systemuhr. Zähler dieses Typs enthalten „System\ Lesevorgänge/s“.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond64">
      <summary>Ein Differenzindikator, der die mittlere Anzahl der pro Sekunde des Messintervalls durchgeführten Operationen anzeigt. Indikatoren dieses Typs messen die Zeit in Ticks der Systemuhr. Dieser Indikatortyp unterscheidet sich von <see langword="RateOfCountsPerSecond32" /> nur dadurch, dass er größere Felder verwendet, um größere Werte verarbeiten und eine große Anzahl von Elementen oder Operationen pro Sekunde verfolgen zu können, z. B. eine Byte-Übertragungsrate. Zähler dieses Typs enthalten „System\ Bytes gelesen/s“.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.RawBase">
      <summary>Ein Basisindikator, in dem der Nenner eines Indikators gespeichert wird, der einen arithmetischen Bruch darstellt. Stellen Sie sicher, dass dieser Wert größer als 0 ist, bevor Sie ihn als Nenner in einer <see langword="RawFraction" />-Wertberechnung verwenden.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.RawFraction">
      <summary>Ein unmittelbarer Prozentindikator, der das Verhältnis einer Teilmenge zur zugehörigen Menge in Prozent anzeigt. Es kann z. B. die Anzahl der auf einer Festplatte verwendeten Bytes mit der Gesamtzahl der Bytes auf der Festplatte verglichen werden. Indikatoren dieses Typs zeigen keinen durchschnittlichen Wert über eine Zeitspanne an, sondern den aktuellen Prozentwert. Zähler dieses Typs enthalten „Auslagerungsdatei\Maximale Belegung (%)“.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.SampleBase">
      <summary>Ein Basisindikator, der die Anzahl der Samplingabtastungen speichert und als Nenner der Samplingbruchzahl verwendet wird. Die Samplingbruchzahl ist die Anzahl der Messungen, die für eine Messabtastung 1 (oder <see langword="true" />) ergeben haben. Stellen Sie sicher, dass dieser Wert größer als 0 (null) ist, bevor Sie ihn als Nenner in einer Berechnung von <see langword="SampleFraction" /> verwenden.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.SampleCounter">
      <summary>Ein Durchschnittsindikator, der die durchschnittliche Anzahl der in einer Sekunde durchgeführten Operationen anzeigt. Bei einem Indikator dieses Typs ergibt eine Samplingabtastung entweder 1 oder 0. Bei den Indikatordaten handelt es sich um die Anzahl der gemessenen Einsen. Die Zeiteinheit ist dabei ein Tick des Systemzeitgebers.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.SampleFraction">
      <summary>Ein Prozentindikator, der das durchschnittliche Verhältnis der Anzahl der Erfolge und der Gesamtzahl der Operationen während der letzten zwei Messintervalle angibt. Zähler dieses Typs enthalten „Cache\Festsetzung – Lesetreffer (%)“.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.Timer100Ns">
      <summary>Ein Prozentindikator, der die Aktivitätsdauer einer Komponente als prozentualen Anteil der Gesamtdauer des Messintervalls darstellt. Die Zeit wird dabei in Einheiten von 100 Nanosekunden (ns) gemessen. Zeiger dieses Typs sind zur Messung der Aktivität einer einzelnen Komponente vorgesehen. Zähler dieses Typs enthalten „Prozessor\ Benutzerzeit (%)“.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.Timer100NsInverse">
      <summary>Ein Prozentindikator, der den durchschnittlichen prozentualen Anteil der während eines Messintervalls beobachteten Aktivitätsdauer anzeigt. Dies ist ein inverser Indikator. Zähler dieses Typs enthalten „Prozessor\ Prozessorzeit (%)“.</summary>
    </member>
    <member name="T:System.Diagnostics.PerformanceData.CounterData">
      <summary>Enthält die unformatierten Daten für einen Indikator.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterData.Decrement">
      <summary>Verringert den Leistungsindikatorwert um 1.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterData.Increment">
      <summary>Erhöht den Leistungsindikatorwert um 1.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterData.IncrementBy(System.Int64)">
      <summary>Erhöht den Leistungsindikatorwert um den angegebenen Wert.</summary>
      <param name="value">Der Wert, um den der Leistungsindikatorwert erhöht werden soll. Der Inkrementwert kann negativ oder positiv sein.</param>
    </member>
    <member name="P:System.Diagnostics.PerformanceData.CounterData.RawValue">
      <summary>Legt die unformatierten Leistungsindikatordaten fest oder ruft sie ab.</summary>
      <returns>Die unformatierten Indikatordaten.</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceData.CounterData.Value">
      <summary>Legt die Leistungsindikatordaten fest oder ruft sie ab.</summary>
      <returns>Die Indikatordaten.</returns>
    </member>
    <member name="T:System.Diagnostics.PerformanceData.CounterSet">
      <summary>Definiert einen Satz logischer Indikatoren.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSet.#ctor(System.Guid,System.Guid,System.Diagnostics.PerformanceData.CounterSetInstanceType)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.PerformanceData.CounterSet" />-Klasse.</summary>
      <param name="providerGuid">Eine GUID, die den Anbieter der Indikatordaten eindeutig identifiziert. Verwenden Sie die im Manifest angegebene GUID.</param>
      <param name="counterSetGuid">Eine GUID, die den Indikatorensatz für einen Anbieter eindeutig identifiziert. Verwenden Sie die im Manifest angegebene GUID.</param>
      <param name="instanceType">Identifiziert den Typ des Indikatorensatzes, beispielsweise, ob es sich um einen Indikatorensatz mit einer einzigen oder mit mehreren Instanzen handelt.</param>
      <exception cref="T:System.InsufficientMemoryException">Es ist nicht genügend Arbeitsspeicher verfügbar, um den Vorgang abzuschließen.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Wird in Versionen vor Windows Vista nicht unterstützt.</exception>
      <exception cref="T:System.ArgumentException">Einer der Parameter ist NULL oder nicht gültig.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Fehler bei einem zugrunde liegenden Win32-Funktionsaufruf.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType)">
      <summary>Fügt dem Indikatorensatz unter Verwendung des angegebenen Indikatorbezeichners und -typs einen Indikator hinzu.</summary>
      <param name="counterId">Identifiziert den Indikator. Verwenden Sie denselben Wert, den Sie im Manifest verwendet haben, um den Indikator zu definieren.</param>
      <param name="counterType">Identifiziert den Indikatortyp. Der Indikatortyp bestimmt, wie die Indikatordaten berechnet werden, wie ihr Durchschnittswert ermittelt wird und wie sie angezeigt werden.</param>
      <exception cref="T:System.ArgumentException">Der Indikatorbezeichner ist bereits im Satz vorhanden oder ist negativ, oder der Indikatortyp ist NULL oder nicht gültig.</exception>
      <exception cref="T:System.InvalidOperationException">Sie können dem Indikatorensatz keine Indikatoren hinzufügen, nachdem Sie eine Instanz des Indikatorensatzes erstellt haben.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType,System.String)">
      <summary>Fügt dem Indikatorensatz unter Verwendung des angegebenen Indikatorbezeichners, -typs und Anzeigenamens für den Indikator einen Indikator hinzu.</summary>
      <param name="counterId">Identifiziert den Indikator. Verwenden Sie denselben Wert, den Sie im Manifest verwendet haben, um den Indikator zu definieren.</param>
      <param name="counterType">Identifiziert den Indikatortyp. Der Indikatortyp bestimmt, wie die Indikatordaten berechnet werden, wie ihr Durchschnittswert ermittelt wird und wie sie angezeigt werden.</param>
      <param name="counterName">Der Name des Indikators. Sie können diesen Namen verwenden, um den Indikator in der Instanz des Indikatorensatzes zu indizieren. (Siehe <see cref="P:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Item(System.String)" />.)</param>
      <exception cref="T:System.ArgumentException">Der Indikatorbezeichner ist bereits im Satz vorhanden oder ist negativ, oder der Indikatortyp ist NULL oder nicht gültig.</exception>
      <exception cref="T:System.InvalidOperationException">Sie können dem Indikatorensatz keine Indikatoren hinzufügen, nachdem Sie eine Instanz des Indikatorensatzes erstellt haben.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSet.CreateCounterSetInstance(System.String)">
      <summary>Erstellt eine Instanz des Indikatorensatzes.</summary>
      <param name="instanceName">Der Name der Instanz. Der Name muss eindeutig sein.</param>
      <returns>Eine Instanz des Indikatorensatzes, die die Indikatordaten enthält.</returns>
      <exception cref="T:System.ArgumentException">Der Instanzname ist NULL.</exception>
      <exception cref="T:System.InvalidOperationException">Sie müssen dem Indikatorensatz Indikatoren hinzufügen, bevor Sie eine Instanz des Indikatorensatzes erstellen.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSet.Dispose">
      <summary>Gibt alle von diesem Objekt verwendeten, nicht verwalteten Ressourcen frei.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSet.Dispose(System.Boolean)">
      <summary>Gibt alle von diesem Objekt verwendeten, nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
      <param name="disposing">
        <see langword="True" />, wenn diese Methode über die Dispose-Methode aufgerufen wurde, andernfalls <see langword="False" />.</param>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSet.Finalize">
      <summary>Gibt Ressourcen frei, bevor das Objekt durch die Garbage Collection freigegeben wird.</summary>
    </member>
    <member name="T:System.Diagnostics.PerformanceData.CounterSetInstance">
      <summary>Erstellt eine Instanz der in der <see cref="T:System.Diagnostics.PerformanceData.CounterSet" />-Klasse definierten logischen Indikatoren.</summary>
    </member>
    <member name="P:System.Diagnostics.PerformanceData.CounterSetInstance.Counters">
      <summary>Ruft die Auflistung der Indikatordaten für die Instanz des Indikatorensatzes ab.</summary>
      <returns>Eine Auflistung der in der Instanz des Indikatorensatzes enthaltenen Indikatordaten.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSetInstance.Dispose">
      <summary>Gibt alle von diesem Objekt verwendeten nicht verwalteten Ressourcen frei.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSetInstance.Finalize">
      <summary>Gibt nicht verwaltete Ressourcen frei und führt andere Bereinigungsvorgänge durch.</summary>
    </member>
    <member name="T:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet">
      <summary>Enthält die Auflistung der Indikatorwerte.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Dispose">
      <summary>Gibt alle von diesem Objekt verwendeten nicht verwalteten Ressourcen frei.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Finalize">
      <summary>Gibt einem Objekt Gelegenheit zu dem Versuch, Ressourcen freizugeben und andere Bereinigungen durchzuführen, bevor es von der Garbage Collection freigegeben wird.</summary>
    </member>
    <member name="P:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Item(System.Int32)">
      <summary>Greift mithilfe des angegebenen Indikatorbezeichners auf einen Indikatorwert in der Auflistung zu.</summary>
      <param name="counterId">Bezeichner des Indikators. Dies ist der Bezeichner, den Sie beim Hinzufügen des Indikators zum Indikatorensatz verwendet haben.</param>
      <returns>Die Indikatordaten.</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Item(System.String)">
      <summary>Greift mithilfe des angegebenen Indikatornamens auf einen Indikatorwert in der Auflistung zu.</summary>
      <param name="counterName">Der Name des Indikators. Dies ist der Name, den Sie beim Hinzufügen des Indikators zum Indikatorensatz verwendet haben.</param>
      <returns>Die Indikatordaten.</returns>
    </member>
    <member name="T:System.Diagnostics.PerformanceData.CounterSetInstanceType">
      <summary>Gibt an, ob der Indikatorensatz mehrere Instanzen, z. B. Prozesse und physische Datenträger, oder nur eine Instanz, z. B. Speicher, zulässt.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.GlobalAggregate">
      <summary>Der Indikatorensatz enthält Indikatoren mit einer einzigen Instanz, deren Aggregatwert aus einer oder mehreren Quellen ermittelt wird. Beispielsweise kann ein Indikator dieses Typs von Indikatorensatz die Anzahl der Lesevorgänge von jeder der drei Festplatten des Computers abrufen und ihre Werte addieren.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.GlobalAggregateWithHistory">
      <summary>Dieser Typ ähnelt <see cref="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.GlobalAggregate" />, mit der Ausnahme, dass dieser Typ von Indikatorensatz alle Indikatorwerte für die Lebensdauer der Consumeranwendung speichert (der Indikatorwert wird auch nach Ablauf der Lebensdauer des Indikators gespeichert). Wenn beispielsweise eine der Festplatten im Beispiel für einen globalen Aggregatwert nicht mehr verfügbar ist, bleibt die Gesamtzahl der von dieser Festplatte gelesenen Bytes weiter verfügbar und wird zum Berechnen des Aggregatwerts verwendet.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.InstanceAggregate">
      <summary>Dieser Typ ähnelt <see cref="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.MultipleAggregate" />, mit der Ausnahme, dass Indikatordaten aus Instanzen mit demselben Namen aggregiert werden, statt alle Instanzdaten zu einer Aggregatinstanz (_Total) zu aggregieren. Wenn beispielsweise mehrere Anbieterprozesse Instanzen mit dem Namen IExplore enthalten, weisen <see cref="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.Multiple" />-CounterSet und <see cref="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.MultipleAggregate" />-CounterSet mehrere IExplore-Instanzen (IExplore, IExplore#1, IExplore#2 usw.) auf. Jedoch veröffentlicht ein <see cref="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.InstanceAggregate" />-Instanztyp nur eine IExplore-Instanz mit aggregierten Indikatordaten aus allen Instanzen mit dem Namen IExplore.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.Multiple">
      <summary>Der Indikatorensatz enthält Indikatoren mit mehreren Instanzen, z. B. einen Indikator, der die durchschnittliche Datenträger-E/A für einen Prozess misst.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.MultipleAggregate">
      <summary>Der Indikatorensatz enthält Indikatoren mit mehreren Instanzen, deren Aggregatwert aus allen Instanzen des Indikators ermittelt wird. Beispielsweise kann ein Indikator dieses Typs von Indikatorensatz die gesamte Threadausführungszeit für alle Threads in einer Multithreadanwendung abrufen und ihre Werte addieren.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.Single">
      <summary>Der Indikatorensatz enthält Indikatoren mit einer einzigen Instanz, z. B. einen Indikator, der den physischen Speicher misst.</summary>
    </member>
    <member name="T:System.Diagnostics.PerformanceData.CounterType">
      <summary>Definiert die möglichen Typen von Indikatoren. Jedem Indikator wird ein Indikatortyp zugewiesen. Der Indikatortyp bestimmt, wie die Indikatordaten berechnet werden, wie ihr Durchschnittswert ermittelt wird und wie sie angezeigt werden.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.AverageBase">
      <summary>Dieser Indikator wird als Basis (Nenner) bei der Berechnung von Durchschnittswerten von Zeit oder Anzahl für den <see cref="F:System.Diagnostics.PerformanceData.CounterType.AverageCount64" />-Indikatortyp und den <see cref="F:System.Diagnostics.PerformanceData.CounterType.AverageTimer32" />-Indikatortyp verwendet. Dieser Indikatortyp erfasst nur den zuletzt beobachteten Wert. (Siehe den PERF_AVERAGE_BASE-Indikatortyp im Deployment Kit.)</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.AverageCount64">
      <summary>Dieser Indikatortyp zeigt die durchschnittliche Anzahl der während einer Operation verarbeiteten Elemente an. Indikatoren dieses Typs zeigen das Verhältnis der verarbeiteten Elemente (z. B. gesendete Bytes) und der Anzahl der durchgeführten Operationen an. Dieses Verhältnis wird durch Vergleich der Anzahl der innerhalb des letzten Zeitintervalls verarbeiteten Elemente mit der Anzahl der in diesem Intervall durchgeführten Operationen berechnet. (Siehe den PERF_AVERAGE_BULK-Indikatortyp im Deployment Kit.)</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.AverageTimer32">
      <summary>Dieser Indikatortyp misst die durchschnittliche Dauer eines Prozesses oder einer Operation. Indikatoren dieses Typs geben das Verhältnis der Gesamtdauer des Messintervalls und der Anzahl der während dieser Zeit durchgeführten Prozesse oder Operationen an. Dieser Indikatortyp misst die Zeit in Ticks der Systemuhr. (Siehe den PERF_AVERAGE_TIMER-Indikatortyp im Deployment Kit.)</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.Delta32">
      <summary>Dieser Indikatortyp zeigt die Änderung des gemessenen Attributs zwischen den beiden letzten Messintervallen an. (Siehe den PERF_COUNTER_DELTA-Indikatortyp im Deployment Kit.)</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.Delta64">
      <summary>Dieser Indikatortyp zeigt die Änderung des gemessenen Attributs zwischen den beiden letzten Messintervallen an. Er unterscheidet sich vom <see cref="F:System.Diagnostics.PerformanceData.CounterType.Delta32" />-Indikatortyp nur dadurch, dass er größere Felder verwendet, um größere Werte verarbeiten zu können. (Siehe den PERF_COUNTER_LARGE_DELTA-Indikatortyp im Deployment Kit.)</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.ElapsedTime">
      <summary>Dieser Indikatortyp zeigt die Gesamtzeit zwischen dem Startzeitpunkt der Komponente oder des Prozesses und dem Zeitpunkt der Berechnung dieses Werts an. (Siehe den PERF_ELAPSED_TIME-Indikatortyp im Deployment Kit.)</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.LargeQueueLength">
      <summary>Dieser Indikatortyp überwacht die durchschnittliche Länge einer Warteschlange für eine Ressource über einen Zeitraum. Zähler dieses Typs zeigen den Quotienten aus der Differenz der während der letzten zwei Messintervalle beobachteten Warteschlangenlängen und der Dauer des Intervalls an. Dieser Indikatortyp unterscheidet sich vom <see cref="F:System.Diagnostics.PerformanceData.CounterType.QueueLength" />-Indikatortyp nur dadurch, dass er größere Felder verwendet, um größere Werte verarbeiten zu können. (Siehe den PERF_COUNTER_LARGE_QUEUELEN_TYPE-Indikatortyp im Deployment Kit.)</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerBase">
      <summary>Gibt die Anzahl der gemessenen Elemente an. Er wird als Nenner bei Durchschnittsberechnungen von Zeitwerten für mehrere gleichartige Elemente verwendet. Dieser Typ unterstützt die folgenden Indikatortypen: <see cref="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageActive" />, <see cref="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageNotActive" />, <see cref="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageActive100Ns" /> und <see cref="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageNotActive100Ns" />.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageActive">
      <summary>Dieser Indikatortyp ist ein Multitimer. Multitimer sammeln Daten von mehreren Instanzen einer Komponente, z. B. von Prozessoren oder Festplatten. Indikatoren dieses Typs zeigen die Aktivitätsdauer mindestens einer Komponente als prozentualen Teil der Gesamtdauer des Messintervalls an. Da der Zähler die Aktivitätsdauer von gleichzeitig aktiven Komponenten angibt, kann das prozentuale Ergebnis 100 Prozent überschreiten. Dieser Indikatortyp unterscheidet sich von <see cref="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageActive100Ns" /> dadurch, dass die Zeit nicht in Einheiten von 100 Nanosekunden, sondern in Ticks des Systemzeitgebers gemessen wird. (Siehe den PERF_COUNTER_MULTI_TIMER-Indikatortyp im Deployment Kit.)</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageActive100Ns">
      <summary>Dieser Indikatortyp zeigt die Aktivitätsdauer mindestens einer Komponente als prozentualen Teil der Gesamtdauer des Messintervalls an. Die Zeit wird dabei in Einheiten von 100 Nanosekunden gemessen. Dieser Indikatortyp ist ein Multitimer. Multitimer sind zur Überwachung von mehreren Instanzen einer Komponente bestimmt, z. B. von Prozessoren oder Festplatten. (Siehe den PERF_100NSEC_MULTI_TIMER-Indikatortyp im Deployment Kit.)</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageNotActive">
      <summary>Dieser Indikatortyp zeigt die Aktivitätsdauer mindestens einer Komponente als prozentualen Teil der Gesamtdauer des Messintervalls an. Dieser Indikatortyp ist ein inverser Multitimer. Multitimer überwachen mehrere Instanzen einer Komponente, z. B. Prozessoren oder Festplatten. Inverse Indikatoren messen die Zeit, in der eine Komponente nicht aktiv ist, und leiten die Aktivitätsdauer aus dieser Messung ab. Dieser Indikator unterscheidet sich von <see cref="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageNotActive100Ns" /> dadurch, dass die Zeit nicht in Einheiten von 100 Nanosekunden, sondern in Ticks des Systemzeitgebers gemessen wird. (Siehe den PERF_COUNTER_MULTI_TIMER_INV-Indikatortyp im Deployment Kit.)</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageNotActive100Ns">
      <summary>Dieser Indikatortyp zeigt die Aktivitätsdauer mindestens einer Komponente als prozentualen Teil der Gesamtdauer des Messintervalls an. Die Zeit wird bei diesem Indikatortyp in Einheiten von 100 Nanosekunden gemessen. Dieser Indikatortyp ist ein inverser Multitimer. Multitimer sind zur Überwachung von mehreren Instanzen einer Komponente bestimmt, z. B. von Prozessoren oder Festplatten. Inverse Indikatoren messen die Zeit, in der eine Komponente nicht aktiv ist, und leiten die Aktivitätsdauer aus der Messung der Inaktivitätsdauer ab. (Siehe den PERF_100NSEC_MULTI_TIMER_INV-Indikatortyp im Deployment Kit.)</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.ObjectSpecificTimer">
      <summary>Dieser 64-Bit-Indikatortyp ist ein Zeitgeber, der Werte in objektspezifischen Einheiten anzeigt. (Siehe den PERF_OBJ_TIME_TIMER-Indikatortyp im Deployment Kit.)</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.PercentageActive">
      <summary>Dieser Indikatortyp zeigt die mittlere Aktivitätsdauer einer Komponente als prozentualen Anteil der Gesamtdauer des Messintervalls an. (Siehe den PERF_COUNTER_TIMER-Indikatortyp im Deployment Kit.)</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.PercentageActive100Ns">
      <summary>Dieser Indikatortyp zeigt die Aktivitätsdauer einer Komponente als prozentualen Anteil der Gesamtdauer des Messintervalls an. Die Zeit wird dabei in Einheiten von 100 Nanosekunden gemessen. Zeiger dieses Typs sind zur Messung der Aktivität einer einzelnen Komponente vorgesehen. (Siehe den PERF_100NSEC_TIMER-Indikatortyp im Deployment Kit.)</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.PercentageNotActive">
      <summary>Dies ist ein inverser Indikatortyp. Inverse Indikatoren messen die Zeit, in der eine Komponente nicht aktiv ist, und leiten die Aktivitätsdauer aus dieser Messung ab. Indikatoren dieses Typs zeigen den durchschnittlichen prozentualen Anteil der während eines Messintervalls beobachteten Aktivitätsdauer an. Der Wert dieser Indikatoren wird berechnet, indem der prozentuale Anteil der Aktivitätsdauer des Dienstes von 100 Prozent subtrahiert wird. Dieser Indikatortyp unterscheidet sich vom <see cref="F:System.Diagnostics.PerformanceData.CounterType.PercentageNotActive100Ns" />-Indikatortyp nur dadurch, dass die Zeit nicht in Einheiten von 100 Nanosekunden, sondern in Ticks des Systemzeitgebers gemessen wird. (Siehe den PERF_COUNTER_TIMER_INV-Indikatortyp im Deployment Kit.)</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.PercentageNotActive100Ns">
      <summary>Dieser Indikatortyp zeigt den durchschnittlichen prozentualen Anteil der während eines Messintervalls beobachteten Aktivitätsdauer an. Dies ist ein inverser Indikator. Inverse Indikatoren werden berechnet, indem der prozentuale Anteil der Aktivitätsdauer des Dienstes von 100 Prozent subtrahiert wird. (Siehe den PERF_100NSEC_TIMER_INV-Indikatortyp im Deployment Kit.)</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.PrecisionObjectSpecificTimer">
      <summary>Dieser Indikatortyp zeigt einen Wert an, der aus zwei Indikatorwerten besteht: der Betrag der verstrichenen Zeit des überwachten Ereignisses und die im PerfFreq-Feld des Objektheaders angegebene Frequenz. Dieser Indikatortyp unterscheidet sich von anderen Indikatorzeitgebern dadurch, dass der Indikatorwert zusammen mit dem Teilstrichwert des Takts angegeben wird, um mögliche Abweichungen aufgrund der Wartezeit des Funktionsaufrufs zu verhindern. Präzisionsindikatortypen werden verwendet, wenn die Präzision von Standardsystemzeitgebern für genaue Ablesungen nicht ausreicht. (Siehe den PERF_PRECISION_OBJECT_TIMER-Indikatortyp im Deployment Kit.)</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.PrecisionSystemTimer">
      <summary>Dieser Indikatortyp zeigt einen Wert an, der aus zwei Indikatorwerten besteht: der Betrag der verstrichenen Zeit des überwachten Ereignisses und die Frequenz aus dem Systemzeitgeber. Dieser Indikatortyp unterscheidet sich von anderen Indikatorzeitgebern dadurch, dass der Indikatorwert zusammen mit dem Teilstrichwert des Takts angegeben wird, um mögliche Abweichungen aufgrund der Wartezeit des Funktionsaufrufs zu verhindern. Präzisionsindikatortypen werden verwendet, wenn die Präzision von Standardsystemzeitgebern für genaue Ablesungen nicht ausreicht. (Siehe den PERF_PRECISION_TIMER-Indikatortyp im Deployment Kit.)</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.PrecisionTimer100Ns">
      <summary>Dieser Indikatortyp zeigt einen Wert an, der aus zwei Indikatorwerten besteht: der Betrag der verstrichenen Zeit des überwachten Ereignisses und die Zeit der Uhr aus einem privaten Zeitgeber in denselben Einheiten. Die Zeit wird dabei in Einheiten von 100 Nanosekunden gemessen. Dieser Indikatortyp unterscheidet sich von anderen Indikatorzeitgebern dadurch, dass der Indikatorwert zusammen mit dem Wert für den Teilstrichwert des Takts angegeben wird, um mögliche Abweichungen aufgrund der Wartezeit des Funktionsaufrufs zu verhindern. Präzisionsindikatortypen werden verwendet, wenn die Präzision von Standardsystemzeitgebern für genaue Ablesungen nicht ausreicht. (Siehe den PERF_PRECISION_100NS_TIMER-Indikatortyp im Deployment Kit.)</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.QueueLength">
      <summary>Dieser Indikatortyp ist für die Überwachung der durchschnittlichen Länge einer Warteschlange für eine Ressource über einen bestimmten Zeitraum vorgesehen. Er zeigt den Quotienten aus der Differenz der während der letzten zwei Messintervalle beobachteten Warteschlangenlängen und der Dauer des Intervalls an. (Siehe den PERF_COUNTER_QUEUELEN_TYPE-Indikatortyp im Deployment Kit.)</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.QueueLength100Ns">
      <summary>Dieser Indikatortyp misst das Produkt aus Warteschlangenlänge und Zeit mit der Zeit in Einheiten von 100 Nanosekunden als Basis. (Siehe den PERF_COUNTER_100NS_QUEUELEN_TYPE-Indikatortyp im Deployment Kit.)</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.QueueLengthObjectTime">
      <summary>Dieser Indikatortyp misst das Produkt aus Warteschlangenlänge und Zeit mit einer objektspezifischen Zeitbasis. (Siehe den PERF_COUNTER_OBJ_QUEUELEN_TYPE-Indikatortyp im Deployment Kit.)</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RateOfCountPerSecond32">
      <summary>Dieser Indikatortyp zeigt die mittlere Anzahl der pro Sekunde des Messintervalls durchgeführten Operationen an. Indikatoren dieses Typs messen die Zeit in Ticks der Systemuhr. (Siehe den PERF_COUNTER_COUNTER-Indikatortyp im Deployment Kit.)</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RateOfCountPerSecond64">
      <summary>Dieser Indikatortyp zeigt die mittlere Anzahl der pro Sekunde des Messintervalls durchgeführten Operationen an. Indikatoren dieses Typs messen die Zeit in Ticks der Systemuhr. Dieser Indikatortyp unterscheidet sich vom <see cref="F:System.Diagnostics.PerformanceData.CounterType.RateOfCountPerSecond32" />-Typ nur dadurch, dass er größere Felder verwendet, um größere Werte verarbeiten zu können. (Siehe den PERF_COUNTER_BULK_COUNT-Indikatortyp im Deployment Kit.)</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RawBase32">
      <summary>Dieser Indikatortyp erfasst nur den zuletzt beobachteten Wert. Der Wert wird als Nenner eines Indikators verwendet, der einen arithmetischen Bruch darstellt. Dieser Typ unterstützt den <see cref="F:System.Diagnostics.PerformanceData.CounterType.RawFraction32" />-Indikatortyp. (Siehe den PERF_RAW_BASE-Indikatortyp im Deployment Kit.)</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RawBase64">
      <summary>Dieser Indikatortyp erfasst den zuletzt beobachteten Wert. Er unterscheidet sich vom <see cref="F:System.Diagnostics.PerformanceData.CounterType.RawBase32" />-Indikatortyp nur dadurch, dass er größere Felder verwendet, um größere Werte verarbeiten zu können. Dieser Typ unterstützt den <see cref="F:System.Diagnostics.PerformanceData.CounterType.RawFraction64" />-Indikatortyp. (Siehe den PERF_LARGE_RAW_BASE-Indikatortyp im Deployment Kit.)</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RawData32">
      <summary>Dieser Indikatortyp zeigt nur den zuletzt beobachteten Wert an. Er zeigt keinen Durchschnittswert an. (Siehe den PERF_COUNTER_RAWCOUNT-Indikatortyp im Deployment Kit.)</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RawData64">
      <summary>Dieser Indikatortyp zeigt nur den zuletzt beobachteten Wert und keinen Durchschnittswert an. Er unterscheidet sich vom <see cref="F:System.Diagnostics.PerformanceData.CounterType.RawData32" />-Indikatortyp nur dadurch, dass er größere Felder verwendet, um größere Werte verarbeiten zu können. (Siehe den PERF_COUNTER_LARGE_RAWCOUNT-Indikatortyp im Deployment Kit.)</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RawDataHex32">
      <summary>Dieser Indikatortyp zeigt den zuletzt beobachteten Wert im Hexadezimalformat an. Er zeigt keinen Durchschnittswert an. (Siehe den PERF_COUNTER_RAWCOUNT_HEX-Indikatortyp im Deployment Kit.)</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RawDataHex64">
      <summary>Dieser Indikatortyp zeigt den zuletzt beobachteten Wert im Hexadezimalformat an. Er unterscheidet sich vom <see cref="F:System.Diagnostics.PerformanceData.CounterType.RawDataHex32" />-Indikatortyp nur dadurch, dass er größere Felder verwendet, um größere Werte verarbeiten zu können. (Siehe den PERF_COUNTER_LARGE_RAWCOUNT_HEX-Indikatortyp im Deployment Kit.)</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RawFraction32">
      <summary>Dieser Indikatortyp zeigt das Verhältnis einer Teilmenge zur Gesamtmenge als Prozentwert an. Es kann z. B. die Anzahl der auf einer Festplatte verwendeten Bytes mit der Gesamtzahl der Bytes auf der Festplatte verglichen werden. Indikatoren dieses Typs zeigen keinen durchschnittlichen Wert über eine Zeitspanne an, sondern den aktuellen Prozentwert. (Siehe den PERF_RAW_FRACTION-Indikatortyp im Deployment Kit.)</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RawFraction64">
      <summary>Dieser Indikatortyp zeigt das Verhältnis einer Teilmenge zur Gesamtmenge als Prozentwert an. Es kann z. B. die Anzahl der auf einer Festplatte verwendeten Bytes mit der Gesamtzahl der Bytes auf der Festplatte verglichen werden. Indikatoren dieses Typs zeigen keinen durchschnittlichen Wert über eine Zeitspanne an, sondern den aktuellen Prozentwert. Er unterscheidet sich vom <see cref="F:System.Diagnostics.PerformanceData.CounterType.RawFraction32" />-Indikatortyp nur dadurch, dass er größere Felder verwendet, um größere Werte verarbeiten zu können.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.SampleBase">
      <summary>Dieser Indikator speichert die Anzahl der Samplingabtastungen und wird als Nenner der Samplingbruchzahl verwendet. Dieser Typ unterstützt den <see cref="F:System.Diagnostics.PerformanceData.CounterType.SampleFraction" />-Indikatortyp.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.SampleCounter">
      <summary>Dieser Indikatortyp zeigt die durchschnittliche Anzahl der in einer Sekunde durchgeführten Operationen an. Die Zeiteinheit ist dabei ein Tick des Systemzeitgebers. Die Variable F stellt die Anzahl von Ticks dar, die in einer Sekunde auftreten. Durch den Faktor F wird das Ergebnis in Sekunden umgerechnet. (Siehe den PERF_SAMPLE_COUNTER-Indikatortyp im Deployment Kit.)</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.SampleFraction">
      <summary>Dieser Indikatortyp zeigt das durchschnittliche Verhältnis der Anzahl der Erfolge und der Gesamtzahl der Operationen während der letzten zwei Messintervalle an. (Siehe den PERF_SAMPLE_FRACTION-Indikatortyp im Deployment Kit.)</summary>
    </member>
  </members>
</doc>