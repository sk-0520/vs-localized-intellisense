<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Windows.Forms.Design</name>
  </assembly>
  <members>
    <member name="T:System.ComponentModel.Design.ComponentDesigner">
      <summary vsli:raw="Extends the design mode behavior of a component.">Erweitert das Entwurfsmodusverhalten einer Komponente.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentDesigner&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.ComponentDesigner" />-Klasse.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ActionLists">
      <summary vsli:raw="Gets the design-time action lists supported by the component associated with the designer.">Ruft die Entwurfszeit-Aktionslisten ab, die von der dem Designer zugeordneten Komponente unterstützt werden.</summary>
      <returns vsli:raw="The design-time action lists supported by the component associated with the designer.">Die Entwurfszeit-Aktionslisten, die von der dem Designer zugeordneten Komponente unterstützt werden.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.AssociatedComponents">
      <summary vsli:raw="Gets the collection of components associated with the component managed by the designer.">Ruft die Auflistung der Komponenten ab, die der durch den Designer verwalteten Komponente zugeordnet ist.</summary>
      <returns vsli:raw="The components that are associated with the component managed by the designer.">Die Komponenten, die der durch den Designer verwalteten Komponente zugeordnet sind.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.Component">
      <summary vsli:raw="Gets the component this designer is designing.">Ruft die Komponente ab, die von diesem Designer entworfen wird.</summary>
      <returns vsli:raw="The component managed by the designer.">Die durch den Designer verwaltete Komponente.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentDesigner&quot; /&gt;.">Gibt alle vom <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> verwendeten Ressourcen frei.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentDesigner&quot; /&gt; and optionally releases the managed resources.">Gibt die von <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.DoDefaultAction">
      <summary vsli:raw="Creates a method signature in the source code file for the default event on the component and navigates the user's cursor to that location.">Erstellt eine Methodensignatur in der Quellcodedatei für das Standardereignis der Komponente und verschiebt den Cursor des Benutzers an diese Position.</summary>
      <exception cref="T:System.ComponentModel.Design.CheckoutException" vsli:raw="An attempt to check out a file that is checked into a source code management program failed.">Das Auschecken einer Datei ist fehlgeschlagen, die in ein Quellcode-Verwaltungsprogramm eingecheckt ist.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.GetService(System.Type)">
      <summary vsli:raw="Attempts to retrieve the specified type of service from the design mode site of the designer's component.">Versucht, den angegebenen Diensttyp von der Entwurfsmodussite der Komponente des Designers abzurufen.</summary>
      <param name="serviceType" vsli:raw="The type of service to request.">Der Typ des anzufordernden Dienstes.</param>
      <returns vsli:raw="An object implementing the requested service, or &lt;see langword=&quot;null&quot; /&gt; if the service cannot be resolved.">Eine Objektimplementierung des angeforderten Dienstes oder <see langword="null" />, wenn der Dienst nicht ermittelt werden kann.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute">
      <summary vsli:raw="Gets an attribute that indicates the type of inheritance of the associated component.">Ruft ein Attribut ab, das den Vererbungstyp der zugeordneten Komponente angibt.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.InheritanceAttribute&quot; /&gt; for the associated component.">Das <see cref="T:System.ComponentModel.InheritanceAttribute" /> für die zugeordnete Komponente.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.Inherited">
      <summary vsli:raw="Gets a value indicating whether this component is inherited.">Ruft einen Wert ab, der angibt, ob diese Komponente geerbt wurde.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the component is inherited; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Komponente geerbt wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary vsli:raw="Prepares the designer to view, edit, and design the specified component.">Bereitet den Designer zum Anzeigen, Bearbeiten und Entwerfen der angegebenen Komponente vor.</summary>
      <param name="component" vsli:raw="The component for this designer.">Die Komponente für diesen Designer.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InitializeExistingComponent(System.Collections.IDictionary)">
      <summary vsli:raw="Reinitializes an existing component.">Initialisiert eine vorhandene Komponente erneut.</summary>
      <param name="defaultValues" vsli:raw="A name/value dictionary of default values to apply to properties. May be &lt;see langword=&quot;null&quot; /&gt; if no default values are specified.">Ein Name-Wert-Wörterbuch der auf Eigenschaften anzuwendenden Standardwerte. Kann <see langword="null" /> sein, wenn keine Standardwerte angegeben werden.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InitializeNewComponent(System.Collections.IDictionary)">
      <summary vsli:raw="Initializes a newly created component.">Initialisiert eine neu erstellte Komponente.</summary>
      <param name="defaultValues" vsli:raw="A name/value dictionary of default values to apply to properties. May be &lt;see langword=&quot;null&quot; /&gt; if no default values are specified.">Ein Name-Wert-Wörterbuch der auf Eigenschaften anzuwendenden Standardwerte. Kann <see langword="null" /> sein, wenn keine Standardwerte angegeben werden.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InitializeNonDefault">
      <summary vsli:raw="Initializes the settings for an imported component that is already initialized to settings other than the defaults.">Initialisiert die Einstellungen für eine importierte Komponente, die bereits mit Einstellungen initialisiert wurde, die nicht der Standardeinstellung entsprechen.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InvokeGetInheritanceAttribute(System.ComponentModel.Design.ComponentDesigner)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.ComponentModel.InheritanceAttribute&quot; /&gt; of the specified &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentDesigner&quot; /&gt;.">Ruft das <see cref="T:System.ComponentModel.InheritanceAttribute" /> des angegebenen <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> ab.</summary>
      <param name="toInvoke" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentDesigner&quot; /&gt; whose inheritance attribute to retrieve.">Der <see cref="T:System.ComponentModel.Design.ComponentDesigner" />, dessen Vererbungsattribut abgerufen werden soll.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.InheritanceAttribute&quot; /&gt; of the specified designer.">Das <see cref="T:System.ComponentModel.InheritanceAttribute" /> des angegebenen Designers.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.OnSetComponentDefaults">
      <summary vsli:raw="Sets the default properties for the component.">Legt die Standardeigenschaften für die Komponente fest.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ParentComponent">
      <summary vsli:raw="Gets the parent component for this designer.">Ruft die übergeordnete Komponente für diesen Designer ab.</summary>
      <returns vsli:raw="The parent component for this designer, or &lt;see langword=&quot;null&quot; /&gt; if this designer is the root component.">Die übergeordnete Komponente für diesen Designer oder <see langword="null" />, wenn dieser Designer die Stammkomponente ist.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PostFilterAttributes(System.Collections.IDictionary)">
      <summary vsli:raw="Allows a designer to change or remove items from the set of attributes that it exposes through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">Ermöglicht einem Designer das Ändern oder Entfernen von Elementen aus dem Satz von Attributen, der über einen <see cref="T:System.ComponentModel.TypeDescriptor" /> verfügbar gemacht wird.</summary>
      <param name="attributes" vsli:raw="The attributes for the class of the component.">Die Attribute für die Klasse der Komponente.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PostFilterEvents(System.Collections.IDictionary)">
      <summary vsli:raw="Allows a designer to change or remove items from the set of events that it exposes through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">Ermöglicht einem Designer das Ändern oder Entfernen von Elementen aus dem Satz von Ereignissen, der über einen <see cref="T:System.ComponentModel.TypeDescriptor" /> verfügbar gemacht wird.</summary>
      <param name="events" vsli:raw="The events for the class of the component.">Die Ereignisse für die Klasse der Komponente.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PostFilterProperties(System.Collections.IDictionary)">
      <summary vsli:raw="Allows a designer to change or remove items from the set of properties that it exposes through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">Ermöglicht einem Designer das Ändern oder Entfernen von Elementen aus dem Satz von Eigenschaften, der über einen <see cref="T:System.ComponentModel.TypeDescriptor" /> verfügbar gemacht wird.</summary>
      <param name="properties" vsli:raw="The properties for the class of the component.">Die Eigenschaften für die Klasse der Komponente.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PreFilterAttributes(System.Collections.IDictionary)">
      <summary vsli:raw="Allows a designer to add to the set of attributes that it exposes through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">Ermöglicht einem Designer das Hinzufügen zu dem Satz von Attributen, der über einen <see cref="T:System.ComponentModel.TypeDescriptor" /> verfügbar gemacht wird.</summary>
      <param name="attributes" vsli:raw="The attributes for the class of the component.">Die Attribute für die Klasse der Komponente.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PreFilterEvents(System.Collections.IDictionary)">
      <summary vsli:raw="Allows a designer to add to the set of events that it exposes through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">Ermöglicht einem Designer ein Hinzufügen zu dem Satz von Ereignissen, der durch einen <see cref="T:System.ComponentModel.TypeDescriptor" /> verfügbar gemacht wird.</summary>
      <param name="events" vsli:raw="The events for the class of the component.">Die Ereignisse für die Klasse der Komponente.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary vsli:raw="Allows a designer to add to the set of properties that it exposes through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">Ermöglicht einem Designer ein Hinzufügen zu dem Satz von Eigenschaften, der durch einen <see cref="T:System.ComponentModel.TypeDescriptor" /> verfügbar gemacht wird.</summary>
      <param name="properties" vsli:raw="The properties for the class of the component.">Die Eigenschaften für die Klasse der Komponente.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanged(System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
      <summary vsli:raw="Notifies the &lt;see cref=&quot;T:System.ComponentModel.Design.IComponentChangeService&quot; /&gt; that this component has been changed.">Benachrichtigt <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> darüber, dass diese Komponente geändert wurde.</summary>
      <param name="member" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.MemberDescriptor&quot; /&gt; that indicates the member that has been changed.">Ein <see cref="T:System.ComponentModel.MemberDescriptor" />, der den Member angibt, der geändert wurde.</param>
      <param name="oldValue" vsli:raw="The old value of the member.">Der alte Wert des Members.</param>
      <param name="newValue" vsli:raw="The new value of the member.">Der neue Wert des Members.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanging(System.ComponentModel.MemberDescriptor)">
      <summary vsli:raw="Notifies the &lt;see cref=&quot;T:System.ComponentModel.Design.IComponentChangeService&quot; /&gt; that this component is about to be changed.">Benachrichtigt <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> darüber, dass diese Komponente gerade geändert wird.</summary>
      <param name="member" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.MemberDescriptor&quot; /&gt; that indicates the member that is about to be changed.">Ein <see cref="T:System.ComponentModel.MemberDescriptor" />, der den Member angibt, der gerade geändert wird.</param>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ShadowProperties">
      <summary vsli:raw="Gets a collection of property values that override user settings.">Ruft eine Auflistung von Eigenschaftswerten ab, die Benutzereinstellungen überschreiben.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection&quot; /&gt; that indicates the shadow properties of the design document.">Eine <see cref="T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection" />, die die Shadowing-Eigenschaften des Entwurfsdokuments angibt.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection">
      <summary vsli:raw="Represents a collection of shadow properties that should override inherited default or assigned values for specific properties. This class cannot be inherited.">Stellt eine Auflistung von Shadowingeigenschaften dar, die geerbte Standardwerte oder zugewiesene Werte für bestimmte Eigenschaften überschreiben sollen. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Contains(System.String)">
      <summary vsli:raw="Indicates whether a property matching the specified name exists in the collection.">Gibt an, ob die Eigenschaft, die mit dem angegebenen Namen übereinstimmt, in der Auflistung vorhanden ist.</summary>
      <param name="propertyName" vsli:raw="The name of the property to check for in the collection.">Der Name der Eigenschaft, der in der Auflistung gesucht werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property exists in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Eigenschaft in der Auflistung vorhanden ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the object at the specified index.">Ruft das Objekt am angegebenen Index ab oder legt dieses fest.</summary>
      <param name="propertyName" vsli:raw="The name of the property to access in the collection.">Der Name der Eigenschaft in der Auflistung, auf die zugegriffen werden soll.</param>
      <returns vsli:raw="The value of the specified property, if it exists in the collection. Otherwise, the value is retrieved from the current value of the nonshadowed property.">Der Wert der angegebenen Eigenschaft, sofern in der Auflistung vorhanden. Andernfalls wird der Wert aus dem aktuellen Wert der Nicht-Shadowingeigenschaft abgerufen.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterAttributes(System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)&quot; /&gt; method.">Eine Beschreibung dieses Members finden Sie unter der <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)" />-Methode.</summary>
      <param name="attributes" vsli:raw="The &lt;see cref=&quot;T:System.Attribute&quot; /&gt; objects for the class of the component. The keys in the dictionary of attributes are the &lt;see cref=&quot;P:System.Attribute.TypeId&quot; /&gt; values of the attributes.">Die <see cref="T:System.Attribute" />-Objekte für die Klasse der Komponente. Die Schlüssel im Attributwörterbuch sind die <see cref="P:System.Attribute.TypeId" />-Werte der Attribute.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterEvents(System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)&quot; /&gt; method.">Eine Beschreibung dieses Members finden Sie unter der <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)" />-Methode.</summary>
      <param name="events" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; objects that represent the events of the class of the component. The keys in the dictionary of events are event names.">Die <see cref="T:System.ComponentModel.EventDescriptor" />-Objekte, die die Ereignisse der Klasse der Komponente darstellen. Die Schlüssel im Ereigniswörterbuch sind Ereignisnamen.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterProperties(System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)&quot; /&gt; method.">Eine Beschreibung dieses Members finden Sie unter der <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)" />-Methode.</summary>
      <param name="properties" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects that represent the properties of the class of the component. The keys in the dictionary of properties are property names.">Die <see cref="T:System.ComponentModel.PropertyDescriptor" />-Objekte, die die Eigenschaften der Klasse der Komponente darstellen. Die Schlüssel im Eigenschaftenwörterbuch sind Eigenschaftennamen.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterAttributes(System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)&quot; /&gt; method.">Eine Beschreibung dieses Members finden Sie unter der <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)" />-Methode.</summary>
      <param name="attributes" vsli:raw="The &lt;see cref=&quot;T:System.Attribute&quot; /&gt; objects for the class of the component. The keys in the dictionary of attributes are the &lt;see cref=&quot;P:System.Attribute.TypeId&quot; /&gt; values of the attributes.">Die <see cref="T:System.Attribute" />-Objekte für die Klasse der Komponente. Die Schlüssel im Attributwörterbuch sind die <see cref="P:System.Attribute.TypeId" />-Werte der Attribute.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterEvents(System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)&quot; /&gt; method.">Eine Beschreibung dieses Members finden Sie unter der <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)" />-Methode.</summary>
      <param name="events" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; objects that represent the events of the class of the component. The keys in the dictionary of events are event names.">Die <see cref="T:System.ComponentModel.EventDescriptor" />-Objekte, die die Ereignisse der Klasse der Komponente darstellen. Die Schlüssel im Ereigniswörterbuch sind Ereignisnamen.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterProperties(System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)&quot; /&gt; method.">Eine Beschreibung dieses Members finden Sie unter der <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)" />-Methode.</summary>
      <param name="properties" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects that represent the properties of the class of the component. The keys in the dictionary of properties are property names.">Die <see cref="T:System.ComponentModel.PropertyDescriptor" />-Objekte, die die Eigenschaften der Klasse der Komponente darstellen. Die Schlüssel im Eigenschaftenwörterbuch sind Eigenschaftennamen.</param>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#ITreeDesigner#Children">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;P:System.ComponentModel.Design.ITreeDesigner.Children&quot; /&gt; property.">Eine Beschreibung dieses Members finden Sie unter der <see cref="P:System.ComponentModel.Design.ITreeDesigner.Children" />-Eigenschaft.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; that contains the collection of &lt;see cref=&quot;T:System.ComponentModel.Design.IDesigner&quot; /&gt; designers contained in the current parent designer.">Ein <see cref="T:System.Collections.ICollection" />, der die Auflistung von im aktuellen übergeordneten Designer enthaltenen <see cref="T:System.ComponentModel.Design.IDesigner" />-Designern enthält.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#ITreeDesigner#Parent">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;P:System.ComponentModel.Design.ITreeDesigner.Parent&quot; /&gt; property.">Eine Beschreibung dieses Members finden Sie unter der <see cref="P:System.ComponentModel.Design.ITreeDesigner.Parent" />-Eigenschaft.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.Design.IDesigner&quot; /&gt; representing the parent designer, or &lt;see langword=&quot;null&quot; /&gt; if there is no parent.">Ein <see cref="T:System.ComponentModel.Design.IDesigner" />, der den übergeordneten Designer darstellt, oder <see langword="null" />, wenn kein übergeordneter Designer vorhanden ist.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.Verbs">
      <summary vsli:raw="Gets the design-time verbs supported by the component that is associated with the designer.">Ruft die Entwurfszeitverben ab, die von der dem Designer zugeordneten Komponente unterstützt werden.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerVerbCollection&quot; /&gt; of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerVerb&quot; /&gt; objects, or &lt;see langword=&quot;null&quot; /&gt; if no designer verbs are available. This default implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">Eine <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> von <see cref="T:System.ComponentModel.Design.DesignerVerb" />-Objekten oder <see langword="null" />, wenn keine Designerverben verfügbar sind. Diese Standardimplementierung gibt immer <see langword="null" /> zurück.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionHeaderItem">
      <summary vsli:raw="Represents a static header item on a smart tag panel. This class cannot be inherited.">Stellt ein statisches Headerelement in einem Smarttagbereich dar. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionHeaderItem.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionHeaderItem&quot; /&gt; class using the provided name string.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.DesignerActionHeaderItem" />-Klasse unter Verwendung der angegebenen Zeichenfolge.</summary>
      <param name="displayName" vsli:raw="The text to be displayed in the header.">Der im Header anzuzeigende Text.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionHeaderItem.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionHeaderItem&quot; /&gt; class using the provided name and category strings.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.DesignerActionHeaderItem" />-Klasse unter Verwendung der angegebenen Zeichenfolgen für den Namen und die Kategorie.</summary>
      <param name="displayName" vsli:raw="The text to be displayed in the header.">Der im Header anzuzeigende Text.</param>
      <param name="category" vsli:raw="The case-sensitive &lt;see cref=&quot;T:System.String&quot; /&gt; that defines the groupings of panel entries.">Der <see cref="T:System.String" />, bei dem die Groß- und Kleinschreibung berücksichtigt wird und der die Gruppierungen von Bereichseinträgen definiert.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionItem">
      <summary vsli:raw="Provides the base class for types that represent a panel item on a smart tag panel.">Stellt die Basisklasse für Typen bereit, die in einem Smarttagbereich ein Bereichselement darstellen.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItem.#ctor(System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.DesignerActionItem" />-Klasse.</summary>
      <param name="displayName" vsli:raw="The panel text for this item.">Der Bereichstext für dieses Element.</param>
      <param name="category" vsli:raw="The case-sensitive &lt;see cref=&quot;T:System.String&quot; /&gt; that defines the groupings of panel entries.">Der <see cref="T:System.String" />, bei dem die Groß- und Kleinschreibung berücksichtigt wird und der die Gruppierungen von Bereichseinträgen definiert.</param>
      <param name="description" vsli:raw="Supplemental text for this item, potentially used in ToolTips or the status bar.">Ergänzender Text für dieses Element, der unter Umständen in QuickInfos oder der Statusleiste verwendet wird.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.AllowAssociate">
      <summary vsli:raw="Gets or sets a value indicating whether to allow this item to be placed into a group of items that have the same &lt;see cref=&quot;P:System.ComponentModel.Design.DesignerActionItem.Category&quot; /&gt; property value.">Ruft einen Wert ab, der angibt, ob dieses Element in eine Gruppe von Elementen eingefügt werden darf, die denselben <see cref="P:System.ComponentModel.Design.DesignerActionItem.Category" />-Eigenschaftswert aufweisen, oder legt diesen fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the item can be grouped; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das Element gruppiert werden kann, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.Category">
      <summary vsli:raw="Gets the group name for an item.">Ruft den Gruppennamen für ein Element ab.</summary>
      <returns vsli:raw="A string that represents the group that the item is a member of.">Eine Zeichenfolge, die die Gruppe darstellt, in der das Element ein Member ist.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.Description">
      <summary vsli:raw="Gets the supplemental text for the item.">Ruft den ergänzenden Text für das Element ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the descriptive text for the item.">Ein <see cref="T:System.String" />, der den beschreibenden Text für das Element enthält.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.DisplayName">
      <summary vsli:raw="Gets the text for this item.">Ruft den Text für dieses Element ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the display text for the item.">Ein <see cref="T:System.String" />, der den anzuzeigenden Text für das Element enthält.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.Properties">
      <summary vsli:raw="Gets a reference to a collection that can be used to store programmer-defined key/value pairs.">Ruft einen Verweis auf eine Auflistung ab, die zum Speichern von vom Programmierer bereitgestellten Schlüssel-Wert-Paaren verwendet werden kann.</summary>
      <returns vsli:raw="A collection that implements &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt;.">Eine Auflistung, die <see cref="T:System.Collections.IDictionary" /> implementiert.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.ShowInSourceView">
      <summary vsli:raw="Gets or sets a value that indicates whether this item appears in source code view.">Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob dieses Element in der Quellcodeansicht angezeigt wird.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this item appears in source code view; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />, wenn dieses Element in der Quellcodeansicht angezeigt wird; andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionItemCollection">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; objects.">Stellt eine Auflistung von<see cref="T:System.ComponentModel.Design.DesignerActionItem" />-Objekten dar.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Add(System.ComponentModel.Design.DesignerActionItem)">
      <summary vsli:raw="Adds the supplied &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; to the current collection.">Fügt der aktuellen Auflistung die angegebene <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> hinzu.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; to add.">Das hinzuzufügende <see cref="T:System.ComponentModel.Design.DesignerActionItem" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt; index at which the value has been added.">Der <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />-Index, an dem der Wert hinzugefügt wurde.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Contains(System.ComponentModel.Design.DesignerActionItem)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt; contains a specific element.">Ermittelt, ob <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> ein bestimmtes Element enthält.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; to locate in the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt;.">Das <see cref="T:System.ComponentModel.Design.DesignerActionItem" />, das in der <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> gesucht werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt; contains the specified value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> den angegebenen Wert enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.CopyTo(System.ComponentModel.Design.DesignerActionItem[],System.Int32)">
      <summary vsli:raw="Copies the elements of the current collection into the supplied array, starting at the specified array index.">Kopiert die Elemente der aktuellen Auflistung in das angegebene Array, beginnend beim angegebenen Arrayindex.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; array that is the destination of the elements copied from the current collection. The array must have zero-based indexing.">Das eindimensionale <see cref="T:System.ComponentModel.Design.DesignerActionItem" />-Array, das das Ziel der aus der aktuellen Auflistung kopierten Elemente ist. Für das Array muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Der nullbasierte Index im <paramref name="array" />, bei dem der Kopiervorgang beginnt.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.IndexOf(System.ComponentModel.Design.DesignerActionItem)">
      <summary vsli:raw="Determines the index of a specific item in the collection.">Bestimmt den Index eines bestimmten Elements in der Auflistung.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; to locate in the collection.">Die <see cref="T:System.ComponentModel.Design.DesignerActionItem" />, die in der Auflistung gesucht werden soll.</param>
      <returns vsli:raw="The zero-based index of the first occurrence of &lt;paramref name=&quot;value&quot; /&gt; within the entire &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt;, if found; otherwise, -1.">Der nullbasierte Index des ggf. ersten Vorkommens von <paramref name="value" /> in der gesamten <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />, andernfalls -1.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Insert(System.Int32,System.ComponentModel.Design.DesignerActionItem)">
      <summary vsli:raw="Inserts an element into the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt; at the specified index.">Fügt am angegebenen Index ein Element in die <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> ein.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; should be inserted.">Der nullbasierte Index, an dem <paramref name="value" /> eingefügt werden soll.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; to insert.">Der einzufügende <see cref="T:System.ComponentModel.Design.DesignerActionItem" />.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItemCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">Ruft das Element am angegebenen Index ab oder legt dieses fest.</summary>
      <param name="index" vsli:raw="The zero-based index of the element.">Der nullbasierte Index des Elements.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; at the specified index.">Der <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> am angegebenen Index.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Remove(System.ComponentModel.Design.DesignerActionItem)">
      <summary vsli:raw="Removes the first occurrence of a specific object from the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt;.">Entfernt das erste Vorkommen eines angegebenen Objekts aus der <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; to remove from the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt;.">Der <see cref="T:System.ComponentModel.Design.DesignerActionItem" />, der aus der <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> entfernt werden soll.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionList">
      <summary vsli:raw="Provides the base class for types that define a list of items used to create a smart tag panel.">Stellt die Basisklasse für Typen bereit, die eine Liste von Elementen definieren, mit denen ein Smarttagbereich erstellt wird.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionList.#ctor(System.ComponentModel.IComponent)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.DesignerActionList" />-Klasse.</summary>
      <param name="component" vsli:raw="A component related to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt;.">Eine auf <see cref="T:System.ComponentModel.Design.DesignerActionList" /> bezogene Komponente.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionList.AutoShow">
      <summary vsli:raw="Gets or sets a value indicating whether the smart tag panel should automatically be displayed when it is created.">Ruft einen Wert ab oder legt einen fest, der angibt, ob der Smarttagbereich beim Erstellen automatisch angezeigt werden soll.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the panel should be shown when the owning component is created; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Bereich beim Erstellen der besitzenden Komponente angezeigt werden soll; andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionList.Component">
      <summary vsli:raw="Gets the component related to &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt;.">Ruft die auf <see cref="T:System.ComponentModel.Design.DesignerActionList" /> bezogene Komponente ab.</summary>
      <returns vsli:raw="A component related to &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt;.">Eine auf <see cref="T:System.ComponentModel.Design.DesignerActionList" /> bezogene Komponente.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionList.GetService(System.Type)">
      <summary vsli:raw="Returns an object that represents a service provided by the component associated with the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt;.">Gibt ein Objekt zurück, das einen Dienst darstellt, der von der mit <see cref="T:System.ComponentModel.Design.DesignerActionList" /> verbundenen Komponente bereitgestellt wird.</summary>
      <param name="serviceType" vsli:raw="A service provided by the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt;.">Ein von der <see cref="T:System.ComponentModel.Component" /> bereitgestellter Dienst.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents a service provided by the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt;. This value is &lt;see langword=&quot;null&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; does not provide the specified service.">Ein <see cref="T:System.Object" />, das einen durch <see cref="T:System.ComponentModel.Component" /> bereitgestellten Dienst darstellt. Dieser Wert ist <see langword="null" />, wenn <see cref="T:System.ComponentModel.Component" /> den angegebenen Dienst nicht bereitstellt.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems">
      <summary vsli:raw="Returns the collection of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; objects contained in the list.">Ruft die Auflistung der in der Liste enthaltenen <see cref="T:System.ComponentModel.Design.DesignerActionItem" />-Objekte ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; array that contains the items in this list.">Ein <see cref="T:System.ComponentModel.Design.DesignerActionItem" />-Array mit den in dieser Liste enthaltenen Elementen.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListCollection">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects.">Stellt eine Auflistung von<see cref="T:System.ComponentModel.Design.DesignerActionList" />-Objekten dar.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; class with default settings.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />-Klasse mit Standardeinstellungen.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.#ctor(System.ComponentModel.Design.DesignerActionList[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; class with the specified panel items.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />-Klasse mit den angegebenen Bereichselementen.</summary>
      <param name="value" vsli:raw="The array of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects to populate the collection.">Das Array von <see cref="T:System.ComponentModel.Design.DesignerActionList" />-Objekten, mit denen die Auflistung gefüllt werden soll.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Add(System.ComponentModel.Design.DesignerActionList)">
      <summary vsli:raw="Adds the supplied &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to the current collection.">Fügt der aktuellen Auflistung die angegebene <see cref="T:System.ComponentModel.Design.DesignerActionList" /> hinzu.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to add.">Das hinzuzufügende <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</param>
      <returns vsli:raw="The position into which the new element is inserted into the collection's internal list.">Die Position, an der das neue Element in die interne Liste der Auflistung eingefügt wird.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.AddRange(System.ComponentModel.Design.DesignerActionList[])">
      <summary vsli:raw="Adds the elements of the supplied &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; array to the end of the current collection.">Fügt die Elemente des angegebenen <see cref="T:System.ComponentModel.Design.DesignerActionList" />-Arrays am Ende der Auflistung hinzu.</summary>
      <param name="value" vsli:raw="The array of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects to add.">Das Array von <see cref="T:System.ComponentModel.Design.DesignerActionList" />-Objekten, das hinzugefügt werden soll.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.AddRange(System.ComponentModel.Design.DesignerActionListCollection)">
      <summary vsli:raw="Adds the elements of the supplied &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; to the end of the current collection.">Fügt die Elemente der angegebenen <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> am Ende der Auflistung hinzu.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; to add.">Das hinzuzufügende <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Contains(System.ComponentModel.Design.DesignerActionList)">
      <summary vsli:raw="Indicates whether the collection contains a specific value.">Gibt an, ob die Auflistung einen bestimmten Wert enthält.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to search for.">Die zu suchende <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains the specified value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Auflistung den angegebenen Wert enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.CopyTo(System.ComponentModel.Design.DesignerActionList[],System.Int32)">
      <summary vsli:raw="Copies the elements of the current collection into the supplied array, starting at the specified array index.">Kopiert die Elemente der aktuellen Auflistung in das angegebene Array, beginnend beim angegebenen Arrayindex.</summary>
      <param name="array" vsli:raw="The one-dimensional array of type &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; that is the destination of the elements copied from the current collection. The array must have zero-based indexing.">Das eindimensionale Array vom Typ <see cref="T:System.ComponentModel.Design.DesignerActionList" />, in das die Elemente aus der aktuellen Auflistung kopiert werden. Für das Array muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Der nullbasierte Index im <paramref name="array" />, bei dem der Kopiervorgang beginnt.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than 0.">
        <paramref name="index" /> ist kleiner als 0.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in the current collection is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination array.">
        <paramref name="array" /> ist mehrdimensional.  

oder - 
Die Anzahl der Elemente in der aktuellen Auflistung ist größer als der verfügbare Platz vom <paramref name="index" /> bis zum Ende des Zielarrays.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="A problem occurred casting the elements of the current collection to the type of the destination array, perhaps as the result of a failed downcast.">Beim Umwandeln der Elemente der aktuellen Auflistung in den Typ des Zielarrays ist ein Problem aufgetreten, welches möglicherweise auf eine fehlgeschlagene Umwandlung zurückzuführen ist.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.IndexOf(System.ComponentModel.Design.DesignerActionList)">
      <summary vsli:raw="Determines the index of a specific item in the collection.">Bestimmt den Index eines bestimmten Elements in der Auflistung.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to locate in the collection.">Die <see cref="T:System.ComponentModel.Design.DesignerActionList" />, die in der Auflistung gesucht werden soll.</param>
      <returns vsli:raw="The index of &lt;paramref name=&quot;value&quot; /&gt; if found in the internal list; otherwise, -1.">Der Index von <paramref name="value" />, wenn das Element in der internen Liste gefunden wird, andernfalls -1.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Insert(System.Int32,System.ComponentModel.Design.DesignerActionList)">
      <summary vsli:raw="Inserts the supplied &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; into the collection at the specified position.">Fügt die angegebene <see cref="T:System.ComponentModel.Design.DesignerActionList" /> an der angegebenen Position in die Auflistung ein.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; should be inserted.">Der nullbasierte Index, an dem <paramref name="value" /> eingefügt werden soll.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to insert into the collection.">Die in die Auflistung einzufügende <see cref="T:System.ComponentModel.Design.DesignerActionList" />-Klasse.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than 0 or greater than the count of elements in the current collection.">
        <paramref name="index" /> ist kleiner als 0 oder größer als die Anzahl der Elemente in der aktuellen Auflistung.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">Ruft das Element am angegebenen Index ab oder legt dieses fest.</summary>
      <param name="index" vsli:raw="The zero-based index of the element.">Der nullbasierte Index des Elements.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; at the specified index.">Der <see cref="T:System.ComponentModel.Design.DesignerActionList" /> am angegebenen Index.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.OnValidate(System.Object)">
      <summary vsli:raw="Performs additional custom processes when validating a value.">Führt zusätzliche benutzerdefinierte Prozesse beim Validieren eines Werts aus.</summary>
      <param name="value" vsli:raw="The object to validate.">Das Objekt, dessen Gültigkeit überprüft werden soll.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Remove(System.ComponentModel.Design.DesignerActionList)">
      <summary vsli:raw="Removes the first occurrence of a specific &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; from the collection.">Entfernt das erste Vorkommen einer bestimmten <see cref="T:System.ComponentModel.Design.DesignerActionList" /> aus der Auflistung.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to remove from the current collection.">Die aus der aktuellen Auflistung zu entfernende <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged&quot; /&gt; event.">Stellt Daten für das <see cref="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged" />-Ereignis bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.#ctor(System.Object,System.ComponentModel.Design.DesignerActionListsChangedType,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs" />-Klasse.</summary>
      <param name="relatedObject" vsli:raw="The object that is associated with the collection.">Das Objekt, das der Auflistung zugeordnet ist.</param>
      <param name="changeType" vsli:raw="A value that specifies whether a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; has been added or removed from the collection.">Ein Wert, der angibt, ob eine <see cref="T:System.ComponentModel.Design.DesignerActionList" /> hinzugefügt oder aus der Auflistung entfernt wurde.</param>
      <param name="actionLists" vsli:raw="The collection of list elements after the action has been applied.">Die Auflistung der Listenelemente, nachdem die Aktion ausgeführt wurde.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.ActionLists">
      <summary vsli:raw="Gets the collection of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects associated with this event.">Ruft die Auflistung von <see cref="T:System.ComponentModel.Design.DesignerActionList" />-Objekten ab, die diesem Ereignis zugeordnet sind.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; that represents the current state of the collection.">Ein <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />, das den aktuellen Zustand der Auflistung darstellt.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.ChangeType">
      <summary vsli:raw="Gets a flag indicating whether an element has been added or removed from the collection of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects.">Ruft ein Flag ab, das angibt, ob ein Element der Auflistung der <see cref="T:System.ComponentModel.Design.DesignerActionList" />-Objekte hinzugefügt oder daraus entfernt wurde.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListsChangedType&quot; /&gt; that indicates the type of change.">Ein <see cref="T:System.ComponentModel.Design.DesignerActionListsChangedType" />, der den Typ der Änderung angibt.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.RelatedObject">
      <summary vsli:raw="Gets the object that is associated with the collection of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects.">Ruft das Objekt ab, das der Auflistung von <see cref="T:System.ComponentModel.Design.DesignerActionList" />-Objekten zugeordnet ist.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; associated with the managed &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt;.">Das der verwalteten <see cref="T:System.Object" /> zugeordnete <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListsChangedEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged&quot; /&gt; event of a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionService&quot; /&gt;. This class cannot be inherited.">Stellt die Methode zur Behandlung des <see cref="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged" />-Ereignisses eines <see cref="T:System.ComponentModel.Design.DesignerActionService" />-Objekts dar. Diese Klasse kann nicht vererbt werden.</summary>
      <param name="sender" vsli:raw="The source of the event.">Die Quelle des Ereignisses.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListsChangedType">
      <summary vsli:raw="Specifies the type of change occurring in a collection of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects.">Gibt den Typ der Änderung an, der in einer Auflistung von <see cref="T:System.ComponentModel.Design.DesignerActionList" />-Objekten auftritt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionListsChangedType.ActionListsAdded">
      <summary vsli:raw="One or more &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects have been added to the collection.">Der Auflistung sind ein oder mehrere <see cref="T:System.ComponentModel.Design.DesignerActionList" />-Objekte hinzugefügt worden.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionListsChangedType.ActionListsRemoved">
      <summary vsli:raw="One or more &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects have been removed from the collection.">Ein oder mehrere <see cref="T:System.ComponentModel.Design.DesignerActionList" />-Objekte sind aus der Auflistung entfernt worden.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionMethodItem">
      <summary vsli:raw="Represents a smart tag panel item that is associated with a method in a class derived from &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt;.">Stellt ein Smarttagbereichselement dar, das einer Methode in einer Klasse zugeordnet ist, die von <see cref="T:System.ComponentModel.Design.DesignerActionList" /> abgeleitet wurde.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; class, with the specified method and display names.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" />-Klasse mit der angegebenen Methode und den angegebenen Anzeigenamen.</summary>
      <param name="actionList" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; that contains the method this item is associated with.">Die <see cref="T:System.ComponentModel.Design.DesignerActionList" />, die die Methode enthält, der dieses Element zugeordnet ist.</param>
      <param name="memberName" vsli:raw="The case-sensitive name of the method in the class derived from &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to invoke through the panel item.">Der Name (Groß-/Kleinschreibung beachten) der Methode in der von <see cref="T:System.ComponentModel.Design.DesignerActionList" /> abgeleiteten Klasse, der durch das Bereichselement aufgerufen werden soll.</param>
      <param name="displayName" vsli:raw="The panel text for this item.">Der Bereichstext für dieses Element.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; class, with the specified method and display names, and a flag that indicates whether the item should appear in other user interface contexts.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" />-Klasse mit der angegebenen Methode und den angegebenen Anzeigenamen und einem Flag, das angibt, ob das Element in anderen Benutzeroberflächenkontexten angezeigt werden soll.</summary>
      <param name="actionList" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; that contains the method this item is associated with.">Die <see cref="T:System.ComponentModel.Design.DesignerActionList" />, die die Methode enthält, der dieses Element zugeordnet ist.</param>
      <param name="memberName" vsli:raw="The case-sensitive name of the method in the class derived from &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to invoke through the panel item.">Der Name (Groß-/Kleinschreibung beachten) der Methode in der von <see cref="T:System.ComponentModel.Design.DesignerActionList" /> abgeleiteten Klasse, der durch das Bereichselement aufgerufen werden soll.</param>
      <param name="displayName" vsli:raw="The panel text for this item.">Der Bereichstext für dieses Element.</param>
      <param name="includeAsDesignerVerb" vsli:raw="A flag that specifies whether to also treat the associated method as a designer verb.">Ein Flag, das angibt, ob die zugeordnete Methode auch als Designerverb behandelt werden soll.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; class, with the specified method, display, and category names.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" />-Klasse mit der angegebenen Methode und den angegebenen Anzeige- und Kategorienamen.</summary>
      <param name="actionList" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; that contains the method this item is associated with.">Die <see cref="T:System.ComponentModel.Design.DesignerActionList" />, die die Methode enthält, der dieses Element zugeordnet ist.</param>
      <param name="memberName" vsli:raw="The case-sensitive name of the method in the class derived from &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to invoke through the panel item.">Der Name (Groß-/Kleinschreibung beachten) der Methode in der von <see cref="T:System.ComponentModel.Design.DesignerActionList" /> abgeleiteten Klasse, der durch das Bereichselement aufgerufen werden soll.</param>
      <param name="displayName" vsli:raw="The panel text for this item.">Der Bereichstext für dieses Element.</param>
      <param name="category" vsli:raw="The case-sensitive &lt;see cref=&quot;T:System.String&quot; /&gt; used to group similar items on the panel.">Der <see cref="T:System.String" /> (Groß- und Kleinschreibung beachten) zum Gruppieren gleicher Elemente im Bereich.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; class, with the specified method, display, and category names, and a flag that indicates whether the item should appear in other user interface contexts.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" />-Klasse mit der angegebenen Methode, den angegebenen Anzeige- und Kategorienamen und einem Flag, das angibt, ob das Element in anderen Benutzeroberflächenkontexten angezeigt werden soll.</summary>
      <param name="actionList" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; that contains the method this item is associated with.">Die <see cref="T:System.ComponentModel.Design.DesignerActionList" />, die die Methode enthält, der dieses Element zugeordnet ist.</param>
      <param name="memberName" vsli:raw="The case-sensitive name of the method in the class derived from &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to invoke through the panel item.">Der Name (Groß-/Kleinschreibung beachten) der Methode in der von <see cref="T:System.ComponentModel.Design.DesignerActionList" /> abgeleiteten Klasse, der durch das Bereichselement aufgerufen werden soll.</param>
      <param name="displayName" vsli:raw="The panel text for this item.">Der Bereichstext für dieses Element.</param>
      <param name="category" vsli:raw="The case-sensitive &lt;see cref=&quot;T:System.String&quot; /&gt; used to group similar items on the panel.">Der <see cref="T:System.String" /> (Groß- und Kleinschreibung beachten) zum Gruppieren gleicher Elemente im Bereich.</param>
      <param name="includeAsDesignerVerb" vsli:raw="A flag that specifies whether to also treat the associated method as a designer verb for the associated component.">Ein Flag, das angibt, ob die zugeordnete Methode auch als Designerverb für die zugeordnete Komponente behandelt werden soll.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; class, with the specified method and category names, and display and description text.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" />-Klasse mit der angegebenen Methode, den angegebenen Kategorienamen, dem angegebenen Anzeigetext sowie der angegebenen Beschreibung.</summary>
      <param name="actionList" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; that contains the method this item is associated with.">Die <see cref="T:System.ComponentModel.Design.DesignerActionList" />, die die Methode enthält, der dieses Element zugeordnet ist.</param>
      <param name="memberName" vsli:raw="The case-sensitive name of the method in the class derived from &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to invoke through the panel item.">Der Name (Groß-/Kleinschreibung beachten) der Methode in der von <see cref="T:System.ComponentModel.Design.DesignerActionList" /> abgeleiteten Klasse, der durch das Bereichselement aufgerufen werden soll.</param>
      <param name="displayName" vsli:raw="The panel text for this item.">Der Bereichstext für dieses Element.</param>
      <param name="category" vsli:raw="The case-sensitive &lt;see cref=&quot;T:System.String&quot; /&gt; used to group similar items on the panel.">Der <see cref="T:System.String" /> (Groß- und Kleinschreibung beachten) zum Gruppieren gleicher Elemente im Bereich.</param>
      <param name="description" vsli:raw="Supplemental text for this item, used in ToolTips or the status bar.">Ergänzender Text für dieses Element, der in QuickInfos oder der Statusleiste verwendet wird.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.String,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; class, with the specified method and category names, display and description text, and a flag that indicates whether the item should appear in other user interface contexts.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" />-Klasse mit der angegebenen Methode, den angegebenen Kategorienamen, Anzeigetext und Beschreibung sowie einem Flag, das angibt, ob das Element in anderen Benutzeroberflächenkontexten angezeigt werden soll.</summary>
      <param name="actionList" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; that contains the method this item is associated with.">Die <see cref="T:System.ComponentModel.Design.DesignerActionList" />, die die Methode enthält, der dieses Element zugeordnet ist.</param>
      <param name="memberName" vsli:raw="The case-sensitive name of the method in the class derived from &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to invoke through the panel item.">Der Name (Groß-/Kleinschreibung beachten) der Methode in der von <see cref="T:System.ComponentModel.Design.DesignerActionList" /> abgeleiteten Klasse, der durch das Bereichselement aufgerufen werden soll.</param>
      <param name="displayName" vsli:raw="The panel text for this item.">Der Bereichstext für dieses Element.</param>
      <param name="category" vsli:raw="The case-sensitive &lt;see cref=&quot;T:System.String&quot; /&gt; used to group similar items on the panel.">Der <see cref="T:System.String" /> (Groß- und Kleinschreibung beachten) zum Gruppieren gleicher Elemente im Bereich.</param>
      <param name="description" vsli:raw="Supplemental text for this item, used in ToolTips or the status bar.">Ergänzender Text für dieses Element, der in QuickInfos oder der Statusleiste verwendet wird.</param>
      <param name="includeAsDesignerVerb" vsli:raw="A flag that specifies whether to also treat the associated method as a designer verb for the associated component.">Ein Flag, das angibt, ob die zugeordnete Methode auch als Designerverb für die zugeordnete Komponente behandelt werden soll.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb">
      <summary vsli:raw="Gets a value that indicates the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; should appear in other user interface contexts.">Ruft einen Wert ab, der angibt, dass das <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> in anderen Benutzeroberflächenkontexten angezeigt werden soll.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the item is to be used in shortcut menus; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das Element in Kontextmenüs verwendet werden soll, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.Invoke">
      <summary vsli:raw="Programmatically executes the method associated with the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt;.">Führt die dem <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" />zugeordnete Methode programmgesteuert aus.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The method, named in &lt;see cref=&quot;P:System.ComponentModel.Design.DesignerActionMethodItem.MemberName&quot; /&gt; cannot be found.">Die in <see cref="P:System.ComponentModel.Design.DesignerActionMethodItem.MemberName" /> bezeichnete Methode kann nicht gefunden werden.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionMethodItem.MemberName">
      <summary vsli:raw="Gets the name of the method that this &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; is associated with.">Ruft den Namen der Methode ab, der dieses <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> zugeordnet ist.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the name of the associated method.">Ein <see cref="T:System.String" />, der den Namen der zugeordneten Methode enthält.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionMethodItem.RelatedComponent">
      <summary vsli:raw="Gets or sets a component that contributes its &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; objects to the current panel.">Ruft eine Komponente ab, die ihre <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" />-Objekte zum aktuellen Bereich beiträgt, oder legt diese fest.</summary>
      <returns vsli:raw="The contributing component, which should have an associated designer that supplies items.">Die beitragende Komponente, die über einen zugeordneten Designer verfügt, der Elemente bereitstellt.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionPropertyItem">
      <summary vsli:raw="Represents a panel item that is associated with a property in a class derived from &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt;. This class cannot be inherited.">Stellt ein Bereichselement dar, das einer Eigenschaft in einer von <see cref="T:System.ComponentModel.Design.DesignerActionList" /> abgeleiteten Klasse zugeordnet wird. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionPropertyItem&quot; /&gt; class, with the specified property and display names.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" />-Klasse mit der angegebenen Eigenschaft und den angegebenen Anzeigenamen.</summary>
      <param name="memberName" vsli:raw="The case-sensitive name of the property associated with this panel item.">Der Name (Groß- und Kleinschreibung beachten) der diesem Bereichselement zugeordneten Eigenschaft.</param>
      <param name="displayName" vsli:raw="The panel text for this item.">Der Bereichstext für dieses Element.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionPropertyItem&quot; /&gt; class, with the specified property and category names, and display text.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" />-Klasse mit der angegebenen Eigenschaft, den angegebenen Kategorienamen und dem angegebenen Anzeigetext.</summary>
      <param name="memberName" vsli:raw="The case-sensitive name of the property associated with this panel item.">Der Name (Groß- und Kleinschreibung beachten) der diesem Bereichselement zugeordneten Eigenschaft.</param>
      <param name="displayName" vsli:raw="The panel text for this item.">Der Bereichstext für dieses Element.</param>
      <param name="category" vsli:raw="The case-sensitive &lt;see cref=&quot;T:System.String&quot; /&gt; used to group similar items on the panel.">Der <see cref="T:System.String" /> (Groß- und Kleinschreibung beachten) zum Gruppieren gleicher Elemente im Bereich.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionPropertyItem&quot; /&gt; class, with the specified property and category names, and display and description text.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" />-Klasse mit der angegebenen Eigenschaft, den angegebenen Kategorienamen, dem angegebenen Anzeigetext sowie der angegebenen Beschreibung.</summary>
      <param name="memberName" vsli:raw="The case-sensitive name of the property associated with this panel item.">Der Name (Groß- und Kleinschreibung beachten) der diesem Bereichselement zugeordneten Eigenschaft.</param>
      <param name="displayName" vsli:raw="The panel text for this item.">Der Bereichstext für dieses Element.</param>
      <param name="category" vsli:raw="The case-sensitive &lt;see cref=&quot;T:System.String&quot; /&gt; used to group similar items on the panel.">Der <see cref="T:System.String" /> (Groß- und Kleinschreibung beachten) zum Gruppieren gleicher Elemente im Bereich.</param>
      <param name="description" vsli:raw="Supplemental text for this item, used in ToolTips or the status bar.">Ergänzender Text für dieses Element, der in QuickInfos oder der Statusleiste verwendet wird.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionPropertyItem.MemberName">
      <summary vsli:raw="Gets the name of the property that this item is associated with.">Ruft den Namen der Eigenschaft ab, der dieses Element zugeordnet ist.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the name of the associated property.">Ein <see cref="T:System.String" />, der den Namen der zugeordneten Eigenschaft enthält.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionPropertyItem.RelatedComponent">
      <summary vsli:raw="Gets or sets a component that contributes its items to the current panel.">Ruft eine Komponente ab, die ihre Elemente zum aktuellen Bereich beiträgt, oder legt diese fest.</summary>
      <returns vsli:raw="The contributing component, which should have an associated designer that supplies &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; objects.">Die beitragende Komponente, die über einen zugeordneten Designer verfügt, der <see cref="T:System.ComponentModel.Design.DesignerActionItem" />-Objekte angibt.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionService">
      <summary vsli:raw="Establishes a design-time service that manages the collection of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; objects for components.">Richtet einen Dienst zur Entwurfszeit ein, der die Auflistung der <see cref="T:System.ComponentModel.Design.DesignerActionItem" />-Objekte für Komponenten verwaltet.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.#ctor(System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionService&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.DesignerActionService" />-Klasse.</summary>
      <param name="serviceProvider" vsli:raw="The service provider for the current design-time environment.">Der Dienstanbieter für die aktuelle Entwurfszeitumgebung.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to the current collection of managed smart tags.">Fügt der aktuellen Auflistung verwalteter Smarttags eine <see cref="T:System.ComponentModel.Design.DesignerActionList" /> hinzu.</summary>
      <param name="comp" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to associate the smart tags with.">Die <see cref="T:System.ComponentModel.IComponent" />, der die Smarttags zugeordnet werden sollen.</param>
      <param name="actionList" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; that contains the new smart tag items to be added.">Die <see cref="T:System.ComponentModel.Design.DesignerActionList" />, welche die neuen, hinzuzufügenden Smarttagelemente enthält.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the parameters are &lt;see langword=&quot;null&quot; /&gt;.">Ein oder beide Parameter sind <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; to the current collection of managed smart tags.">Fügt der aktuellen Auflistung verwalteter Smarttags eine <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> hinzu.</summary>
      <param name="comp" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to associate the smart tags with.">Die <see cref="T:System.ComponentModel.IComponent" />, der die Smarttags zugeordnet werden sollen.</param>
      <param name="designerActionListCollection" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; that contains the new smart tag items to be added.">Die <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />, welche die neuen, hinzuzufügenden Smarttagelemente enthält.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the parameters are &lt;see langword=&quot;null&quot; /&gt;.">Ein oder beide Parameter sind <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Clear">
      <summary vsli:raw="Releases all components from management and clears all push-model smart tag lists.">Gibt alle Komponenten von der Verwaltung frei und löscht alle Pushmodellsmarttaglisten.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Contains(System.ComponentModel.IComponent)">
      <summary vsli:raw="Determines whether the current smart tag service manages the action lists for the specified component.">Bestimmt, ob der aktuelle Smarttagdienst die Aktionslisten für die angegebene Komponente verwaltet.</summary>
      <param name="comp" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to search for.">Die zu suchende <see cref="T:System.ComponentModel.IComponent" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the component is managed by the current service; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Komponente vom aktuellen Dienst verwaltet wird, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;comp&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="comp" /> ist <see langword="null" />.</exception>
    </member>
    <member name="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged">
      <summary vsli:raw="Occurs when a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; is removed or added for any component.">Tritt auf, wenn eine <see cref="T:System.ComponentModel.Design.DesignerActionList" /> für eine Komponente entfernt oder hinzugefügt wird.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionService&quot; /&gt; class.">Gibt alle von der <see cref="T:System.ComponentModel.Design.DesignerActionService" />-Klasse verwendeten Ressourcen frei.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionService&quot; /&gt; and optionally releases the managed resources.">Gibt die von <see cref="T:System.ComponentModel.Design.DesignerActionService" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent)">
      <summary vsli:raw="Returns the collection of smart tag item lists associated with a component.">Gibt die Auflistung von einer Komponente zugeordneten Smarttagelementlisten zurück.</summary>
      <param name="component" vsli:raw="The component that the smart tags are associated with.">Die Komponente, der die Smarttags zugeordnet sind.</param>
      <returns vsli:raw="The collection of smart tags for the specified component.">Die Auflistung von Smarttags für die angegebene Komponente.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;comp&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="comp" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent,System.Windows.Forms.Design.ComponentActionsType)">
      <param name="component" vsli:raw="The component that the DesignerActions are associated with." />
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentActionsType&quot; /&gt; to filter the associated designer actions with." />
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary vsli:raw="Retrieves the pull-model smart tags associated with a component.">Ruft die einer Komponente zugeordneten Pullmodellsmarttags ab.</summary>
      <param name="component" vsli:raw="The component that the smart tags are associated with.">Die Komponente, der die Smarttags zugeordnet sind.</param>
      <param name="actionLists" vsli:raw="The collection to add the associated smart tags to.">Die Auflistung, der die zugeordneten Smarttags hinzugefügt werden sollen.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the parameters are &lt;see langword=&quot;null&quot; /&gt;.">Ein oder beide Parameter sind <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary vsli:raw="Retrieves the push-model smart tags associated with a component.">Ruft die einer Komponente zugeordneten Pushmodellsmarttags ab.</summary>
      <param name="component" vsli:raw="The component that the smart tags are associated with.">Die Komponente, der die Smarttags zugeordnet sind.</param>
      <param name="actionLists" vsli:raw="The collection to add the associated smart tags to.">Die Auflistung, der die zugeordneten Smarttags hinzugefügt werden sollen.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the parameters are &lt;see langword=&quot;null&quot; /&gt;.">Ein oder beide Parameter sind <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.Design.DesignerActionList)">
      <summary vsli:raw="Removes the specified smart tag list from all components managed by the current service.">Entfernt die angegebene Smarttagliste aus allen vom aktuellen Dienst verwalteten Komponenten.</summary>
      <param name="actionList" vsli:raw="The list of smart tags to be removed.">Die zu entfernende Liste mit Smarttags.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;actionList&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="actionList" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent)">
      <summary vsli:raw="Removes all the smart tag lists associated with the specified component.">Entfernt alle der angegebenen Komponente zugeordneten Smarttaglisten.</summary>
      <param name="comp" vsli:raw="The component to disassociate the smart tags from.">Die Komponente, deren Zuordnung zu den Smarttags aufgehoben werden soll.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;comp&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="comp" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)">
      <summary vsli:raw="Removes the specified smart tag list from the specified component.">Entfernt die angegebene Smarttagliste aus der angegebenen Komponente.</summary>
      <param name="comp" vsli:raw="The component to disassociate the smart tags from.">Die Komponente, deren Zuordnung zu den Smarttags aufgehoben werden soll.</param>
      <param name="actionList" vsli:raw="The smart tag list to remove.">Die zu entfernende Smarttagliste.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the parameters are &lt;see langword=&quot;null&quot; /&gt;.">Ein oder beide Parameter sind <see langword="null" />.</exception>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionTextItem">
      <summary vsli:raw="Represents a static text item on a smart tag panel.">Stellt ein statisches Textelement in einem Smarttagbereich dar.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionTextItem.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionTextItem&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.DesignerActionTextItem" />-Klasse.</summary>
      <param name="displayName" vsli:raw="The panel text for this item.">Der Bereichstext für dieses Element.</param>
      <param name="category" vsli:raw="The category used to group similar items on the panel.">Die Kategorie zum Gruppieren ähnlicher Elemente im Bereich.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIService">
      <summary vsli:raw="Manages the user interface (UI) for a smart tag panel. This class cannot be inherited.">Verwaltet die Benutzeroberfläche für einen Smarttagbereich. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange">
      <summary vsli:raw="Occurs when a request is made to show or hide a smart tag panel.">Tritt bei einer Anforderung auf, einen Smarttagbereich anzuzeigen oder auszublenden.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionUIService&quot; /&gt; class.">Gibt alle von der <see cref="T:System.ComponentModel.Design.DesignerActionUIService" />-Klasse verwendeten Ressourcen frei.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.HideUI(System.ComponentModel.IComponent)">
      <summary vsli:raw="Hides the smart tag panel for a component.">Blendet den Smarttagbereich für eine Komponente aus.</summary>
      <param name="component" vsli:raw="The component whose smart tag panel should be hidden.">Die Komponente, deren Smarttagbereich ausgeblendet werden soll.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.Refresh(System.ComponentModel.IComponent)">
      <summary vsli:raw="Updates the smart tag panel.">Aktualisiert den Smarttagbereich.</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to refresh.">Die zu aktualisierende <see cref="T:System.ComponentModel.IComponent" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.ShouldAutoShow(System.ComponentModel.IComponent)">
      <summary vsli:raw="Indicates whether to automatically show the smart tag panel.">Gibt an, ob der Smarttagbereich automatisch angezeigt werden soll.</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to automatically show.">Die <see cref="T:System.ComponentModel.IComponent" />, die automatisch angezeigt werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to automatically show the smart tag panel; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um den Smarttagbereich automatisch anzuzeigen, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.ShowUI(System.ComponentModel.IComponent)">
      <summary vsli:raw="Displays the smart tag panel for a component.">Zeigt den Smarttagbereich für eine Komponente an.</summary>
      <param name="component" vsli:raw="The component whose smart tag panel should be displayed.">Die Komponente, deren Smarttagbereich angezeigt werden soll.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange&quot; /&gt; event.">Stellt Daten für das <see cref="E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange" />-Ereignis bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.#ctor(System.Object,System.ComponentModel.Design.DesignerActionUIStateChangeType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs" />-Klasse.</summary>
      <param name="relatedObject" vsli:raw="The object that is associated with the panel.">Das Objekt, das dem Bereich zugeordnet ist.</param>
      <param name="changeType" vsli:raw="A value that specifies whether the panel is being displayed or hidden.">Ein Wert, der angibt, ob der Bereich angezeigt oder ausgeblendet wird.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.ChangeType">
      <summary vsli:raw="Gets a flag indicating whether the smart tag panel is being displayed or hidden.">Ruft ein Flag ab, das angibt, ob der Smarttagbereich angezeigt oder ausgeblendet wird.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionUIStateChangeType&quot; /&gt; that indicates the state of the panel.">Ein <see cref="T:System.ComponentModel.Design.DesignerActionUIStateChangeType" />, der den Zustand des Bereichs angibt.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.RelatedObject">
      <summary vsli:raw="Gets the object that is associated with the smart tag panel.">Ruft das Objekt ab, das dem Smarttagbereich zugeordnet ist.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; associated with the smart tag panel.">Das <see cref="T:System.Object" />, das dem Smarttagbereich zugeordnet ist.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange&quot; /&gt; event of a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionUIService&quot; /&gt;.">Stellt die Methode zur Behandlung des <see cref="E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange" />-Ereignisses eines <see cref="T:System.ComponentModel.Design.DesignerActionUIService" />-Objekts dar.</summary>
      <param name="sender" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; that raised the event.">Das <see cref="T:System.Object" />, das das Ereignis ausgelöst hat.</param>
      <param name="e" vsli:raw="The event-specific information.">Die ereignisspezifischen Informationen.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIStateChangeType">
      <summary vsli:raw="Specifies the display state of a smart tag panel.">Gibt den Anzeigezustand eines Smarttagbereichs an.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionUIStateChangeType.Hide">
      <summary vsli:raw="The smart tag panel is being hidden.">Der Smarttagbereich wird ausgeblendet.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionUIStateChangeType.Refresh">
      <summary vsli:raw="The smart tag panel is being refreshed.">Der Smarttagbereich wird aktualisiert.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionUIStateChangeType.Show">
      <summary vsli:raw="The smart tag panel is being displayed.">Der Smarttagbereich wird angezeigt.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerCommandSet">
      <summary vsli:raw="Represents a base class for design-time tools, not derived from &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentDesigner&quot; /&gt;, that provide smart tag or designer verb capabilities.">Stellt eine nicht von <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> abgeleitete Basisklasse für Entwurfszeittools dar, die Smarttag- oder Designerverbfunktionen bereitstellen.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerCommandSet.#ctor">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerCommandSet&quot; /&gt; class.">Initialisiert eine Instanz der <see cref="T:System.ComponentModel.Design.DesignerCommandSet" />-Klasse.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerCommandSet.ActionLists">
      <summary vsli:raw="Gets the collection of all the smart tags associated with the designed component.">Ruft die Auflistung aller der entworfenen Komponente zugeordneten Smarttags ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; that contains the smart tags for the associated designed component.">Eine <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />, die die Smarttags für die zugeordnete entworfene Komponente enthält.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerCommandSet.GetCommands(System.String)">
      <summary vsli:raw="Returns a collection of command objects.">Gibt eine Auflistung von Befehlsobjekten zurück.</summary>
      <param name="name" vsli:raw="The type of collection to return, indicating either a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; or a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerVerbCollection&quot; /&gt;.">Der Typ der zurückzugebenden Auflistung, der entweder eine <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> oder eine <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> angibt.</param>
      <returns vsli:raw="A collection that contains the specified type - either &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; or &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerVerb&quot; /&gt; - of command objects. The base implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">Eine Collection, die den angegebenen Typ von Befehlsobjekten enthält (entweder <see cref="T:System.ComponentModel.Design.DesignerActionList" /> oder <see cref="T:System.ComponentModel.Design.DesignerVerb" />). Die Basisimplementierung gibt immer <see langword="null" /> zurück.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerCommandSet.Verbs">
      <summary vsli:raw="Gets the collection of all the designer verbs associated with the designed component.">Ruft die Auflistung aller der entworfenen Komponente zugeordneten Designerverben ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerVerbCollection&quot; /&gt; that contains the designer verbs for the associated designed component.">Eine <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" />, die die Designerverben für die zugeordnete entworfene Komponente enthält.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurface">
      <summary vsli:raw="Presents a user interface for designing components.">Stellt eine Benutzeroberfläche zum Entwerfen von Komponenten dar.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.DesignSurface" />-Klasse.</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">Das an das <see cref="T:System.ComponentModel.Design.DesignSurface" />-Objekt angefügte <see cref="T:System.ComponentModel.Design.IDesignerHost" />-Objekt wurde verworfen.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.DesignSurface" />-Klasse.</summary>
      <param name="parentProvider" vsli:raw="The parent service provider, or &lt;see langword=&quot;null&quot; /&gt; if there is no parent used to resolve services.">Der übergeordnete Dienstanbieter oder <see langword="null" />, wenn kein übergeordnetes Element vorhanden ist, das zum Auflösen von Diensten verwendet wird.</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">Das an das <see cref="T:System.ComponentModel.Design.DesignSurface" />-Objekt angefügte <see cref="T:System.ComponentModel.Design.IDesignerHost" />-Objekt wurde verworfen.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.DesignSurface" />-Klasse.</summary>
      <param name="parentProvider" vsli:raw="The parent service provider, or &lt;see langword=&quot;null&quot; /&gt; if there is no parent used to resolve services.">Der übergeordnete Dienstanbieter oder <see langword="null" />, wenn kein übergeordnetes Element vorhanden ist, das zum Auflösen von Diensten verwendet wird.</param>
      <param name="rootComponentType" vsli:raw="The type of root component to create.">Der Typ der zu erstellenden Stammkomponente.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;rootComponent&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="rootComponent" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">Das an das <see cref="T:System.ComponentModel.Design.DesignSurface" />-Objekt angefügte <see cref="T:System.ComponentModel.Design.IDesignerHost" />-Objekt wurde verworfen.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.DesignSurface" />-Klasse.</summary>
      <param name="rootComponentType" vsli:raw="The type of root component to create.">Der Typ der zu erstellenden Stammkomponente.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;rootComponent&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="rootComponent" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">Das an das <see cref="T:System.ComponentModel.Design.DesignSurface" />-Objekt angefügte <see cref="T:System.ComponentModel.Design.IDesignerHost" />-Objekt wurde verworfen.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)">
      <summary vsli:raw="Begins the loading process with the given designer loader.">Beginnt den Ladevorgang mit dem angegebenen Designerladeprogramm.</summary>
      <param name="loader" vsli:raw="The designer loader to use for loading the designer.">Das Designerladeprogramm, das zum Laden des Designers verwendet werden soll.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;loader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="loader" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">Das an das <see cref="T:System.ComponentModel.Design.DesignSurface" />-Objekt angefügte <see cref="T:System.ComponentModel.Design.IDesignerHost" />-Objekt wurde verworfen.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)">
      <summary vsli:raw="Begins the loading process.">Beginnt den Ladevorgang.</summary>
      <param name="rootComponentType" vsli:raw="The type of component to create in design mode.">Der Typ der im Entwurfsmodus zu erstellenden Komponente.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;rootComponentType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="rootComponentType" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">Das an das <see cref="T:System.ComponentModel.Design.DesignSurface" />-Objekt angefügte <see cref="T:System.ComponentModel.Design.IDesignerHost" />-Objekt wurde verworfen.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.ComponentContainer">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt; implementation within the design surface.">Ruft die <see cref="T:System.ComponentModel.IContainer" />-Implementierung innerhalb der Entwurfsoberfläche ab.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt; implementation within the design surface.">Die <see cref="T:System.ComponentModel.IContainer" />-Implementierung innerhalb der Entwurfsoberfläche.</returns>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">Das an das <see cref="T:System.ComponentModel.Design.DesignSurface" />-Objekt angefügte <see cref="T:System.ComponentModel.Design.IDesignerHost" />-Objekt wurde verworfen.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateComponent(System.Type)">
      <summary vsli:raw="Creates an instance of a component.">Erstellt eine Instanz einer Komponente.</summary>
      <param name="componentType" vsli:raw="The type of component to create.">Der Typ der zu erstellenden Komponente.</param>
      <returns vsli:raw="The newly created component.">Die neu erstellte Komponente.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;componentType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="componentType" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">Das an das <see cref="T:System.ComponentModel.Design.DesignSurface" />-Objekt angefügte <see cref="T:System.ComponentModel.Design.IDesignerHost" />-Objekt wurde verworfen.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
      <summary vsli:raw="Creates a designer when a component is added to the container.">Erstellt einen Designer, wenn dem Container eine Komponente hinzugefügt wird.</summary>
      <param name="component" vsli:raw="The component for which the designer should be created.">Die Komponente, für die der Designer erstellt werden soll.</param>
      <param name="rootDesigner" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to create a root designer; &lt;see langword=&quot;false&quot; /&gt; to create a normal designer.">
        <see langword="true" />, um einen Stammdesigner zu erstellen, <see langword="false" />, um einen normalen Designer zu erstellen.</param>
      <returns vsli:raw="An instance of the requested designer, or &lt;see langword=&quot;null&quot; /&gt; if no matching designer could be found.">Eine Instanz des angeforderten Designers oder <see langword="null" />, wenn kein entsprechender Designer gefunden werden kann.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;component&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="component" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">Das an das <see cref="T:System.ComponentModel.Design.DesignSurface" />-Objekt angefügte <see cref="T:System.ComponentModel.Design.IDesignerHost" />-Objekt wurde verworfen.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateInstance(System.Type)">
      <summary vsli:raw="Creates an instance of the given type.">Erstellt eine Instanz des angegebenen Typs.</summary>
      <param name="type" vsli:raw="The type to create.">Der zu erstellende Typ.</param>
      <returns vsli:raw="The newly created object.">Das neu erstellte Objekt.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">Das an das <see cref="T:System.ComponentModel.Design.DesignSurface" />-Objekt angefügte <see cref="T:System.ComponentModel.Design.IDesignerHost" />-Objekt wurde verworfen.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent)">
      <summary vsli:raw="Creates a container suitable for nesting controls or components.">Erstellt einen für die Schachtelung von Steuerelementen oder Komponenten geeigneten Container.</summary>
      <param name="owningComponent" vsli:raw="The component that manages the nested container.">Die Komponente, die den geschachtelten Container verwaltet.</param>
      <returns vsli:raw="The nested container.">Der geschachtelte Container.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;owningComponent&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="owningComponent" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">Das an das <see cref="T:System.ComponentModel.Design.DesignSurface" />-Objekt angefügte <see cref="T:System.ComponentModel.Design.IDesignerHost" />-Objekt wurde verworfen.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)">
      <summary vsli:raw="Creates a container suitable for nesting controls or components.">Erstellt einen für die Schachtelung von Steuerelementen oder Komponenten geeigneten Container.</summary>
      <param name="owningComponent" vsli:raw="The component that manages the nested container.">Die Komponente, die den geschachtelten Container verwaltet.</param>
      <param name="containerName" vsli:raw="An additional name for the nested container.">Ein zusätzlicher Name für den geschachtelten Container.</param>
      <returns vsli:raw="The nested container.">Der geschachtelte Container.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;owningComponent&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="owningComponent" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">Das an das <see cref="T:System.ComponentModel.Design.DesignSurface" />-Objekt angefügte <see cref="T:System.ComponentModel.Design.IDesignerHost" />-Objekt wurde verworfen.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.Dispose">
      <summary vsli:raw="Releases the resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt;.">Gibt die von der <see cref="T:System.ComponentModel.Design.DesignSurface" /> verwendeten Ressourcen frei.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt;.">Gibt die von der <see cref="T:System.ComponentModel.Design.DesignSurface" /> verwendeten Ressourcen frei.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Disposed">
      <summary vsli:raw="Occurs when the design surface is disposed.">Tritt auf, wenn die Entwurfsoberfläche verworfen wird.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.DtelLoading">
      <summary vsli:raw="Gets a value indicating whether the Design-time Error List is loading.">Ruft einen Wert ab, der angibt, ob die Entwurfszeitfehlerliste geladen wird.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Design-time Error List is loading; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Entwurfszeit Fehlerliste geladen wird. <see langword="false" />andernfalls.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.Flush">
      <summary vsli:raw="Serializes changes to the design surface.">Serialisiert an der Entwurfsoberfläche vorgenommene Änderungen.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Flushed">
      <summary vsli:raw="Occurs when a call is made to the &lt;see cref=&quot;M:System.ComponentModel.Design.DesignSurface.Flush&quot; /&gt; method of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt;.">Tritt auf, wenn die <see cref="M:System.ComponentModel.Design.DesignSurface.Flush" />-Methode von <see cref="T:System.ComponentModel.Design.DesignSurface" /> aufgerufen wird.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.GetService(System.Type)">
      <summary vsli:raw="Gets a service from the service container.">Ruft einen Dienst vom Dienstcontainer ab.</summary>
      <param name="serviceType" vsli:raw="The type of service to retrieve.">Der Typ des abzurufenden Diensts.</param>
      <returns vsli:raw="An object that implements, or is a derived class of, &lt;paramref name=&quot;serviceType&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if the service does not exist in the service container.">Ein Objekt, das <paramref name="serviceType" /> implementiert oder eine davon abgeleitete Klasse darstellt, andernfalls <see langword="null" />, wenn der Dienst im Dienstcontainer nicht vorhanden ist.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.IsLoaded">
      <summary vsli:raw="Gets a value indicating whether the design surface is currently loaded.">Ruft einen Wert ab, der angibt, ob die Entwurfsoberfläche gegenwärtig geladen ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the design surface is currently loaded; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Entwurfsoberfläche gegenwärtig geladen ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Loaded">
      <summary vsli:raw="Occurs when the designer load has completed.">Tritt auf, wenn der Ladevorgang des Designers abgeschlossen wurde.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.LoadErrors">
      <summary vsli:raw="Returns a collection of loading errors or a void collection.">Gibt eine Auflistung von während des Ladevorgangs aufgetretenen Fehlern oder eine leere Auflistung zurück.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; of loading errors.">Eine <see cref="T:System.Collections.ICollection" /> der während des Ladevorgangs aufgetretenen Fehler.</returns>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Loading">
      <summary vsli:raw="Occurs when the designer is about to be loaded.">Tritt auf, wenn der Designer gerade geladen wird.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnLoaded(System.ComponentModel.Design.LoadedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurface.Loaded&quot; /&gt; event.">Löst das <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" />-Ereignis aus.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.LoadedEventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.ComponentModel.Design.LoadedEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnLoading(System.EventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurface.Loading&quot; /&gt; event.">Löst das <see cref="E:System.ComponentModel.Design.DesignSurface.Loading" /> -Ereignis aus.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnUnloaded(System.EventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurface.Unloaded&quot; /&gt; event.">Löst das <see cref="E:System.ComponentModel.Design.DesignSurface.Unloaded" />-Ereignis aus.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnUnloading(System.EventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurface.Unloading&quot; /&gt; event.">Löst das <see cref="E:System.ComponentModel.Design.DesignSurface.Unloading" />-Ereignis aus.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnViewActivate(System.EventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurface.ViewActivated&quot; /&gt; event.">Löst das <see cref="E:System.ComponentModel.Design.DesignSurface.ViewActivated" />-Ereignis aus.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.ServiceContainer">
      <summary vsli:raw="Gets the service container.">Ruft den Dienstcontainer ab.</summary>
      <returns vsli:raw="The service container that provides all services to designers contained within the design surface.">Der Dienstcontainer, der alle Dienste für die in der Entwurfsoberfläche enthaltenen Designer bereitstellt.</returns>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">Das an das <see cref="T:System.ComponentModel.Design.DesignSurface" />-Objekt angefügte <see cref="T:System.ComponentModel.Design.IDesignerHost" />-Objekt wurde verworfen.</exception>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Unloaded">
      <summary vsli:raw="Occurs when a designer has finished unloading.">Tritt auf, wenn ein Designer vollständig entladen wurde.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Unloading">
      <summary vsli:raw="Occurs when a designer is about to unload.">Tritt auf, wenn ein Designer gerade entladen wird.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.View">
      <summary vsli:raw="Gets the view for the root designer.">Ruft die Ansicht für den Stammdesigner ab.</summary>
      <returns vsli:raw="The view for the root designer.">Die Ansicht für den Stammdesigner.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The design surface is not loading, the designer loader has not yet created a root designer, or the design surface finished the load, but failed. More information may available in the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt;.">Die Entwurfsoberfläche wird nicht geladen, das Designerladeprogramm hat noch keinen Stammdesigner erstellt, oder der Ladevorgang der Entwurfsoberfläche wurde beendet, es trat jedoch ein Fehler auf. Weitere Informationen finden Sie unter <see cref="P:System.Exception.InnerException" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The designer loaded, but it does not offer a view compatible with this design surface.">Der Designer wurde geladen, bietet aber keine Ansicht, die mit dieser Entwurfsoberfläche kompatibel ist.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">Das an das <see cref="T:System.ComponentModel.Design.DesignSurface" />-Objekt angefügte <see cref="T:System.ComponentModel.Design.IDesignerHost" />-Objekt wurde verworfen.</exception>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.ViewActivated">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;M:System.ComponentModel.Design.IDesignerHost.Activate&quot; /&gt; method has been called on &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt;.">Tritt auf, wenn die <see cref="M:System.ComponentModel.Design.IDesignerHost.Activate" />-Methode für <see cref="T:System.ComponentModel.Design.IDesignerHost" /> aufgerufen wurde.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.ExceptionCollection">
      <summary vsli:raw="Represents the collection of exceptions.">Stellt die Auflistung von Ausnahmen dar.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ExceptionCollection.#ctor(System.Collections.ArrayList)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.ExceptionCollection&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.ExceptionCollection" />-Klasse.</summary>
      <param name="exceptions" vsli:raw="An array of type &lt;see cref=&quot;T:System.Exception&quot; /&gt;, containing the objects to populate the collection.">Ein Array vom Typ <see cref="T:System.Exception" /> mit den Objekten, mit denen die Auflistung gefüllt werden soll.</param>
    </member>
    <member name="P:System.ComponentModel.Design.ExceptionCollection.Exceptions">
      <summary vsli:raw="Gets the array of &lt;see cref=&quot;T:System.Exception&quot; /&gt; objects that represent the collection of exceptions.">Ruft das Array von <see cref="T:System.Exception" />-Objekten ab, die die Auflistung von Ausnahmen darstellen.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Exception&quot; /&gt; array that represent the collection of exceptions.">Ein <see cref="T:System.Exception" />-Array, das die Auflistung von Ausnahmen darstellt.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ExceptionCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; with the data needed to serialize the &lt;see cref=&quot;T:System.ComponentModel.Design.ExceptionCollection&quot; /&gt;.">Füllt <see cref="T:System.Runtime.Serialization.SerializationInfo" /> mit den zum Serialisieren von <see cref="T:System.ComponentModel.Design.ExceptionCollection" /> erforderlichen Daten.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to populate with data.">Die mit Daten zu füllende <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context" vsli:raw="The destination (see &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;) for this serialization.">Das Ziel (siehe <see cref="T:System.Runtime.Serialization.StreamingContext" />) dieser Serialisierung.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> ist <see langword="null" />.</exception>
    </member>
    <member name="T:System.ComponentModel.Design.IMultitargetHelperService">
      <summary vsli:raw="Defines multi-target type name resolution services in a design-time environment.">Definiert Namensauflösungsdienste für mehrere Ziele in einer Entwurfszeitumgebung.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IMultitargetHelperService.GetAssemblyQualifiedName(System.Type)">
      <summary vsli:raw="Resolves a type for the target framework to an assembly-qualified name.">Löst einen Typ für das Zielframework in einen durch die Assembly qualifizierten Namen auf.</summary>
      <param name="type" vsli:raw="The type to resolve.">Der aufzulösende Typ.</param>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Type.AssemblyQualifiedName&quot; /&gt; for &lt;paramref name=&quot;type&quot; /&gt; in the target framework.">Der <see cref="P:System.Type.AssemblyQualifiedName" /> für <paramref name="type" /> im Zielframework.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.InheritanceService">
      <summary vsli:raw="Provides a set of methods for identifying inherited components.">Stellt eine Gruppe von Methoden zum Bestimmen vererbter Komponenten bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.InheritanceService&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.InheritanceService" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.AddInheritedComponents(System.ComponentModel.IComponent,System.ComponentModel.IContainer)">
      <summary vsli:raw="Adds the components inherited by the specified component to the &lt;see cref=&quot;T:System.ComponentModel.Design.InheritanceService&quot; /&gt;.">Fügt <see cref="T:System.ComponentModel.Design.InheritanceService" /> die von der angegebenen Komponente vererbten Komponenten hinzu.</summary>
      <param name="component" vsli:raw="The component to search for inherited components to add to the specified container.">Die Komponente, die nach vererbten Komponenten durchsucht werden soll, um diese dem angegebenen Container hinzuzufügen.</param>
      <param name="container" vsli:raw="The container to add the inherited components to.">Der Container, dem die vererbten Komponenten hinzugefügt werden sollen.</param>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.AddInheritedComponents(System.Type,System.ComponentModel.IComponent,System.ComponentModel.IContainer)">
      <summary vsli:raw="Adds the components of the specified type that are inherited by the specified component to the &lt;see cref=&quot;T:System.ComponentModel.Design.InheritanceService&quot; /&gt;.">Fügt <see cref="T:System.ComponentModel.Design.InheritanceService" /> die von der angegebenen Komponente vererbten Komponenten vom angegebenen Typ hinzu.</summary>
      <param name="type" vsli:raw="The base type to search for.">Der gesuchte Basistyp.</param>
      <param name="component" vsli:raw="The component to search for inherited components to add to the specified container.">Die Komponente, die nach vererbten Komponenten durchsucht werden soll, um diese dem angegebenen Container hinzuzufügen.</param>
      <param name="container" vsli:raw="The container to add the inherited components to.">Der Container, dem die vererbten Komponenten hinzugefügt werden sollen.</param>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.InheritanceService&quot; /&gt;.">Gibt alle vom <see cref="T:System.ComponentModel.Design.InheritanceService" /> verwendeten Ressourcen frei.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.InheritanceService&quot; /&gt; and optionally releases the managed resources.">Gibt die von <see cref="T:System.ComponentModel.Design.InheritanceService" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.GetInheritanceAttribute(System.ComponentModel.IComponent)">
      <summary vsli:raw="Gets the inheritance attribute of the specified component.">Ruft das Vererbungsattribut der angegebenen Komponente ab.</summary>
      <param name="component" vsli:raw="The component to retrieve the inheritance attribute for.">Die Komponente, deren Vererbungsattribut abgerufen werden soll.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.InheritanceAttribute&quot; /&gt; that describes the level of inheritance that this component comes from.">Ein <see cref="T:System.ComponentModel.InheritanceAttribute" />, das die Vererbungsebene beschreibt, der diese Komponente entstammt.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.IgnoreInheritedMember(System.Reflection.MemberInfo,System.ComponentModel.IComponent)">
      <summary vsli:raw="Indicates whether to ignore the specified member.">Gibt an, ob der angegebene Member ignoriert werden soll.</summary>
      <param name="member" vsli:raw="The member to check. This member is either a &lt;see cref=&quot;T:System.Reflection.FieldInfo&quot; /&gt; or a &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt;.">Der zu überprüfende Member. Es muss sich bei diesem Member entweder um ein <see cref="T:System.Reflection.FieldInfo" /> oder ein <see cref="T:System.Reflection.MethodInfo" /> handeln.</param>
      <param name="component" vsli:raw="The component instance this member is bound to.">Die Komponenteninstanz, an die dieser Member gebunden ist.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified member should be included in the set of inherited components; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der angegebene Member in die Gruppe vererbter Komponenten aufgenommen werden soll, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.LoadedEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurface.Loaded&quot; /&gt; event. This class cannot be inherited.">Stellt Daten für das <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" />-Ereignis bereit. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.LoadedEventArgs.#ctor(System.Boolean,System.Collections.ICollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.LoadedEventArgs&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.LoadedEventArgs" />-Klasse.</summary>
      <param name="succeeded" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the designer load was successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um anzugeben, dass der Designer erfolgreich geladen wurde, andernfalls <see langword="false" />.</param>
      <param name="errors" vsli:raw="A collection of errors that occurred while the designer was loading.">Eine Auflistung von Fehlern, die während des Ladevorgangs des Designers auftraten.</param>
    </member>
    <member name="P:System.ComponentModel.Design.LoadedEventArgs.Errors">
      <summary vsli:raw="Gets a collection of errors that occurred while the designer was loading.">Ruft eine Auflistung von Fehlern ab, die während des Ladevorgangs des Designers auftraten.</summary>
      <returns vsli:raw="A collection of errors that occurred while the designer was loading.">Eine Auflistung von Fehlern, die während des Ladevorgangs des Designers auftraten.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.LoadedEventArgs.HasSucceeded">
      <summary vsli:raw="Gets a value that indicates whether the designer load was successful.">Ruft einen Wert ab, der angibt, ob der Designer erfolgreich geladen wurde.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the designer load was successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Designer erfolgreich geladen wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.LoadedEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurface.Loaded&quot; /&gt; event of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; class. This class cannot be inherited.">Stellt die Methode dar, die das <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" />-Ereignis der <see cref="T:System.ComponentModel.Design.DesignSurface" />-Klasse behandelt. Diese Klasse kann nicht vererbt werden.</summary>
      <param name="sender" vsli:raw="The source of the event.">Die Quelle des Ereignisses.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.LoadedEventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.ComponentModel.Design.LoadedEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="T:System.ComponentModel.Design.ProjectTargetFrameworkAttribute">
      <summary vsli:raw="Specifies the target framework for a project.">Gibt das Zielframework für ein Projekt an.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ProjectTargetFrameworkAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.ProjectTargetFrameworkAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.ProjectTargetFrameworkAttribute" />-Klasse.</summary>
      <param name="targetFrameworkMoniker" vsli:raw="The target framework for the project.">Das Zielframework für das Projekt.</param>
    </member>
    <member name="P:System.ComponentModel.Design.ProjectTargetFrameworkAttribute.TargetFrameworkMoniker">
      <summary vsli:raw="Gets the target framework for the project.">Ruft das Zielframework für das Projekt ab.</summary>
      <returns vsli:raw="The target framework for the project.">Das Zielframework für das Projekt.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService">
      <summary vsli:raw="Serializes a set of components into a serialization store.">Serialisiert einen Satz von Komponenten in einen Serialisierungsspeicher.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.#ctor(System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService&quot; /&gt; class using the given service provider to resolve services.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService" />-Klasse unter Verwendung des angegebenen Dienstanbieters zum Auflösen von Diensten.</summary>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; to use for resolving services.">Ein <see cref="T:System.IServiceProvider" />, der zum Auflösen von Diensten verwendet werden soll.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt;.">Erstellt einen neuen <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.</summary>
      <returns vsli:raw="A new serialization store.">Ein neuer Serialisierungsspeicher.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore)">
      <summary vsli:raw="Deserializes the given store to produce a collection of objects.">Deserialisiert den angegebenen Speicher, um eine Auflistung von Objekten zu erstellen.</summary>
      <param name="store" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; from which objects will be deserialized.">Der <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />, aus dem Objekte deserialisiert werden.</param>
      <returns vsli:raw="A collection of deserialized components.">Eine Auflistung von deserialisierten Komponenten.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="store" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; is not a supported type of serialization store. Use a store returned by &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore&quot; /&gt;.">
        <paramref name="store" /> ist kein unterstützter Serialisierungsspeichertyp. Verwenden Sie einen von <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" /> zurückgegebenen Speicher.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)">
      <summary vsli:raw="Deserializes the given store and populates the given &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt; with deserialized &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects.">Deserialisiert den angegebenen Speicher und füllt den angegebenen <see cref="T:System.ComponentModel.IContainer" /> mit deserialisierten <see cref="T:System.ComponentModel.IComponent" />-Objekten.</summary>
      <param name="store" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; from which objects will be deserialized.">Der <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />, aus dem Objekte deserialisiert werden.</param>
      <param name="container" vsli:raw="A container to which &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects will be added.">Ein Container, dem <see cref="T:System.ComponentModel.IComponent" />-Objekte hinzugefügt werden.</param>
      <returns vsli:raw="A collection of deserialized components.">Eine Auflistung von deserialisierten Komponenten.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; or &lt;paramref name=&quot;container&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="store" /> oder <paramref name="container" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; is not a supported type of serialization store. Use a store returned by &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore&quot; /&gt;.">
        <paramref name="store" /> ist kein unterstützter Serialisierungsspeichertyp. Verwenden Sie einen von <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" /> zurückgegebenen Speicher.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean,System.Boolean)">
      <summary vsli:raw="Deserializes the given &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; to the given container, optionally applying default property values.">Deserialisiert den angegebenen <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> in den angegebenen Container und wendet optional Standardeigenschaftswerte an.</summary>
      <param name="store" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; from which the objects will be deserialized.">Der <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />, aus dem die Objekte deserialisiert werden.</param>
      <param name="container" vsli:raw="A container of objects to which data will be applied.">Ein Container mit Objekten, auf die die Daten angewendet werden.</param>
      <param name="validateRecycledTypes" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to validate the recycled type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um den wiederverwendeten Typ zu überprüfen; andernfalls <see langword="false" />.</param>
      <param name="applyDefaults" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to apply default property values; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um Standardeigenschaftswerte anzuwenden; andernfalls <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; or &lt;paramref name=&quot;container&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="store" /> oder <paramref name="container" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; is not a supported type of serialization store. Use a store returned by &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore&quot; /&gt;.">
        <paramref name="store" /> ist kein unterstützter Serialisierungsspeichertyp. Verwenden Sie einen von <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" /> zurückgegebenen Speicher.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.LoadStore(System.IO.Stream)">
      <summary vsli:raw="Loads a &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; from the given stream.">Lädt einen <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> aus dem angegebenen Stream.</summary>
      <param name="stream" vsli:raw="The stream from which to load the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt;.">Der Stream, aus dem der <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> geladen werden soll.</param>
      <returns vsli:raw="The loaded &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt;.">Der geladene <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; supports seeking, but its length is 0.">
        <paramref name="stream" /> unterstützt die Suche. Seine Länge ist jedoch 0.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)">
      <summary vsli:raw="Serializes the given object to the given &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt;.">Serialisiert das angegebene Objekt in den angegebenen <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.</summary>
      <param name="store" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; to which &lt;paramref name=&quot;value&quot; /&gt; will be serialized.">
        <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />, wozu <paramref name="value" /> serialisiert wird.</param>
      <param name="value" vsli:raw="The object to serialize.">Das zu serialisierende Objekt.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="store" /> oder <paramref name="value" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; is closed, or &lt;paramref name=&quot;store&quot; /&gt; is not a supported type of serialization store. Use a store returned by &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore&quot; /&gt;.">
        <paramref name="store" /> ist geschlossen, oder <paramref name="store" /> ist kein unterstützter Serialisierungsspeichertyp. Verwenden Sie einen von <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" /> zurückgegebenen Speicher.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.SerializeAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)">
      <summary vsli:raw="Serializes the given object, accounting for default property values.">Serialisiert das angegebene Objekt unter Berücksichtigung von Standardeigenschaftswerten.</summary>
      <param name="store" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; to which &lt;paramref name=&quot;value&quot; /&gt; will be serialized.">
        <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />, wozu <paramref name="value" /> serialisiert wird.</param>
      <param name="value" vsli:raw="The object to serialize.">Das zu serialisierende Objekt.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="store" /> oder <paramref name="value" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; is closed, or &lt;paramref name=&quot;store&quot; /&gt; is not a supported type of serialization store. Use a store returned by &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore&quot; /&gt;.">
        <paramref name="store" /> ist geschlossen, oder <paramref name="store" /> ist kein unterstützter Serialisierungsspeichertyp. Verwenden Sie einen von <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" /> zurückgegebenen Speicher.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary vsli:raw="Serializes the given member on the given object.">Serialisiert den angegebenen Member für das angegebene Objekt.</summary>
      <param name="store" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; to which &lt;paramref name=&quot;member&quot; /&gt; will be serialized.">
        <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />, wozu <paramref name="member" /> serialisiert wird.</param>
      <param name="owningObject" vsli:raw="The object that owns the &lt;paramref name=&quot;member&quot; /&gt;.">Das Objekt, das <paramref name="member" /> besitzt.</param>
      <param name="member" vsli:raw="The given member.">Der angegebene Member.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt;, &lt;paramref name=&quot;owningObject&quot; /&gt;, or &lt;paramref name=&quot;member&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="store" />, <paramref name="owningObject" /> oder <paramref name="member" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; is closed, or &lt;paramref name=&quot;store&quot; /&gt; is not a supported type of serialization store. Use a store returned by &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore&quot; /&gt;.">
        <paramref name="store" /> wird geschlossen, oder <paramref name="store" /> ist kein unterstützter Typ des Serialisierungsspeichers. Verwenden Sie einen von <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" /> zurückgegebenen Speicher.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary vsli:raw="Serializes the given member on the given object, but also serializes the member if it contains the default property value.">Serialisiert den angegebenen Member für das angegebene Objekt, aber serialisiert den Member auch, wenn der Standardwert der Eigenschaft enthalten ist.</summary>
      <param name="store" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; to which &lt;paramref name=&quot;member&quot; /&gt; will be serialized.">
        <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />, wozu <paramref name="member" /> serialisiert wird.</param>
      <param name="owningObject" vsli:raw="The object that owns the &lt;paramref name=&quot;member&quot; /&gt;.">Das Objekt, das <paramref name="member" /> besitzt.</param>
      <param name="member" vsli:raw="The given member.">Der angegebene Member.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt;, &lt;paramref name=&quot;owningObject&quot; /&gt;, or &lt;paramref name=&quot;member&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="store" />, <paramref name="owningObject" /> oder <paramref name="member" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; is closed, or &lt;paramref name=&quot;store&quot; /&gt; is not a supported type of serialization store. Use a store returned by &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore&quot; /&gt;.">
        <paramref name="store" /> wird geschlossen, oder <paramref name="store" /> ist kein unterstützter Typ des Serialisierungsspeichers. Verwenden Sie einen von <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" /> zurückgegebenen Speicher.</exception>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomSerializer">
      <summary vsli:raw="Serializes an object graph to a series of CodeDOM statements. This class provides an abstract base class for a serializer.">Serialisiert ein Objektdiagramm in eine Reihe von CodeDOM-Anweisungen. Diese Klasse stellt eine abstrakte Basisklasse für ein Serialisierungsprogramm bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializer&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Deserializes the specified serialized CodeDOM object into an object.">Deserialisiert das angegebene serialisierte CodeDOM-Objekt in ein Objekt.</summary>
      <param name="manager" vsli:raw="A serialization manager interface that is used during the deserialization process.">Eine Schnittstelle des Serialisierungs-Managers, die während des Deserialisierungsvorgangs verwendet wird.</param>
      <param name="codeObject" vsli:raw="A serialized CodeDOM object to deserialize.">Ein serialisiertes CodeDOM-Objekt, das deserialisiert werden soll.</param>
      <returns vsli:raw="The deserialized CodeDOM object.">Das deserialisierte CodeDOM-Objekt.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;codeObject&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> oder <paramref name="codeObject" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;codeObject&quot; /&gt; is an unsupported code element.">
        <paramref name="codeObject" /> ist ein nicht unterstütztes Codeelement.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.DeserializeStatementToInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)">
      <summary vsli:raw="Deserializes a single statement.">Deserialisiert eine einzelne Anweisung.</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">Der Serialisierungs-Manager, der für die Serialisierung verwendet werden soll.</param>
      <param name="statement" vsli:raw="The statement to deserialize.">Die Anweisung, die deserialisiert werden soll.</param>
      <returns vsli:raw="An object instance resulting from deserializing &lt;paramref name=&quot;statement&quot; /&gt;.">Eine Objektinstanz, die aus dem Deserialisieren von <paramref name="statement" /> resultiert.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.GetTargetComponentName(System.CodeDom.CodeStatement,System.CodeDom.CodeExpression,System.Type)">
      <summary vsli:raw="Determines which statement group the given statement should belong to.">Bestimmt, welcher Anweisungsgruppe die angegebene Anweisung angehören sollte.</summary>
      <param name="statement" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeStatement&quot; /&gt; for which to determine the group.">Das <see cref="T:System.CodeDom.CodeStatement" />, dessen Gruppe bestimmt werden soll.</param>
      <param name="expression" vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; that &lt;paramref name=&quot;statement&quot; /&gt; has been reduced to.">Eine <see cref="T:System.CodeDom.CodeExpression" />, auf die <paramref name="statement" /> reduziert wurde.</param>
      <param name="targetType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of &lt;paramref name=&quot;statement&quot; /&gt;.">Die <see cref="T:System.Type" /> von <paramref name="statement" />.</param>
      <returns vsli:raw="The name of the component with which &lt;paramref name=&quot;statement&quot; /&gt; should be grouped.">Der Name der Komponente, mit der <paramref name="statement" /> gruppiert werden sollte.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Serializes the specified object into a CodeDOM object.">Serialisiert das angegebene Objekt in ein CodeDOM-Objekt.</summary>
      <param name="manager" vsli:raw="The serialization manager to use during serialization.">Der Serialisierungs-Manager, der während der Serialisierung verwendet werden soll.</param>
      <param name="value" vsli:raw="The object to serialize.">Das zu serialisierende Objekt.</param>
      <returns vsli:raw="A CodeDOM object representing the object that has been serialized.">Ein CodeDOM-Objekt, das das serialisierte Objekt darstellt.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> oder <paramref name="value" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeAbsolute(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Serializes the given object, accounting for default values.">Serialisiert das angegebene Objekt unter Berücksichtigung von Standardwerten.</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">Der Serialisierungs-Manager, der für die Serialisierung verwendet werden soll.</param>
      <param name="value" vsli:raw="The object to serialize.">Das zu serialisierende Objekt.</param>
      <returns vsli:raw="A CodeDom object representing &lt;paramref name=&quot;value&quot; /&gt;.">Ein CodeDOM-Objekt, das <paramref name="value" /> darstellt.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> oder <paramref name="value" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeMember(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary vsli:raw="Serializes the given member on the given object.">Serialisiert den angegebenen Member für das angegebene Objekt.</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">Der Serialisierungs-Manager, der für die Serialisierung verwendet werden soll.</param>
      <param name="owningObject" vsli:raw="The object to which is &lt;paramref name=&quot;member&quot; /&gt; attached.">Ein Objekt, dem <paramref name="member" /> angefügt ist.</param>
      <param name="member" vsli:raw="The member to serialize.">Der zu serialisierende Member.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeStatementCollection&quot; /&gt; representing the serialized state of &lt;paramref name=&quot;member&quot; /&gt;.">
        <see cref="T:System.CodeDom.CodeStatementCollection" /> zur Darstellung des serialisierten Zustands von <paramref name="member" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;owningObject&quot; /&gt;, or &lt;paramref name=&quot;member&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />, <paramref name="owningObject" /> oder <paramref name="member" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;member&quot; /&gt; is not a serializable type.">
        <paramref name="member" /> ist kein serialisierbarer Typ.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary vsli:raw="Serializes the given member, accounting for default values.">Serialisiert den angegebenen Member unter Berücksichtigung von Standardwerten.</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">Der Serialisierungs-Manager, der für die Serialisierung verwendet werden soll.</param>
      <param name="owningObject" vsli:raw="The object to which is &lt;paramref name=&quot;member&quot; /&gt; attached.">Ein Objekt, dem <paramref name="member" /> angefügt ist.</param>
      <param name="member" vsli:raw="The member to serialize.">Der zu serialisierende Member.</param>
      <returns vsli:raw="A CodeDom object representing &lt;paramref name=&quot;member&quot; /&gt;.">Ein CodeDOM-Objekt, das <paramref name="member" /> darstellt.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;owningObject&quot; /&gt;, or &lt;paramref name=&quot;member&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />, <paramref name="owningObject" /> oder <paramref name="member" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;member&quot; /&gt; is not a serializable type.">
        <paramref name="member" /> ist kein serialisierbarer Typ.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeToReferenceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Serializes the specified value to a CodeDOM expression.">Serialisiert den angegebenen Wert in einen CodeDOM-Ausdruck.</summary>
      <param name="manager" vsli:raw="The serialization manager to use during serialization.">Der Serialisierungs-Manager, der während der Serialisierung verwendet werden soll.</param>
      <param name="value" vsli:raw="The object to serialize.">Das zu serialisierende Objekt.</param>
      <returns vsli:raw="The serialized value. This returns &lt;see langword=&quot;null&quot; /&gt; if no reference expression can be obtained for the specified value, or the value cannot be serialized.">Der serialisierte Wert. Dabei wird <see langword="null" /> zurückgegeben, wenn kein Verweisausdruck für den angegebenen Wert verfügbar ist oder der Wert nicht serialisiert werden kann.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomSerializerBase">
      <summary vsli:raw="Provides a base class for &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializer&quot; /&gt; classes.">Stellt eine Basisklasse für <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />-Klassen bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
      <summary vsli:raw="Deserializes the given expression into an in-memory object.">Deserialisiert den angegebenen Ausdruck in ein im Speicher enthaltenes Objekt.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">Die für die Serialisierung zu verwendende <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />.</param>
      <param name="name" vsli:raw="The name of the object that results from the expression. Can be &lt;see langword=&quot;null&quot; /&gt; if there is no need to name the object.">Der Name des sich aus dem Ausdruck ergebenden Objekts. Kann <see langword="null" /> sein, wenn die Benennung des Objekts nicht erforderlich ist.</param>
      <param name="expression" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; to interpret.">Der zu interpretierende <see cref="T:System.CodeDom.CodeExpression" />.</param>
      <returns vsli:raw="An object resulting from interpretation of &lt;paramref name=&quot;expression&quot; /&gt;.">Ein Objekt, das sich aus der Interpretation von <paramref name="expression" /> ergibt.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)">
      <summary vsli:raw="Returns an instance of the given type.">Gibt eine Instanz des angegebenen Typs zurück.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">Die für die Serialisierung zu verwendende <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />.</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the instance to return.">Der <see cref="T:System.Type" /> der zurückzugebenden Instanz.</param>
      <param name="parameters" vsli:raw="The parameters to pass to the constructor for &lt;paramref name=&quot;type&quot; /&gt;.">Die an den Konstruktor für <paramref name="type" /> zu übergebenden Parameter.</param>
      <param name="name" vsli:raw="The name of the deserialized object.">Der Name des deserialisierten Objekts.</param>
      <param name="addToContainer" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to add this object to the design container; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The object must implement &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; for this to have any effect.">
        <see langword="true" />, wenn dieses Objekt dem Entwurfscontainer hinzugefügt werden soll; andernfalls <see langword="false" />. Dies wirkt sich nur dann aus, wenn das Objekt <see cref="T:System.ComponentModel.IComponent" /> implementiert.</param>
      <returns vsli:raw="An instance of &lt;paramref name=&quot;type&quot; /&gt;.">Eine Instanz von <paramref name="type" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> oder <paramref name="type" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
      <summary vsli:raw="Deserializes properties on the given object from the invariant culture's resource bundle.">Deserialisiert Eigenschaften für das angegebene Objekt aus der Ressourcengruppe der invarianten Kultur.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">Die für die Serialisierung zu verwendende <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />.</param>
      <param name="value" vsli:raw="The object from which the properties are to be deserialized.">Das Objekt, aus dem die Eigenschaften deserialisiert werden sollen.</param>
      <param name="filter" vsli:raw="An &lt;see cref=&quot;T:System.Attribute&quot; /&gt; array that filters which properties will be deserialized.">Ein <see cref="T:System.Attribute" />-Array, das filtert, welche Eigenschaften deserialisiert werden.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)">
      <summary vsli:raw="Deserializes a statement by interpreting and executing a CodeDOM statement.">Deserialisiert eine Anweisung durch Interpretieren und Ausführen einer CodeDOM-Anweisung.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">Die für die Serialisierung zu verwendende <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />.</param>
      <param name="statement" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeStatement&quot; /&gt; to deserialize.">Die zu deserialisierende <see cref="T:System.CodeDom.CodeStatement" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
      <summary vsli:raw="Gets a collection of attributes as defined in the project's target version of .NET.">Ruft eine Auflistung von Attributen ab, wie in der Zielversion des Projekts von .NET Framework definiert.</summary>
      <param name="manager" vsli:raw="The serialization manager.">Der Serialisierungs-Manager.</param>
      <param name="type" vsli:raw="The target type.">Der Zieltyp.</param>
      <returns vsli:raw="A collection of attributes as defined in the project's target version of .NET.">Eine Auflistung von Attributen, wie in der Zielversion des Projekts von .NET Framework definiert.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Gets a collection of attributes as defined in the project's target version of .NET.">Ruft eine Auflistung von Attributen ab, wie in der Zielversion des Projekts von .NET Framework definiert.</summary>
      <param name="manager" vsli:raw="The serialization manager.">Der Serialisierungs-Manager.</param>
      <param name="instance" vsli:raw="An object of the target type.">Ein Objekt des Zieltyps.</param>
      <returns vsli:raw="A collection of attributes as defined in the project's target version of .NET.">Eine Auflistung von Attributen, wie in der Zielversion des Projekts von .NET Framework definiert.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
      <summary vsli:raw="Gets a collection of events as defined in the project's target version of .NET.">Ruft eine Auflistung von Ereignissen ab, wie in der Zielversion des Projekts von .NET Framework definiert.</summary>
      <param name="manager" vsli:raw="The serialization manager.">Der Serialisierungs-Manager.</param>
      <param name="instance" vsli:raw="An object of the target type.">Ein Objekt des Zieltyps.</param>
      <param name="attributes" vsli:raw="An array of attributes to pass to the target version of .NET.">Ein Array von Attributen, die an die Zielversion von .NET Framework übergeben werden sollen.</param>
      <returns vsli:raw="A collection of events as defined in the project's target version of .NET.">Eine Auflistung von Ereignissen, wie in der Zielversion des Projekts von .NET Framework definiert.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Returns an expression for the given object.">Gibt für das angegebene Objekt einen Ausdruck zurück.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">Die für die Serialisierung zu verwendende <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />.</param>
      <param name="value" vsli:raw="The object for which to get an expression.">Das Objekt, für das ein Ausdruck abgerufen werden soll.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; representing &lt;paramref name=&quot;value&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if there is no existing expression for &lt;paramref name=&quot;value&quot; /&gt;.">Ein <see cref="T:System.CodeDom.CodeExpression" />, das <paramref name="value" /> darstellt, oder <see langword="null" />, falls kein Ausdruck für <paramref name="value" /> vorhanden ist.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
      <summary vsli:raw="Gets a collection of properties as defined in the project's target version of .NET.">Ruft eine Auflistung von Eigenschaften ab, wie in der Zielversion des Projekts von .NET Framework definiert.</summary>
      <param name="manager" vsli:raw="The serialization manager.">Der Serialisierungs-Manager.</param>
      <param name="instance" vsli:raw="An object of the target type.">Ein Objekt des Zieltyps.</param>
      <param name="attributes" vsli:raw="An array of attributes to pass to the target version of .NET.">Ein Array von Attributen, die an die Zielversion von .NET Framework übergeben werden sollen.</param>
      <returns vsli:raw="A collection of properties as defined in the project's target version of .NET.">Eine Auflistung von Eigenschaften, wie in der Zielversion des Projekts von .NET Framework definiert.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
      <summary vsli:raw="Gets a reflection type generated from type metadata.">Ruft einen aus Typmetadaten generierten Reflektionstyp ab.</summary>
      <param name="manager" vsli:raw="The serialization manager.">Der Serialisierungs-Manager.</param>
      <param name="type" vsli:raw="The type to use metadata from.">Der Typ, von dem Metadaten verwendet werden sollen.</param>
      <returns vsli:raw="A reflection type generated from the metadata of &lt;paramref name=&quot;type&quot; /&gt;.">Ein aus den Metadaten von <paramref name="type" /> generierter Reflektionstyp.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Gets a reflection type generated from object metadata.">Ruft einen aus Objektmetadaten generierten Reflektionstyp ab.</summary>
      <param name="manager" vsli:raw="The serialization manager.">Der Serialisierungs-Manager.</param>
      <param name="instance" vsli:raw="The object to use metadata from.">Das Objekt, von dem Metadaten verwendet werden sollen.</param>
      <returns vsli:raw="A reflection type generated from the metadata of &lt;paramref name=&quot;object&quot; /&gt;.">Ein aus den Metadaten von <paramref name="object" /> generierter Reflektionstyp.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Locates a serializer for the given object value.">Sucht ein Serialisierungsprogramm für den angegebenen Objektwert.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">Die für die Serialisierung zu verwendende <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />.</param>
      <param name="value" vsli:raw="The object specifying the serializer to retrieve.">Das Objekt, das das abzurufende Serialisierungsprogramm angibt.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializer&quot; /&gt; that is appropriate for &lt;paramref name=&quot;value&quot; /&gt;.">Ein für <paramref name="value" /> geeignetes <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> oder <paramref name="value" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
      <summary vsli:raw="Locates a serializer for the given type.">Sucht ein Serialisierungsprogramm für den angegebenen Typ.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">Die für die Serialisierung zu verwendende <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />.</param>
      <param name="valueType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; specifying the serializer to retrieve.">Der <see cref="T:System.Type" />, der das abzurufende Serialisierungsprogramm angibt.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializer&quot; /&gt; that is appropriate for &lt;paramref name=&quot;valueType&quot; /&gt;.">Ein für <paramref name="valueType" /> geeignetes <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;valueType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> oder <paramref name="valueType" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider(System.IServiceProvider,System.Object)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptionProvider&quot; /&gt; that is aware of the target version of .NET, for use in type filtering.">Ruft ein <see cref="T:System.ComponentModel.TypeDescriptionProvider" />-Objekt ab, das die bei der Typfilterung zu verwendende Zielversion von .NET Framework unterstützt.</summary>
      <param name="provider" vsli:raw="The type description provider service.">Der Typbeschreibungsanbieter-Dienst.</param>
      <param name="instance" vsli:raw="An object from which the type description provider service can be derived, if &lt;paramref name=&quot;provider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Ein Objekt, von dem der Typbeschreibungsanbieter-Dienst abgeleitet werden kann, wenn <paramref name="provider" /> gleich <see langword="null" /> ist.</param>
      <returns vsli:raw="A .NET-aware type description provider.">Ein Typbeschreibungsanbieter, der .NET Framework unterstützt.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Returns a unique name for the given object.">Gibt einen eindeutigen Namen für das angegebene Objekt zurück.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">Die für die Serialisierung zu verwendende <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />.</param>
      <param name="value" vsli:raw="The object for which the name will be retrieved.">Das Objekt, für das der Name abgerufen wird.</param>
      <returns vsli:raw="A unique name for &lt;paramref name=&quot;value&quot; /&gt;.">Ein eindeutiger Name für <paramref name="value" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> oder <paramref name="value" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Returns a value indicating whether the given object has been serialized.">Gibt einen Wert zurück, der angibt, ob das angegebene Objekt serialisiert wurde.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">Die für die Serialisierung zu verwendende <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />.</param>
      <param name="value" vsli:raw="The object to test for previous serialization.">Das auf vorausgehende Serialisierung zu prüfende Objekt.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; has been serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="value" /> serialisiert wurde; andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> oder <paramref name="value" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
      <summary vsli:raw="Returns a value indicating whether the given object has been serialized, optionally considering preset expressions.">Gibt einen Wert zurück, der angibt, ob das angegebene Objekt serialisiert wurde, und berücksichtigt optional auch voreingestellte Ausdrücke.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">Die für die Serialisierung zu verwendende <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />.</param>
      <param name="value" vsli:raw="The object to test for previous serialization.">Das auf vorausgehende Serialisierung zu prüfende Objekt.</param>
      <param name="honorPreset" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to include preset expressions; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn voreingestellte Ausdrücke ebenfalls berücksichtigt werden sollen; andernfalls <see langword="false" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; has been serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="value" /> serialisiert wurde; andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> oder <paramref name="value" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)">
      <summary vsli:raw="Returns an expression representing the creation of the given object.">Gibt einen Ausdruck zurück, der die Erstellung des angegebenen Objekts darstellt.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">Die für die Serialisierung zu verwendende <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />.</param>
      <param name="value" vsli:raw="The object to serialize.">Das zu serialisierende Objekt.</param>
      <param name="isComplete" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; was fully serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="value" /> vollständig serialisiert wurde; andernfalls <see langword="false" />.</param>
      <returns vsli:raw="An expression representing the creation of &lt;paramref name=&quot;value&quot; /&gt;.">Ein Ausdruck, der die Erstellung von <paramref name="value" /> darstellt.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> oder <paramref name="value" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)">
      <summary vsli:raw="Serializes the given event into the given statement collection.">Serialisiert das angegebene Ereignis in die angegebene Anweisungssammlung.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">Die für die Serialisierung zu verwendende <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />.</param>
      <param name="statements" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeStatementCollection&quot; /&gt; into which the event will be serialized.">Die <see cref="T:System.CodeDom.CodeStatementCollection" />, in die dieses Ereignis serialisiert wird.</param>
      <param name="value" vsli:raw="The object to which &lt;paramref name=&quot;descriptor&quot; /&gt; is bound.">Ein Objekt, an das <paramref name="descriptor" /> gebunden ist.</param>
      <param name="descriptor" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; specifying the event to serialize.">Ein <see cref="T:System.ComponentModel.EventDescriptor" />, der das zu serialisierende Ereignis angibt.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;value&quot; /&gt;, &lt;paramref name=&quot;statements&quot; /&gt;, or &lt;paramref name=&quot;descriptor&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />, <paramref name="value" />, <paramref name="statements" /> oder <paramref name="descriptor" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" vsli:raw="&lt;see cref=&quot;T:System.ComponentModel.Design.IEventBindingService&quot; /&gt; is not available.">
        <see cref="T:System.ComponentModel.Design.IEventBindingService" /> ist nicht verfügbar.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
      <summary vsli:raw="Serializes the specified events into the given statement collection.">Serialisiert die angegebenen Ereignisse in die angegebene Anweisungssammlung.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">Die für die Serialisierung zu verwendende <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />.</param>
      <param name="statements" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeStatementCollection&quot; /&gt; into which the event will be serialized.">Die <see cref="T:System.CodeDom.CodeStatementCollection" />, in die dieses Ereignis serialisiert wird.</param>
      <param name="value" vsli:raw="The object on which events will be serialized.">Das Objekt, für das die Ereignisse serialisiert werden.</param>
      <param name="filter" vsli:raw="An &lt;see cref=&quot;T:System.Attribute&quot; /&gt; array that filters which events will be serialized.">Ein <see cref="T:System.Attribute" />-Array, das filtert, welche Ereignisse serialisiert werden.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;value&quot; /&gt;, or &lt;paramref name=&quot;statements&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />, <paramref name="value" /> oder <paramref name="statements" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
      <summary vsli:raw="Serializes the properties on the given object into the given statement collection.">Serialisiert die Eigenschaften des jeweiligen Objekts in die angegebene Anweisungssammlung.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">Die für die Serialisierung zu verwendende <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />.</param>
      <param name="statements" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeStatementCollection&quot; /&gt; into which the properties will be serialized.">Die <see cref="T:System.CodeDom.CodeStatementCollection" />, in die diese Eigenschaften serialisiert werden.</param>
      <param name="value" vsli:raw="The object on which the properties will be serialized.">Das Objekt, für das die Eigenschaften serialisiert werden.</param>
      <param name="filter" vsli:raw="An &lt;see cref=&quot;T:System.Attribute&quot; /&gt; array that filters which properties will be serialized.">Ein <see cref="T:System.Attribute" />-Array, das filtert, welche Eigenschaften serialisiert werden.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;value&quot; /&gt;, or &lt;paramref name=&quot;statements&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />, <paramref name="value" /> oder <paramref name="statements" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
      <summary vsli:raw="Serializes the properties on the given object into the invariant culture's resource bundle.">Serialisiert die Eigenschaften für das angegebene Objekt in die Ressourcengruppe der nicht varianten Kultur.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">Die für die Serialisierung zu verwendende <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />.</param>
      <param name="statements" vsli:raw="Not used.">Nicht verwendet.</param>
      <param name="value" vsli:raw="The object whose properties will be serialized.">Das Objekt, dessen Eigenschaften serialisiert werden.</param>
      <param name="filter" vsli:raw="An &lt;see cref=&quot;T:System.Attribute&quot; /&gt; array that filters which properties will be serialized.">Ein <see cref="T:System.Attribute" />-Array, das filtert, welche Eigenschaften serialisiert werden.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;value&quot; /&gt;, or &lt;paramref name=&quot;statements&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />, <paramref name="value" /> oder <paramref name="statements" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Serializes a property on the given object.">Serialisiert eine Eigenschaft für das angegebene Objekt.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">Die für die Serialisierung zu verwendende <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />.</param>
      <param name="statements" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeStatementCollection&quot; /&gt; into which the property will be serialized.">Die <see cref="T:System.CodeDom.CodeStatementCollection" />, in die diese Eigenschaft serialisiert wird.</param>
      <param name="value" vsli:raw="The object on which the property will be serialized.">Das Objekt, für das die Eigenschaft serialisiert wird.</param>
      <param name="propertyToSerialize" vsli:raw="The property to serialize.">Die Eigenschaft, die serialisiert werden soll.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;value&quot; /&gt;, &lt;paramref name=&quot;statements&quot; /&gt;, or &lt;paramref name=&quot;propertyToSerialize&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />, <paramref name="value" />, <paramref name="statements" /> oder <paramref name="propertyToSerialize" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
      <summary vsli:raw="Serializes the given object into a resource bundle using the given resource name.">Serialisiert das angegebene Objekt in eine Ressourcengruppe unter Verwendung des angegebenen Ressourcennamens.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">Die für die Serialisierung zu verwendende <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />.</param>
      <param name="resourceName" vsli:raw="The name of the resource bundle into which &lt;paramref name=&quot;value&quot; /&gt; will be serialized.">Der Name der Ressourcengruppe, in die <paramref name="value" /> serialisiert wird.</param>
      <param name="value" vsli:raw="The object to serialize.">Das zu serialisierende Objekt.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
      <summary vsli:raw="Serializes the given object into a resource bundle using the given resource name.">Serialisiert das angegebene Objekt in eine Ressourcengruppe unter Verwendung des angegebenen Ressourcennamens.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">Die für die Serialisierung zu verwendende <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />.</param>
      <param name="resourceName" vsli:raw="The name of the resource bundle into which &lt;paramref name=&quot;value&quot; /&gt; will be serialized.">Der Name der Ressourcengruppe, in die <paramref name="value" /> serialisiert wird.</param>
      <param name="value" vsli:raw="The object to serialize.">Das zu serialisierende Objekt.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Serializes the given object into an expression.">Serialisiert das angegebene Objekt in einen Ausdruck.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">Die für die Serialisierung zu verwendende <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />.</param>
      <param name="value" vsli:raw="The object to serialize. Can be &lt;see langword=&quot;null&quot; /&gt;.">Das zu serialisierende Objekt. Kann <see langword="null" /> sein.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; object if &lt;paramref name=&quot;value&quot; /&gt; can be serialized; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Ein <see cref="T:System.CodeDom.CodeExpression" />-Objekt, wenn <paramref name="value" /> serialisiert werden kann; andernfalls <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Serializes the given object into an expression.">Serialisiert das angegebene Objekt in einen Ausdruck.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">Die für die Serialisierung zu verwendende <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />.</param>
      <param name="value" vsli:raw="The object to serialize.">Das zu serialisierende Objekt.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; containing &lt;paramref name=&quot;value&quot; /&gt; as a serialized expression.">Ein <see cref="T:System.CodeDom.CodeExpression" />, der <paramref name="value" /> als serialisierten Ausdruck enthält.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
      <summary vsli:raw="Serializes the given object into an expression appropriate for the invariant culture.">Serialisiert das angegebene Objekt in einen für die invariante Kultur geeigneten Ausdruck.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">Die für die Serialisierung zu verwendende <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />.</param>
      <param name="value" vsli:raw="The object to serialize.">Das zu serialisierende Objekt.</param>
      <param name="ensureInvariant" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to serialize into the invariant culture; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um in die invariante Kultur zu serialisieren; andernfalls <see langword="false" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; containing &lt;paramref name=&quot;value&quot; /&gt; as a serialized expression.">Ein <see cref="T:System.CodeDom.CodeExpression" />, der <paramref name="value" /> als serialisierten Ausdruck enthält.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression)">
      <summary vsli:raw="Associates an object with an expression.">Verknüpft ein Objekt mit einem Ausdruck.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">Die für die Serialisierung zu verwendende <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />.</param>
      <param name="value" vsli:raw="The object to serialize.">Das zu serialisierende Objekt.</param>
      <param name="expression" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; with which to associate &lt;paramref name=&quot;value&quot; /&gt;.">
        <see cref="T:System.CodeDom.CodeExpression" /> zum Verknüpfen von <paramref name="value" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;value&quot; /&gt;, or &lt;paramref name=&quot;expression&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />, <paramref name="value" /> oder <paramref name="expression" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression,System.Boolean)">
      <summary vsli:raw="Associates an object with an expression, optionally specifying a preset expression.">Ordnet einem Ausdruck ein Objekt zu und gibt optional einen voreingestellten Ausdruck an.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">Die für die Serialisierung zu verwendende <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />.</param>
      <param name="value" vsli:raw="The object to serialize.">Das zu serialisierende Objekt.</param>
      <param name="expression" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; with which to associate &lt;paramref name=&quot;value&quot; /&gt;.">
        <see cref="T:System.CodeDom.CodeExpression" /> zum Verknüpfen von <paramref name="value" />.</param>
      <param name="isPreset" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify a preset expression; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um einen voreingestellten Ausdruck anzugeben; andernfalls <see langword="false" />.</param>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException">
      <summary vsli:raw="The exception that is thrown when line number information is available for a serialization error.">Eine Ausnahme, die ausgelöst wird, wenn für einen Serialisierungsfehler Zeilennummerinformationen verfügbar sind.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.Exception,System.CodeDom.CodeLinePragma)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializerException&quot; /&gt; class using the specified exception and line information.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" />-Klasse unter Verwendung der angegebenen Ausnahme und Zeileninformationen.</summary>
      <param name="ex" vsli:raw="The exception to throw.">Die auszulösende Ausnahme.</param>
      <param name="linePragma" vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeLinePragma&quot; /&gt; that indicates where the exception occurred.">Ein <see cref="T:System.CodeDom.CodeLinePragma" />, das angibt, wo die Ausnahme aufgetreten ist.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.Exception,System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializerException&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" />-Klasse.</summary>
      <param name="ex" vsli:raw="The exception to throw.">Die auszulösende Ausnahme.</param>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; object from which to extract the context.">Das <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />-Objekt, aus dem der Kontext extrahiert werden soll.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Manager&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="Manager" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" />-Klasse mit den angegebenen Serialisierungsdaten und dem angegebenen Kontext.</summary>
      <param name="info">Speichert die Daten, die zum Serialisieren oder Deserialisieren eines vom <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> serialisierten oder deserialisierten Objekts verwendet wurden.</param>
      <param name="context">Beschreibt Quelle und Ziel des Streams, der die Ausnahme generiert hat, und die Möglichkeit, bei der Serialisierung diesen Kontext und einen zusätzlichen, vom Aufrufer definierten Kontext beizubehalten.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.String,System.CodeDom.CodeLinePragma)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializerException&quot; /&gt; class using the specified message and line information.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" />-Klasse unter Verwendung der angegebenen Meldung und Zeileninformationen.</summary>
      <param name="message" vsli:raw="A message describing the exception.">Eine Meldung mit einer Beschreibung der Ausnahme.</param>
      <param name="linePragma" vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeLinePragma&quot; /&gt; that indicates where the exception occurred.">Ein <see cref="T:System.CodeDom.CodeLinePragma" />, das angibt, wo die Ausnahme aufgetreten ist.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.String,System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializerException&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" />-Klasse.</summary>
      <param name="message" vsli:raw="A message describing the exception.">Eine Meldung mit einer Beschreibung der Ausnahme.</param>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; object from which to extract the context.">Das <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />-Objekt, aus dem der Kontext extrahiert werden soll.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Manager&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="Manager" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object with the parameter name and additional exception information.">Legt das <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt mit dem Parameternamen und zusätzlichen Informationen zur Ausnahme fest.</summary>
      <param name="info" vsli:raw="Stores the data that was being used to serialize or deserialize the object that the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializer&quot; /&gt; was serializing or deserializing.">Speichert die Daten, die zum Serialisieren oder Deserialisieren eines vom <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> serialisierten oder deserialisierten Objekts verwendet wurden.</param>
      <param name="context" vsli:raw="Describes the source and destination of the stream that generated the exception, as well as a means for serialization to retain that context and an additional caller-defined context.">Beschreibt Quelle und Ziel des Streams, der die Ausnahme generiert hat, und die Möglichkeit, bei der Serialisierung diesen Kontext und einen zusätzlichen, vom Aufrufer definierten Kontext beizubehalten.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;info&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Der <paramref name="info" />-Parameter ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.CodeDomSerializerException.LinePragma">
      <summary vsli:raw="Gets or sets the line information for the error associated with this exception.">Ruft die Zeileninformationen für den Fehler, der dieser Ausnahme zugeordnet ist, ab oder legt diese fest.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeLinePragma&quot; /&gt; that indicates the line information for the error.">Ein <see cref="T:System.CodeDom.CodeLinePragma" />, das die Zeileninformationen für den Fehler angibt.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer">
      <summary vsli:raw="Serializes collections.">Serialisiert Auflistungen.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.MethodSupportsSerialization(System.Reflection.MethodInfo)">
      <summary vsli:raw="Verifies serialization support by the &lt;paramref name=&quot;method&quot; /&gt;.">Überprüft die Serialisierungsunterstützung von <paramref name="method" />.</summary>
      <param name="method" vsli:raw="The &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; to check for serialization attributes.">Die <see cref="T:System.Reflection.MethodInfo" /> zur Prüfung der Serialisierungsattribute.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;method&quot; /&gt; supports serialization; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="method" /> die Serialisierung unterstützt; andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Serializes the given collection into a CodeDOM object.">Serialisiert die angegebene Auflistung in ein CodeDOM-Objekt.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use during serialization.">Der bei der Serialisierung zu verwendende <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />.</param>
      <param name="value" vsli:raw="The object to serialize.">Das zu serialisierende Objekt.</param>
      <returns vsli:raw="A CodeDOM object representing &lt;paramref name=&quot;value&quot; /&gt;.">Ein CodeDOM-Objekt, das <paramref name="value" /> darstellt.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> oder <paramref name="value" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.SerializeCollection(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeExpression,System.Type,System.Collections.ICollection,System.Collections.ICollection)">
      <summary vsli:raw="Serializes the given collection.">Serialisiert die angegebene Auflistung.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use during serialization.">Der bei der Serialisierung zu verwendende <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />.</param>
      <param name="targetExpression" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; that refers to the collection.">Der auf die Auflistung verweisende <see cref="T:System.CodeDom.CodeExpression" />.</param>
      <param name="targetType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the collection.">Der <see cref="T:System.Type" /> der Auflistung.</param>
      <param name="originalCollection" vsli:raw="The collection to serialize.">Die zu serialisierende Auflistung.</param>
      <param name="valuesToSerialize" vsli:raw="The values to serialize.">Die zu serialisierenden Werte.</param>
      <returns vsli:raw="Serialized collection if the serialization process succeeded; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Serialisierte Auflistung, wenn der Serialisierungsprozess erfolgreich ausgeführt wurde; andernfalls <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;targetType&quot; /&gt;, &lt;paramref name=&quot;originalCollection&quot; /&gt;, or &lt;paramref name=&quot;valuesToSerialize&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />, <paramref name="targetType" />, <paramref name="originalCollection" /> oder <paramref name="valuesToSerialize" /> ist <see langword="null" />.</exception>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
      <summary vsli:raw="Provides an implementation of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; interface.">Stellt eine Implementierung der <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />-Schnittstelle bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.DesignerSerializationManager&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor(System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.DesignerSerializationManager&quot; /&gt; class with the given service provider.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" />-Klasse mit dem angegebenen Dienstanbieter.</summary>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt;.">Eine <see cref="T:System.IServiceProvider" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;provider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="provider" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container">
      <summary vsli:raw="Gets or sets to the container for this serialization manager.">Ruft den Container für diesen Serialisierungs-Manager ab oder legt ihn fest.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt; to which the serialization manager will add components.">Der <see cref="T:System.ComponentModel.IContainer" />, dem der Serialisierungs-Manager Komponenten hinzufügt.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The serialization manager has an active serialization session.">Der Serialisierungs-Manager verfügt über eine aktive Serialisierungssitzung.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
      <summary vsli:raw="Creates an instance of a type.">Erstellt eine Instanz eines Typs.</summary>
      <param name="type" vsli:raw="The type to create an instance of.">Der Typ, von dem eine Instanz erstellt werden soll.</param>
      <param name="arguments" vsli:raw="The parameters of the type's constructor. This can be &lt;see langword=&quot;null&quot; /&gt; or an empty collection to invoke the parameterless constructor.">Die Parameter des Konstruktors des Typs. Kann <see langword="null" /> oder eine leere Auflistung sein, um den parameterlosen Konstruktor aufzurufen.</param>
      <param name="name" vsli:raw="A name to give the object. If &lt;see langword=&quot;null&quot; /&gt;, the object will not be given a name, unless the object is added to a container and the container gives the object a name.">Ein Name, der dem Objekt gegeben wird. Wenn <see langword="null" />, wird dem Objekt kein Name gegeben, es sei denn, das Objekt wird einem Container hinzugefügt, und der Container gibt dem Objekt einen Namen.</param>
      <param name="addToContainer" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to add the object to the container if the object implements &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das Objekt bei Implementierung von <see cref="T:System.ComponentModel.IComponent" /> dem Container hinzugefügt werden soll, andernfalls <see langword="false" />.</param>
      <returns vsli:raw="A new instance of the type specified by &lt;paramref name=&quot;type&quot; /&gt;.">Ein neue Instanz des von <paramref name="type" /> angegebenen Typs.</returns>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; does not have a constructor that takes parameters contained in &lt;paramref name=&quot;arguments&quot; /&gt;.">
        <paramref name="type" /> verfügt über keinen Konstruktor, der in <paramref name="arguments" /> enthaltene Parameter akzeptiert.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession">
      <summary vsli:raw="Creates a new serialization session.">Erstellt eine neue Serialisierungssitzung.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IDisposable&quot; /&gt; that represents a new serialization session.">Ein <see cref="T:System.IDisposable" />, das eine neue Serialisierungssitzung darstellt.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The serialization manager is already within a session. This version of &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.DesignerSerializationManager&quot; /&gt; does not support simultaneous sessions.">Der Serialisierungs-Manager befindet sich bereits in einer Sitzung. Diese Version von <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> unterstützt keine gleichzeitigen Sitzungen.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors">
      <summary vsli:raw="Gets the list of errors that occurred during serialization or deserialization.">Ruft die Liste mit Fehlern ab, die während der Serialisierung oder Deserialisierung aufgetreten sind.</summary>
      <returns vsli:raw="The list of errors that occurred during serialization or deserialization.">Die Liste mit Fehlern, die während der Serialisierung oder Deserialisierung aufgetreten sind.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property was accessed outside of a serialization session.">Auf diese Eigenschaft wurde außerhalb einer Serialisierungssitzung zugegriffen.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType(System.String)">
      <summary vsli:raw="Gets the type corresponding to the specified type name.">Ruft den entsprechenden Typ für den angegebenen Typnamen ab.</summary>
      <param name="typeName" vsli:raw="The name of the type to get.">Der Name des abzurufenden Typs.</param>
      <returns vsli:raw="The specified type.">Der angegebene Typ.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)">
      <summary vsli:raw="Gets the serializer for the given object type.">Ruft das Serialisierungsprogramm für den angegebenen Objekttyp ab.</summary>
      <param name="objectType" vsli:raw="The type of object for which to retrieve the serializer.">Der Typ des Objekts, für den das Serialisierungsprogramm abgerufen wird.</param>
      <param name="serializerType" vsli:raw="The type of serializer to retrieve.">Der Typ des abzurufenden Serialisierungsprogramms.</param>
      <returns vsli:raw="The serializer for &lt;paramref name=&quot;objectType&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;, if not found.">Das Serialisierungsprogramm für <paramref name="objectType" /> oder <see langword="null" />, wenn es nicht gefunden wird.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;objectType&quot; /&gt; or &lt;paramref name=&quot;serializerType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="objectType" /> oder <paramref name="serializerType" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService(System.Type)">
      <summary vsli:raw="Gets the requested service.">Ruft den angeforderten Dienst ab.</summary>
      <param name="serviceType" vsli:raw="The type of service to retrieve.">Der Typ des abzurufenden Diensts.</param>
      <returns vsli:raw="The requested service, or &lt;see langword=&quot;null&quot; /&gt; if the service cannot be resolved.">Der angeforderte Dienst oder <see langword="null" />, wenn der Dienst nicht aufgelöst werden kann.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType(System.String)">
      <summary vsli:raw="Gets the requested type.">Ruft den angeforderten Typ ab.</summary>
      <param name="typeName" vsli:raw="The name of the type to retrieve.">Der Name des abzurufenden Typs.</param>
      <returns vsli:raw="The requested type, or &lt;see langword=&quot;null&quot; /&gt; if the type cannot be resolved.">Der angeforderte Typ oder <see langword="null" />, wenn der Typ nicht aufgelöst werden kann.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName&quot; /&gt; event.">Löst das <see cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" />-Ereignis aus.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.ResolveNameEventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.ComponentModel.Design.Serialization.ResolveNameEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated&quot; /&gt; event.">Löst das <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated" />-Ereignis aus.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed&quot; /&gt; event.">Löst das <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed" />-Ereignis aus.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames">
      <summary vsli:raw="Gets or sets a value indicating whether the &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; method should check for the presence of the given name in the container.">Ruft einen Wert ab, der angibt, ob das Vorhandensein eines angegebenen Namens im Container durch die <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />-Methode überprüft werden soll, oder legt diesen fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; will pass the given component name; &lt;see langword=&quot;false&quot; /&gt; if &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; will check for the presence of the given name in the container. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />, wenn <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> den angegebenen Komponentennamen übergibt; <see langword="false" />, wenn <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> überprüft, ob der angegebenen Name im Container vorhanden ist. Die Standardeinstellung ist <see langword="true" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property was changed from within a serialization session.">Diese Eigenschaft wurde innerhalb einer Serialisierungssitzung geändert.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider">
      <summary vsli:raw="Gets the object that should be used to provide properties to the serialization manager's &lt;see cref=&quot;P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties&quot; /&gt; property.">Ruft das Objekt ab, mit dem Eigenschaften für die <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" />-Eigenschaft des Serialisierungs-Managers bereitgestellt werden sollen.</summary>
      <returns vsli:raw="The object that should be used to provide properties to the serialization manager's &lt;see cref=&quot;P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties&quot; /&gt; property.">Das Objekt, mit dem Eigenschaften für die <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" />-Eigenschaft des Serialisierungs-Managers bereitgestellt werden sollen.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances">
      <summary vsli:raw="Gets or sets a value that indicates whether &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; will always create a new instance of a type.">Ruft einen Wert ab, der angibt, ob <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> immer eine neue Instanz eines Typs erstellt, oder legt diesen fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; will return the existing instance; &lt;see langword=&quot;false&quot; /&gt; if &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; will create a new instance of a type. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> die vorhandene Instanz zurückgibt; <see langword="false" />, wenn <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> eine neue Instanz eines Typs erstellt. Die Standardeinstellung ist <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The serialization manager has an active serialization session.">Der Serialisierungs-Manager verfügt über eine aktive Serialisierungssitzung.</exception>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated">
      <summary vsli:raw="Occurs when a session is created.">Tritt beim Erstellen einer Sitzung ein.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed">
      <summary vsli:raw="Occurs when a session is disposed.">Tritt beim Löschen einer Sitzung ein.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
      <summary vsli:raw="Adds a custom serialization provider to the serialization manager.">Fügt dem Serialisierungs-Manager einen benutzerdefinierten Serialisierungsanbieter hinzu.</summary>
      <param name="provider" vsli:raw="The serialization provider to add.">Der hinzuzufügende Serialisierungsprovider.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context">
      <summary vsli:raw="Gets the context stack for this serialization session.">Ruft den Kontextstapel für diese Serialisierungssitzung ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.ContextStack&quot; /&gt; that stores data.">Ein <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" />, in dem Daten gespeichert werden.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property was accessed outside of a serialization session.">Auf diese Eigenschaft wurde außerhalb einer Serialisierungssitzung zugegriffen.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
      <summary vsli:raw="Implements the &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; method.">Implementiert die <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />-Methode.</summary>
      <param name="type" vsli:raw="The data type to create.">Der zu erstellende Datentyp.</param>
      <param name="arguments" vsli:raw="The arguments to pass to the constructor for this type.">Die an den Konstruktor für diesen Typ zu übergebenden Argumente.</param>
      <param name="name" vsli:raw="The name of the object. This name can be used to access the object later through &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)&quot; /&gt;. If &lt;see langword=&quot;null&quot; /&gt; is passed, the object is still created but cannot be accessed by name.">Der Name des Objekts. Mit diesem Namen kann später über <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" /> auf das Objekt zugegriffen werden. Wenn <see langword="null" /> übergeben wird, dann wird das Objekt dennoch erstellt, jedoch kann darauf nicht über den Namen zugegriffen werden.</param>
      <param name="addToContainer" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to add this object to the design container. The object must implement &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; for this to have any effect.">
        <see langword="true" />, wenn dieses Objekt dem Entwurfscontainer hinzugefügt werden soll. Dies wirkt sich nur dann aus, wenn das Objekt <see cref="T:System.ComponentModel.IComponent" /> implementiert.</param>
      <returns vsli:raw="The newly created object instance.">Die neu erstellte Objektinstanz.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)">
      <summary vsli:raw="Retrieves an instance of a created object of the specified name.">Ruft eine Instanz eines erstellten Objekts mit dem angegebenen Namen ab.</summary>
      <param name="name" vsli:raw="The name of the object to retrieve.">Der Name des abzurufenden Objekts.</param>
      <returns vsli:raw="An instance of the object with the given name, or &lt;see langword=&quot;null&quot; /&gt; if no object by that name can be found.">Eine Instanz des Objekts mit dem angegebenen Namen oder <see langword="null" />, wenn kein Objekt mit diesem Namen gefunden wird.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property was accessed outside of a serialization session.">Auf diese Eigenschaft wurde außerhalb einer Serialisierungssitzung zugegriffen.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)">
      <summary vsli:raw="Retrieves a name for the specified object.">Ruft einen Namen für das angegebene Objekt ab.</summary>
      <param name="value" vsli:raw="The object for which to retrieve the name.">Das Objekt, für das der Name abgerufen werden soll.</param>
      <returns vsli:raw="The name of the object, or &lt;see langword=&quot;null&quot; /&gt; if the object is unnamed.">Der Name des Objekts oder <see langword="null" />, wenn das Objekt unbenannt ist.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property was accessed outside of a serialization session.">Auf diese Eigenschaft wurde außerhalb einer Serialisierungssitzung zugegriffen.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer(System.Type,System.Type)">
      <summary vsli:raw="Gets a serializer of the requested type for the specified object type.">Ruft ein Serialisierungsprogramm vom angeforderten Typ für den angegebenen Objekttyp ab.</summary>
      <param name="objectType" vsli:raw="The type of the object to get the serializer for.">Der Typ des Objekts, für das das Serialisierungsprogramm abgerufen werden soll.</param>
      <param name="serializerType" vsli:raw="The type of the serializer to retrieve.">Der Typ des abzurufenden Serialisierungsprogramms.</param>
      <returns vsli:raw="An instance of the requested serializer, or &lt;see langword=&quot;null&quot; /&gt; if no appropriate serializer can be located.">Eine Instanz des angeforderten Serialisierungsprogramms oder <see langword="null" />, falls kein entsprechendes Serialisierungsprogramm gefunden werden kann.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType(System.String)">
      <summary vsli:raw="Gets a type of the specified name.">Ruft einen Typ mit dem angegebenen Namen ab.</summary>
      <param name="typeName" vsli:raw="The fully qualified name of the type to load.">Der voll gekennzeichnete Name des zu ladenden Typs.</param>
      <returns vsli:raw="An instance of the type, or &lt;see langword=&quot;null&quot; /&gt; if the type cannot be loaded.">Eine Instanz des Typs oder <see langword="null" />, wenn der Typ nicht geladen werden kann.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property was accessed outside of a serialization session.">Auf diese Eigenschaft wurde außerhalb einer Serialisierungssitzung zugegriffen.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties">
      <summary vsli:raw="Implements the &lt;see cref=&quot;P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties&quot; /&gt; property.">Implementiert die <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" />-Eigenschaft.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; containing the properties to be serialized.">Eine <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />, die die zu serialisierenden Eigenschaften enthält.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
      <summary vsli:raw="Removes a previously added serialization provider.">Entfernt einen zuvor hinzugefügten Serialisierungsanbieter.</summary>
      <param name="provider" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider&quot; /&gt; to remove.">Das zu entfernende <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" />-Element.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError(System.Object)">
      <summary vsli:raw="Used to report a recoverable error in serialization.">Wird verwendet, um einen behebbaren Fehler bei der Serialisierung zu melden.</summary>
      <param name="errorInformation" vsli:raw="An object containing the error information, usually of type &lt;see cref=&quot;T:System.String&quot; /&gt; or &lt;see cref=&quot;T:System.Exception&quot; /&gt;.">Ein Objekt, das die Fehlerinformationen enthält; normalerweise vom Typ <see cref="T:System.String" /> oder <see cref="T:System.Exception" />.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property was accessed outside of a serialization session.">Auf diese Eigenschaft wurde außerhalb einer Serialisierungssitzung zugegriffen.</exception>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ResolveName">
      <summary vsli:raw="Occurs when &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)&quot; /&gt; cannot locate the specified name in the serialization manager's name table.">Tritt ein, wenn <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" /> den angegebenen Namen in der Namenstabelle des Serialisierungs-Managers nicht finden kann.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The serialization manager does not have an active serialization session.">Dieser Serialisierungs-Manager hat keine aktive Serialisierungssitzung.</exception>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SerializationComplete">
      <summary vsli:raw="Occurs when serialization is complete.">Tritt ein, wenn die Serialisierung abgeschlossen ist.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The serialization manager does not have an active serialization session.">Dieser Serialisierungs-Manager hat keine aktive Serialisierungssitzung.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)">
      <summary vsli:raw="Sets the name for the specified object.">Legt den Namen für das angegebene Objekt fest.</summary>
      <param name="instance" vsli:raw="The object to set the name.">Das Objekt, für das der Name festgelegt wird.</param>
      <param name="name" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; used as the name of the object.">Ein als Name des Objekts verwendeter <see cref="T:System.String" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the parameters are &lt;see langword=&quot;null&quot; /&gt;.">Ein oder beide Parameter sind <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The object specified by instance already has a name, or &lt;paramref name=&quot;name&quot; /&gt; is already used by another named object.">Das von der Instanz angegebene Objekt verfügt bereits über einen Namen, oder <paramref name="name" /> wird bereits von einem anderen benannten Objekt verwendet.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property was accessed outside of a serialization session.">Auf diese Eigenschaft wurde außerhalb einer Serialisierungssitzung zugegriffen.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#IServiceProvider#GetService(System.Type)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.IServiceProvider.GetService(System.Type)&quot; /&gt; method.">Eine Beschreibung dieses Members finden Sie unter der <see cref="M:System.IServiceProvider.GetService(System.Type)" />-Methode.</summary>
      <param name="serviceType" vsli:raw="An object that specifies the type of service object to get.">Ein Objekt, das den Typ des abzurufenden Dienstobjekts angibt.</param>
      <returns vsli:raw="A service object of type &lt;paramref name=&quot;serviceType&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; if there is no service object of type &lt;paramref name=&quot;serviceType&quot; /&gt;.">Ein Dienstobjekt vom Typ <paramref name="serviceType" />.  

oder - 
<see langword="null" />, wenn kein Objekt vom Typ <paramref name="serviceType" /> vorhanden ist.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; method will verify that matching names refer to the same type.">Ruft einen Wert ab, der angibt, ob die <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />-Methode übereinstimmende Namen hinsichtlich ihres Verweises auf den gleichen Typ überprüft, oder legt diesen fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; verifies types; otherwise, &lt;see langword=&quot;false&quot; /&gt; if it does not. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />, wenn <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> Typen überprüft, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The serialization manager has an active serialization session.">Der Serialisierungs-Manager verfügt über eine aktive Serialisierungssitzung.</exception>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.ExpressionContext">
      <summary vsli:raw="Provides a means of passing context state among serializers. This class cannot be inherited.">Ermöglicht die Übergabe von Kontextzustand zwischen Serialisierungsprogrammen. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.ExpressionContext&quot; /&gt; class with the given expression and owner.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" />-Klasse mit dem angegebenen Ausdruck und Besitzer.</summary>
      <param name="expression" vsli:raw="The given code expression.">Der jeweilige Codeausdruck.</param>
      <param name="expressionType" vsli:raw="The given code expression type.">Der jeweilige Codeausdruckstyp.</param>
      <param name="owner" vsli:raw="The given code expression owner.">Der jeweilige Codeausdrucksbesitzer.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;expression&quot; /&gt;, &lt;paramref name=&quot;expressionType&quot; /&gt;, or &lt;paramref name=&quot;owner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="expression" />, <paramref name="expressionType" /> oder <paramref name="owner" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.ExpressionContext&quot; /&gt; class with a current value.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" />-Klasse mit einem aktuellen Wert.</summary>
      <param name="expression" vsli:raw="The given code expression.">Der jeweilige Codeausdruck.</param>
      <param name="expressionType" vsli:raw="The given code expression type.">Der jeweilige Codeausdruckstyp.</param>
      <param name="owner" vsli:raw="The given code expression owner.">Der jeweilige Codeausdrucksbesitzer.</param>
      <param name="presetValue" vsli:raw="The given code expression preset value.">Der jeweilige voreingestellte Codeausdruckswert.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;expression&quot; /&gt;, &lt;paramref name=&quot;expressionType&quot; /&gt;, or &lt;paramref name=&quot;owner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="expression" />, <paramref name="expressionType" /> oder <paramref name="owner" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.Expression">
      <summary vsli:raw="Gets the expression this context represents.">Ruft den Ausdruck ab, den dieser Kontext darstellt.</summary>
      <returns vsli:raw="The expression this context represents.">Der Ausdruck, den dieser Kontext darstellt.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.ExpressionType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Type&quot; /&gt; of the expression.">Ruft den <see cref="T:System.Type" /> des Ausdrucks ab.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the expression.">Der <see cref="T:System.Type" /> des Ausdrucks.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.Owner">
      <summary vsli:raw="Gets the object owning this expression.">Ruft das Objekt ab, das diesen Ausdruck besitzt.</summary>
      <returns vsli:raw="The object owning this expression.">Das Objekt, das diesen Ausdruck besitzt.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue">
      <summary vsli:raw="Gets the preset value of an expression.">Ruft den voreingestellten Wert eines Ausdrucks ab.</summary>
      <returns vsli:raw="The preset value of this expression, or &lt;see langword=&quot;null&quot; /&gt; if not assigned.">Der voreingestellte Wert dieses Ausdrucks oder <see langword="null" />, wenn kein Wert zugewiesen wurde.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer">
      <summary vsli:raw="Provides the base class for serializing a reflection primitive within the object graph.">Stellt die Basisklasse zum Serialisieren einer Reflektionsprimitiven innerhalb des Objektdiagramms bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor,System.CodeDom.CodeStatementCollection)">
      <summary vsli:raw="Serializes the given member descriptor on the given value to a statement collection.">Serialisiert den angegebenen Memberdeskriptor für den angegebenen Wert in eine Anweisungsauflistung.</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">Der Serialisierungs-Manager, der für die Serialisierung verwendet werden soll.</param>
      <param name="value" vsli:raw="The object to which the member is bound.">Das Objekt, an das der Member gebunden ist.</param>
      <param name="descriptor" vsli:raw="The descriptor of the member to serialize.">Der Deskriptor des zu serialisierenden Members.</param>
      <param name="statements" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeStatementCollection&quot; /&gt; into which &lt;paramref name=&quot;descriptor&quot; /&gt; is serialized.">Die <see cref="T:System.CodeDom.CodeStatementCollection" />, in die <paramref name="descriptor" /> serialisiert wird.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer.ShouldSerialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary vsli:raw="Determines if the given member should be serialized.">Bestimmt, ob der angegebene Member serialisiert werden soll.</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">Der Serialisierungs-Manager, der für die Serialisierung verwendet werden soll.</param>
      <param name="value" vsli:raw="The object to which the member is bound.">Das Objekt, an das der Member gebunden ist.</param>
      <param name="descriptor" vsli:raw="The descriptor of the member to serialize.">Der Deskriptor des zu serialisierenden Members.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the member described by &lt;paramref name=&quot;descriptor&quot; /&gt; should be serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der von <paramref name="descriptor" /> beschriebene Member serialisiert werden soll; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection">
      <summary vsli:raw="Holds a table of statements that is offered by the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.StatementContext&quot; /&gt;. This class cannot be inherited.">Enthält eine Tabelle mit Anweisungen, die von <see cref="T:System.ComponentModel.Design.Serialization.StatementContext" /> bereitgestellt werden. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.ContainsKey(System.Object)">
      <summary vsli:raw="Determines whether the table contains the given statement owner.">Bestimmt, ob die Tabelle den angegebenen Anweisungsbesitzer enthält.</summary>
      <param name="statementOwner" vsli:raw="The owner of the statement collection.">Der Besitzer der Anweisungsauflistung.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;statementOwner&quot; /&gt; is in the table; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="statementOwner" /> in der Tabelle enthalten ist; andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;statementOwner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="statementOwner" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.GetEnumerator">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.ObjectStatementCollection&quot; /&gt;.">Gibt einen <see cref="T:System.Collections.IEnumerator" /> für das <see cref="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection" />zurück.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.ObjectStatementCollection&quot; /&gt;.">Ein <see cref="T:System.Collections.IEnumerator" /> für das <see cref="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ObjectStatementCollection.Item(System.Object)">
      <summary vsli:raw="Gets the statement collection for the given owner.">Ruft die Anweisungsauflistung für den angegebenen Besitzer ab.</summary>
      <param name="statementOwner" vsli:raw="The owner of the statement collection.">Der Besitzer der Anweisungsauflistung.</param>
      <returns vsli:raw="The statement collection for &lt;paramref name=&quot;statementOwner&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if &lt;paramref name=&quot;statementOwner&quot; /&gt; is not in the table.">Die Anweisungsauflistung für <paramref name="statementOwner" /> oder <see langword="null" />, wenn <paramref name="statementOwner" /> nicht in der Tabelle enthalten ist.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;statementOwner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="statementOwner" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.Populate(System.Collections.ICollection)">
      <summary vsli:raw="Populates the statement table with a collection of statement owners.">Füllt die Anweisungstabelle mit einer Auflistung von Anweisungsbesitzern auf.</summary>
      <param name="statementOwners" vsli:raw="A collection of statement owners to add to the table.">Eine Auflistung der Anweisungsbesitzer, die der Tabelle hinzugefügt werden sollen.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;statementOwner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="statementOwner" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.Populate(System.Object)">
      <summary vsli:raw="Populates the statement table with a statement owner.">Füllt die Anweisungstabelle mit einem Anweisungsbesitzer auf.</summary>
      <param name="owner" vsli:raw="The statement owner to add to the table.">Der Anweisungsbesitzer, der der Tabelle hinzugefügt werden soll.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;owner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="owner" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.Collections.IEnumerable.GetEnumerator&quot; /&gt; method.">Eine Beschreibung dieses Members finden Sie unter der <see cref="M:System.Collections.IEnumerable.GetEnumerator" />-Methode.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to iterate through the collection.">Ein <see cref="T:System.Collections.IEnumerator" />, der zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.RootContext">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializer&quot; /&gt; adds a root context to provide a definition of the root object. This class cannot be inherited.">Ein <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> fügt einen Stammkontext hinzu, um eine Definition des Stammobjekts bereitzustellen. Diese Klasse kann nicht geerbt werden.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.RootContext.#ctor(System.CodeDom.CodeExpression,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.RootContext&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.Serialization.RootContext" />-Klasse.</summary>
      <param name="expression" vsli:raw="The expression representing the root object in the object graph.">Der Ausdruck, der das Stammobjekt im Objektdiagramm darstellt.</param>
      <param name="value" vsli:raw="The root object of the object graph.">Das Stammobjekt des Objektdiagramms.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;expression&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="expression" /> oder <paramref name="value" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.RootContext.Expression">
      <summary vsli:raw="Gets the expression representing the root object in the object graph.">Ruft den Ausdruck ab, der das Stammobjekt im Objektdiagramm darstellt.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; representing the root object in the object graph.">Ein <see cref="T:System.CodeDom.CodeExpression" />, der das Stammobjekt im Objektdiagramm darstellt.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.RootContext.Value">
      <summary vsli:raw="Gets the root object of the object graph.">Ruft das Stammobjekt des Objektdiagramms ab.</summary>
      <returns vsli:raw="The root object of the object graph.">Das Stammobjekt des Objektdiagramms.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext">
      <summary vsli:raw="Specifies that serializers should handle default values. This class cannot be inherited.">Gibt an, dass Serialisierungsprogramme Standardwerte behandeln sollen. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.#ctor(System.ComponentModel.MemberDescriptor)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext&quot; /&gt; class with the option of binding to a specific member.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext" />-Klasse mit der Option der Bindung an einen bestimmten Member.</summary>
      <param name="member" vsli:raw="The member to which this context is bound. Can be &lt;see langword=&quot;null&quot; /&gt;.">Der Member, an den dieser Kontext gebunden wird. Kann <see langword="null" /> sein.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.Member">
      <summary vsli:raw="Gets the member to which this context is bound.">Ruft den Member ab, an den dieser Kontext gebunden ist.</summary>
      <returns vsli:raw="The member to which this context is bound, or &lt;see langword=&quot;null&quot; /&gt; if the context is bound to all members of an object.">Der Member, an den dieser Kontext gebunden ist, oder <see langword="null" />, wenn der Kontext an alle Member eines Objekts gebunden ist.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.ShouldSerialize(System.ComponentModel.MemberDescriptor)">
      <summary vsli:raw="Gets a value indicating whether the given member should be serialized in this context.">Ruft einen Wert ab, der angibt, ob der angegebene Member in diesem Kontext serialisiert werden soll.</summary>
      <param name="member" vsli:raw="The member to be examined for serialization.">Der Member, der für die Serialisierung untersucht werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the given member should be serialized in this context; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der angegebene Member in diesem Kontext serialisiert werden soll; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.StatementContext">
      <summary vsli:raw="Provides a location into which statements can be serialized. This class cannot be inherited.">Stellt einen Speicherort bereit, in den Anweisungen serialisiert werden können. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.StatementContext.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.StatementContext&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.Serialization.StatementContext" />-Klasse.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.StatementContext.StatementCollection">
      <summary vsli:raw="Gets a collection of statements offered by the statement context.">Ruft eine vom Anweisungskontext bereitgestellte Anweisungsauflistung ab.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.ObjectStatementCollection&quot; /&gt; containing statements offered by the statement context.">Eine <see cref="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection" /> mit Anweisungen, die vom Anweisungskontext bereitgestellt wird.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer">
      <summary vsli:raw="Serializes an object to a new type.">Serialisiert ein Objekt in einen neuen Typ.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
      <summary vsli:raw="Deserializes the given type declaration.">Deserialisiert die angegebene Typdeklaration.</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">Der Serialisierungs-Manager, der für die Serialisierung verwendet werden soll.</param>
      <param name="declaration" vsli:raw="Type declaration to use for serialization.">Die für die Serialisierung zu verwendende Typdeklaration.</param>
      <returns vsli:raw="The root object.">Das Stammobjekt.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;typeDecl&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> oder <paramref name="typeDecl" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)">
      <summary vsli:raw="Returns the method where statements used to serialize a member are stored.">Gibt die Methode zurück, in der die Anweisungen zum Serialisieren eines Members gespeichert werden.</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">Der Serialisierungs-Manager, der für die Serialisierung verwendet werden soll.</param>
      <param name="declaration" vsli:raw="The type declaration to use for serialization.">Die Typdeklaration, die für die Serialisierung verwendet werden soll.</param>
      <param name="value" vsli:raw="The value to use for serialization.">Der für die Serialisierung zu verwendende Wert.</param>
      <returns vsli:raw="The method used to emit all of the initialization code for the given member.">Die Methode, die verwendet wird, um für den jeweiligen Member den gesamten Initialisierungscode auszugeben.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;typeDecl&quot; /&gt;, or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />, <paramref name="typeDecl" /> oder <paramref name="value" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
      <summary vsli:raw="Returns an array of methods to be interpreted during deserialization.">Gibt ein Array der Methoden zurück, die bei der Deserialisierung interpretiert werden sollen.</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">Der Serialisierungs-Manager, der für die Serialisierung verwendet werden soll.</param>
      <param name="declaration" vsli:raw="The type declaration to use for serialization.">Die Typdeklaration, die für die Serialisierung verwendet werden soll.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeMemberMethod&quot; /&gt; array of methods to be interpreted during deserialization.">Ein <see cref="T:System.CodeDom.CodeMemberMethod" />-Array der Methoden, die bei der Deserialisierung interpretiert werden sollen.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;typeDecl&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> oder <paramref name="typeDecl" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
      <summary vsli:raw="Serializes the object root by creating a new type declaration that defines root.">Serialisiert den Objektstamm durch das Erstellen einer neuen Typdeklaration, die den Stamm definiert.</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">Der Serialisierungs-Manager, der für die Serialisierung verwendet werden soll.</param>
      <param name="root" vsli:raw="The object to serialize.">Das zu serialisierende Objekt.</param>
      <param name="members" vsli:raw="Optional collection of members. Can be &lt;see langword=&quot;null&quot; /&gt; or empty.">Optionale Auflistung der Member. Kann <see langword="null" /> oder leer sein.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeTypeDeclaration&quot; /&gt; that defines the root object.">Eine <see cref="T:System.CodeDom.CodeTypeDeclaration" />, die das Stammobjekt definiert.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;root&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> oder <paramref name="root" /> ist <see langword="null" />.</exception>
    </member>
    <member name="T:System.ComponentModel.Design.UndoEngine">
      <summary vsli:raw="Specifies generic undo/redo functionality at design time.">Gibt generische Funktionen zum Rückgängigmachen/Wiederholen zur Entwurfszeit an.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.#ctor(System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.UndoEngine" />-Klasse.</summary>
      <param name="provider" vsli:raw="A parenting service provider.">Ein übergeordneter Dienstanbieter.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;provider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="provider" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A required service cannot be found. See &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; for required services. If you have removed this service, ensure that you provide a replacement.">Ein erforderlicher Dienst kann nicht gefunden werden. Die erforderlichen Dienste finden Sie unter <see cref="T:System.ComponentModel.Design.UndoEngine" />. Wenn Sie diesen Dienst entfernt haben, stellen Sie sicher, dass Sie einen Ersatz bereitstellen.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.AddUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt; to the undo stack.">Fügt dem Rückgängigstapel eine <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> hinzu.</summary>
      <param name="unit" vsli:raw="The undo unit to add.">Die hinzuzufügende Rückgängigeinheit.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.CreateUndoUnit(System.String,System.Boolean)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt;.">Erstellt einen neuen <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</summary>
      <param name="name" vsli:raw="The name of the unit to create.">Der Name der zu erstellenden Einheit.</param>
      <param name="primary" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to create the first of a series of nested units; &lt;see langword=&quot;false&quot; /&gt; to create subsequent nested units.">
        <see langword="true" />, um die erste einer Reihe von geschachtelten Einheiten zu erstellen, <see langword="false" />, um nachfolgende geschachtelte Einheiten zu erstellen.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt; with a specified name.">Ein neues <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> mit einem angegebenen Namen.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.DiscardUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)">
      <summary vsli:raw="Discards an &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt;.">Verwirft eine <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</summary>
      <param name="unit" vsli:raw="The unit to discard.">Die zu verwerfende Einheit.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt;.">Gibt alle vom <see cref="T:System.ComponentModel.Design.UndoEngine" /> verwendeten Ressourcen frei.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; and optionally releases the managed resources.">Gibt die von <see cref="T:System.ComponentModel.Design.UndoEngine" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.Enabled">
      <summary vsli:raw="Enables or disables the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt;.">Aktiviert oder deaktiviert das <see cref="T:System.ComponentModel.Design.UndoEngine" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das <see cref="T:System.ComponentModel.Design.UndoEngine" /> aktiviert ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.GetRequiredService(System.Type)">
      <summary vsli:raw="Gets the requested service.">Ruft den angeforderten Dienst ab.</summary>
      <param name="serviceType" vsli:raw="The type of service to retrieve.">Der Typ des abzurufenden Diensts.</param>
      <returns vsli:raw="The requested service, if found.">Der angeforderte Dienst, wenn vorhanden.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serviceType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="serviceType" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;serviceType&quot; /&gt; is required but cannot be found. If you have removed this service, ensure that you provide a replacement.">
        <paramref name="serviceType" /> ist erforderlich, wurde jedoch nicht gefunden. Wenn Sie diesen Dienst entfernt haben, stellen Sie sicher, dass Sie einen Ersatz bereitstellen.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.GetService(System.Type)">
      <summary vsli:raw="Gets the requested service.">Ruft den angeforderten Dienst ab.</summary>
      <param name="serviceType" vsli:raw="The type of service to retrieve.">Der Typ des abzurufenden Diensts.</param>
      <returns vsli:raw="The requested service, or &lt;see langword=&quot;null&quot; /&gt; if the requested service is not found.">Der angeforderte Dienst oder <see langword="null" />, wenn der angeforderte Dienst nicht gefunden wird.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serviceType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="serviceType" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.OnUndoing(System.EventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.UndoEngine.Undoing&quot; /&gt; event.">Löst das <see cref="E:System.ComponentModel.Design.UndoEngine.Undoing" />-Ereignis aus.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.OnUndone(System.EventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.UndoEngine.Undone&quot; /&gt; event.">Löst das <see cref="E:System.ComponentModel.Design.UndoEngine.Undone" />-Ereignis aus.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="E:System.ComponentModel.Design.UndoEngine.Undoing">
      <summary vsli:raw="Occurs immediately before an undo action is performed.">Tritt sofort auf, bevor eine Rückgängigaktion ausgeführt wird.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoInProgress">
      <summary vsli:raw="Indicates if an undo action is in progress.">Gibt an, ob gerade eine Rückgängigaktion ausgeführt wird.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an undo action is in progress; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn eine Rückgängigaktion ausgeführt wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="E:System.ComponentModel.Design.UndoEngine.Undone">
      <summary vsli:raw="Occurs immediately after an undo action is performed.">Tritt sofort auf, nachdem eine Rückgängigaktion ausgeführt wurde.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.UndoEngine.UndoUnit">
      <summary vsli:raw="Encapsulates a unit of work that a user can undo.">Kapselt eine Arbeitseinheit, die ein Benutzer rückgängig machen kann.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.#ctor(System.ComponentModel.Design.UndoEngine,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />-Klasse.</summary>
      <param name="engine" vsli:raw="The undo engine that owns this undo unit.">Die Rückgängig-Engine, die diese Rückgängigeinheit besitzt.</param>
      <param name="name" vsli:raw="The name for this undo unit.">Der Name dieser Rückgängigeinheit.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;engine&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="engine" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Close">
      <summary vsli:raw="Receives a call from the undo engine to close this unit.">Empfängt einen Aufruf von der Rückgängig-Engine, diese Einheit zu schließen.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentAdded(System.ComponentModel.Design.ComponentEventArgs)">
      <summary vsli:raw="Receives a call from the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; in response to a &lt;see cref=&quot;E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded&quot; /&gt; event.">Empfängt einen Aufruf vom <see cref="T:System.ComponentModel.Design.UndoEngine" /> als Antwort auf das <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded" />-Ereignis.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentEventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentAdding(System.ComponentModel.Design.ComponentEventArgs)">
      <summary vsli:raw="Receives a call from the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; in response to a &lt;see cref=&quot;E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding&quot; /&gt; event.">Empfängt einen Aufruf vom <see cref="T:System.ComponentModel.Design.UndoEngine" /> als Antwort auf das <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding" />-Ereignis.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentEventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentChanged(System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary vsli:raw="Receives a call from the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; in response to a &lt;see cref=&quot;E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&quot; /&gt; event.">Empfängt einen Aufruf vom <see cref="T:System.ComponentModel.Design.UndoEngine" /> als Antwort auf das <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" />-Ereignis.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentChangedEventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentChanging(System.ComponentModel.Design.ComponentChangingEventArgs)">
      <summary vsli:raw="Receives a call from the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; in response to a &lt;see cref=&quot;E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging&quot; /&gt; event.">Empfängt einen Aufruf vom <see cref="T:System.ComponentModel.Design.UndoEngine" /> als Antwort auf das <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" />-Ereignis.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentChangedEventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRemoved(System.ComponentModel.Design.ComponentEventArgs)">
      <summary vsli:raw="Receives a call from the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; in response to a &lt;see cref=&quot;E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved&quot; /&gt; event.">Empfängt einen Aufruf vom <see cref="T:System.ComponentModel.Design.UndoEngine" /> als Antwort auf das <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved" />-Ereignis.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentEventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRemoving(System.ComponentModel.Design.ComponentEventArgs)">
      <summary vsli:raw="Receives a call from the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; in response to a &lt;see cref=&quot;E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving&quot; /&gt; event.">Empfängt einen Aufruf vom <see cref="T:System.ComponentModel.Design.UndoEngine" /> als Antwort auf das <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving" />-Ereignis.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentEventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRename(System.ComponentModel.Design.ComponentRenameEventArgs)">
      <summary vsli:raw="Receives a call from the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; in response to a &lt;see cref=&quot;E:System.ComponentModel.Design.IComponentChangeService.ComponentRename&quot; /&gt; event.">Empfängt einen Aufruf vom <see cref="T:System.ComponentModel.Design.UndoEngine" /> als Antwort auf das <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" />-Ereignis.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentRenameEventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.ComponentModel.Design.ComponentRenameEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.GetService(System.Type)">
      <summary vsli:raw="Gets an instance of the requested service.">Ruft eine Instanz des angeforderten Diensts ab.</summary>
      <param name="serviceType" vsli:raw="The type of service to retrieve.">Der Typ des abzurufenden Diensts.</param>
      <returns vsli:raw="An instance of the given service, or &lt;see langword=&quot;null&quot; /&gt; if the service cannot be resolved.">Eine Instanz des angegebenen Diensts oder <see langword="null" />, wenn der Dienst nicht aufgelöst werden kann.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoUnit.IsEmpty">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt; contains no events.">Ruft einen Wert ab, der angibt, ob die <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> keine Ereignisse enthält.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt; contains no events; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> keine Ereignisse enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoUnit.Name">
      <summary vsli:raw="Gets the name of the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt;.">Ruft den Namen der <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> ab.</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt;.">Der Name des <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ToString">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the current name of the unit.">Gibt einen <see cref="T:System.String" /> zurück, der den aktuellen Namen der Einheit darstellt.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the current name of the unit.">Ein <see cref="T:System.String" />, der den aktuellen Namen der Einheit darstellt.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo">
      <summary vsli:raw="Performs an undo or redo action.">Führt eine Rückgängig- oder Wiederherstellaktion aus.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore">
      <summary vsli:raw="Called by &lt;see cref=&quot;M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo&quot; /&gt; to perform an undo action.">Wird von <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> aufgerufen, um eine Rückgängigaktion auszuführen.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine">
      <summary vsli:raw="Gets the parent &lt;see cref=&quot;P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine&quot; /&gt;.">Ruft das übergeordnete <see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" /> ab.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine&quot; /&gt; to which this &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt; is attached.">Das <see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" />, an das dieser <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> angefügt ist.</returns>
    </member>
    <member name="T:System.Drawing.Design.IToolboxItemProvider">
      <summary vsli:raw="Exposes a collection of toolbox items.">Macht eine Auflistung von Toolboxelementen verfügbar.</summary>
    </member>
    <member name="P:System.Drawing.Design.IToolboxItemProvider.Items">
      <summary vsli:raw="Gets a collection of &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; objects.">Ruft eine Auflistung von <see cref="T:System.Drawing.Design.ToolboxItem" />-Objekten ab.</summary>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; objects.">Eine Auflistung von <see cref="T:System.Drawing.Design.ToolboxItem" />-Objekten.</returns>
    </member>
    <member name="T:System.Drawing.Design.IToolboxService">
      <summary vsli:raw="Provides methods and properties to manage and query the toolbox in the development environment.">Stellt Methoden und Eigenschaften zum Verwalten und Abfragen der Toolbox in der Entwicklungsumgebung bereit.</summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddCreator(System.Drawing.Design.ToolboxItemCreatorCallback,System.String)">
      <summary vsli:raw="Adds a new toolbox item creator for a specified data format.">Fügt eine neue Toolbox-Elementerstellung für ein angegebenes Datenformat hinzu.</summary>
      <param name="creator" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCreatorCallback&quot; /&gt; that can create a component when the toolbox item is invoked.">Ein <see cref="T:System.Drawing.Design.ToolboxItemCreatorCallback" />, der beim Aufrufen des Toolboxelements eine Komponente erstellen kann.</param>
      <param name="format" vsli:raw="The data format that the creator handles.">Das Datenformat, das die Erstellung behandelt.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddCreator(System.Drawing.Design.ToolboxItemCreatorCallback,System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Adds a new toolbox item creator for a specified data format and designer host.">Fügt eine neue Toolbox-Elementerstellung für ein angegebenes Datenformat und einen Designerhost hinzu.</summary>
      <param name="creator" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCreatorCallback&quot; /&gt; that can create a component when the toolbox item is invoked.">Ein <see cref="T:System.Drawing.Design.ToolboxItemCreatorCallback" />, der beim Aufrufen des Toolboxelements eine Komponente erstellen kann.</param>
      <param name="format" vsli:raw="The data format that the creator handles.">Das Datenformat, das die Erstellung behandelt.</param>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; that represents the designer host to associate with the creator.">Der <see cref="T:System.ComponentModel.Design.IDesignerHost" />, der den der Erstellung zuzuordnenden Designerhost darstellt.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddLinkedToolboxItem(System.Drawing.Design.ToolboxItem,System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Adds the specified project-linked toolbox item to the toolbox.">Fügt der Toolbox das angegebene mit einem Projekt verknüpfte Toolboxelement hinzu.</summary>
      <param name="toolboxItem" vsli:raw="The linked &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to add to the toolbox.">Das der Toolbox hinzuzufügende verknüpfte <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; for the current design document.">Der <see cref="T:System.ComponentModel.Design.IDesignerHost" /> für das aktuelle Entwurfsdokument.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddLinkedToolboxItem(System.Drawing.Design.ToolboxItem,System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Adds the specified project-linked toolbox item to the toolbox in the specified category.">Fügt der Toolbox das angegebene mit einem Projekt verknüpfte Toolboxelement in der angegebenen Kategorie hinzu.</summary>
      <param name="toolboxItem" vsli:raw="The linked &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to add to the toolbox.">Das der Toolbox hinzuzufügende verknüpfte <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
      <param name="category" vsli:raw="The toolbox item category to add the toolbox item to.">Die Toolboxelementkategorie, der das Toolboxelement hinzugefügt werden soll.</param>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; for the current design document.">Der <see cref="T:System.ComponentModel.Design.IDesignerHost" /> für das aktuelle Entwurfsdokument.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Adds the specified toolbox item to the toolbox.">Fügt der Toolbox das angegebene Toolboxelement hinzu.</summary>
      <param name="toolboxItem" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to add to the toolbox.">Das der Toolbox hinzuzufügende <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddToolboxItem(System.Drawing.Design.ToolboxItem,System.String)">
      <summary vsli:raw="Adds the specified toolbox item to the toolbox in the specified category.">Fügt der Toolbox das angegebene Toolboxelement in der angegebenen Kategorie hinzu.</summary>
      <param name="toolboxItem" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to add to the toolbox.">Das der Toolbox hinzuzufügende <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
      <param name="category" vsli:raw="The toolbox item category to add the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to.">Die Toolboxelementkategorie, der das <see cref="T:System.Drawing.Design.ToolboxItem" /> hinzugefügt werden soll.</param>
    </member>
    <member name="P:System.Drawing.Design.IToolboxService.CategoryNames">
      <summary vsli:raw="Gets the names of all the tool categories currently on the toolbox.">Ruft die Namen aller derzeit in der Toolbox vorhandenen Toolkategorien ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.CategoryNameCollection&quot; /&gt; containing the tool categories.">Eine <see cref="T:System.Drawing.Design.CategoryNameCollection" /> mit den Toolkategorien.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.DeserializeToolboxItem(System.Object)">
      <summary vsli:raw="Gets a toolbox item from the specified object that represents a toolbox item in serialized form.">Ruft ein Toolboxelement aus dem angegebenen Objekt ab, das ein Toolboxelement in serialisierter Form darstellt.</summary>
      <param name="serializedObject" vsli:raw="The object that contains the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to retrieve.">Das Objekt mit dem abzurufenden <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; created from the serialized object.">Das aus dem serialisierten Objekt erstellte <see cref="T:System.Drawing.Design.ToolboxItem" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.DeserializeToolboxItem(System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Gets a toolbox item from the specified object that represents a toolbox item in serialized form, using the specified designer host.">Ruft mithilfe des angegebenen Designerhosts ein Toolboxelement aus dem angegebenen Objekt ab, das ein Toolboxelement in serialisierter Form darstellt.</summary>
      <param name="serializedObject" vsli:raw="The object that contains the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to retrieve.">Das Objekt mit dem abzurufenden <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; to associate with this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Der diesem <see cref="T:System.ComponentModel.Design.IDesignerHost" /> zuzuordnende <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; created from deserialization.">Das durch Deserialisierung erstellte <see cref="T:System.Drawing.Design.ToolboxItem" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetSelectedToolboxItem">
      <summary vsli:raw="Gets the currently selected toolbox item.">Ruft das derzeit ausgewählte Toolboxelement ab.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; that is currently selected, or &lt;see langword=&quot;null&quot; /&gt; if no toolbox item has been selected.">Das derzeit ausgewählte <see cref="T:System.Drawing.Design.ToolboxItem" /> oder <see langword="null" />, wenn kein Toolboxelement ausgewählt wurde.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetSelectedToolboxItem(System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Gets the currently selected toolbox item if it is available to all designers, or if it supports the specified designer.">Ruft das derzeit ausgewählte Toolboxelement ab, wenn dieses allen Designern verfügbar ist oder den angegebenen Designer unterstützt.</summary>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; that the selected tool must be associated with for it to be returned.">Der <see cref="T:System.ComponentModel.Design.IDesignerHost" />, dem das ausgewählte Tool zugeordnet werden muss, damit es zurückgegeben werden kann.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; that is currently selected, or &lt;see langword=&quot;null&quot; /&gt; if no toolbox item is currently selected.">Das derzeit ausgewählte <see cref="T:System.Drawing.Design.ToolboxItem" /> oder <see langword="null" />, wenn momentan kein Toolboxelement ausgewählt ist.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetToolboxItems">
      <summary vsli:raw="Gets the entire collection of toolbox items from the toolbox.">Ruft die gesamte Auflistung von Toolboxelementen aus der Toolbox ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCollection&quot; /&gt; that contains the current toolbox items.">Eine <see cref="T:System.Drawing.Design.ToolboxItemCollection" />, die die aktuellen Toolboxelemente enthält.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetToolboxItems(System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Gets the collection of toolbox items that are associated with the specified designer host from the toolbox.">Ruft die Auflistung von Toolboxelementen ab, die dem angegebenen Designerhost der Toolbox zugeordnet sind.</summary>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; that is associated with the toolbox items to retrieve.">Der <see cref="T:System.ComponentModel.Design.IDesignerHost" />, der den abzurufenden Toolboxelementen zugeordnet ist.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCollection&quot; /&gt; that contains the current toolbox items that are associated with the specified designer host.">Eine <see cref="T:System.Drawing.Design.ToolboxItemCollection" />, die die aktuellen Toolboxelemente enthält, die dem angegebenen Designerhost zugeordnet sind.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetToolboxItems(System.String)">
      <summary vsli:raw="Gets a collection of toolbox items from the toolbox that match the specified category.">Ruft eine Auflistung von Toolboxelementen aus der Toolbox ab, die der angegebenen Kategorie entsprechen.</summary>
      <param name="category" vsli:raw="The toolbox item category to retrieve all the toolbox items from.">Die Toolboxelementkategorie, aus der alle Toolboxelemente abgerufen werden sollen.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCollection&quot; /&gt; that contains the current toolbox items that are associated with the specified category.">Eine <see cref="T:System.Drawing.Design.ToolboxItemCollection" />, die die aktuellen Toolboxelemente enthält, die der angegebenen Kategorie zugeordnet sind.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetToolboxItems(System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Gets the collection of toolbox items that are associated with the specified designer host and category from the toolbox.">Ruft die Auflistung von Toolboxelementen, die dem angegebenen Designerhost und der angegebenen Kategorie zugeordnet sind, aus der Toolbox ab.</summary>
      <param name="category" vsli:raw="The toolbox item category to retrieve the toolbox items from.">Die Toolboxelementkategorie, aus der die Toolboxelemente abgerufen werden sollen.</param>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; that is associated with the toolbox items to retrieve.">Der <see cref="T:System.ComponentModel.Design.IDesignerHost" />, der den abzurufenden Toolboxelementen zugeordnet ist.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCollection&quot; /&gt; that contains the current toolbox items that are associated with the specified category and designer host.">Eine <see cref="T:System.Drawing.Design.ToolboxItemCollection" />, die die aktuellen Toolboxelemente enthält, die der angegebenen Kategorie und dem Designerhost zugeordnet sind.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.IsSupported(System.Object,System.Collections.ICollection)">
      <summary vsli:raw="Gets a value indicating whether the specified object which represents a serialized toolbox item matches the specified attributes.">Ruft einen Wert ab, der angibt, ob das angegebene Objekt, das ein serialisiertes Toolboxelement darstellt, den angegebenen Attributen entspricht.</summary>
      <param name="serializedObject" vsli:raw="The object that contains the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to retrieve.">Das Objekt mit dem abzurufenden <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
      <param name="filterAttributes" vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; that contains the attributes to test the serialized object for.">Eine <see cref="T:System.Collections.ICollection" />, die die Attribute enthält, auf die das serialisierte Objekt überprüft werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object matches the specified attributes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das Objekt den angegebenen Attributen entspricht, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.IsSupported(System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Gets a value indicating whether the specified object which represents a serialized toolbox item can be used by the specified designer host.">Ruft einen Wert ab, der angibt, ob das angegebene Objekt, das ein serialisiertes Toolboxelement darstellt, vom angegebenen Designerhost verwendet werden kann.</summary>
      <param name="serializedObject" vsli:raw="The object that contains the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to retrieve.">Das Objekt mit dem abzurufenden <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; to test for support for the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Der <see cref="T:System.ComponentModel.Design.IDesignerHost" />, der daraufhin überprüft werden soll, ob er das <see cref="T:System.Drawing.Design.ToolboxItem" /> unterstützt.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified object is compatible with the specified designer host; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das angegebene Objekt mit dem angegebenen Designerhost kompatibel ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.IsToolboxItem(System.Object)">
      <summary vsli:raw="Gets a value indicating whether the specified object is a serialized toolbox item.">Ruft einen Wert ab, der angibt, ob das angegebene Objekt ein serialisiertes Toolboxelement ist.</summary>
      <param name="serializedObject" vsli:raw="The object to inspect.">Das zu untersuchende Objekt.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object contains a toolbox item object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das Objekt ein Toolboxelementobjekt enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.IsToolboxItem(System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Gets a value indicating whether the specified object is a serialized toolbox item, using the specified designer host.">Ruft mithilfe des angegebenen Designerhosts einen Wert ab, der angibt, ob das angegebene Objekt ein serialisiertes Toolboxelement ist.</summary>
      <param name="serializedObject" vsli:raw="The object to inspect.">Das zu untersuchende Objekt.</param>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; that is making this request.">Der <see cref="T:System.ComponentModel.Design.IDesignerHost" />, der die Anforderung gesendet hat.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object contains a toolbox item object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das Objekt ein Toolboxelementobjekt enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.Refresh">
      <summary vsli:raw="Refreshes the state of the toolbox items.">Aktualisiert den Zustand der Toolboxelemente.</summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.RemoveCreator(System.String)">
      <summary vsli:raw="Removes a previously added toolbox item creator of the specified data format.">Entfernt eine zuvor hinzugefügte Toolbox-Elementerstellung des angegebenen Datenformats.</summary>
      <param name="format" vsli:raw="The data format of the creator to remove.">Das Datenformat der zu entfernenden Erstellung.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.RemoveCreator(System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Removes a previously added toolbox creator that is associated with the specified data format and the specified designer host.">Entfernt eine zuvor hinzugefügte Toolboxerstellung, die dem angegebenen Datenformat und dem angegebenen Designerhost zugeordnet ist.</summary>
      <param name="format" vsli:raw="The data format of the creator to remove.">Das Datenformat der zu entfernenden Erstellung.</param>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; that is associated with the creator to remove.">Der <see cref="T:System.ComponentModel.Design.IDesignerHost" />, der der zu entfernenden Erstellung zugeordnet ist.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.RemoveToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Removes the specified toolbox item from the toolbox.">Entfernt das angegebene Toolboxelement aus der Toolbox.</summary>
      <param name="toolboxItem" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to remove from the toolbox.">Das <see cref="T:System.Drawing.Design.ToolboxItem" />, das aus der Toolbox entfernt werden soll.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.RemoveToolboxItem(System.Drawing.Design.ToolboxItem,System.String)">
      <summary vsli:raw="Removes the specified toolbox item from the toolbox.">Entfernt das angegebene Toolboxelement aus der Toolbox.</summary>
      <param name="toolboxItem" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to remove from the toolbox.">Das <see cref="T:System.Drawing.Design.ToolboxItem" />, das aus der Toolbox entfernt werden soll.</param>
      <param name="category" vsli:raw="The toolbox item category to remove the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; from.">Die Toolboxelementkategorie, aus der das <see cref="T:System.Drawing.Design.ToolboxItem" /> entfernt werden soll.</param>
    </member>
    <member name="P:System.Drawing.Design.IToolboxService.SelectedCategory">
      <summary vsli:raw="Gets or sets the name of the currently selected tool category from the toolbox.">Ruft den Namen der derzeit ausgewählten Toolkategorie der Toolbox ab oder legt diesen fest.</summary>
      <returns vsli:raw="The name of the currently selected category.">Der Name der aktuell ausgewählten Kategorie.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.SelectedToolboxItemUsed">
      <summary vsli:raw="Notifies the toolbox service that the selected tool has been used.">Benachrichtigt den Toolboxdienst davon, dass das ausgewählte Tool verwendet wurde.</summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.SerializeToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Gets a serializable object that represents the specified toolbox item.">Ruft ein serialisierbares Objekt ab, das das angegebene Toolboxelement darstellt.</summary>
      <param name="toolboxItem" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to serialize.">Das <see cref="T:System.Drawing.Design.ToolboxItem" />, das serialisiert werden soll.</param>
      <returns vsli:raw="An object that represents the specified &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Ein Objekt, das das angegebene <see cref="T:System.Drawing.Design.ToolboxItem" /> darstellt.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.SetCursor">
      <summary vsli:raw="Sets the current application's cursor to a cursor that represents the currently selected tool.">Ändert den Cursor der aktuellen Anwendung in einen Cursor, der das momentan ausgewählte Tool darstellt.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the cursor is set by the currently selected tool, &lt;see langword=&quot;false&quot; /&gt; if there is no tool selected and the cursor is set to the standard windows cursor.">
        <see langword="true" />, wenn der Cursor vom derzeit ausgewählten Tool festgelegt wird, <see langword="false" />, wenn kein Tool ausgewählt wurde und der Cursor auf einen Windows-Standardcursor festgelegt ist.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.SetSelectedToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Selects the specified toolbox item.">Wählt das angegebene Toolboxelement aus.</summary>
      <param name="toolboxItem" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to select.">Das auszuwählende <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
    </member>
    <member name="T:System.Drawing.Design.IToolboxUser">
      <summary vsli:raw="Defines an interface for setting the currently selected toolbox item and indicating whether a designer supports a particular toolbox item.">Definiert eine Schnittstelle, um das derzeit ausgewählte Toolboxelement festzulegen und anzugeben, ob ein Designer ein bestimmtes Toolboxelement unterstützt.</summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Gets a value indicating whether the specified tool is supported by the current designer.">Ruft einen Wert ab, der angibt, ob das angegebene Tool vom aktuellen Designer unterstützt wird.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to be tested for toolbox support.">Das <see cref="T:System.Drawing.Design.ToolboxItem" />, das auf Toolboxunterstützung getestet werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the tool is supported by the toolbox and can be enabled; &lt;see langword=&quot;false&quot; /&gt; if the document designer does not know how to use the tool.">
        <see langword="true" />, wenn das Tool von der Toolbox unterstützt wird und aktiviert werden kann. <see langword="false" />, wenn der Dokument-Designer das Tool nicht unterstützt.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Selects the specified tool.">Wählt das angegebene Tool aus.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to select.">Das auszuwählende <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
    </member>
    <member name="T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Drawing.Design.ToolboxItem.ComponentsCreated&quot; /&gt; event that occurs when components are added to the toolbox.">Stellt Daten für das <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreated" />-Ereignis bereit, das eintritt, wenn der Toolbox Komponenten hinzugefügt werden.</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxComponentsCreatedEventArgs.#ctor(System.ComponentModel.IComponent[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs" />-Klasse.</summary>
      <param name="components" vsli:raw="The components to include in the toolbox.">Die Komponenten, die in die Toolbox aufgenommen werden sollen.</param>
    </member>
    <member name="P:System.Drawing.Design.ToolboxComponentsCreatedEventArgs.Components">
      <summary vsli:raw="Gets or sets an array containing the components to add to the toolbox.">Ruft ein Array mit den Komponenten ab, die der Toolbox hinzugefügt werden sollen, oder legt dieses fest.</summary>
      <returns vsli:raw="An array of type &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; indicating the components to add to the toolbox.">Ein Array vom Typ <see cref="T:System.ComponentModel.IComponent" />, das die Komponenten angibt, die der Toolbox hinzugefügt werden sollen.</returns>
    </member>
    <member name="T:System.Drawing.Design.ToolboxComponentsCreatedEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Drawing.Design.ToolboxItem.ComponentsCreated&quot; /&gt; event.">Stellt die Methode dar, die das <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreated" />-Ereignis behandelt.</summary>
      <param name="sender" vsli:raw="The source of the event.">Die Quelle des Ereignisses.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs&quot; /&gt; that provides data for the event.">Ein <see cref="T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs" />, das Daten für das Ereignis bereitstellt.</param>
    </member>
    <member name="T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Drawing.Design.ToolboxItem.ComponentsCreating&quot; /&gt; event that occurs when components are added to the toolbox.">Stellt Daten für das <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreating" />-Ereignis bereit, das eintritt, wenn der Toolbox Komponenten hinzugefügt werden.</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxComponentsCreatingEventArgs.#ctor(System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs" />-Klasse.</summary>
      <param name="host" vsli:raw="The designer host that is making the request.">Der Designerhost, der die Anforderung ausgibt.</param>
    </member>
    <member name="P:System.Drawing.Design.ToolboxComponentsCreatingEventArgs.DesignerHost">
      <summary vsli:raw="Gets or sets an instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; that made the request to create toolbox components.">Ruft eine Instanz des <see cref="T:System.ComponentModel.Design.IDesignerHost" /> ab, der die Anforderung zum Erstellen von Toolboxkomponenten ausgegeben hat, oder legt diese fest.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; that made the request to create toolbox components, or &lt;see langword=&quot;null&quot; /&gt; if no designer host was provided to the toolbox item.">Der <see cref="T:System.ComponentModel.Design.IDesignerHost" />, der die Anforderung zum Erstellen von Toolboxkomponenten ausgegeben hat, oder <see langword="null" />, wenn für das Toolboxelement kein Designerhost bereitgestellt wurde.</returns>
    </member>
    <member name="T:System.Drawing.Design.ToolboxComponentsCreatingEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Drawing.Design.ToolboxItem.ComponentsCreating&quot; /&gt; event.">Stellt die Methode dar, die das <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreating" />-Ereignis behandelt.</summary>
      <param name="sender" vsli:raw="The source of the event.">Die Quelle des Ereignisses.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs&quot; /&gt; that provides data for the event.">Ein <see cref="T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs" />, das Daten für das Ereignis bereitstellt.</param>
    </member>
    <member name="T:System.Drawing.Design.ToolboxItem">
      <summary vsli:raw="Provides a base implementation of a toolbox item.">Stellt eine Basisimplementierung für ein Toolboxelement bereit.</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Drawing.Design.ToolboxItem" />-Klasse.</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; class that creates the specified type of component.">Initialisiert eine neue Instanz der <see cref="T:System.Drawing.Design.ToolboxItem" />-Klasse, die den angegebenen Komponententyp erstellt.</summary>
      <param name="toolType" vsli:raw="The type of &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; that the toolbox item creates.">Der Typ der <see cref="T:System.ComponentModel.IComponent" />, die das Toolboxelement erstellt.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; was locked.">Das <see cref="T:System.Drawing.Design.ToolboxItem" /> war gesperrt.</exception>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.AssemblyName">
      <summary vsli:raw="Gets or sets the name of the assembly that contains the type or types that the toolbox item creates.">Ruft den Namen der Assembly ab, die den durch das Toolboxelement erstellten Typ bzw. die erstellten Typen enthält, oder legt diesen fest.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Reflection.AssemblyName&quot; /&gt; that indicates the assembly containing the type or types to create.">Ein <see cref="T:System.Reflection.AssemblyName" />, der die Assembly angibt, die den zu erstellenden Typ bzw. die zu erstellenden Typen enthält.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Bitmap">
      <summary vsli:raw="Gets or sets a bitmap to represent the toolbox item in the toolbox.">Ruft eine Bitmap für die Darstellung des Toolboxelements in der Toolbox ab oder legt diese fest.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Bitmap&quot; /&gt; that represents the toolbox item in the toolbox.">Eine <see cref="T:System.Drawing.Bitmap" />, die das Toolboxelement in der Toolbox darstellt.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CheckUnlocked">
      <summary vsli:raw="Throws an exception if the toolbox item is currently locked.">Löst eine Ausnahme aus, wenn das Toolboxelement gegenwärtig gesperrt ist.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; is locked.">Das <see cref="T:System.Drawing.Design.ToolboxItem" /> ist gesperrt.</exception>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Company">
      <summary vsli:raw="Gets or sets the company name for this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Ruft den Firmennamen für dieses <see cref="T:System.Drawing.Design.ToolboxItem" /> ab oder legt diesen fest.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that specifies the company for this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Ein <see cref="T:System.String" />, der die Firma für dieses <see cref="T:System.Drawing.Design.ToolboxItem" /> angibt.</returns>
    </member>
    <member name="E:System.Drawing.Design.ToolboxItem.ComponentsCreated">
      <summary vsli:raw="Occurs immediately after components are created.">Tritt unmittelbar nach der Erstellung von Komponenten ein.</summary>
    </member>
    <member name="E:System.Drawing.Design.ToolboxItem.ComponentsCreating">
      <summary vsli:raw="Occurs when components are about to be created.">Tritt unmittelbar vor dem Erstellen von Komponenten ein.</summary>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.ComponentType">
      <summary vsli:raw="Gets the component type for this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Ruft den Komponententyp für dieses <see cref="T:System.Drawing.Design.ToolboxItem" /> ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that specifies the component type for this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Ein <see cref="T:System.String" />, der den Komponententyp für dieses <see cref="T:System.Drawing.Design.ToolboxItem" /> angibt.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponents">
      <summary vsli:raw="Creates the components that the toolbox item is configured to create.">Erstellt die Komponenten, für deren Erstellung das Toolboxelement konfiguriert ist.</summary>
      <returns vsli:raw="An array of created &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects.">Ein Array von erstellten <see cref="T:System.ComponentModel.IComponent" />-Objekten.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponents(System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Creates the components that the toolbox item is configured to create, using the specified designer host.">Erstellt mithilfe des angegebenen Designerhosts die Komponenten, für deren Erstellung das Toolboxelement konfiguriert ist.</summary>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; to use when creating the components.">Der beim Erstellen der Komponenten zu verwendende <see cref="T:System.ComponentModel.Design.IDesignerHost" />.</param>
      <returns vsli:raw="An array of created &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects.">Ein Array von erstellten <see cref="T:System.ComponentModel.IComponent" />-Objekten.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponents(System.ComponentModel.Design.IDesignerHost,System.Collections.IDictionary)">
      <summary vsli:raw="Creates the components that the toolbox item is configured to create, using the specified designer host and default values.">Erstellt unter Verwendung des angegebenen Designerhosts und der Standardwerte die Komponenten, für deren Erstellung das Toolboxelement konfiguriert ist.</summary>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; to use when creating the components.">Der beim Erstellen der Komponenten zu verwendende <see cref="T:System.ComponentModel.Design.IDesignerHost" />.</param>
      <param name="defaultValues" vsli:raw="A dictionary of property name/value pairs of default values with which to initialize the component.">Ein Wörterbuch mit Eigenschaftenname-Wert-Paaren der Standardwerte, mit denen die Komponente initialisiert werden soll.</param>
      <returns vsli:raw="An array of created &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects.">Ein Array von erstellten <see cref="T:System.ComponentModel.IComponent" />-Objekten.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponentsCore(System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Creates a component or an array of components when the toolbox item is invoked.">Erstellt beim Aufrufen des Toolboxelements eine Komponente oder ein Array von Komponenten.</summary>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; to host the toolbox item.">Der <see cref="T:System.ComponentModel.Design.IDesignerHost" />, in dem das Toolboxelement bereitgestellt wird.</param>
      <returns vsli:raw="An array of created &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects.">Ein Array von erstellten <see cref="T:System.ComponentModel.IComponent" />-Objekten.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponentsCore(System.ComponentModel.Design.IDesignerHost,System.Collections.IDictionary)">
      <summary vsli:raw="Creates an array of components when the toolbox item is invoked.">Erstellt beim Aufrufen des Toolboxelements ein Array von Komponenten.</summary>
      <param name="host" vsli:raw="The designer host to use when creating components.">Der Designerhost, der beim Erstellen von Komponenten verwendet werden soll.</param>
      <param name="defaultValues" vsli:raw="A dictionary of property name/value pairs of default values with which to initialize the component.">Ein Wörterbuch mit Eigenschaftenname-Wert-Paaren der Standardwerte, mit denen die Komponente initialisiert werden soll.</param>
      <returns vsli:raw="An array of created &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects.">Ein Array von erstellten <see cref="T:System.ComponentModel.IComponent" />-Objekten.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.DependentAssemblies">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Reflection.AssemblyName&quot; /&gt; for the toolbox item.">Ruft den <see cref="T:System.Reflection.AssemblyName" /> für das Toolboxelement ab oder legt diesen fest.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Reflection.AssemblyName&quot; /&gt; objects.">Ein Array von <see cref="T:System.Reflection.AssemblyName" />-Objekten.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Description">
      <summary vsli:raw="Gets or sets the description for this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Ruft die Beschreibung für dieses <see cref="T:System.Drawing.Design.ToolboxItem" /> ab oder legt diese fest.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that specifies the description for this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Ein <see cref="T:System.String" />, der die Beschreibung für dieses <see cref="T:System.Drawing.Design.ToolboxItem" /> angibt.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Deserialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Loads the state of the toolbox item from the specified serialization information object.">Lädt den Zustand des Toolboxelements aus dem angegebenen Serialisierungsinformationsobjekt.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to load from.">Die <see cref="T:System.Runtime.Serialization.SerializationInfo" />, aus der geladen wird.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that indicates the stream characteristics.">Ein <see cref="T:System.Runtime.Serialization.StreamingContext" />, der die Merkmale des Streams angibt.</param>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.DisplayName">
      <summary vsli:raw="Gets or sets the display name for the toolbox item.">Ruft den Anzeigenamen für das Toolboxelement ab oder legt diesen fest.</summary>
      <returns vsli:raw="The display name for the toolbox item.">Der Anzeigename für das Toolboxelement.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Equals(System.Object)">
      <summary vsli:raw="Determines whether two &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; instances are equal.">Stellt fest, ob zwei <see cref="T:System.Drawing.Design.ToolboxItem" />-Instanzen gleich sind.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to compare with the current &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Das <see cref="T:System.Drawing.Design.ToolboxItem" />, das mit dem aktuellen <see cref="T:System.Drawing.Design.ToolboxItem" /> verglichen werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das angegebene <see cref="T:System.Drawing.Design.ToolboxItem" /> gleich der aktuellen <see cref="T:System.Drawing.Design.ToolboxItem" /> ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Filter">
      <summary vsli:raw="Gets or sets the filter that determines whether the toolbox item can be used on a destination component.">Ruft den Filter ab, der bestimmt, ob das Toolboxelement für eine Zielkomponente verwendet werden kann, oder legt diesen fest.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; of &lt;see cref=&quot;T:System.ComponentModel.ToolboxItemFilterAttribute&quot; /&gt; objects.">Eine <see cref="T:System.Collections.ICollection" /> von <see cref="T:System.ComponentModel.ToolboxItemFilterAttribute" />-Objekten.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.FilterPropertyValue(System.String,System.Object)">
      <summary vsli:raw="Filters a property value before returning it.">Filtert einen Eigenschaftswert, bevor dieser zurückgegeben wird.</summary>
      <param name="propertyName" vsli:raw="The name of the property to filter.">Der Name der zu filternden Eigenschaft.</param>
      <param name="value" vsli:raw="The value against which to filter the property.">Der Wert, anhand dessen die Eigenschaft gefiltert werden soll.</param>
      <returns vsli:raw="A filtered property value.">Ein gefilterter Eigenschaftswert.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Ein Hashcode für die aktuelle <see cref="T:System.Drawing.Design.ToolboxItem" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.GetType(System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Enables access to the type associated with the toolbox item.">Ermöglicht den Zugriff auf den dem Toolboxelement zugeordneten Typ.</summary>
      <param name="host" vsli:raw="The designer host to query for &lt;see cref=&quot;T:System.ComponentModel.Design.ITypeResolutionService&quot; /&gt;.">Der Designerhost, der nach <see cref="T:System.ComponentModel.Design.ITypeResolutionService" />abgefragt werden soll.</param>
      <returns vsli:raw="The type associated with the toolbox item.">Der dem Toolboxelement zugeordnete Typ.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.GetType(System.ComponentModel.Design.IDesignerHost,System.Reflection.AssemblyName,System.String,System.Boolean)">
      <summary vsli:raw="Creates an instance of the specified type, optionally using a specified designer host and assembly name.">Erstellt eine Instanz des angegebenen Typs unter optionaler Verwendung eines angegebenen Designerhosts und Assemblynamens.</summary>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; for the current document. This can be &lt;see langword=&quot;null&quot; /&gt;.">Der <see cref="T:System.ComponentModel.Design.IDesignerHost" /> für das aktuelle Dokument. Dieser Wert kann <see langword="null" /> sein.</param>
      <param name="assemblyName" vsli:raw="An &lt;see cref=&quot;T:System.Reflection.AssemblyName&quot; /&gt; that indicates the assembly that contains the type to load. This can be &lt;see langword=&quot;null&quot; /&gt;.">Ein <see cref="T:System.Reflection.AssemblyName" />, der die Assembly angibt, die den zu ladenden Typ enthält. Dieser Wert kann <see langword="null" /> sein.</param>
      <param name="typeName" vsli:raw="The name of the type to create an instance of.">Der Name des Typs, von dem eine Instanz erstellt werden soll.</param>
      <param name="reference" vsli:raw="A value indicating whether or not to add a reference to the assembly that contains the specified type to the designer host's set of references.">Ein Wert, der angibt, ob der Gruppe von Verweisen des Designerhosts ein Verweis auf die Assembly hinzugefügt werden soll, die den angegebenen Typ enthält.</param>
      <returns vsli:raw="An instance of the specified type, if it can be located.">Eine Instanz des angegebenen Typs, falls eine solche gefunden werden kann.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;typeName&quot; /&gt; is not specified.">
        <paramref name="typeName" /> wurde nicht angegeben.</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Initialize(System.Type)">
      <summary vsli:raw="Initializes the current toolbox item with the specified type to create.">Initialisiert das aktuelle Toolboxelement mit dem angegebenen zu erstellenden Typ.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that the toolbox item creates.">Der <see cref="T:System.Type" />, den das Toolboxelement erstellt.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; was locked.">Das <see cref="T:System.Drawing.Design.ToolboxItem" /> war gesperrt.</exception>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.IsTransient">
      <summary vsli:raw="Gets a value indicating whether the toolbox item is transient.">Ruft einen Wert ab, der angibt, ob das Toolboxelement flüchtig ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if this toolbox item should not be stored in any toolbox database when an application that is providing a toolbox closes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn dieses Toolboxelement beim Beenden einer Anwendung, die eine Toolbox bereitstellt, in keiner Toolboxdatenbank gespeichert werden soll, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Lock">
      <summary vsli:raw="Locks the toolbox item and prevents changes to its properties.">Sperrt das Toolboxelement und verhindert Änderungen an den Eigenschaften.</summary>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Locked">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; is currently locked.">Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Drawing.Design.ToolboxItem" /> derzeit gesperrt ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the toolbox item is locked; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das Toolboxelement gesperrt ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.OnComponentsCreated(System.Drawing.Design.ToolboxComponentsCreatedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Drawing.Design.ToolboxItem.ComponentsCreated&quot; /&gt; event.">Löst das <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreated" />-Ereignis aus.</summary>
      <param name="args" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs&quot; /&gt; that provides data for the event.">Ein <see cref="T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs" />, das Daten für das Ereignis bereitstellt.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.OnComponentsCreating(System.Drawing.Design.ToolboxComponentsCreatingEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Drawing.Design.ToolboxItem.ComponentsCreating&quot; /&gt; event.">Löst das <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreating" />-Ereignis aus.</summary>
      <param name="args" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs&quot; /&gt; that provides data for the event.">Ein <see cref="T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs" />, das Daten für das Ereignis bereitstellt.</param>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.OriginalBitmap">
      <summary vsli:raw="Gets or sets the original bitmap that will be used in the toolbox for this item.">Ruft die ursprüngliche Bitmap ab, die in der Toolbox für dieses Element verwendet wird, oder legt diese fest.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Bitmap&quot; /&gt; that represents the toolbox item in the toolbox.">Eine <see cref="T:System.Drawing.Bitmap" />, die das Toolboxelement in der Toolbox darstellt.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Properties">
      <summary vsli:raw="Gets a dictionary of properties.">Ruft ein Wörterbuch von Eigenschaften ab.</summary>
      <returns vsli:raw="A dictionary of name/value pairs (the names are property names and the values are property values).">Ein Wörterbuch von Name-Wert-Paaren (die Namen sind Eigenschaftennamen, und die Werte sind Eigenschaftswerte).</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Serialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Saves the state of the toolbox item to the specified serialization information object.">Speichert den Zustand des Toolboxelements in dem angegebenen Serialisierungsinformationsobjekt.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to save to.">Der <see cref="T:System.Runtime.Serialization.SerializationInfo" /> für den Speichervorgang.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that indicates the stream characteristics.">Ein <see cref="T:System.Runtime.Serialization.StreamingContext" />, der die Merkmale des Streams angibt.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)&quot; /&gt; method.">Eine Beschreibung dieses Members finden Sie unter der <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />-Methode.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to populate with data.">Die mit Daten zu füllende <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context" vsli:raw="The destination (see &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;) for this serialization.">Das Ziel (siehe <see cref="T:System.Runtime.Serialization.StreamingContext" />) dieser Serialisierung.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.ToString">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the current &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Gibt eine <see cref="T:System.String" /> zurück, die das aktuelle <see cref="T:System.Drawing.Design.ToolboxItem" /> darstellt.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the current &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Ein <see cref="T:System.String" />, der den aktuellen <see cref="T:System.Drawing.Design.ToolboxItem" /> darstellt.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.TypeName">
      <summary vsli:raw="Gets or sets the fully qualified name of the type of &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; that the toolbox item creates when invoked.">Ruft den voll gekennzeichneten Namen des Typs der <see cref="T:System.ComponentModel.IComponent" /> ab, die das Toolboxelement beim Aufrufen erstellt, oder legt diesen fest.</summary>
      <returns vsli:raw="The fully qualified type name of the type of component that this toolbox item creates.">Der voll gekennzeichnete Typname des Komponententyps, den dieses Toolboxelement erstellt.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.ValidatePropertyType(System.String,System.Object,System.Type,System.Boolean)">
      <summary vsli:raw="Validates that an object is of a given type.">Überprüft, ob ein Objekt einen angegebenen Typ besitzt.</summary>
      <param name="propertyName" vsli:raw="The name of the property to validate.">Der Name der zu überprüfenden Eigenschaft.</param>
      <param name="value" vsli:raw="Optional value against which to validate.">Optionaler Wert, auf den überprüft werden soll.</param>
      <param name="expectedType" vsli:raw="The expected type of the property.">Der erwartete Typ der Eigenschaft.</param>
      <param name="allowNull" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to allow &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um <see langword="null" /> zuzulassen, andernfalls <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, and &lt;paramref name=&quot;allowNull&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="value" /> ist <see langword="null" />, und <paramref name="allowNull" /> ist <see langword="false" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is not the type specified by &lt;paramref name=&quot;expectedType&quot; /&gt;.">
        <paramref name="value" /> ist nicht der von <paramref name="expectedType" /> angegebene Typ.</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.ValidatePropertyValue(System.String,System.Object)">
      <summary vsli:raw="Validates a property before it is assigned to the property dictionary.">Überprüft eine Eigenschaft, bevor sie dem Eigenschaftenwörterbuch zugewiesen wird.</summary>
      <param name="propertyName" vsli:raw="The name of the property to validate.">Der Name der zu überprüfenden Eigenschaft.</param>
      <param name="value" vsli:raw="The value against which to validate.">Der Wert, auf den überprüft werden soll.</param>
      <returns vsli:raw="The value used to perform validation.">Der Wert, der zum Ausführen der Validierung verwendet wird.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, and &lt;paramref name=&quot;propertyName&quot; /&gt; is &quot;IsTransient&quot;.">
        <paramref name="value" /> ist <see langword="null" />, und <paramref name="propertyName" /> ist "IsTransient".</exception>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Version">
      <summary vsli:raw="Gets the version for this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Ruft die Version für dieses <see cref="T:System.Drawing.Design.ToolboxItem" /> ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that specifies the version for this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Ein <see cref="T:System.String" />, der die Version für dieses <see cref="T:System.Drawing.Design.ToolboxItem" /> angibt.</returns>
    </member>
    <member name="T:System.Drawing.Design.ToolboxItemCollection">
      <summary vsli:raw="Represents a collection of toolbox items.">Stellt eine Auflistung von Toolboxelementen dar.</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.#ctor(System.Drawing.Design.ToolboxItem[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCollection&quot; /&gt; class using the specified array of toolbox items.">Initialisiert eine neue Instanz der <see cref="T:System.Drawing.Design.ToolboxItemCollection" />-Klasse unter Verwendung des angegebenen Arrays von Toolboxelementen.</summary>
      <param name="value" vsli:raw="An array of type &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; containing the toolbox items to fill the collection with.">Ein Array vom Typ <see cref="T:System.Drawing.Design.ToolboxItem" />, das die Toolboxelemente für das Auffüllen der Auflistung enthält.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.#ctor(System.Drawing.Design.ToolboxItemCollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCollection&quot; /&gt; class using the specified collection.">Initialisiert eine neue Instanz der <see cref="T:System.Drawing.Design.ToolboxItemCollection" />-Klasse unter Verwendung der angegebenen Auflistung.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCollection&quot; /&gt; to fill the new collection with.">Eine <see cref="T:System.Drawing.Design.ToolboxItemCollection" />, mit der die neue Auflistung aufgefüllt werden soll.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.Contains(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Indicates whether the collection contains the specified &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Gibt an, ob die Auflistung die angegebene <see cref="T:System.Drawing.Design.ToolboxItem" /> enthält.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to search the collection for.">Ein <see cref="T:System.Drawing.Design.ToolboxItem" />, nach dem die Auflistung durchsucht werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains the specified object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Auflistung das angegebene Objekt enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.CopyTo(System.Drawing.Design.ToolboxItem[],System.Int32)">
      <summary vsli:raw="Copies the collection to the specified array beginning with the specified destination index.">Kopiert die Auflistung in das angegebene Array, beginnend am angegebenen Zielindex.</summary>
      <param name="array" vsli:raw="The array to copy to.">Das Array, in das kopiert werden soll.</param>
      <param name="index" vsli:raw="The index to begin copying to.">Der Index, ab dem kopiert werden soll.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.IndexOf(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;, if it exists in the collection.">Ruft den Index des angegebenen <see cref="T:System.Drawing.Design.ToolboxItem" /> ab, sofern dieses in der Auflistung vorhanden ist.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to get the index of in the collection.">Ein <see cref="T:System.Drawing.Design.ToolboxItem" />, dessen Index in der Auflistung abgerufen werden soll.</param>
      <returns vsli:raw="The index of the specified &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Der Index des angegebenen <see cref="T:System.Drawing.Design.ToolboxItem" />.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItemCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; at the specified index.">Ruft den <see cref="T:System.Drawing.Design.ToolboxItem" /> am angegebenen Index ab.</summary>
      <param name="index" vsli:raw="The index of the object to get or set.">Der Index des abzurufenden oder festzulegenden Objekts.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; at each valid index in the collection.">Ein <see cref="T:System.Drawing.Design.ToolboxItem" /> an jedem gültigen Index in der Auflistung.</returns>
    </member>
    <member name="T:System.Drawing.Design.ToolboxItemCreatorCallback">
      <summary vsli:raw="Provides a callback mechanism that can create a &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Stellt einen Rückrufmechanismus bereit, der ein <see cref="T:System.Drawing.Design.ToolboxItem" /> erstellen kann.</summary>
      <param name="serializedObject" vsli:raw="The object which contains the data to create a &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; for.">Das Objekt, das die Daten enthält, für die ein <see cref="T:System.Drawing.Design.ToolboxItem" /> erstellt werden soll.</param>
      <param name="format" vsli:raw="The name of the clipboard data format to create a &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; for.">Der Name des Zwischenablage-Datenformats, für das ein <see cref="T:System.Drawing.Design.ToolboxItem" /> erstellt werden soll.</param>
      <returns vsli:raw="The deserialized &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; object specified by &lt;paramref name=&quot;serializedObject&quot; /&gt;.">Das von <paramref name="serializedObject" /> angegebene deserialisierte <see cref="T:System.Drawing.Design.ToolboxItem" />-Objekt.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.UCOMITypeLib">
      <summary vsli:raw="Use &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.ITypeLib&quot; /&gt; instead.">Verwenden Sie stattdessen <see cref="T:System.Runtime.InteropServices.ComTypes.ITypeLib" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)">
      <summary vsli:raw="Retrieves the library's documentation string, the complete Help file name and path, and the context identifier for the library Help topic in the Help file.">Ruft die Dokumentationszeichenfolge der Bibliothek, den vollständigen Namen und Pfad der Hilfedatei sowie den Kontextbezeichner des Hilfethemas für die Bibliothek in der Hilfedatei ab.</summary>
      <param name="index" vsli:raw="Index of the type description whose documentation is to be returned.">Index der Typenbeschreibung, deren Dokumentation zurückgegeben werden soll.</param>
      <param name="strName" vsli:raw="Returns a string that contains the name of the specified item.">Gibt eine Zeichenfolge mit dem Namen des angegebenen Elements zurück.</param>
      <param name="strDocString" vsli:raw="Returns a string that contains the documentation string for the specified item.">Gibt eine Zeichenfolge mit der Dokumentationszeichenfolge für das angegebene Element zurück.</param>
      <param name="dwHelpContext" vsli:raw="Returns the Help context identifier associated with the specified item.">Gibt den dem angegebenen Element zugeordneten Kontextbezeichner der Hilfe zurück.</param>
      <param name="strHelpFile" vsli:raw="Returns a string that contains the fully qualified name of the Help file.">Gibt eine Zeichenfolge mit dem voll gekennzeichneten Namen der Hilfedatei zurück.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.GetLibAttr(System.IntPtr@)">
      <summary vsli:raw="Retrieves the structure that contains the library's attributes.">Ruft die Struktur mit den Attributen der Bibliothek ab.</summary>
      <param name="ppTLibAttr" vsli:raw="On successful return, a structure that contains the library's attributes.">Bei erfolgreicher Rückgabe eine Struktur mit den Attributen der Bibliothek.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.GetTypeInfoCount">
      <summary vsli:raw="Returns the number of type descriptions in the type library.">Gibt die Anzahl von Typenbeschreibungen in der Typbibliothek zurück.</summary>
      <returns vsli:raw="The number of type descriptions in the type library.">Die Anzahl von Typenbeschreibungen in der Typbibliothek.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.GetTypeInfoType(System.Int32,System.Runtime.InteropServices.ComTypes.TYPEKIND@)">
      <summary vsli:raw="Retrieves the type of a type description.">Ruft den Typ einer Typenbeschreibung ab.</summary>
      <param name="index" vsli:raw="The index of the type description within the type library.">Der Index der Typbeschreibung in der Typbibliothek.</param>
      <param name="pTKind" vsli:raw="A reference to the &lt;see langword=&quot;TYPEKIND&quot; /&gt; enumeration for the type description.">Ein Verweis auf die <see langword="TYPEKIND" />-Enumeration für die Typenbeschreibung.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.IsName(System.String,System.Int32)">
      <summary vsli:raw="Indicates whether a passed-in string contains the name of a type or member described in the library.">Gibt an, ob in einer übergebenen Zeichenfolge der Name eines in der Bibliothek beschriebenen Typs oder Members enthalten ist.</summary>
      <param name="szNameBuf" vsli:raw="The string to test.">Die zu testende Zeichenfolge.</param>
      <param name="lHashVal" vsli:raw="The hash value of &lt;paramref name=&quot;szNameBuf&quot; /&gt;.">Der Hashwert von <paramref name="szNameBuf" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;szNameBuf&quot; /&gt; was found in the type library; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="szNameBuf" /> in der Typbibliothek gefunden wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.ReleaseTLibAttr(System.IntPtr)">
      <summary vsli:raw="Releases the &lt;see cref=&quot;T:System.Runtime.InteropServices.TYPELIBATTR&quot; /&gt; originally obtained from &lt;see cref=&quot;M:System.Runtime.InteropServices.UCOMITypeLib.GetLibAttr(System.IntPtr@)&quot; /&gt;.">Gibt das ursprünglich von <see cref="T:System.Runtime.InteropServices.TYPELIBATTR" /> erhaltene <see cref="M:System.Runtime.InteropServices.UCOMITypeLib.GetLibAttr(System.IntPtr@)" /> frei.</summary>
      <param name="pTLibAttr" vsli:raw="The &lt;see langword=&quot;TLIBATTR&quot; /&gt; to release.">Das freizugebende <see langword="TLIBATTR" />.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.AxImporter">
      <summary vsli:raw="Imports ActiveX controls and generates a wrapper that can be accessed by a designer.">Importiert ActiveX-Steuerelemente und generiert einen Wrapper, auf den durch einen Designer zugegriffen werden kann.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.#ctor(System.Windows.Forms.Design.AxImporter.Options)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.AxImporter&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Design.AxImporter" />-Klasse.</summary>
      <param name="options" vsli:raw="An &lt;see cref=&quot;T:System.Windows.Forms.Design.AxImporter.Options&quot; /&gt; that indicates the options for the ActiveX control importer to use.">Eine <see cref="T:System.Windows.Forms.Design.AxImporter.Options" />, die die Optionen für den zu verwendenden ActiveX Control Importer angibt.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.AxImporter.IReferenceResolver">
      <summary vsli:raw="Provides methods to resolve references to ActiveX libraries, COM type libraries or assemblies, or managed assemblies.">Stellt Methoden bereit, mit denen Verweise auf ActiveX-Bibliotheken, COM-Typbibliotheken oder Assemblys oder verwaltete Assemblys aufgelöst werden können.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveActiveXReference(System.Runtime.InteropServices.UCOMITypeLib)">
      <summary vsli:raw="Resolves a reference to the specified type library that contains an ActiveX control.">Löst einen Verweis auf die angegebene, ein ActiveX-Steuerelement enthaltende Typbibliothek auf.</summary>
      <param name="typeLib" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.InteropServices.UCOMITypeLib&quot; /&gt; to resolve a reference to.">Eine <see cref="T:System.Runtime.InteropServices.UCOMITypeLib" />, in die ein Verweis aufzulösen ist.</param>
      <returns vsli:raw="A fully qualified path to an assembly.">Ein voll gekennzeichneter Pfad einer Assembly.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveComReference(System.Reflection.AssemblyName)">
      <summary vsli:raw="Resolves a reference to the specified assembly that contains a COM component.">Löst einen Verweis auf die angegebene, eine COM-Komponente enthaltende Assembly auf.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Reflection.AssemblyName&quot; /&gt; that indicates the assembly to resolve a reference to.">Ein <see cref="T:System.Reflection.AssemblyName" />, der die Assembly angibt, in die ein Verweis aufgelöst werden soll.</param>
      <returns vsli:raw="A fully qualified path to an assembly.">Ein voll gekennzeichneter Pfad einer Assembly.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveComReference(System.Runtime.InteropServices.UCOMITypeLib)">
      <summary vsli:raw="Resolves a reference to the specified type library that contains an COM component.">Löst einen Verweis auf die angegebene, eine COM-Komponente enthaltende Typbibliothek auf.</summary>
      <param name="typeLib" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.InteropServices.UCOMITypeLib&quot; /&gt; to resolve a reference to.">Eine <see cref="T:System.Runtime.InteropServices.UCOMITypeLib" />, in die ein Verweis aufzulösen ist.</param>
      <returns vsli:raw="A fully qualified path to an assembly.">Ein voll gekennzeichneter Pfad einer Assembly.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveManagedReference(System.String)">
      <summary vsli:raw="Resolves a reference to the specified assembly.">Löst einen Verweis auf die angegebene Assembly auf.</summary>
      <param name="assemName" vsli:raw="The name of the assembly to resolve a reference to.">Der Name der Assembly, in die der Verweis aufgelöst werden soll.</param>
      <returns vsli:raw="A fully qualified path to an assembly.">Ein voll gekennzeichneter Pfad einer Assembly.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.AxImporter.Options">
      <summary vsli:raw="Represents a set of options for an &lt;see cref=&quot;T:System.Windows.Forms.Design.AxImporter&quot; /&gt;.">Stellt eine Gruppe von Optionen für einen <see cref="T:System.Windows.Forms.Design.AxImporter" /> dar.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.Options.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.AxImporter.Options&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Design.AxImporter.Options" />-Klasse.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.delaySign">
      <summary vsli:raw="Specifies whether the generated assembly is strongly named and will be signed later.">Gibt an, ob die generierte Assembly einen starken Namen hat und später signiert wird.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.genSources">
      <summary vsli:raw="Specifies whether sources for the type library wrapper should be generated.">Gibt an, ob für den Typbibliothekwrapper Quellen generiert werden sollen.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.ignoreRegisteredOcx">
      <summary vsli:raw="Specifies whether to use only input from the command line instead relying on a registered version.">Gibt an, ob nur Eingaben aus der Befehlszeile verwendet werden, anstatt sich auf eine registrierte Version zu berufen.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.keyContainer">
      <summary vsli:raw="Specifies the path to the file that contains the strong name key container for the generated assemblies.">Gibt den Pfad zu der Datei an, die den Schlüsselcontainer für einen starken Namen der generierten Assemblys enthält.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.keyFile">
      <summary vsli:raw="Specifies the path to the file that contains the strong name key for the generated assemblies.">Gibt den Pfad zu der Datei an, die den Schlüssel für einen starken Namen der generierten Assemblys enthält.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.keyPair">
      <summary vsli:raw="Specifies the strong name used for the generated assemblies.">Gibt den starken Namen an, der für die generierten Assemblys verwendet wird.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.msBuildErrors">
      <summary vsli:raw="Specifies whether errors are output in the Microsoft Build Engine (MSBuild) format.">Gibt an, ob Fehler im MSBuild (Microsoft-Build-Engine)-Format ausgegeben werden.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.noLogo">
      <summary vsli:raw="Indicates whether the ActiveX importer tool logo will be displayed when the control is imported.">Gibt an, ob das ActiveX-Importer-Toollogo beim Importieren des Steuerelements angezeigt wird.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.outputDirectory">
      <summary vsli:raw="Specifies the path to the directory that the generated assemblies will be created in.">Gibt den Pfad für das Verzeichnis an, in dem die generierten Assemblys erstellt werden sollen.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.outputName">
      <summary vsli:raw="Specifies the filename to generate the ActiveX control wrapper to.">Gibt den Namen der Datei an, in der der ActiveX-Steuerelementwrapper generiert werden soll.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.overwriteRCW">
      <summary vsli:raw="Specifies whether to overwrite existing files when generating assemblies.">Gibt an, ob vorhandene Dateien beim Generieren von Assemblys überschrieben werden sollen.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.publicKey">
      <summary vsli:raw="Specifies the public key used to sign the generated assemblies.">Gibt den öffentlichen Schlüssel an, der zum Signieren der generierten Assemblys verwendet wird.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.references">
      <summary vsli:raw="Specifies the &lt;see cref=&quot;T:System.Windows.Forms.Design.AxImporter.IReferenceResolver&quot; /&gt; to use to resolve types and references when generating assemblies.">Gibt den <see cref="T:System.Windows.Forms.Design.AxImporter.IReferenceResolver" /> an, der beim Generieren von Assemblys zum Auflösen von Typen und Verweisen verwendet werden soll.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.silentMode">
      <summary vsli:raw="Specifies whether to compile in silent mode, which generates less displayed information at compile time.">Gibt an, ob im unbeaufsichtigten Modus kompiliert werden soll. In diesem Modus werden zur Kompilierzeit weniger Informationen angezeigt.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.verboseMode">
      <summary vsli:raw="Specifies whether to compile in verbose mode, which generates more displayed information at compile time.">Gibt an, ob im ausführlichen Modus kompiliert werden soll. In diesem Modus werden zur Kompilierzeit mehr Informationen angezeigt.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.Adorner">
      <summary vsli:raw="Manages a collection of user-interface related &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects. This class cannot be inherited.">Verwaltet eine Auflistung der auf die Benutzeroberfläche bezogenen <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />-Objekte. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />-Klasse.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Adorner.BehaviorService">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt;.">Ruft den <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> ab, der dem <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> zugeordnet ist, oder legt diesen fest.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt;.">Der mit dem <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> verknüpfte <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Adorner.Enabled">
      <summary vsli:raw="Gets or sets a value indicating if the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; is enabled.">Ruft einen Wert ab, der angibt, ob <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> aktiviert ist, oder legt diesen fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> aktiviert ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Adorner.Glyphs">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; collection.">Ruft die <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />-Auflistung ab.</summary>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects.">Eine Auflistung von <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />-Objekten.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.Invalidate">
      <summary vsli:raw="Forces the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; to refresh its adorner window.">Erzwingt, dass der <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> sein Gestaltungsfenster aktualisiert.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.Invalidate(System.Drawing.Rectangle)">
      <summary vsli:raw="Forces the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; to refresh its adorner window within the given &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt;.">Erzwingt, dass der <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> sein Gestaltungsfenster innerhalb des gegebenen <see cref="T:System.Drawing.Rectangle" /> aktualisiert.</summary>
      <param name="rectangle" vsli:raw="The area to invalidate.">Der für ungültig zu erklärende Bereich.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.Invalidate(System.Drawing.Region)">
      <summary vsli:raw="Forces the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; to refresh its adorner window within the given &lt;see cref=&quot;T:System.Drawing.Region&quot; /&gt;.">Erzwingt, dass der <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> sein Gestaltungsfenster innerhalb des gegebenen <see cref="T:System.Drawing.Region" /> aktualisiert.</summary>
      <param name="region" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Region&quot; /&gt; to invalidate.">Die für ungültig zu erklärende <see cref="T:System.Drawing.Region" />.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.Behavior">
      <summary vsli:raw="Represents the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; objects that are managed by a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">Stellt die <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />-Objekte dar, die von einem <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> verwaltet werden.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.#ctor(System.Boolean,System.Windows.Forms.Design.Behavior.BehaviorService)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; class with the given &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />-Klasse mit dem angegebenen <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="callParentBehavior" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the parent behavior should be called if it exists; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das übergeordnete Verhalten bei Vorhandensein aufgerufen werden soll, andernfalls <see langword="false" />.</param>
      <param name="behaviorService" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; to use.">Der zu verwendende <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;callParentBehavior&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;, and &lt;paramref name=&quot;behaviorService&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="callParentBehavior" /> ist <see langword="true" />, und <paramref name="behaviorService" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Behavior.Cursor">
      <summary vsli:raw="Gets the cursor that should be displayed for this behavior.">Ruft den Cursor ab, der für dieses Verhalten angezeigt werden soll.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Cursor&quot; /&gt; that represents the cursor that should be displayed for this behavior.">Ein <see cref="T:System.Windows.Forms.Cursor" />, der den Cursor darstellt, der für dieses Verhalten angezeigt werden soll.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Behavior.DisableAllCommands">
      <summary vsli:raw="Gets a value indicating whether &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommand&quot; /&gt; objects should be disabled.">Ruft einen Wert ab, der angibt, ob <see cref="T:System.ComponentModel.Design.MenuCommand" />-Objekte deaktiviert werden sollen.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if all &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommand&quot; /&gt; objects the designer receives should have states set to &lt;c&gt;Enabled = false&lt;/c&gt; when this &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; is active; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, <see cref="T:System.ComponentModel.Design.MenuCommand" /><see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />Wennalle Objekte, die der Designer empfängt, die Zustände auf <c>aktiviert = false</c> festgelegt haben, wenn diese aktiv ist; andernfalls. <see langword="false" /></returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.FindCommand(System.ComponentModel.Design.CommandID)">
      <summary vsli:raw="Intercepts commands.">Fängt Befehle ab.</summary>
      <param name="commandId" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; object.">Ein <see cref="T:System.ComponentModel.Design.CommandID" />-Objekt.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommand&quot; /&gt;. By default, &lt;see cref=&quot;M:System.Windows.Forms.Design.Behavior.Behavior.FindCommand(System.ComponentModel.Design.CommandID)&quot; /&gt; returns &lt;see langword=&quot;null&quot; /&gt;.">Ein <see cref="T:System.ComponentModel.Design.MenuCommand" />. <see cref="M:System.Windows.Forms.Design.Behavior.Behavior.FindCommand(System.ComponentModel.Design.CommandID)" /> gibt standardmäßig <see langword="null" /> zurück.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragDrop(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Permits custom drag-and-drop behavior.">Lässt benutzerdefiniertes Drag &amp; Drop-Verhalten zu.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; object on which to invoke drag-and-drop behavior.">Ein <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />-Objekt, für das Drag &amp; Drop aufgerufen werden soll.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.Windows.Forms.DragEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragEnter(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Permits custom drag-enter behavior.">Lässt benutzerdefiniertes DragEnter-Verhalten zu.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; on which to invoke drag-enter behavior.">Ein <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />, für das das DragEnter-Verhalten aufgerufen werden soll.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.Windows.Forms.DragEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragLeave(System.Windows.Forms.Design.Behavior.Glyph,System.EventArgs)">
      <summary vsli:raw="Permits custom drag-leave behavior.">Lässt benutzerdefiniertes DragLeave-Verhalten zu.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; on which to invoke drag-leave behavior.">Ein <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />, für das das DragLeave-Verhalten aufgerufen werden soll.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.Windows.Forms.DragEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragOver(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Permits custom drag-over behavior.">Lässt benutzerdefiniertes DragOver-Verhalten zu.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; on which to invoke drag-over behavior.">Ein <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />, für das das DragOver-Verhalten aufgerufen werden soll.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.Windows.Forms.DragEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnGiveFeedback(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary vsli:raw="Permits custom drag-and-drop feedback behavior.">Lässt benutzerdefiniertes Drag &amp; Drop-Feedbackverhalten zu.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; on which to invoke drag-and-drop behavior.">Ein <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />-Objekt, für das Drag &amp; Drop aufgerufen werden soll.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.GiveFeedbackEventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnLoseCapture(System.Windows.Forms.Design.Behavior.Glyph,System.EventArgs)">
      <summary vsli:raw="Called by the adorner window when it loses mouse capture.">Wird vom Gestaltungsfenster aufgerufen, wenn keine Mausereignisse mehr erfasst werden.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; on which to invoke drag-and-drop behavior.">Ein <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />-Objekt, für das Drag &amp; Drop aufgerufen werden soll.</param>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)">
      <summary vsli:raw="Called when any double-click message enters the adorner window of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">Wird aufgerufen, wenn eine beliebige Doppelklick-Meldung in das Gestaltungsfenster des <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> eintritt.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Ein <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="button" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.MouseButtons&quot; /&gt; value indicating which button was clicked.">Ein <see cref="T:System.Windows.Forms.MouseButtons" />-Wert, der angibt, auf welche Schaltfläche geklickt wurde.</param>
      <param name="mouseLoc" vsli:raw="The location at which the click occurred.">Die Position, an der geklickt wurde.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Nachricht behandelt wurde; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDown(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)">
      <summary vsli:raw="Called when any mouse-down message enters the adorner window of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">Wird aufgerufen, wenn eine beliebige MouseDown-Meldung in das Gestaltungsfenster des <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> eintritt.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Ein <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="button" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.MouseButtons&quot; /&gt; value indicating which button was clicked.">Ein <see cref="T:System.Windows.Forms.MouseButtons" />-Wert, der angibt, auf welche Schaltfläche geklickt wurde.</param>
      <param name="mouseLoc" vsli:raw="The location at which the click occurred.">Die Position, an der geklickt wurde.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Nachricht behandelt wurde; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseEnter(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary vsli:raw="Called when any mouse-enter message enters the adorner window of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">Wird aufgerufen, wenn eine beliebige MouseEnter-Meldung in das Gestaltungsfenster des <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> eintritt.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Ein <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Nachricht behandelt wurde; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseHover(System.Windows.Forms.Design.Behavior.Glyph,System.Drawing.Point)">
      <summary vsli:raw="Called when any mouse-hover message enters the adorner window of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">Wird aufgerufen, wenn eine beliebige Mauszeiger-Bewegungsmeldung in das Gestaltungsfenster des <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> eintritt.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Ein <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="mouseLoc" vsli:raw="The location at which the hover occurred.">Die Position, an der die Bewegung des Mauszeigers aufgetreten ist.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Nachricht behandelt wurde; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseLeave(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary vsli:raw="Called when any mouse-leave message enters the adorner window of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">Wird aufgerufen, wenn eine beliebige MouseLeave-Meldung in das Gestaltungsfenster des <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> eintritt.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Ein <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Nachricht behandelt wurde; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseMove(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)">
      <summary vsli:raw="Called when any mouse-move message enters the adorner window of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">Wird aufgerufen, wenn eine beliebige MouseMove-Meldung in das Gestaltungsfenster des <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> eintritt.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Ein <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="button" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.MouseButtons&quot; /&gt; value indicating which button was clicked.">Ein <see cref="T:System.Windows.Forms.MouseButtons" />-Wert, der angibt, auf welche Schaltfläche geklickt wurde.</param>
      <param name="mouseLoc" vsli:raw="The location at which the move occurred.">Die Position, an der die Bewegung aufgetreten ist.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Nachricht behandelt wurde; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseUp(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons)">
      <summary vsli:raw="Called when any mouse-up message enters the adorner window of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">Wird aufgerufen, wenn eine beliebige MouseUp-Meldung in das Gestaltungsfenster des <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> eintritt.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Ein <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="button" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.MouseButtons&quot; /&gt; value indicating which button was clicked.">Ein <see cref="T:System.Windows.Forms.MouseButtons" />-Wert, der angibt, auf welche Schaltfläche geklickt wurde.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Nachricht behandelt wurde; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnQueryContinueDrag(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.QueryContinueDragEventArgs)">
      <summary vsli:raw="Sends this drag-and-drop event from the adorner window to the appropriate &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; or hit-tested &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Sendet dieses Drag &amp; Drop-Ereignis aus dem Gestaltungsfenster an das entsprechende <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> oder auf Treffer überprüfte <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Ein <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.QueryContinueDragEventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag&quot; /&gt; and &lt;see cref=&quot;E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag&quot; /&gt; events.">Stellt Daten für das <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag" />-Ereignis und das <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag" />-Ereignis bereit.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs.#ctor(System.Collections.ICollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs" />-Klasse.</summary>
      <param name="dragComponents" vsli:raw="The &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; of &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects currently being dragged.">Die <see cref="T:System.Collections.ICollection" /> von <see cref="T:System.ComponentModel.IComponent" />-Objekten, die gerade gezogen werden.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs.DragComponents">
      <summary vsli:raw="Gets the list of &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects currently being dragged.">Ruft die Liste mit <see cref="T:System.ComponentModel.IComponent" />-Objekten ab, die gerade gezogen werden.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; of &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects currently being dragged.">Die <see cref="T:System.Collections.ICollection" /> von <see cref="T:System.ComponentModel.IComponent" />-Objekten, die gerade gezogen werden.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventHandler">
      <summary vsli:raw="Represents the methods that will handle the &lt;see cref=&quot;E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag&quot; /&gt; and &lt;see cref=&quot;E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag&quot; /&gt; events of a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;. This class cannot be inherited.">Stellt die Methoden dar, die das <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag" />-Ereignis und das <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag" />-Ereignis eines <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> behandeln. Diese Klasse kann nicht vererbt werden.</summary>
      <param name="sender" vsli:raw="The source of the event.">Die Quelle des Ereignisses.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorService">
      <summary vsli:raw="Manages user interface in the designer. This class cannot be inherited.">Verwaltet die Benutzeroberfläche im Designer. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorService.Adorners">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">Ruft das <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> ab.</summary>
      <returns vsli:raw="A collection of adorner.">Auflistung von Adorner</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowGraphics">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Drawing.Graphics&quot; /&gt; for the adorner window.">Ruft die <see cref="T:System.Drawing.Graphics" /> für das Gestaltungsfenster ab.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Graphics&quot; /&gt; for the adorner window.">Die <see cref="T:System.Drawing.Graphics" /> für das Gestaltungsfenster.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowPointToScreen(System.Drawing.Point)">
      <summary vsli:raw="Translates a &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; in the adorner window to screen coordinates.">Wandelt einen <see cref="T:System.Drawing.Point" /> im Gestaltungsfenster in Bildschirmkoordinaten um.</summary>
      <param name="p" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; value to transform.">Der zu transformierende <see cref="T:System.Drawing.Point" />-Wert.</param>
      <returns vsli:raw="The transformed &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; value, in screen coordinates.">Der transformierte <see cref="T:System.Drawing.Point" />-Wert, in Bildschirmkoordinaten.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowToScreen">
      <summary vsli:raw="Gets the location of the adorner window in screen coordinates.">Ruft die Position des Gestaltungsfensters in Bildschirmkoordinaten ab.</summary>
      <returns vsli:raw="The location, from the upper-left corner of the adorner window, in screen coordinates.">Die Position der oberen linken Ecke des Gestaltungsfensters (in Bildschirmkoordinaten).</returns>
    </member>
    <member name="E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; starts a drag-and-drop operation.">Tritt ein, wenn der <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> einen Drag &amp; Drop-Vorgang startet.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.ControlRectInAdornerWindow(System.Windows.Forms.Control)">
      <summary vsli:raw="Returns the bounding &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; of a &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt;.">Gibt das umschließende <see cref="T:System.Drawing.Rectangle" /> eines <see cref="T:System.Windows.Forms.Control" /> zurück.</summary>
      <param name="c" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; to translate.">Der zu verschiebende <see cref="T:System.Windows.Forms.Control" />.</param>
      <returns vsli:raw="The bounding &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; of a &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; translated to the adorner window coordinates.">Das umschließende <see cref="T:System.Drawing.Rectangle" /> eines <see cref="T:System.Windows.Forms.Control" />, das in Gestaltungsfensterkoordinaten umgewandelt wird.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.ControlToAdornerWindow(System.Windows.Forms.Control)">
      <summary vsli:raw="Returns the location of a &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; translated to adorner window coordinates.">Gibt die Position eines <see cref="T:System.Windows.Forms.Control" /> als Gestaltungsfensterkoordinaten zurück.</summary>
      <param name="c" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; to translate.">Der zu verschiebende <see cref="T:System.Windows.Forms.Control" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; value indicating the location of &lt;paramref name=&quot;c&quot; /&gt; in adorner window coordinates.">Ein <see cref="T:System.Drawing.Point" />-Wert, der die Position von <paramref name="c" /> in Gestaltungsfensterkoordinaten angibt.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorService.CurrentBehavior">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; at the top of the behavior stack without removing it.">Ruft das <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> an der obersten Position des Verhaltensstapels ab, ohne es zu entfernen.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; at the top of the behavior stack.">Das oberste <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> im Verhaltensstapel.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">Gibt alle vom <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> verwendeten Ressourcen frei.</summary>
    </member>
    <member name="E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; completes a drag operation.">Tritt ein, wenn der <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> einen Ziehvorgang abschließt.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.GetNextBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; immediately after the given &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; in the behavior stack.">Gibt das <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> unmittelbar nach dem angegebenen <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> im Verhaltensstapel zurück.</summary>
      <param name="behavior" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; preceding the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; to be returned.">Das <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> vor dem zurückzugebenden <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; immediately after &lt;paramref name=&quot;behavior&quot; /&gt; in the behavior stack, or &lt;see langword=&quot;null&quot; /&gt; if there is no following behavior.">Das <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />, das dem <paramref name="behavior" /> im Verhaltensstapel direkt folgt, oder <see langword="null" />, wenn kein darauf folgendes Verhalten vorhanden ist.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Invalidate">
      <summary vsli:raw="Invalidates the adorner window of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">Führt dazu, dass das Gestaltungsfenster des <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> ungültig wird.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Invalidate(System.Drawing.Rectangle)">
      <summary vsli:raw="Invalidates, within the adorner window, the specified area of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">Führt dazu, dass der angegebene Bereich des <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> innerhalb des Gestaltungsfensters ungültig wird.</summary>
      <param name="rect" vsli:raw="The rectangular area to invalidate.">Der für ungültig zu erklärende rechteckige Bereich.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Invalidate(System.Drawing.Region)">
      <summary vsli:raw="Invalidates, within the adorner window, the specified area of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">Führt dazu, dass der angegebene Bereich des <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> innerhalb des Gestaltungsfensters ungültig wird.</summary>
      <param name="r" vsli:raw="The region to invalidate.">Der für ungültig zu erklärende Bereich.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.MapAdornerWindowPoint(System.IntPtr,System.Drawing.Point)">
      <summary vsli:raw="Converts a point in a handle's coordinate system to the adorner window coordinates.">Konvertiert einen Punkt im Koordinatensystem eines Handles in die Gestaltungsfensterkoordinaten.</summary>
      <param name="handle" vsli:raw="An adorner window's handle.">Ein Handle eines Gestaltungsfensters.</param>
      <param name="pt" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; in a handle's coordinate system.">Ein <see cref="T:System.Drawing.Point" /> im Koordinatensystem eines Handles.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; in the adorner window coordinates.">Ein <see cref="T:System.Drawing.Point" /> in den Gestaltungsfensterkoordinaten.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.PopBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary vsli:raw="Removes and returns the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; at the top of the stack.">Entfernt das <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> am Anfang des Stapels und gibt es zurück.</summary>
      <param name="behavior" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; to remove from the stack.">Das aus dem Stapel zu entfernende <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; that was removed from the stack.">Das <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />, das aus dem Stapel entfernt wurde.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; stack is empty.">Der <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />-Stapel ist leer.</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.PushBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary vsli:raw="Pushes a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; onto the behavior stack.">Legt ein <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> auf dem Verhaltensstapel ab.</summary>
      <param name="behavior" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; to push.">Das abzulegende <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;behavior&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="behavior" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.PushCaptureBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary vsli:raw="Pushes a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; onto the behavior stack and assigns mouse capture to the behavior.">Legt ein <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> auf dem Verhaltensstapel ab und weist dem Verhalten die Mausereignisse zu.</summary>
      <param name="behavior" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; to push.">Das abzulegende <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;behavior&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="behavior" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.ScreenToAdornerWindow(System.Drawing.Point)">
      <summary vsli:raw="Translates a point in screen coordinates into the adorner window coordinates of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">Wandelt einen Punkt in Bildschirmkoordinaten in die Gestaltungsfensterkoordinaten des <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> um.</summary>
      <param name="p" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; value to transform.">Der zu transformierende <see cref="T:System.Drawing.Point" />-Wert.</param>
      <returns vsli:raw="The transformed &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; value, in adorner window coordinates.">Der umgewandelte <see cref="T:System.Drawing.Point" />-Wert, in Gestaltungsfensterkoordinaten.</returns>
    </member>
    <member name="E:System.Windows.Forms.Design.Behavior.BehaviorService.Synchronize">
      <summary vsli:raw="Occurs when the current selection should be refreshed.">Tritt ein, wenn die aktuelle Auswahl aktualisiert werden soll.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.SyncSelection">
      <summary vsli:raw="Synchronizes all selection glyphs.">Synchronisiert alle Auswahlsymbole.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection">
      <summary vsli:raw="Stores &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; objects in a strongly typed collection.">Speichert <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />-Objekte in einer stark typisierten Auflistung.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.#ctor(System.Windows.Forms.Design.Behavior.Adorner[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; class with the given array.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />-Klasse mit dem angegebenen Array.</summary>
      <param name="value" vsli:raw="An array of type &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; to populate the collection.">Ein Array vom Typ <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> zum Auffüllen der Auflistung.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.#ctor(System.Windows.Forms.Design.Behavior.BehaviorService)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; class with the given &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; reference.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />-Klasse mit dem angegebenen <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />-Verweis.</summary>
      <param name="behaviorService" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; reference.">Ein <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />-Verweis.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.#ctor(System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; class from an existing &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />-Klasse mit einer vorhandenen <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; from which to populate the collection.">Eine <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />, mit der die Auflistung aufgefüllt werden soll.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Add(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; with the specified value to the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">Fügt der <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> einen <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> mit dem angegebenen Wert hinzu.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; to add to the end of the collection.">Ein <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />-Objekt, das am Ende der Auflistung hinzugefügt werden soll.</param>
      <returns vsli:raw="The index at which the new element was inserted.">Der Index, an dem das neue Element eingefügt wurde.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.AddRange(System.Windows.Forms.Design.Behavior.Adorner[])">
      <summary vsli:raw="Copies the elements of an array to the end of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">Kopiert die Elemente eines Arrays an das Ende der <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <param name="value" vsli:raw="An array of type &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; to copy to the end of the collection.">Ein Array vom Typ <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />, der an das Ende der Auflistung kopiert werden soll.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.AddRange(System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection)">
      <summary vsli:raw="Adds the contents of another &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; to the end of the collection.">Fügt den Inhalt einer anderen <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> am Ende der Auflistung hinzu.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; to add to the end of the collection.">Ein <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />-Objekt, das am Ende der Auflistung hinzugefügt werden soll.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Contains(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; contains the specified &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt;.">Ruft einen Wert ab, der angibt, ob die <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> den angegebenen <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> enthält.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; to locate.">Die zu suchende <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; is contained in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> in der Auflistung enthalten ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.CopyTo(System.Windows.Forms.Design.Behavior.Adorner[],System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; values to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; at the specified index.">Kopiert die <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />-Werte am angegebenen Index in ein eindimensionales <see cref="T:System.Array" />.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the values copied from &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">Die eindimensionale <see cref="T:System.Array" />-Klasse, die das Ziel der aus der <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />-Klasse kopierten Werte ist.</param>
      <param name="index" vsli:raw="The index in &lt;paramref name=&quot;array&quot; /&gt; where copying begins.">Der Index im <paramref name="array" />, bei dem mit dem Kopieren begonnen wird.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.&#xA;&#xA;-or-&#xA;&#xA;The number of elements in the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; is greater than the available space between &lt;paramref name=&quot;index&quot; /&gt; and the end of &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> ist mehrdimensional.

oder -

Die Anzahl der Elemente in der <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> ist größer als der verfügbare Platz zwischen <paramref name="index" /> und dem Ende des <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;arrayIndex&quot; /&gt; is less than the lower bound of &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="arrayIndex" /> ist kleiner als die untere <paramref name="array" />-Grenze.</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that can iterate through the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; instance.">Gibt einen Enumerator zurück, der die <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />-Instanz durchlaufen kann.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; instance.">Ein <see cref="T:System.Collections.IEnumerator" /> für die <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />-Instanz.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.IndexOf(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary vsli:raw="Returns the index of an &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; in the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">Gibt den Index einer <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> in <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> zurück.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; to locate.">Die zu suchende <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />.</param>
      <returns vsli:raw="The index of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; of &lt;paramref name=&quot;value&quot; /&gt; in the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;, if found; otherwise, -1.">Der Index des <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> von <paramref name="value" /> in der <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />, sofern dieser gefunden wird, andernfalls -1.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Insert(System.Int32,System.Windows.Forms.Design.Behavior.Adorner)">
      <summary vsli:raw="Inserts an &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; into the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; at the specified index.">Fügt ein <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> am angegebenen Index in die <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> ein.</summary>
      <param name="index" vsli:raw="The zero-based index where &lt;paramref name=&quot;value&quot; /&gt; should be inserted.">Der nullbasierte Index, an dem <paramref name="value" /> eingefügt werden soll.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; to insert.">Der einzufügende <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">Ruft das Element am angegebenen Index ab oder legt dieses fest.</summary>
      <param name="index" vsli:raw="The zero-based index of the element.">Der nullbasierte Index des Elements.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; element specified by &lt;paramref name=&quot;index&quot; /&gt;.">Das über <paramref name="index" /> angegebene <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />-Element.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Remove(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary vsli:raw="Removes a specific &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; from the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">Entfernt einen bestimmten <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> aus der <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; to remove from the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">Der <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />, der aus der <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> entfernt werden soll.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is not found in the collection.">
        <paramref name="value" /> wurde in der Sammlung nicht gefunden.</exception>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator">
      <summary vsli:raw="Supports iteration over a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">Unterstützt die Iteration über eine <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.#ctor(System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator" />-Klasse.</summary>
      <param name="mappings" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; for which to create the enumerator.">Die <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />, für die der Enumerator erstellt werden soll.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.Current">
      <summary vsli:raw="Gets the current element in the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">Ruft das aktuelle Element in der <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />-Auflistung ab.</summary>
      <returns vsli:raw="The current element in the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">Das aktuelle Element in der <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.MoveNext">
      <summary vsli:raw="Advances the enumerator to the next element of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">Setzt den Enumerator auf das nächste Element der <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the enumerator was successfully advanced to the next element; &lt;see langword=&quot;false&quot; /&gt; if the enumerator was past the end of the collection.">
        <see langword="true" />, wenn der Enumerator erfolgreich auf das nächste Element gesetzt wurde, <see langword="false" />, wenn der Enumerator das Ende der Auflistung überschritten hat.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.Reset">
      <summary vsli:raw="Sets the enumerator to its initial position, which is before the first element in the collection.">Setzt den Enumerator auf seine anfängliche Position vor dem ersten Element in der Auflistung.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.System#Collections#IEnumerator#Current">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;P:System.Collections.IEnumerator.Current&quot; /&gt; property.">Eine Beschreibung dieses Members finden Sie unter der <see cref="P:System.Collections.IEnumerator.Current" />-Eigenschaft.</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; in the collection.">Das aktuelle <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> in der Auflistung.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.ComponentGlyph">
      <summary vsli:raw="Associates a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; with its component.">Ordnet ein <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> der zugehörigen Komponente zu.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.#ctor(System.ComponentModel.IComponent)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.ComponentGlyph&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Design.Behavior.ComponentGlyph" />-Klasse.</summary>
      <param name="relatedComponent" vsli:raw="The component with which the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated.">Die Komponente, der das <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> zugeordnet ist.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.#ctor(System.ComponentModel.IComponent,System.Windows.Forms.Design.Behavior.Behavior)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.ComponentGlyph&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Design.Behavior.ComponentGlyph" />-Klasse.</summary>
      <param name="relatedComponent" vsli:raw="The component with which the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated.">Die Komponente, der das <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> zugeordnet ist.</param>
      <param name="behavior" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; with which the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated.">Das <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />, dem der <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> zugeordnet ist.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.GetHitTest(System.Drawing.Point)">
      <summary vsli:raw="Indicates whether a mouse click at the specified point should be handled by the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.ComponentGlyph&quot; /&gt;.">Gibt an, ob ein Mausklick auf den angegebenen Punkt vom <see cref="T:System.Windows.Forms.Design.Behavior.ComponentGlyph" /> behandelt werden soll.</summary>
      <param name="p" vsli:raw="A point to hit-test.">Ein auf Treffer zu überprüfender Punkt.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Cursor&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated with &lt;paramref name=&quot;p&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Ein <see cref="T:System.Windows.Forms.Cursor" />, wenn <paramref name="p" /> dem <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> zugeordnet ist; andernfalls <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.Paint(System.Windows.Forms.PaintEventArgs)">
      <summary vsli:raw="Provides paint logic.">Stellt eine Zeichnungslogik bereit.</summary>
      <param name="pe" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.PaintEventArgs&quot; /&gt; containing the &lt;see cref=&quot;P:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowGraphics&quot; /&gt; of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">Eine Instanz von <see cref="T:System.Windows.Forms.PaintEventArgs" />, die <see cref="P:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowGraphics" /> des <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> enthält.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.ComponentGlyph.RelatedComponent">
      <summary vsli:raw="Gets the component that is associated with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; .">Ruft die dem <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> zugeordnete Komponente ab.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Eine dem <see cref="T:System.ComponentModel.IComponent" /> zugeordnete <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph">
      <summary vsli:raw="Associates a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; with its control.">Ordnet ein <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> dem zugehörigen Steuerelement zu.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.#ctor(System.Drawing.Rectangle,System.Windows.Forms.Cursor,System.ComponentModel.IComponent,System.Windows.Forms.Design.Behavior.Behavior)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" />-Klasse.</summary>
      <param name="bounds" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; that represents the bounds of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Ein <see cref="T:System.Drawing.Rectangle" />, das die Begrenzung des <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> darstellt.</param>
      <param name="cursor" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Cursor&quot; /&gt; that represents the cursor to display when the mouse pointer is over the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Ein <see cref="T:System.Windows.Forms.Cursor" />, der den Cursor darstellt, der angezeigt wird, wenn sich der Mauszeiger über dem <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />-Objekt befindet.</param>
      <param name="relatedComponent" vsli:raw="The component with which the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated.">Die Komponente, der das <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> zugeordnet ist.</param>
      <param name="behavior" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; with which the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated.">Das <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />, dem der <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> zugeordnet ist.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.#ctor(System.Drawing.Rectangle,System.Windows.Forms.Cursor,System.ComponentModel.IComponent,System.Windows.Forms.Design.ControlDesigner)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" />-Klasse.</summary>
      <param name="bounds" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; that represents the bounds of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Ein <see cref="T:System.Drawing.Rectangle" />, das die Begrenzung des <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> darstellt.</param>
      <param name="cursor" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Cursor&quot; /&gt; that represents the cursor to display when the mouse pointer is over the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Ein <see cref="T:System.Windows.Forms.Cursor" />, der den Cursor darstellt, der angezeigt wird, wenn sich der Mauszeiger über dem <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />-Objekt befindet.</param>
      <param name="relatedComponent" vsli:raw="The component with which the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated.">Die Komponente, der das <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> zugeordnet ist.</param>
      <param name="designer" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt; with which the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated.">Ein <see cref="T:System.Windows.Forms.Design.ControlDesigner" />, dem der <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> zugeordnet ist.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.Bounds">
      <summary vsli:raw="Gets the bounds of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Ruft die Grenzen des <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; representing the bounds of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Ein <see cref="T:System.Drawing.Rectangle" />, das die Grenzen des <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> darstellt.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.GetHitTest(System.Drawing.Point)">
      <summary vsli:raw="Indicates whether a mouse click at the specified point should be handled by the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph&quot; /&gt;.">Gibt an, ob ein Mausklick auf den angegebenen Punkt vom <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> behandelt werden soll.</summary>
      <param name="p" vsli:raw="A point to hit test.">Ein auf Treffer zu überprüfender Punkt.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Cursor&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated with &lt;paramref name=&quot;p&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Ein <see cref="T:System.Windows.Forms.Cursor" />, wenn <paramref name="p" /> dem <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> zugeordnet ist; andernfalls <see langword="null" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.Glyph">
      <summary vsli:raw="Represents a single user interface (UI) entity managed by an &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt;.">Stellt eine einzelne von einem <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> verwaltete Benutzeroberflächenentität dar.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.#ctor(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />-Klasse.</summary>
      <param name="behavior" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;. Can be &lt;see langword=&quot;null&quot; /&gt;.">Der mit dem <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> verknüpfte <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />. Kann <see langword="null" /> sein.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Glyph.Behavior">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Ruft den <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> ab, der dem <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> zugeordnet ist.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if there is no behavior.">Das dem <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> zugeordnete <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> oder <see langword="null" />, wenn kein Verhalten vorhanden ist.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Glyph.Bounds">
      <summary vsli:raw="Gets the bounds of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Ruft die Grenzen des <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> ab.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; representing the bounds of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Ein <see cref="T:System.Drawing.Rectangle" />, das die Grenzen des <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> darstellt.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.GetHitTest(System.Drawing.Point)">
      <summary vsli:raw="Provides hit test logic.">Stellt Treffertestlogik bereit.</summary>
      <param name="p" vsli:raw="A point to hit-test.">Ein auf Treffer zu überprüfender Punkt.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Cursor&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated with &lt;paramref name=&quot;p&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Ein <see cref="T:System.Windows.Forms.Cursor" />, wenn <paramref name="p" /> dem <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> zugeordnet ist; andernfalls <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.Paint(System.Windows.Forms.PaintEventArgs)">
      <summary vsli:raw="Provides paint logic.">Stellt eine Zeichnungslogik bereit.</summary>
      <param name="pe" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.PaintEventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.Windows.Forms.PaintEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.SetBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary vsli:raw="Changes the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Ändert das dem <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> zugeordnete <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <param name="behavior" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; to associate with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Ein dem <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> zuzuordnendes <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.GlyphCollection">
      <summary vsli:raw="Stores &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects in a strongly typed collection.">Speichert <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />-Objekte in einer stark typisierten Auflistung.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.#ctor(System.Windows.Forms.Design.Behavior.Glyph[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; class with the given &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; array.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />-Klasse mit dem angegebenen <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />-Array.</summary>
      <param name="value" vsli:raw="An array of type &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; to populate the collection.">Ein Array vom Typ <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> zum Auffüllen der Auflistung.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.#ctor(System.Windows.Forms.Design.Behavior.GlyphCollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; class based on another &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt;.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />-Klasse auf Grundlage einer anderen <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; to populate the collection.">Eine <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> zum Auffüllen der Auflistung.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Add(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; with the specified value to the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt;.">Fügt der <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> ein <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> mit dem angegebenen Wert hinzu.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; to add to the end of the collection.">Ein <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />-Objekt, das am Ende der Auflistung hinzugefügt werden soll.</param>
      <returns vsli:raw="The index at which the new element was inserted.">Der Index, an dem das neue Element eingefügt wurde.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.AddRange(System.Windows.Forms.Design.Behavior.Glyph[])">
      <summary vsli:raw="Copies the elements of an array to the end of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt;.">Kopiert die Elemente eines Arrays an das Ende der <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</summary>
      <param name="value" vsli:raw="An array of type &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; to copy to the end of the collection.">Ein Array vom Typ <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />, der an das Ende der Auflistung kopiert werden soll.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.AddRange(System.Windows.Forms.Design.Behavior.GlyphCollection)">
      <summary vsli:raw="Adds the contents of another &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; to the end of the collection.">Fügt den Inhalt einer anderen <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> am Ende der Auflistung hinzu.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; to add to the end of the collection.">Ein <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />-Objekt, das am Ende der Auflistung hinzugefügt werden soll.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Contains(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; contains the specified &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Ruft einen Wert ab, der angibt, ob die <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> den angegebenen <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> enthält.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; to locate.">Die zu suchende <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is contained in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> in der Auflistung enthalten ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.CopyTo(System.Windows.Forms.Design.Behavior.Glyph[],System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; values to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; at the specified index.">Kopiert die <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />-Werte am angegebenen Index in ein eindimensionales <see cref="T:System.Array" />.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the values copied from &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt;.">Die eindimensionale <see cref="T:System.Array" />-Klasse, die das Ziel der aus der <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />-Klasse kopierten Werte ist.</param>
      <param name="index" vsli:raw="The index in &lt;paramref name=&quot;array&quot; /&gt; where copying begins.">Der Index im <paramref name="array" />, bei dem mit dem Kopieren begonnen wird.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.IndexOf(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary vsli:raw="Returns the index of a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; in the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt;.">Gibt den Index eines <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> in der <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> zurück.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; to locate.">Die zu suchende <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <returns vsli:raw="The index of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; of &lt;paramref name=&quot;value&quot; /&gt; in the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt;, if found; otherwise, -1.">Der Index des <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> von <paramref name="value" /> in der <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />, sofern dieser gefunden wird, andernfalls -1.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Insert(System.Int32,System.Windows.Forms.Design.Behavior.Glyph)">
      <summary vsli:raw="Inserts a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; into the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; at the specified index.">Fügt am angegebenen Index ein <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />-Element in die <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> ein.</summary>
      <param name="index" vsli:raw="The zero-based index where &lt;paramref name=&quot;value&quot; /&gt; should be inserted.">Der nullbasierte Index, an dem <paramref name="value" /> eingefügt werden soll.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; to insert.">Der einzufügende <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.GlyphCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">Ruft das Element am angegebenen Index ab oder legt dieses fest.</summary>
      <param name="index" vsli:raw="The zero-based index of the element.">Der nullbasierte Index des Elements.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; element at the specified index.">Das <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />-Element am angegebenen Index.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Remove(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary vsli:raw="Removes a specific &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; from the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt;.">Entfernt einen bestimmten <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> aus der <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; to remove from the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt;.">Der <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />, der aus der <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> entfernt werden soll.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType">
      <summary vsli:raw="Describes the designer selection state of a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Beschreibt den Designerauswahlzustand eines <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.GlyphSelectionType.NotSelected">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is not selected.">Das <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> ist nicht ausgewählt.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.GlyphSelectionType.Selected">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is selected.">Das <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> ist ausgewählt.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.GlyphSelectionType.SelectedPrimary">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is the primary selection.">Das <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> ist die primäre Auswahl.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.SnapLine">
      <summary vsli:raw="Represents the horizontal and vertical line segments that are dynamically created in the user interface (UI) to assist in the design-time layout of controls in a container. This class cannot be inherited.">Stellt das horizontale und das vertikale Liniensegment dar, die auf der Benutzeroberfläche dynamisch erstellt werden, um das Layout von Steuerelementen in einem Container zur Entwurfszeit zu unterstützen. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; class using the specified snapline type and offset.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />-Klasse unter Verwendung des angegebenen Ausrichtungslinientyps und des angegebenen Offsets.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLineType&quot; /&gt; to create. Describes the relative position and orientation of the snapline.">Die zu erstellende <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" />. Beschreibt die relative Position und die Ausrichtung der Ausrichtungslinie.</param>
      <param name="offset" vsli:raw="The position of the snapline, in pixels, relative to the upper-left origin of the owning control.">Die Position der Ausrichtungslinie in Pixel in Bezug auf den linken oberen Ursprung des besitzenden Steuerelements.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; class using the specified snapline type, offset, and filter name.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />-Klasse unter Verwendung des angegebenen Ausrichtungslinientyps, des angegebenen Offsets und des angegebenen Filternamens.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLineType&quot; /&gt; to create. Describes the relative position and orientation of the snapline.">Die zu erstellende <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" />. Beschreibt die relative Position und die Ausrichtung der Ausrichtungslinie.</param>
      <param name="offset" vsli:raw="The position of the snapline, in pixels, relative to the upper-left origin of the owning control.">Die Position der Ausrichtungslinie in Pixel in Bezug auf den linken oberen Ursprung des besitzenden Steuerelements.</param>
      <param name="filter" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; used to specify a programmer-defined category of snaplines.">Eine <see cref="T:System.String" />, die verwendet wird, um eine durch den Programmierer definierte Kategorie von Ausrichtungslinien anzugeben.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32,System.String,System.Windows.Forms.Design.Behavior.SnapLinePriority)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; class using the specified snapline type, offset, filter name, and priority.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />-Klasse unter Verwendung des angegebenen Ausrichtungslinientyps, des angegebenen Offsets, des angegebenen Filternamens und der angegebenen Priorität.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLineType&quot; /&gt; to create. Describes the relative position and orientation of the snapline.">Die zu erstellende <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" />. Beschreibt die relative Position und die Ausrichtung der Ausrichtungslinie.</param>
      <param name="offset" vsli:raw="The position of the snapline, in pixels, relative to the upper-left origin of the owning control.">Die Position der Ausrichtungslinie in Pixel in Bezug auf den linken oberen Ursprung des besitzenden Steuerelements.</param>
      <param name="filter" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; used to specify a programmer-defined category of snaplines.">Eine <see cref="T:System.String" />, die verwendet wird, um eine durch den Programmierer definierte Kategorie von Ausrichtungslinien anzugeben.</param>
      <param name="priority" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLinePriority&quot; /&gt; of the snapline.">Die <see cref="T:System.Windows.Forms.Design.Behavior.SnapLinePriority" /> der Ausrichtungslinie.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32,System.Windows.Forms.Design.Behavior.SnapLinePriority)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; class using the specified snapline type, offset, and priority.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />-Klasse unter Verwendung des angegebenen Ausrichtungslinientyps, des angegebenen Offsets und der angegebenen Priorität.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLineType&quot; /&gt; to create. Describes the relative position and orientation of the snapline.">Die zu erstellende <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" />. Beschreibt die relative Position und die Ausrichtung der Ausrichtungslinie.</param>
      <param name="offset" vsli:raw="The position of the snapline, in pixels, relative to the upper-left origin of the owning control.">Die Position der Ausrichtungslinie in Pixel in Bezug auf den linken oberen Ursprung des besitzenden Steuerelements.</param>
      <param name="priority" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLinePriority&quot; /&gt; of the snapline.">Die <see cref="T:System.Windows.Forms.Design.Behavior.SnapLinePriority" /> der Ausrichtungslinie.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.AdjustOffset(System.Int32)">
      <summary vsli:raw="Adjusts the &lt;see cref=&quot;P:System.Windows.Forms.Design.Behavior.SnapLine.Offset&quot; /&gt; property of the snapline.">Passt die <see cref="P:System.Windows.Forms.Design.Behavior.SnapLine.Offset" />-Eigenschaft der Ausrichtungslinie an.</summary>
      <param name="adjustment" vsli:raw="The number of pixels to change the snapline offset by.">Die Anzahl der Pixel, um die der Offset der Ausrichtungslinie geändert werden soll.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.Filter">
      <summary vsli:raw="Gets the programmer-defined filter category associated with this snapline.">Ruft die vom Programmierer definierte Filterkategorie ab, die dieser Ausrichtungslinie zugeordnet ist.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that defines the filter category. The default is &lt;see langword=&quot;null&quot; /&gt;.">Ein <see cref="T:System.String" />, der die Filterkategorie definiert. Die Standardeinstellung ist <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.IsHorizontal">
      <summary vsli:raw="Gets a value indicating whether the snapline has a horizontal orientation.">Ruft einen Wert ab, der angibt, ob die Ausrichtungslinie horizontal ausgerichtet ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the snapline is horizontal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn es sich um eine horizontale Ausrichtungslinie handelt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.IsVertical">
      <summary vsli:raw="Gets a value indicating whether the snapline has a vertical orientation.">Ruft einen Wert ab, der angibt, ob die Ausrichtungslinie vertikal ausgerichtet ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the snapline is vertical; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn es sich um eine vertikale Ausrichtungslinie handelt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.Offset">
      <summary vsli:raw="Gets the number of pixels that the snapline is offset from the origin of the associated control.">Ruft den Offset in Pixel der Ausrichtungslinie in Bezug auf den Ursprung des zugeordneten Steuerelements ab.</summary>
      <returns vsli:raw="The offset, in pixels, of the snapline.">Der Offset der Ausrichtungslinie in Pixel.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.Priority">
      <summary vsli:raw="Gets a value indicating the relative importance of the snapline.">Ruft einen Wert ab, der die relative Wichtigkeit der Ausrichtungslinie angibt.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLinePriority&quot; /&gt; that represents the priority category of a snapline.">Eine <see cref="T:System.Windows.Forms.Design.Behavior.SnapLinePriority" />, die die Prioritätskategorie einer Ausrichtungslinie darstellt.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.ShouldSnap(System.Windows.Forms.Design.Behavior.SnapLine,System.Windows.Forms.Design.Behavior.SnapLine)">
      <summary vsli:raw="Returns a value indicating whether the specified &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; should snap to another &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt;.">Gibt einen Wert zurück, der angibt, ob die angegebene <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> an einer anderen <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> ausgerichtet werden soll.</summary>
      <param name="line1" vsli:raw="The specified &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt;.">Das angegebene <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />.</param>
      <param name="line2" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; to which the specified &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; is expected to snap.">Die <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />, an der die angegebene <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> ausgerichtet werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;line1&quot; /&gt; should snap to &lt;paramref name=&quot;line2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="line1" /> an <paramref name="line2" /> ausgerichtet werden soll, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.SnapLineType">
      <summary vsli:raw="Gets the type of a snapline, which indicates the general location and orientation.">Ruft den Typ einer Ausrichtungslinie ab, der die allgemeine Position und die allgemeine Ausrichtung angibt.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLineType&quot; /&gt; that represents the orientation and general location, relative to control edges, of a snapline.">Ein <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" />, der die Ausrichtung und die allgemeine Position einer Ausrichtungslinie in Bezug auf die Ränder des Steuerelements darstellt.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.ToString">
      <summary vsli:raw="Returns a string representation of the current snapline.">Gibt eine Zeichenfolgendarstellung der aktuellen Ausrichtungslinie zurück.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the current &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt;.">Ein <see cref="T:System.String" />, der den aktuellen <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> darstellt.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.SnapLinePriority">
      <summary vsli:raw="Specifies the relative importance of a snapline.">Gibt die relative Wichtigkeit einer Ausrichtungslinie an.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.Always">
      <summary vsli:raw="The priority category that is equivalent to the highest priority of all the current snaplines. Indicates that this category of snapline should always be active.">Die Prioritätskategorie, die der höchsten Priorität aller aktuellen Ausrichtungslinien entspricht. Gibt an, dass diese Kategorie von Ausrichtungslinien immer aktiv sein sollte.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.High">
      <summary vsli:raw="The highest priority category.">Die höchste Prioritätskategorie.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.Low">
      <summary vsli:raw="The lowest priority category.">Die niedrigste Prioritätskategorie.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.Medium">
      <summary vsli:raw="The middle priority category.">Die mittlere Prioritätskategorie.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.SnapLineType">
      <summary vsli:raw="Specifies the orientation and relative location of a snapline.">Gibt die Ausrichtung und den relativen Speicherort einer Ausrichtungslinie an.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Baseline">
      <summary vsli:raw="A horizontal snapline typically associated with a primary internal feature of a control; for example, the base of the text string in a &lt;see cref=&quot;T:System.Windows.Forms.Label&quot; /&gt; control.">Eine horizontale Ausrichtungslinie, die i. d. R. einer primären internen Funktion eines Steuerelements zugeordnet wird, z. B. der Basis einer Textzeichenfolge in einem <see cref="T:System.Windows.Forms.Label" />-Steuerelement.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Bottom">
      <summary vsli:raw="A horizontal snapline typically aligned to the bottom edge of a control.">Eine horizontale Ausrichtungslinie, die i. d. R. am unteren Rand eines Steuerelements ausgerichtet ist.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Horizontal">
      <summary vsli:raw="A horizontal snapline typically not associated with an edge of a control.">Eine horizontale Ausrichtungslinie, die i. d. R. keinem Rand eines Steuerelements zugeordnet ist.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Left">
      <summary vsli:raw="A vertical snapline typically aligned to the left edge of a control.">Eine vertikale Ausrichtungslinie, die i. d. R. am linken Rand eines Steuerelements ausgerichtet ist.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Right">
      <summary vsli:raw="A vertical snapline typically aligned to the right edge of a control.">Eine vertikale Ausrichtungslinie, die i. d. R. am rechten Rand eines Steuerelements ausgerichtet ist.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Top">
      <summary vsli:raw="A horizontal snapline typically aligned to the top edge of a control.">Eine horizontale Ausrichtungslinie, die i. d. R. am oberen Rand eines Steuerelements ausgerichtet ist.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Vertical">
      <summary vsli:raw="A vertical snapline typically not associated with an edge of a control.">Eine vertikale Ausrichtungslinie, die i. d. R. keinem Rand eines Steuerelements zugeordnet ist.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ComponentActionsType" />
    <member name="F:System.Windows.Forms.Design.ComponentActionsType.All" />
    <member name="F:System.Windows.Forms.Design.ComponentActionsType.Component" />
    <member name="F:System.Windows.Forms.Design.ComponentActionsType.Service" />
    <member name="T:System.Windows.Forms.Design.ComponentDocumentDesigner">
      <summary vsli:raw="Base designer class for extending the design mode behavior of a root design document that supports nested components.">Die Basisdesignerklasse für die Erweiterung des Entwurfsmodusverhaltens eines Stammentwurfsdokuments, das geschachtelte Komponenten unterstützt.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.ComponentDocumentDesigner&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Design.ComponentDocumentDesigner" />-Klasse.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.Control">
      <summary vsli:raw="Gets the control for the designer.">Ruft das Steuerelement für den Designer ab.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; the designer is editing.">Das gegenwärtig vom Designer bearbeitete <see cref="T:System.Windows.Forms.Control" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Windows.Forms.Design.ComponentDocumentDesigner&quot; /&gt; and optionally releases the managed resources.">Gibt die von <see cref="T:System.Windows.Forms.Design.ComponentDocumentDesigner" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Gets a value indicating whether the specified tool is supported by the designer.">Ruft einen Wert ab, der angibt, ob das angegebene Tool von dem Designer unterstützt wird.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to test for toolbox support.">Das <see cref="T:System.Drawing.Design.ToolboxItem" />, das auf Toolboxunterstützung getestet werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the tool should be enabled on the toolbox; &lt;see langword=&quot;false&quot; /&gt; if the document designer doesn't know how to use the tool.">
        <see langword="true" />, wenn das Tool für die Toolbox aktiviert werden soll. <see langword="false" />, wenn der Dokument-Designer das Tool nicht unterstützt.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary vsli:raw="Initializes the designer with the specified component.">Initialisiert den Designer mit der angegebenen Komponente.</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to associate with the designer.">Die dem Designer zuzuordnende <see cref="T:System.ComponentModel.IComponent" />.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary vsli:raw="Adjusts the set of properties the component will expose through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">Passt die Gruppe von Eigenschaften an, die die Komponente mithilfe eines <see cref="T:System.ComponentModel.TypeDescriptor" /> verfügbar macht.</summary>
      <param name="properties" vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; that contains the properties for the class of the component.">Ein <see cref="T:System.Collections.IDictionary" />, das die Eigenschaften für die Komponentenklasse enthält.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#IRootDesigner#GetView(System.ComponentModel.Design.ViewTechnology)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;T:System.ComponentModel.Design.ViewTechnology&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="T:System.ComponentModel.Design.ViewTechnology" />.</summary>
      <param name="technology" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ViewTechnology&quot; /&gt; that indicates a particular view technology.">Eine <see cref="T:System.ComponentModel.Design.ViewTechnology" />, die eine bestimmte Ansichtstechnologie angibt.</param>
      <returns vsli:raw="An object that represents the view for this designer.">Ein Objekt, das die Ansicht für diesen Designer darstellt.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#IRootDesigner#SupportedTechnologies">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies" />.</summary>
      <returns vsli:raw="An array of supported &lt;see cref=&quot;T:System.ComponentModel.Design.ViewTechnology&quot; /&gt; values.">Ein Array von unterstützten <see cref="T:System.ComponentModel.Design.ViewTechnology" />-Werten.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#ITypeDescriptorFilterService#FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)&quot; /&gt;.">Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />.</summary>
      <param name="component" vsli:raw="The component to filter the attributes of.">Die Komponente, deren Attribute gefiltert werden sollen.</param>
      <param name="attributes" vsli:raw="A dictionary of attributes that can be modified.">Ein Attributwörterbuch, das geändert werden kann.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the set of filtered attributes is to be cached; &lt;see langword=&quot;false&quot; /&gt; if the filter service must query again.">
        <see langword="true" />, wenn der Satz von gefilterten Attributen zwischengespeichert werden soll; <see langword="false" />, wenn der Filterdienst eine weitere Abfrage ausführen muss.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#ITypeDescriptorFilterService#FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />.</summary>
      <param name="component" vsli:raw="The component to filter events for.">Die Komponente, deren Ereignisse gefiltert werden sollen.</param>
      <param name="events" vsli:raw="A dictionary of events that can be modified.">Ein Ereigniswörterbuch, das geändert werden kann.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the set of filtered events is to be cached; &lt;see langword=&quot;false&quot; /&gt; if the filter service must query again.">
        <see langword="true" />, wenn der Satz von gefilterten Ereignissen zwischengespeichert werden soll; <see langword="false" />, wenn der Filterdienst eine neue Abfrage ausführen muss.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#ITypeDescriptorFilterService#FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)&quot; /&gt;.">Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />.</summary>
      <param name="component" vsli:raw="The component to filter properties for.">Die Komponente, deren Eigenschaften gefiltert werden sollen.</param>
      <param name="properties" vsli:raw="A dictionary of properties that can be modified.">Ein Eigenschaftenwörterbuch, das geändert werden kann.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the set of filtered properties is to be cached; &lt;see langword=&quot;false&quot; /&gt; if the filter service must query again.">
        <see langword="true" />, wenn der Satz von gefilterten Eigenschaften zwischengespeichert werden soll; <see langword="false" />, wenn der Filterdienst eine neue Abfrage ausführen muss.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#Drawing#Design#IToolboxUser#GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)&quot; /&gt;.">Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)" />.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to be tested for toolbox support.">Das <see cref="T:System.Drawing.Design.ToolboxItem" />, das auf Toolboxunterstützung getestet werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the tool is supported by the toolbox and can be enabled; &lt;see langword=&quot;false&quot; /&gt; if the document designer does not know how to use the tool.">
        <see langword="true" />, wenn das Tool von der Toolbox unterstützt wird und aktiviert werden kann. <see langword="false" />, wenn der Dokument-Designer das Tool nicht unterstützt.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#Drawing#Design#IToolboxUser#ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)" />.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to select.">Das auszuwählende <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.TrayAutoArrange">
      <summary vsli:raw="Gets or sets a value indicating whether the component tray for the designer is in auto-arrange mode.">Ruft einen Wert ab, der angibt, ob sich die Komponentenleiste für den Designer im Modus für automatische Anordnung befindet, oder legt diesen fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the component tray for the designer is in auto-arrange mode; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn sich die Komponentenleiste für den Designer im Modus für automatische Anordnung befindet, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.TrayLargeIcon">
      <summary vsli:raw="Gets or sets a value indicating whether the component tray for the designer is in large icon mode.">Ruft einen Wert ab, der angibt, ob sich die Komponentenleiste für den Designer im Modus für große Symbole befindet, oder legt diesen fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the component tray for the designer is in large icon mode; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn sich die Komponentenleiste für den Designer im Modus für große Symbole befindet, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ComponentTray">
      <summary vsli:raw="Provides behavior for the component tray of a designer.">Stellt Verhalten für die Komponentenleiste eines Designers bereit.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.#ctor(System.ComponentModel.Design.IDesigner,System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.ComponentTray&quot; /&gt; class using the specified designer and service provider.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Design.ComponentTray" />-Klasse mit dem angegebenen Designer und Dienstanbieter.</summary>
      <param name="mainDesigner" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesigner&quot; /&gt; that is the main or document designer for the current project.">Der <see cref="T:System.ComponentModel.Design.IDesigner" />, der der Haupt- oder Dokument-Designer für das aktuelle Projekt ist.</param>
      <param name="serviceProvider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; that can be used to obtain design-time services.">Ein <see cref="T:System.IServiceProvider" />, mit dem Entwurfszeitdienste abgerufen werden können.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.AddComponent(System.ComponentModel.IComponent)">
      <summary vsli:raw="Adds a component to the tray.">Fügt der Komponentenleiste eine Komponente hinzu.</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to add to the tray.">Die <see cref="T:System.ComponentModel.IComponent" />, die der Komponentenleiste hinzugefügt werden soll.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentTray.AutoArrange">
      <summary vsli:raw="Gets or sets a value indicating whether the tray items are automatically aligned.">Ruft einen Wert ab, der angibt, ob die Komponentenleistenelemente automatisch ausgerichtet werden, oder legt diesen fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the tray items are automatically arranged; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Komponentenleistenelemente automatisch ausgerichtet werden, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.CanCreateComponentFromTool(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Gets a value indicating whether the specified tool can be used to create a new component.">Ruft einen Wert ab, der angibt, ob mit dem angegebenen Tool eine neue Komponente erstellt werden kann.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to test.">Der zu überprüfende <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified tool can be used to create a component; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn mit dem angegebenen Tool eine neue Komponente erstellt werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.CanDisplayComponent(System.ComponentModel.IComponent)">
      <summary vsli:raw="Gets a value indicating whether the specified component can be displayed.">Ruft einen Wert ab, der angibt, ob die angegebene Komponente angezeigt werden kann.</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to test.">Der zu überprüfende <see cref="T:System.ComponentModel.IComponent" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the component can be displayed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Komponente angezeigt werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentTray.ComponentCount">
      <summary vsli:raw="Gets the number of components contained in the tray.">Ruft die Anzahl der in der Komponentenleiste enthaltenen Komponenten ab.</summary>
      <returns vsli:raw="The number of components in the tray.">Die Anzahl der Komponenten in der Komponentenleiste.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.CreateComponentFromTool(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Creates a component from the specified toolbox item, adds the component to the current document, and displays a representation for the component in the component tray.">Erstellt aus dem angegebenen Toolboxelement eine Komponente, fügt sie dem aktuellen Dokument hinzu und zeigt in der Komponentenleiste eine Darstellung der Komponente an.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to create a component from.">Das <see cref="T:System.Drawing.Design.ToolboxItem" />, aus dem eine Komponente erstellt werden soll.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.DisplayError(System.Exception)">
      <summary vsli:raw="Displays an error message to the user with information about the specified exception.">Zeigt dem Benutzer eine Fehlermeldung mit Informationen zu der angegebenen Ausnahme an.</summary>
      <param name="e" vsli:raw="The exception about which to display information.">Die Ausnahme, zu der Informationen angezeigt werden sollen.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Windows.Forms.Design.ComponentTray&quot; /&gt; and optionally releases the managed resources.">Gibt die von <see cref="T:System.Windows.Forms.Design.ComponentTray" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetLocation(System.ComponentModel.IComponent)">
      <summary vsli:raw="Gets the location of the specified component, relative to the upper-left corner of the component tray.">Ruft die Position der angegebenen Komponente relativ zur oberen linken Ecke der Komponentenleiste ab.</summary>
      <param name="receiver" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to retrieve the location of.">Die <see cref="T:System.ComponentModel.IComponent" />, deren Position abzurufen ist.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; indicating the coordinates of the specified component, or an empty &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; if the specified component could not be found in the component tray. An empty &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; has an &lt;see cref=&quot;P:System.Drawing.Point.IsEmpty&quot; /&gt; property equal to &lt;see langword=&quot;true&quot; /&gt; and typically has &lt;see cref=&quot;P:System.Drawing.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Drawing.Point.Y&quot; /&gt; properties that are each equal to zero.">Ein <see cref="T:System.Drawing.Point" />, der die Koordinaten der angegebenen Komponente angibt, oder ein leerer <see cref="T:System.Drawing.Point" />, wenn die angegebene Komponente nicht in der Komponentenleiste gefunden wurde. Ein leerer <see cref="T:System.Drawing.Point" /> verfügt über eine Eigenschaft <see cref="P:System.Drawing.Point.IsEmpty" /> mit dem Wert <see langword="true" />. Außerdem verfügt er über die <see cref="P:System.Drawing.Point.X" />-Eigenschaft und die <see cref="P:System.Drawing.Point.Y" />-Eigenschaft, die beide gleich 0 (null) sind.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetNextComponent(System.ComponentModel.IComponent,System.Boolean)">
      <summary vsli:raw="Similar to &lt;see cref=&quot;M:System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)&quot; /&gt;, this method returns the next component in the tray, given a starting component.">Ähnlich wie <see cref="M:System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)" /> gibt diese Methode die nächste Komponente in der Leiste zurück, vorausgesetzt dass eine Startkomponente vorhanden ist.</summary>
      <param name="component" vsli:raw="The component from which to start enumerating.">Die Komponente, ab der die Aufzählung begonnen wird.</param>
      <param name="forward" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to enumerate forward through the list; otherwise, &lt;see langword=&quot;false&quot; /&gt; to enumerate backward.">
        <see langword="true" />, um die Liste vorwärts zu durchlaufen; andernfalls <see langword="false" />, um die Liste rückwärts zu durchlaufen.</param>
      <returns vsli:raw="The next component in the component tray, or &lt;see langword=&quot;null&quot; /&gt;, if the end of the list is encountered (or the beginning, if &lt;paramref name=&quot;forward&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;).">Die nächste Komponente in der Komponentenleiste oder <see langword="null" />, wenn das Ende der Liste gefunden wurde (oder der Anfang, wenn <paramref name="forward" /><see langword="false" /> ist).</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetService(System.Type)">
      <summary vsli:raw="Gets the requested service type.">Ruft den angeforderten Diensttyp ab.</summary>
      <param name="serviceType" vsli:raw="The type of the service to retrieve.">Der Typ des abzurufenden Diensts.</param>
      <returns vsli:raw="An instance of the requested service, or &lt;see langword=&quot;null&quot; /&gt; if the service could not be found.">Eine Instanz des angeforderten Diensts oder <see langword="null" />, wenn der Dienst nicht gefunden werden kann.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetTrayLocation(System.ComponentModel.IComponent)">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Location&quot; /&gt; extender property.">Ruft den Wert der <see langword="Location" />-Extendereigenschaft ab.</summary>
      <param name="receiver" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; that receives the location extender property.">Die <see cref="T:System.ComponentModel.IComponent" />, die die Positionsextendereigenschaft empfängt.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; representing the location of &lt;paramref name=&quot;receiver&quot; /&gt;.">Ein <see cref="T:System.Drawing.Point" />, der die Position von <paramref name="receiver" /> darstellt.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.IsTrayComponent(System.ComponentModel.IComponent)">
      <summary vsli:raw="Tests a component for presence in the component tray.">Überprüft eine Komponente auf Vorhandensein in der Komponentenleiste.</summary>
      <param name="comp" vsli:raw="The component to test for presence in the component tray.">Die auf Vorhandensein in der Komponentenleiste zu überprüfende Komponente.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;comp&quot; /&gt; is being shown on the tray; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="comp" /> in der Leiste angezeigt wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Called when an object that has been dragged is dropped on the component tray.">Wird aufgerufen, wenn ein Objekt gezogen und in der Komponentenleiste abgelegt wird.</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">Ein <see cref="T:System.Windows.Forms.DragEventArgs" />, das Daten für das Ereignis bereitstellt.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Called when an object is dragged over, and has entered the area over, the component tray.">Wird aufgerufen, wenn ein Objekt in oder über den Bereich der Komponentenleiste gezogen wird.</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">Ein <see cref="T:System.Windows.Forms.DragEventArgs" />, das Daten für das Ereignis bereitstellt.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragLeave(System.EventArgs)">
      <summary vsli:raw="Called when an object is dragged out of the area over the component tray.">Wird aufgerufen, wenn ein Objekt aus dem Bereich über die Komponentenleiste gezogen wird.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that provides data for the event.">Ein <see cref="T:System.EventArgs" />, das Daten für das Ereignis bereitstellt.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Called when an object is dragged over the component tray.">Wird aufgerufen, wenn ein Objekt über die Komponentenleiste gezogen wird.</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">Ein <see cref="T:System.Windows.Forms.DragEventArgs" />, das Daten für das Ereignis bereitstellt.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary vsli:raw="Called during an OLE drag and drop operation to provide an opportunity for the component tray to give feedback to the user about the results of dropping the object at a specific point.">Wird während eines OLE-Drag &amp; Drop-Vorgangs aufgerufen, damit der Benutzer über die Komponentenleiste Feedback zu den Ergebnissen der Löschung des Objekts zu einem bestimmten Zeitpunkt erhält.</summary>
      <param name="gfevent" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.GiveFeedbackEventArgs&quot; /&gt; that provides data for the event.">Ein <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" />, das Daten für das Ereignis bereitstellt.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Windows.Forms.Control.Layout&quot; /&gt; event.">Löst das <see cref="E:System.Windows.Forms.Control.Layout" />-Ereignis aus.</summary>
      <param name="levent" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.LayoutEventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.Windows.Forms.LayoutEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnLostCapture">
      <summary vsli:raw="Called when a mouse drag selection operation is canceled.">Wird aufgerufen, wenn durch einen Ziehvorgang eine Auswahl getroffen wird und dieser Vorgang abgebrochen wird.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
      <summary vsli:raw="Called when the mouse is double clicked over the component tray.">Wird aufgerufen, wenn auf der Komponentenleiste ein Doppelklick ausgeführt wird.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that provides data for the event.">Ein <see cref="T:System.EventArgs" />, das Daten für das Ereignis bereitstellt.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary vsli:raw="Called when the mouse button is pressed.">Wird aufgerufen, wenn die Maustaste gedrückt wird.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.MouseEventArgs&quot; /&gt; that provides data for the event.">Ein <see cref="T:System.Windows.Forms.MouseEventArgs" />, das Daten für das Ereignis bereitstellt.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary vsli:raw="Called when the mouse cursor position has changed.">Wird aufgerufen, wenn sich die Mauszeigerposition geändert hat.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.MouseEventArgs&quot; /&gt; that provides data for the event.">Ein <see cref="T:System.Windows.Forms.MouseEventArgs" />, das Daten für das Ereignis bereitstellt.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary vsli:raw="Called when the mouse button has been released.">Wird aufgerufen, wenn die Maustaste losgelassen wurde.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.MouseEventArgs&quot; /&gt; that provides data for the event.">Ein <see cref="T:System.Windows.Forms.MouseEventArgs" />, das Daten für das Ereignis bereitstellt.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary vsli:raw="Called when the view for the component tray should be refreshed.">Wird aufgerufen, wenn die Ansicht der Komponentenleiste aktualisiert werden soll.</summary>
      <param name="pe" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.PaintEventArgs&quot; /&gt; that provides data for the event.">Ein <see cref="T:System.Windows.Forms.PaintEventArgs" />, das Daten für das Ereignis bereitstellt.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnSetCursor">
      <summary vsli:raw="Called to set the mouse cursor.">Wird aufgerufen, um den Mauszeiger festzulegen.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.RemoveComponent(System.ComponentModel.IComponent)">
      <summary vsli:raw="Removes the specified component from the tray.">Entfernt die angegebene Komponente aus der Komponentenleiste.</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to remove from the tray.">Die <see cref="T:System.ComponentModel.IComponent" />, die aus der Komponentenleiste entfernt werden soll.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.SetLocation(System.ComponentModel.IComponent,System.Drawing.Point)">
      <summary vsli:raw="Sets the location of the specified component to the specified location.">Legt die Position der angegebenen Komponente auf die angegebene Position fest.</summary>
      <param name="receiver" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to set the location of.">Die <see cref="T:System.ComponentModel.IComponent" />, deren Position abzurufen ist.</param>
      <param name="location" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; indicating the new location for the specified component.">Ein <see cref="T:System.Drawing.Point" />, der die neue Position der angegebenen Komponente angibt.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.SetTrayLocation(System.ComponentModel.IComponent,System.Drawing.Point)">
      <summary vsli:raw="Sets the value of the &lt;see langword=&quot;Location&quot; /&gt; extender property.">Legt den Wert der <see langword="Location" />-Extendereigenschaft fest.</summary>
      <param name="receiver" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; that receives the location extender property.">Die <see cref="T:System.ComponentModel.IComponent" />, die die Positionsextendereigenschaft empfängt.</param>
      <param name="location" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; representing the location of &lt;paramref name=&quot;receiver&quot; /&gt;.">Ein <see cref="T:System.Drawing.Point" />, der die Position von <paramref name="receiver" /> darstellt.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentTray.ShowLargeIcons">
      <summary vsli:raw="Gets or sets a value indicating whether the tray displays a large icon to represent each component in the tray.">Ruft einen Wert ab, der angibt, ob für jede Komponente in der Komponentenleiste ein großes Symbol angezeigt wird, oder legt diesen fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if large icons are displayed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn große Symbole angezeigt werden, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.System#ComponentModel#IExtenderProvider#CanExtend(System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IExtenderProvider.CanExtend(System.Object)&quot; /&gt;.">Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.ComponentModel.IExtenderProvider.CanExtend(System.Object)" />.</summary>
      <param name="extendee" vsli:raw="The object to receive the extender properties.">Das Objekt, das die Extendereigenschaften empfangen soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this object can provide extender properties to the specified object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn dieses Objekt seine Extendereigenschaften für das angegebene Objekt bereitstellen kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.WndProc(System.Windows.Forms.Message@)">
      <summary vsli:raw="Processes Windows messages.">Verarbeitet Windows-Meldungen.</summary>
      <param name="m" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Message&quot; /&gt; to process.">Der zu verarbeitende <see cref="T:System.Windows.Forms.Message" />.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.ControlDesigner">
      <summary vsli:raw="Extends the design mode behavior of a &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt;.">Erweitert das Entwurfsmodusverhalten eines <see cref="T:System.Windows.Forms.Control" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Design.ControlDesigner" />-Klasse.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ControlDesigner.accessibilityObj">
      <summary vsli:raw="Specifies the accessibility object for the designer.">Gibt das Objekt für die Barrierefreiheit für den Designer an.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.AccessibilityObject">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Forms.AccessibleObject&quot; /&gt; assigned to the control.">Ruft das dem Steuerelement zugewiesene <see cref="T:System.Windows.Forms.AccessibleObject" /> ab.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.AccessibleObject&quot; /&gt; assigned to the control.">Das dem Steuerelement zugewiesene <see cref="T:System.Windows.Forms.AccessibleObject" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.AssociatedComponents">
      <summary vsli:raw="Gets the collection of components associated with the component managed by the designer.">Ruft die Auflistung der Komponenten ab, die der durch den Designer verwalteten Komponente zugeordnet ist.</summary>
      <returns vsli:raw="The components that are associated with the component managed by the designer.">Die Komponenten, die der durch den Designer verwalteten Komponente zugeordnet sind.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.AutoResizeHandles">
      <summary vsli:raw="Gets or sets a value indicating whether resize handle allocation depends on the value of the &lt;see cref=&quot;P:System.Windows.Forms.Control.AutoSize&quot; /&gt; property.">Ruft einen Wert ab oder oder legt einen Wert fest, der angibt, ob die Vergrößerungspunktreservierung vom Wert der <see cref="P:System.Windows.Forms.Control.AutoSize" />-Eigenschaft abhängt.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if resize handle allocation depends on the value of the &lt;see cref=&quot;P:System.Windows.Forms.Control.AutoSize&quot; /&gt; and &lt;see langword=&quot;AutoSizeMode&quot; /&gt; properties; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Vergrößerungspunktreservierung vom Wert der <see cref="P:System.Windows.Forms.Control.AutoSize" />-Eigenschaft und der <see langword="AutoSizeMode" />-Eigenschaft abhängt; andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.BaseWndProc(System.Windows.Forms.Message@)">
      <summary vsli:raw="Processes Windows messages.">Verarbeitet Windows-Meldungen.</summary>
      <param name="m" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Message&quot; /&gt; to process.">Der zu verarbeitende <see cref="T:System.Windows.Forms.Message" />.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.BehaviorService">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; from the design environment.">Ruft den <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> von der Entwurfsumgebung ab.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if the service is unavailable.">Der <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> oder <see langword="null" />, wenn der Dienst nicht verfügbar ist.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.CanBeParentedTo(System.ComponentModel.Design.IDesigner)">
      <summary vsli:raw="Indicates if this designer's control can be parented by the control of the specified designer.">Gibt an, ob das Steuerelement dieses Designers dem Steuerelement des angegebenen Designers untergeordnet sein kann.</summary>
      <param name="parentDesigner" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesigner&quot; /&gt; that manages the control to check.">Der <see cref="T:System.ComponentModel.Design.IDesigner" />, der das zu überprüfende Steuerelement verwaltet.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the control managed by the specified designer can parent the control managed by this designer; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> wenn das vom angegebenen Designer verwaltete Steuerelement dem von diesem Designer verwalteten Steuerelement übergeordnet sein kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.Control">
      <summary vsli:raw="Gets the control that the designer is designing.">Ruft das Steuerelement ab, das vom Designer entworfen wird.</summary>
      <returns vsli:raw="The control that the designer is designing.">Das Steuerelement, das vom Designer entworfen wird.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject">
      <summary vsli:raw="Provides an &lt;see cref=&quot;T:System.Windows.Forms.AccessibleObject&quot; /&gt; for &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt;.">Stellt ein <see cref="T:System.Windows.Forms.AccessibleObject" /> für den <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> bereit.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.#ctor(System.Windows.Forms.Design.ControlDesigner,System.Windows.Forms.Control)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject&quot; /&gt; class using the specified designer and control.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject" />-Klasse mit dem angegebenen Designer und Steuerelement.</summary>
      <param name="designer" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt; for the accessible object.">Der <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> für das barrierefreie Objekt.</param>
      <param name="control" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; for the accessible object.">Der <see cref="T:System.Windows.Forms.Control" /> für das barrierefreie Objekt.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Bounds">
      <summary vsli:raw="Gets the points that define the boundaries of the accessible object for the designer.">Ruft die Punkte ab, die die Begrenzungen des barrierefreien Objekts für den Designer definieren.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; that indicates the boundaries of the accessible object for the designer.">Ein <see cref="T:System.Drawing.Rectangle" />, das die Begrenzungen des barrierefreien Objekts für den Designer angibt.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.DefaultAction">
      <summary vsli:raw="Gets a string that describes the default action of the specified object.">Ruft eine Zeichenfolge ab, die die Standardaktion des angegebenen Objekts beschreibt.</summary>
      <returns vsli:raw="A description of the default action for a specified object.">Eine Beschreibung der Standardaktion für ein angegebenes Objekt.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Description">
      <summary vsli:raw="Gets a string that describes the visual appearance of the specified object.">Ruft eine Zeichenfolge ab, die die visuelle Darstellung des angegebenen Objekts beschreibt.</summary>
      <returns vsli:raw="A description of the object's visual appearance to the user, or &lt;see langword=&quot;null&quot; /&gt; if the object does not have a description.">Eine Beschreibung der visuellen Darstellung des Objekts für den Benutzer oder <see langword="null" />, wenn keine Beschreibung des Objekts vorliegt.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetChild(System.Int32)">
      <summary vsli:raw="Retrieves the accessible child corresponding to the specified index.">Ruft das zugreifbare untergeordnete Element ab, das dem angegebenen Index entspricht.</summary>
      <param name="index" vsli:raw="The zero-based index of the accessible child.">Der nullbasierte Index des zugreifbaren untergeordneten Elements.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Windows.Forms.AccessibleObject&quot; /&gt; that represents the accessible child corresponding to the specified index.">Ein <see cref="T:System.Windows.Forms.AccessibleObject" />, das das zugreifbare untergeordnete Element darstellt, das dem angegebenen Index entspricht.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetChildCount">
      <summary vsli:raw="Retrieves the number of children belonging to an accessible object.">Ruft die Anzahl der untergeordneten Elemente ab, die zu einem Objekt gehören, auf das zugegriffen werden kann.</summary>
      <returns vsli:raw="The number of children belonging to an accessible object.">Die Anzahl der untergeordneten Elemente, die zu einem Objekt gehören, auf das zugegriffen werden kann.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetFocused">
      <summary vsli:raw="Retrieves the object that has the keyboard focus.">Ruft das Objekt ab, das den Tastaturfokus besitzt.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Windows.Forms.AccessibleObject&quot; /&gt; that specifies the currently focused child. This method returns the calling object if the object itself is focused. Returns &lt;see langword=&quot;null&quot; /&gt; if no object has focus.">Ein <see cref="T:System.Windows.Forms.AccessibleObject" />, das das untergeordnete Element angibt, das gerade den Fokus besitzt. Diese Methode gibt das aufrufende Objekt zurück, wenn das Objekt selbst den Fokus besitzt. Gibt <see langword="null" /> zurück, wenn kein Objekt den Fokus besitzt.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetSelected">
      <summary vsli:raw="Retrieves the currently selected child.">Ruft das gerade ausgewählte untergeordnete Element ab.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Windows.Forms.AccessibleObject&quot; /&gt; that represents the currently selected child. This method returns the calling object if the object itself is selected. Returns &lt;see langword=&quot;null&quot; /&gt; if is no child is currently selected and the object itself does not have focus.">Ein <see cref="T:System.Windows.Forms.AccessibleObject" />, das das gerade ausgewählte untergeordnete Element darstellt. Diese Methode gibt das aufrufende Objekt zurück, wenn das Objekt selbst ausgewählt ist. Gibt <see langword="null" /> zurück, wenn derzeit kein untergeordnetes Element ausgewählt ist und das Objekt selbst nicht den Fokus besitzt.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.HitTest(System.Int32,System.Int32)">
      <summary vsli:raw="Retrieves the child object at the specified screen coordinates.">Ruft das untergeordnete Objekt an den angegebenen Bildschirmkoordinaten ab.</summary>
      <param name="x" vsli:raw="The horizontal screen coordinate.">Die horizontale Bildschirmkoordinate.</param>
      <param name="y" vsli:raw="The vertical screen coordinate.">Die vertikale Bildschirmkoordinate.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Windows.Forms.AccessibleObject&quot; /&gt; that represents the child object at the given screen coordinates. This method returns the calling object if the object itself is at the location specified. Returns &lt;see langword=&quot;null&quot; /&gt; if no object is at the tested location.">Ein <see cref="T:System.Windows.Forms.AccessibleObject" />, das das untergeordnete Objekt an den angegebenen Bildschirmkoordinaten darstellt. Diese Methode gibt das aufrufende Objekt zurück, wenn das Objekt selbst sich an der angegebenen Position befindet. Gibt <see langword="null" /> zurück, wenn sich an der überprüften Position kein Objekt befindet.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Name">
      <summary vsli:raw="Gets or sets the object name.">Ruft den Objektnamen ab oder legt diesen fest.</summary>
      <returns vsli:raw="The object name, or &lt;see langword=&quot;null&quot; /&gt; if the property has not been set.">Der Objektname oder <see langword="null" />, wenn die Eigenschaft nicht festgelegt wurde.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Parent">
      <summary vsli:raw="Gets the parent of an accessible object.">Ruft das übergeordnete Element eines barrierefreien Objekts ab.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Windows.Forms.AccessibleObject&quot; /&gt; that represents the parent of an accessible object, or &lt;see langword=&quot;null&quot; /&gt; if there is no parent object.">Ein <see cref="T:System.Windows.Forms.AccessibleObject" />, das das übergeordnete Element eines barrierefreien Objekts darstellt, oder <see langword="null" />, wenn kein übergeordnetes Objekt vorhanden ist.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Role">
      <summary vsli:raw="Gets the role of this accessible object.">Ruft die Rolle dieses zugreifbaren Objekts ab.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Windows.Forms.AccessibleRole&quot; /&gt; values, or &lt;see cref=&quot;F:System.Windows.Forms.AccessibleRole.None&quot; /&gt; if no role has been specified.">Einer der <see cref="T:System.Windows.Forms.AccessibleRole" />-Werte oder <see cref="F:System.Windows.Forms.AccessibleRole.None" />, wenn keine Rolle angegeben wurde.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.State">
      <summary vsli:raw="Gets the state of this accessible object.">Ruft den Zustand dieses barrierefreien Objekts ab.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Windows.Forms.AccessibleStates&quot; /&gt; values, or &lt;see cref=&quot;F:System.Windows.Forms.AccessibleStates.None&quot; /&gt;, if no state has been set.">Einer der <see cref="T:System.Windows.Forms.AccessibleStates" />-Werte oder <see cref="F:System.Windows.Forms.AccessibleStates.None" />, wenn kein Zustand festgelegt wurde.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Value">
      <summary vsli:raw="Gets or sets the value of an accessible object.">Ruft den Wert eines barrierefreien Objekts ab oder legt diesen fest.</summary>
      <returns vsli:raw="The value of an accessible object, or &lt;see langword=&quot;null&quot; /&gt; if the object has no value set.">Der Wert eines Objekts ab, auf das zugegriffen werden kann, oder <see langword="null" />, wenn für das Objekt kein Wert festgelegt ist.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.DefWndProc(System.Windows.Forms.Message@)">
      <summary vsli:raw="Provides default processing for Windows messages.">Stellt Standardverarbeitung für Windows-Meldungen bereit.</summary>
      <param name="m" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Message&quot; /&gt; to process.">Der zu verarbeitende <see cref="T:System.Windows.Forms.Message" />.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.DisplayError(System.Exception)">
      <summary vsli:raw="Displays information about the specified exception to the user.">Zeigt dem Benutzer Informationen über die angegebene Ausnahme an.</summary>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; to display.">Das anzuzeigende <see cref="T:System.Exception" />.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt; and optionally releases the managed resources.">Gibt die von <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.EnableDesignMode(System.Windows.Forms.Control,System.String)">
      <summary vsli:raw="Enables design time functionality for a child control.">Aktiviert die Entwurfszeitfunktionen für ein untergeordnetes Steuerelement.</summary>
      <param name="child" vsli:raw="The child control for which design mode will be enabled.">Das untergeordnete Steuerelement, für das der Entwurfsmodus aktiviert wird.</param>
      <param name="name" vsli:raw="The name of &lt;paramref name=&quot;child&quot; /&gt; as exposed to the end user.">Der Name des <paramref name="child" />, wie dieser dem Endbenutzer verfügbar gemacht wird.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the child control could be enabled for design time; &lt;see langword=&quot;false&quot; /&gt; if the hosting infrastructure does not support it.">
        <see langword="true" />, wenn das untergeordnete Steuerelement für die Entwurfszeit aktiviert werden konnte, <see langword="false" />, wenn die als Host fungierende Infrastruktur es nicht unterstützt.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;child&quot; /&gt; or &lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="child" /> oder <paramref name="name" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.EnableDragDrop(System.Boolean)">
      <summary vsli:raw="Enables or disables drag-and-drop support for the control being designed.">Aktiviert oder deaktiviert die Drag &amp; Drop-Unterstützung für das Steuerelement, das entworfen wird.</summary>
      <param name="value" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to enable drag-and-drop support for the control; &lt;see langword=&quot;false&quot; /&gt; if the control should not have drag-and-drop support. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um die Drag &amp; Drop-Unterstützung für das Steuerelement zu aktivieren; <see langword="false" />, wenn das Steuerelement nicht über Drag &amp; Drop-Unterstützung verfügen soll. Die Standardeinstellung ist <see langword="false" />.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.EnableDragRect">
      <summary vsli:raw="Gets a value indicating whether drag rectangles can be drawn on this designer component.">Ruft einen Wert ab, der angibt, ob in dieser Designerkomponente Ziehrechtecke gezeichnet werden können.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if drag rectangles can be drawn; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn Ziehrechtecke gezeichnet werden können, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.GetControlGlyph(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph&quot; /&gt; representing the bounds of this control.">Gibt ein <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> zurück, das die Begrenzungen dieses Steuerelements darstellt.</summary>
      <param name="selectionType" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphSelectionType&quot; /&gt; value that specifies the selection state.">Ein <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" />-Wert, der den Auswahlzustand angibt.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph&quot; /&gt; representing the bounds of this control.">Ein <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" />, das die Begrenzungen dieses Steuerelements darstellt.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.GetGlyphs(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary vsli:raw="Gets a collection of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects representing the selection borders and grab handles for a standard control.">Ruft eine Auflistung von <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />-Objekt ab, die die Markierungsrahmen und Ziehpunkte für ein Standardsteuerelement darstellen.</summary>
      <param name="selectionType" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphSelectionType&quot; /&gt; value that specifies the selection state.">Ein <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" />-Wert, der den Auswahlzustand angibt.</param>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects.">Eine Auflistung von <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />-Objekten.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.GetHitTest(System.Drawing.Point)">
      <summary vsli:raw="Indicates whether a mouse click at the specified point should be handled by the control.">Gibt an, ob ein Mausklick auf den angegebenen Punkt von dem Steuerelement behandelt werden soll.</summary>
      <param name="point" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; indicating the position at which the mouse was clicked, in screen coordinates.">Ein <see cref="T:System.Drawing.Point" />, der die Position, an der der Mausklick stattfand, in Bildschirmkoordinaten angibt.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a click at the specified point is to be handled by the control; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn ein Klick auf den angegebenen Punkt vom Steuerelement behandelt werden soll, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.HookChildControls(System.Windows.Forms.Control)">
      <summary vsli:raw="Routes messages from the child controls of the specified control to the designer.">Leitet Meldungen von den untergeordneten Steuerelementen des angegebenen Steuerelements an den Designer weiter.</summary>
      <param name="firstChild" vsli:raw="The first child &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; to process. This method may recursively call itself for children of the control.">Das erste zu verarbeitende untergeordnete <see cref="T:System.Windows.Forms.Control" />. Für untergeordnete Elemente des Steuerelements ruft sich diese Methode möglicherweise rekursiv selbst auf.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.InheritanceAttribute">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.ComponentModel.InheritanceAttribute&quot; /&gt; of the designer.">Ruft das <see cref="T:System.ComponentModel.InheritanceAttribute" /> für den Designer ab.</summary>
      <returns vsli:raw="&lt;see cref=&quot;F:System.ComponentModel.InheritanceAttribute.Inherited&quot; /&gt; if the designer is a root designer; otherwise, the value of the parent designer's &lt;see cref=&quot;P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute&quot; /&gt; property.">
        <see cref="F:System.ComponentModel.InheritanceAttribute.Inherited" />, wenn der Designer ein Stamm-Designer ist, andernfalls der Wert der <see cref="P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute" />-Eigenschaft des übergeordneten Designers.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary vsli:raw="Initializes the designer with the specified component.">Initialisiert den Designer mit der angegebenen Komponente.</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to associate the designer with. This component must always be an instance of, or derive from, &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt;.">Die dem Designer zuzuordnende <see cref="T:System.ComponentModel.IComponent" />. Diese Komponente muss immer eine Instanz von <see cref="T:System.Windows.Forms.Control" /> oder von diesem abgeleitet sein.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.InitializeExistingComponent(System.Collections.IDictionary)">
      <summary vsli:raw="Re-initializes an existing component.">Initialisiert eine vorhandene Komponente erneut.</summary>
      <param name="defaultValues" vsli:raw="A name/value dictionary of default values to apply to properties. May be &lt;see langword=&quot;null&quot; /&gt; if no default values are specified.">Ein Name-Wert-Wörterbuch der auf Eigenschaften anzuwendenden Standardwerte. Kann <see langword="null" /> sein, wenn keine Standardwerte angegeben werden.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.InitializeNewComponent(System.Collections.IDictionary)">
      <summary vsli:raw="Initializes a newly created component.">Initialisiert eine neu erstellte Komponente.</summary>
      <param name="defaultValues" vsli:raw="A name/value dictionary of default values to apply to properties. May be &lt;see langword=&quot;null&quot; /&gt; if no default values are specified.">Ein Name-Wert-Wörterbuch der auf Eigenschaften anzuwendenden Standardwerte. Kann <see langword="null" /> sein, wenn keine Standardwerte angegeben werden.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.InternalControlDesigner(System.Int32)">
      <summary vsli:raw="Returns the internal control designer with the specified index in the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt;.">Gibt den internen Steuerelement-Designer mit dem angegebenen Index im <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> zurück.</summary>
      <param name="internalControlIndex" vsli:raw="A specified index to select the internal control designer. This index is zero-based.">Ein angegebener Index zum Auswählen des internen Steuerelement-Designers. Der Index ist nullbasiert.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt; at the specified index.">Ein <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> am angegebenen Index.</returns>
    </member>
    <member name="F:System.Windows.Forms.Design.ControlDesigner.InvalidPoint">
      <summary vsli:raw="Defines a local &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; that represents the values of an invalid &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt;.">Definiert einen lokalen <see cref="T:System.Drawing.Point" />, der die Werte eines ungültigen <see cref="T:System.Drawing.Point" /> darstellt.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.NumberOfInternalControlDesigners">
      <summary vsli:raw="Returns the number of internal control designers in the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt;.">Gibt die Anzahl von internen Steuerelement-Designern im <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> zurück.</summary>
      <returns vsli:raw="The number of internal control designers in the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt;.">Die Anzahl von internen Steuerelement-Designern im <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnContextMenu(System.Int32,System.Int32)">
      <summary vsli:raw="Shows the context menu and provides an opportunity to perform additional processing when the context menu is about to be displayed.">Zeigt das Kontextmenü an und ermöglicht das Ausführen weiterer Verarbeitungsschritte, während das Kontextmenü gerade angezeigt wird.</summary>
      <param name="x" vsli:raw="The x coordinate at which to display the context menu.">Die X-Koordinate, an der das Kontextmenü angezeigt werden soll.</param>
      <param name="y" vsli:raw="The y coordinate at which to display the context menu.">Die Y-Koordinate, an der das Kontextmenü angezeigt werden soll.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnCreateHandle">
      <summary vsli:raw="Provides an opportunity to perform additional processing immediately after the control handle has been created.">Ermöglicht das Ausführen weiterer Schritte direkt nach dem Erstellen des Steuerelementhandles.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragComplete(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Receives a call to clean up a drag-and-drop operation.">Empfängt einen Aufruf, um einen Drag &amp; Drop-Vorgang zu bereinigen.</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">Ein <see cref="T:System.Windows.Forms.DragEventArgs" />, das Daten für das Ereignis bereitstellt.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Receives a call when a drag-and-drop object is dropped onto the control designer view.">Empfängt einen Aufruf, wenn ein Drag &amp; Drop-Objekt auf der Ansicht des Steuerelement-Designers abgelegt wird.</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">Ein <see cref="T:System.Windows.Forms.DragEventArgs" />, das Daten für das Ereignis bereitstellt.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Receives a call when a drag-and-drop operation enters the control designer view.">Empfängt einen Aufruf, wenn ein Drag &amp; Drop-Vorgang in der Ansicht des Steuerelement-Designers eintritt.</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">Ein <see cref="T:System.Windows.Forms.DragEventArgs" />, das Daten für das Ereignis bereitstellt.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragLeave(System.EventArgs)">
      <summary vsli:raw="Receives a call when a drag-and-drop operation leaves the control designer view.">Empfängt einen Aufruf, wenn ein Drag &amp; Drop-Vorgang die Ansicht des Steuerelement-Designers verlässt.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that provides data for the event.">Ein <see cref="T:System.EventArgs" />, das Daten für das Ereignis bereitstellt.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Receives a call when a drag-and-drop object is dragged over the control designer view.">Empfängt einen Aufruf, wenn ein Drag &amp; Drop-Objekt über die Ansicht des Steuerelement-Designers gezogen wird.</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">Ein <see cref="T:System.Windows.Forms.DragEventArgs" />, das Daten für das Ereignis bereitstellt.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary vsli:raw="Receives a call when a drag-and-drop operation is in progress to provide visual cues based on the location of the mouse while a drag operation is in progress.">Empfängt einen Aufruf, wenn ein Drag &amp; Drop-Vorgang ausgeführt wird, um visuelle Hinweise bereitzustellen, die auf der Position des Mauszeigers basieren, während ein Ziehvorgang ausgeführt wird.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.GiveFeedbackEventArgs&quot; /&gt; that provides data for the event.">Ein <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" />, das Daten für das Ereignis bereitstellt.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragBegin(System.Int32,System.Int32)">
      <summary vsli:raw="Receives a call in response to the left mouse button being pressed and held while over the component.">Empfängt als Reaktion auf das Drücken und Halten der linken Maustaste einen Aufruf, während sich der Mauszeiger über der Komponente befindet.</summary>
      <param name="x" vsli:raw="The x position of the mouse in screen coordinates.">Die x-Position der Maus in Bildschirmkoordinaten.</param>
      <param name="y" vsli:raw="The y position of the mouse in screen coordinates.">Die y-Position der Maus in Bildschirmkoordinaten.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragEnd(System.Boolean)">
      <summary vsli:raw="Receives a call at the end of a drag-and-drop operation to complete or cancel the operation.">Empfängt einen Aufruf am Ende eines Drag &amp; Drop-Vorgangs, um diesen abzuschließen oder abzubrechen.</summary>
      <param name="cancel" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to cancel the drag; &lt;see langword=&quot;false&quot; /&gt; to commit it.">
        <see langword="true" />, um den Ziehvorgang abzubrechen, <see langword="false" />, um einen Commit für den Vorgang auszuführen.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragMove(System.Int32,System.Int32)">
      <summary vsli:raw="Receives a call for each movement of the mouse during a drag-and-drop operation.">Empfängt einen Aufruf für jede Bewegung der Maus während eines Drag &amp; Drop-Vorgangs.</summary>
      <param name="x" vsli:raw="The x position of the mouse in screen coordinates.">Die x-Position der Maus in Bildschirmkoordinaten.</param>
      <param name="y" vsli:raw="The y position of the mouse in screen coordinates.">Die y-Position der Maus in Bildschirmkoordinaten.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseEnter">
      <summary vsli:raw="Receives a call when the mouse first enters the control.">Empfängt einen Aufruf, wenn der Mauszeiger zum ersten Mal in den Bereich des Steuerelements eintritt.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseHover">
      <summary vsli:raw="Receives a call after the mouse hovers over the control.">Empfängt einen Aufruf, nachdem mit dem Mauszeiger auf das Steuerelement gezeigt wurde.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseLeave">
      <summary vsli:raw="Receives a call when the mouse first enters the control.">Empfängt einen Aufruf, wenn der Mauszeiger zum ersten Mal in den Bereich des Steuerelements eintritt.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnPaintAdornments(System.Windows.Forms.PaintEventArgs)">
      <summary vsli:raw="Receives a call when the control that the designer is managing has painted its surface so the designer can paint any additional adornments on top of the control.">Empfängt einen Aufruf, wenn die Oberfläche des vom Designer verwalteten Steuerelements gezeichnet ist, sodass der Designer die Darstellung des Steuerelements bearbeiten kann.</summary>
      <param name="pe" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.PaintEventArgs&quot; /&gt; the designer can use to draw on the control.">Eine Instanz von <see cref="T:System.Windows.Forms.PaintEventArgs" />, die der Designer zum Zeichnen auf dem Steuerelement verwenden kann.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnSetComponentDefaults">
      <summary vsli:raw="Called when the designer is initialized.">Wird beim Initialisieren des Designers aufgerufen.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnSetCursor">
      <summary vsli:raw="Receives a call each time the cursor needs to be set.">Empfängt jedes Mal einen Aufruf, wenn der Cursor festgelegt werden muss.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ParentComponent">
      <summary vsli:raw="Gets the parent component for the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt;.">Ruft die übergeordnete Komponente für den <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> ab.</summary>
      <returns vsli:raw="The parent component for the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt; if there is no parent component.">Die übergeordnete Komponente für den <see cref="T:System.Windows.Forms.Design.ControlDesigner" />, andernfalls <see langword="null" />, wenn keine übergeordnete Komponente vorhanden ist.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ParticipatesWithSnapLines">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt; will allow snapline alignment during a drag operation.">Ruft einen Wert ab, der angibt, ob der <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> während eines Ziehvorgangs die Ausrichtung von Ausrichtungslinien ermöglicht.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt; will allow snapline alignment during a drag operation when the primary drag control is over this designer; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> während eines Ziehvorgangs die Ausrichtung von Ausrichtungslinien ermöglicht, wenn sich das primäre Ziehsteuerelement auf diesem Designer befindet, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary vsli:raw="Adjusts the set of properties the component exposes through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">Passt die Gruppe von Eigenschaften an, die die Komponente mithilfe eines <see cref="T:System.ComponentModel.TypeDescriptor" /> verfügbar macht.</summary>
      <param name="properties" vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; containing the properties for the class of the component.">Ein <see cref="T:System.Collections.IDictionary" />, das die Eigenschaften für die Komponentenklasse enthält.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.SelectionRules">
      <summary vsli:raw="Gets the selection rules that indicate the movement capabilities of a component.">Ruft die Auswahlregeln ab, die die Bewegungsfunktionen einer Komponente angeben.</summary>
      <returns vsli:raw="A bitwise combination of &lt;see cref=&quot;T:System.Windows.Forms.Design.SelectionRules&quot; /&gt; values.">Eine bitweise Kombination von <see cref="T:System.Windows.Forms.Design.SelectionRules" />-Werten.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.SnapLines">
      <summary vsli:raw="Gets a list of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; objects representing significant alignment points for this control.">Ruft eine Liste mit <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />-Objekten ab, die signifikante Ausrichtungspunkte für dieses Steuerelement darstellen.</summary>
      <returns vsli:raw="A list of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; objects representing significant alignment points for this control.">Eine Liste mit <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />-Objekten, die signifikante Ausrichtungspunkte für dieses Steuerelement darstellen.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.UnhookChildControls(System.Windows.Forms.Control)">
      <summary vsli:raw="Routes messages for the children of the specified control to each control rather than to a parent designer.">Leitet Meldungen für die untergeordneten Elemente des angegebenen Steuerelements an jedes Steuerelement und nicht an einen übergeordneten Designer weiter.</summary>
      <param name="firstChild" vsli:raw="The first child &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; to process. This method may recursively call itself for children of the control.">Das erste zu verarbeitende untergeordnete <see cref="T:System.Windows.Forms.Control" />. Für untergeordnete Elemente des Steuerelements ruft sich diese Methode möglicherweise rekursiv selbst auf.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.WndProc(System.Windows.Forms.Message@)">
      <summary vsli:raw="Processes Windows messages and optionally routes them to the control.">Verarbeitet Windows-Meldungen und leitet diese optional an das Steuerelement weiter.</summary>
      <param name="m" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Message&quot; /&gt; to process.">Der zu verarbeitende <see cref="T:System.Windows.Forms.Message" />.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.DesignerActionListsChangedEventArgs">
      <summary>Stellt Daten für das <see cref="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged" />-Ereignis bereit.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DesignerActionListsChangedEventArgs.#ctor(System.Object,System.Windows.Forms.Design.DesignerActionListsChangedType,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Design.DesignerActionListsChangedEventArgs" />-Klasse mit dem angegebenen verknüpften Objekt, der Art der Änderung und den verbleibenden Aktionslisten für das verknüpfte Objekt.</summary>
      <param name="relatedObject">Das verknüpfte Objekt.</param>
      <param name="changeType">Einer der Enumerationswerte, der die Art der Änderung angibt.</param>
      <param name="actionLists">Eine Sammlung, die die verbleibenden Aktionslisten für das verknüpfte Objekt darstellt.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerActionListsChangedEventArgs.ActionLists">
      <summary>Ruft die Sammlung ab, die die verbleibenden Aktionslisten für das verknüpfte Objekt enthält.</summary>
      <returns>Die Auflistung, die die verbleibenden Aktions Listen für das verbundene Objekt enthält.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerActionListsChangedEventArgs.ChangeType">
      <summary>Ruft die Art der Änderung ab, durch die das Ereignis ausgelöst wurde.</summary>
      <returns>Einer der Enumerationswerte, der den Typ der Änderung angibt.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerActionListsChangedEventArgs.RelatedObject">
      <summary>Ruft das Objekt ab, das dem Ereignis zugeordnet ist.</summary>
      <returns>Das-Objekt, das dem-Ereignis zugeordnet ist.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.DesignerActionListsChangedEventHandler">
      <param name="sender" />
      <param name="e" />
    </member>
    <member name="T:System.Windows.Forms.Design.DesignerActionListsChangedType" />
    <member name="F:System.Windows.Forms.Design.DesignerActionListsChangedType.ActionListsAdded" />
    <member name="F:System.Windows.Forms.Design.DesignerActionListsChangedType.ActionListsRemoved" />
    <member name="T:System.Windows.Forms.Design.DesignerActionUIService" />
    <member name="E:System.Windows.Forms.Design.DesignerActionUIService.DesignerActionUIStateChange" />
    <member name="M:System.Windows.Forms.Design.DesignerActionUIService.Dispose" />
    <member name="M:System.Windows.Forms.Design.DesignerActionUIService.HideUI(System.ComponentModel.IComponent)">
      <param name="component" />
    </member>
    <member name="M:System.Windows.Forms.Design.DesignerActionUIService.Refresh(System.ComponentModel.IComponent)">
      <param name="component" />
    </member>
    <member name="M:System.Windows.Forms.Design.DesignerActionUIService.ShouldAutoShow(System.ComponentModel.IComponent)">
      <param name="component" />
    </member>
    <member name="M:System.Windows.Forms.Design.DesignerActionUIService.ShowUI(System.ComponentModel.IComponent)">
      <param name="component" />
    </member>
    <member name="T:System.Windows.Forms.Design.DesignerCommandSet" />
    <member name="M:System.Windows.Forms.Design.DesignerCommandSet.#ctor" />
    <member name="P:System.Windows.Forms.Design.DesignerCommandSet.ActionLists" />
    <member name="M:System.Windows.Forms.Design.DesignerCommandSet.GetCommands(System.String)">
      <param name="name" />
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerCommandSet.Verbs" />
    <member name="T:System.Windows.Forms.Design.DesignerOptions">
      <summary vsli:raw="Provides access to get and set option values for a designer.">Ermöglicht den Zugriff zum Abrufen und Festlegen von Optionswerten für einen Designer.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DesignerOptions.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.DesignerOptions&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Design.DesignerOptions" />-Klasse.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.EnableInSituEditing">
      <summary vsli:raw="Gets or sets a value that enables or disables in-place editing for &lt;see cref=&quot;T:System.Windows.Forms.ToolStrip&quot; /&gt; controls.">Ruft einen Wert ab, der die direkte Bearbeitung von <see cref="T:System.Windows.Forms.ToolStrip" />-Steuerelementen aktiviert oder deaktiviert, oder legt diesen Wert fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if in-place editing for &lt;see cref=&quot;T:System.Windows.Forms.ToolStrip&quot; /&gt; controls is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />, wenn die direkte Bearbeitung von <see cref="T:System.Windows.Forms.ToolStrip" />-Steuerelementen aktiviert ist; andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.GridSize">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Drawing.Size&quot; /&gt; representing the dimensions of a grid unit.">Ruft eine <see cref="T:System.Drawing.Size" /> ab, die die Dimensionen einer Rastereinheit darstellt, oder legt diese fest.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Size&quot; /&gt; representing the dimensions of a grid unit.">Eine <see cref="T:System.Drawing.Size" />, der die Dimensionen einer Rastereinheit darstellt.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.ObjectBoundSmartTagAutoShow">
      <summary vsli:raw="Gets or sets a value that specifies whether a designer shows a component's smart tag panel automatically on creation.">Ruft einen Wert ab, der angibt, ob ein Designer den Smarttagbereich einer Komponente bei der Erstellung automatisch anzeigt, oder legt diesen Wert fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to allow a component's smart tag panel to open automatically upon creation; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />, damit der Smarttagbereich einer Komponente bei der Erstellung automatisch geöffnet wird; andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.ShowGrid">
      <summary vsli:raw="Gets or sets a value that enables or disables the grid in the designer.">Ruft einen Wert ab, der das Raster im Designer aktiviert oder deaktiviert, oder legt diesen Wert fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the grid is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />, wenn das Raster aktiviert ist, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.SnapToGrid">
      <summary vsli:raw="Gets or sets a value that enables or disables whether controls are automatically placed at grid coordinates.">Ruft einen Wert ab, der das automatische Platzieren von Steuerelementen an Rasterkoordinaten aktiviert oder deaktiviert, oder legt diesen Wert fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if snapping is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die automatische Ausrichtung aktiviert ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.UseOptimizedCodeGeneration">
      <summary vsli:raw="Gets or sets a value that enables or disables the component cache.">Ruft einen Wert ab, der den Komponentencache aktiviert oder deaktiviert, oder legt diesen Wert fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the component cache is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />, wenn der Komponentencache aktiviert wird, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.UseSmartTags">
      <summary vsli:raw="Gets or sets a value that enables or disables smart tags in the designer.">Ruft einen Wert ab, der Smarttags im Designer aktiviert oder deaktiviert, oder legt diesen fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if smart tags in the designer are enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn Smarttags im Designer aktiviert werden; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.UseSnapLines">
      <summary vsli:raw="Gets or sets a value that enables or disables snaplines in the designer.">Ruft einen Wert ab, der Ausrichtungslinien im Designer aktiviert oder deaktiviert, oder legt diesen Wert fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if snaplines in the designer are enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn Ausrichtungslinien im Designer aktiviert werden; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.DocumentDesigner">
      <summary vsli:raw="Base designer class for extending the design mode behavior of, and providing a root-level design mode view for, a &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; that supports nested controls and should receive scroll messages.">Basisdesignerklasse zum Erweitern des Entwurfsmodusverhaltens eines <see cref="T:System.Windows.Forms.Control" /> sowie zum Bereitstellen einer Entwurfsmodusansicht auf Stammebene für ein Steuerelement, das geschachtelte Steuerelemente unterstützt und Bildlaufmeldungen empfangen sollte.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.DocumentDesigner&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Design.DocumentDesigner" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Windows.Forms.Design.DocumentDesigner&quot; /&gt; and optionally releases the managed resources.">Gibt die von <see cref="T:System.Windows.Forms.Design.DocumentDesigner" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.EnsureMenuEditorService(System.ComponentModel.IComponent)">
      <summary>Prüft, ob ein Menü-Editor-Dienst vorhanden ist, und erstellt diesen Dienst, sofern noch nicht vorhanden.</summary>
      <param name="c">Die zum Überprüfen verwendete <see cref="T:System.ComponentModel.IComponent" /> verfügt über einen Kontextmenüdienst.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.GetGlyphs(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; representing the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects.">Ruft eine <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> ab, die die <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />-Objekte darstellt.</summary>
      <param name="selectionType" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphSelectionType&quot; /&gt; value that specifies the selection state.">Ein <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" />-Wert, der den Auswahlzustand angibt.</param>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects.">Eine Auflistung von <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />-Objekten.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Indicates whether the specified tool is supported by the designer.">Gibt an, ob das angegebene Tool durch den Designer unterstützt wird.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to test for toolbox support.">Das <see cref="T:System.Drawing.Design.ToolboxItem" />, das auf Toolboxunterstützung getestet werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the tool should be enabled on the toolbox; &lt;see langword=&quot;false&quot; /&gt; if the document designer doesn't know how to use the tool.">
        <see langword="true" />, wenn das Tool für die Toolbox aktiviert werden soll. <see langword="false" />, wenn der Dokument-Designer das Tool nicht unterstützt.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary vsli:raw="Initializes the designer with the specified component.">Initialisiert den Designer mit der angegebenen Komponente.</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to associate with the designer.">Die dem Designer zuzuordnende <see cref="T:System.ComponentModel.IComponent" />.</param>
    </member>
    <member name="F:System.Windows.Forms.Design.DocumentDesigner.menuEditorService">
      <summary>Initialisiert die menuEditorService-Variable mit <see langword="null" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.OnContextMenu(System.Int32,System.Int32)">
      <summary vsli:raw="Called when the context menu should be displayed.">Wird aufgerufen, wenn das Kontextmenü angezeigt werden soll.</summary>
      <param name="x" vsli:raw="The horizontal screen coordinate to display the context menu at.">Die horizontale Bildschirmkoordinate, an der das Kontextmenü angezeigt werden soll.</param>
      <param name="y" vsli:raw="The vertical screen coordinate to display the context menu at.">Die vertikale Bildschirmkoordinate, an der das Kontextmenü angezeigt werden soll.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.OnCreateHandle">
      <summary vsli:raw="Called immediately after the handle for the designer has been created.">Wird unmittelbar nach Erstellen des Handles für den Designer aufgerufen.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary vsli:raw="Adjusts the set of properties the component exposes through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">Passt die Gruppe von Eigenschaften an, die die Komponente mithilfe eines <see cref="T:System.ComponentModel.TypeDescriptor" /> verfügbar macht.</summary>
      <param name="properties" vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; that contains the properties for the class of the component.">Ein <see cref="T:System.Collections.IDictionary" />, das die Eigenschaften für die Komponentenklasse enthält.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.DocumentDesigner.SelectionRules">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Forms.Design.SelectionRules&quot; /&gt; for the designer.">Ruft das <see cref="T:System.Windows.Forms.Design.SelectionRules" /> für den Designer ab.</summary>
      <returns vsli:raw="A bitwise combination of &lt;see cref=&quot;T:System.Windows.Forms.Design.SelectionRules&quot; /&gt; values.">Eine bitweise Kombination von <see cref="T:System.Windows.Forms.Design.SelectionRules" />-Werten.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.System#ComponentModel#Design#IRootDesigner#GetView(System.ComponentModel.Design.ViewTechnology)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;T:System.ComponentModel.Design.ViewTechnology&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="T:System.ComponentModel.Design.ViewTechnology" />.</summary>
      <param name="technology" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ViewTechnology&quot; /&gt; that indicates a particular view technology.">Eine <see cref="T:System.ComponentModel.Design.ViewTechnology" />, die eine bestimmte Ansichtstechnologie angibt.</param>
      <returns vsli:raw="An object that represents the view for this designer.">Ein Objekt, das die Ansicht für diesen Designer darstellt.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DocumentDesigner.System#ComponentModel#Design#IRootDesigner#SupportedTechnologies">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies" />.</summary>
      <returns vsli:raw="An array of supported &lt;see cref=&quot;T:System.ComponentModel.Design.ViewTechnology&quot; /&gt; values.">Ein Array von unterstützten <see cref="T:System.ComponentModel.Design.ViewTechnology" />-Werten.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.System#Drawing#Design#IToolboxUser#GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)" />.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to be tested for toolbox support.">Das <see cref="T:System.Drawing.Design.ToolboxItem" />, das auf Toolboxunterstützung getestet werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the tool is supported by the toolbox and can be enabled; &lt;see langword=&quot;false&quot; /&gt; if the document designer does not know how to use the tool.">
        <see langword="true" />, wenn das Tool von der Toolbox unterstützt wird und aktiviert werden kann. <see langword="false" />, wenn der Dokument-Designer das Tool nicht unterstützt.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.System#Drawing#Design#IToolboxUser#ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)&quot; /&gt;.">Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)" />.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to select.">Das auszuwählende <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Selects the specified tool.">Wählt das angegebene Tool aus.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to create a component for.">Das <see cref="T:System.Drawing.Design.ToolboxItem" />, für das eine Komponente erstellt werden soll.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.WndProc(System.Windows.Forms.Message@)">
      <summary>Verarbeitet Windows-Meldungen.</summary>
      <param name="m">Der zu verarbeitende <see cref="T:System.Windows.Forms.Message" />.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.EventHandlerService">
      <summary vsli:raw="Provides a systematic way to manage event handlers for the current document.">Stellt einen systematischen Ansatz für das Verwalten der Ereignishandler für das aktuelle Dokument bereit.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.#ctor(System.Windows.Forms.Control)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.EventHandlerService&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Design.EventHandlerService" />-Klasse.</summary>
      <param name="focusWnd" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; which is being designed.">Das <see cref="T:System.Windows.Forms.Control" />, das gerade entworfen wird.</param>
    </member>
    <member name="E:System.Windows.Forms.Design.EventHandlerService.EventHandlerChanged">
      <summary vsli:raw="Fires an OnEventHandlerChanged event.">Löst ein OnEventHandlerChanged-Ereignis aus.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.EventHandlerService.FocusWindow">
      <summary vsli:raw="Gets the control to which event handlers are attached.">Ruft das Steuerelement ab, an das Ereignishandler angefügt sind.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; which was attached through the constructor.">Das <see cref="T:System.Windows.Forms.Control" />, das durch den Konstruktor angefügt wurde.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.GetHandler(System.Type)">
      <summary vsli:raw="Gets the currently active event handler of the specified type.">Ruft den derzeit aktiven Ereignishandler des angegebenen Typs ab.</summary>
      <param name="handlerType" vsli:raw="The type of the handler to get.">Der Typ des abzurufenden Handlers.</param>
      <returns vsli:raw="An instance of the handler, or &lt;see langword=&quot;null&quot; /&gt; if there is no handler of the requested type.">Eine Instanz des Handlers, oder <see langword="null" />, wenn kein Handler des angeforderten Typs vorhanden ist.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.PopHandler(System.Object)">
      <summary vsli:raw="Pops the given handler off of the stack.">Nimmt den angegebenen Handler vom Stapel auf.</summary>
      <param name="handler" vsli:raw="The handler to remove from the stack.">Der Handler, der aus dem Stapel entfernt werden soll.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.PushHandler(System.Object)">
      <summary vsli:raw="Pushes a new event handler on the stack.">Fügt einen neuen Ereignishandler im Stapel hinzu.</summary>
      <param name="handler" vsli:raw="The handler to add to the stack.">Der Handler, der dem Stapel hinzugefügt werden soll.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.IContainsThemedScrollbarWindows">
      <summary vsli:raw="Defines a method for getting information about how the scrollbars of windows need to be themed when displayed in the Visual Studio designer.">Definiert eine Methode zum Abrufen von Informationen darüber, wie die Bildlaufleisten von Fenstern mit Design versehen werden müssen, wenn sie im Visual Studio-Designer angezeigt werden.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.IContainsThemedScrollbarWindows.ThemedScrollbarWindows">
      <summary vsli:raw="Gets an enumeration of &lt;see cref=&quot;T:System.Windows.Forms.Design.ThemedScrollbarWindow&quot; /&gt; objects that represent windows and how their scrollbars need to be themed when displayed in the Visual Studio designer.">Ruft eine Enumeration von <see cref="T:System.Windows.Forms.Design.ThemedScrollbarWindow" />-Objekten ab, die Fenster darstellen, und wie ihre Bildlaufleisten mit Design versehen werden müssen, wenn sie im Visual Studio-Designer angezeigt werden.</summary>
      <returns vsli:raw="An enumeration of objects that represent windows and how their scrollbars need to be themed when displayed in the Visual Studio designer.">Eine Enumeration von Objekten, die Fenster darstellen und wie ihre Bildlaufleisten mit Design versehen werden müssen, wenn sie im Visual Studio-Designer angezeigt werden.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ImageListCodeDomSerializer">
      <summary vsli:raw="Serializes string dictionaries.">Serialisiert Zeichenfolgenwörterbücher.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListCodeDomSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.ImageListCodeDomSerializer&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Design.ImageListCodeDomSerializer" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Deserializes the specified serialized Code Document Object Model (CodeDOM) object into an object.">Deserialisiert das angegebene serialisierte Code-Dokumentobjektmodell(CodeDOM)-Objekt in ein Objekt.</summary>
      <param name="manager" vsli:raw="A serialization manager interface that is used during the deserialization process.">Eine Schnittstelle des Serialisierungs-Managers, die während des Deserialisierungsvorgangs verwendet wird.</param>
      <param name="codeObject" vsli:raw="A serialized CodeDOM object to deserialize.">Ein serialisiertes CodeDOM-Objekt, das deserialisiert werden soll.</param>
      <returns vsli:raw="The deserialized CodeDOM object.">Das deserialisierte CodeDOM-Objekt.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;codeObject&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> oder <paramref name="codeObject" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Serializes the specified object into a Code Document Object Model (CodeDOM) object.">Serialisiert das angegebene Objekt in ein Code-Dokumentobjektmodell(CodeDOM)-Objekt.</summary>
      <param name="manager" vsli:raw="The serialization manager to use during serialization.">Der Serialisierungs-Manager, der während der Serialisierung verwendet werden soll.</param>
      <param name="value" vsli:raw="The object to serialize.">Das zu serialisierende Objekt.</param>
      <returns vsli:raw="A CodeDOM object representing the object that has been serialized.">Ein CodeDOM-Objekt, das das serialisierte Objekt darstellt.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.IMenuEditorService">
      <summary>Stellt den Zugriff auf den Menübearbeitungsdienst bereit.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.IMenuEditorService.GetMenu">
      <summary>Ruft das aktuelle Menü ab.</summary>
      <returns>Der aktuelle <see cref="T:System.Windows.Forms.Menu" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.IMenuEditorService.IsActive">
      <summary>Gibt an, ob das aktuelle Menü aktiv ist.</summary>
      <returns>
        <see langword="true" />, wenn das aktuelle Menü derzeit aktiv ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.IMenuEditorService.MessageFilter(System.Windows.Forms.Message@)">
      <summary>Erlaubt es dem Editordienst, Win32-Meldungen abzufangen.</summary>
      <param name="m">Der zu verarbeitende <see cref="T:System.Windows.Forms.Message" />.</param>
      <returns>
        <see langword="true" />, wenn die Meldung für das Steuerelement bestimmt ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.IMenuEditorService.SetMenu(System.Windows.Forms.Menu)">
      <summary>Legt die Sichtbarkeit des angegebenen Menüs auf dem Formular fest.</summary>
      <param name="menu">Das zu rendernde <see cref="T:System.Windows.Forms.Menu" />.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.IMenuEditorService.SetSelection(System.Windows.Forms.MenuItem)">
      <summary>Legt das ausgewählte Menüelement des aktuellen Menüs fest.</summary>
      <param name="item">Ein <see cref="T:System.Windows.Forms.MenuItem" />, das als das derzeit ausgewählte Menüelement festgelegt werden soll.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.MenuCommands">
      <summary vsli:raw="Defines a set of &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; fields that each correspond to a command function provided by the host environment.">Definiert eine Reihe von <see cref="T:System.ComponentModel.Design.CommandID" />-Feldern, von denen jedes einer Befehlsfunktion entspricht, die von der Hostumgebung bereitgestellt wird.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.MenuCommands.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.MenuCommands&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Design.MenuCommands" />-Klasse.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.ComponentTrayMenu">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the component tray menu.">Eine <see cref="T:System.ComponentModel.Design.CommandID" />, die verwendet werden kann, um auf das Menü für die Komponentenleiste zuzugreifen.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.ContainerMenu">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the container menu.">Eine <see cref="T:System.ComponentModel.Design.CommandID" />, die verwendet werden kann, um auf das Containermenü zuzugreifen.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.DesignerProperties">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the properties page for the designer.">Eine <see cref="T:System.ComponentModel.Design.CommandID" />, die verwendet werden kann, um auf die Eigenschaftenseite für den Designer zuzugreifen.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.EditLabel">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the edit label handler.">Eine <see cref="T:System.ComponentModel.Design.CommandID" />, die verwendet werden kann, um auf den Handler für das LabelEdit-Ereignis zuzugreifen.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyCancel">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the cancel key handler.">Eine <see cref="T:System.ComponentModel.Design.CommandID" />, die verwendet werden kann, um auf den Handler für das KeyCancel-Ereignis zuzugreifen.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyDefaultAction">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the default key handler.">Eine <see cref="T:System.ComponentModel.Design.CommandID" />, die verwendet werden kann, um auf den Handler für das KeyDefault-Ereignis zuzugreifen.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyEnd">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the end key handler.">Eine <see cref="T:System.ComponentModel.Design.CommandID" />, die verwendet werden kann, um auf den Handler für die ENDE-Taste zuzugreifen.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyHome">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the home key handler.">Eine <see cref="T:System.ComponentModel.Design.CommandID" />, die verwendet werden kann, um auf den Handler für die POS1-Taste zuzugreifen.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyInvokeSmartTag">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the smart tag invocation handler.">Eine <see cref="T:System.ComponentModel.Design.CommandID" />, die verwendet werden kann, um auf den Handler für Smarttagaufrufe zuzugreifen.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveDown">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the move down key handler.">Eine <see cref="T:System.ComponentModel.Design.CommandID" />, die verwendet werden kann, um auf den Handler für das KeyMoveDown-Ereignis zuzugreifen.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveLeft">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the move left key handler.">Eine <see cref="T:System.ComponentModel.Design.CommandID" />, die verwendet werden kann, um auf den Handler für das KeyMoveLeft-Ereignis zuzugreifen.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveRight">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the move right key handler.">Eine <see cref="T:System.ComponentModel.Design.CommandID" />, die verwendet werden kann, um auf den Handler für das KeyMoveRight-Ereignis zuzugreifen.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveUp">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the move up key handler.">Eine <see cref="T:System.ComponentModel.Design.CommandID" />, die verwendet werden kann, um auf den Handler für das KeyMoveUp-Ereignis zuzugreifen.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeDown">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the nudge down key handler.">Eine <see cref="T:System.ComponentModel.Design.CommandID" />, die verwendet werden kann, um auf den Handler für das KeyNudgeDown-Ereignis zuzugreifen.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeHeightDecrease">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the nudge height decrease key handler.">Eine <see cref="T:System.ComponentModel.Design.CommandID" />, die verwendet werden kann, um auf den Handler für das KeyNudgeHeightDecrease-Ereignis zuzugreifen.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeHeightIncrease">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the nudge height increase key handler.">Eine <see cref="T:System.ComponentModel.Design.CommandID" />, die verwendet werden kann, um auf den Handler für das KeyNudgeHeightIncrease-Ereignis zuzugreifen.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeLeft">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the nudge left key handler.">Eine <see cref="T:System.ComponentModel.Design.CommandID" />, die verwendet werden kann, um auf den Handler für das KeyNudgeLeft-Ereignis zuzugreifen.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeRight">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the nudge right key handler.">Eine <see cref="T:System.ComponentModel.Design.CommandID" />, die verwendet werden kann, um auf den Handler für das KeyNudgeRight-Ereignis zuzugreifen.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeUp">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the nudge up key handler.">Eine <see cref="T:System.ComponentModel.Design.CommandID" />, die verwendet werden kann, um auf den Handler für das KeyNudgeUp-Ereignis zuzugreifen.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeWidthDecrease">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the nudge width decrease key handler.">Eine <see cref="T:System.ComponentModel.Design.CommandID" />, die verwendet werden kann, um auf den Handler für das KeyNudgeWidthDecrease-Ereignis zuzugreifen.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeWidthIncrease">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the nudge width increase key handler.">Eine <see cref="T:System.ComponentModel.Design.CommandID" />, die verwendet werden kann, um auf den Handler für das KeyNudgeWidthIncrease-Ereignis zuzugreifen.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyReverseCancel">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the reverse cancel key handler.">Eine <see cref="T:System.ComponentModel.Design.CommandID" />, die verwendet werden kann, um auf den Handler für das KeyReverseCancel-Ereignis zuzugreifen.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySelectNext">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the select next key handler.">Eine <see cref="T:System.ComponentModel.Design.CommandID" />, die verwendet werden kann, um auf den Handler für das KeySelectNext-Ereignis zuzugreifen.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySelectPrevious">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the select previous key handler.">Eine <see cref="T:System.ComponentModel.Design.CommandID" />, die verwendet werden kann, um auf den Handler für das KeySelectPrevious-Ereignis zuzugreifen.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyShiftEnd">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the SHIFT-END key handler.">Eine <see cref="T:System.ComponentModel.Design.CommandID" />, die verwendet werden kann, um auf den Handler für die Tastenkombination UMSCHALT+ENDE zuzugreifen.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyShiftHome">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the SHIFT-HOME key handler.">Eine <see cref="T:System.ComponentModel.Design.CommandID" />, die verwendet werden kann, um auf den Handler für die Tastenkombination UMSCHALT+POS1 zuzugreifen.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeHeightDecrease">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the size height decrease key handler.">Eine <see cref="T:System.ComponentModel.Design.CommandID" />, die verwendet werden kann, um auf den Handler für das KeySizeHeightDecrease-Ereignis zuzugreifen.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeHeightIncrease">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the size height increase key handler.">Eine <see cref="T:System.ComponentModel.Design.CommandID" />, die verwendet werden kann, um auf den Handler für das KeySizeHeightIncrease-Ereignis zuzugreifen.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeWidthDecrease">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the size width decrease key handler.">Eine <see cref="T:System.ComponentModel.Design.CommandID" />, die verwendet werden kann, um auf den Handler für das KeySizeWidthDecrease-Ereignis zuzugreifen.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeWidthIncrease">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the size width increase key handler.">Eine <see cref="T:System.ComponentModel.Design.CommandID" />, die verwendet werden kann, um auf den Handler für das KeySizeWidthIncrease-Ereignis zuzugreifen.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyTabOrderSelect">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the tab order select key handler.">Eine <see cref="T:System.ComponentModel.Design.CommandID" />, die verwendet werden kann, um auf den Handler für das KeyTabOrderSelect-Ereignis zuzugreifen.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.SelectionMenu">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the selection menu.">Eine <see cref="T:System.ComponentModel.Design.CommandID" />, die verwendet werden kann, um auf das Auswahlmenü zuzugreifen.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.SetStatusRectangle">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to set the status rectangle.">Eine <see cref="T:System.ComponentModel.Design.CommandID" />, die verwendet werden kann, um den Statusbereich festzulegen.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.SetStatusText">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to set the status rectangle text.">Eine <see cref="T:System.ComponentModel.Design.CommandID" />, die verwendet werden kann, um den Text für den Statusbereich festzulegen.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.TraySelectionMenu">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the tray selection menu.">Eine <see cref="T:System.ComponentModel.Design.CommandID" />, die verwendet werden kann, um auf das Auswahlmenü für die Komponentenleiste zuzugreifen.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ParentControlDesigner">
      <summary vsli:raw="Extends the design mode behavior of a &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; that supports nested controls.">Erweitert das Entwurfsmodusverhalten eines <see cref="T:System.Windows.Forms.Control" />, das geschachtelte Steuerelemente unterstützt.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.ParentControlDesigner&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.AddPaddingSnapLines(System.Collections.ArrayList@)">
      <summary vsli:raw="Adds padding snaplines.">Fügt Abstandsausrichtungslinien hinzu.</summary>
      <param name="snapLines" vsli:raw="An &lt;see cref=&quot;T:System.Collections.ArrayList&quot; /&gt; that contains &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; objects.">Eine <see cref="T:System.Collections.ArrayList" />, die <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />-Objekte enthält.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.AllowControlLasso">
      <summary vsli:raw="Gets a value indicating whether selected controls will be re-parented.">Ruft einen Wert ab, der angibt, ob ausgewählte Steuerelemente wieder untergeordnet werden.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the controls that were selected by lassoing on the designer's surface will be re-parented to this designer's control.">
        <see langword="true" />, wenn die Steuerelemente, die durch Lassoauswahl auf der Oberfläche des Designers ausgewählt wurden, wieder diesem Steuerelement des Designers untergeordnet werden.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.AllowGenericDragBox">
      <summary vsli:raw="Gets a value indicating whether a generic drag box should be drawn when dragging a toolbox item over the designer's surface.">Ruft einen Wert ab, der angibt, ob ein generisches Ziehfeld gezeichnet werden soll, wenn ein Toolboxelement über die Designeroberfläche gezogen wird.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a generic drag box should be drawn when dragging a toolbox item over the designer's surface; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />, wenn ein generisches Ziehfeld gezeichnet werden soll, wenn ein Toolboxelement über die Designeroberfläche gezogen wird, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.AllowSetChildIndexOnDrop">
      <summary vsli:raw="Gets a value indicating whether the z-order of dragged controls should be maintained when dropped on a &lt;see cref=&quot;T:System.Windows.Forms.Design.ParentControlDesigner&quot; /&gt;.">Ruft einen Wert ab, der angibt, ob die Z-Anordnung von gezogenen Steuerelementen beim Ablegen in einem <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" /> beibehalten werden soll.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the z-order of dragged controls should be maintained when dropped on a &lt;see cref=&quot;T:System.Windows.Forms.Design.ParentControlDesigner&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Z-Anordnung von gezogenen Steuerelementen beim Ablegen in einem <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" /> beibehalten werden soll, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CanAddComponent(System.ComponentModel.IComponent)">
      <summary vsli:raw="Called when a component is added to the parent container.">Wird aufgerufen, wenn dem übergeordneten Container eine Komponente hinzugefügt wird.</summary>
      <param name="component" vsli:raw="The component to test for errors.">Die Komponente, die auf Fehler getestet werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;component&quot; /&gt; can be added; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="component" /> hinzugefügt werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CanParent(System.Windows.Forms.Control)">
      <summary vsli:raw="Indicates whether the specified control can be a child of the control managed by this designer.">Gibt an, ob das angegebene Steuerelement dem Steuerelement untergeordnet sein kann, das von diesem Designer verwaltet wird.</summary>
      <param name="control" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; to test.">Der zu überprüfende <see cref="T:System.Windows.Forms.Control" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified control can be a child of the control managed by this designer; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das angegebene Steuerelement dem von diesem Designer verwalteten Steuerelement untergeordnet sein kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CanParent(System.Windows.Forms.Design.ControlDesigner)">
      <summary vsli:raw="Indicates whether the control managed by the specified designer can be a child of the control managed by this designer.">Gibt an, ob das vom angegebenen Designer verwaltete Steuerelement ein untergeordnetes Element des von diesem Designer verwalteten Steuerelements sein kann.</summary>
      <param name="controlDesigner" vsli:raw="The designer for the control to test.">Der Designer für das zu testende Steuerelement.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the control managed by the specified designer can be a child of the control managed by this designer; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das vom angegebenen Designer verwaltete Steuerelement dem von diesem Designer verwalteten Steuerelement untergeordnet sein kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Creates a component or control from the specified tool and adds it to the current design document.">Erstellt eine Komponente oder ein Steuerelement aus dem angegebenen Tool und fügt diese(s) dem aktuellen Entwurfsdokument hinzu.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to create a component from.">Das <see cref="T:System.Drawing.Design.ToolboxItem" />, aus dem eine Komponente erstellt werden soll.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem,System.Drawing.Point)">
      <summary vsli:raw="Creates a component or control from the specified tool and adds it to the current design document at the specified location.">Erstellt eine Komponente oder ein Steuerelement aus dem angegebenen Tool und fügt diese(s) dem aktuellen Entwurfsdokument an der angegebenen Position hinzu.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to create a component from.">Das <see cref="T:System.Drawing.Design.ToolboxItem" />, aus dem eine Komponente erstellt werden soll.</param>
      <param name="location" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt;, in design-time view screen coordinates, at which to center the component.">Der <see cref="T:System.Drawing.Point" />, an dem die Komponente ausgerichtet werden soll, in Bildschirmkoordinaten der Entwurfszeitansicht.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem,System.Drawing.Rectangle)">
      <summary vsli:raw="Creates a component or control from the specified tool and adds it to the current design document within the bounds of the specified rectangle.">Erstellt eine Komponente oder ein Steuerelement aus dem angegebenen Tool und fügt diese(s) dem aktuellen Entwurfsdokument innerhalb der Grenzen des angegebenen Rechtecks hinzu.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to create a component from.">Das <see cref="T:System.Drawing.Design.ToolboxItem" />, aus dem eine Komponente erstellt werden soll.</param>
      <param name="bounds" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; indicating the location and size for the component created from the tool. The &lt;see cref=&quot;P:System.Drawing.Rectangle.X&quot; /&gt; and &lt;see cref=&quot;P:System.Drawing.Rectangle.Y&quot; /&gt; values of the &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; indicate the design-time view screen coordinates of the upper-left corner of the component.">Ein <see cref="T:System.Drawing.Rectangle" />, das die Position und die Größe für die aus dem Tool erstellte Komponente angibt. Der <see cref="P:System.Drawing.Rectangle.X" />-Wert und der <see cref="P:System.Drawing.Rectangle.Y" />-Wert des <see cref="T:System.Drawing.Rectangle" /> geben die Bildschirmkoordinaten der linken oberen Ecke der Komponente zur Entwurfszeitansicht an.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateToolCore(System.Drawing.Design.ToolboxItem,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary vsli:raw="Provides core functionality for all the &lt;see cref=&quot;M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem)&quot; /&gt; methods.">Stellt Kernfunktionen für alle <see cref="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem)" />-Methoden bereit.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to create a component from.">Das <see cref="T:System.Drawing.Design.ToolboxItem" />, aus dem eine Komponente erstellt werden soll.</param>
      <param name="x" vsli:raw="The horizontal position, in design-time view coordinates, of the location of the left edge of the tool, if a size is specified; the horizontal position of the center of the tool, if no size is specified.">Die horizontale Position des linken Randes des Tools in Koordinaten der Entwurfszeitansicht, sofern eine Größe angegeben wurde, bzw. die horizontale Position der Mitte des Tools, wenn keine Größe angegeben wurde.</param>
      <param name="y" vsli:raw="The vertical position, in design-time view coordinates, of the location of the top edge of the tool, if a size is specified; the vertical position of the center of the tool, if no size is specified.">Die vertikale Position des oberen Randes des Tools in Koordinaten der Entwurfszeitansicht, sofern eine Größe angegeben wurde, bzw. die vertikale Position der Mitte des Tools, wenn keine Größe angegeben wurde.</param>
      <param name="width" vsli:raw="The width of the tool. This parameter is ignored if the &lt;paramref name=&quot;hasSize&quot; /&gt; parameter is set to &lt;see langword=&quot;false&quot; /&gt;.">Die Breite des Tools. Dieser Parameter wird ignoriert, wenn der <paramref name="hasSize" />-Parameter auf <see langword="false" /> festgelegt ist.</param>
      <param name="height" vsli:raw="The height of the tool. This parameter is ignored if the &lt;paramref name=&quot;hasSize&quot; /&gt; parameter is set to &lt;see langword=&quot;false&quot; /&gt;.">Die Höhe des Tools. Dieser Parameter wird ignoriert, wenn der <paramref name="hasSize" />-Parameter auf <see langword="false" /> festgelegt ist.</param>
      <param name="hasLocation" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a location for the component is specified; &lt;see langword=&quot;false&quot; /&gt; if the component is to be positioned in the center of the currently selected control.">
        <see langword="true" />, wenn eine Position für die Komponente festgelegt ist, <see langword="false" />, wenn die Komponente in der Mitte des derzeit ausgewählten Steuerelements positioniert werden soll.</param>
      <param name="hasSize" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a size for the component is specified; &lt;see langword=&quot;false&quot; /&gt; if the default height and width values for the component are to be used.">
        <see langword="true" />, wenn eine Größe für die Komponente festgelegt ist, <see langword="false" />, wenn für die Komponente die Standardwerte für Breite und Höhe verwendet werden sollen.</param>
      <returns vsli:raw="An array of components created from the tool.">Ein Array von Komponenten, die aus dem Tool erstellt wurden.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.DefaultControlLocation">
      <summary vsli:raw="Gets the default location for a control added to the designer.">Ruft die Standardposition für ein Steuerelement ab, das dem Designer hinzugefügt wurde.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; that indicates the default location for a control added to the designer.">Ein <see cref="T:System.Drawing.Point" />, der die Standardposition für ein Steuerelement angibt, das dem Designer hinzugefügt wurde.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Windows.Forms.Design.ParentControlDesigner&quot; /&gt;, and optionally releases the managed resources.">Gibt die von <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.DrawGrid">
      <summary vsli:raw="Gets or sets a value indicating whether a grid should be drawn on the control for this designer.">Ruft einen Wert ab, der angibt, ob für diesen Designer ein Raster auf dem Steuerelement gezeichnet werden soll, oder legt diesen fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a grid should be drawn on the control in the designer; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn im Designer ein Raster auf dem Steuerelement gezeichnet werden soll, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.EnableDragRect">
      <summary vsli:raw="Gets a value indicating whether drag rectangles are drawn by the designer.">Ruft einen Wert ab, der angibt, ob vom Designer Ziehrechtecke gezeichnet werden.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if drag rectangles are drawn; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />, wenn Ziehrechtecke gezeichnet werden, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetControl(System.Object)">
      <summary vsli:raw="Gets the control from the designer of the specified component.">Ruft das Steuerelement vom Designer der angegebenen Komponente ab.</summary>
      <param name="component" vsli:raw="The component to retrieve the control for.">Die Komponente, für die das Steuerelement abgerufen wird.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; that the specified component belongs to.">Das <see cref="T:System.Windows.Forms.Control" />, zu dem die angegebene Komponente gehört.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetControlGlyph(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary vsli:raw="Gets a body glyph that represents the bounds of the control.">Ruft ein Inhaltssymbol ab, das die Begrenzungen des Steuerelements darstellt.</summary>
      <param name="selectionType" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphSelectionType&quot; /&gt; value that specifies the selection state.">Ein <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" />-Wert, der den Auswahlzustand angibt.</param>
      <returns vsli:raw="A body glyph that represents the bounds of the control.">Ein Inhaltssymbol, das die Begrenzungen des Steuerelements darstellt.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetGlyphs(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary vsli:raw="Gets a collection of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects representing the selection borders and grab handles for a standard control.">Ruft eine Auflistung von <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />-Objekt ab, die die Markierungsrahmen und Ziehpunkte für ein Standardsteuerelement darstellen.</summary>
      <param name="selectionType" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphSelectionType&quot; /&gt; value that specifies the selection state.">Ein <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" />-Wert, der den Auswahlzustand angibt.</param>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects.">Eine Auflistung von <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />-Objekten.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetParentForComponent(System.ComponentModel.IComponent)">
      <summary vsli:raw="Used by deriving classes to determine if it returns the control being designed or some other &lt;see cref=&quot;T:System.ComponentModel.Container&quot; /&gt; while adding a component to it.">Wird von abgeleiteten Klassen beim Hinzufügen einer Komponente verwendet, um zu bestimmen, ob das gerade entworfene Steuerelement oder ein anderer <see cref="T:System.ComponentModel.Container" /> zurückgegeben wird.</summary>
      <param name="component" vsli:raw="The component for which to retrieve the parent &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt;.">Die Komponente, deren übergeordnetes <see cref="T:System.Windows.Forms.Control" /> abgerufen werden soll.</param>
      <returns vsli:raw="The parent &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; for the component.">Das übergeordnete <see cref="T:System.Windows.Forms.Control" /> der Komponente.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetUpdatedRect(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Boolean)">
      <summary vsli:raw="Updates the position of the specified rectangle, adjusting it for grid alignment if grid alignment mode is enabled.">Aktualisiert die Position des angegebenen Rechtecks, wobei dieses am Raster ausgerichtet wird, sofern der entsprechende Modus aktiviert ist.</summary>
      <param name="originalRect" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; indicating the initial position of the component being updated.">Ein <see cref="T:System.Drawing.Rectangle" />, das die Ausgangsposition der gerade aktualisierten Komponente angibt.</param>
      <param name="dragRect" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; indicating the new position of the component.">Ein <see cref="T:System.Drawing.Rectangle" />, das die neue Position der Komponente angibt.</param>
      <param name="updateSize" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to update the size of the rectangle, if there has been any change; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um die Größe des Rechtecks zu aktualisierten, sofern eine Änderung vorliegt, andernfalls <see langword="false" />.</param>
      <returns vsli:raw="A rectangle indicating the position of the component in design-time view screen coordinates. If no changes have been made, this method returns the original rectangle.">Ein Rechteck, das die Position der Komponente in Bildschirmkoordinaten der Entwurfszeitansicht angibt. Wenn keine Änderungen vorgenommen wurden, gibt diese Methode das ursprüngliche Rechteck zurück.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.GridSize">
      <summary vsli:raw="Gets or sets the size of each square of the grid that is drawn when the designer is in grid draw mode.">Wenn sich der Designer im Modus für Rasterzeichnung befindet, wird hiermit die Größe jedes Quadrats des gezeichneten Rasters abgerufen oder festgelegt.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Size&quot; /&gt; that represents the size of each square of the grid drawn on a form or user control.">Eine <see cref="T:System.Drawing.Size" />, die die Größe jedes Quadrats des Rasters darstellt, das auf einem Formular- oder Benutzersteuerelement gezeichnet wurde.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see cref=&quot;T:System.Drawing.Size&quot; /&gt; is outside the allowed range for &lt;see cref=&quot;P:System.Windows.Forms.Design.ParentControlDesigner.GridSize&quot; /&gt;. The default minimum value is 2, and the default maximum value is 200.">
        <see cref="T:System.Drawing.Size" /> liegt außerhalb des zulässigen Bereichs für <see cref="P:System.Windows.Forms.Design.ParentControlDesigner.GridSize" />. In der Standardeinstellung ist der Mindestwert 2 und der maximale Wert 200.</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary vsli:raw="Initializes the designer with the specified component.">Initialisiert den Designer mit der angegebenen Komponente.</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to associate with the designer.">Die dem Designer zuzuordnende <see cref="T:System.ComponentModel.IComponent" />.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.InitializeNewComponent(System.Collections.IDictionary)">
      <summary vsli:raw="Initializes a newly created component.">Initialisiert eine neu erstellte Komponente.</summary>
      <param name="defaultValues" vsli:raw="A name/value dictionary of default values to apply to properties. May be &lt;see langword=&quot;null&quot; /&gt; if no default values are specified.">Ein Name-Wert-Wörterbuch der auf Eigenschaften anzuwendenden Standardwerte. Kann <see langword="null" /> sein, wenn keine Standardwerte angegeben werden.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.InvokeCreateTool(System.Windows.Forms.Design.ParentControlDesigner,System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Creates a tool from the specified &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Erstellt ein Tool aus dem angegebenen <see cref="T:System.Drawing.Design.ToolboxItem" />.</summary>
      <param name="toInvoke" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.ParentControlDesigner&quot; /&gt; that the tool is to be used with.">Der mit dem Tool zu verwendende <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" />.</param>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to create a tool from.">Das <see cref="T:System.Drawing.Design.ToolboxItem" />, aus dem ein Tool erstellt werden soll.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.MouseDragTool">
      <summary vsli:raw="Gets a value indicating whether the designer has a valid tool during a drag operation.">Ruft einen Wert ab, der angibt, ob der Designer während eines Ziehvorgangs über ein gültiges Tool verfügt.</summary>
      <returns vsli:raw="The tool being dragged, if creating a component, or &lt;see langword=&quot;null&quot; /&gt; if there is no tool.">Das beim Erstellen einer Komponente gezogene Tool, oder <see langword="null" />, wenn kein Tool vorhanden ist.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragComplete(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Called in order to clean up a drag-and-drop operation.">Wird aufgerufen, um einen Drag &amp; Drop-Vorgang zu bereinigen.</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">Ein <see cref="T:System.Windows.Forms.DragEventArgs" />, das Daten für das Ereignis bereitstellt.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Called when a drag-and-drop object is dropped onto the control designer view.">Wird aufgerufen, wenn ein Drag &amp; Drop-Objekt auf der Ansicht des Steuerelement-Designers abgelegt wird.</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">Ein <see cref="T:System.Windows.Forms.DragEventArgs" />, das Daten für das Ereignis bereitstellt.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Called when a drag-and-drop operation enters the control designer view.">Wird aufgerufen, wenn ein Drag &amp; Drop-Vorgang in der Ansicht des Steuerelement-Designers eintritt.</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">Ein <see cref="T:System.Windows.Forms.DragEventArgs" />, das Daten für das Ereignis bereitstellt.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragLeave(System.EventArgs)">
      <summary vsli:raw="Called when a drag-and-drop operation leaves the control designer view.">Wird aufgerufen, wenn ein Drag &amp; Drop-Vorgang in der Ansicht des Steuerelement-Designers verlässt.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that provides data for the event.">Ein <see cref="T:System.EventArgs" />, das Daten für das Ereignis bereitstellt.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Called when a drag-and-drop object is dragged over the control designer view.">Wird aufgerufen, wenn ein Drag &amp; Drop-Objekt über die Ansicht des Steuerelement-Designers gezogen wird.</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">Ein <see cref="T:System.Windows.Forms.DragEventArgs" />, das Daten für das Ereignis bereitstellt.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnMouseDragBegin(System.Int32,System.Int32)">
      <summary vsli:raw="Called in response to the left mouse button being pressed and held while over the component.">Wird als Reaktion auf das Drücken und Halten der linken Maustaste aufgerufen, während sich der Mauszeiger über der Komponente befindet.</summary>
      <param name="x" vsli:raw="The x-coordinate of the mouse in screen coordinates.">Die x-Koordinate der Maus in Bildschirmkoordinaten.</param>
      <param name="y" vsli:raw="The y-coordinate of the mouse in screen coordinates.">Die y-Koordinate der Maus in Bildschirmkoordinaten.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnMouseDragEnd(System.Boolean)">
      <summary vsli:raw="Called at the end of a drag-and-drop operation to complete or cancel the operation.">Wird am Ende eines Drag &amp; Drop-Vorgangs aufgerufen, um diesen abzuschließen oder abzubrechen.</summary>
      <param name="cancel" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to cancel the drag operation; &lt;see langword=&quot;false&quot; /&gt; to commit it.">
        <see langword="true" />, um den Ziehvorgang abzubrechen, <see langword="false" />, um ihn zu übernehmen.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnMouseDragMove(System.Int32,System.Int32)">
      <summary vsli:raw="Called for each movement of the mouse during a drag-and-drop operation.">Wird für jede Bewegung der Maus während eines Drag &amp; Drop-Vorgangs aufgerufen.</summary>
      <param name="x" vsli:raw="The x-coordinate of the mouse in screen coordinates.">Die x-Koordinate der Maus in Bildschirmkoordinaten.</param>
      <param name="y" vsli:raw="The y-coordinate of the mouse in screen coordinates.">Die y-Koordinate der Maus in Bildschirmkoordinaten.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnPaintAdornments(System.Windows.Forms.PaintEventArgs)">
      <summary vsli:raw="Called when the control that the designer is managing has painted its surface so the designer can paint any additional adornments on top of the control.">Wird aufgerufen, wenn die Oberfläche des vom Designer verwalteten Steuerelements gezeichnet ist, sodass der Designer die Darstellung des Steuerelements bearbeiten kann.</summary>
      <param name="pe" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.PaintEventArgs&quot; /&gt; that provides data for the event.">Ein <see cref="T:System.Windows.Forms.PaintEventArgs" />, das Daten für das Ereignis bereitstellt.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnSetCursor">
      <summary vsli:raw="Provides an opportunity to change the current mouse cursor.">Ermöglicht die Änderung des aktuellen Mauszeigers.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary vsli:raw="Adjusts the set of properties the component will expose through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">Passt die Gruppe von Eigenschaften an, die die Komponente mithilfe eines <see cref="T:System.ComponentModel.TypeDescriptor" /> verfügbar macht.</summary>
      <param name="properties" vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; that contains the properties for the class of the component.">Ein <see cref="T:System.Collections.IDictionary" />, das die Eigenschaften für die Komponentenklasse enthält.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.SnapLines">
      <summary vsli:raw="Gets a list of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; objects representing significant alignment points for this control.">Ruft eine Liste mit <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />-Objekten ab, die signifikante Ausrichtungspunkte für dieses Steuerelement darstellen.</summary>
      <returns vsli:raw="A list of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; objects representing significant alignment points for this control.">Eine Liste mit <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />-Objekten, die signifikante Ausrichtungspunkte für dieses Steuerelement darstellen.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ScrollableControlDesigner">
      <summary vsli:raw="Base designer class for extending the design mode behavior of a &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; which should receive scroll messages.">Die Basisdesignerklasse für die Erweiterung des Entwurfsmodusverhaltens eines <see cref="T:System.Windows.Forms.Control" />, das Bildlaufmeldungen empfangen sollte.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ScrollableControlDesigner.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.ScrollableControlDesigner&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Design.ScrollableControlDesigner" />-Klasse.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ScrollableControlDesigner.GetHitTest(System.Drawing.Point)">
      <summary vsli:raw="Indicates whether a mouse click at the specified point should be handled by the control.">Gibt an, ob ein Mausklick auf den angegebenen Punkt von dem Steuerelement behandelt werden soll.</summary>
      <param name="pt" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; indicating the position at which the mouse was clicked, in screen coordinates.">Ein <see cref="T:System.Drawing.Point" />, der die Position, an der der Mausklick stattfand, in Bildschirmkoordinaten angibt.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a click at the specified point is to be handled by the control; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn ein Klick auf den angegebenen Punkt vom Steuerelement behandelt werden soll, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ScrollableControlDesigner.WndProc(System.Windows.Forms.Message@)">
      <summary vsli:raw="Processes Windows messages and passes WM_HSCROLL and WM_VSCROLL messages to the control at design time.">Verarbeitet Windows-Meldungen und übergibt WM_HSCROLL- und WM_VSCROLL-Meldungen zur Entwurfszeit an das Steuerelement.</summary>
      <param name="m" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Message&quot; /&gt; to process.">Der zu verarbeitende <see cref="T:System.Windows.Forms.Message" />.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.SelectionRules">
      <summary vsli:raw="Defines identifiers that are used to indicate selection rules for a component.">Definiert Bezeichner, die verwendet werden, um Auswahlregeln für eine Komponente anzugeben.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.AllSizeable">
      <summary vsli:raw="Indicates the component supports sizing in all directions.">Gibt an, dass die Komponente in jede Richtung vergrößert bzw. verkleinert werden kann.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.BottomSizeable">
      <summary vsli:raw="Indicates the component supports resize from the bottom.">Gibt an, dass die Größe der Komponente vom unteren Rand her verändert werden kann.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.LeftSizeable">
      <summary vsli:raw="Indicates the component supports resize from the left.">Gibt an, dass die Größe der Komponente vom linken Rand her verändert werden kann.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.Locked">
      <summary vsli:raw="Indicates the component is locked to its container. Overrides the &lt;see cref=&quot;F:System.Windows.Forms.Design.SelectionRules.Moveable&quot; /&gt;, &lt;see cref=&quot;F:System.Windows.Forms.Design.SelectionRules.AllSizeable&quot; /&gt;, &lt;see cref=&quot;F:System.Windows.Forms.Design.SelectionRules.BottomSizeable&quot; /&gt;, &lt;see cref=&quot;F:System.Windows.Forms.Design.SelectionRules.LeftSizeable&quot; /&gt;, &lt;see cref=&quot;F:System.Windows.Forms.Design.SelectionRules.RightSizeable&quot; /&gt;, and &lt;see cref=&quot;F:System.Windows.Forms.Design.SelectionRules.TopSizeable&quot; /&gt; bit flags of this enumeration.">Gibt an, dass die Komponente auf ihren Container beschränkt ist. Überschreibt die Bitflags <see cref="F:System.Windows.Forms.Design.SelectionRules.Moveable" />, <see cref="F:System.Windows.Forms.Design.SelectionRules.AllSizeable" />, <see cref="F:System.Windows.Forms.Design.SelectionRules.BottomSizeable" />, <see cref="F:System.Windows.Forms.Design.SelectionRules.LeftSizeable" />, <see cref="F:System.Windows.Forms.Design.SelectionRules.RightSizeable" /> und <see cref="F:System.Windows.Forms.Design.SelectionRules.TopSizeable" /> dieser Enumeration.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.Moveable">
      <summary vsli:raw="Indicates the component supports a location property that allows it to be moved on the screen.">Gibt an, dass die Komponente eine Positionseigenschft unterstützt, die das Verschieben auf dem Bildschirm ermöglicht.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.None">
      <summary vsli:raw="Indicates no special selection attributes.">Gibt an, dass keine besonderen Auswahlattribute vorliegen.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.RightSizeable">
      <summary vsli:raw="Indicates the component supports resize from the right.">Gibt an, dass die Größe der Komponente vom rechten Rand her verändert werden kann.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.TopSizeable">
      <summary vsli:raw="Indicates the component supports resize from the top.">Gibt an, dass die Größe der Komponente vom oberen Rand her verändert werden kann.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.Visible">
      <summary vsli:raw="Indicates the component has some form of visible user interface and the selection service is drawing a selection border around this user interface. If a selected component has this rule set, you can assume that the component implements &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; and that it is associated with a corresponding designer instance.">Gibt an, dass die Komponente über eine sichtbare Benutzeroberfläche verfügt und der Auswahldienst einen Markierungsrahmen um diese Benutzeroberfläche zieht. Wenn diese Regel für eine ausgewählte Komponente festgelegt ist, können Sie davon ausgehen, dass die Komponente <see cref="T:System.ComponentModel.IComponent" /> implementiert und einer entsprechenden Designerinstanz zugeordnet ist.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ThemedScrollbarMode">
      <summary vsli:raw="A value that indicates whether the scrollbars of a window and its children will be themed when displayed in the Visual Studio designer.">Ein Wert, der angibt, ob die Bildlaufleisten eines Fensters und der untergeordneten Elemente mit Design versehen sind, wenn sie im Visual Studio-Designer angezeigt werden.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarMode.All">
      <summary vsli:raw="The window and all of its children will have themed scrollbars.">Das Fenster und alle seine untergeordneten Elemente verfügen über Bildlaufleisten mit Design.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarMode.None">
      <summary vsli:raw="The window and all of its children will not be themed.">Das Fenster und alle untergeordneten Elemente haben kein Design.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarMode.OnlyTopLevel">
      <summary vsli:raw="The window will have themed scrollbars but all of its children will not be themed.">Das Fenster verfügt über Bildlaufleisten mit Design, jedoch alle untergeordneten Elemente haben kein Design.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ThemedScrollbarWindow">
      <summary vsli:raw="Represents a window and a value that indicates how its scrollbars should be themed when displayed in the Visual Studio designer.">Stellt ein Fenster und einen Wert dar, der angibt, wie die Bildlaufleisten mit Design versehen werden sollten, wenn sie im Visual Studio-Designer angezeigt werden.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarWindow.Handle">
      <summary vsli:raw="The window handle.">Das Fensterhandle.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarWindow.Mode">
      <summary vsli:raw="A value that indicates how the window scrollbars should be themed when displayed in the Visual Studio designer.">Ein Wert, der angibt, wie das Design der Fensterbildlaufleisten sein sollte, wenn sie im Visual Studio-Designer angezeigt werden.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService">
      <summary vsli:raw="Provides access to get and set option values for a Windows Forms designer.">Ermöglicht den Zugriff zum Abrufen und Festlegen von Optionswerten für einen Windows Forms-Designer.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.WindowsFormsDesignerOptionService.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService" />-Klasse.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.WindowsFormsDesignerOptionService.CompatibilityOptions">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Forms.Design.DesignerOptions&quot; /&gt; exposed by the &lt;see cref=&quot;T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService&quot; /&gt;.">Ruft die vom <see cref="T:System.Windows.Forms.Design.DesignerOptions" /> verfügbar gemachten <see cref="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService" /> ab.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.DesignerOptions&quot; /&gt; exposed by the &lt;see cref=&quot;T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService&quot; /&gt;.">Die vom <see cref="T:System.Windows.Forms.Design.DesignerOptions" /> verfügbar gemachten <see cref="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.WindowsFormsDesignerOptionService.PopulateOptionCollection(System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection&quot; /&gt;.">Füllt eine <see cref="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" /> auf.</summary>
      <param name="options" vsli:raw="The collection to populate.">Die zu füllende Auflistung.</param>
    </member>
  </members>
</doc>