<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Xaml</name>
  </assembly>
  <members>
    <member name="T:System.Windows.Markup.AcceptedMarkupExtensionExpressionTypeAttribute">
      <summary vsli:raw="Notates types for legacy reporting of XAML markup extension characteristics.">Definisce i tipi per i rapporti legacy relativi alle caratteristiche di estensione di markup XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.AcceptedMarkupExtensionExpressionTypeAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.AcceptedMarkupExtensionExpressionTypeAttribute&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Markup.AcceptedMarkupExtensionExpressionTypeAttribute" />.</summary>
      <param name="type" vsli:raw="The return type that this attribute reports.">Tipo restituito che questo attributo segnala.</param>
    </member>
    <member name="P:System.Windows.Markup.AcceptedMarkupExtensionExpressionTypeAttribute.Type">
      <summary vsli:raw="Gets or sets the return type that this attribute reports.">Ottiene o imposta il tipo restituito che questo attributo segnala.</summary>
      <returns vsli:raw="The return type that this attribute reports.">Tipo restituito che questo attributo segnala.</returns>
    </member>
    <member name="T:System.Windows.Markup.AmbientAttribute">
      <summary vsli:raw="Specifies that a property or type should be treated as ambient. The ambient concept relates to how XAML processors determine type owners of members.">Specifica che una proprietà o un tipo deve essere considerato di ambiente. l concetto di ambiente si riferisce al modo in cui i processori XAML determinano i proprietari dei tipi dei membri.</summary>
    </member>
    <member name="M:System.Windows.Markup.AmbientAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.AmbientAttribute&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Markup.AmbientAttribute" />.</summary>
    </member>
    <member name="T:System.Windows.Markup.ArrayExtension">
      <summary vsli:raw="Implements &lt;see langword=&quot;x:Array&quot; /&gt; support for .NET XAML Services.">Implementa il supporto <see langword="x:Array" /> per i servizi XAML di .NET Framework.</summary>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ArrayExtension&quot; /&gt; class. This creates an empty array.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Markup.ArrayExtension" />. Crea una matrice vuota.</summary>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.#ctor(System.Array)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ArrayExtension&quot; /&gt; class based on the provided raw array.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Markup.ArrayExtension" /> in base alla matrice non elaborata fornita.</summary>
      <param name="elements" vsli:raw="The array content that populates the created array.">Contenuto della matrice che popola la matrice creata.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;elements&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="elements" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ArrayExtension&quot; /&gt; class and initializes the type of the array.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Markup.ArrayExtension" /> e inizializza il tipo della matrice.</summary>
      <param name="arrayType" vsli:raw="The object type of the new array.">Tipo di oggetto della nuova matrice.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;arrayType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="arrayType" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.AddChild(System.Object)">
      <summary vsli:raw="Appends the supplied object to the end of the array.">Aggiunge l'oggetto fornito alla fine della matrice.</summary>
      <param name="value" vsli:raw="The object to add to the end of the array.">Oggetto da aggiungere alla fine della matrice.</param>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.AddText(System.String)">
      <summary vsli:raw="Adds a text node as a new array item.">Aggiunge un nodo testo come nuovo elemento di matrice.</summary>
      <param name="text" vsli:raw="The text to add to the end of the array.">Testo da aggiungere alla fine della matrice.</param>
    </member>
    <member name="P:System.Windows.Markup.ArrayExtension.Items">
      <summary vsli:raw="Gets the contents of the array. Settable in XAML through XAML collection syntax.">Ottiene il contenuto della matrice. Il valore può essere impostato in XAML tramite la sintassi delle raccolte XAML.</summary>
      <returns vsli:raw="The array contents.">Contenuto della matrice.</returns>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.ProvideValue(System.IServiceProvider)">
      <summary vsli:raw="Returns an array that is sized to the number of objects supplied in the &lt;see cref=&quot;P:System.Windows.Markup.ArrayExtension.Items&quot; /&gt; values.">Restituisce una matrice dimensionata in base al numero di oggetti forniti nei valori <see cref="P:System.Windows.Markup.ArrayExtension.Items" />.</summary>
      <param name="serviceProvider" vsli:raw="An object that can provide services for the markup extension.">Oggetto che può fornire servizi per l'estensione di markup.</param>
      <returns vsli:raw="The created array, or null.">Matrice creata o null.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Processed an array that did not provide a valid &lt;see cref=&quot;P:System.Windows.Markup.ArrayExtension.Type&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; There is a type mismatch between the declared &lt;see cref=&quot;P:System.Windows.Markup.ArrayExtension.Type&quot; /&gt; of the array and one or more of its &lt;see cref=&quot;P:System.Windows.Markup.ArrayExtension.Items&quot; /&gt; values.">Ha elaborato una matrice che non ha fornito un valido <see cref="P:System.Windows.Markup.ArrayExtension.Type" />.  
-oppure- 
Non c'è un tipo corrispondente tra il <see cref="P:System.Windows.Markup.ArrayExtension.Type" /> dichiarato dalla matrice e uno o più dei valori <see cref="P:System.Windows.Markup.ArrayExtension.Items" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.ArrayExtension.Type">
      <summary vsli:raw="Gets or sets the type of array to be created when calling &lt;see cref=&quot;M:System.Windows.Markup.ArrayExtension.ProvideValue(System.IServiceProvider)&quot; /&gt;.">Ottiene o imposta il tipo di matrice da creare quando si chiama <see cref="M:System.Windows.Markup.ArrayExtension.ProvideValue(System.IServiceProvider)" />.</summary>
      <returns vsli:raw="The type of the array.">Tipo della matrice</returns>
    </member>
    <member name="T:System.Windows.Markup.ConstructorArgumentAttribute">
      <summary vsli:raw="Specifies that an object can be initialized by using a non-parameterless constructor syntax, and that a property of the specified name supplies construction information.  This information is primarily for XAML serialization.">Specifica che un oggetto può essere inizializzato mediante una sintassi del costruttore non senza parametri e che una proprietà con il nome specificato fornisce informazioni sulla costruzione.  Queste informazioni sono utili principalmente per la serializzazione XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.ConstructorArgumentAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ConstructorArgumentAttribute&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Markup.ConstructorArgumentAttribute" />.</summary>
      <param name="argumentName" vsli:raw="The name of the constructor that will initialize the associated property.">Nome del costruttore che inizializzerà la proprietà associata.</param>
    </member>
    <member name="P:System.Windows.Markup.ConstructorArgumentAttribute.ArgumentName">
      <summary vsli:raw="Gets the name parameter of the constructor that will initialize the associated property.">Ottiene il parametro del nome del costruttore che inizializzerà la proprietà associata.</summary>
      <returns vsli:raw="The name of the constructor. Assuming CLR backing, this corresponds to the &lt;see cref=&quot;P:System.Reflection.ParameterInfo.Name&quot; /&gt; of the relevant constructor parameter.">Nome del costruttore. Presupponendo il supporto CLT, corrisponde all'oggetto <see cref="P:System.Reflection.ParameterInfo.Name" /> del parametro del costruttore pertinente.</returns>
    </member>
    <member name="T:System.Windows.Markup.ContentPropertyAttribute">
      <summary vsli:raw="Indicates which property of a type is the XAML content property. A XAML processor uses this information when processing XAML child elements of XAML representations of the attributed type.">Indica quale proprietà di un tipo è la proprietà di contenuto XAML. Un processore XAML usa queste informazioni durante l'elaborazione degli elementi figlio XAML delle rappresentazioni XAML del tipo con attributo.</summary>
    </member>
    <member name="M:System.Windows.Markup.ContentPropertyAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ContentPropertyAttribute&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Markup.ContentPropertyAttribute" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.ContentPropertyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ContentPropertyAttribute&quot; /&gt; class, by using the specified name.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Markup.ContentPropertyAttribute" /> usando il nome specificato.</summary>
      <param name="name" vsli:raw="The property name for the property that is the content property.">Nome della proprietà che è la proprietà di contenuto.</param>
    </member>
    <member name="P:System.Windows.Markup.ContentPropertyAttribute.Name">
      <summary vsli:raw="Gets the name of the property that is the content property.">Ottiene il nome della proprietà che è la proprietà di contenuto.</summary>
      <returns vsli:raw="The name of the property that is the content property.">Nome della proprietà che è la proprietà di contenuto.</returns>
    </member>
    <member name="T:System.Windows.Markup.ContentWrapperAttribute">
      <summary vsli:raw="Specifies one or more types on the associated collection type that will be used to wrap foreign content.">Specifica uno o più tipi nel tipo di raccolta associato che verranno usati per eseguire il wrapping di contenuto esterno.</summary>
    </member>
    <member name="M:System.Windows.Markup.ContentWrapperAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ContentWrapperAttribute&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Markup.ContentWrapperAttribute" />.</summary>
      <param name="contentWrapper" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that is declared as a content wrapper for the collection type.">
        <see cref="T:System.Type" /> dichiarato come wrapper del contenuto per il tipo di raccolta.</param>
    </member>
    <member name="P:System.Windows.Markup.ContentWrapperAttribute.ContentWrapper">
      <summary vsli:raw="Gets the type that is declared as a content wrapper for the collection type associated with this attribute.">Ottiene il tipo dichiarato come wrapper del contenuto per il tipo di raccolta associato all'attributo.</summary>
      <returns vsli:raw="The type that is declared as a content wrapper for the collection type.">Tipo dichiarato come wrapper del contenuto per il tipo di raccolta.</returns>
    </member>
    <member name="M:System.Windows.Markup.ContentWrapperAttribute.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Markup.ContentWrapperAttribute&quot; /&gt; is equivalent this &lt;see cref=&quot;T:System.Windows.Markup.ContentWrapperAttribute&quot; /&gt; by comparing the &lt;see cref=&quot;P:System.Windows.Markup.ContentWrapperAttribute.ContentWrapper&quot; /&gt; properties.">Determina se un <see cref="T:System.Windows.Markup.ContentWrapperAttribute" /> specificato è equivalente a <see cref="T:System.Windows.Markup.ContentWrapperAttribute" /> confrontando le proprietà <see cref="P:System.Windows.Markup.ContentWrapperAttribute.ContentWrapper" />.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Markup.ContentWrapperAttribute&quot; /&gt; to compare.">Oggetto <see cref="T:System.Windows.Markup.ContentWrapperAttribute" /> da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Windows.Markup.ContentWrapperAttribute.ContentWrapper&quot; /&gt; properties are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se le proprietà <see cref="P:System.Windows.Markup.ContentWrapperAttribute.ContentWrapper" /> sono uguali. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.ContentWrapperAttribute.GetHashCode">
      <summary vsli:raw="Gets a hash code for this instance.">Ottiene un codice hash per questa istanza.</summary>
      <returns vsli:raw="An integer hash code.">Codice hash in formato Integer.</returns>
    </member>
    <member name="P:System.Windows.Markup.ContentWrapperAttribute.TypeId">
      <summary vsli:raw="Gets a unique identifier for this attribute.">Ottiene un identificatore univoco per questo attributo.</summary>
      <returns vsli:raw="A unique identifier for the attribute.">Identificatore univoco dell'attributo.</returns>
    </member>
    <member name="T:System.Windows.Markup.DateTimeValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Converte istanze dell'oggetto <see cref="T:System.String" /> in istanze dell'oggetto <see cref="T:System.DateTime" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.DateTimeValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.DateTimeValueSerializer&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Markup.DateTimeValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.DateTimeValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be convert to an instance of &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Determina se l'oggetto <see cref="T:System.String" /> specificato può essere convertito in un'istanza di <see cref="T:System.DateTime" />.</summary>
      <param name="value" vsli:raw="The string to evaluate for conversion.">Stringa da valutare per la conversione.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informazioni di contesto utilizzate per la conversione.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value can be converted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il valore può essere convertito. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.DateTimeValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if the specified object can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Determina se l'oggetto specificato può essere convertito in un oggetto <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to evaluate for conversion.">Oggetto di cui valutare la conversione.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informazioni di contesto utilizzate per la conversione.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <paramref name="value" /> può essere convertito in un oggetto <see cref="T:System.String" />. In caso contrario, <see langword="false" /></returns>
    </member>
    <member name="M:System.Windows.Markup.DateTimeValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Converte <see cref="T:System.String" /> in <see cref="T:System.DateTime" />.</summary>
      <param name="value" vsli:raw="The string to convert into a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Stringa da convertire in <see cref="T:System.DateTime" />.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informazioni di contesto utilizzate per la conversione.</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.DateTime&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">Nuova istanza di <see cref="T:System.DateTime" /> basata sull'oggetto <paramref name="value" /> specificato.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.DateTimeValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.DateTime&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Converte un'istanza di <see cref="T:System.DateTime" /> in <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to convert into a string.">Oggetto da convertire in una stringa.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informazioni di contesto utilizzate per la conversione.</param>
      <returns vsli:raw="A string representation of the specified &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Rappresentazione di stringa dell'elemento <see cref="T:System.DateTime" /> specificato.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is not a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; or is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> non è <see cref="T:System.DateTime" /> oppure è <see langword="null" />.</exception>
    </member>
    <member name="T:System.Windows.Markup.DependsOnAttribute">
      <summary vsli:raw="Indicates that the attributed property is dependent on the value of another property.">Indica che la proprietà con attributo è dipendente dal valore di un'altra proprietà.</summary>
    </member>
    <member name="M:System.Windows.Markup.DependsOnAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.DependsOnAttribute&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Markup.DependsOnAttribute" />.</summary>
      <param name="name" vsli:raw="The property that the property associated with this &lt;see cref=&quot;T:System.Windows.Markup.DependsOnAttribute&quot; /&gt; depends on.">La proprietà dalla quale dipende la proprietà associata a questo <see cref="T:System.Windows.Markup.DependsOnAttribute" />.</param>
    </member>
    <member name="P:System.Windows.Markup.DependsOnAttribute.Name">
      <summary vsli:raw="Gets the name of the related property declared in this &lt;see cref=&quot;T:System.Windows.Markup.DependsOnAttribute&quot; /&gt;.">Ottiene il nome della proprietà correlata dichiarata in <see cref="T:System.Windows.Markup.DependsOnAttribute" />.</summary>
      <returns vsli:raw="The name of the related property.">Nome della proprietà correlata.</returns>
    </member>
    <member name="P:System.Windows.Markup.DependsOnAttribute.TypeId">
      <summary vsli:raw="Gets a unique identifier for this &lt;see cref=&quot;T:System.Windows.Markup.DependsOnAttribute&quot; /&gt;.">Ottiene un identificatore univoco per <see cref="T:System.Windows.Markup.DependsOnAttribute" />.</summary>
      <returns vsli:raw="The unique identifier.">Identificatore univoco.</returns>
    </member>
    <member name="T:System.Windows.Markup.DictionaryKeyPropertyAttribute">
      <summary vsli:raw="Specifies a property of the associated class that provides the implicit key value. Implicit keys are used for keys rather than explicit &lt;see langword=&quot;x:Key&quot; /&gt; attributes defined in XAML for an item in &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; collections.">Specifica una proprietà della classe associata che fornisce il valore della chiave implicita. Le chiavi implicite vengono utilizzate per le chiavi al posto degli attributi <see langword="x:Key" /> espliciti definiti in XAML per un elemento negli insiemi <see cref="T:System.Collections.IDictionary" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.DictionaryKeyPropertyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.DictionaryKeyPropertyAttribute&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Markup.DictionaryKeyPropertyAttribute" />.</summary>
      <param name="name" vsli:raw="The name of the property that provides the implicit key value.">Nome della proprietà che fornisce il valore della chiave implicita.</param>
    </member>
    <member name="P:System.Windows.Markup.DictionaryKeyPropertyAttribute.Name">
      <summary vsli:raw="Gets the name of the property that provides the implicit key value.">Ottiene il nome della proprietà che fornisce il valore della chiave implicita.</summary>
      <returns vsli:raw="The name of the property that provides the implicit key value.">Nome della proprietà che fornisce il valore della chiave implicita.</returns>
    </member>
    <member name="T:System.Windows.Markup.IComponentConnector">
      <summary vsli:raw="Provides markup compile and tools support for named XAML elements and for attaching event handlers to them.">Fornisce il supporto per strumenti e compilazione markup per elementi XAML denominati e per l'associazione di gestori eventi.</summary>
    </member>
    <member name="M:System.Windows.Markup.IComponentConnector.Connect(System.Int32,System.Object)">
      <summary vsli:raw="Attaches events and names to compiled content.">Associa eventi e nomi al contenuto compilato.</summary>
      <param name="connectionId" vsli:raw="An identifier token to distinguish calls.">Token dell'identificatore per distinguere le chiamate.</param>
      <param name="target" vsli:raw="The target to connect events and names to.">Destinazione per la connessione di eventi e nomi.</param>
    </member>
    <member name="M:System.Windows.Markup.IComponentConnector.InitializeComponent">
      <summary vsli:raw="Loads the compiled page of a component.">Carica la pagina compilata di un componente.</summary>
    </member>
    <member name="T:System.Windows.Markup.INameScope">
      <summary vsli:raw="Defines a contract for how names of elements should be accessed within a particular XAML namescope, and how to enforce uniqueness of names within that XAML namescope.">Definisce un contratto per la modalità di accesso ai nomi degli elementi all'interno di un particolare NameScope XAML e per la modalità di applicazione dell'unicità dei nomi all'interno di tale NameScope XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.INameScope.FindName(System.String)">
      <summary vsli:raw="Returns an object that has the provided identifying name.">Restituisce un oggetto che ha il nome identificativo fornito.</summary>
      <param name="name" vsli:raw="The name identifier for the object being requested.">L'identificativo del nome per l'oggetto richiesto.</param>
      <returns vsli:raw="The object, if found. Returns &lt;see langword=&quot;null&quot; /&gt; if no object of that name was found.">L'oggetto, se trovato. Restituisce <see langword="null" /> se non è stato trovato alcun oggetto di tale nome.</returns>
    </member>
    <member name="M:System.Windows.Markup.INameScope.RegisterName(System.String,System.Object)">
      <summary vsli:raw="Registers the provided name into the current XAML namescope.">Registra il nome fornito nel NameScope XAML corrente.</summary>
      <param name="name" vsli:raw="The name to register.">Nome da registrare.</param>
      <param name="scopedElement" vsli:raw="The specific element that the provided &lt;paramref name=&quot;name&quot; /&gt; refers to.">L'elemento specifico al quale fa riferimento il <paramref name="name" /> fornito.</param>
    </member>
    <member name="M:System.Windows.Markup.INameScope.UnregisterName(System.String)">
      <summary vsli:raw="Unregisters the provided name from the current XAML namescope.">Annulla la registrazione del nome fornito dal NameScope XAML corrente.</summary>
      <param name="name" vsli:raw="The name to unregister.">Nome per il quale annullare la registrazione.</param>
    </member>
    <member name="T:System.Windows.Markup.INameScopeDictionary">
      <summary vsli:raw="Unifies enumerable, collection, and dictionary support that are useful for exposing a dictionary of names in a XAML namescope.">Unifica il supporto di enumerabili, insiemi e dizionari utili per esporre un dizionario di nomi in un NameScope XAML.</summary>
    </member>
    <member name="T:System.Windows.Markup.IProvideValueTarget">
      <summary vsli:raw="Represents a service that reports situational object-property relationships for markup extension evaluation.">Rappresenta un servizio che indica le relazioni tra oggetti e proprietà situazionali per la valutazione dell'estensione di markup.</summary>
    </member>
    <member name="P:System.Windows.Markup.IProvideValueTarget.TargetObject">
      <summary vsli:raw="Gets the target object being reported.">Ottiene l'oggetto di destinazione da segnalare.</summary>
      <returns vsli:raw="The target object being reported.">Oggetto di destinazione da segnalare.</returns>
    </member>
    <member name="P:System.Windows.Markup.IProvideValueTarget.TargetProperty">
      <summary vsli:raw="Gets an identifier for the target property being reported.">Ottiene un identificatore per la proprietà di destinazione indicata.</summary>
      <returns vsli:raw="An identifier for the target property being reported.">Identificatore per la proprietà di destinazione indicata.</returns>
    </member>
    <member name="T:System.Windows.Markup.IQueryAmbient">
      <summary vsli:raw="Queries for whether a specified property should be treated as ambient in the current scope.">Esegue una query per determinare se una proprietà specificata deve essere considerata di ambiente nell'ambito corrente.</summary>
    </member>
    <member name="M:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)">
      <summary vsli:raw="Queries for whether a specified named property can be considered ambient in the current scope.">Esegue una query per determinare se una proprietà denominata specificata può essere considerata di ambiente nell'ambito corrente.</summary>
      <param name="propertyName" vsli:raw="The name of the property to check for ambience state.">Nome della proprietà di cui verificare lo stato di ambiente.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the requested property can be considered ambient; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se la proprietà richiesta può essere considerata di ambiente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Markup.IUriContext">
      <summary vsli:raw="Represents a service that can use application context to resolve a provided relative URI to an absolute URI.">Rappresenta un servizio che può usare il contesto dell'applicazione per risolvere un URI relativo specificato in un URI assoluto.</summary>
    </member>
    <member name="P:System.Windows.Markup.IUriContext.BaseUri">
      <summary vsli:raw="Gets or sets the base URI of the current application context.">Ottiene o imposta l'URI di base del contesto applicazione corrente.</summary>
      <returns vsli:raw="The base URI of the application context.">URI di base URI del contesto applicazione.</returns>
    </member>
    <member name="T:System.Windows.Markup.IValueSerializerContext">
      <summary vsli:raw="Defines a context that is provided to a &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt;. The context can be used to enable special cases of serialization or different modes of serialization.">Definisce un contesto fornito a <see cref="T:System.Windows.Markup.ValueSerializer" />. Il contesto può essere utilizzato per abilitare casi speciali di serializzazione o modalità di serializzazione diverse.</summary>
    </member>
    <member name="M:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; for the given property descriptor.">Ottiene un <see cref="T:System.Windows.Markup.ValueSerializer" /> per un determinato descrittore di proprietà.</summary>
      <param name="descriptor" vsli:raw="The descriptor of the property being converted.">Descrittore della proprietà in fase di conversione.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; capable of serializing the specified property.">Un <see cref="T:System.Windows.Markup.ValueSerializer" /> in grado di serializzare la proprietà specificata.</returns>
    </member>
    <member name="M:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor(System.Type)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; associated with the specified type.">Ottiene il <see cref="T:System.Windows.Markup.ValueSerializer" /> associato al tipo specificato.</summary>
      <param name="type" vsli:raw="The type of the value being converted.">Tipo del valore in fase di conversione.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; capable of serializing the specified type.">Un <see cref="T:System.Windows.Markup.ValueSerializer" /> in grado di serializzare il tipo specificato.</returns>
    </member>
    <member name="T:System.Windows.Markup.IXamlTypeResolver">
      <summary vsli:raw="Represents a service that resolves from named elements in XAML markup to the appropriate CLR type.">Rappresenta un servizio che risolve gli elementi denominati nel markup XAML nel tipo CLR corretto.</summary>
    </member>
    <member name="M:System.Windows.Markup.IXamlTypeResolver.Resolve(System.String)">
      <summary vsli:raw="Resolves a named XAML type to the corresponding CLR &lt;see cref=&quot;T:System.Type&quot; /&gt;.">Risolve un tipo XAML denominato nell'oggetto <see cref="T:System.Type" /> CLR corrispondente.</summary>
      <param name="qualifiedTypeName" vsli:raw="The XAML type name to resolve. The type name is optionally qualified by the prefix for a XML namespace. Otherwise the current default XML namespace is assumed.">Nome del tipo XAML da risolvere. Il nome del tipo viene facoltativamente qualificato con il prefisso di uno spazio dei nomi XML. In caso contrario viene utilizzato lo spazio dei nomi XML predefinito corrente.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that &lt;paramref name=&quot;qualifiedTypeName&quot; /&gt; resolves to.">
        <see cref="T:System.Type" /> in cui viene risolto <paramref name="qualifiedTypeName" /></returns>
    </member>
    <member name="T:System.Windows.Markup.MarkupExtension">
      <summary vsli:raw="Provides a base class for XAML markup extension implementations that can be supported by .NET XAML Services and other XAML readers and XAML writers.">Fornisce una classe di base per le implementazioni delle estensioni di markup XAML che possono essere supportate dai servizi XAML di .NET Framework e da altri lettori e writer XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtension.#ctor">
      <summary vsli:raw="Initializes a new instance of a class derived from &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtension&quot; /&gt;.">Inizializza una nuova istanza di una classe derivata dall'oggetto <see cref="T:System.Windows.Markup.MarkupExtension" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
      <summary vsli:raw="When implemented in a derived class, returns an object that is provided as the value of the target property for this markup extension.">In caso di implementazione in una classe derivata, restituisce un oggetto fornito come valore della proprietà di destinazione per questa estensione di markup.</summary>
      <param name="serviceProvider" vsli:raw="A service provider helper that can provide services for the markup extension.">Helper del provider di servizi che può fornire servizi per l'estensione di markup.</param>
      <returns vsli:raw="The object value to set on the property where the extension is applied.">Valore dell'oggetto da impostare sulla proprietà in cui viene applicata l'estensione.</returns>
    </member>
    <member name="T:System.Windows.Markup.MarkupExtensionBracketCharactersAttribute">
      <summary vsli:raw="Reports the bracket characters that a markup extension can return.">Segnala i caratteri di parentesi che possono essere restituiti da un'estensione di markup.</summary>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtensionBracketCharactersAttribute.#ctor(System.Char,System.Char)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtensionBracketCharactersAttribute&quot; /&gt; class using the provided characters.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Markup.MarkupExtensionBracketCharactersAttribute" /> usando i caratteri specificati.</summary>
      <param name="openingBracket" vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; that defines the opening bracket character.">Oggetto <see cref="T:System.Char" /> che definisce il carattere parentesi quadra di apertura.</param>
      <param name="closingBracket" vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; that defines the closing bracket character.">Oggetto <see cref="T:System.Char" /> che definisce il carattere parentesi quadra di chiusura.</param>
    </member>
    <member name="P:System.Windows.Markup.MarkupExtensionBracketCharactersAttribute.ClosingBracket">
      <summary vsli:raw="Specifies the character to be used as the closing delimiter in a &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtension&quot; /&gt;.">Specifica il carattere da usare come delimitatore di chiusura in un oggetto <see cref="T:System.Windows.Markup.MarkupExtension" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; representing the character.">Oggetto <see cref="T:System.Char" /> che rappresenta il carattere.</returns>
    </member>
    <member name="P:System.Windows.Markup.MarkupExtensionBracketCharactersAttribute.OpeningBracket">
      <summary vsli:raw="Specifies the character to be used as the opening delimiter in a &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtension&quot; /&gt;.">Specifica il carattere da usare come delimitatore di apertura in un oggetto <see cref="T:System.Windows.Markup.MarkupExtension" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; representing the character.">Oggetto <see cref="T:System.Char" /> che rappresenta il carattere.</returns>
    </member>
    <member name="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute">
      <summary vsli:raw="Reports the type that a markup extension can return.">Segnala il tipo che può essere restituito da un'estensione del markup.</summary>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute&quot; /&gt; class using the provided &lt;see cref=&quot;T:System.Type&quot; /&gt;.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute" /> mediante l'oggetto <see cref="T:System.Type" /> fornito.</summary>
      <param name="returnType" vsli:raw="The return type that this attribute reports.">Tipo restituito che questo attributo segnala.</param>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.#ctor(System.Type,System.Type)">
      <summary vsli:raw="Deprecated; do not use.">Non supportato, non usare.</summary>
      <param name="returnType" vsli:raw="The return type that this  .NET Framework attribute reports.">Tipo restituito indicato da attributo .NET Framework.</param>
      <param name="expressionType" vsli:raw="Deprecated; do not use.">Non supportato, non usare.</param>
    </member>
    <member name="P:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.ExpressionType">
      <summary vsli:raw="Deprecated; do not use.">Non supportato, non usare.</summary>
      <returns vsli:raw="Deprecated; do not use.">Non supportato, non usare.</returns>
    </member>
    <member name="P:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.ReturnType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtension&quot; /&gt; return type that this .NET Framework attribute reports.">Ottiene il tipo restituito dell'oggetto <see cref="T:System.Windows.Markup.MarkupExtension" /> che questo attributo .NET Framework segnala.</summary>
      <returns vsli:raw="The type-safe return type of the specific &lt;see cref=&quot;M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)&quot; /&gt; implementation of the markup extension where the &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute&quot; /&gt; .NET Framework attribute is applied.">Tipo restituito indipendente dai tipi dell'implementazione di <see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" /> specifica dell'estensione di markup in cui è applicato l' <see cref="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute" /> attributo .NET Framework .</returns>
    </member>
    <member name="T:System.Windows.Markup.MemberDefinition">
      <summary vsli:raw="Provides the base class that is used for a markup technique of defining members of a class in declarative XAML.">Fornisce la classe base utilizzata per una tecnica di markup adottata nella definizione dei membri di una classe nel codice XAML dichiarativo.</summary>
    </member>
    <member name="M:System.Windows.Markup.MemberDefinition.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.MemberDefinition&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Markup.MemberDefinition" />.</summary>
    </member>
    <member name="P:System.Windows.Markup.MemberDefinition.Name">
      <summary vsli:raw="When implemented in a derived class, gets or sets the name of the member to define.">Quando implementata in una classe derivata, ottiene o imposta il nome del membro da definire.</summary>
      <returns vsli:raw="The name of the member to define.">Il nome del membro da definire.</returns>
    </member>
    <member name="T:System.Windows.Markup.NameReferenceConverter">
      <summary vsli:raw="Provides type conversion to convert a string name into an object reference to the object with that name, or to return the name of an object from the object graph.">Fornisce la conversione di tipi per convertire un nome di stringa in un riferimento all'oggetto con tale nome o restituire il nome di un oggetto dall'oggetto grafico.</summary>
    </member>
    <member name="M:System.Windows.Markup.NameReferenceConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.NameReferenceConverter&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Markup.NameReferenceConverter" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.NameReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Returns whether this converter can convert an object of one type to another object.">Restituisce un valore che indica se questo convertitore può convertire un oggetto di un tipo in un altro oggetto.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that provides a format context.">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="sourceType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the type you want to convert from.">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo da cui eseguire la conversione.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this converter can perform the conversion; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il convertitore può eseguire la conversione. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.NameReferenceConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Returns a value that indicates whether the converter can convert an object to the specified destination type.">Restituisce un valore che indica se il convertitore può convertire un oggetto nel tipo di destinazione specificato.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that provides a format context.">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="destinationType" vsli:raw="The type to convert to.">Tipo in cui eseguire la conversione.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the converter can perform the conversion; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il convertitore può eseguire la conversione; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.NameReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Converts the provided object to another object, using the specified context and culture information.">Converte l'oggetto fornito in un altro oggetto, utilizzando il contesto specificato e le informazioni sulle impostazioni cultura.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that provides a format context.">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; to use as the current culture.">Oggetto <see cref="T:System.Globalization.CultureInfo" /> da usare come impostazioni cultura correnti.</param>
      <param name="value" vsli:raw="The reference name string to convert.">Stringa del nome di riferimento da convertire.</param>
      <returns vsli:raw="The returned object, which is potentially any object that is type-mapped in the relevant backing assemblies and capable of being declared in XAML with a XAML name reference.">Oggetto restituito, che potenzialmente è un oggetto mappato al tipo nei relativi assembly di supporto e in grado di essere dichiarato in XAML con un riferimento del nome XAML.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is a null string or empty string.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see cref=&quot;T:System.Xaml.IXamlNameResolver&quot; /&gt; service is missing or invalid.">
        <paramref name="value" /> è una stringa vuota o null.  
-oppure- 
 Il servizio <see cref="T:System.Xaml.IXamlNameResolver" /> manca o non è valido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;context&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="context" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.NameReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Converts an object to the specified type. This is intended to return XAML reference names for objects in an object graph.">Converte un oggetto nel tipo specificato. Ha lo scopo di restituire i nomi di riferimento XAML per gli oggetti contenuti in un oggetto grafico.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that provides a format context.">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; to use as the current culture.">Oggetto <see cref="T:System.Globalization.CultureInfo" /> da usare come impostazioni cultura correnti.</param>
      <param name="value" vsli:raw="The object to retrieve the reference name for.">Oggetto per cui recuperare il nome di riferimento.</param>
      <param name="destinationType" vsli:raw="The type to return. You should always reference the &lt;see cref=&quot;T:System.String&quot; /&gt; type.">Tipo da restituire. È necessario sempre fare riferimento al tipo <see cref="T:System.String" />.</param>
      <returns vsli:raw="The reference name of the input &lt;paramref name=&quot;value&quot; /&gt; object.">Nome di riferimento dell'oggetto <paramref name="value" /> di input.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;T:System.Xaml.IXamlNameProvider&quot; /&gt; service is missing or invalid.">Il servizio <see cref="T:System.Xaml.IXamlNameProvider" /> manca o non è valido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;context&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="context" /> è <see langword="null" />.</exception>
    </member>
    <member name="T:System.Windows.Markup.NameScopePropertyAttribute">
      <summary vsli:raw="Specifies a property of the associated class that provides the XAML namescope value.">Specifica una proprietà della classe associata che fornisce il valore di namescope XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.NameScopePropertyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.NameScopePropertyAttribute&quot; /&gt; class with the specified name.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Markup.NameScopePropertyAttribute" /> con il nome specificato.</summary>
      <param name="name" vsli:raw="The name of the property on the attributed type that provides the XAML namescope.">Nome della proprietà nel tipo di attribuito che fornisce il NameScope XAML.</param>
    </member>
    <member name="M:System.Windows.Markup.NameScopePropertyAttribute.#ctor(System.String,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.NameScopePropertyAttribute&quot; /&gt; class with the specified name and type.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Markup.NameScopePropertyAttribute" /> con il nome e il tipo specificati.</summary>
      <param name="name" vsli:raw="The name of the attachable member that provides the XAML name scope.">Nome del membro associato che fornisce l'ambito dei nomi XAML.</param>
      <param name="type" vsli:raw="The owner type of the attachable member that provides the XAML name scope.">Tipo di proprietario del membro associato che fornisce l'ambito dei nomi XAML.</param>
    </member>
    <member name="P:System.Windows.Markup.NameScopePropertyAttribute.Name">
      <summary vsli:raw="Gets the name of the property that provides the XAML namescope.">Ottiene il nome della proprietà che fornisce il namescope XAML.</summary>
      <returns vsli:raw="A string value that is the name of the property that provides the XAML namescope.">Valore stringa corrispondente al nome della proprietà che fornisce il namescope XAML.</returns>
    </member>
    <member name="P:System.Windows.Markup.NameScopePropertyAttribute.Type">
      <summary vsli:raw="Gets the owner type of the attached property that provides the XAML namescope support.">Ottiene il tipo del proprietario della proprietà associata che fornisce il supporto namescope XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; value that is the owner type of the attached property that provides the XAML namescope support, or &lt;see langword=&quot;null&quot; /&gt;.">Valore <see cref="T:System.Type" /> corrispondente al tipo del proprietario della proprietà associata che fornisce il supporto namescope XAML oppure <see langword="null" />.</returns>
    </member>
    <member name="T:System.Windows.Markup.NullExtension">
      <summary vsli:raw="Implements a XAML markup extension in order to return a null object, which you can use to explicitly set values to null in XAML.">Implementa un'estensione del markup XAML per restituire un oggetto null che è possibile utilizzare per impostare in modo esplicito valori su null in XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.NullExtension.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.NullExtension&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Markup.NullExtension" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.NullExtension.ProvideValue(System.IServiceProvider)">
      <summary vsli:raw="Provides &lt;see langword=&quot;null&quot; /&gt; to use as a value as the output of this markup extension.">Fornisce <see langword="null" /> da utilizzare come un valore dell'output di questa estensione di markup.</summary>
      <param name="serviceProvider" vsli:raw="An object that can provide services for the markup extension implementation.">Oggetto che può fornire servizi per l'implementazione dell'estensione di markup.</param>
      <returns vsli:raw="A null reference.">Riferimento Null.</returns>
    </member>
    <member name="T:System.Windows.Markup.PropertyDefinition">
      <summary vsli:raw="Supports a markup technique of defining properties of a class in declarative XAML.">Supporta una tecnica di markup adottata nella definizione delle proprietà di una classe nel codice XAML dichiarativo.</summary>
    </member>
    <member name="M:System.Windows.Markup.PropertyDefinition.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.PropertyDefinition&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Markup.PropertyDefinition" />.</summary>
    </member>
    <member name="P:System.Windows.Markup.PropertyDefinition.Attributes">
      <summary vsli:raw="Gets a list of associated CLR attributes.">Ottiene un elenco di attributi CLR associati.</summary>
      <returns vsli:raw="A list of associated attributes.">Elenco di attributi associati.</returns>
    </member>
    <member name="P:System.Windows.Markup.PropertyDefinition.Modifier">
      <summary vsli:raw="Gets or sets the access level of the defined property.">Ottiene o imposta il livello di accesso della proprietà definita.</summary>
      <returns vsli:raw="The access level of the defined property, as a string.">Livello di accesso della proprietà definita in formato stringa.</returns>
    </member>
    <member name="P:System.Windows.Markup.PropertyDefinition.Name">
      <summary vsli:raw="Gets or sets the name of the property to define.">Ottiene o imposta il nome della proprietà da definire.</summary>
      <returns vsli:raw="The name of the property to define.">Nome della proprietà da definire.</returns>
    </member>
    <member name="P:System.Windows.Markup.PropertyDefinition.Type">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the property to define.">Ottiene o imposta l'oggetto <see cref="T:System.Xaml.XamlType" /> della proprietà da definire.</summary>
      <returns vsli:raw="The XAML type identifier of the property to define.">Identificatore del tipo XAML della proprietà da definire.</returns>
    </member>
    <member name="T:System.Windows.Markup.Reference">
      <summary vsli:raw="Implements the &lt;c&gt;{x:Reference}&lt;/c&gt; markup extension.">Implementa l'estensione di markup <c>{x:Reference}</c>.</summary>
    </member>
    <member name="M:System.Windows.Markup.Reference.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.Reference&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Markup.Reference" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.Reference.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.Reference&quot; /&gt; class with the &lt;paramref name=&quot;name&quot; /&gt; argument.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Markup.Reference" /> con l'argomento <paramref name="name" />.</summary>
      <param name="name" vsli:raw="The XAML name of the element to reference.">Nome XAML dell'elemento a cui fare riferimento.</param>
    </member>
    <member name="P:System.Windows.Markup.Reference.Name">
      <summary vsli:raw="Gets or sets the XAML name to obtain the reference for.">Ottiene o imposta il nome XAML per il quale ottenere il riferimento.</summary>
      <returns vsli:raw="The XAML name of the element to obtain the reference for.">Nome XAML dell'elemento per il quale ottenere il riferimento.</returns>
    </member>
    <member name="M:System.Windows.Markup.Reference.ProvideValue(System.IServiceProvider)">
      <summary vsli:raw="Returns an object that is the value of the target property. For the &lt;see cref=&quot;T:System.Windows.Markup.Reference&quot; /&gt; type, this is the object that the provided &lt;see cref=&quot;P:System.Windows.Markup.Reference.Name&quot; /&gt; references.">Restituisce un oggetto che corrisponde al valore della proprietà di destinazione. Per il tipo <see cref="T:System.Windows.Markup.Reference" />, questo è l'oggetto a cui fa riferimento la proprietà <see cref="P:System.Windows.Markup.Reference.Name" /> specificata.</summary>
      <param name="serviceProvider" vsli:raw="A class that implements the &lt;see cref=&quot;T:System.Xaml.IXamlNameResolver&quot; /&gt; service.">Classe che implementa il servizio <see cref="T:System.Xaml.IXamlNameResolver" />.</param>
      <returns vsli:raw="The value of the target property. This is potentially any object that is type-mapped in the relevant backing assemblies.">Valore della proprietà di destinazione. Si tratta potenzialmente di qualsiasi oggetto mappato al tipo negli assembly di supporto pertinenti.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;serviceProvider&quot; /&gt; value does not implement the &lt;see cref=&quot;T:System.Xaml.IXamlNameResolver&quot; /&gt; service.&#xA;&#xA; -or-&#xA;&#xA; &lt;see cref=&quot;P:System.Windows.Markup.Reference.Name&quot; /&gt; value has not been set through construction or positional usage.">Il valore <paramref name="serviceProvider" /> non implementa il servizio <see cref="T:System.Xaml.IXamlNameResolver" />.  
-oppure- 
 Il valore <see cref="P:System.Windows.Markup.Reference.Name" /> non è stato impostato tramite la costruzione o l'utilizzo posizionale.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serviceProvider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="serviceProvider" /> è <see langword="null" />.</exception>
    </member>
    <member name="T:System.Windows.Markup.RootNamespaceAttribute">
      <summary vsli:raw="Represents an assembly level attribute that is used to identify the value of the &lt;see langword=&quot;RootNamespace&quot; /&gt; property in a Visual Studio project file.">Rappresenta un attributo a livello di assembly usato per identificare il valore della proprietà <see langword="RootNamespace" /> in un file di progetto di Visual Studio.</summary>
    </member>
    <member name="M:System.Windows.Markup.RootNamespaceAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.RootNamespaceAttribute&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Markup.RootNamespaceAttribute" />.</summary>
      <param name="nameSpace" vsli:raw="The root namespace value.">Valore dello spazio dei nomi radice.</param>
    </member>
    <member name="P:System.Windows.Markup.RootNamespaceAttribute.Namespace">
      <summary vsli:raw="Gets the string that corresponds to the value of the &lt;see langword=&quot;RootNamespace&quot; /&gt; property in a Visual Studio project file.">Ottiene la stringa che corrisponde al valore della proprietà <see langword="RootNamespace" /> in un file di progetto di Visual Studio.</summary>
      <returns vsli:raw="The string that corresponds to the value of the &lt;see langword=&quot;RootNamespace&quot; /&gt; property in a Visual Studio project file.">Stringa che corrisponde al valore della <see langword="RootNamespace" /> proprietà in un file di progetto di Visual Studio.</returns>
    </member>
    <member name="T:System.Windows.Markup.RuntimeNamePropertyAttribute">
      <summary vsli:raw="Represents a type-level attribute that reports which property of the type maps to the XAML x:Name attribute.">Rappresenta un attributo a livello di tipo che indica la proprietà del tipo mappata all'attributo x:Name XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.RuntimeNamePropertyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.RuntimeNamePropertyAttribute&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Markup.RuntimeNamePropertyAttribute" />.</summary>
      <param name="name" vsli:raw="The name of the property to use as the &lt;see langword=&quot;x:Name&quot; /&gt; equivalent of the class.">Nome della proprietà da utilizzare come <see langword="x:Name" /> equivalente della classe.</param>
    </member>
    <member name="P:System.Windows.Markup.RuntimeNamePropertyAttribute.Name">
      <summary vsli:raw="Gets the name of the runtime name property that is specified by this &lt;see cref=&quot;T:System.Windows.Markup.RuntimeNamePropertyAttribute&quot; /&gt;.">Ottiene il nome della proprietà del nome runtime specificata da <see cref="T:System.Windows.Markup.RuntimeNamePropertyAttribute" />.</summary>
      <returns vsli:raw="The name of the property.">Nome della proprietà.</returns>
    </member>
    <member name="T:System.Windows.Markup.StaticExtension">
      <summary vsli:raw="Implements a markup extension that returns static field and property references.">Implementa un'estensione del markup che restituisce un campo statico e i riferimenti della proprietà.</summary>
    </member>
    <member name="M:System.Windows.Markup.StaticExtension.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.StaticExtension&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Markup.StaticExtension" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.StaticExtension.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.StaticExtension&quot; /&gt; class using the provided &lt;paramref name=&quot;member&quot; /&gt; string.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Markup.StaticExtension" /> utilizzando la stringa <paramref name="member" /> fornita.</summary>
      <param name="member" vsli:raw="A string that identifies the member to make a reference to. This string uses the format &lt;c&gt;prefix:typeName.fieldOrPropertyName&lt;/c&gt;. &lt;c&gt;prefix&lt;/c&gt; is the mapping prefix for a XAML namespace, and is only required to reference static values that are not mapped to the default XAML namespace.">Stringa che identifica il membro a cui effettuare un riferimento. Questa stringa usa il formato <c>prefix:typeName.fieldOrPropertyName</c>. <c>prefix</c> è il prefisso di mapping per uno spazio dei nomi XAML ed è richiesto solo per fare riferimento a valori statici che non sono mappati allo spazio dei nomi XAML predefinito.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;member&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="member" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.StaticExtension.Member">
      <summary vsli:raw="Gets or sets a member name string that is used to resolve a static field or property based on the service-provided type resolver.">Ottiene o imposta una stringa del nome del membro utilizzato per risolvere una proprietà o un campo statico in base al resolver del tipo fornito dal servizio.</summary>
      <returns vsli:raw="A string that identifies the member to make a reference to.">Stringa che identifica il membro a cui effettuare un riferimento.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Attempted to set &lt;see cref=&quot;P:System.Windows.Markup.StaticExtension.Member&quot; /&gt; to &lt;see langword=&quot;null&quot; /&gt;.">Si è tentato di impostare <see cref="P:System.Windows.Markup.StaticExtension.Member" /> su <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.StaticExtension.MemberType">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Type&quot; /&gt; that defines the static member to return.">Ottiene o imposta <see cref="T:System.Type" /> che definisce il membro statico da restituire.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that defines the static member to return.">
        <see cref="T:System.Type" /> che definisce il membro statico da restituire.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Attempted to set &lt;see cref=&quot;P:System.Windows.Markup.StaticExtension.MemberType&quot; /&gt; to &lt;see langword=&quot;null&quot; /&gt;.">Si è tentato di impostare <see cref="P:System.Windows.Markup.StaticExtension.MemberType" /> su <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.StaticExtension.ProvideValue(System.IServiceProvider)">
      <summary vsli:raw="Returns an object value to set on the property where you apply this extension. For &lt;see cref=&quot;T:System.Windows.Markup.StaticExtension&quot; /&gt;, the return value is the static value that is evaluated for the requested static member.">Restituisce un valore dell'oggetto da impostare sulla proprietà su cui si applica questa estensione. Per <see cref="T:System.Windows.Markup.StaticExtension" /> il valore restituito è il valore statico valutato per il membro statico richiesto.</summary>
      <param name="serviceProvider" vsli:raw="An object that can provide services for the markup extension. The service provider is expected to provide a service that implements a type resolver (&lt;see cref=&quot;T:System.Windows.Markup.IXamlTypeResolver&quot; /&gt;).">Oggetto che può fornire servizi per l'estensione di markup. È previsto che questo provider di servizi fornisca un servizio che implementa un resolver del tipo (<see cref="T:System.Windows.Markup.IXamlTypeResolver" />).</param>
      <returns vsli:raw="The static value to set on the property where the extension is applied.">Valore statico da impostare sulla proprietà in cui viene applicata l'estensione.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;member&quot; /&gt; value for the extension is &lt;see langword=&quot;null&quot; /&gt; at the time of evaluation.">Il valore <paramref name="member" /> per l'estensione è <see langword="null" /> al momento della valutazione.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Some part of the &lt;paramref name=&quot;member&quot; /&gt; string did not parse properly  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;serviceProvider&quot; /&gt; did not provide a service for &lt;see cref=&quot;T:System.Windows.Markup.IXamlTypeResolver&quot; /&gt;  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;member&quot; /&gt; value did not resolve to a static member.">Alcune parti della stringa <paramref name="member" /> non sono state analizzate correttamente 
In alternativa 
 <paramref name="serviceProvider" /> non ha fornito un servizio per <see cref="T:System.Windows.Markup.IXamlTypeResolver" />  
In alternativa 
 Il valore <paramref name="member" /> non è stato risolto a un membro statico.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serviceProvider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="serviceProvider" /> è <see langword="null" />.</exception>
    </member>
    <member name="T:System.Windows.Markup.TrimSurroundingWhitespaceAttribute">
      <summary vsli:raw="Indicates to XAML processors that the whitespace surrounding elements of the type in markup should be trimmed when serializing.">Indica ai processori XAML che lo spazio vuoto che circonda gli elementi del tipo nel markup deve essere rimosso durante la serializzazione.</summary>
    </member>
    <member name="M:System.Windows.Markup.TrimSurroundingWhitespaceAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.TrimSurroundingWhitespaceAttribute&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Markup.TrimSurroundingWhitespaceAttribute" />.</summary>
    </member>
    <member name="T:System.Windows.Markup.TypeExtension">
      <summary vsli:raw="Implements a markup extension that returns a &lt;see cref=&quot;T:System.Type&quot; /&gt; based on a string input.">Implementa un'estensione del markup che restituisce un oggetto <see cref="T:System.Type" /> in base a un input di stringa.</summary>
    </member>
    <member name="M:System.Windows.Markup.TypeExtension.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.TypeExtension&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Markup.TypeExtension" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.TypeExtension.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.TypeExtension&quot; /&gt; class, initializing the &lt;see cref=&quot;P:System.Windows.Markup.TypeExtension.TypeName&quot; /&gt; value based on the provided &lt;paramref name=&quot;typeName&quot; /&gt; string.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Markup.TypeExtension" /> tramite l'inizializzazione del valore dell'oggetto <see cref="P:System.Windows.Markup.TypeExtension.TypeName" /> in base alla stringa <paramref name="typeName" /> fornita.</summary>
      <param name="typeName" vsli:raw="A string that identifies the type to make a reference to. This string uses the format &lt;c&gt;prefix:className&lt;/c&gt;. &lt;c&gt;prefix&lt;/c&gt; is the mapping prefix for a XAML namespace, and is only required to reference types that are not mapped to the default XAML namespace.">Stringa che identifica il tipo a cui associare un riferimento. Questa stringa usa il formato <c>prefix:className</c>. <c>prefix</c> è il prefisso di mapping per uno spazio dei nomi XAML ed è richiesto solo per fare riferimento a tipi che non sono mappati allo spazio dei nomi XAML predefinito.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Attempted to specify &lt;paramref name=&quot;typeName&quot; /&gt; as &lt;see langword=&quot;null&quot; /&gt;.">Si è tentato di specificare <paramref name="typeName" /> come <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.TypeExtension.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.TypeExtension&quot; /&gt; class, declaring the type directly.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Markup.TypeExtension" />, dichiarando direttamente il tipo.</summary>
      <param name="type" vsli:raw="The type to be represented by this &lt;see cref=&quot;T:System.Windows.Markup.TypeExtension&quot; /&gt;.">Tipo da rappresentare mediante l'oggetto <see cref="T:System.Windows.Markup.TypeExtension" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;">
        <paramref name="type" /> è <see langword="null" /></exception>
    </member>
    <member name="M:System.Windows.Markup.TypeExtension.ProvideValue(System.IServiceProvider)">
      <summary vsli:raw="Returns an object that should be set on the property where this extension is applied. For &lt;see cref=&quot;T:System.Windows.Markup.TypeExtension&quot; /&gt; , this is the &lt;see cref=&quot;T:System.Type&quot; /&gt; value as evaluated for the requested type name.">Restituisce un oggetto che deve essere impostato sulla proprietà a cui viene applicata l'estensione. Per l'oggetto <see cref="T:System.Windows.Markup.TypeExtension" /> si tratta del valore <see cref="T:System.Type" /> valutato come per il nome del tipo richiesto.</summary>
      <param name="serviceProvider" vsli:raw="Object that can provide services for the markup extension. The provider is expected to provide a service for &lt;see cref=&quot;T:System.Windows.Markup.IXamlTypeResolver&quot; /&gt;.">Oggetto che può fornire servizi per l'estensione di markup. È previsto che questo provider fornisca un servizio per <see cref="T:System.Windows.Markup.IXamlTypeResolver" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to set on the property where the extension is applied.">
        <see cref="T:System.Type" /> da impostare sulla proprietà in cui viene applicata l'estensione.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;member&quot; /&gt; value for the extension is &lt;see langword=&quot;null&quot; /&gt;.">Il valore dell'oggetto <paramref name="member" /> per l'estensione è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Some part of the &lt;paramref name=&quot;typeName&quot; /&gt; string did not parse properly.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;serviceProvider&quot; /&gt; did not provide a service for &lt;see cref=&quot;T:System.Windows.Markup.IXamlTypeResolver&quot; /&gt;  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;typeName&quot; /&gt; value did not resolve to a type.">Alcune parti della stringa <paramref name="typeName" /> non sono state analizzate correttamente.  
-oppure- 
 <paramref name="serviceProvider" /> non ha fornito un servizio per <see cref="T:System.Windows.Markup.IXamlTypeResolver" />  
In alternativa 
 Il valore <paramref name="typeName" /> non è stato risolto a un tipo.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serviceProvider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;">
        <paramref name="serviceProvider" /> è <see langword="null" /></exception>
    </member>
    <member name="P:System.Windows.Markup.TypeExtension.Type">
      <summary vsli:raw="Gets or sets the type information for this extension.">Ottiene o imposta le informazioni sul tipo per l'estensione.</summary>
      <returns vsli:raw="The established type. For runtime purposes, this may be &lt;see langword=&quot;null&quot; /&gt; for get access, but cannot be set to &lt;see langword=&quot;null&quot; /&gt;.">Tipo stabilito. Per scopi di runtime, è possibile che questo sia <see langword="null" /> per ottenere l'accesso, ma non può essere impostato su <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Attempted to set to &lt;see langword=&quot;null&quot; /&gt;.">Si è tentato di impostare <see langword="null" /> .</exception>
    </member>
    <member name="P:System.Windows.Markup.TypeExtension.TypeName">
      <summary vsli:raw="Gets or sets the type name represented by this markup extension.">Ottiene o imposta il nome del tipo rappresentato da questa estensione del markup.</summary>
      <returns vsli:raw="A string that identifies the type. This string uses the format prefix&lt;c&gt;:&lt;/c&gt;className. (prefix is the mapping prefix for an XML namespace and is only required to reference types that are not mapped to the default XML namespace for WPF (&lt;c&gt;http://schemas.microsoft.com/winfx/2006/xaml/presentation&lt;/c&gt;).">Stringa che identifica il tipo. Questa stringa usa il formato Prefix<c>:</c>NomeClasse. (prefisso è il prefisso di mapping per uno spazio dei nomi XML ed è richiesto solo per fare riferimento a tipi che non sono mappati allo spazio dei nomi XML predefinito per WPF (http://schemas.microsoft.com/winfx/2006/xaml/presentation).</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Attempted to set to &lt;see langword=&quot;null&quot; /&gt;.">Tentativo di impostazione su <see langword="null" />.</exception>
    </member>
    <member name="T:System.Windows.Markup.UidPropertyAttribute">
      <summary vsli:raw="Indicates the CLR property of a class that provides the x:Uid Directive value.">Indica la proprietà CLR di una classe che specifica il valore della direttiva x:Uid.</summary>
    </member>
    <member name="M:System.Windows.Markup.UidPropertyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.UidPropertyAttribute&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Markup.UidPropertyAttribute" />.</summary>
      <param name="name" vsli:raw="The name of the property that provides the &lt;see langword=&quot;x:Uid&quot; /&gt; value.">Nome della proprietà che fornisce il valore di <see langword="x:Uid" />.</param>
    </member>
    <member name="P:System.Windows.Markup.UidPropertyAttribute.Name">
      <summary vsli:raw="Gets the name of the CLR property that represents the x:Uid Directive value.">Ottiene il nome della proprietà CLR che rappresenta il valore della direttiva x:Uid.</summary>
      <returns vsli:raw="The name of the CLR property that represents x:Uid Directive.">Nome della proprietà CLR che rappresenta la direttiva X:UID.</returns>
    </member>
    <member name="T:System.Windows.Markup.UsableDuringInitializationAttribute">
      <summary vsli:raw="Indicates whether this type is built top-down during XAML object graph creation.">Indica se questo tipo viene creato in base alla gerarchia durante la creazione del grafico di oggetti XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.UsableDuringInitializationAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.UsableDuringInitializationAttribute&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Markup.UsableDuringInitializationAttribute" />.</summary>
      <param name="usable" vsli:raw="Defines whether the associated class is usable during initialization.">Definisce se la classe associata è utilizzabile durante l'inizializzazione.</param>
    </member>
    <member name="P:System.Windows.Markup.UsableDuringInitializationAttribute.Usable">
      <summary vsli:raw="Gets a value that indicates whether the associated class is usable during initialization.">Ottiene un valore che indica se la classe associata è utilizzabile durante l'inizializzazione.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the associated class is usable during initialization; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se la classe associata è utilizzabile durante l'inizializzazione. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Markup.ValueSerializer">
      <summary vsli:raw="Abstract class that defines conversion behavior for serialization from an object representation.">Classe astratta che definisce il comportamento di conversione per la serializzazione da una rappresentazione dell'oggetto.</summary>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Markup.ValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="When overridden in a derived class, determines whether the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be converted to an instance of the type that the implementation of &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; supports.">In caso di override in una classe derivata, determina se l'oggetto <see cref="T:System.String" /> specificato può essere convertito in un'istanza del tipo supportato dall'implementazione di <see cref="T:System.Windows.Markup.ValueSerializer" />.</summary>
      <param name="value" vsli:raw="The string to evaluate for conversion.">Stringa da valutare per la conversione.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informazioni di contesto utilizzate per la conversione.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value can be converted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il valore può essere convertito. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="When overridden in a derived class, determines whether the specified object can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;.">In caso di override in una classe derivata, determina se l'oggetto specificato può essere convertito in un oggetto <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to evaluate for conversion.">Oggetto di cui valutare la conversione.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informazioni di contesto utilizzate per la conversione.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <paramref name="value" /> può essere convertito in un oggetto <see cref="T:System.String" />. In caso contrario, <see langword="false." /></returns>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="When overridden in a derived class, converts a &lt;see cref=&quot;T:System.String&quot; /&gt; to an instance of the type that the implementation of &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; supports.">In caso di override in una classe derivata, converte un oggetto <see cref="T:System.String" /> in un'istanza del tipo che l'implementazione di <see cref="T:System.Windows.Markup.ValueSerializer" /> supporta.</summary>
      <param name="value" vsli:raw="The string to convert.">Stringa da convertire.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informazioni di contesto utilizzate per la conversione.</param>
      <returns vsli:raw="A new instance of the type that the implementation of &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; supports based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">Nuova istanza del tipo che l'implementazione di <see cref="T:System.Windows.Markup.ValueSerializer" /> supporta in base all'oggetto <paramref name="value" /> fornito.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; cannot be converted.">L'oggetto <paramref name="value" /> non può essere convertito.</exception>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="When overridden in a derived class, converts the specified object to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">In caso di override in una classe derivata, converte l'oggetto specificato in un oggetto <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to convert into a string.">Oggetto da convertire in una stringa.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informazioni di contesto utilizzate per la conversione.</param>
      <returns vsli:raw="A string representation of the specified object.">Rappresentazione di stringa dell'oggetto specificato.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; cannot be converted.">L'oggetto <paramref name="value" /> non può essere convertito.</exception>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetConvertFromException(System.Object)">
      <summary vsli:raw="Returns an exception to throw when a conversion cannot be performed.">Restituisce un'eccezione da generare quando non è possibile eseguire una conversione.</summary>
      <param name="value" vsli:raw="The object that could not be converted.">Oggetto che non è stato possibile convertire.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Exception&quot; /&gt; object for the exception to throw when a &lt;see langword=&quot;ConvertFrom&quot; /&gt; conversion cannot be performed.">Oggetto <see cref="T:System.Exception" /> per l'eccezione da generare quando non è possibile eseguire una conversione <see langword="ConvertFrom" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetConvertToException(System.Object,System.Type)">
      <summary vsli:raw="Returns an exception to throw when a conversion cannot be performed.">Restituisce un'eccezione da generare quando non è possibile eseguire una conversione.</summary>
      <param name="value" vsli:raw="The object that could not be converted.">Oggetto che non è stato possibile convertire.</param>
      <param name="destinationType" vsli:raw="A type that represents the type the conversion was trying to convert to.">Tipo che rappresenta il tipo nel quale si cerca di eseguire la conversione.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Exception&quot; /&gt; object for the exception to throw when a &lt;see langword=&quot;ConvertTo&quot; /&gt; conversion cannot be performed.">Oggetto <see cref="T:System.Exception" /> per l'eccezione da generare quando non è possibile eseguire una conversione <see langword="ConvertTo" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; declared for a property, by passing a CLR property descriptor for the property.">Ottiene l'oggetto <see cref="T:System.Windows.Markup.ValueSerializer" /> dichiarato per una proprietà, passando un descrittore della proprietà CLR per la proprietà.</summary>
      <param name="descriptor" vsli:raw="The CLR property descriptor for the property to be serialized.">Descrittore della proprietà CLR per la proprietà da serializzare.</param>
      <returns vsli:raw="The serializer associated with the specified property. May return &lt;see langword=&quot;null&quot; /&gt;.">Serializzatore associato alla proprietà specificata. Può restituire <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;descriptor&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="descriptor" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.ComponentModel.PropertyDescriptor,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; declared for the specified property, using the specified context.">Ottiene il <see cref="T:System.Windows.Markup.ValueSerializer" /> dichiarato per la proprietà specificata, utilizzando il contesto specificato.</summary>
      <param name="descriptor" vsli:raw="Descriptor for the property to be serialized.">Descrittore per la proprietà da serializzare.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informazioni di contesto utilizzate per la conversione.</param>
      <returns vsli:raw="The serializer associated with the specified property.">Serializzatore associato alla proprietà specificata.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;descriptor&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="descriptor" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.Type)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; declared for the specified type.">Ottiene il <see cref="T:System.Windows.Markup.ValueSerializer" /> dichiarato per il tipo specificato.</summary>
      <param name="type" vsli:raw="The type to get the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; for.">Il tipo per il quale ottenere il <see cref="T:System.Windows.Markup.ValueSerializer" />.</param>
      <returns vsli:raw="The serializer associated with the specified type. May return &lt;see langword=&quot;null&quot; /&gt;.">Serializzatore associato al tipo specificato. Può restituire <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.Type,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; declared for the specified type, using the specified context.">Ottiene il <see cref="T:System.Windows.Markup.ValueSerializer" /> dichiarato per il tipo specificato, utilizzando il contesto specificato.</summary>
      <param name="type" vsli:raw="The type to get the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; for.">Il tipo per il quale ottenere il <see cref="T:System.Windows.Markup.ValueSerializer" />.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informazioni di contesto utilizzate per la conversione.</param>
      <returns vsli:raw="The serializer associated with the specified type.">Serializzatore associato al tipo specificato.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.TypeReferences(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Gets an enumeration of the types referenced by the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt;.">Ottiene un'enumerazione dei tipi ai quali fa riferimento il <see cref="T:System.Windows.Markup.ValueSerializer" />.</summary>
      <param name="value" vsli:raw="The value being serialized.">Valore in fase di serializzazione.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Informazioni di contesto utilizzate per la conversione.</param>
      <returns vsli:raw="The types converted by this serializer.">Tipi convertiti da questo serializzatore.</returns>
    </member>
    <member name="T:System.Windows.Markup.ValueSerializerAttribute">
      <summary>Identifica la classe <see cref="T:System.Windows.Markup.ValueSerializer" /> che un tipo o una proprietà deve utilizzare in caso di serializzazione.</summary>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializerAttribute.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Markup.ValueSerializerAttribute" /> utilizzando una stringa del nome completo del tipo di assembly.</summary>
      <param name="valueSerializerTypeName">Stringa di nome completo del tipo di assembly da utilizzare per la classe <see cref="T:System.Windows.Markup.ValueSerializer" />.</param>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializerAttribute.#ctor(System.Type)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Markup.ValueSerializerAttribute" /> utilizzando il tipo specificato.</summary>
      <param name="valueSerializerType">Tipo che rappresenta il tipo della classe <see cref="T:System.Windows.Markup.ValueSerializer" />.</param>
    </member>
    <member name="P:System.Windows.Markup.ValueSerializerAttribute.ValueSerializerType">
      <summary>Ottiene il tipo della classe <see cref="T:System.Windows.Markup.ValueSerializer" /> indicato da questo attributo.</summary>
      <returns>Tipo di <see cref="T:System.Windows.Markup.ValueSerializer" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.ValueSerializerAttribute.ValueSerializerTypeName">
      <summary>Ottiene il nome completo di assembly del tipo <see cref="T:System.Windows.Markup.ValueSerializer" /> per questo tipo o proprietà.</summary>
      <returns>Nome completo di assembly del tipo.</returns>
    </member>
    <member name="T:System.Windows.Markup.WhitespaceSignificantCollectionAttribute">
      <summary vsli:raw="Indicates that a collection type should be processed as being whitespace significant by a XAML processor.">Indica che un tipo di insieme deve essere elaborato come spazio vuoto significativo da un processore XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.WhitespaceSignificantCollectionAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.WhitespaceSignificantCollectionAttribute&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Markup.WhitespaceSignificantCollectionAttribute" />.</summary>
    </member>
    <member name="T:System.Windows.Markup.XamlDeferLoadAttribute">
      <summary vsli:raw="Indicates that a class or property has a deferred load usage for XAML (such as a template behavior), and reports the class that enables the deferring behavior and its destination/content type.">Indica che una classe o una proprietà prevede l'utilizzo del caricamento posticipato per XAML (come il comportamento dei modelli) e segnala la classe che consente tale comportamento e il relativo tipo di contenuto/destinazione.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlDeferLoadAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XamlDeferLoadAttribute&quot; /&gt; class, using string names of types.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Markup.XamlDeferLoadAttribute" /> utilizzando nomi stringa di tipi.</summary>
      <param name="loaderType" vsli:raw="The string name of the type for the implementation to use for the defer load behavior.">Nome di stringa del tipo per l'implementazione da utilizzare per il comportamento del caricamento posticipato.</param>
      <param name="contentType" vsli:raw="The string name of the type for the destination/content type of the defer load behavior.">Nome di stringa per il tipo di contenuto/destinazione del comportamento del caricamento posticipato.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;loaderType&quot; /&gt; or &lt;paramref name=&quot;contentType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="loaderType" /> o <paramref name="contentType" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlDeferLoadAttribute.#ctor(System.Type,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XamlDeferLoadAttribute&quot; /&gt; class, using CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; values.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Markup.XamlDeferLoadAttribute" /> utilizzando valori <see cref="T:System.Type" /> CLR.</summary>
      <param name="loaderType" vsli:raw="The CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; value for the implementation to use for the defer load behavior.">Valore <see cref="T:System.Type" /> CLR per l'implementazione da utilizzare per il comportamento del caricamento posticipato.</param>
      <param name="contentType" vsli:raw="The CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; value for the destination/content type of the defer load behavior.">Valore <see cref="T:System.Type" /> CLR per il tipo di contenuto/destinazione del comportamento del caricamento posticipato.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;loaderType&quot; /&gt; or &lt;paramref name=&quot;contentType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="loaderType" /> o <paramref name="contentType" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.XamlDeferLoadAttribute.ContentType">
      <summary vsli:raw="Gets the CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; value for the destination/content type of the defer load behavior.">Ottiene il valore <see cref="T:System.Type" /> CLR per il tipo di contenuto/destinazione del comportamento del caricamento posticipato.</summary>
      <returns vsli:raw="The CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; value for the destination/content type of the defer load behavior.">Valore <see cref="T:System.Type" /> CLR per il tipo di contenuto/destinazione del comportamento del caricamento posticipato.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlDeferLoadAttribute.ContentTypeName">
      <summary vsli:raw="Gets the string name of the type for the implementation to use for the defer load behavior.">Ottiene il nome di stringa del tipo per l'implementazione da utilizzare per il comportamento del caricamento posticipato.</summary>
      <returns vsli:raw="The string name of the type for the converter to use for the defer load behavior.">Nome di stringa del tipo per il convertitore da utilizzare per il comportamento del caricamento posticipato.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlDeferLoadAttribute.LoaderType">
      <summary vsli:raw="Gets the CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; value for the implementation to use for the defer load behavior.">Ottiene il valore <see cref="T:System.Type" /> CLR per l'implementazione da utilizzare per il comportamento del caricamento posticipato.</summary>
      <returns vsli:raw="The CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; value for the implementation to use for the defer load behavior.">Valore <see cref="T:System.Type" /> CLR per l'implementazione da utilizzare per il comportamento del caricamento posticipato.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlDeferLoadAttribute.LoaderTypeName">
      <summary vsli:raw="Gets the string name of the type for the destination/content type of the defer load behavior.">Ottiene il nome di stringa per il tipo di contenuto/destinazione del comportamento del caricamento posticipato.</summary>
      <returns vsli:raw="The string name of the type for the destination/content type of the defer load behavior.">Nome di stringa per il tipo di contenuto/destinazione del comportamento del caricamento posticipato.</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlSetMarkupExtensionAttribute">
      <summary vsli:raw="Indicates that a class can use a markup extension to provide a value, and references a handler to use for markup extension set operations.">Indica che una classe può utilizzare un'estensione di markup per fornire un valore e fa riferimento a un gestore per utilizzare per le operazioni di impostazione dell'estensione di markup.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlSetMarkupExtensionAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XamlSetMarkupExtensionAttribute&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Markup.XamlSetMarkupExtensionAttribute" />.</summary>
      <param name="xamlSetMarkupExtensionHandler" vsli:raw="The name of the handler to use for markup extension set operations.">Nome del gestore da utilizzare per le operazioni di impostazione dell'estensione di markup.</param>
    </member>
    <member name="P:System.Windows.Markup.XamlSetMarkupExtensionAttribute.XamlSetMarkupExtensionHandler">
      <summary vsli:raw="Gets the name of the handler to use for markup extension set operations.">Ottiene il nome del gestore da utilizzare per le operazioni di impostazione dell'estensione di markup.</summary>
      <returns vsli:raw="The name of the handler to use for markup extension set operations.">Nome del gestore da utilizzare per le operazioni di impostazione dell'estensione di markup.</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs">
      <summary vsli:raw="Provides data for callbacks that are invoked when a XAML object writer sets a value using a markup extension.">Fornisce i dati per i callback richiamati quando un writer di oggetti XAML imposta un valore utilizzando un'estensione di markup.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlSetMarkupExtensionEventArgs.#ctor(System.Xaml.XamlMember,System.Windows.Markup.MarkupExtension,System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs" />.</summary>
      <param name="member" vsli:raw="XAML type system / schema information for the member being set.">Informazioni sullo schema o sul sistema dei tipi XAML per il membro da impostare.</param>
      <param name="value" vsli:raw="The markup extension reference to provide for the member being set.">Riferimento dell'estensione di markup da fornire per il membro da impostare.</param>
      <param name="serviceProvider" vsli:raw="Service provider information passed to the markup extension.">Informazioni sul provider di servizi passate all'estensione di markup.</param>
    </member>
    <member name="M:System.Windows.Markup.XamlSetMarkupExtensionEventArgs.CallBase">
      <summary vsli:raw="Provides a way to invoke a callback as defined on a base class of the current acting type.">Fornisce un modo per richiamare un callback come definito in una classe base del tipo operativo corrente.</summary>
    </member>
    <member name="P:System.Windows.Markup.XamlSetMarkupExtensionEventArgs.MarkupExtension">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtension&quot; /&gt; reference that is relevant to this &lt;see cref=&quot;T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs&quot; /&gt;.">Ottiene il riferimento <see cref="T:System.Windows.Markup.MarkupExtension" /> relativo all'oggetto <see cref="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs" />.</summary>
      <returns vsli:raw="The markup extension reference that is relevant to this &lt;see cref=&quot;T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs&quot; /&gt;.">Riferimento dell'estensione di markup relativo all'oggetto <see cref="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlSetMarkupExtensionEventArgs.ServiceProvider">
      <summary vsli:raw="Gets service provider information that was passed to the markup extension.">Ottiene le informazioni sul provider di servizi passate all'estensione di markup.</summary>
      <returns vsli:raw="Service provider information that was passed to the markup extension.">Informazioni sul provider di servizi passate all'estensione di markup.</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlSetTypeConverterAttribute">
      <summary vsli:raw="Indicates that a class can use a type converter to provide a value, and references a handler to use for type converter setting cases.">Indica che una classe può utilizzare un convertitore di tipi per fornire un valore e fa riferimento a un gestore da utilizzare per i casi di impostazione del convertitore di tipi.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlSetTypeConverterAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XamlSetTypeConverterAttribute&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Markup.XamlSetTypeConverterAttribute" />.</summary>
      <param name="xamlSetTypeConverterHandler" vsli:raw="The name of the handler to use for type converter setting operations.">Nome del gestore da utilizzare per le operazioni di impostazione del convertitore di tipi.</param>
    </member>
    <member name="P:System.Windows.Markup.XamlSetTypeConverterAttribute.XamlSetTypeConverterHandler">
      <summary vsli:raw="Gets the &lt;paramref name=&quot;xamlSetTypeConverterHandler&quot; /&gt; initialization value (the handler name) specified in the &lt;see cref=&quot;T:System.Windows.Markup.XamlSetTypeConverterAttribute&quot; /&gt;.">Ottiene il valore di inizializzazione <paramref name="xamlSetTypeConverterHandler" /> (nome del gestore) specificato nell'oggetto <see cref="T:System.Windows.Markup.XamlSetTypeConverterAttribute" />.</summary>
      <returns vsli:raw="The &lt;paramref name=&quot;xamlSetTypeConverterHandler&quot; /&gt; value specified in the &lt;see cref=&quot;T:System.Windows.Markup.XamlSetTypeConverterAttribute&quot; /&gt;.">Valore <paramref name="xamlSetTypeConverterHandler" /> specificato nell'oggetto <see cref="T:System.Windows.Markup.XamlSetTypeConverterAttribute" />.</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlSetTypeConverterEventArgs">
      <summary vsli:raw="Provides data for callbacks that are invoked when a XAML writer sets a value using a type converter call.">Fornisce i dati per i callback richiamati quando un writer XAML imposta un valore utilizzando una chiamata del convertitore di tipi.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlSetTypeConverterEventArgs.#ctor(System.Xaml.XamlMember,System.ComponentModel.TypeConverter,System.Object,System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XamlSetTypeConverterEventArgs&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Markup.XamlSetTypeConverterEventArgs" />.</summary>
      <param name="member" vsli:raw="XAML type system / schema information for the member being set.">Informazioni sullo schema o sul sistema dei tipi XAML per il membro da impostare.</param>
      <param name="typeConverter" vsli:raw="The specific type converter instance being invoked.">Istanza del convertitore di tipi specifica da richiamare.</param>
      <param name="value" vsli:raw="The value to provide for the member being set.">Valore da fornire per il membro da impostare.</param>
      <param name="serviceProvider" vsli:raw="Service provider information that can be used by the &lt;paramref name=&quot;typeConverter&quot; /&gt; class.">Informazioni sul provider di servizi che possono essere utilizzate dalla classe <paramref name="typeConverter" />.</param>
      <param name="cultureInfo" vsli:raw="Culture information that can be used by the &lt;paramref name=&quot;typeConverter&quot; /&gt; class when calling &lt;see cref=&quot;M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)&quot; /&gt; and other methods.">Informazioni sulle impostazioni cultura che possono essere utilizzate dalla classe <paramref name="typeConverter" /> quando si chiama il metodo <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" /> e gli altri metodi.</param>
    </member>
    <member name="M:System.Windows.Markup.XamlSetTypeConverterEventArgs.CallBase">
      <summary vsli:raw="Provides a way to invoke a callback as defined on a base class of the current acting type.">Fornisce un modo per richiamare un callback come definito in una classe base del tipo operativo corrente.</summary>
    </member>
    <member name="P:System.Windows.Markup.XamlSetTypeConverterEventArgs.CultureInfo">
      <summary vsli:raw="Gets &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; information that can be used by the type converter class when calling &lt;see cref=&quot;M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)&quot; /&gt; and other methods.">Ottiene le informazioni <see cref="T:System.Globalization.CultureInfo" /> che possono essere utilizzate dalla classe del convertitore di tipi quando si chiama il metodo <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" /> e gli altri metodi.</summary>
      <returns vsli:raw="Culture information that can be used by the type converter class.">Informazioni sulle impostazioni cultura che possono essere utilizzate dalla classe del convertitore di tipi.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlSetTypeConverterEventArgs.ServiceProvider">
      <summary vsli:raw="Gets &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; information that can be used by the type converter class.">Ottiene le informazioni <see cref="T:System.IServiceProvider" /> che possono essere utilizzate dalla classe del convertitore di tipi.</summary>
      <returns vsli:raw="Service provider information that can be used by the &lt;paramref name=&quot;typeConverter&quot; /&gt; class.">Informazioni sul provider di servizi che possono essere utilizzate dalla classe <paramref name="typeConverter" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlSetTypeConverterEventArgs.TypeConverter">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; instance that is invoked and provides type conversion behavior.">Ottiene l'istanza di <see cref="T:System.ComponentModel.TypeConverter" /> richiamata e fornisce il comportamento di conversione dei tipi.</summary>
      <returns vsli:raw="The type converter that provides type conversion behavior.">Convertitore di tipi che fornisce il comportamento di conversione dei tipi.</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlSetValueEventArgs">
      <summary vsli:raw="Provides data for callbacks that are invoked when a &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; sets certain values.">Fornisce i dati per i callback richiamati quando un oggetto <see cref="T:System.Xaml.XamlObjectWriter" /> imposta alcuni valori.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlSetValueEventArgs.#ctor(System.Xaml.XamlMember,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XamlSetValueEventArgs&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />.</summary>
      <param name="member" vsli:raw="XAML type system / schema information for the member being set.">Informazioni sullo schema o sul sistema dei tipi XAML per il membro da impostare.</param>
      <param name="value" vsli:raw="The value to provide for the member.">Valore da fornire per il membro.</param>
    </member>
    <member name="M:System.Windows.Markup.XamlSetValueEventArgs.CallBase">
      <summary vsli:raw="When overridden in a derived class, provides a way to invoke a &lt;see langword=&quot;SetValue&quot; /&gt; callback as defined on a base class of the current acting type.">Quando è sottoposto a override in una classe derivata, fornisce un modo per richiamare un callback <see langword="SetValue" /> come definito in una classe base del tipo operativo corrente.</summary>
    </member>
    <member name="P:System.Windows.Markup.XamlSetValueEventArgs.Handled">
      <summary vsli:raw="Gets or sets a value that determines whether a caller that is using the &lt;see cref=&quot;T:System.Windows.Markup.XamlSetValueEventArgs&quot; /&gt; can use the values without having to call &lt;see cref=&quot;M:System.Windows.Markup.XamlSetValueEventArgs.CallBase&quot; /&gt;.">Ottiene o imposta un valore che determina se un chiamante che sta utilizzando l'oggetto <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" /> può utilizzare i valori senza dovere chiamare <see cref="M:System.Windows.Markup.XamlSetValueEventArgs.CallBase" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the values were useful and calling &lt;see cref=&quot;M:System.Windows.Markup.XamlSetValueEventArgs.CallBase&quot; /&gt; is not necessary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se è possibile utilizzare i valori senza dover chiamare <see cref="M:System.Windows.Markup.XamlSetValueEventArgs.CallBase" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlSetValueEventArgs.Member">
      <summary vsli:raw="Gets XAML type system and XAML schema information for the member being set.">Ottiene informazioni sullo schema o sul sistema dei tipi XAML per il membro da impostare.</summary>
      <returns vsli:raw="XAML type system and XAML schema information for the member being set.">Informazioni sullo schema o sul sistema dei tipi XAML per il membro da impostare.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlSetValueEventArgs.Value">
      <summary vsli:raw="Gets the value to provide for the member being set.">Ottiene il valore da fornire per il membro da impostare.</summary>
      <returns vsli:raw="The value to provide for the member being set.">Valore da fornire per il membro da impostare.</returns>
    </member>
    <member name="T:System.Windows.Markup.XData">
      <summary vsli:raw="Represents literal data that can appear as the value for a &lt;see langword=&quot;Value&quot; /&gt; node.">Rappresenta i dati letterali che possono essere visualizzati come valore per un nodo <see langword="Value" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.XData.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XData&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Markup.XData" />.</summary>
    </member>
    <member name="P:System.Windows.Markup.XData.Text">
      <summary vsli:raw="Gets or sets the literal value string that this &lt;see cref=&quot;T:System.Windows.Markup.XData&quot; /&gt; wraps.">Ottiene o imposta la stringa del valore letterale inclusa nell'oggetto <see cref="T:System.Windows.Markup.XData" />.</summary>
      <returns vsli:raw="The literal value string.">Stringa del valore letterale.</returns>
    </member>
    <member name="P:System.Windows.Markup.XData.XmlReader">
      <summary vsli:raw="Gets or sets a reader for the literal data.">Ottiene o imposta un reader per i dati letterali.</summary>
      <returns vsli:raw="A reader for the literal data.">Reader per i dati letterali.</returns>
    </member>
    <member name="T:System.Windows.Markup.XmlLangPropertyAttribute">
      <summary vsli:raw="Identifies the property to associate with the xml:lang attribute.">Identifica la proprietà da associare all'attributo xml:lang.</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlLangPropertyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XmlLangPropertyAttribute&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Markup.XmlLangPropertyAttribute" />.</summary>
      <param name="name" vsli:raw="The property name to associate with the &lt;see langword=&quot;xml:lang&quot; /&gt; attribute.">Nome della proprietà da associare all'attributo <see langword="xml:lang" />.</param>
    </member>
    <member name="P:System.Windows.Markup.XmlLangPropertyAttribute.Name">
      <summary vsli:raw="Gets the name of the property that is specified in this attribute.">Ottiene il nome della proprietà specificata in questo attributo.</summary>
      <returns vsli:raw="The name of the property.">Nome della proprietà.</returns>
    </member>
    <member name="T:System.Windows.Markup.XmlnsCompatibleWithAttribute">
      <summary vsli:raw="Specifies that a XAML namespace can be subsumed by another XAML namespace. Typically, the subsuming XAML namespace is indicated in a previously defined &lt;see cref=&quot;T:System.Windows.Markup.XmlnsDefinitionAttribute&quot; /&gt;.">Specifica che uno spazio dei nomi XAML può essere classificato da un altro spazio dei nomi XAML. In genere, lo spazio dei nomi XAML in sostituzione è indicato in un <see cref="T:System.Windows.Markup.XmlnsDefinitionAttribute" /> definito in precedenza.</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlnsCompatibleWithAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XmlnsCompatibleWithAttribute&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Markup.XmlnsCompatibleWithAttribute" />.</summary>
      <param name="oldNamespace" vsli:raw="The reference XAML namespace identifier.">Identificatore dello spazio dei nomi XAML di riferimento.</param>
      <param name="newNamespace" vsli:raw="The subsuming XAML namespace identifier.">Identificatore dello spazio dei nomi XAML classificato.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;oldNamespace&quot; /&gt; or &lt;paramref name=&quot;newNamespace&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="oldNamespace" /> o <paramref name="newNamespace" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.XmlnsCompatibleWithAttribute.NewNamespace">
      <summary vsli:raw="Gets the subsuming namespace identifier reported by this attribute.">Ottiene l'identificatore dello spazio dei nomi classificato segnalato da questo attributo.</summary>
      <returns vsli:raw="The subsuming namespace identifier reported in the attribute.">Identificatore dello spazio dei nomi classificato segnalato nell'attributo.</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsCompatibleWithAttribute.OldNamespace">
      <summary vsli:raw="Gets the reference namespace identifier reported by this attribute.">Ottiene l'identificatore dello spazio dei nomi di riferimento segnalato da questo attributo.</summary>
      <returns vsli:raw="The reference namespace identifier.">Identificatore dello spazio dei nomi di riferimento.</returns>
    </member>
    <member name="T:System.Windows.Markup.XmlnsDefinitionAttribute">
      <summary vsli:raw="Specifies a mapping on a per-assembly basis between a XAML namespace and a CLR namespace, which is then used for type resolution by a XAML object writer or XAML schema context.">Specifica un mapping basato su assembly tra uno spazio dei nomi XAML e uno spazio dei nomi CLR che viene quindi usato da un writer di oggetti XAML o dal contesto dello schema XAML per la risoluzione del tipo.</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDefinitionAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XmlnsDefinitionAttribute&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Markup.XmlnsDefinitionAttribute" />.</summary>
      <param name="xmlNamespace" vsli:raw="The XAML namespace identifier.">Identificatore dello spazio dei nomi XAML.</param>
      <param name="clrNamespace" vsli:raw="A string that references a CLR namespace name.">Stringa che fa riferimento a un nome di spazio dei nomi CLR.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlNamespace&quot; /&gt; or &lt;paramref name=&quot;clrNamespace&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xmlNamespace" /> o <paramref name="clrNamespace" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDefinitionAttribute.AssemblyName">
      <summary vsli:raw="Gets or sets the name of the assembly associated with the attribute.">Ottiene o imposta il nome dell'assembly associato all'attributo.</summary>
      <returns vsli:raw="The assembly name.">Nome dell'assembly.</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDefinitionAttribute.ClrNamespace">
      <summary vsli:raw="Gets the string name of the CLR namespace specified in this attribute.">Ottiene il nome di stringa dello spazio dei nomi CLR specificato in questo attributo.</summary>
      <returns vsli:raw="The CLR namespace, specified as a string.">Spazio dei nomi CLR specificato come stringa.</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDefinitionAttribute.XmlNamespace">
      <summary vsli:raw="Gets the XAML namespace identifier specified in this attribute.">Ottiene l'identificatore dello spazio dei nomi XAML specificato in questo attributo.</summary>
      <returns vsli:raw="The XAML namespace identifier.">Identificatore dello spazio dei nomi XAML.</returns>
    </member>
    <member name="T:System.Windows.Markup.XmlnsPrefixAttribute">
      <summary vsli:raw="Identifies a recommended prefix to associate with a XAML namespace for XAML usage, when writing elements and attributes in a XAML file (serialization) or when interacting with a design environment that has XAML editing features.">Identifica un prefisso consigliato da associare a uno spazio dei nomi XAML per l'utilizzo di XAML, quando si scrivono elementi e attributi in un file XAML (serializzazione) o quando si interagisce con un ambiente di progettazione che dispone di funzionalità di modifica XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlnsPrefixAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XmlnsPrefixAttribute&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Markup.XmlnsPrefixAttribute" />.</summary>
      <param name="xmlNamespace" vsli:raw="The XAML namespace identifier.">Identificatore dello spazio dei nomi XAML.</param>
      <param name="prefix" vsli:raw="The recommended prefix string.">Stringa del prefisso consigliato.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlNamespace&quot; /&gt; or &lt;paramref name=&quot;prefix&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xmlNamespace" /> o <paramref name="prefix" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.XmlnsPrefixAttribute.Prefix">
      <summary vsli:raw="Gets the recommended prefix associated with this attribute.">Ottiene il prefisso consigliato associato all'attributo.</summary>
      <returns vsli:raw="The recommended prefix string.">Stringa del prefisso consigliato.</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsPrefixAttribute.XmlNamespace">
      <summary vsli:raw="Gets the XAML namespace identifier associated with this attribute.">Ottiene l'identificatore dello spazio dei nomi XAML associato all'attributo.</summary>
      <returns vsli:raw="The XAML namespace identifier.">Identificatore dello spazio dei nomi XAML.</returns>
    </member>
    <member name="T:System.Xaml.AmbientPropertyValue">
      <summary vsli:raw="Reports information about an ambient property, as part of an &lt;see cref=&quot;T:System.Xaml.IAmbientProvider&quot; /&gt; implementation.">Fornisce informazioni su una proprietà di ambiente, come parte di un'implementazione <see cref="T:System.Xaml.IAmbientProvider" />.</summary>
    </member>
    <member name="M:System.Xaml.AmbientPropertyValue.#ctor(System.Xaml.XamlMember,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.AmbientPropertyValue&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.AmbientPropertyValue" />.</summary>
      <param name="property" vsli:raw="The identifier that represents the ambient property.">Identificatore che rappresenta la proprietà di ambiente.</param>
      <param name="value" vsli:raw="The value to report.">Valore da segnalare.</param>
    </member>
    <member name="P:System.Xaml.AmbientPropertyValue.RetrievedProperty">
      <summary vsli:raw="Gets the XAML type system identifier (&lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;) that represents the ambient property.">Ottiene l'identificatore di sistema dei tipi XAML (<see cref="T:System.Xaml.XamlMember" />) che rappresenta la proprietà di ambiente.</summary>
      <returns vsli:raw="The identifier that represents the ambient property.">Identificatore che rappresenta la proprietà di ambiente.</returns>
    </member>
    <member name="P:System.Xaml.AmbientPropertyValue.Value">
      <summary vsli:raw="Gets the value of the ambient property.">Ottiene il valore della proprietà di ambiente.</summary>
      <returns vsli:raw="The value of the ambient property.">Valore della proprietà di ambiente.</returns>
    </member>
    <member name="T:System.Xaml.AttachableMemberIdentifier">
      <summary vsli:raw="Provides a XAML type system identifier representation for attachable members. The identifier structure parallels the &lt;paramref name=&quot;declaringType&quot; /&gt;&lt;see langword=&quot;.&quot; /&gt;&lt;paramref name=&quot;memberName&quot; /&gt; string form for attachable member usage.">Fornisce una rappresentazione dell'identificatore di sistema dei tipi XAML per i membri associabili. La struttura dell'identificatore è parallela al formato stringa di <paramref name="declaringType" /><see langword="." /><paramref name="memberName" /> per utilizzo del membro associabile.</summary>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.#ctor(System.Type,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.AttachableMemberIdentifier" />.</summary>
      <param name="declaringType" vsli:raw="The &lt;paramref name=&quot;declaringType&quot; /&gt; component of the identifier, which should match the name of the declaring &lt;see cref=&quot;P:System.Xaml.XamlMember.Type&quot; /&gt;.">Componente <paramref name="declaringType" /> dell'identificatore che deve corrispondere al nome della proprietà <see cref="P:System.Xaml.XamlMember.Type" /> dichiarante.</param>
      <param name="memberName" vsli:raw="The &lt;paramref name=&quot;memberName&quot; /&gt; component of the identifier, which should match the &lt;see cref=&quot;P:System.Xaml.XamlMember.Name&quot; /&gt;.">Componente <paramref name="memberName" /> dell'identificatore che deve corrispondere alla proprietà <see cref="P:System.Xaml.XamlMember.Name" />.</param>
    </member>
    <member name="P:System.Xaml.AttachableMemberIdentifier.DeclaringType">
      <summary vsli:raw="Gets or sets the &lt;paramref name=&quot;declaringType&quot; /&gt; component value of the &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">Ottiene o imposta il valore del componente <paramref name="declaringType" /> dell'oggetto <see cref="T:System.Xaml.AttachableMemberIdentifier" />.</summary>
      <returns vsli:raw="The &lt;paramref name=&quot;declaringType&quot; /&gt; component value of the &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">Valore del componente <paramref name="declaringType" /> dell'oggetto <see cref="T:System.Xaml.AttachableMemberIdentifier" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.Equals(System.Object)">
      <summary vsli:raw="Determines whether this instance of &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; and a specified object have the same value.">Determina se questa istanza di <see cref="T:System.Xaml.AttachableMemberIdentifier" /> e un oggetto specificato dispongono dello stesso valore.</summary>
      <param name="obj" vsli:raw="The object to compare with the current &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">Oggetto da confrontare con l'oggetto <see cref="T:System.Xaml.AttachableMemberIdentifier" /> corrente.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is an &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; and if its value is the same as this instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="obj" /> è un oggetto <see cref="T:System.Xaml.AttachableMemberIdentifier" /> e se il relativo valore è uguale a quello di questa istanza; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.Equals(System.Xaml.AttachableMemberIdentifier)">
      <summary vsli:raw="Determines whether this instance and another specified &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; object have the same value.">Determina se questa istanza e un altro oggetto <see cref="T:System.Xaml.AttachableMemberIdentifier" /> specificato hanno lo stesso valore.</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; to compare with the current &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">Oggetto <see cref="T:System.Xaml.AttachableMemberIdentifier" /> da confrontare con l'oggetto <see cref="T:System.Xaml.AttachableMemberIdentifier" /> corrente.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the objects have the same value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se gli oggetti hanno lo stesso valore; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">Restituisce il codice hash per questo <see cref="T:System.Xaml.AttachableMemberIdentifier" />.</summary>
      <returns vsli:raw="An integer hash code.">Codice hash di un intero.</returns>
    </member>
    <member name="P:System.Xaml.AttachableMemberIdentifier.MemberName">
      <summary vsli:raw="Gets or sets the &lt;paramref name=&quot;memberName&quot; /&gt; component value of the &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">Ottiene o imposta il valore del componente <paramref name="memberName" /> dell'oggetto <see cref="T:System.Xaml.AttachableMemberIdentifier" />.</summary>
      <returns vsli:raw="The &lt;paramref name=&quot;memberName&quot; /&gt; component value of the &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">Valore del componente <paramref name="memberName" /> dell'oggetto <see cref="T:System.Xaml.AttachableMemberIdentifier" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.op_Equality(System.Xaml.AttachableMemberIdentifier,System.Xaml.AttachableMemberIdentifier)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; objects have the same value.">Determina se due oggetti <see cref="T:System.Xaml.AttachableMemberIdentifier" /> specificati hanno lo stesso valore.</summary>
      <param name="left" vsli:raw="An &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">Oggetto <see cref="T:System.Xaml.AttachableMemberIdentifier" /> o <see langword="null" />.</param>
      <param name="right" vsli:raw="An &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">Oggetto <see cref="T:System.Xaml.AttachableMemberIdentifier" /> o <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;left&quot; /&gt; is the same as the value of &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il valore di <paramref name="left" /> è uguale al valore di <paramref name="right" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.op_Inequality(System.Xaml.AttachableMemberIdentifier,System.Xaml.AttachableMemberIdentifier)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; objects have different values.">Determina se due oggetti <see cref="T:System.Xaml.AttachableMemberIdentifier" /> specificati hanno valori diversi.</summary>
      <param name="left" vsli:raw="An &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">Oggetto <see cref="T:System.Xaml.AttachableMemberIdentifier" /> o <see langword="null" />.</param>
      <param name="right" vsli:raw="An &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">Oggetto <see cref="T:System.Xaml.AttachableMemberIdentifier" /> o <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;left&quot; /&gt; differs from the value of &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il valore di <paramref name="left" /> è diverso dal valore di <paramref name="right" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.ToString">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the current &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">Restituisce un oggetto <see cref="T:System.String" /> che rappresenta l'elemento <see cref="T:System.Xaml.AttachableMemberIdentifier" /> corrente.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the current &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">Oggetto <see cref="T:System.String" /> che rappresenta l'oggetto <see cref="T:System.Xaml.AttachableMemberIdentifier" /> corrente.</returns>
    </member>
    <member name="T:System.Xaml.AttachablePropertyServices">
      <summary vsli:raw="Provides static helper methods that obtain values and accessor method information from an attachable property and that work with an attached property store.">Fornisce metodi di supporto statici che ottengono valori e informazioni sul metodo della funzione di accesso da una proprietà associabile e che utilizzano un archivio di proprietà associate.</summary>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.CopyPropertiesTo(System.Object,System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)">
      <summary vsli:raw="Copies all attachable property/value pairs from a specified attachable property store and into a destination array.">Copia tutte le coppie proprietà/valore associabili da un archivio di proprietà associabili specificato e in una matrice di destinazione.</summary>
      <param name="instance" vsli:raw="A specific attachable property store that implements &lt;see cref=&quot;T:System.Xaml.IAttachedPropertyStore&quot; /&gt;; or any non-null object to access a static default attachable property store.">Archivio di proprietà associabili specifico che implementa <see cref="T:System.Xaml.IAttachedPropertyStore" /> o qualsiasi oggetto non null per accedere a un archivio di proprietà associabili predefinito statico.</param>
      <param name="array" vsli:raw="The destination array. The array is a generic array, should be passed undimensioned, and should have components of &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; and &lt;see langword=&quot;object&quot; /&gt;.">Matrice di destinazione. Si tratta di una matrice generica, che deve essere passata non dimensionata e che deve disporre di componenti di <see cref="T:System.Xaml.AttachableMemberIdentifier" /> e <see langword="object" />.</param>
      <param name="index" vsli:raw="The source index into which to copy.">Indice di origine in cui copiare.</param>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.GetAttachedPropertyCount(System.Object)">
      <summary vsli:raw="Returns the count of the attachable property entries that are in the specified store.">Restituisce il numero delle voci delle proprietà associabili che si trovano nell'archivio specificato.</summary>
      <param name="instance" vsli:raw="A specific attachable property store that implements &lt;see cref=&quot;T:System.Xaml.IAttachedPropertyStore&quot; /&gt;; or any non-null object to access a static default attachable property store.">Archivio di proprietà associabili specifico che implementa <see cref="T:System.Xaml.IAttachedPropertyStore" /> o qualsiasi oggetto non null per accedere a un archivio di proprietà associabili predefinito statico.</param>
      <returns vsli:raw="The integer count of entries in the store.">Numero intero di voci nell'archivio.</returns>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.RemoveProperty(System.Object,System.Xaml.AttachableMemberIdentifier)">
      <summary vsli:raw="Removes the entry for the specified attachable property from the specified store.">Rimuove la voce per la proprietà associabile specificata dall'archivio specificato.</summary>
      <param name="instance" vsli:raw="A specific attachable property store that implements &lt;see cref=&quot;T:System.Xaml.IAttachedPropertyStore&quot; /&gt;; or any non-null object to access a static default attachable property store.">Archivio di proprietà associabili specifico che implementa <see cref="T:System.Xaml.IAttachedPropertyStore" /> o qualsiasi oggetto non null per accedere a un archivio di proprietà associabili predefinito statico.</param>
      <param name="name" vsli:raw="The identifier for the attachable property entry to remove from the store.">Identificatore della voce della proprietà associabile da rimuovere dall'archivio.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an attachable property entry for &lt;paramref name=&quot;name&quot; /&gt; was found in the store and removed from it; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se nell'archivio è stata trovata e rimossa una voce della proprietà associabile per <paramref name="name" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.SetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object)">
      <summary vsli:raw="Sets a value for the specified attachable property in the specified store.">Imposta un valore per la proprietà allegabile specificata nell'archivio specificato.</summary>
      <param name="instance" vsli:raw="A specific attachable property store that implements &lt;see cref=&quot;T:System.Xaml.IAttachedPropertyStore&quot; /&gt;; or any non-null object to use a static default attachable property store.">Archivio di proprietà associabili specifico che implementa <see cref="T:System.Xaml.IAttachedPropertyStore" /> o qualsiasi oggetto non null per utilizzare un archivio di proprietà associabili predefinito statico.</param>
      <param name="name" vsli:raw="The identifier of the attachable property entry for which to set a value.">Identificatore della voce della proprietà associabile per la quale impostare un valore.</param>
      <param name="value" vsli:raw="The value to set.">Il valore da impostare.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A value could not be set in the store.">Impossibile impostare un valore nell'archivio.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.TryGetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object@)">
      <summary vsli:raw="Attempts to get a value for the specified attachable property in the specified store. Does not throw an exception if the specific attachable property does not exist in the store.">Tenta di ottenere un valore per la proprietà associabile specificata nell'archivio specificato. Non viene generata un'eccezione se la proprietà associabile specifica non esiste nell'archivio.</summary>
      <param name="instance" vsli:raw="A specific attachable property store that implements &lt;see cref=&quot;T:System.Xaml.IAttachedPropertyStore&quot; /&gt;; or any non-null object to use a static default attachable property store.">Archivio di proprietà associabili specifico che implementa <see cref="T:System.Xaml.IAttachedPropertyStore" /> o qualsiasi oggetto non null per utilizzare un archivio di proprietà associabili predefinito statico.</param>
      <param name="name" vsli:raw="The identifier of the attachable property entry for which to get a value.">Identificatore della voce della proprietà associabile per la quale ottenere un valore.</param>
      <param name="value" vsli:raw="Out parameter. When this method returns, contains the destination object for the value if &lt;paramref name=&quot;name&quot; /&gt; exists in the store and has a value.">Parametro out. Quando questo metodo restituisce il risultato, contiene l'oggetto di destinazione per il valore se <paramref name="name" /> esiste nell'archivio e dispone di un valore.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an attachable property entry for &lt;paramref name=&quot;name&quot; /&gt; was found in the store and a value was posted to &lt;paramref name=&quot;value&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se nell'archivio è stata trovata una voce della proprietà associabile per <paramref name="name" /> e un valore è stato inviato a <paramref name="value" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.TryGetProperty``1(System.Object,System.Xaml.AttachableMemberIdentifier,``0@)">
      <summary vsli:raw="Attempts to get a value for the specified attachable property in the specified store, returning a generic output form. Does not throw an exception if the specific attachable property does not exist in the store.">Tenta di ottenere un valore per la proprietà associabile specificata nell'archivio specificato restituendo un formato di output generico. Non viene generata un'eccezione se la proprietà associabile specifica non esiste nell'archivio.</summary>
      <param name="instance" vsli:raw="A specific attachable property store that implements &lt;see cref=&quot;T:System.Xaml.IAttachedPropertyStore&quot; /&gt;; or any non-null object to access a static default attachable property store.">Archivio di proprietà associabili specifico che implementa <see cref="T:System.Xaml.IAttachedPropertyStore" /> o qualsiasi oggetto non null per accedere a un archivio di proprietà associabili predefinito statico.</param>
      <param name="name" vsli:raw="The identifier of the attachable property entry for which to get a value.">Identificatore della voce della proprietà associabile per la quale ottenere un valore.</param>
      <param name="value" vsli:raw="Out parameter. When this method returns, contains the destination object for the value if &lt;paramref name=&quot;name&quot; /&gt; exists in the store and has a value.">Parametro out. Quando questo metodo restituisce il risultato, contiene l'oggetto di destinazione per il valore se <paramref name="name" /> esiste nell'archivio e dispone di un valore.</param>
      <typeparam name="T" vsli:raw="The expected type of the output.">Tipo previsto dell'output.</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an attachable property entry for &lt;paramref name=&quot;name&quot; /&gt; was found in the store and a value was posted to &lt;paramref name=&quot;value&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se nell'archivio è stata trovata una voce della proprietà associabile per <paramref name="name" /> e un valore è stato inviato a <paramref name="value" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xaml.IAmbientProvider">
      <summary vsli:raw="Represents a service that can return information items about ambient properties or ambient types to type converters and markup extensions.">Rappresenta un servizio che può restituire informazioni sulle proprietà o sui tipi di ambiente ai convertitori di tipi ed estensioni di markup.</summary>
    </member>
    <member name="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Boolean,System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])">
      <summary vsli:raw="Returns an enumerable set of ambient property information items for the requested set of types and properties.">Restituisce un set enumerabile di informazioni sulle proprietà di ambiente per il set di tipi e proprietà richiesto.</summary>
      <param name="ceilingTypes" vsli:raw="Specifies one or more types that should stop the evaluation when they are encountered traversing upward in the object graph. This type holds the desired ambient property. May be &lt;see langword=&quot;null&quot; /&gt;.">Specifica uno o più tipi che devono interrompere la valutazione quando si verifica un attraversamento verso l'alto nell'oggetto grafico. Questo tipo contiene la proprietà di ambiente desiderata. Può essere <see langword="null" />.</param>
      <param name="searchLiveStackOnly" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to not use a saved context; &lt;see langword=&quot;false&quot; /&gt; to use a saved context. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per non utilizzare un contesto salvato; <see langword="false" /> per utilizzare un contesto salvato. Il valore predefinito è <see langword="false" />.</param>
      <param name="types" vsli:raw="Specifies one or more type identifier objects that identify the types to be considered ambient.">Specifica uno o più oggetti identificatore di tipo che identificano i tipi da considerare di ambiente.</param>
      <param name="properties" vsli:raw="Specifies one or more property identifier objects that identify the properties to be considered ambient.">Specifica uno o più oggetti identificatore di proprietà che identificano le proprietà da considerare di ambiente.</param>
      <returns vsli:raw="An enumerable set of ambient property information items for the requested set of types and properties. The property information for each &lt;see cref=&quot;T:System.Xaml.AmbientPropertyValue&quot; /&gt; that is returned will match one of the input &lt;paramref name=&quot;types&quot; /&gt; or &lt;paramref name=&quot;properties&quot; /&gt;.">Set enumerabile di informazioni sulle proprietà dell'ambiente per il set di tipi e proprietà richiesto. Le informazioni sulla proprietà per ogni oggetto <see cref="T:System.Xaml.AmbientPropertyValue" /> restituito corrisponderanno a uno degli oggetti <paramref name="types" /> o <paramref name="properties" /> di input.</returns>
    </member>
    <member name="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])">
      <summary vsli:raw="Returns an enumerable set of ambient property information items for the requested set of properties.">Restituisce un set enumerabile di informazioni sulle proprietà o sui tipi di ambiente per il set di proprietà richiesto.</summary>
      <param name="ceilingTypes" vsli:raw="Specifies one or more types that should stop the evaluation when they are encountered traversing upward in the object graph. This type holds the desired ambient property. May be &lt;see langword=&quot;null&quot; /&gt;.">Specifica uno o più tipi che devono interrompere la valutazione quando si verifica un attraversamento verso l'alto nell'oggetto grafico. Questo tipo contiene la proprietà di ambiente desiderata. Può essere <see langword="null" />.</param>
      <param name="properties" vsli:raw="Specifies one or more property identifier objects that identify the properties to be considered ambient.">Specifica uno o più oggetti identificatore di proprietà che identificano le proprietà da considerare di ambiente.</param>
      <returns vsli:raw="An enumerable set of ambient property information items for the requested set of properties. The property information for each &lt;see cref=&quot;T:System.Xaml.AmbientPropertyValue&quot; /&gt; that is returned will match one of the input &lt;paramref name=&quot;properties&quot; /&gt;.">Set enumerabile di informazioni sulle proprietà di ambiente per il set di proprietà richiesto. Le informazioni sulla proprietà per ogni oggetto <see cref="T:System.Xaml.AmbientPropertyValue" /> restituito corrisponderanno a uno dei parametri <paramref name="properties" /> di input.</returns>
    </member>
    <member name="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Xaml.XamlType[])">
      <summary vsli:raw="Returns an enumerable set of object instances of possible ambient types for the requested types.">Restituisce un set enumerabile di istanze di oggetti di possibili tipi di ambiente per i tipi richiesti.</summary>
      <param name="types" vsli:raw="The set of types from which to retrieve ambient type information.">Set di tipi da cui recuperare le informazioni sui tipi di ambiente.</param>
      <returns vsli:raw="An enumerable set of objects that represent the values for the requested set of &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; identifiers.">Set enumerabile di oggetti che rappresentano i valori per il set richiesto di identificatori di <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="M:System.Xaml.IAmbientProvider.GetFirstAmbientValue(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])">
      <summary vsli:raw="Returns a single ambient property information item from the requested set of properties, based on which property is first encountered.">Restituisce le informazioni su un singolo tipo o su una singola proprietà di ambiente dal set di proprietà richiesto, in base alla proprietà rilevata per prima.</summary>
      <param name="ceilingTypes" vsli:raw="Specifies one or more types that should stop the evaluation when they are encountered traversing upward in the object graph. This type holds the desired ambient property.">Specifica uno o più tipi che devono interrompere la valutazione quando si verifica un attraversamento verso l'alto nell'oggetto grafico. Questo tipo contiene la proprietà di ambiente desiderata.</param>
      <param name="properties" vsli:raw="Specifies one or more objects that identify the properties to be considered ambient.">Specifica uno o più oggetti che identificano le proprietà da considerare di ambiente.</param>
      <returns vsli:raw="A single ambient property information item for the first ambient property value from the &lt;paramref name=&quot;properties&quot; /&gt; list that is found.">Informazioni su una singola proprietà di ambiente per il primo valore della proprietà di ambiente dall'elenco <paramref name="properties" /> che è stato trovato.</returns>
    </member>
    <member name="M:System.Xaml.IAmbientProvider.GetFirstAmbientValue(System.Xaml.XamlType[])">
      <summary vsli:raw="Returns the first matching object that is a possible ambient type for the requested types.">Restituisce il primo oggetto corrispondente, ovvero un possibile tipo di ambiente per i tipi richiesti.</summary>
      <param name="types" vsli:raw="The set of types from which to retrieve ambient type information.">Set di tipi da cui recuperare le informazioni sui tipi di ambiente.</param>
      <returns vsli:raw="The first result object for the requested set.">Il primo oggetto risultato per il set richiesto.</returns>
    </member>
    <member name="T:System.Xaml.IAttachedPropertyStore">
      <summary vsli:raw="Represents an attachable member store for an object where attachable members are set. This attachable member store can then be referenced with &lt;see cref=&quot;T:System.Xaml.AttachablePropertyServices&quot; /&gt;.">Rappresenta un archivio di membri associabili per un oggetto in cui vengono impostati i membri associabili. È possibile fare riferimento a questo archivio di membri associabili con un oggetto <see cref="T:System.Xaml.AttachablePropertyServices" />.</summary>
    </member>
    <member name="M:System.Xaml.IAttachedPropertyStore.CopyPropertiesTo(System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)">
      <summary vsli:raw="Copies all attachable member/value pairs from this attachable member store into a destination array.">Copia tutte le coppie membro associabile/valore da questo archivio di membri associabili in una matrice di destinazione.</summary>
      <param name="array" vsli:raw="The destination array. The array is a generic array, should be passed undimensioned, and should have components of &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; and &lt;see langword=&quot;object&quot; /&gt;.">Matrice di destinazione. Si tratta di una matrice generica, che deve essere passata non dimensionata e che deve disporre di componenti di <see cref="T:System.Xaml.AttachableMemberIdentifier" /> e <see langword="object" />.</param>
      <param name="index" vsli:raw="The source index where copying should begin.">Indice di origine in cui deve iniziare la copia.</param>
    </member>
    <member name="P:System.Xaml.IAttachedPropertyStore.PropertyCount">
      <summary vsli:raw="Gets the count of the attachable member entries in this attachable member store.">Ottiene il numero delle voci dei membri associabili in questo archivio di membri associabili.</summary>
      <returns vsli:raw="The integer count of entries in the store.">Numero intero di voci nell'archivio.</returns>
    </member>
    <member name="M:System.Xaml.IAttachedPropertyStore.RemoveProperty(System.Xaml.AttachableMemberIdentifier)">
      <summary vsli:raw="Removes the entry for the specified attachable member from this attachable member store.">Rimuove la voce per il membro associabile specificato da questo archivio di membri associabili.</summary>
      <param name="attachableMemberIdentifier" vsli:raw="The XAML type system identifier for the attachable member entry to remove.">Identificatore di sistema dei tipi XAML per la voce del membro associabile da rimuovere.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an attachable member entry for &lt;paramref name=&quot;attachableMemberIdentifier&quot; /&gt; was found in the store and removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se nell'archivio è stata trovata e rimossa una voce del membro associabile per <paramref name="attachableMemberIdentifier" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.IAttachedPropertyStore.SetProperty(System.Xaml.AttachableMemberIdentifier,System.Object)">
      <summary vsli:raw="Sets a value for the specified attachable member in the specified store.">Imposta un valore per il membro associabile specificato nell'archivio specificato.</summary>
      <param name="attachableMemberIdentifier" vsli:raw="The XAML type system identifier for the attachable member entry to set.">Identificatore di sistema dei tipi XAML per la voce del membro associabile da impostare.</param>
      <param name="value" vsli:raw="The value to set.">Il valore da impostare.</param>
    </member>
    <member name="M:System.Xaml.IAttachedPropertyStore.TryGetProperty(System.Xaml.AttachableMemberIdentifier,System.Object@)">
      <summary vsli:raw="Attempts to get a value for the specified attachable member in the specified store.">Tenta di ottenere un valore per il membro associabile specificato nell'archivio specificato.</summary>
      <param name="attachableMemberIdentifier" vsli:raw="The XAML type system identifier for the attachable member entry to get.">Identificatore di sistema dei tipi XAML per la voce del membro associabile da ottenere.</param>
      <param name="value" vsli:raw="Out parameter. When this method returns, contains the destination object for the value if &lt;paramref name=&quot;attachableMemberIdentifier&quot; /&gt; exists in the store and has a value.">Parametro out. Quando questo metodo restituisce il risultato, contiene l'oggetto di destinazione per il valore se <paramref name="attachableMemberIdentifier" /> esiste nell'archivio e dispone di un valore.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an attachable member entry for &lt;paramref name=&quot;attachableMemberIdentifier&quot; /&gt; was found in the store and a value was posted to &lt;paramref name=&quot;value&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se nell'archivio è stata trovata una voce del membro associabile per <paramref name="attachableMemberIdentifier" /> e un valore è stato inviato a <paramref name="value" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xaml.IDestinationTypeProvider">
      <summary vsli:raw="Represents a service that can return a CLR type system identifier for the destination type. The destination type is relevant when the destination type for a property-setting operation is indirectly reported by reflection or other mechanisms.">Rappresenta un servizio che può restituire un identificatore di sistema dei tipi CLR per il tipo di destinazione. Il tipo di destinazione è importante quando il tipo di destinazione per un'operazione di impostazione di proprietà viene indirettamente segnalato dalla reflection o da altri meccanismi.</summary>
    </member>
    <member name="M:System.Xaml.IDestinationTypeProvider.GetDestinationType">
      <summary vsli:raw="Returns the CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; that identifies the destination type for the relevant type converter or markup extension.">Restituisce l'oggetto <see cref="T:System.Type" /> CLR che identifica il tipo di destinazione per il convertitore di tipi o l'estensione di markup pertinente.</summary>
      <returns vsli:raw="A CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; value for the destination type.">Valore di <see cref="T:System.Type" /> CLR per il tipo di destinazione.</returns>
    </member>
    <member name="T:System.Xaml.INamespacePrefixLookup">
      <summary vsli:raw="Represents a service that can return the recommended prefix for a XAML namespace mapping to consumers. Consumers might include design environments or serializers.">Rappresenta un servizio che può restituire il prefisso consigliato per il mapping di uno spazio dei nomi XAML ai consumer. I consumer possono includere ambienti di progettazione o serializzatori.</summary>
    </member>
    <member name="M:System.Xaml.INamespacePrefixLookup.LookupPrefix(System.String)">
      <summary vsli:raw="Returns the recommended prefix for a specified XAML namespace identifier.">Restituisce il prefisso consigliato per un identificatore dello spazio dei nomi XAML specificato.</summary>
      <param name="ns" vsli:raw="The XAML namespace identifier string for which to obtain a prefix.">Stringa identificatore dello spazio dei nomi XAML per cui ottenere un prefisso.</param>
      <returns vsli:raw="The recommended prefix.">Prefisso consigliato.</returns>
    </member>
    <member name="T:System.Xaml.IRootObjectProvider">
      <summary vsli:raw="Describes a service that can return the root object of markup being parsed.">Descrive un servizio che può restituire l'oggetto radice del markup analizzato.</summary>
    </member>
    <member name="P:System.Xaml.IRootObjectProvider.RootObject">
      <summary vsli:raw="Gets the root object from markup or from an object graph.">Ottiene l'oggetto radice dal markup o da un oggetto grafico.</summary>
      <returns vsli:raw="The root object.">Oggetto radice.</returns>
    </member>
    <member name="T:System.Xaml.IXamlIndexingReader">
      <summary vsli:raw="Provides a service that represents indexed node control for a simple implementation of a node-based XAML reader.">Fornisce un servizio che rappresenta il controllo di nodi indicizzati per una semplice implementazione di un reader XAML basato su nodi.</summary>
    </member>
    <member name="P:System.Xaml.IXamlIndexingReader.Count">
      <summary vsli:raw="Gets the number of nodes in the current external node set.">Ottiene il numero di nodi nel set corrente di nodi esterni.</summary>
      <returns vsli:raw="The number of nodes in the current external node set.">Numero di nodi nel set corrente di nodi esterni.</returns>
    </member>
    <member name="P:System.Xaml.IXamlIndexingReader.CurrentIndex">
      <summary vsli:raw="Gets or sets the index number of the current reader position for the indexed list view of XAML nodes.">Ottiene o imposta il numero di indice della posizione corrente del reader per la visualizzazione elenco indicizzato di nodi XAML.</summary>
      <returns vsli:raw="The index number of the current reader position.">Numero di indice della posizione corrente del reader.</returns>
    </member>
    <member name="T:System.Xaml.IXamlLineInfo">
      <summary vsli:raw="Describes a service for reporting text line information in XAML reader implementations.">Descrive un servizio per la segnalazione di informazioni sulla riga di testo nelle implementazioni del reader XAML.</summary>
    </member>
    <member name="P:System.Xaml.IXamlLineInfo.HasLineInfo">
      <summary vsli:raw="Gets a value that specifies whether line information is available.">Ottiene un valore che specifica se le informazioni sulla riga sono disponibili.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if line information is available; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se le informazioni sulla riga sono disponibili; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.IXamlLineInfo.LineNumber">
      <summary vsli:raw="Gets the line number to report.">Ottiene il numero di riga da segnalare.</summary>
      <returns vsli:raw="The line number to report.">Numero di riga da segnalare.</returns>
    </member>
    <member name="P:System.Xaml.IXamlLineInfo.LinePosition">
      <summary vsli:raw="Gets the line position to report.">Ottiene la posizione di riga da segnalare.</summary>
      <returns vsli:raw="The line position to report.">Posizione di riga da segnalare.</returns>
    </member>
    <member name="T:System.Xaml.IXamlLineInfoConsumer">
      <summary vsli:raw="Describes a service where a XAML writer can use reported line information and then include the information in the output.">Descrive un servizio in cui un writer XAML può utilizzare le informazioni riportate sulla riga e quindi includerle nell'output.</summary>
    </member>
    <member name="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)">
      <summary vsli:raw="Collects line information.">Raccoglie le informazioni sulla riga.</summary>
      <param name="lineNumber" vsli:raw="The line number to use in the output.">Numero di riga da utilizzare nell'output.</param>
      <param name="linePosition" vsli:raw="The line position to use in the output.">Posizione di riga da utilizzare nell'output.</param>
    </member>
    <member name="P:System.Xaml.IXamlLineInfoConsumer.ShouldProvideLineInfo">
      <summary vsli:raw="Gets a value that determines whether a line information service should provide values and therefore, should also call &lt;see cref=&quot;M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)&quot; /&gt; when relevant.">Ottiene un valore che determina se un servizio di informazioni sulla riga deve fornire i valori e di conseguenza chiamare anche <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" />, quando necessario.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if line information is used by the implementation; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se le informazioni sulla riga vengono utilizzate dall'implementazione; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xaml.IXamlNameProvider">
      <summary vsli:raw="Provides a service that is used during save and write operations to input an object and return a XAML name.">Fornisce un servizio che viene utilizzato durante le operazioni di scrittura e salvataggio per immettere un oggetto e restituire un nome XAML.</summary>
    </member>
    <member name="M:System.Xaml.IXamlNameProvider.GetName(System.Object)">
      <summary vsli:raw="Retrieves the XAML name of the specified object.">Recupera il nome XAML dell'oggetto specificato.</summary>
      <param name="value" vsli:raw="The object to get the name for.">Oggetto per cui ottenere il nome.</param>
      <returns vsli:raw="The XAML name value of the requested object.">Valore nome XAML dell'oggetto richiesto.</returns>
    </member>
    <member name="T:System.Xaml.IXamlNameResolver">
      <summary vsli:raw="Describes a service that can return objects that are specified by XAML name, or alternatively, returns a token that defers name resolution. The service can also return an enumerable set of all named objects that are in the XAML namescope.">Descrive un servizio che può restituire oggetti specificati in base al nome XAML o in alternativa restituire un token che posticipa la risoluzione dei nomi. Il servizio può inoltre restituire un set enumerabile di tutti gli oggetti denominati presenti nel NameScope XAML.</summary>
    </member>
    <member name="M:System.Xaml.IXamlNameResolver.GetAllNamesAndValuesInScope">
      <summary vsli:raw="Returns an enumerable set of all named objects in the XAML namescope.">Restituisce un set enumerabile di tutti gli oggetti denominati nel NameScope XAML.</summary>
      <returns vsli:raw="An enumerable set of &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; objects. For each &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt;, the &lt;see cref=&quot;P:System.Collections.Generic.KeyValuePair`2.Key&quot; /&gt; component is a string, and the &lt;see cref=&quot;P:System.Collections.Generic.KeyValuePair`2.Value&quot; /&gt; component is the object that uses the &lt;see cref=&quot;P:System.Collections.Generic.KeyValuePair`2.Key&quot; /&gt; name in the XAML namescope.">Set enumerabile di oggetti <see cref="T:System.Collections.Generic.KeyValuePair`2" />. Per ogni oggetto <see cref="T:System.Collections.Generic.KeyValuePair`2" />, il componente <see cref="P:System.Collections.Generic.KeyValuePair`2.Key" /> è una stringa e il componente <see cref="P:System.Collections.Generic.KeyValuePair`2.Value" /> è l'oggetto che utilizza il nome <see cref="P:System.Collections.Generic.KeyValuePair`2.Key" /> nel NameScope XAML.</returns>
    </member>
    <member name="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String})">
      <summary vsli:raw="Returns an object that can correct for certain markup patterns that produce forward references.">Restituisce un oggetto che può correggere alcuni modelli di markup che producono riferimenti in avanti.</summary>
      <param name="names" vsli:raw="A collection of names that are possible forward references.">Insieme di nomi che rappresentano possibili riferimenti in avanti.</param>
      <returns vsli:raw="An object that provides a token for lookup behavior to be evaluated later.">Oggetto che fornisce un token per il comportamento di ricerca da valutare in un secondo momento.</returns>
    </member>
    <member name="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
      <summary vsli:raw="Returns an object that can correct for certain markup patterns that produce forward references.">Restituisce un oggetto che può correggere alcuni modelli di markup che producono riferimenti in avanti.</summary>
      <param name="names" vsli:raw="A collection of names that are possible forward references.">Insieme di nomi che rappresentano possibili riferimenti in avanti.</param>
      <param name="canAssignDirectly" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to immediately assign the resolved name reference to the target property. &lt;see langword=&quot;false&quot; /&gt; to call the user code for a reparse. The default behavior is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per assegnare immediatamente il riferimento di nome risolto alla proprietà di destinazione. <see langword="false" /> per chiamare il codice utente per una nuova analisi. Il comportamento predefinito è <see langword="false" />.</param>
      <returns vsli:raw="An object that provides a token for lookup behavior to be evaluated later.">Oggetto che fornisce un token per il comportamento di ricerca da valutare in un secondo momento.</returns>
    </member>
    <member name="P:System.Xaml.IXamlNameResolver.IsFixupTokenAvailable">
      <summary vsli:raw="Gets a value that determines whether calling &lt;see cref=&quot;M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)&quot; /&gt; is available in order to resolve a name into a token for forward resolution.">Ottiene un valore che determina se la chiamata a <see cref="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)" /> è disponibile per risolvere un nome in un token per la risoluzione in avanti.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)&quot; /&gt; is available as an implementation that returns a useful token for forward resolution; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)" /> è disponibile come un'implementazione che restituisce un token utile per la risoluzione in avanti; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="E:System.Xaml.IXamlNameResolver.OnNameScopeInitializationComplete">
      <summary vsli:raw="Occurs when a XAML processor has registered all the relevant names to the backing XAML namescope.">Si verifica quando un processore XAML ha registrato tutti i nomi relativi al NameScope XAML sottostante.</summary>
    </member>
    <member name="M:System.Xaml.IXamlNameResolver.Resolve(System.String)">
      <summary vsli:raw="Resolves an object from a name reference.">Risolve un oggetto da un riferimento del nome.</summary>
      <param name="name" vsli:raw="The name reference to resolve.">Riferimento del nome da risolvere.</param>
      <returns vsli:raw="The resolved object; or null.">Oggetto risolto o null.</returns>
    </member>
    <member name="M:System.Xaml.IXamlNameResolver.Resolve(System.String,System.Boolean@)">
      <summary vsli:raw="Resolves an object from a name reference, and provides a tracking value that reports whether the object is fully initialized for object graph purposes.">Risolve un oggetto da un riferimento del nome e fornisce un valore di rilevamento che riporta se l'oggetto viene inizializzato completamente ai fini degli oggetti grafici.</summary>
      <param name="name" vsli:raw="The name reference to resolve.">Riferimento del nome da risolvere.</param>
      <param name="isFullyInitialized" vsli:raw="When this method returns, &lt;see langword=&quot;true&quot; /&gt; if the returned object has any dependencies on unresolved references; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Quando questo metodo restituisce il risultato, <see langword="true" /> se l'oggetto restituito presenta dipendenze nei riferimenti non risolti; in caso contrario, <see langword="false" />.</param>
      <returns vsli:raw="An object that provides a token for lookup behavior to be evaluated later.">Oggetto che fornisce un token per il comportamento di ricerca da valutare in un secondo momento.</returns>
    </member>
    <member name="T:System.Xaml.IXamlNamespaceResolver">
      <summary vsli:raw="Describes a service that can return a XAML namespace that is based on its prefix as it is mapped in XAML markup.">Descrive un servizio che può restituire uno spazio dei nomi XAML in base al prefisso mappato nel markup XAML.</summary>
    </member>
    <member name="M:System.Xaml.IXamlNamespaceResolver.GetNamespace(System.String)">
      <summary vsli:raw="Retrieves a XAML namespace identifier for the specified prefix string.">Recupera un identificatore dello spazio dei nomi XAML per la stringa di prefisso specificata.</summary>
      <param name="prefix" vsli:raw="The prefix for which to retrieve the XAML namespace information.">Prefisso per cui recuperare le informazioni sullo spazio dei nomi XAML.</param>
      <returns vsli:raw="The requested XAML namespace identifier, as a string.">Identificatore dello spazio dei nomi XAML richiesto, espresso come stringa.</returns>
    </member>
    <member name="M:System.Xaml.IXamlNamespaceResolver.GetNamespacePrefixes">
      <summary vsli:raw="Returns all the possible prefix-to-XAML namespace mappings (&lt;see cref=&quot;T:System.Xaml.NamespaceDeclaration&quot; /&gt; values) that are available in the active XAML schema context.">Restituisce tutti i mapping prefisso-spazio dei nomi XAML possibili (valori di <see cref="T:System.Xaml.NamespaceDeclaration" />) che sono disponibili nel contesto dello schema XAML attivo.</summary>
      <returns vsli:raw="An enumerable set of &lt;see cref=&quot;T:System.Xaml.NamespaceDeclaration&quot; /&gt; values. To get all the prefix strings, get the &lt;see cref=&quot;P:System.Xaml.NamespaceDeclaration.Prefix&quot; /&gt; value from each value in the returned set. To get prefixes for specific XAML namespaces, process any return value that has the desired &lt;see cref=&quot;P:System.Xaml.NamespaceDeclaration.Namespace&quot; /&gt; value.">Set enumerabile di valori di <see cref="T:System.Xaml.NamespaceDeclaration" />. Per ottenere tutte le stringhe di prefisso, ottenere il valore di <see cref="P:System.Xaml.NamespaceDeclaration.Prefix" /> da ogni valore nel set restituito. Per ottenere prefissi per spazi dei nomi XAML specifici, elaborare qualsiasi valore restituito che dispone del valore <see cref="P:System.Xaml.NamespaceDeclaration.Namespace" /> desiderato.</returns>
    </member>
    <member name="T:System.Xaml.IXamlObjectWriterFactory">
      <summary vsli:raw="Represents a service that generates a &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; that is based on the current internal parser context.">Rappresenta un servizio che genera un oggetto <see cref="T:System.Xaml.XamlObjectWriter" /> basato sul contesto del parser interno corrente.</summary>
    </member>
    <member name="M:System.Xaml.IXamlObjectWriterFactory.GetParentSettings">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterSettings&quot; /&gt; from the original internal parser context.">Restituisce l'oggetto <see cref="T:System.Xaml.XamlObjectWriterSettings" /> dal contesto del parser interno originale.</summary>
      <returns vsli:raw="The settings from the original internal parser context.">Impostazioni dal contesto del parser interno originale.</returns>
    </member>
    <member name="M:System.Xaml.IXamlObjectWriterFactory.GetXamlObjectWriter(System.Xaml.XamlObjectWriterSettings)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; that is based on active XAML schema context.">Restituisce un oggetto <see cref="T:System.Xaml.XamlObjectWriter" /> basato sul contesto dello schema XAML attivo.</summary>
      <param name="settings" vsli:raw="The settings to use for construction and initialization of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt;.">Impostazioni da utilizzare per la costruzione e l'inizializzazione dell'oggetto <see cref="T:System.Xaml.XamlObjectWriter" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; that has the specified settings.">Oggetto <see cref="T:System.Xaml.XamlObjectWriter" /> con le impostazioni specificate.</returns>
    </member>
    <member name="T:System.Xaml.IXamlSchemaContextProvider">
      <summary vsli:raw="Represents a service that provides XAML schema context information to type converters and markup extensions.">Rappresenta un servizio che fornisce informazioni sul contesto dello schema XAML a convertitori di tipi ed estensioni di markup.</summary>
    </member>
    <member name="P:System.Xaml.IXamlSchemaContextProvider.SchemaContext">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; that is reported by the service context.">Ottiene l'oggetto <see cref="T:System.Xaml.XamlSchemaContext" /> segnalato dal contesto del servizio.</summary>
      <returns vsli:raw="The XAML schema context that is reported by the service context.">Contesto dello schema XAML segnalato dal contesto del servizio.</returns>
    </member>
    <member name="T:System.Xaml.NamespaceDeclaration">
      <summary vsli:raw="Declares the identifier and the prefix of a XAML namespace by storing these string values as separate properties.">Dichiara l'identificatore e il prefisso di uno spazio dei nomi XAML, archiviando tali valori stringa come proprietà separate.</summary>
    </member>
    <member name="M:System.Xaml.NamespaceDeclaration.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.NamespaceDeclaration&quot; /&gt; class using initial property values.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.NamespaceDeclaration" /> utilizzando i valori delle proprietà iniziali.</summary>
      <param name="ns" vsli:raw="The XAML namespace identifier, as a string.">Identificatore dello spazio dei nomi XAML specificato come una stringa.</param>
      <param name="prefix" vsli:raw="The string prefix that is used for the namespace in prefix mappings.">Prefisso di stringa utilizzato per lo spazio dei nomi nei mapping dei prefissi.</param>
    </member>
    <member name="P:System.Xaml.NamespaceDeclaration.Namespace">
      <summary vsli:raw="Gets the identifier component of a &lt;see cref=&quot;T:System.Xaml.NamespaceDeclaration&quot; /&gt;.">Ottiene il componente identificatore di un oggetto <see cref="T:System.Xaml.NamespaceDeclaration" />.</summary>
      <returns vsli:raw="The identifier of the XAML namespace declaration.">Identificatore della dichiarazione dello spazio dei nomi XAML.</returns>
    </member>
    <member name="P:System.Xaml.NamespaceDeclaration.Prefix">
      <summary vsli:raw="Gets the prefix that is used as the XAML namespace mapping prefix for a &lt;see cref=&quot;T:System.Xaml.NamespaceDeclaration&quot; /&gt;.">Ottiene il prefisso utilizzato come mapping dello spazio dei nomi XAML per un oggetto <see cref="T:System.Xaml.NamespaceDeclaration" />.</summary>
      <returns vsli:raw="The prefix string for this &lt;see cref=&quot;T:System.Xaml.NamespaceDeclaration&quot; /&gt;.">Stringa di prefisso per l'oggetto <see cref="T:System.Xaml.NamespaceDeclaration" />.</returns>
    </member>
    <member name="T:System.Xaml.Permissions.XamlAccessLevel">
      <summary>Definisce il controllo di accesso di assembly e tipi per scopi di caricamento XAML.</summary>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessTo(System.Reflection.Assembly)">
      <summary>Restituisce un'istanza di <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> basata su un assembly richiesto da <see cref="T:System.Reflection.Assembly" />.</summary>
      <param name="assembly">Assembly per la richiesta.</param>
      <returns>Istanza di <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> con il valore <paramref name="assembly" /> utilizzato come informazioni di origine per <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assembly" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessTo(System.Reflection.AssemblyName)">
      <summary>Restituisce un'istanza di <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> basata su un assembly richiesto da <see cref="T:System.Reflection.AssemblyName" />.</summary>
      <param name="assemblyName">Nome dell'assembly per la richiesta.</param>
      <returns>Istanza di <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> con il valore <paramref name="assemblyName" /> utilizzato come informazioni di origine per <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="assemblyName" /> non è un nome completo di assembly valido.</exception>
    </member>
    <member name="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName">
      <summary>Ottiene l'oggetto <see cref="T:System.Reflection.AssemblyName" /> dell'assembly per il quale l'oggetto <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> determina le autorizzazioni.</summary>
      <returns>Oggetto <see cref="T:System.Reflection.AssemblyName" /> dell'assembly per il quale l'oggetto <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> determina le autorizzazioni.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo(System.String)">
      <summary>Restituisce un'istanza di <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> basata su un tipo specifico contraddistinto dal nome completo.</summary>
      <param name="assemblyQualifiedTypeName">Stringa analizzata come un nome del tipo completo di assembly.</param>
      <returns>Istanza di <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> con il valore <paramref name="assemblyQualifiedTypeName" /> utilizzato come informazioni di origine per <see cref="P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName" /> e <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" /> determinati dalla reflection sul tipo.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyQualifiedTypeName" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="assemblyQualifiedTypeName" /> non è un nome del tipo completo di assembly valido.  
-oppure- 
All'interno di <paramref name="assemblyQualifiedTypeName" /> il nome di assembly non è un nome di assembly valido.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo(System.Type)">
      <summary>Restituisce un'istanza di <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> basata su un tipo specifico contraddistinto da <see cref="T:System.Type" />.</summary>
      <param name="type">Oggetto <see cref="T:System.Type" /> per cui richiedere l'accesso.</param>
      <returns>Istanza di <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> con il valore <paramref name="type" /> utilizzato come informazioni di origine per <see cref="P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName" /> e <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" /> determinati dalla reflection sul tipo.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName">
      <summary>Ottiene il nome di stringa non qualificato del tipo per il quale l'oggetto <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> determina autorizzazioni.</summary>
      <returns>Nome di stringa non qualificato del tipo per il quale l'oggetto <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> determina autorizzazioni.</returns>
    </member>
    <member name="T:System.Xaml.Permissions.XamlLoadPermission">
      <summary>Dichiara le autorizzazioni per il caricamento di tipi dagli assembly utilizzati da un reader o un writer XAML.</summary>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Collections.Generic.IEnumerable{System.Xaml.Permissions.XamlAccessLevel})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> utilizzando un set enumerabile di valori <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> specifici.</summary>
      <param name="allowedAccess">Set enumerabile di valori <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> specifici.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="allowedAccess" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="allowedAccess" /> conteneva informazioni non valide, ad esempio un elemento null.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> utilizzando le autorizzazioni esistenti.</summary>
      <param name="state">Valore di enumerazione <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Xaml.Permissions.XamlAccessLevel)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> utilizzando un singolo valore <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />.</summary>
      <param name="allowedAccess">Valore <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> di definizione.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="allowedAccess" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess">
      <summary>Ottiene l'elenco di tutti i valori <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> rappresentato dall'oggetto <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</summary>
      <returns>Elenco di sola lettura di valori <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> o <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Copy">
      <summary>Crea e restituisce una copia identica dell'oggetto <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> corrente.</summary>
      <returns>Copia dell'oggetto <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> corrente.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Equals(System.Object)">
      <param name="obj" />
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.FromXml(System.Security.SecurityElement)">
      <summary>Ricostruisce un oggetto di sicurezza con uno stato specificato da una codifica XML.</summary>
      <param name="elem">Codifica XML da usare per ricostruire l'oggetto di sicurezza.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elem" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="elem" /> non contiene la codifica XML per <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.  
In alternativa 
L'attributo di versione all'interno di <paramref name="elem" /> non è supportato.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.GetHashCode" />
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Includes(System.Xaml.Permissions.XamlAccessLevel)">
      <summary>Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> include un oggetto <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> specificato nell'elenco <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" />.</summary>
      <param name="requestedAccess">Oggetto <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> specifico da verificare.</param>
      <returns>
        <see langword="true" /> se <paramref name="requestedAccess" /> esiste come elemento nell'elenco <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" /> dell'oggetto <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> corrente. In caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestedAccess" /> è null.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Intersect(System.Security.IPermission)">
      <summary>Crea e restituisce un oggetto <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> che rappresenta l'intersezione tra l'oggetto <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> corrente e l'autorizzazione specificata.</summary>
      <param name="target">
        <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> da intersecare con l'oggetto <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> corrente. Può essere <see langword="null" />.</param>
      <returns>Nuova autorizzazione che rappresenta l'intersezione tra l'oggetto <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> corrente e l'oggetto <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> specificato. La nuova autorizzazione è <see langword="null" /> se l'intersezione è vuota.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> non è <see langword="null" /> oppure non è un oggetto <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina se l'oggetto <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> corrente è un sottoinsieme dell'autorizzazione specificata.</summary>
      <param name="target">Autorizzazione da testare per la relazione del subset. Può essere <see langword="null" />.</param>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> corrente è un sottoinsieme dell'autorizzazione specificata. In caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> non è <see langword="null" /> oppure non è un oggetto <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted">
      <summary>Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> specifica autorizzazioni senza restrizioni.</summary>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> specifica autorizzazioni senza restrizioni. <see langword="false" /> se l'oggetto <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> dispone di restrizioni specifiche a livello di accesso in <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" /> o non dispone di autorizzazioni.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.ToXml">
      <summary>Crea una codifica XML dell'oggetto <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> e del relativo stato corrente.</summary>
      <returns>Codifica XML dell'oggetto <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> che include eventuali informazioni sullo stato.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Union(System.Security.IPermission)">
      <summary>Crea un'autorizzazione che rappresenta l'unione tra l'oggetto <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> corrente e l'autorizzazione specificata.</summary>
      <param name="other">Oggetto <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> da combinare con l'oggetto <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> corrente. Può essere <see langword="null" />.</param>
      <returns>Nuovo <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> che è l'unione tra l'oggetto <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> corrente e l'oggetto <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> specificato.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="other" /> non è <see langword="null" /> oppure non è un oggetto <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</exception>
    </member>
    <member name="T:System.Xaml.Schema.AllowedMemberLocations">
      <summary vsli:raw="Specifies the syntax restrictions enforced on a property when it is set in XAML, as reported by a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">Specifica le restrizioni della sintassi applicate a una proprietà quando viene impostata in XAML, come riportato da un oggetto <see cref="T:System.Xaml.XamlDirective" />.</summary>
    </member>
    <member name="F:System.Xaml.Schema.AllowedMemberLocations.Any">
      <summary vsli:raw="Property can be set in either &lt;see cref=&quot;F:System.Xaml.Schema.AllowedMemberLocations.Attribute&quot; /&gt; or &lt;see cref=&quot;F:System.Xaml.Schema.AllowedMemberLocations.MemberElement&quot; /&gt; location. (This enumeration member is defined as the combination of those values.)">La proprietà può essere impostata nel percorso <see cref="F:System.Xaml.Schema.AllowedMemberLocations.Attribute" /> o <see cref="F:System.Xaml.Schema.AllowedMemberLocations.MemberElement" />. Questo membro di enumerazione viene definito come combinazione di tali valori.</summary>
    </member>
    <member name="F:System.Xaml.Schema.AllowedMemberLocations.Attribute">
      <summary vsli:raw="Property can be set in XAML attribute syntax.">La proprietà può essere impostata nella sintassi degli attributi XAML.</summary>
    </member>
    <member name="F:System.Xaml.Schema.AllowedMemberLocations.MemberElement">
      <summary vsli:raw="Property can be set in XAML property element syntax.">La proprietà può essere impostata nella sintassi degli elementi proprietà XAML.</summary>
    </member>
    <member name="F:System.Xaml.Schema.AllowedMemberLocations.None">
      <summary vsli:raw="Property cannot be set in XAML at all. This is the default.">La proprietà non può essere impostata in XAML. Questa è l'impostazione predefinita.</summary>
    </member>
    <member name="T:System.Xaml.Schema.ShouldSerializeResult">
      <summary vsli:raw="Defines serialization behavior as reported by a &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt;.">Definisce il comportamento di serializzazione come riportato da un oggetto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
    </member>
    <member name="F:System.Xaml.Schema.ShouldSerializeResult.Default">
      <summary vsli:raw="Unknown, defer to the type of the member.">Sconosciuto, rinviare al tipo del membro.</summary>
    </member>
    <member name="F:System.Xaml.Schema.ShouldSerializeResult.False">
      <summary vsli:raw="Do not serialize the result.">Non serializza il risultato.</summary>
    </member>
    <member name="F:System.Xaml.Schema.ShouldSerializeResult.True">
      <summary vsli:raw="Serialize the result.">Serializza il risultato.</summary>
    </member>
    <member name="T:System.Xaml.Schema.XamlCollectionKind">
      <summary vsli:raw="Describes the collection metaphor (if any) used by a XAML member.">Descrive la metafora dell'insieme (se presente) utilizzata da un membro XAML.</summary>
    </member>
    <member name="F:System.Xaml.Schema.XamlCollectionKind.Array">
      <summary vsli:raw="XAML member supports an array collection.">Il membro XAML supporta un insieme di matrici.</summary>
    </member>
    <member name="F:System.Xaml.Schema.XamlCollectionKind.Collection">
      <summary vsli:raw="XAML member supports a list or a collection.">Il membro XAML supporta un elenco o un insieme.</summary>
    </member>
    <member name="F:System.Xaml.Schema.XamlCollectionKind.Dictionary">
      <summary vsli:raw="XAML member supports a dictionary (key-value pairs).">Il membro XAML supporta un dizionario (coppie chiave-valore).</summary>
    </member>
    <member name="F:System.Xaml.Schema.XamlCollectionKind.None">
      <summary vsli:raw="XAML member does not support a collection.">Il membro XAML non supporta un insieme.</summary>
    </member>
    <member name="T:System.Xaml.Schema.XamlMemberInvoker">
      <summary vsli:raw="Provides an extension point that can access member characteristics of a XAML member through techniques other than reflection.">Fornisce un punto di estensione che può accedere alle caratteristiche di un membro XAML con tecniche diverse dalla reflection.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlMemberInvoker.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlMemberInvoker.#ctor(System.Xaml.XamlMember)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; class, based on a provided &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> in base a un oggetto <see cref="T:System.Xaml.XamlMember" /> specificato.</summary>
      <param name="member" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; value for the specific XAML member relevant to this &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt;.">Valore <see cref="T:System.Xaml.XamlMember" /> per il membro XAML specifico relativo all'oggetto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;member&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="member" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)">
      <summary vsli:raw="Gets a value of the relevant property from an instance.">Ottiene un valore della proprietà pertinente da un'istanza.</summary>
      <param name="instance" vsli:raw="An instance of the owner type for the member.">Istanza del tipo di proprietario per il membro.</param>
      <returns vsli:raw="The requested property value.">Valore della proprietà richiesto.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="Invoked this method on a &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; that is based on an unknown &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; Invoked this method on a write-only member.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Questo metodo viene richiamato su un oggetto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> basato su un oggetto <see cref="T:System.Xaml.XamlMember" /> sconosciuto.  
 -oppure-  
Richiamato questo metodo su un membro in sola scrittura.  
 -oppure-  
 <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)">
      <summary vsli:raw="Sets a value of the relevant property on an instance.">Imposta un valore della proprietà pertinente in un'istanza.</summary>
      <param name="instance" vsli:raw="An instance of the owner type for the member.">Istanza del tipo di proprietario per il membro.</param>
      <param name="value" vsli:raw="The property value to set.">Valore della proprietà da impostare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="Invoked this method on a &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; that is based on an unknown &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; Invoked this method on a read-only member.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Questo metodo viene richiamato su un oggetto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> basato su un oggetto <see cref="T:System.Xaml.XamlMember" /> sconosciuto.  
 -oppure-  
Richiamato questo metodo su un membro in sola lettura.  
 -oppure-  
 <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlMemberInvoker.ShouldSerializeValue(System.Object)">
      <summary vsli:raw="Indicates whether the value needs to be persisted by serialization processes.">Indica se il valore deve essere conservato dai processi di serializzazione.</summary>
      <param name="instance" vsli:raw="The instance with the property to be examined for persistence.">Istanza con la proprietà di cui verificare la persistenza.</param>
      <returns vsli:raw="A value of the enumeration.">Valore dell'enumerazione.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the CLR method that gets values for the property that is relevant for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt;.">Ottiene l'oggetto <see cref="T:System.Reflection.MethodInfo" /> per il metodo CLR che ottiene i valori per la proprietà relativa all'oggetto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the CLR method that gets values for the property that is relevant for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">Oggetto <see cref="T:System.Reflection.MethodInfo" /> per il metodo CLR che ottiene i valori per la proprietà relativa all'oggetto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> o <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the CLR method that sets values for the property that is relevant for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt;.">Ottiene l'oggetto <see cref="T:System.Reflection.MethodInfo" /> per il metodo CLR che imposta i valori per la proprietà relativa all'oggetto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the CLR method that sets values for the property that is relevant for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">Oggetto <see cref="T:System.Reflection.MethodInfo" /> per il metodo CLR che imposta i valori per la proprietà relativa all'oggetto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> o <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker">
      <summary vsli:raw="Provides a static value that represents an unknown, not fully implemented &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt;.">Fornisce un valore statico che rappresenta un oggetto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> sconosciuto non completamente implementato.</summary>
      <returns vsli:raw="A static value that represents an unknown, not fully implemented &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt;.">Valore statico che rappresenta un oggetto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> sconosciuto non completamente implementato.</returns>
    </member>
    <member name="T:System.Xaml.Schema.XamlTypeInvoker">
      <summary vsli:raw="Provides an extension point that can construct instances of a XAML type through techniques other than reflection and constructors.">Fornisce un punto di estensione che può costruire le istanze di un tipo XAML con tecniche diverse dalla reflection e dai costruttori.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.#ctor(System.Xaml.XamlType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; class, based on a provided &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> in base a un oggetto <see cref="T:System.Xaml.XamlType" /> specificato.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; value for the specific XAML type relevant to this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">Valore <see cref="T:System.Xaml.XamlType" /> per il tipo XAML specifico relativo all'oggetto <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.AddToCollection(System.Object,System.Object)">
      <summary vsli:raw="Adds the provided item to an instance of the type that is relevant to this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">Aggiunge l'elemento fornito a un'istanza del tipo relativa all'oggetto <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</summary>
      <param name="instance" vsli:raw="An instance of the type specified by the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; used for constructing this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">Istanza del tipo specificato da <see cref="T:System.Xaml.XamlType" /> per la costruzione di <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</param>
      <param name="item" vsli:raw="The item to add.">Elemento da aggiungere.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Invoked this method on a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; that is based on an unknown &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; Invoked this method on a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; where the relevant type is not a collection.">Questo metodo viene richiamato su un oggetto <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> basato su un oggetto <see cref="T:System.Xaml.XamlType" /> sconosciuto.  
 -oppure-  
Questo metodo viene richiamato su un oggetto <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> in cui il tipo rilevante non è una raccolta.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Xaml.XamlSchemaException" vsli:raw="&lt;see cref=&quot;M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; returns &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> per questo oggetto <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> restituisce <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.AddToDictionary(System.Object,System.Object,System.Object)">
      <summary vsli:raw="Adds the provided key and item value to an instance of the type that is relevant to this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">Aggiunge la chiave e il valore dell'elemento forniti a un'istanza del tipo relativa all'oggetto <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</summary>
      <param name="instance" vsli:raw="An instance of the type specified by the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; used for constructing this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">Istanza del tipo specificato da <see cref="T:System.Xaml.XamlType" /> per la costruzione di <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</param>
      <param name="key" vsli:raw="Dictionary key for the item to add.">Chiave del dizionario per l'elemento da aggiungere.</param>
      <param name="item" vsli:raw="The item value to add.">Valore dell'elemento da aggiungere.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Invoked this method on a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; that is based on an unknown &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; Invoked this method on a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; where the relevant type is not a dictionary.">Questo metodo viene richiamato su un oggetto <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> basato su un oggetto <see cref="T:System.Xaml.XamlType" /> sconosciuto.  
 -oppure-  
Questo metodo viene richiamato su un oggetto <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> in cui il tipo rilevante non è un dizionario.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Xaml.XamlSchemaException" vsli:raw="&lt;see cref=&quot;M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; returns &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> per questo oggetto <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> restituisce <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.CreateInstance(System.Object[])">
      <summary vsli:raw="Creates an object instance based on the construction-initiated &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">Crea un'istanza dell'oggetto in base all'oggetto <see cref="T:System.Xaml.XamlType" /> in costruzione per l'oggetto <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</summary>
      <param name="arguments" vsli:raw="An array of objects that supply the &lt;see langword=&quot;x:ConstructorArgs&quot; /&gt; for the instance. May be &lt;see langword=&quot;null&quot; /&gt; for types that do not require or use &lt;see langword=&quot;x:ConstructorArgs&quot; /&gt;.">Matrice di oggetti che forniscono <see langword="x:ConstructorArgs" /> per l'istanza. Può essere <see langword="null" /> per tipi che non richiedono né utilizzano <see langword="x:ConstructorArgs" />.</param>
      <returns vsli:raw="The created instance based on the construction-initiated &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">Istanza creata in base all'oggetto <see cref="T:System.Xaml.XamlType" /> in costruzione per l'oggetto <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</returns>
      <exception cref="T:System.MissingMethodException" vsli:raw="Could not resolve a constructor.">Impossibile risolvere un costruttore.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)">
      <summary vsli:raw="Returns the relevant &lt;see langword=&quot;Add&quot; /&gt; method for a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; that is relevant to a collection or dictionary.">Restituisce il metodo <see langword="Add" /> pertinente per un oggetto <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> relativo a un insieme o a un dizionario.</summary>
      <param name="contentType" vsli:raw="&lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the item type that is used by the &lt;see langword=&quot;Add&quot; /&gt; method.">Oggetto <see cref="T:System.Xaml.XamlType" /> per il tipo di elemento utilizzato dal metodo <see langword="Add" />.</param>
      <returns vsli:raw="CLR &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; information for the &lt;see langword=&quot;Add&quot; /&gt; method, or null.">Informazioni <see cref="T:System.Reflection.MethodInfo" /> CLR per il metodo <see langword="Add" /> o null.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;contentType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="contentType" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod">
      <summary vsli:raw="Returns an object representing a method that can enumerate over items.">Restituisce un oggetto che rappresenta un metodo che può enumerare gli elementi.</summary>
      <returns vsli:raw="&lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for an enumerator method, or &lt;see langword=&quot;null&quot; /&gt;.">Oggetto <see cref="T:System.Reflection.MethodInfo" /> per un metodo enumeratore o <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.GetItems(System.Object)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object representing the set of items.">Restituisce un oggetto <see cref="T:System.Collections.IEnumerator" /> che rappresenta il set di elementi.</summary>
      <param name="instance" vsli:raw="An instance of the type specified by the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; used for constructing this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">Istanza del tipo specificato da <see cref="T:System.Xaml.XamlType" /> per la costruzione di <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object, or &lt;see langword=&quot;null&quot; /&gt;.">Oggetto <see cref="T:System.Collections.IEnumerator" /> o <see langword="null" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Invoked this method on a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; that is based on an unknown &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; Invoked this method on a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; where the relevant type is not a collection or dictionary.">Questo metodo viene richiamato su un oggetto <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> basato su un oggetto <see cref="T:System.Xaml.XamlType" /> sconosciuto.  
 -oppure-  
Richiamato questo metodo su un <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> dove il tipo rilevante non è un insieme o un dizionario.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler">
      <summary vsli:raw="Gets the handler to use when a &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; calls into an implemented &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtension&quot; /&gt;.">Ottiene il gestore da utilizzare quando un oggetto <see cref="T:System.Xaml.XamlObjectWriter" /> viene chiamato in un oggetto <see cref="T:System.Windows.Markup.MarkupExtension" /> implementato.</summary>
      <returns vsli:raw="A handler implementation that handles this case.">Implementazione del gestore che gestisce questo caso.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler">
      <summary vsli:raw="Gets the handler to use when a &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; calls into a CLR-implemented &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt;.">Ottiene il gestore da utilizzare quando un oggetto <see cref="T:System.Xaml.XamlObjectWriter" /> viene chiamato in un oggetto <see cref="T:System.ComponentModel.TypeConverter" /> implementato da CLR.</summary>
      <returns vsli:raw="A handler implementation that handles this case.">Implementazione del gestore che gestisce questo caso.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker">
      <summary vsli:raw="Provides a static value that represents an unknown, not fully implemented &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">Fornisce un valore statico che rappresenta un oggetto <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> sconosciuto non completamente implementato.</summary>
      <returns vsli:raw="A static value that represents an unknown, not fully implemented &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">Valore statico che rappresenta un oggetto <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> sconosciuto non completamente implementato.</returns>
    </member>
    <member name="T:System.Xaml.Schema.XamlTypeName">
      <summary vsli:raw="Provides a means to specify a XAML type in terms of name and namespace.">Consente di specificare un tipo XAML in termini di nome e spazio dei nomi.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.Schema.XamlTypeName" />.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; class, based on name and namespace strings.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.Schema.XamlTypeName" /> in base alle stringhe nome e spazio dei nomi.</summary>
      <param name="xamlNamespace" vsli:raw="The XAML namespace that contains name.">Spazio dei nomi XAML che contiene il nome.</param>
      <param name="name" vsli:raw="The name of the type to create a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; for.">Nome del tipo per cui creare un oggetto <see cref="T:System.Xaml.Schema.XamlTypeName" />.</param>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Xaml.Schema.XamlTypeName})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; class, based on name and namespace strings as well as an array of type arguments.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.Schema.XamlTypeName" /> in base alle stringhe nome e spazio dei nomi nonché a una matrice di argomenti di tipo.</summary>
      <param name="xamlNamespace" vsli:raw="The XAML namespace that contains &lt;paramref name=&quot;name&quot; /&gt;.">Spazio dei nomi XAML che contiene <paramref name="name" />.</param>
      <param name="name" vsli:raw="The name of the type to create a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; for.">Nome del tipo per cui creare un oggetto <see cref="T:System.Xaml.Schema.XamlTypeName" />.</param>
      <param name="typeArguments" vsli:raw="An array of type arguments, each of which must be a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt;.">Matrice di argomenti di tipo, ognuno dei quali deve essere un oggetto <see cref="T:System.Xaml.Schema.XamlTypeName" />.</param>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.#ctor(System.Xaml.XamlType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; class, based on an existing &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.Schema.XamlTypeName" /> in base a un oggetto <see cref="T:System.Xaml.XamlType" /> esistente.</summary>
      <param name="xamlType" vsli:raw="An existing &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Oggetto <see cref="T:System.Xaml.XamlType" /> esistente.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xamlType" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeName.Name">
      <summary vsli:raw="Gets the name used to construct this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt;.">Ottiene il nome utilizzato per costruire l'oggetto <see cref="T:System.Xaml.Schema.XamlTypeName" />.</summary>
      <returns vsli:raw="The name of the type.">Nome del tipo.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeName.Namespace">
      <summary vsli:raw="Gets the XAML namespace identifier used to construct this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt;.">Ottiene l'identificatore dello spazio dei nomi nome XAML utilizzato per costruire l'oggetto <see cref="T:System.Xaml.Schema.XamlTypeName" />.</summary>
      <returns vsli:raw="The XAML namespace identifier.">Identificatore dello spazio dei nomi XAML.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.Parse(System.String,System.Xaml.IXamlNamespaceResolver)">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; value based on a type name and an object that can resolve a markup prefix into a namespace.">Fornisce un valore <see cref="T:System.Xaml.Schema.XamlTypeName" /> basato su un nome del tipo e su un oggetto che può risolvere un prefisso di markup in uno spazio dei nomi.</summary>
      <param name="typeName" vsli:raw="The type name to create a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; value for.">Nome del tipo per cui creare un valore <see cref="T:System.Xaml.Schema.XamlTypeName" />.</param>
      <param name="namespaceResolver" vsli:raw="An object or service provider that implements &lt;see cref=&quot;T:System.Xaml.IXamlNamespaceResolver&quot; /&gt;.">Oggetto o provider di servizi che implementa <see cref="T:System.Xaml.IXamlNamespaceResolver" />.</param>
      <returns vsli:raw="The created &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt;.">Oggetto <see cref="T:System.Xaml.Schema.XamlTypeName" /> creato.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;typeName&quot; /&gt; or &lt;paramref name=&quot;namespaceResolver&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="typeName" /> o <paramref name="namespaceResolver" /> è <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="String cannot be parsed.">Impossibile analizzare la stringa.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.ParseList(System.String,System.Xaml.IXamlNamespaceResolver)">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; value based on a string that can specify multiple type names, and an object that can resolve a markup prefix into a namespace.">Fornisce un valore <see cref="T:System.Xaml.Schema.XamlTypeName" /> basato su una stringa che può specificare più nomi del tipo e su un oggetto che può risolvere un prefisso di markup in uno spazio dei nomi.</summary>
      <param name="typeNameList" vsli:raw="A string that contains multiple types.">Stringa che contiene più tipi.</param>
      <param name="namespaceResolver" vsli:raw="An object or service provider that implements &lt;see cref=&quot;T:System.Xaml.IXamlNamespaceResolver&quot; /&gt;.">Oggetto o provider di servizi che implementa <see cref="T:System.Xaml.IXamlNamespaceResolver" />.</param>
      <returns vsli:raw="The created &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt;.">Oggetto <see cref="T:System.Xaml.Schema.XamlTypeName" /> creato.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;typeNameList&quot; /&gt; or &lt;paramref name=&quot;namespaceResolver&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="typeNameList" /> o <paramref name="namespaceResolver" /> è <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="String cannot be parsed.">Impossibile analizzare la stringa.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.ToString">
      <summary vsli:raw="Converts the value of this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; to its equivalent string representation.">Converte il valore dell'oggetto <see cref="T:System.Xaml.Schema.XamlTypeName" /> nella rappresentazione di stringa equivalente.</summary>
      <returns vsli:raw="The equivalent string representation of this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt;.">Rappresentazione di stringa equivalente dell'oggetto <see cref="T:System.Xaml.Schema.XamlTypeName" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.ToString(System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName},System.Xaml.INamespacePrefixLookup)">
      <summary vsli:raw="Converts the value of this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; to its equivalent string representation, which can be used in markup syntax for an object element usage of multiple types.">Converte il valore dell'oggetto <see cref="T:System.Xaml.Schema.XamlTypeName" /> nella rappresentazione di stringa equivalente che può essere utilizzata nella sintassi di markup per l'utilizzo di un elemento oggetto di più tipi.</summary>
      <param name="typeNameList" vsli:raw="A list of types.">Elenco di tipi.</param>
      <param name="prefixLookup" vsli:raw="A service reference for prefix lookup.">Riferimento al servizio per ricerca del prefisso.</param>
      <returns vsli:raw="A concatenated string of all type results.">Stringa concatenata di tutti i risultati del tipo.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;prefixLookup&quot; /&gt; or &lt;paramref name=&quot;typeNameList&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="prefixLookup" /> o <paramref name="typeNameList" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.ToString(System.Xaml.INamespacePrefixLookup)">
      <summary vsli:raw="Converts the value of this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; to its equivalent string representation, which can be used in markup syntax for an object element usage of a type.">Converte il valore dell'oggetto <see cref="T:System.Xaml.Schema.XamlTypeName" /> nella rappresentazione di stringa equivalente che può essere utilizzata nella sintassi di markup per l'utilizzo di un elemento oggetto di un tipo.</summary>
      <param name="prefixLookup" vsli:raw="A service reference for prefix lookup.">Riferimento al servizio per ricerca del prefisso.</param>
      <returns vsli:raw="A prefixed usage string.">Stringa per l'utilizzo con prefisso.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Xaml.Schema.XamlTypeName.Namespace&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Xaml.Schema.XamlTypeName.Name&quot; /&gt; is not valid.  &#xA;  &#xA; -or-  &#xA;  &#xA; Could not look up the prefix.">
        <see cref="P:System.Xaml.Schema.XamlTypeName.Namespace" /> per <see cref="T:System.Xaml.Schema.XamlTypeName" /> è <see langword="null" />.  
-oppure- 
 <see cref="P:System.Xaml.Schema.XamlTypeName.Name" /> non è valido.  
-oppure- 
Impossibile cercare il prefisso.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.TryParse(System.String,System.Xaml.IXamlNamespaceResolver,System.Xaml.Schema.XamlTypeName@)">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; value based on a type name and an object that can resolve a markup prefix into a namespace.">Fornisce un valore <see cref="T:System.Xaml.Schema.XamlTypeName" /> basato su un nome del tipo e su un oggetto che può risolvere un prefisso di markup in uno spazio dei nomi.</summary>
      <param name="typeName" vsli:raw="The type name to create a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; value for.">Nome del tipo per cui creare un valore <see cref="T:System.Xaml.Schema.XamlTypeName" />.</param>
      <param name="namespaceResolver" vsli:raw="An object or service provider that implements &lt;see cref=&quot;T:System.Xaml.IXamlNamespaceResolver&quot; /&gt;.">Oggetto o provider di servizi che implementa <see cref="T:System.Xaml.IXamlNamespaceResolver" />.</param>
      <param name="result" vsli:raw="Out parameter that contains the created &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; if the return value is &lt;see langword=&quot;true&quot; /&gt;.">Parametro out che contiene l'oggetto <see cref="T:System.Xaml.Schema.XamlTypeName" /> creato se il valore restituito è <see langword="true" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the parse was successful and &lt;paramref name=&quot;result&quot; /&gt; contains a useful value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'analisi è stata eseguita correttamente e <paramref name="result" /> contiene un valore utile; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;typeName&quot; /&gt; or &lt;paramref name=&quot;namespaceResolver&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="typeName" /> o <paramref name="namespaceResolver" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.TryParseList(System.String,System.Xaml.IXamlNamespaceResolver,System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName}@)">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; value based on a string that can specify multiple type names, and an object that can resolve a markup prefix into a namespace.">Fornisce un valore <see cref="T:System.Xaml.Schema.XamlTypeName" /> basato su una stringa che può specificare più nomi del tipo e su un oggetto che può risolvere un prefisso di markup in uno spazio dei nomi.</summary>
      <param name="typeNameList" vsli:raw="A string that contains multiple types.">Stringa che contiene più tipi.</param>
      <param name="namespaceResolver" vsli:raw="An object or service provider that implements &lt;see cref=&quot;T:System.Xaml.IXamlNamespaceResolver&quot; /&gt;.">Oggetto o provider di servizi che implementa <see cref="T:System.Xaml.IXamlNamespaceResolver" />.</param>
      <param name="result" vsli:raw="Out parameter that contains the created &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; if the return value is &lt;see langword=&quot;true&quot; /&gt;.">Parametro out che contiene l'oggetto <see cref="T:System.Xaml.Schema.XamlTypeName" /> creato se il valore restituito è <see langword="true" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the parse was successful and &lt;paramref name=&quot;result&quot; /&gt; contains a useful value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'analisi è stata eseguita correttamente e <paramref name="result" /> contiene un valore utile; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;typeNameList&quot; /&gt; or &lt;paramref name=&quot;namespaceResolver&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="typeNameList" /> o <paramref name="namespaceResolver" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeName.TypeArguments">
      <summary vsli:raw="Gets the type arguments used to construct this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt;.">Ottiene gli argomenti di tipo utilizzati per costruire l'oggetto <see cref="T:System.Xaml.Schema.XamlTypeName" />.</summary>
      <returns vsli:raw="The type arguments, if any. May be null.">Argomenti di tipo, se presenti. Può essere Null.</returns>
    </member>
    <member name="T:System.Xaml.Schema.XamlTypeTypeConverter">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object to and from a string that represents the type name. This functionality is used for XAML extensibility by markup definitions, via &lt;see cref=&quot;T:System.Windows.Markup.PropertyDefinition&quot; /&gt;.">Converte un oggetto <see cref="T:System.Xaml.XamlType" /> in e da una stringa che rappresenta il nome del tipo. Questa funzionalità viene usata per l'estendibilità XAML in base a definizioni del markup, tramite <see cref="T:System.Windows.Markup.PropertyDefinition" />.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeTypeConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeTypeConverter&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.Schema.XamlTypeTypeConverter" />.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an object of the specified type can be converted to an instance of &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;, using the specified context.">Determina se per un oggetto del tipo specificato è possibile o meno eseguire la conversione in un'istanza di <see cref="T:System.Xaml.XamlType" /> utilizzando il contesto specificato.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Contesto del formato che fornisce informazioni sull'ambiente dal quale viene richiamato il convertitore.</param>
      <param name="sourceType" vsli:raw="The type being evaluated for conversion.">Tipo di cui viene valutata la conversione.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this converter can perform the operation; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se questo convertitore può eseguire l'operazione; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an instance of &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; can be converted to the specified type, using the specified context.">Determina se un'istanza di <see cref="T:System.Xaml.XamlType" /> può essere convertita nel tipo specificato utilizzando il contesto specificato.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Contesto del formato che fornisce informazioni sull'ambiente dal quale viene richiamato il convertitore.</param>
      <param name="destinationType" vsli:raw="The type being evaluated for conversion.">Tipo di cui viene valutata la conversione.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this converter can perform the operation; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se questo convertitore può eseguire l'operazione; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert the specified object to a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;, using the specified context.">Tenta di convertire l'oggetto specificato in <see cref="T:System.Xaml.XamlType" /> utilizzando il contesto specificato.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Contesto del formato che fornisce informazioni sull'ambiente dal quale viene richiamato il convertitore.</param>
      <param name="culture" vsli:raw="Culture specific information.">Informazioni specifiche delle impostazioni cultura.</param>
      <param name="value" vsli:raw="The object to convert.">Oggetto da convertire.</param>
      <returns vsli:raw="The converted object.">Oggetto convertito.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; cannot be converted.">L'oggetto <paramref name="value" /> non può essere convertito.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; to the specified type, using the specified context.">Tenta di convertire <see cref="T:System.Xaml.XamlType" /> nel tipo specificato utilizzando il contesto specificato.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Contesto del formato che fornisce informazioni sull'ambiente dal quale viene richiamato il convertitore.</param>
      <param name="culture" vsli:raw="Culture specific information.">Informazioni specifiche delle impostazioni cultura.</param>
      <param name="value" vsli:raw="The object to convert.">Oggetto da convertire.</param>
      <param name="destinationType" vsli:raw="The type to convert the object to.">Tipo in cui convertire l'oggetto.</param>
      <returns vsli:raw="The converted object.">Oggetto convertito.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; cannot be converted.">L'oggetto <paramref name="value" /> non può essere convertito.</exception>
    </member>
    <member name="T:System.Xaml.Schema.XamlValueConverter`1">
      <summary vsli:raw="Provides a common API surface for techniques that generate initialization or serialization values for XAML based on input other than the eventual destination type. This includes markup extensions and type converters.">Fornisce una superficie API comune per le tecniche che generano valori di inizializzazione o serializzazione per XAML in base a un input diverso dal tipo di destinazione finale. Include le estensioni di markup e i convertitori di tipi.</summary>
      <typeparam name="TConverterBase" vsli:raw="The CLR base class for the particular converter that this &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; represents. Typically this is one of the following: &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt;; &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtension&quot; /&gt;; &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt;.">Classe base CLR per il convertitore specifico rappresentato dall'oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />. Si tratta in genere di uno dei seguenti elementi: <see cref="T:System.ComponentModel.TypeConverter" />, <see cref="T:System.Windows.Markup.MarkupExtension" /> o <see cref="T:System.Windows.Markup.ValueSerializer" />.</typeparam>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; class, based on a converter implementing &lt;see cref=&quot;T:System.Type&quot; /&gt; and the target/destination type of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> in base a un convertitore che implementa <see cref="T:System.Type" /> e al tipo di destinazione dell'oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</summary>
      <param name="converterType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that implements the converter behavior.">Oggetto <see cref="T:System.Type" /> che implementa il comportamento del convertitore.</param>
      <param name="targetType" vsli:raw="The target/destination &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">Oggetto <see cref="T:System.Xaml.XamlType" /> di destinazione dell'oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</param>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; class, based on a converter implementing &lt;see cref=&quot;T:System.Type&quot; /&gt; the target/destination type of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;, and a string name.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> in base a un convertitore che implementa <see cref="T:System.Type" />, al tipo di destinazione dell'oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> e a un nome di stringa.</summary>
      <param name="converterType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that implements the converter behavior.">Oggetto <see cref="T:System.Type" /> che implementa il comportamento del convertitore.</param>
      <param name="targetType" vsli:raw="The target/destination &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">Oggetto <see cref="T:System.Xaml.XamlType" /> di destinazione dell'oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</param>
      <param name="name" vsli:raw="The string name.">Nome della stringa.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="All three parameters are &lt;see langword=&quot;null&quot; /&gt; (at least one is required to be non-null).">I tre parametri sono tutti <see langword="null" /> (è necessario che almeno uno sia non null).</exception>
    </member>
    <member name="P:System.Xaml.Schema.XamlValueConverter`1.ConverterInstance">
      <summary vsli:raw="Gets a created instance of the converter implementation.">Ottiene un'istanza creata dell'implementazione del convertitore.</summary>
      <returns vsli:raw="A created instance of the converter implementation, or &lt;see langword=&quot;null&quot; /&gt;.">Istanza creata dell'implementazione del convertitore o <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlValueConverter`1.ConverterType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Type&quot; /&gt; for the class that implements the converter behavior.">Ottiene l'oggetto <see cref="T:System.Type" /> per la classe che implementa il comportamento del convertitore.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; for the class that implements the converter behavior.">Oggetto <see cref="T:System.Type" /> per la classe che implementa il comportamento del convertitore.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.CreateInstance">
      <summary vsli:raw="Returns an instance of the converter implementation.">Restituisce un'istanza dell'implementazione del convertitore.</summary>
      <returns vsli:raw="An instance of the converter implementation, or &lt;see langword=&quot;null&quot; /&gt;.">Istanza dell'implementazione del convertitore o <see langword="null" />.</returns>
      <exception cref="T:System.Xaml.XamlSchemaException" vsli:raw="Converter did not implement the correct base type.">Il convertitore non ha implementato il tipo di base corretto.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.Equals(System.Object)">
      <summary vsli:raw="Determines whether this instance of &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; and a specified object, which must also be a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; object, have the same value.">Consente di determinare se questa istanza dell'oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> e un oggetto specificato, che deve essere anch'esso un oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, hanno lo stesso valore.</summary>
      <param name="obj" vsli:raw="The object to compare.">Oggetto da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; and its value is the same as this instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il parametro <paramref name="obj" /> è un oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> e il relativo valore corrisponde a quello di questa istanza; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.Equals(System.Xaml.Schema.XamlValueConverter{`0})">
      <summary vsli:raw="Determines whether this instance of &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; and another &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; object have the same value.">Determina se questa istanza di <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> e un altro oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> hanno lo stesso valore.</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; to compare.">Oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> da confrontare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;other&quot; /&gt; is a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; and its value is the same as this instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il parametro <paramref name="other" /> è un oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> e il relativo valore corrisponde a quello di questa istanza; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">Restituisce il codice hash per questo <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</summary>
      <returns vsli:raw="An integer hash code.">Codice hash di un intero.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlValueConverter`1.Name">
      <summary vsli:raw="Gets a string name for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">Ottiene un nome di stringa per l'oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</summary>
      <returns vsli:raw="A string name for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">Nome di stringa per l'oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.op_Equality(System.Xaml.Schema.XamlValueConverter{`0},System.Xaml.Schema.XamlValueConverter{`0})">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; objects have the same value.">Determina se due oggetti <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> specificati hanno lo stesso valore.</summary>
      <param name="converter1" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">Oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> o <see langword="null" />.</param>
      <param name="converter2" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">Oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> o <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;converter1&quot; /&gt; is the same as the value of &lt;paramref name=&quot;converter2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il valore di <paramref name="converter1" /> è uguale al valore di <paramref name="converter2" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.op_Inequality(System.Xaml.Schema.XamlValueConverter{`0},System.Xaml.Schema.XamlValueConverter{`0})">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; objects have different values.">Determina se due oggetti <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> specificati hanno valori diversi.</summary>
      <param name="converter1" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">Oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> o <see langword="null" />.</param>
      <param name="converter2" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">Oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> o <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;converter1&quot; /&gt; is different than the value of &lt;paramref name=&quot;converter2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il valore di <paramref name="converter1" /> è diverso dal valore di <paramref name="converter2" />; in caso contrario, <see langword="false" /></returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlValueConverter`1.TargetType">
      <summary vsli:raw="Gets the target/destination &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">Ottiene l'oggetto <see cref="T:System.Xaml.XamlType" /> di destinazione dell'oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</summary>
      <returns vsli:raw="The target/destination &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">Oggetto <see cref="T:System.Xaml.XamlType" /> di destinazione dell'oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.ToString">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.String&quot; /&gt; that represents this &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">Restituisce un oggetto <see cref="T:System.String" /> che rappresenta l'oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that represents this &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">Oggetto <see cref="T:System.String" /> che rappresenta questo oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlBackgroundReader">
      <summary vsli:raw="Implements a double-buffered &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; that can split reading and writing to different threads.">Implementa un oggetto <see cref="T:System.Xaml.XamlReader" /> a doppio buffer che può suddividere la lettura e la scrittura in thread diversi.</summary>
    </member>
    <member name="M:System.Xaml.XamlBackgroundReader.#ctor(System.Xaml.XamlReader)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlBackgroundReader&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlBackgroundReader" />.</summary>
      <param name="wrappedReader" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; that this &lt;see cref=&quot;T:System.Xaml.XamlBackgroundReader&quot; /&gt; is based on.">Oggetto <see cref="T:System.Xaml.XamlReader" /> su cui è basato l'oggetto <see cref="T:System.Xaml.XamlBackgroundReader" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;wrappedReader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="wrappedReader" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlBackgroundReader.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Xaml.XamlBackgroundReader&quot; /&gt; and optionally releases the managed resources.">Rilascia le risorse non gestite usate da <see cref="T:System.Xaml.XamlBackgroundReader" /> e, facoltativamente, le risorse gestite.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release managed resources; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per rilasciare le risorse gestite; in caso contrario, <see langword="false" />.</param>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.HasLineInfo">
      <summary vsli:raw="Gets a value that specifies whether line information is available.">Ottiene un valore che specifica se le informazioni sulla riga sono disponibili.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if line information is available; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se le informazioni sulla riga sono disponibili; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.IsEof">
      <summary vsli:raw="Gets a value that reports whether the reader position is at end-of-file.">Ottiene un valore che segnala se la posizione del reader è alla fine del file.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the position is at end-of-file; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se la posizione è alla fine del file; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.LineNumber">
      <summary vsli:raw="Gets the line number to report.">Ottiene il numero di riga da segnalare.</summary>
      <returns vsli:raw="The line number to report.">Numero di riga da segnalare.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.LinePosition">
      <summary vsli:raw="Gets the line position to report.">Ottiene la posizione di riga da segnalare.</summary>
      <returns vsli:raw="The line position to report.">Posizione di riga da segnalare.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.Member">
      <summary vsli:raw="Gets the current member at the reader position, if the reader position is on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.StartMember&quot; /&gt;.">Ottiene il membro corrente nella posizione del reader, se la posizione del reader è in un oggetto <see cref="F:System.Xaml.XamlNodeType.StartMember" />.</summary>
      <returns vsli:raw="The current member; or &lt;see langword=&quot;null&quot; /&gt;, if the position is not on a member.">Membro corrente o <see langword="null" /> se la posizione non è in un membro.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.Namespace">
      <summary vsli:raw="Gets the XAML namespace from the current node.">Ottiene lo spazio dei nomi XAML dal nodo corrente.</summary>
      <returns vsli:raw="The XAML namespace, if it is available; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Spazio dei nomi XAML, se disponibile; in caso contrario, <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.NodeType">
      <summary vsli:raw="Gets the type of the current node.">Ottiene il tipo di nodo corrente.</summary>
      <returns vsli:raw="A value of the &lt;see cref=&quot;T:System.Xaml.XamlNodeType&quot; /&gt; enumeration.">Valore dell'enumerazione <see cref="T:System.Xaml.XamlNodeType" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlBackgroundReader.Read">
      <summary vsli:raw="Provides the next XAML node from the source, if a node is available.">Fornisce il nodo XAML successivo dall'origine, se è disponibile un nodo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a node is available; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se è disponibile un nodo; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.SchemaContext">
      <summary vsli:raw="Gets an object that provides schema context information for the information set.">Ottiene un oggetto che fornisce le informazioni sul contesto dello schema per il set di informazioni.</summary>
      <returns vsli:raw="An object that provides schema context information for the information set.">Oggetto che fornisce le informazioni sul contesto dello schema per il set di informazioni.</returns>
    </member>
    <member name="M:System.Xaml.XamlBackgroundReader.StartThread">
      <summary vsli:raw="Creates and starts a new &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; (constructed from &lt;see cref=&quot;T:System.Threading.ParameterizedThreadStart&quot; /&gt;) that handles a named thread for the &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt;.">Crea e avvia un nuovo oggetto <see cref="T:System.Threading.Thread" /> (costruito da <see cref="T:System.Threading.ParameterizedThreadStart" />) che gestisce un thread denominato per l'oggetto <see cref="T:System.Xaml.XamlReader" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The thread is already started.">Thread già iniziato.</exception>
    </member>
    <member name="M:System.Xaml.XamlBackgroundReader.StartThread(System.String)">
      <summary vsli:raw="Creates and starts a new &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; (constructed from &lt;see cref=&quot;T:System.Threading.ParameterizedThreadStart&quot; /&gt;) that handles a named thread for the &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt;. You specify the thread name as a parameter.">Crea e avvia un nuovo oggetto <see cref="T:System.Threading.Thread" /> (costruito da <see cref="T:System.Threading.ParameterizedThreadStart" />) che gestisce un thread denominato per l'oggetto <see cref="T:System.Xaml.XamlReader" />. Si specifica il nome del thread come parametro.</summary>
      <param name="threadName" vsli:raw="The name for the thread.">Nome del thread.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The thread is already started.">Thread già iniziato.</exception>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.Type">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the current node.">Ottiene l'oggetto <see cref="T:System.Xaml.XamlType" /> del nodo corrente.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the current node; or &lt;see langword=&quot;null&quot; /&gt;, if the current reader position is not on an object.">Oggetto <see cref="T:System.Xaml.XamlType" /> del nodo corrente o <see langword="null" /> se la posizione corrente del reader non è in un oggetto.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.Value">
      <summary vsli:raw="Gets the value of the current node.">Ottiene il valore del nodo corrente.</summary>
      <returns vsli:raw="The value of the current node; or &lt;see langword=&quot;null&quot; /&gt;, if the current reader position is not on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.Value&quot; /&gt; node type.">Valore del nodo corrente o <see langword="null" /> se la posizione corrente del reader non è in un tipo di nodo <see cref="F:System.Xaml.XamlNodeType.Value" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlDeferringLoader">
      <summary vsli:raw="Represents a XAML reader behavior that loads and returns deferred content.">Rappresenta un comportamento del reader XAML che carica e restituisce contenuto posticipato.</summary>
    </member>
    <member name="M:System.Xaml.XamlDeferringLoader.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDeferringLoader&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlDeferringLoader" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlDeferringLoader.Load(System.Xaml.XamlReader,System.IServiceProvider)">
      <summary vsli:raw="Loads XAML content in a deferred mode, which is based on a &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; and certain required services from a service provider.">Carica contenuto XAML in modalità posticipata, che si basa su un oggetto <see cref="T:System.Xaml.XamlReader" /> e su certi servizi richiesti da un provider di servizi.</summary>
      <param name="xamlReader" vsli:raw="The initiating reader that is returned on calls to &lt;see cref=&quot;M:System.Xaml.XamlDeferringLoader.Save(System.Object,System.IServiceProvider)&quot; /&gt;.">Reader di avvio che viene restituito nelle chiamate a <see cref="M:System.Xaml.XamlDeferringLoader.Save(System.Object,System.IServiceProvider)" />.</param>
      <param name="serviceProvider" vsli:raw="The service provider for the required services.">Provider per i servizi richiesti.</param>
      <returns vsli:raw="The root object that is produced by the input &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt;.">L'oggetto radice prodotto dall'oggetto <see cref="T:System.Xaml.XamlReader" /> di input.</returns>
    </member>
    <member name="M:System.Xaml.XamlDeferringLoader.Save(System.Object,System.IServiceProvider)">
      <summary vsli:raw="Commits a value for deferred loading.">Esegue il commit di un valore per il caricamento posticipato.</summary>
      <param name="value" vsli:raw="The input value to commit for deferred loading.">Valore di input di cui eseguire il commit per il caricamento posticipato.</param>
      <param name="serviceProvider" vsli:raw="The service provider for the required services.">Provider per i servizi richiesti.</param>
      <returns vsli:raw="A XAML reader that can be used to obtain the deferred value as XAML node information.">Reader XAML che può essere utilizzato per ottenere il valore posticipato come informazioni sul nodo XAML.</returns>
    </member>
    <member name="T:System.Xaml.XamlDirective">
      <summary vsli:raw="Provides the XAML type system identifier for a member if the member is also a XAML directive. XAML readers and XAML writers use the &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; identifier during processing of member nodes. The identifier is used when the XAML reader is positioned on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.StartMember&quot; /&gt; and &lt;see cref=&quot;P:System.Xaml.XamlMember.IsDirective&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;.">Fornisce l'identificatore di sistema dei tipi XAML per un membro se il membro è anche una direttiva XAML. I lettori e i writer XAML utilizzano l'identificatore <see cref="T:System.Xaml.XamlDirective" /> durante l'elaborazione dei nodi del membro. L'identificatore viene utilizzato quando il lettore XAML viene posizionato su un oggetto <see cref="F:System.Xaml.XamlNodeType.StartMember" /> e <see cref="P:System.Xaml.XamlMember.IsDirective" /> è <see langword="true" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlDirective.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.Xaml.XamlType,System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter},System.Xaml.Schema.AllowedMemberLocations)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; class, specifying values for each per-case value of a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlDirective" /> specificando i valori per ogni valore caso per caso di un oggetto <see cref="T:System.Xaml.XamlDirective" />.</summary>
      <param name="xamlNamespaces" vsli:raw="A set of XAML namespaces where this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; can exist, passed as an enumerable set of the identifier strings.">Un set di spazi dei nomi XAML dove è possibile che esista questo oggetto <see cref="T:System.Xaml.XamlDirective" /> passato come un set enumerabile di stringhe dell'identificatore.</param>
      <param name="name" vsli:raw="The identifying name of the &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">Nome identificativo dell'oggetto <see cref="T:System.Xaml.XamlDirective" />.</param>
      <param name="xamlType" vsli:raw="The XAML type that backs the &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">Tipo XAML sottostante all'oggetto <see cref="T:System.Xaml.XamlDirective" />.</param>
      <param name="typeConverter" vsli:raw="The type converter that this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; uses for text syntax conversion.">Convertitore di tipi utilizzato dall'oggetto <see cref="T:System.Xaml.XamlDirective" /> per la conversione della sintassi del testo.</param>
      <param name="allowedLocation" vsli:raw="A value of the &lt;see cref=&quot;T:System.Xaml.Schema.AllowedMemberLocations&quot; /&gt; enumeration.">Valore dell'enumerazione <see cref="T:System.Xaml.Schema.AllowedMemberLocations" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;xamlType&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="xamlType" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlDirective.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; class, specifying values for a name and a single XAML namespace. Use this signature only when you want or expect &lt;see cref=&quot;P:System.Xaml.XamlMember.IsUnknown&quot; /&gt; to report &lt;see langword=&quot;true&quot; /&gt; for the directive.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlDirective" /> specificando i valori per nome e singolo spazio dei nomi XAML. Utilizzare questa firma solo quando si desidera o si prevede che <see cref="P:System.Xaml.XamlMember.IsUnknown" /> restituisca <see langword="true" /> per la direttiva.</summary>
      <param name="xamlNamespace" vsli:raw="The primary XAML namespace where this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; can exist.">Spazio dei nomi XAML primario in cui può essere presente l'oggetto <see cref="T:System.Xaml.XamlDirective" />.</param>
      <param name="name" vsli:raw="The identifying name of the &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">Nome identificativo dell'oggetto <see cref="T:System.Xaml.XamlDirective" />.</param>
    </member>
    <member name="P:System.Xaml.XamlDirective.AllowedLocation">
      <summary vsli:raw="Gets a value that specifies the XAML node types where the directive can be specified.">Ottiene un valore che specifica i tipi di nodo XAML in cui è possibile specificare la direttiva.</summary>
      <returns vsli:raw="A value of the enumeration. The default is the enumeration default, which is &lt;see cref=&quot;F:System.Xaml.Schema.AllowedMemberLocations.None&quot; /&gt;.">Valore dell'enumerazione. Il valore predefinito è il valore predefinito dell'enumerazione, ovvero <see cref="F:System.Xaml.Schema.AllowedMemberLocations.None" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.GetHashCode">
      <summary vsli:raw="Returns the hash code for this object.">Restituisce il codice hash per questo oggetto.</summary>
      <returns vsli:raw="An integer hash code.">Codice hash di un intero.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.GetXamlNamespaces">
      <summary vsli:raw="Returns a list of XAML namespaces where this XAML member can exist.">Restituisce un elenco di spazi dei nomi XAML in cui può essere presente questo membro XAML.</summary>
      <returns vsli:raw="A list of XAML namespace identifiers, as strings.">Elenco di identificatori degli spazi dei nomi XAML in formato stringa.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupCustomAttributeProvider">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; implementation. This implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">Restituisce un'implementazione <see cref="T:System.Reflection.ICustomAttributeProvider" />. Questa implementazione restituisce sempre <see langword="null" />.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;null&quot; /&gt;.">Restituisce sempre <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupDeferringLoader">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; object, which is used during deferred loading of XAML-declared objects. This implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">Restituisce un oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> utilizzato durante il caricamento posticipato degli oggetti dichiarati in XAML. Questa implementazione restituisce sempre <see langword="null" />.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;null&quot; /&gt;.">Restituisce sempre <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupDependsOn">
      <summary vsli:raw="Returns a list of &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; objects. The list reports the members where dependency relationships for initialization order exist relative to this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;. This implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">Restituisce un elenco di oggetti <see cref="T:System.Xaml.XamlMember" />. Nell'elenco vengono segnalati i membri in cui sono presenti le relazioni di dipendenza per l'ordine di inizializzazione in relazione all'oggetto <see cref="T:System.Xaml.XamlMember" />. Questa implementazione restituisce sempre <see langword="null" />.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;null&quot; /&gt;.">Restituisce sempre <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupInvoker">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; that is associated with a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">Restituisce l'oggetto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> associato a <see cref="T:System.Xaml.XamlDirective" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; information for this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Informazioni sull'oggetto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> per l'oggetto <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsAmbient">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is reported as an ambient property.">Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> viene segnalato come proprietà di ambiente.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;false&quot; /&gt;.">Restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsEvent">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; represents an event.">Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlDirective" /> rappresenta un evento.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;false&quot; /&gt;.">Restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsReadOnly">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; represents an intended read-only property.">Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlDirective" /> rappresenta una proprietà di sola lettura prevista.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;false&quot; /&gt;.">Restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsReadPublic">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; represents a property that has a public &lt;see langword=&quot;get&quot; /&gt; accessor.">Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlDirective" /> rappresenta una proprietà che dispone di una funzione di accesso <see langword="get" /> pubblica.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">Restituisce sempre <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsUnknown">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; represents a member that is not resolvable by the backing system that is used for type and member resolution.">Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlDirective" /> rappresenta un membro che non può essere risolto dal sistema di supporto utilizzato per la risoluzione del tipo e del membro.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; represents a non-resolvable member; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlDirective" /> rappresenta un membro che non può essere risolto; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsWriteOnly">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; represents an intended write-only property.">Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlDirective" /> rappresenta una proprietà di sola scrittura prevista.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;false&quot; /&gt;.">Restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsWritePublic">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; represents a property that has a public &lt;see langword=&quot;set&quot; /&gt; accessor.">Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlDirective" /> rappresenta una proprietà che dispone di una funzione di accesso <see langword="set" /> pubblica.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">Restituisce sempre <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupTargetType">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type where the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; can exist. This implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">Restituisce l'oggetto <see cref="T:System.Xaml.XamlType" /> del tipo in cui può essere presente l'oggetto <see cref="T:System.Xaml.XamlMember" />. Questa implementazione restituisce sempre <see langword="null" />.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;null&quot; /&gt;.">Restituisce sempre <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupType">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type that is used by the member.">Restituisce l'oggetto <see cref="T:System.Xaml.XamlType" /> del tipo utilizzato dal membro.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type that is used by the member.">Oggetto <see cref="T:System.Xaml.XamlType" /> del tipo utilizzato dal membro.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupTypeConverter">
      <summary vsli:raw="Returns a type converter implementation that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">Restituisce un'implementazione del convertitore di tipi associata all'oggetto <see cref="T:System.Xaml.XamlDirective" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; instance that has &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; constraint; or &lt;see langword=&quot;null&quot; /&gt;.">Istanza di <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con vincolo <see cref="T:System.ComponentModel.TypeConverter" />; in caso contrario, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupUnderlyingGetter">
      <summary vsli:raw="Returns a &lt;see langword=&quot;get&quot; /&gt; accessor that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;. This implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">Restituisce una funzione di accesso <see langword="get" /> associata all'oggetto <see cref="T:System.Xaml.XamlDirective" />. Questa implementazione restituisce sempre <see langword="null" />.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;null&quot; /&gt;.">Restituisce sempre <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupUnderlyingMember">
      <summary vsli:raw="Returns a CLR reflection &lt;see cref=&quot;T:System.Reflection.MemberInfo&quot; /&gt; that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;. This implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">Restituisce un oggetto <see cref="T:System.Reflection.MemberInfo" /> della reflection CLR associato all'oggetto <see cref="T:System.Xaml.XamlDirective" />. Questa implementazione restituisce sempre <see langword="null" />.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;null&quot; /&gt;.">Restituisce sempre <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupUnderlyingSetter">
      <summary vsli:raw="Returns a &lt;see langword=&quot;set&quot; /&gt; accessor that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;. This implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">Restituisce una funzione di accesso <see langword="set" /> associata all'oggetto <see cref="T:System.Xaml.XamlDirective" />. Questa implementazione restituisce sempre <see langword="null" />.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;null&quot; /&gt;.">Restituisce sempre <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.ToString">
      <summary vsli:raw="Returns a string representation of this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">Restituisce una rappresentazione in forma di stringa di <see cref="T:System.Xaml.XamlDirective" />.</summary>
      <returns vsli:raw="A string representation of this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">Rappresentazione in forma di stringa di <see cref="T:System.Xaml.XamlDirective" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlDuplicateMemberException">
      <summary vsli:raw="The exception that is thrown when a XAML writer attempts to write a value for a duplicate member into the same object node.">Eccezione generata quando un writer XAML tenta di scrivere un valore per un membro duplicato nello stesso nodo oggetto.</summary>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDuplicateMemberException&quot; /&gt; class with a system-supplied message that describes the error.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlDuplicateMemberException" /> con un messaggio fornito dal sistema in cui viene descritto l'errore.</summary>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDuplicateMemberException&quot; /&gt; class with serialized data.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlDuplicateMemberException" /> con dati serializzati.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Oggetto che contiene i dati oggetto serializzati.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Informazioni contestuali sull'origine o sulla destinazione.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDuplicateMemberException&quot; /&gt; class with a specified message that describes the error.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlDuplicateMemberException" /> con un messaggio specificato in cui viene descritto l'errore.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Messaggio in cui viene descritta l'eccezione. Il chiamante del costruttore deve garantire che la stringa sia stata localizzata in base alle impostazioni cultura correnti del sistema.</param>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDuplicateMemberException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlDuplicateMemberException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Messaggio in cui viene descritta l'eccezione. Il chiamante del costruttore deve garantire che la stringa sia stata localizzata in base alle impostazioni cultura correnti del sistema.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Eccezione che ha determinato l'eccezione corrente. Se il parametro <paramref name="innerException" /> non è <see langword="null" />, l'eccezione corrente viene generata in un blocco <see langword="catch" /> in cui viene gestita l'eccezione interna.</param>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.#ctor(System.Xaml.XamlMember,System.Xaml.XamlType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDuplicateMemberException&quot; /&gt; class with the relevant member and type information to report.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlDuplicateMemberException" /> con le relative informazioni sul tipo e sul membro da segnalare.</summary>
      <param name="member" vsli:raw="The XAML member identifier to report.">Identificatore del membro XAML da segnalare.</param>
      <param name="type" vsli:raw="The XAML type identifier to report as the parent type.">Identificatore del tipo XAML da segnalare come tipo padre.</param>
    </member>
    <member name="P:System.Xaml.XamlDuplicateMemberException.DuplicateMember">
      <summary vsli:raw="Gets or sets the XAML member identifier for the property to report as a duplicate.">Ottiene o imposta l'identificatore del membro XAML per la proprietà da segnalare come duplicato.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; object (XAML member identifier) to report.">Oggetto <see cref="T:System.Xaml.XamlMember" /> (identificatore del membro XAML) da segnalare.</returns>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDuplicateMemberException&quot; /&gt; class with serialized data.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlDuplicateMemberException" /> con dati serializzati.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Oggetto che contiene i dati oggetto serializzati.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Informazioni contestuali sull'origine o sulla destinazione.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlDuplicateMemberException.ParentType">
      <summary vsli:raw="Gets or sets the XAML type identifier to report as the parent type.">Ottiene o imposta l'identificatore del tipo XAML da segnalare come tipo padre.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object (XAML type identifier) to report as the parent type.">Oggetto <see cref="T:System.Xaml.XamlType" /> (identificatore del tipo XAML) da segnalare come tipo padre.</returns>
    </member>
    <member name="T:System.Xaml.XamlException">
      <summary vsli:raw="The exception that is thrown for a general XAML reader or XAML writer exception.">Eccezione generata per un reader XAML generale o eccezione del writer XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlException&quot; /&gt; class. The instance contains a system-supplied message that describes the error.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlException" />. L'istanza contenente un messaggio fornito dal sistema in cui viene descritto l'errore.</summary>
    </member>
    <member name="M:System.Xaml.XamlException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlException&quot; /&gt; class with serialized data.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlException" /> con dati serializzati.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Oggetto che contiene i dati oggetto serializzati.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Informazioni contestuali sull'origine o sulla destinazione.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlException&quot; /&gt; class. The instance contains a specified message that describes the error.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlException" />. L'istanza contenente un messaggio specifico in cui viene descritto l'errore.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor must make sure that this string has been localized for the current system culture.">Messaggio in cui viene descritta l'eccezione. Il chiamante di questo costruttore deve assicurare che la stringa sia stata localizzata in base alle impostazioni cultura correnti del sistema.</param>
    </member>
    <member name="M:System.Xaml.XamlException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlException&quot; /&gt; class. The instance contains a specified error message and a reference to the inner exception that is the cause of this exception.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlException" />. L'istanza contenente un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa di questa eccezione.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor must make sure that this string has been localized for the current system culture.">Messaggio in cui viene descritta l'eccezione. Il chiamante di questo costruttore deve assicurare che la stringa sia stata localizzata in base alle impostazioni cultura correnti del sistema.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Eccezione che ha determinato l'eccezione corrente. Se il parametro <paramref name="innerException" /> non è <see langword="null" />, l'eccezione corrente viene generata in un blocco <see langword="catch" /> in cui viene gestita l'eccezione interna.</param>
    </member>
    <member name="M:System.Xaml.XamlException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlException&quot; /&gt; class. The instance contains a specified error message, inner exception, and line information.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlException" />. L'istanza contenente un messaggio di errore specificato, l'eccezione interna e le informazioni sulla riga.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor must make sure that this string has been localized for the current system culture.">Messaggio in cui viene descritta l'eccezione. Il chiamante di questo costruttore deve assicurare che la stringa sia stata localizzata in base alle impostazioni cultura correnti del sistema.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception.">Eccezione che ha determinato l'eccezione corrente.</param>
      <param name="lineNumber" vsli:raw="The line number to report to debugging or to line information consumers.">Numero di riga da segnalare ai consumer di informazioni sulla riga o di debug.</param>
      <param name="linePosition" vsli:raw="The line position to report to debugging or line information consumers.">Posizione di riga da segnalare ai consumer di informazioni sulla riga o di debug.</param>
    </member>
    <member name="M:System.Xaml.XamlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Implements &lt;see cref=&quot;M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)&quot; /&gt; and provides serialization support for the line information data.">Implementa <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> e fornisce il supporto della serializzazione per i dati di informazioni sulla riga.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Oggetto che contiene i dati oggetto serializzati.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Informazioni contestuali sull'origine o sulla destinazione.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlException.LineNumber">
      <summary vsli:raw="Gets or sets the line number component of XAML text line information that the exception reports.">Ottiene o imposta il componente numero di riga delle informazioni sulla riga di testo XAML segnalate dall'eccezione.</summary>
      <returns vsli:raw="The line number component of the XAML text line information.">Componente numero di riga delle informazioni sulla riga di testo XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlException.LinePosition">
      <summary vsli:raw="Gets or sets the line position component of XAML text line information that the exception reports.">Ottiene o imposta il componente posizione di riga delle informazioni sulla riga di testo XAML segnalate dall'eccezione.</summary>
      <returns vsli:raw="The line position component of XAML text line information.">Componente posizione di riga delle informazioni sulla riga di testo XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlException.Message">
      <summary vsli:raw="Gets or sets the exception message, and if line information is available, appends the line information to the message.">Ottiene o imposta il messaggio di eccezione e aggiunge le informazioni sulla riga al messaggio, se tali informazioni sono disponibili.</summary>
      <returns vsli:raw="The exception message that includes the appended line information.">Messaggio di eccezione che include le informazioni sulla riga aggiunte.</returns>
    </member>
    <member name="T:System.Xaml.XamlInternalException">
      <summary vsli:raw="The exception that is thrown for internal inconsistencies that occur during XAML reading and XAML writing.">Eccezione generata per incoerenze interne che si verificano durante la lettura e la scrittura XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlInternalException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlInternalException&quot; /&gt; class with a system-supplied message that describes the error.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlInternalException" /> con un messaggio fornito dal sistema in cui viene descritto l'errore.</summary>
    </member>
    <member name="M:System.Xaml.XamlInternalException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlInternalException&quot; /&gt; class with serialized data.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlInternalException" /> con dati serializzati.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Oggetto che contiene i dati oggetto serializzati.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Informazioni contestuali sull'origine o sulla destinazione.</param>
    </member>
    <member name="M:System.Xaml.XamlInternalException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlInternalException&quot; /&gt; class with a specified message that describes the error.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlInternalException" /> con un messaggio specificato in cui viene descritto l'errore.</summary>
      <param name="message" vsli:raw="The message that describes the exception.">Messaggio in cui viene descritta l'eccezione.</param>
    </member>
    <member name="M:System.Xaml.XamlInternalException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlInternalException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlInternalException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message" vsli:raw="The message that describes the exception.">Messaggio in cui viene descritta l'eccezione.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Eccezione che ha determinato l'eccezione corrente. Se il parametro <paramref name="innerException" /> non è <see langword="null" />, l'eccezione corrente viene generata in un blocco <see langword="catch" /> in cui viene gestita l'eccezione interna.</param>
    </member>
    <member name="T:System.Xaml.XamlLanguage">
      <summary vsli:raw="Defines constants that provide strings or objects that are useful for XAML markup or for programming with XAML types. These strings or objects are relevant to XAML language concepts, to the implementation of XAML language concepts in .NET XAML Services, or to both.">Definisce le costanti che forniscono stringhe o oggetti utili per il markup XAML o la programmazione con i tipi XAML. Tali stringhe o oggetti sono relativi ai concetti del linguaggio XAML, all'implementazione dei concetti del linguaggio XAML nei servizi XAML di .NET Framework o a entrambi.</summary>
    </member>
    <member name="P:System.Xaml.XamlLanguage.AllDirectives">
      <summary vsli:raw="Gets a read-only generic collection of each &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; identifier that is defined by .NET XAML Services.">Ottiene un insieme generico di sola lettura di ogni identificatore di <see cref="T:System.Xaml.XamlDirective" /> definito dai servizi XAML di .NET Framework.</summary>
      <returns vsli:raw="A read-only generic collection of each &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; identifier that is defined by .NET XAML Services.">Insieme generico di sola lettura di ogni identificatore di <see cref="T:System.Xaml.XamlDirective" /> definito dai servizi XAML di .NET Framework.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.AllTypes">
      <summary vsli:raw="Gets a read-only generic collection of individual &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; values that match, or alias, a XAML language intrinsic that is defined by .NET XAML Services.">Ottiene un insieme generico di sola lettura di singoli valori di <see cref="T:System.Xaml.XamlType" /> che corrispondono a un linguaggio XAML intrinseco, o ne rappresentano un alias, definito nei servizi XAML di .NET Framework.</summary>
      <returns vsli:raw="A read-only generic collection of each &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that matches a XAML language intrinsic.">Insieme generico di sola lettura di ogni oggetto <see cref="T:System.Xaml.XamlType" /> che corrisponde a un linguaggio XAML intrinseco.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Arguments">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Arguments&quot; /&gt; of a factory method or a generic usage.">Ottiene un oggetto <see cref="T:System.Xaml.XamlDirective" /> per <see langword="Arguments" /> di un metodo factory o di un utilizzo generico.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Arguments&quot; /&gt; of a factory method or generic usage.">Oggetto <see cref="T:System.Xaml.XamlDirective" /> per <see langword="Arguments" /> di un metodo factory o di un utilizzo generico.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Array">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Array&quot; /&gt; XAML language intrinsic.">Ottiene un oggetto <see cref="T:System.Xaml.XamlType" /> per il linguaggio XAML intrinseco <see langword="Array" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Array&quot; /&gt; XAML language intrinsic.">Oggetto <see cref="T:System.Xaml.XamlType" /> per il linguaggio XAML intrinseco <see langword="Array" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.AsyncRecords">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;AsyncRecords&quot; /&gt; pseudomember.">Ottiene un oggetto <see cref="T:System.Xaml.XamlDirective" /> per lo pseudomembro <see langword="AsyncRecords" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;AsyncRecords&quot; /&gt; pseudomember.">Oggetto <see cref="T:System.Xaml.XamlDirective" /> per lo pseudomembro <see langword="AsyncRecords" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Base">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;base&quot; /&gt; directive from XML.">Ottiene un oggetto <see cref="T:System.Xaml.XamlDirective" /> per la direttiva <see langword="base" /> XML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;base&quot; /&gt; directive from XML.">Oggetto <see cref="T:System.Xaml.XamlDirective" /> per la direttiva <see langword="base" /> XML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Boolean">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Boolean&quot; /&gt; XAML language intrinsic.">Ottiene un oggetto <see cref="T:System.Xaml.XamlType" /> per il linguaggio XAML intrinseco <see langword="Boolean" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Boolean&quot; /&gt; XAML language intrinsic.">Oggetto <see cref="T:System.Xaml.XamlType" /> per il linguaggio XAML intrinseco <see langword="Boolean" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Byte">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Byte&quot; /&gt; XAML language intrinsic.">Ottiene un oggetto <see cref="T:System.Xaml.XamlType" /> per il linguaggio XAML intrinseco <see langword="Byte" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Byte&quot; /&gt; XAML language intrinsic.">Oggetto <see cref="T:System.Xaml.XamlType" /> per il linguaggio XAML intrinseco <see langword="Byte" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Char">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Char&quot; /&gt; XAML language intrinsic.">Ottiene un oggetto <see cref="T:System.Xaml.XamlType" /> per il linguaggio XAML intrinseco <see langword="Char" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Char&quot; /&gt; XAML language intrinsic.">Oggetto <see cref="T:System.Xaml.XamlType" /> per il linguaggio XAML intrinseco <see langword="Char" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Class">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Class&quot; /&gt; directive from XAML.">Ottiene un oggetto <see cref="T:System.Xaml.XamlDirective" /> per la direttiva <see langword="Class" /> da XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Class&quot; /&gt; directive from XAML.">Oggetto <see cref="T:System.Xaml.XamlDirective" /> per la direttiva <see langword="Class" /> da XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.ClassAttributes">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;ClassAttributes&quot; /&gt; directive from XAML.">Ottiene un oggetto <see cref="T:System.Xaml.XamlDirective" /> per la direttiva <see langword="ClassAttributes" /> da XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;ClassAttributes&quot; /&gt; directive from XAML.">Oggetto <see cref="T:System.Xaml.XamlDirective" /> per la direttiva <see langword="ClassAttributes" /> da XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.ClassModifier">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;ClassModifier&quot; /&gt; directive from XAML.">Ottiene un oggetto <see cref="T:System.Xaml.XamlDirective" /> per la direttiva <see langword="ClassModifier" /> da XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;ClassModifier&quot; /&gt; directive from XAML.">Oggetto <see cref="T:System.Xaml.XamlDirective" /> per la direttiva <see langword="ClassModifier" /> da XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Code">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for &lt;see langword=&quot;Code&quot; /&gt; as detailed in [MS-XAML].">Ottiene un oggetto <see cref="T:System.Xaml.XamlDirective" /> per <see langword="Code" /> come descritto in dettaglio in [MS-XAML].</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for &lt;see langword=&quot;Code&quot; /&gt; as detailed in [MS-XAML].">Oggetto <see cref="T:System.Xaml.XamlDirective" /> per <see langword="Code" /> come descritto in dettaglio in [MS-XAML].</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.ConnectionId">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; that identifies a connection point for wiring events to handlers.">Ottiene un oggetto <see cref="T:System.Xaml.XamlDirective" /> che identifica un punto di connessione per collegare gli eventi ai gestori.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; that identifies a connection point for wiring events to handlers.">Oggetto <see cref="T:System.Xaml.XamlDirective" /> che identifica un punto di connessione per collegare gli eventi ai gestori.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Decimal">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Decimal&quot; /&gt; XAML language intrinsic.">Ottiene un oggetto <see cref="T:System.Xaml.XamlType" /> per il linguaggio XAML intrinseco <see langword="Decimal" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Decimal&quot; /&gt; XAML language intrinsic.">Oggetto <see cref="T:System.Xaml.XamlType" /> per il linguaggio XAML intrinseco <see langword="Decimal" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Double">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Double&quot; /&gt; XAML language intrinsic.">Ottiene un oggetto <see cref="T:System.Xaml.XamlType" /> per il linguaggio XAML intrinseco <see langword="Double" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Double&quot; /&gt; XAML language intrinsic.">Oggetto <see cref="T:System.Xaml.XamlType" /> per il linguaggio XAML intrinseco <see langword="Double" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.FactoryMethod">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; that identifies a factory method for XAML.">Ottiene un oggetto <see cref="T:System.Xaml.XamlDirective" /> che identifica un metodo factory per XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; that identifies a factory method for XAML.">Oggetto <see cref="T:System.Xaml.XamlDirective" /> che identifica un metodo factory per XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.FieldModifier">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;FieldModifier&quot; /&gt; directive from XAML.">Ottiene un oggetto <see cref="T:System.Xaml.XamlDirective" /> per la direttiva <see langword="FieldModifier" /> da XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;FieldModifier&quot; /&gt; directive from XAML.">Oggetto <see cref="T:System.Xaml.XamlDirective" /> per la direttiva <see langword="FieldModifier" /> da XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Initialization">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Initialization&quot; /&gt; directive from XAML.">Ottiene un oggetto <see cref="T:System.Xaml.XamlDirective" /> per la direttiva <see langword="Initialization" /> da XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Initialization&quot; /&gt; directive from XAML.">Oggetto <see cref="T:System.Xaml.XamlDirective" /> per la direttiva <see langword="Initialization" /> da XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Int16">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see cref=&quot;T:System.Int16&quot; /&gt; XAML language intrinsic.">Ottiene un oggetto <see cref="T:System.Xaml.XamlType" /> per il linguaggio XAML intrinseco <see langword="Int16" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see cref=&quot;T:System.Int16&quot; /&gt; XAML language intrinsic.">Oggetto <see cref="T:System.Xaml.XamlType" /> per il linguaggio XAML intrinseco <see langword="Int16" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Int32">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see cref=&quot;T:System.Int32&quot; /&gt; XAML language intrinsic.">Ottiene un oggetto <see cref="T:System.Xaml.XamlType" /> per il linguaggio XAML intrinseco <see langword="Int32" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see cref=&quot;T:System.Int32&quot; /&gt; XAML language intrinsic.">Oggetto <see cref="T:System.Xaml.XamlType" /> per il linguaggio XAML intrinseco <see langword="Int32" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Int64">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see cref=&quot;T:System.Int64&quot; /&gt; XAML language intrinsic.">Ottiene un oggetto <see cref="T:System.Xaml.XamlType" /> per il linguaggio XAML intrinseco <see langword="Int64" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see cref=&quot;T:System.Int64&quot; /&gt; XAML language intrinsic.">Oggetto <see cref="T:System.Xaml.XamlType" /> per il linguaggio XAML intrinseco <see langword="Int64" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Items">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Items&quot; /&gt; directive from XAML.">Ottiene un oggetto <see cref="T:System.Xaml.XamlDirective" /> per la direttiva <see langword="Items" /> da XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Items&quot; /&gt; directive from XAML.">Oggetto <see cref="T:System.Xaml.XamlDirective" /> per la direttiva <see langword="Items" /> da XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Key">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Key&quot; /&gt; directive from XAML.">Ottiene un oggetto <see cref="T:System.Xaml.XamlDirective" /> per la direttiva <see langword="Key" /> da XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Key&quot; /&gt; directive from XAML.">Oggetto <see cref="T:System.Xaml.XamlDirective" /> per la direttiva <see langword="Key" /> da XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Lang">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;lang&quot; /&gt; directive from XML.">Ottiene un oggetto <see cref="T:System.Xaml.XamlDirective" /> per la direttiva <see langword="lang" /> XML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;lang&quot; /&gt; directive from XML.">Oggetto <see cref="T:System.Xaml.XamlDirective" /> per la direttiva <see langword="lang" /> XML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Member">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the type that is the item type of &lt;see cref=&quot;P:System.Xaml.XamlLanguage.Members&quot; /&gt;.">Ottiene un oggetto <see cref="T:System.Xaml.XamlType" /> per il tipo di elemento di <see cref="P:System.Xaml.XamlLanguage.Members" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the type that is the item type of &lt;see cref=&quot;P:System.Xaml.XamlLanguage.Members&quot; /&gt;.">Oggetto <see cref="T:System.Xaml.XamlType" /> per il tipo di elemento di <see cref="P:System.Xaml.XamlLanguage.Members" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Members">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Members&quot; /&gt; concept in XAML.">Ottiene un oggetto <see cref="T:System.Xaml.XamlDirective" /> per il concetto <see langword="Members" /> in XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Members&quot; /&gt; concept in XAML.">Oggetto <see cref="T:System.Xaml.XamlDirective" /> per il concetto <see langword="Members" /> in XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Name">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Name&quot; /&gt; directive from XAML.">Ottiene un oggetto <see cref="T:System.Xaml.XamlDirective" /> per la direttiva <see langword="Name" /> da XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Name&quot; /&gt; directive from XAML.">Oggetto <see cref="T:System.Xaml.XamlDirective" /> per la direttiva <see langword="Name" /> da XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Null">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Null&quot; /&gt; or &lt;see langword=&quot;NullExtension&quot; /&gt; XAML language intrinsic.">Ottiene un oggetto <see cref="T:System.Xaml.XamlType" /> per il linguaggio XAML intrinseco <see langword="Null" /> o <see langword="NullExtension" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Null&quot; /&gt;/&lt;see langword=&quot;NullExtension&quot; /&gt; XAML language intrinsic.">Oggetto <see cref="T:System.Xaml.XamlType" /> per il <see langword="Null" />linguaggioXAMLintrinseco /. <see langword="NullExtension" /></returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Object">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Object&quot; /&gt; XAML language concept.">Ottiene un oggetto <see cref="T:System.Xaml.XamlType" /> per il concetto di linguaggio XAML <see langword="Object" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Object&quot; /&gt; XAML language concept.">Oggetto <see cref="T:System.Xaml.XamlType" /> per il concetto di linguaggio XAML <see langword="Object" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.PositionalParameters">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;PositionalParameters&quot; /&gt; directive from XAML.">Ottiene un oggetto <see cref="T:System.Xaml.XamlDirective" /> per la direttiva <see langword="PositionalParameters" /> da XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;PositionalParameters&quot; /&gt; directive from XAML.">Oggetto <see cref="T:System.Xaml.XamlDirective" /> per la direttiva <see langword="PositionalParameters" /> da XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Property">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Property&quot; /&gt; concept in XAML.">Ottiene un oggetto <see cref="T:System.Xaml.XamlType" /> per il concetto <see langword="Property" /> in XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Property&quot; /&gt; concept in XAML.">Oggetto <see cref="T:System.Xaml.XamlType" /> per il concetto <see langword="Property" /> in XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Reference">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that represents a &lt;see langword=&quot;Reference&quot; /&gt; for XAML.">Ottiene un oggetto <see cref="T:System.Xaml.XamlType" /> che rappresenta <see langword="Reference" /> per XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that represents a &lt;see langword=&quot;Reference&quot; /&gt; for XAML.">Oggetto <see cref="T:System.Xaml.XamlType" /> che rappresenta <see langword="Reference" /> per XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Shared">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Shared&quot; /&gt; directive for XAML.">Ottiene un oggetto <see cref="T:System.Xaml.XamlDirective" /> per la direttiva <see langword="Shared" /> XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Shared&quot; /&gt; directive for XAML.">Oggetto <see cref="T:System.Xaml.XamlDirective" /> per la direttiva <see langword="Shared" /> XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Single">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;c&gt;Single&lt;/c&gt; XAML language intrinsic.">Ottiene un oggetto <see cref="T:System.Xaml.XamlType" /> per il linguaggio XAML intrinseco <see langword="Single" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;c&gt;Single&lt;/c&gt; XAML language intrinsic.">Oggetto <see cref="T:System.Xaml.XamlType" /> per il linguaggio XAML intrinseco <see langword="Single" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Space">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;space&quot; /&gt; directive from XML.">Ottiene un oggetto <see cref="T:System.Xaml.XamlDirective" /> per la direttiva <see langword="space" /> XML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;space&quot; /&gt; directive from XML.">Oggetto <see cref="T:System.Xaml.XamlDirective" /> per la direttiva <see langword="space" /> XML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Static">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Static&quot; /&gt;/&lt;see langword=&quot;StaticExtension&quot; /&gt; XAML language intrinsic.">Ottiene un oggetto <see cref="T:System.Xaml.XamlType" /> per l'elemento intrinseco <see langword="Static" />/<see langword="StaticExtension" /> del linguaggio XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Static&quot; /&gt;/&lt;see langword=&quot;StaticExtension&quot; /&gt; XAML language intrinsic.">Oggetto <see cref="T:System.Xaml.XamlType" /> per il <see langword="Static" />linguaggioXAMLintrinseco /. <see langword="StaticExtension" /></returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.String">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;String&quot; /&gt; XAML language intrinsic.">Ottiene un oggetto <see cref="T:System.Xaml.XamlType" /> per il linguaggio XAML intrinseco <see langword="String" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;String&quot; /&gt; XAML language intrinsic.">Oggetto <see cref="T:System.Xaml.XamlType" /> per il linguaggio XAML intrinseco <see langword="String" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Subclass">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Subclass&quot; /&gt; directive from XAML.">Ottiene un oggetto <see cref="T:System.Xaml.XamlDirective" /> per la direttiva <see langword="Subclass" /> da XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Subclass&quot; /&gt; directive from XAML.">Oggetto <see cref="T:System.Xaml.XamlDirective" /> per la direttiva <see langword="Subclass" /> da XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.SynchronousMode">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; that enables loading XAML asynchronously if the XAML processor supports such a mode.">Ottiene un oggetto <see cref="T:System.Xaml.XamlDirective" /> che consente il caricamento XAML in modo asincrono se il processore XAML supporta tale modalità.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; that enables loading XAML asynchronously.">Oggetto <see cref="T:System.Xaml.XamlDirective" /> che consente il caricamento XAML in modo asincrono.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.TimeSpan">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;TimeSpan&quot; /&gt; concept in XAML language.">Ottiene un oggetto <see cref="T:System.Xaml.XamlType" /> per il concetto di linguaggio XAML <see langword="TimeSpan" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;TimeSpan&quot; /&gt; XAML language concept.">Oggetto <see cref="T:System.Xaml.XamlType" /> per il concetto di linguaggio XAML <see langword="TimeSpan" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Type">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Type&quot; /&gt;/&lt;see langword=&quot;TypeExtension&quot; /&gt; XAML language intrinsic.">Ottiene un oggetto <see cref="T:System.Xaml.XamlType" /> per l'elemento intrinseco <see langword="Type" />/<see langword="TypeExtension" /> del linguaggio XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Type&quot; /&gt;/&lt;see langword=&quot;TypeExtension&quot; /&gt; XAML language intrinsic.">Oggetto <see cref="T:System.Xaml.XamlType" /> per il <see langword="Type" />linguaggioXAMLintrinseco /. <see langword="TypeExtension" /></returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.TypeArguments">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;TypeArguments&quot; /&gt; directive from XAML.">Ottiene un oggetto <see cref="T:System.Xaml.XamlDirective" /> per la direttiva <see langword="TypeArguments" /> da XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;TypeArguments&quot; /&gt; directive from XAML.">Oggetto <see cref="T:System.Xaml.XamlDirective" /> per la direttiva <see langword="TypeArguments" /> da XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Uid">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Uid&quot; /&gt; directive from XAML.">Ottiene un oggetto <see cref="T:System.Xaml.XamlDirective" /> per la direttiva <see langword="Uid" /> da XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Uid&quot; /&gt; directive from XAML.">Oggetto <see cref="T:System.Xaml.XamlDirective" /> per la direttiva <see langword="Uid" /> da XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.UnknownContent">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;UnknownContent&quot; /&gt; directive from XAML.">Ottiene un oggetto <see cref="T:System.Xaml.XamlDirective" /> per la direttiva <see langword="UnknownContent" /> da XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;UnknownContent&quot; /&gt; directive from XAML.">Oggetto <see cref="T:System.Xaml.XamlDirective" /> per la direttiva <see langword="UnknownContent" /> da XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Uri">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Uri&quot; /&gt; XAML language concept.">Ottiene un oggetto <see cref="T:System.Xaml.XamlType" /> per il concetto di linguaggio XAML <see langword="Uri" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Uri&quot; /&gt; XAML language concept.">Oggetto <see cref="T:System.Xaml.XamlType" /> per il concetto di linguaggio XAML <see langword="Uri" />.</returns>
    </member>
    <member name="F:System.Xaml.XamlLanguage.Xaml2006Namespace">
      <summary vsli:raw="Gets a string value for the string that identifies the XAML (2006) language namespace. That namespace corresponds to the XAML (2006) &quot;x&quot; prefixed namespace as defined in [MS-XAML] Section 5.1.1.">Ottiene un valore stringa per la stringa che identifica lo spazio dei nomi del linguaggio XAML (2006). Questo spazio dei nomi corrisponde allo spazio dei nomi XAML (2006) con prefisso "x" come definito in [MS-XAML] Sezione 5.1.1.</summary>
    </member>
    <member name="P:System.Xaml.XamlLanguage.XamlNamespaces">
      <summary vsli:raw="Gets a collection of the namespace identifiers for XAML.">Ottiene un insieme di identificatori degli spazi dei nomi per XAML.</summary>
      <returns vsli:raw="A collection of the namespace identifiers for XAML.">Insieme di identificatori degli spazi dei nomi per XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.XData">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the XAML type that backs an &lt;see langword=&quot;XData&quot; /&gt; block in XAML.">Ottiene un oggetto <see cref="T:System.Xaml.XamlType" /> per il tipo XAML sottostante a un blocco <see langword="XData" /> in XAML.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the XAML type that backs an &lt;see langword=&quot;XData&quot; /&gt; block. See [MS-XAML] Section 5.2.23.">Oggetto <see cref="T:System.Xaml.XamlType" /> per il tipo XAML sottostante a un blocco <see langword="XData" /> in XAML. Vedere la sezione [MS-XAML] 5.2.23.</returns>
    </member>
    <member name="F:System.Xaml.XamlLanguage.Xml1998Namespace">
      <summary vsli:raw="Gets a string value for the string that identifies the XML (1998) language namespace. That namespace corresponds to the XML &quot;xml&quot; prefixed namespace as referenced in [MS-XAML] Section 5.1.2.">Ottiene un valore per la stringa che identifica lo spazio dei nomi del linguaggio XML (1998). Questo spazio dei nomi corrisponde allo spazio dei nomi XML con prefisso "xml" come definito in [MS-XAML] Sezione 5.1.2.</summary>
    </member>
    <member name="P:System.Xaml.XamlLanguage.XmlNamespaces">
      <summary vsli:raw="Gets a collection of the namespace identifiers for XML.">Ottiene un insieme di identificatori degli spazi dei nomi per XML.</summary>
      <returns vsli:raw="A collection of the namespace identifiers for XML.">Insieme di identificatori degli spazi dei nomi per XML.</returns>
    </member>
    <member name="T:System.Xaml.XamlMember">
      <summary vsli:raw="Provides the XAML type system identifier for members of XAML types. The identifier is used by XAML readers and XAML writers during processing of member nodes (when the XAML reader is positioned on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.StartMember&quot; /&gt;) and also for general XAML type system logic.">Fornisce l'identificatore di sistema dei tipi XAML per i membri dei tipi XAML. L'identificatore viene utilizzato dai reader e dai writer XAML durante l'elaborazione dei nodi membri (quando il reader XAML viene posizionato su un oggetto <see cref="F:System.Xaml.XamlNodeType.StartMember" />) e anche per la logica di sistema di tipo XAML generale.</summary>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class using CLR type system &lt;see cref=&quot;T:System.Reflection.EventInfo&quot; /&gt; and a &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt;.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlMember" /> utilizzando <see cref="T:System.Reflection.EventInfo" /> del sistema di tipi CLR e un oggetto <see cref="T:System.Xaml.XamlSchemaContext" />.</summary>
      <param name="eventInfo" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.EventInfo&quot; /&gt; that represents the event member.">Oggetto <see cref="T:System.Reflection.EventInfo" /> del sistema di tipo CRL che rappresenta il membro dell'evento.</param>
      <param name="schemaContext" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; context that qualifies the member.">Contesto dell'oggetto <see cref="T:System.Xaml.XamlSchemaContext" /> che qualifica il membro.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class using CLR type system &lt;see cref=&quot;T:System.Reflection.EventInfo&quot; /&gt; and a &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt;, including &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; information.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlMember" /> utilizzando l'oggetto <see cref="T:System.Reflection.EventInfo" /> del sistema di tipo CRL e un oggetto <see cref="T:System.Xaml.XamlSchemaContext" />, incluse le informazioni sull'oggetto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
      <param name="eventInfo" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.EventInfo&quot; /&gt; that represents the event member.">Oggetto <see cref="T:System.Reflection.EventInfo" /> del sistema di tipo CRL che rappresenta il membro dell'evento.</param>
      <param name="schemaContext" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; context that qualifies the member.">Contesto dell'oggetto <see cref="T:System.Xaml.XamlSchemaContext" /> che qualifica il membro.</param>
      <param name="invoker" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; implementation that handles run-time reflection calls against the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Implementazione di <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> che gestisce le chiamate con reflection di runtime all'oggetto <see cref="T:System.Xaml.XamlMember" />.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class using CLR type system &lt;see cref=&quot;T:System.Reflection.PropertyInfo&quot; /&gt; and a &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt;.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlMember" /> utilizzando <see cref="T:System.Reflection.PropertyInfo" /> del sistema di tipi CLR e un oggetto <see cref="T:System.Xaml.XamlSchemaContext" />.</summary>
      <param name="propertyInfo" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.PropertyInfo&quot; /&gt; that represents the property member.">Oggetto <see cref="T:System.Reflection.PropertyInfo" /> del sistema di tipo CRL che rappresenta il membro della proprietà.</param>
      <param name="schemaContext" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; context that qualifies the member.">Contesto dell'oggetto <see cref="T:System.Xaml.XamlSchemaContext" /> che qualifica il membro.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class using reflection &lt;see cref=&quot;T:System.Reflection.PropertyInfo&quot; /&gt; and a &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt;, including &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; information.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlMember" /> utilizzando l'oggetto <see cref="T:System.Reflection.PropertyInfo" /> di reflection e un oggetto <see cref="T:System.Xaml.XamlSchemaContext" />, incluse le informazioni sull'oggetto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
      <param name="propertyInfo" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.PropertyInfo&quot; /&gt; that represents the property member.">Oggetto <see cref="T:System.Reflection.PropertyInfo" /> del sistema di tipo CRL che rappresenta il membro della proprietà.</param>
      <param name="schemaContext" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; context that qualifies the member.">Contesto dell'oggetto <see cref="T:System.Xaml.XamlSchemaContext" /> che qualifica il membro.</param>
      <param name="invoker" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; implementation that handles run-time invocation calls against the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Implementazione di <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> che gestisce le chiamate di runtime all'oggetto <see cref="T:System.Xaml.XamlMember" />.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class for a &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; that represents an attachable property.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlMember" /> per un oggetto <see cref="T:System.Xaml.XamlMember" /> che rappresenta una proprietà associabile.</summary>
      <param name="attachablePropertyName" vsli:raw="The string name of the attachable property.">Nome della stringa della proprietà associabile.</param>
      <param name="getter" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the &lt;see langword=&quot;get&quot; /&gt; accessor of the attachable member's backing implementation.">Oggetto <see cref="T:System.Reflection.MethodInfo" /> del sistema di tipo CRL per la funzione di accesso <see langword="get" /> dell'implementazione di supporto del membro associabile.</param>
      <param name="setter" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the &lt;see langword=&quot;set&quot; /&gt; accessor of the attachable member's backing implementation.">Oggetto <see cref="T:System.Reflection.MethodInfo" /> del sistema di tipo CRL per la funzione di accesso <see langword="set" /> dell'implementazione di supporto del membro associabile.</param>
      <param name="schemaContext" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; context that qualifies the member.">Contesto dell'oggetto <see cref="T:System.Xaml.XamlSchemaContext" /> che qualifica il membro.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class for a &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; that represents an attachable property, including &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; information.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlMember" /> per un oggetto <see cref="T:System.Xaml.XamlMember" /> che rappresenta una proprietà associabile, incluse le informazioni sull'oggetto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
      <param name="attachablePropertyName" vsli:raw="The string name of the attachable property.">Nome della stringa della proprietà associabile.</param>
      <param name="getter" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the &lt;see langword=&quot;get&quot; /&gt; accessor of the attachable member's backing implementation.">Oggetto <see cref="T:System.Reflection.MethodInfo" /> del sistema di tipo CRL per la funzione di accesso <see langword="get" /> dell'implementazione di supporto del membro associabile.</param>
      <param name="setter" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the &lt;see langword=&quot;set&quot; /&gt; accessor of the attachable member's backing implementation.">Oggetto <see cref="T:System.Reflection.MethodInfo" /> del sistema di tipo CRL per la funzione di accesso <see langword="set" /> dell'implementazione di supporto del membro associabile.</param>
      <param name="schemaContext" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; context that qualifies the member.">Contesto dell'oggetto <see cref="T:System.Xaml.XamlSchemaContext" /> che qualifica il membro.</param>
      <param name="invoker" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; implementation that handles run-time invocation calls against the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Implementazione di <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> che gestisce le chiamate di runtime all'oggetto <see cref="T:System.Xaml.XamlMember" />.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class for a &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; that represents an attachable event.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlMember" /> per un oggetto <see cref="T:System.Xaml.XamlMember" /> che rappresenta un evento associabile.</summary>
      <param name="attachableEventName" vsli:raw="The string name of the attachable event.">Nome della stringa dell'evento associabile.</param>
      <param name="adder" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the handler &lt;see langword=&quot;Add&quot; /&gt; method of the attachable member's backing implementation.">Oggetto <see cref="T:System.Reflection.MethodInfo" /> del sistema di tipo CRL per il metodo <see langword="Add" /> di gestione dell'implementazione di supporto del membro associabile.</param>
      <param name="schemaContext" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; context that qualifies the member.">Contesto dell'oggetto <see cref="T:System.Xaml.XamlSchemaContext" /> che qualifica il membro.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class for a &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; that represents an attachable event, including &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; information.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlMember" /> per un oggetto <see cref="T:System.Xaml.XamlMember" /> che rappresenta un evento associabile, incluse le informazioni sull'oggetto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
      <param name="attachableEventName" vsli:raw="The string name of the attachable event.">Nome della stringa dell'evento associabile.</param>
      <param name="adder" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the handler &lt;see langword=&quot;Add&quot; /&gt; method of the attachable member's backing implementation.">Oggetto <see cref="T:System.Reflection.MethodInfo" /> del sistema di tipo CRL per il metodo <see langword="Add" /> di gestione dell'implementazione di supporto del membro associabile.</param>
      <param name="schemaContext" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; context that qualifies the member.">Contesto dell'oggetto <see cref="T:System.Xaml.XamlSchemaContext" /> che qualifica il membro.</param>
      <param name="invoker" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; implementation that handles run-time invocation calls against the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Implementazione di <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> che gestisce le chiamate di runtime all'oggetto <see cref="T:System.Xaml.XamlMember" />.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class using a string name and declaring &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; information. A &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; that is constructed with this signature has significant limitations.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlMember" /> utilizzando il nome di una stringa e le informazioni sull'oggetto <see cref="T:System.Xaml.XamlType" /> dichiarante. Un oggetto <see cref="T:System.Xaml.XamlMember" /> costruito con questa firma ha limitazioni significative.</summary>
      <param name="name" vsli:raw="The string name of the member.">Nome della stringa del membro.</param>
      <param name="declaringType" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; information for the declaring type.">Informazioni sull'oggetto <see cref="T:System.Xaml.XamlType" /> per il tipo dichiarante.</param>
      <param name="isAttachable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the member is attachable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per indicare che il membro è associabile; in caso contrario, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; or &lt;paramref name=&quot;declaringType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> o <paramref name="declaringType" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlMember.DeclaringType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the type that declares the member that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Ottiene l'oggetto <see cref="T:System.Xaml.XamlType" /> per il tipo che dichiara il membro associato all'oggetto <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the type that declares the member that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Oggetto <see cref="T:System.Xaml.XamlType" /> per il tipo che dichiara il membro associato all'oggetto <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.DeferringLoader">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; object, which is used for deferred loading of XAML declared objects.">Ottiene un oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, che viene utilizzato per il caricamento posticipato degli oggetti XAML dichiarati.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.Xaml.XamlDeferringLoader&quot; /&gt; constraint on the generic.">Oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con vincolo <see cref="T:System.Xaml.XamlDeferringLoader" /> per il tipo generico.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.DependsOn">
      <summary vsli:raw="Gets a list of &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; objects. These report the members where dependency relationships for initialization order exist relative to this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Ottiene un elenco di oggetti <see cref="T:System.Xaml.XamlMember" />. Tali oggetti segnalano i membri in cui sono presenti le relazioni di dipendenza per l'ordine di inizializzazione in relazione all'oggetto <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="A list of &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; objects.">Elenco di oggetti <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.Equals(System.Object)">
      <summary vsli:raw="Indicates whether the current object is equal to another object.">Indica se l'oggetto corrente è uguale a un altro oggetto.</summary>
      <param name="obj" vsli:raw="The object to compare with this object.">Oggetto da confrontare con l'oggetto corrente.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current object is equal to the &lt;paramref name=&quot;obj&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto corrente è uguale al parametro <paramref name="obj" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.Equals(System.Xaml.XamlMember)">
      <summary vsli:raw="Indicates whether the current object is equal to another object of the same type.">Indica se l'oggetto corrente è uguale a un altro oggetto dello stesso tipo.</summary>
      <param name="other" vsli:raw="An object to compare with this object.">Oggetto da confrontare con l'oggetto corrente.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current object is equal to the &lt;paramref name=&quot;other&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto corrente è uguale al parametro <paramref name="other" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.GetHashCode">
      <summary vsli:raw="Returns the hash code for this object.">Restituisce il codice hash per questo oggetto.</summary>
      <returns vsli:raw="An integer hash code.">Codice hash di un intero.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.GetXamlNamespaces">
      <summary vsli:raw="Returns a list of XAML namespaces where this XAML member can exist.">Restituisce un elenco di spazi dei nomi XAML in cui può essere presente questo membro XAML.</summary>
      <returns vsli:raw="A list of XAML namespace identifiers as strings.">Elenco di identificatori degli spazi dei nomi XAML in formato stringa.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.Invoker">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; implementation that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Ottiene l'implementazione di <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> associata all'oggetto <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; implementation that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Implementazione di <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> associata all'oggetto <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsAmbient">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is reported as an ambient property.">Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> è segnalato come proprietà di ambiente.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is reported as an ambient property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlMember" /> viene segnalato come proprietà di ambiente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsAttachable">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is an attachable member.">Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> è un membro associabile.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is an attachable member; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlMember" /> è un membro associabile; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsDirective">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is a XAML directive.">Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> è una direttiva XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is a XAML directive; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlMember" /> è una direttiva XAML; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsEvent">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents an event member.">Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un membro di evento.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents an event; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un evento; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsNameValid">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is initialized with a valid &lt;see langword=&quot;xamlName&quot; /&gt; string as its &lt;see cref=&quot;P:System.Xaml.XamlMember.Name&quot; /&gt;.">Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> viene inizializzato con una stringa <see langword="xamlName" /> valida come <see cref="P:System.Xaml.XamlMember.Name" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is initialized with a valid &lt;see langword=&quot;xamlName&quot; /&gt; string; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlMember" /> viene inizializzato con una stringa <see langword="xamlName" /> valida; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a read-only member.">Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un membro di sola lettura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a read-only member; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un membro di sola lettura; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsReadPublic">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a member with a callable public &lt;see langword=&quot;get&quot; /&gt; accessor.">Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un membro con una funzione di accesso <see langword="get" /> pubblica che può essere chiamata.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a callable public &lt;see langword=&quot;get&quot; /&gt; accessor; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta una funzione di accesso <see langword="get" /> pubblica; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsUnknown">
      <summary vsli:raw="Gets a value that indicates whether the member is not resolvable by the backing system that is used for type and member resolution.">Ottiene un valore che indica se il membro non può essere risolto dal sistema di supporto utilizzato per la risoluzione del tipo e del membro.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the member is not resolvable; &lt;see langword=&quot;false&quot; /&gt; if the member is resolvable.">
        <see langword="true" /> se il membro non può essere risolto; <see langword="false" /> se il membro può essere risolto.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsWriteOnly">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a write-only member.">Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un membro di sola scrittura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a write-only member; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un membro di sola scrittura; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsWritePublic">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a member that has a callable public &lt;see langword=&quot;set&quot; /&gt; accessor.">Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un membro che dispone di una funzione di accesso <see langword="set" /> pubblica che può essere chiamata.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a callable public &lt;see langword=&quot;set&quot; /&gt; accessor; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta una funzione di accesso <see langword="set" /> pubblica; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupCustomAttributeProvider">
      <summary vsli:raw="When implemented in a derived class, returns an &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; implementation.">Quando implementato in una classe derivata, restituisce un'implementazione di <see cref="T:System.Reflection.ICustomAttributeProvider" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; implementation.">Un'implementazione <see cref="T:System.Reflection.ICustomAttributeProvider" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupDeferringLoader">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; object, which is used for deferred loading of XAML declared objects.">Restituisce un oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> utilizzato per il caricamento posticipato degli oggetti XAML dichiarati.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; that has a &lt;see cref=&quot;T:System.Xaml.XamlDeferringLoader&quot; /&gt; constraint on the generic.">Oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con vincolo <see cref="T:System.Xaml.XamlDeferringLoader" /> per il tipo generico.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupDependsOn">
      <summary vsli:raw="Returns a list of &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; objects. Items in the list report the members where dependency relationships for initialization order exist relative to this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Restituisce un elenco di oggetti <see cref="T:System.Xaml.XamlMember" />. Le voci nell'elenco segnalano i membri in cui sono presenti le relazioni di dipendenza per l'ordine di inizializzazione in relazione all'oggetto <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="A list of &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; objects.">Elenco di oggetti <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupInvoker">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Restituisce un oggetto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> associato a <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; information for this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;; or &lt;see langword=&quot;null&quot; /&gt;.">Informazioni sull'oggetto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> per l'oggetto <see cref="T:System.Xaml.XamlMember" /> oppure <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsAmbient">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is reported as an ambient property.">Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> viene segnalato come proprietà di ambiente.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to report this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; as an ambient property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per indicare questo oggetto <see cref="T:System.Xaml.XamlMember" /> come proprietà di ambiente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsEvent">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents an event.">Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un evento.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to report that this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents an event; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per indicare che l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un evento; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsReadOnly">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents an intended read-only property.">Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta una proprietà di sola lettura prevista.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to report this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; as an intended read-only property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per indicare che l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta una proprietà di sola lettura prevista; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsReadPublic">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a property that has a public &lt;see langword=&quot;get&quot; /&gt; accessor.">Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta una proprietà che dispone di una funzione di accesso <see langword="get" /> pubblica.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a property that has a public &lt;see langword=&quot;get&quot; /&gt; accessor; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta una proprietà che dispone di una funzione di accesso <see langword="get" /> pubblica; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsUnknown">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a member that is not resolvable by the backing system that is used for type and member resolution.">Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un membro che non può essere risolto dal sistema di supporto utilizzato per la risoluzione del tipo e del membro.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a non-resolvable member; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un membro che non può essere risolto; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsWriteOnly">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a member that has a public &lt;see langword=&quot;set&quot; /&gt; accessor but not a public &lt;see langword=&quot;get&quot; /&gt; accessor.">Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un membro che dispone di una funzione di accesso <see langword="set" /> pubblica ma non di una funzione di accesso <see langword="get" /> pubblica.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a write-only member; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un membro di sola scrittura; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsWritePublic">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a member that has a public &lt;see langword=&quot;set&quot; /&gt; accessor.">Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un membro che dispone di una funzione di accesso <see langword="set" /> pubblica.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a writable member; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlMember" /> rappresenta un membro scrivibile; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupMarkupExtensionBracketCharacters">
      <summary vsli:raw="Returns the opening and closing bracket characters for a markup extension.">Restituisce i caratteri parentesi quadra di apertura e chiusura per un'estensione di markup.</summary>
      <returns vsli:raw="A collection containing the opening and closing bracket characters.">Raccolta contenente i caratteri parentesi quadra di apertura e chiusura.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupTargetType">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type where the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; can exist.">Restituisce l'oggetto <see cref="T:System.Xaml.XamlType" /> del tipo in cui può essere presente l'oggetto <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="The type where the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; can exist.">Tipo in cui può essere presente l'oggetto <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupType">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type that is used by the member.">Restituisce l'oggetto <see cref="T:System.Xaml.XamlType" /> del tipo utilizzato dal membro.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type that is used by the member.">Oggetto <see cref="T:System.Xaml.XamlType" /> del tipo utilizzato dal membro.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupTypeConverter">
      <summary vsli:raw="Returns a type converter implementation that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Restituisce un'implementazione del convertitore di tipi associata all'oggetto <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; instance with &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; constraint; or &lt;see langword=&quot;null&quot; /&gt;.">Istanza di <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con vincolo <see cref="T:System.ComponentModel.TypeConverter" /> oppure <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupUnderlyingGetter">
      <summary vsli:raw="Returns a &lt;see langword=&quot;get&quot; /&gt; accessor that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Restituisce una funzione di accesso <see langword="get" /> associata all'oggetto <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the associated &lt;see langword=&quot;get&quot; /&gt; accessor; or &lt;see langword=&quot;null&quot; /&gt;.">Oggetto <see cref="T:System.Reflection.MethodInfo" /> per la funzione di accesso <see langword="get" /> associata oppure <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupUnderlyingMember">
      <summary vsli:raw="Returns a CLR type system &lt;see cref=&quot;T:System.Reflection.MemberInfo&quot; /&gt; that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Restituisce un oggetto <see cref="T:System.Reflection.MemberInfo" /> del sistema di tipo CRL che è associato all'oggetto <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="A CLR type system &lt;see cref=&quot;T:System.Reflection.MemberInfo&quot; /&gt; object that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;; or &lt;see langword=&quot;null&quot; /&gt;.">Oggetto <see cref="T:System.Reflection.MemberInfo" /> del sistema di tipo CRL che è associato all'oggetto <see cref="T:System.Xaml.XamlMember" /> oppure <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupUnderlyingSetter">
      <summary vsli:raw="Returns a &lt;see langword=&quot;set&quot; /&gt; accessor that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Restituisce una funzione di accesso <see langword="set" /> associata all'oggetto <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the associated &lt;see langword=&quot;set&quot; /&gt; accessor; or &lt;see langword=&quot;null&quot; /&gt;.">Oggetto <see cref="T:System.Reflection.MethodInfo" /> per la funzione di accesso <see langword="set" /> associata oppure <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupValueSerializer">
      <summary vsli:raw="Returns a value serializer implementation that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Restituisce un'implementazione del serializzatore di valori associata all'oggetto <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; instance with &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; constraint, or &lt;see langword=&quot;null&quot; /&gt;.">Istanza di <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con vincolo <see cref="T:System.Windows.Markup.ValueSerializer" /> o <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.MarkupExtensionBracketCharacters">
      <summary vsli:raw="Defines the opening and closing bracket characters for a markup extension.">Definisce i caratteri parentesi quadra di apertura e chiusura per un'estensione di markup.</summary>
      <returns vsli:raw="A collection containing the opening and closing bracket characters.">Raccolta contenente i caratteri parentesi quadra di apertura e chiusura.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.Name">
      <summary vsli:raw="Gets the &lt;see langword=&quot;xamlName&quot; /&gt; name string that declares this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Ottiene la stringa del nome <see langword="xamlName" /> che dichiara l'oggetto <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;xamlName&quot; /&gt; name string that declares this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Stringa del nome <see langword="xamlName" /> che dichiara l'oggetto <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; objects have the same value.">Determina se due oggetti <see cref="T:System.Xaml.XamlMember" /> specificati hanno lo stesso valore.</summary>
      <param name="xamlMember1" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">Tipo <see cref="T:System.Xaml.XamlMember" /> o <see langword="null" />.</param>
      <param name="xamlMember2" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">Tipo <see cref="T:System.Xaml.XamlMember" /> o <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;xamlMember1&quot; /&gt; is the same as the value of &lt;paramref name=&quot;xamlMember2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il valore del parametro <paramref name="xamlMember1" /> è uguale al valore del parametro <paramref name="xamlMember2" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; objects have different values.">Determina se due oggetti <see cref="T:System.Xaml.XamlMember" /> specificati hanno valori diversi.</summary>
      <param name="xamlMember1" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">Tipo <see cref="T:System.Xaml.XamlMember" /> o <see langword="null" />.</param>
      <param name="xamlMember2" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">Tipo <see cref="T:System.Xaml.XamlMember" /> o <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;xamlMember1&quot; /&gt; differs from the value of &lt;paramref name=&quot;xamlMember2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il valore di <paramref name="xamlMember1" /> è diverso dal valore di <paramref name="xamlMember2" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.PreferredXamlNamespace">
      <summary vsli:raw="Gets the single XAML namespace URI that identifies the primary XAML namespace for this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Ottiene il singolo URI dello spazio dei nomi XAML che identifica lo spazio dei nomi XAML primario per l'oggetto <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="The identifier for the primary XAML namespace for this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;, as a string.">Identificatore dello spazio dei nomi XAML primario per l'oggetto <see cref="T:System.Xaml.XamlMember" /> in formato stringa.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.SerializationVisibility">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.DesignerSerializationVisibility&quot; /&gt; value, which indicates how a visual designer should process the member.">Ottiene un valore di <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> che indica come una finestra di progettazione visiva deve elaborare il membro.</summary>
      <returns vsli:raw="A value of the &lt;see cref=&quot;T:System.ComponentModel.DesignerSerializationVisibility&quot; /&gt; enumeration. The default is &lt;see cref=&quot;F:System.ComponentModel.DesignerSerializationVisibility.Visible&quot; /&gt;.">Valore dell'enumerazione <see cref="T:System.ComponentModel.DesignerSerializationVisibility" />. Il valore predefinito è <see cref="F:System.ComponentModel.DesignerSerializationVisibility.Visible" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.TargetType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type where the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; can exist.">Ottiene l'oggetto <see cref="T:System.Xaml.XamlType" /> del tipo in cui può essere presente l'oggetto <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="The type where the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; can exist.">Tipo in cui può essere presente l'oggetto <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.ToString">
      <summary vsli:raw="Returns a string representation of this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Restituisce una rappresentazione in forma di stringa di <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="A string representation of this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Rappresentazione in forma di stringa di <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.Type">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type that is used by the member.">Ottiene l'oggetto <see cref="T:System.Xaml.XamlType" /> del tipo utilizzato dal membro.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type that is used by the member.">Oggetto <see cref="T:System.Xaml.XamlType" /> del tipo utilizzato dal membro.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.TypeConverter">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; object, which can be used for type conversion construction of XAML declared objects.">Ottiene un oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> che può essere utilizzato per la costruzione della conversione di tipi degli oggetti XAML dichiarati.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; value, with a &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; constraint on the generic.">Valore di <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con un vincolo <see cref="T:System.ComponentModel.TypeConverter" /> per il tipo generico.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.UnderlyingMember">
      <summary vsli:raw="Gets the CLR type system &lt;see cref=&quot;T:System.Reflection.MemberInfo&quot; /&gt; that is available for a member that is constructed by &lt;see cref=&quot;T:System.Reflection.PropertyInfo&quot; /&gt;, &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt;, or &lt;see cref=&quot;T:System.Reflection.EventInfo&quot; /&gt;.">Ottiene l'oggetto <see cref="T:System.Reflection.MemberInfo" /> del sistema del tipo CRL che è disponibile per un membro costruito da <see cref="T:System.Reflection.PropertyInfo" />, <see cref="T:System.Reflection.MethodInfo" /> o <see cref="T:System.Reflection.EventInfo" />.</summary>
      <returns vsli:raw="CLR type system &lt;see cref=&quot;T:System.Reflection.MemberInfo&quot; /&gt; information, as cast from the initial constructor parameters. A &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; that is constructed with the &lt;see cref=&quot;M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)&quot; /&gt; signature returns &lt;see langword=&quot;null&quot; /&gt;.">Informazioni sull'oggetto <see cref="T:System.Reflection.MemberInfo" /> del sistema del tipo CRL, come cast dai parametri del costruttore iniziali. Un oggetto <see cref="T:System.Xaml.XamlMember" /> che viene costruito con la firma di <see cref="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)" /> restituisce <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.ValueSerializer">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; object, which is used for value serialization of XAML declared objects.">Ottiene un oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> che viene utilizzato per la serializzazione di valori degli oggetti XAML dichiarati.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; constraint on the generic.">Oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con vincolo <see cref="T:System.Windows.Markup.ValueSerializer" /> per il tipo generico.</returns>
    </member>
    <member name="T:System.Xaml.XamlNodeList">
      <summary vsli:raw="Provides a list of XAML nodes, which can be used for scenarios such as writing XAML nodes in a deferred manner.">Fornisce un elenco di nodi XAML che possono essere utilizzati per scenari quali la scrittura di nodi XAML in modalità posticipata.</summary>
    </member>
    <member name="M:System.Xaml.XamlNodeList.#ctor(System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlNodeList&quot; /&gt; class, using a provided schema context.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlNodeList" /> utilizzando un contesto dello schema fornito.</summary>
      <param name="schemaContext" vsli:raw="The schema context to use for node operations.">Contesto dello schema da utilizzare per le operazioni del nodo.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="schemaContext" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlNodeList.#ctor(System.Xaml.XamlSchemaContext,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlNodeList&quot; /&gt; class, using a provided schema context and list size.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlNodeList" /> utilizzando un contesto dello schema fornito e le dimensioni dell'elenco.</summary>
      <param name="schemaContext" vsli:raw="The schema context to use for node operations.">Contesto dello schema da utilizzare per le operazioni del nodo.</param>
      <param name="size" vsli:raw="The intended item count of the list.">Numero di elementi dell'elenco previsto.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="schemaContext" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlNodeList.Clear">
      <summary vsli:raw="Clears the items in this list.">Cancella gli elementi contenuti nell'elenco.</summary>
    </member>
    <member name="P:System.Xaml.XamlNodeList.Count">
      <summary vsli:raw="Gets the number of nodes in this &lt;see cref=&quot;T:System.Xaml.XamlNodeList&quot; /&gt;.">Ottiene il numero di nodi nell'oggetto <see cref="T:System.Xaml.XamlNodeList" />.</summary>
      <returns vsli:raw="The number of nodes in this &lt;see cref=&quot;T:System.Xaml.XamlNodeList&quot; /&gt;.">Numero di nodi nell'oggetto <see cref="T:System.Xaml.XamlNodeList" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlNodeList.GetReader">
      <summary vsli:raw="Returns a XAML reader implementation delegate.">Restituisce un delegato di implementazione del reader XAML.</summary>
      <returns vsli:raw="A XAML reader implementation delegate.">Delegato di implementazione del reader XAML.</returns>
      <exception cref="T:System.Xaml.XamlException" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlNodeList&quot; /&gt; is still in Write mode.  &#xA;  &#xA; -or-  &#xA;  &#xA; The writer that is used for the node list has no schema context.">
        <see cref="T:System.Xaml.XamlNodeList" /> è ancora in modalità di scrittura.  
-oppure- 
Il writer che viene utilizzato per l'elenco del nodo non dispone di contesto dello schema.</exception>
    </member>
    <member name="P:System.Xaml.XamlNodeList.Writer">
      <summary vsli:raw="Gets the associated XAML writer.">Ottiene il writer XAML associato.</summary>
      <returns vsli:raw="The associated XAML writer.">Writer XAML associato.</returns>
    </member>
    <member name="T:System.Xaml.XamlNodeQueue">
      <summary vsli:raw="Provides a buffer for writing nodes and reading them again.">Fornisce un buffer per la scrittura dei nodi e la relativa lettura.</summary>
    </member>
    <member name="M:System.Xaml.XamlNodeQueue.#ctor(System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlNodeQueue&quot; /&gt; class using a provided XAML schema context.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlNodeQueue" /> utilizzando un contesto dello schema XAML fornito.</summary>
      <param name="schemaContext" vsli:raw="The schema context to use for node operations.">Contesto dello schema da utilizzare per le operazioni del nodo.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlSchemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xamlSchemaContext" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlNodeQueue.Count">
      <summary vsli:raw="Gets the number of nodes in the &lt;see cref=&quot;T:System.Xaml.XamlNodeQueue&quot; /&gt;.">Ottiene il numero di nodi nell'oggetto <see cref="T:System.Xaml.XamlNodeQueue" />.</summary>
      <returns vsli:raw="The number of nodes in the &lt;see cref=&quot;T:System.Xaml.XamlNodeQueue&quot; /&gt;.">Numero di nodi nell'oggetto <see cref="T:System.Xaml.XamlNodeQueue" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlNodeQueue.IsEmpty">
      <summary vsli:raw="Gets a value that determines whether this &lt;see cref=&quot;T:System.Xaml.XamlNodeQueue&quot; /&gt; does not contain nodes.">Ottiene un valore che determina se l'oggetto <see cref="T:System.Xaml.XamlNodeQueue" /> non contiene nodi.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlNodeQueue&quot; /&gt; does not contain nodes; &lt;see langword=&quot;false&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlNodeQueue&quot; /&gt; contains nodes.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlNodeQueue" /> non contiene nodi; <see langword="false" /> se l'oggetto <see cref="T:System.Xaml.XamlNodeQueue" /> contiene nodi.</returns>
    </member>
    <member name="P:System.Xaml.XamlNodeQueue.Reader">
      <summary vsli:raw="Gets a XAML reader implementation delegate.">Ottiene un delegato di implementazione del reader XAML.</summary>
      <returns vsli:raw="A XAML reader implementation delegate.">Delegato di implementazione del reader XAML.</returns>
      <exception cref="T:System.Xaml.XamlException" vsli:raw="The XAML writer that is used for the node list has no valid XAML schema context.">Il writer XAML utilizzato per l'elenco del nodo non dispone di un contesto dello schema XAML valido.</exception>
    </member>
    <member name="P:System.Xaml.XamlNodeQueue.Writer">
      <summary vsli:raw="Gets the associated XAML writer.">Ottiene il writer XAML associato.</summary>
      <returns vsli:raw="The associated XAML writer.">Writer XAML associato.</returns>
    </member>
    <member name="T:System.Xaml.XamlNodeType">
      <summary vsli:raw="Describes the type of the node that is currently being processed by a XAML reader.">Descrive il tipo del nodo elaborato attualmente da un reader XAML.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.EndMember">
      <summary vsli:raw="The reader is at the end of a member node.">Il reader si trova alla fine di un nodo membro.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.EndObject">
      <summary vsli:raw="The reader is at the end of an object node.">Il reader si trova alla fine di un nodo oggetto.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.GetObject">
      <summary vsli:raw="The reader is within an object node and writing a default or implicit value, instead of being a specified object value.">Il reader si trova all'interno di un nodo oggetto e scrive un valore predefinito o implicito, anziché essere un valore di specificato.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.NamespaceDeclaration">
      <summary vsli:raw="The reader is within an XML namespace declaration.">Il reader si trova all'interno di una dichiarazione dello spazio dei nomi XML.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.None">
      <summary vsli:raw="The reader is not positioned at a true node (for example, the reader might be at end-of-file).">Il reader non si trova in un nodo effettivo (ad esempio, il reader potrebbe trovarsi alla fine di un file).</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.StartMember">
      <summary vsli:raw="The reader is at the start of a member node.">Il reader si trova all'inizio di un nodo membro.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.StartObject">
      <summary vsli:raw="The reader is at the start of an object node.">Il reader si trova all'inizio di un nodo oggetto.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.Value">
      <summary vsli:raw="The reader is within a node and processing a value.">Il reader si trova all'interno di un nodo ed elabora un valore.</summary>
    </member>
    <member name="T:System.Xaml.XamlObjectEventArgs">
      <summary vsli:raw="Provides data for callbacks that can be inserted in the sequence for object initialization and property setting. This influences the object graph that is produced by &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt;.">Fornisce i dati per i callback che possono essere inseriti nella sequenza per l'inizializzazione dell'oggetto e l'impostazione della proprietà. Influisce sull'oggetto grafico prodotto da <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectEventArgs.#ctor(System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectEventArgs&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlObjectEventArgs" />.</summary>
      <param name="instance" vsli:raw="The object instance that is relevant to the event data.">Istanza dell'oggetto relativa ai dati dell'evento.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlObjectEventArgs.ElementLineNumber">
      <summary vsli:raw="Gets or sets the line number of the relevant object instance.">Ottiene o imposta il numero di riga dell'istanza dell'oggetto pertinente.</summary>
      <returns vsli:raw="The line number of the element.">Numero di riga dell'elemento.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectEventArgs.ElementLinePosition">
      <summary vsli:raw="Gets or sets the position in the line of the relevant object instance.">Ottiene o imposta la posizione nella riga dell'istanza dell'oggetto pertinente.</summary>
      <returns vsli:raw="The position in the line of the element.">Posizione nella riga dell'elemento.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectEventArgs.Instance">
      <summary vsli:raw="Gets the object instance that is relevant to the event data.">Ottiene l'istanza dell'oggetto relativa ai dati dell'evento.</summary>
      <returns vsli:raw="The object instance that is relevant to the event data.">Istanza dell'oggetto relativa ai dati dell'evento.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectEventArgs.SourceBamlUri">
      <summary vsli:raw="Gets or sets the BAML URI of the relevant object instance.">Ottiene o imposta l'URI BAML dell'istanza di oggetto pertinente.</summary>
      <returns vsli:raw="The BAML URI of the relevant object instance.">URI BAML dell'istanza di oggetto pertinente.</returns>
    </member>
    <member name="T:System.Xaml.XamlObjectReader">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; implementation that reads object graphs and generates a XAML node stream.">Fornisce un'implementazione di <see cref="T:System.Xaml.XamlReader" /> che legge gli oggetti grafici e genera un flusso del nodo XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectReader.#ctor(System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReader&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlObjectReader" />.</summary>
      <param name="instance" vsli:raw="The root of the object tree / object graph to read.">Radice della struttura ad albero di oggetti / oggetto grafico da leggere.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectReader.#ctor(System.Object,System.Xaml.XamlObjectReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReader&quot; /&gt; class with the specified reader settings.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlObjectReader" /> con le impostazioni del reader specificate.</summary>
      <param name="instance" vsli:raw="The root of the object tree to read.">Radice della struttura ad albero di oggetti da leggere.</param>
      <param name="settings" vsli:raw="A settings object.">Oggetto impostazioni.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectReader.#ctor(System.Object,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReader&quot; /&gt; class with the specified schema context.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlObjectReader" /> con il contesto dello schema specificato.</summary>
      <param name="instance" vsli:raw="The root of the object tree to read.">Radice della struttura ad albero di oggetti da leggere.</param>
      <param name="schemaContext" vsli:raw="The schema context for the reader to use.">Contesto dello schema per il reader da utilizzare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="schemaContext" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectReader.#ctor(System.Object,System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReader&quot; /&gt; class with the specified schema context and reader settings.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlObjectReader" /> con il contesto dello schema e le impostazioni del reader specificati.</summary>
      <param name="instance" vsli:raw="The root of the object tree to read.">Radice della struttura ad albero di oggetti da leggere.</param>
      <param name="schemaContext" vsli:raw="The schema context for the reader to use.">Contesto dello schema per il reader da utilizzare.</param>
      <param name="settings" vsli:raw="A settings object.">Oggetto impostazioni.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="schemaContext" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.Instance">
      <summary vsli:raw="Gets the object instance that is available at the current reader position.">Ottiene l'istanza dell'oggetto disponibile nella posizione corrente del reader.</summary>
      <returns vsli:raw="The object instance at the current reader position; or &lt;see langword=&quot;null&quot; /&gt; if the reader position is not on an object.">Istanza dell'oggetto nella posizione corrente del reader; oppure <see langword="null" /> se la posizione del reader non è in un oggetto.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.IsEof">
      <summary vsli:raw="Gets a value that reports whether the reader position is at the end of the file.">Ottiene un valore che segnala se la posizione del reader è alla fine del file.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader position is at the end of the file; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se la posizione del reader è alla fine del file; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.Member">
      <summary vsli:raw="Gets the current &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; at the reader position, if the reader position is on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.StartMember&quot; /&gt;.">Ottiene l'oggetto <see cref="T:System.Xaml.XamlMember" /> corrente nella posizione del reader, se la posizione del reader è in un oggetto <see cref="F:System.Xaml.XamlNodeType.StartMember" />.</summary>
      <returns vsli:raw="The current member; or &lt;see langword=&quot;null&quot; /&gt; if the reader position is not on a member.">Membro corrente; oppure <see langword="null" /> se la posizione del reader non è in un membro.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.Namespace">
      <summary vsli:raw="Gets the XAML namespace declaration from the current reader position.">Ottiene la dichiarazione dello spazio dei nomi XAML dalla posizione corrente del reader.</summary>
      <returns vsli:raw="The XAML namespace declaration if the reader is positioned on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.NamespaceDeclaration&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Dichiarazione dello spazio dei nomi XAML se il reader è posizionato in un oggetto <see cref="F:System.Xaml.XamlNodeType.NamespaceDeclaration" />; in caso contrario, <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.NodeType">
      <summary vsli:raw="Gets the type of the current node.">Ottiene il tipo di nodo corrente.</summary>
      <returns vsli:raw="The type of the current node.">Tipo di nodo corrente.</returns>
    </member>
    <member name="M:System.Xaml.XamlObjectReader.Read">
      <summary vsli:raw="Provides the next XAML node from the source object graph, if a node is available.">Fornisce il nodo XAML successivo dall'oggetto grafico di origine, se è disponibile un nodo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a node is available; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se è disponibile un nodo; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.SchemaContext">
      <summary vsli:raw="Gets an object that provides schema information for the information set.">Ottiene un oggetto che fornisce le informazioni sullo schema per il set di informazioni.</summary>
      <returns vsli:raw="An object that provides schema information for the information set.">Oggetto che fornisce le informazioni sullo schema per il set di informazioni.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.Type">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the object at the current reader position.">Ottiene l'oggetto <see cref="T:System.Xaml.XamlType" /> dell'oggetto nella posizione corrente del reader.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the object at the current reader position; or &lt;see langword=&quot;null&quot; /&gt; if the position is not on an object.">Oggetto <see cref="T:System.Xaml.XamlType" /> dell'oggetto nella posizione corrente del reader; oppure <see langword="null" /> se la posizione non è in un oggetto.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.Value">
      <summary vsli:raw="Gets the value of the node at the current reader position.">Ottiene il valore del nodo nella posizione corrente del reader.</summary>
      <returns vsli:raw="The value of the current node; or &lt;see langword=&quot;null&quot; /&gt;, if the reader position is not on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.Value&quot; /&gt; node type.">Valore del nodo corrente; oppure <see langword="null" /> se la posizione del reader non è in un tipo di nodo <see cref="F:System.Xaml.XamlNodeType.Value" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlObjectReaderException">
      <summary vsli:raw="The exception that is thrown by several &lt;see cref=&quot;T:System.Xaml.XamlObjectReader&quot; /&gt; internal helper APIs.">Eccezione generata da diverse API di supporto interne di <see cref="T:System.Xaml.XamlObjectReader" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectReaderException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReaderException&quot; /&gt; class with a system-supplied message that describes the error.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlObjectReaderException" /> con un messaggio fornito dal sistema in cui viene descritto l'errore.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectReaderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReaderException&quot; /&gt; class with serialized data.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlObjectReaderException" /> con dati serializzati.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Oggetto che contiene i dati oggetto serializzati.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Informazioni contestuali sull'origine o sulla destinazione.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectReaderException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReaderException&quot; /&gt; class with a specified message that describes the error.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlObjectReaderException" /> con un messaggio specificato in cui viene descritto l'errore.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Messaggio in cui viene descritta l'eccezione. Il chiamante del costruttore deve garantire che la stringa sia stata localizzata in base alle impostazioni cultura correnti del sistema.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectReaderException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReaderException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlObjectReaderException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Messaggio in cui viene descritta l'eccezione. Il chiamante del costruttore deve garantire che la stringa sia stata localizzata in base alle impostazioni cultura correnti del sistema.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Eccezione che ha determinato l'eccezione corrente. Se il parametro <paramref name="innerException" /> non è <see langword="null" />, l'eccezione corrente viene generata in un blocco <see langword="catch" /> in cui viene gestita l'eccezione interna.</param>
    </member>
    <member name="T:System.Xaml.XamlObjectReaderSettings">
      <summary vsli:raw="Specifies processing rules or option settings for a &lt;see cref=&quot;T:System.Xaml.XamlObjectReader&quot; /&gt;.">Specifica le regole di elaborazione o le impostazioni delle opzioni per un oggetto <see cref="T:System.Xaml.XamlObjectReader" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectReaderSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReaderSettings&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlObjectReaderSettings" />.</summary>
    </member>
    <member name="P:System.Xaml.XamlObjectReaderSettings.RequireExplicitContentVisibility">
      <summary vsli:raw="Gets or sets a value that determines whether writers that use the associated &lt;see cref=&quot;T:System.Xaml.XamlObjectReader&quot; /&gt; for context should use designer settings for writing content explicitly.">Ottiene o imposta un valore che determina se i writer che utilizzano l'oggetto <see cref="T:System.Xaml.XamlObjectReader" /> associato per il contesto devono utilizzare le impostazioni della finestra di progettazione per la scrittura esplicita del contenuto.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that writers that use this context should use designer settings for writing any output content in cases where &lt;see cref=&quot;P:System.Xaml.XamlMember.IsWritePublic&quot; /&gt; reports &lt;see langword=&quot;false&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; if designer settings should be ignored.">
        <see langword="true" /> per specificare che i writer che utilizzano questo contesto devono utilizzare le impostazioni della finestra di progettazione per scrivere qualsiasi contenuto di output nei casi in cui <see cref="P:System.Xaml.XamlMember.IsWritePublic" /> indica <see langword="false" />; <see langword="false" /> se le impostazioni della finestra di progettazione devono essere ignorate.</returns>
    </member>
    <member name="T:System.Xaml.XamlObjectWriter">
      <summary vsli:raw="Creates an object graph from a source XAML node stream.">Crea un oggetto grafico da un flusso del nodo XAML di origine.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; class using  the XAML schema context that is used by a &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt;.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlObjectWriter" /> usando il contesto dello schema XAML usato da un oggetto <see cref="T:System.Xaml.XamlReader" />.</summary>
      <param name="schemaContext" vsli:raw="A XAML schema context that is shared with the XAML reader that provides nodes for writing.">Contesto dello schema XAML condiviso con il reader XAML che fornisce i nodi per la scrittura.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="schemaContext" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectWriterSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; class using the context that is used by a &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; and its settings.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlObjectWriter" /> utilizzando il contesto che è utilizzato da un oggetto <see cref="T:System.Xaml.XamlReader" /> e le relative impostazioni.</summary>
      <param name="schemaContext" vsli:raw="A XAML schema context that is shared with the XAML reader that provides nodes for writing.">Contesto dello schema XAML condiviso con il reader XAML che fornisce i nodi per la scrittura.</param>
      <param name="settings" vsli:raw="A settings object that specifies certain options for &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; behavior and output.">Oggetto impostazioni che specifica alcune opzioni per il comportamento di <see cref="T:System.Xaml.XamlObjectWriter" /> e per l'output.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="schemaContext" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.Clear">
      <summary vsli:raw="Resets all possible frames and clears the object graph.">Reimposta tutti i possibili frame e cancella l'oggetto grafico.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt;, and optionally, releases the managed resources.">Rilascia le risorse non gestite utilizzate dall'oggetto <see cref="T:System.Xaml.XamlObjectWriter" /> e facoltativamente rilascia le risorse gestite.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release the managed resources; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per rilasciare le risorse gestite; in caso contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.OnAfterBeginInit(System.Object)">
      <summary vsli:raw="Invokes any &lt;see cref=&quot;P:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler&quot; /&gt; method that is associated with &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterSettings&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt;.">Richiama qualsiasi metodo <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler" /> associato all'oggetto <see cref="T:System.Xaml.XamlObjectWriterSettings" /> per <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
      <param name="value" vsli:raw="The object to report on. The object is packaged into &lt;see cref=&quot;T:System.Xaml.XamlObjectEventArgs&quot; /&gt; when the handler is invoked.">Oggetto da segnalare. L'oggetto inserito nell'oggetto <see cref="T:System.Xaml.XamlObjectEventArgs" /> quando viene richiamato il gestore.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.OnAfterEndInit(System.Object)">
      <summary vsli:raw="Invokes any &lt;see cref=&quot;P:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler&quot; /&gt; method that is associated with &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterSettings&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt;.">Richiama qualsiasi metodo <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler" /> associato all'oggetto <see cref="T:System.Xaml.XamlObjectWriterSettings" /> per <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
      <param name="value" vsli:raw="The object to report on. The value  is packaged into &lt;see cref=&quot;T:System.Xaml.XamlObjectEventArgs&quot; /&gt; when the handler is invoked.">Oggetto da segnalare. Il valore viene inserito nell'oggetto <see cref="T:System.Xaml.XamlObjectEventArgs" /> quando si richiama il gestore.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.OnAfterProperties(System.Object)">
      <summary vsli:raw="Invokes any &lt;see cref=&quot;P:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler&quot; /&gt; referenced method that is associated with &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterSettings&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt;.">Richiama qualsiasi metodo <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler" /> a cui viene fatto riferimento che è associato all'oggetto <see cref="T:System.Xaml.XamlObjectWriterSettings" /> per <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
      <param name="value" vsli:raw="The object to report on. This is packaged into &lt;see cref=&quot;T:System.Xaml.XamlObjectEventArgs&quot; /&gt; when the handler is invoked.">Oggetto da segnalare. Viene inserito nell'oggetto <see cref="T:System.Xaml.XamlObjectEventArgs" /> quando viene richiamato il gestore.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.OnBeforeProperties(System.Object)">
      <summary vsli:raw="Invokes any &lt;see cref=&quot;P:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler&quot; /&gt; referenced method that is associated with &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterSettings&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt;.">Richiama qualsiasi metodo <see cref="P:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler" /> a cui viene fatto riferimento che è associato all'oggetto <see cref="T:System.Xaml.XamlObjectWriterSettings" /> per <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
      <param name="value" vsli:raw="The value to pass through &lt;see cref=&quot;T:System.Xaml.XamlObjectEventArgs&quot; /&gt; when the handler is invoked.">Valore da passare all'oggetto <see cref="T:System.Xaml.XamlObjectEventArgs" /> quando viene richiamato il gestore.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.OnSetValue(System.Object,System.Xaml.XamlMember,System.Object)">
      <summary vsli:raw="Invokes any &lt;see cref=&quot;P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler&quot; /&gt; referenced method that is associated with &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterSettings&quot; /&gt; for this writer, as long as &lt;paramref name=&quot;handled&quot; /&gt; in &lt;see cref=&quot;T:System.Windows.Markup.XamlSetValueEventArgs&quot; /&gt; event data is not &lt;see langword=&quot;true&quot; /&gt;.">Richiama qualsiasi metodo <see cref="P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler" /> a cui viene fatto riferimento che è associato all'oggetto <see cref="T:System.Xaml.XamlObjectWriterSettings" /> per questo writer, a condizione che <paramref name="handled" /> nei dati dell'evento <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" /> non sia <see langword="true" />.</summary>
      <param name="eventSender" vsli:raw="The object to report as the source to the handler.">Oggetto da segnalare come origine al gestore.</param>
      <param name="member" vsli:raw="The name of the property to set, which is passed to the handler as part of &lt;see cref=&quot;T:System.Windows.Markup.XamlSetValueEventArgs&quot; /&gt;.">Nome della proprietà da impostare, che viene passata al gestore come parte di <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />.</param>
      <param name="value" vsli:raw="The value to provide for the property that is named by &lt;paramref name=&quot;property&quot; /&gt;. The value is passed to the handler as part of &lt;see cref=&quot;T:System.Windows.Markup.XamlSetValueEventArgs&quot; /&gt;.">Valore da fornire per la proprietà che viene denominata da <paramref name="property" />. Il valore viene passato al gestore come parte di <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />.</param>
      <returns vsli:raw="A Boolean value that is set by any associated handler; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Valore booleano impostato da un gestore associato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriter.Result">
      <summary vsli:raw="Gets the last object that was written. Typically only called when the node stream is at its end and the object graph is complete.">Ottiene l'ultimo oggetto scritto. In genere viene chiamato solo quando il flusso del nodo è alla fine e l'oggetto grafico è stato completato.</summary>
      <returns vsli:raw="The last object written, or &lt;see langword=&quot;null&quot; /&gt;.">Ultimo oggetto scritto o <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriter.RootNameScope">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.INameScope&quot; /&gt; service that maintains the XAML namescope for the absolute node root of the XAML object writer.">Ottiene il servizio <see cref="T:System.Windows.Markup.INameScope" /> che gestisce il NameScope XAML per la radice del nodo corrente del writer di oggetti XAML.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Markup.INameScope&quot; /&gt; service that maintains the XAML namescope for the current root of the object writer.">Il servizio <see cref="T:System.Windows.Markup.INameScope" /> che gestisce il namescope XAML per la radice corrente del writer di oggetti.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriter.SchemaContext">
      <summary vsli:raw="Gets the active XAML schema context.">Ottiene il contesto dello schema XAML attivo.</summary>
      <returns vsli:raw="The XAML schema context.">Contesto dello schema XAML.</returns>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.SetLineInfo(System.Int32,System.Int32)">
      <summary vsli:raw="Implements &lt;see cref=&quot;M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)&quot; /&gt; and provides line information for exceptions.">Implementa <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" /> e fornisce le informazioni sulla riga per le eccezioni.</summary>
      <param name="lineNumber" vsli:raw="The line number from the reader.">Numero di riga del reader.</param>
      <param name="linePosition" vsli:raw="The line position from the reader.">Posizione di riga del reader.</param>
    </member>
    <member name="P:System.Xaml.XamlObjectWriter.ShouldProvideLineInfo">
      <summary vsli:raw="Gets a value that reports whether a line information service should provide values and therefore, should also call the &lt;see cref=&quot;M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)&quot; /&gt; method when it is relevant.">Ottiene un valore che segnala se un servizio di informazioni sulla riga deve fornire i valori e di conseguenza chiamare anche il metodo <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" />, quando necessario.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if line information is used by the writer; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se le informazioni sulla riga vengono utilizzate dal writer; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteEndMember">
      <summary vsli:raw="Closes the current member scope, and may write the value of the member scope while it closes. The new scope becomes the parent object scope of the member.">Chiude l'ambito del membro corrente e può scrivere il valore dell'ambito del membro mentre viene chiuso. Il nuovo ambito diventa l'ambito dell'oggetto padre del membro.</summary>
      <exception cref="T:System.Xaml.XamlObjectWriterException" vsli:raw="Failed to create member value from a value node that is encountered between this call and a previous &lt;see langword=&quot;StartMember&quot; /&gt;.">Impossibile creare valore del membro da un nodo di valori incontrato tra questa chiamata e un precedente <see langword="StartMember" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteEndObject">
      <summary vsli:raw="Closes the current object scope in the writer. The new object scope becomes the parent member scope.">Chiude l'ambito dell'oggetto corrente nel writer. Il nuovo ambito dell'oggetto diventa l'ambito del membro padre.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteGetObject">
      <summary vsli:raw="Writes the conceptual &lt;see langword=&quot;StartObject&quot; /&gt; into the object graph when the specified object is a default or implicit value of the parent property. The implicit value comes from information that is obtained from the XAML schema context and backing type information, instead of being specified as an object value in the input XAML node set.">Scrive l'oggetto <see langword="StartObject" /> concettuale nell'oggetto grafico quando l'oggetto specificato è un valore predefinito o implicito della proprietà padre. Il valore implicito viene da informazioni ottenute dal contesto dello schema XAML e da informazioni sul tipo di supporto, anziché essere specificato come valore dell'oggetto nel set di nodi XAML di input.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
      <summary vsli:raw="Defines a namespace declaration that applies to the next object scope or member scope.">Definisce una dichiarazione dello spazio dei nomi che si applica all'ambito dell'oggetto o all'ambito del membro successivo.</summary>
      <param name="namespaceDeclaration" vsli:raw="The namespace declaration to write.">Dichiarazione dello spazio dei nomi da scrivere.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;namespaceDeclaration&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">L'elemento <paramref name="namespaceDeclaration" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="A component of &lt;paramref name=&quot;namespaceDeclaration&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Un componente di <paramref name="namespaceDeclaration" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Xaml.XamlObjectReaderException" vsli:raw="Tried to write a XAML namespace node in an invalid scope.">Si è tentato di scrivere un nodo dello spazio dei nomi XAML in un ambito non valido.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteStartMember(System.Xaml.XamlMember)">
      <summary vsli:raw="Writes a new member node into the current object scope, and the scope becomes a new member scope.">Scrive un nuovo nodo membro nell'ambito dell'oggetto corrente e l'ambito diventa un nuovo ambito del membro.</summary>
      <param name="property" vsli:raw="The XAML property to write. Typically you obtain this value from a XAML reader through the XAML node stream intermediate.">Proprietà XAML da scrivere. In genere si ottiene questo valore da un reader XAML tramite il flusso del nodo XAML intermedio.</param>
      <exception cref="T:System.Xaml.XamlObjectWriterException" vsli:raw="&lt;paramref name=&quot;property&quot; /&gt; has &lt;see cref=&quot;P:System.Xaml.XamlMember.IsUnknown&quot; /&gt; set to &lt;see langword=&quot;true&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Xaml.XamlLanguage.UnknownContent&quot; /&gt; passed, which indicates that the XAML node stream contained content for an object that does not support content.  &#xA;  &#xA; -or-  &#xA;  &#xA; Attempted to write a start member in an invalid scope.">
        <see cref="P:System.Xaml.XamlMember.IsUnknown" /> di <paramref name="property" /> è impostato su <see langword="true" />.  
-oppure- 
 <see cref="P:System.Xaml.XamlLanguage.UnknownContent" /> passato che indica che il flusso del nodo XAML ha contenuto il contenuto per un oggetto che non supporta contenuto.  
In alternativa 
Si è tentato di scrivere un membro iniziale in un ambito non valido.</exception>
      <exception cref="T:System.Xaml.XamlDuplicateMemberException" vsli:raw="&lt;paramref name=&quot;property&quot; /&gt; specifies a property that is already explicitly set in the parent object scope.">
        <paramref name="property" /> specifica una proprietà già impostata in modo esplicito nell'ambito dell'oggetto padre.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;property&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="property" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteStartObject(System.Xaml.XamlType)">
      <summary vsli:raw="Writes an object node into the current scope, and sets the scope to a new object scope.">Scrive un nodo oggetto nell'ambito corrente e imposta l'ambito su un nuovo ambito dell'oggetto.</summary>
      <param name="xamlType" vsli:raw="The type to write. Typically you obtain this value from a XAML reader.">Tipo da scrivere. In genere si ottiene questo valore da un reader XAML.</param>
      <exception cref="T:System.Xaml.XamlObjectWriterException" vsli:raw="Processing an &lt;see cref=&quot;P:System.Xaml.XamlType.IsUnknown&quot; /&gt; type and cannot create an object.  &#xA;  &#xA; -or-  &#xA;  &#xA; Attempted to write a start object in an invalid scope.">Elaborare un tipo <see cref="P:System.Xaml.XamlType.IsUnknown" /> e non poter creare un oggetto.  
-oppure- 
Si è tentato di scrivere un oggetto iniziale in un ambito non valido.</exception>
      <exception cref="T:System.Xaml.XamlParseException" vsli:raw="Attempted to write a root object when the root object was already provided in the settings.">Si è tentato di scrivere un oggetto radice quando l'oggetto radice era già fornito nelle impostazioni.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xamlType" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteValue(System.Object)">
      <summary vsli:raw="Writes a value to the current member scope. If the current scope is inside a collection, dictionary, or array object, the value should be added to the collection, dictionary, or array.">Scrive un valore nell'ambito del membro corrente. Se l'ambito corrente è all'interno di un oggetto insieme, dizionario o matrice, il valore deve essere aggiunto nell'insieme, nel dizionario o nella matrice.</summary>
      <param name="value" vsli:raw="The value to write.">Valore da scrivere.</param>
      <exception cref="T:System.Xaml.XamlObjectWriterException" vsli:raw="Attempted to write a value in an invalid scope.">Si è tentato di scrivere un valore in un ambito non valido.</exception>
    </member>
    <member name="T:System.Xaml.XamlObjectWriterException">
      <summary vsli:raw="The exception that is thrown when a XAML writer (such as the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; class) encounters an error while attempting to produce object graphs from a XAML node stream.">Eccezione generata quando un writer XAML, ad esempio la classe <see cref="T:System.Xaml.XamlObjectWriter" />, rileva un errore durante il tentativo di creare oggetti grafici da un flusso del nodo XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterException&quot; /&gt; class with a system-supplied message that describes the error.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlObjectWriterException" /> con un messaggio fornito dal sistema in cui viene descritto l'errore.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterException&quot; /&gt; class with serialized data.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlObjectWriterException" /> con dati serializzati.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Oggetto che contiene i dati oggetto serializzati.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Informazioni contestuali sull'origine o sulla destinazione.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterException&quot; /&gt; class with a specified message that describes the error.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlObjectWriterException" /> con un messaggio specificato in cui viene descritto l'errore.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Messaggio in cui viene descritta l'eccezione. Il chiamante del costruttore deve garantire che la stringa sia stata localizzata in base alle impostazioni cultura correnti del sistema.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlObjectWriterException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Messaggio in cui viene descritta l'eccezione. Il chiamante del costruttore deve garantire che la stringa sia stata localizzata in base alle impostazioni cultura correnti del sistema.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Eccezione che ha determinato l'eccezione corrente. Se il parametro <paramref name="innerException" /> non è <see langword="null" />, l'eccezione corrente viene generata in un blocco <see langword="catch" /> in cui viene gestita l'eccezione interna.</param>
    </member>
    <member name="T:System.Xaml.XamlObjectWriterSettings">
      <summary vsli:raw="Provides specific XAML writer settings for &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt;.">Fornisce impostazioni specifiche del writer XAML per l'oggetto <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterSettings&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlObjectWriterSettings" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterSettings.#ctor(System.Xaml.XamlObjectWriterSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterSettings&quot; /&gt; class that is based on the copy of an existing instance.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlObjectWriterSettings" /> in base alla copia di un'istanza esistente.</summary>
      <param name="settings" vsli:raw="The settings instance to copy.">Istanza delle impostazioni da copiare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;settings&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="settings" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.AccessLevel">
      <summary vsli:raw="Gets or sets &lt;see cref=&quot;T:System.Xaml.Permissions.XamlAccessLevel&quot; /&gt; permissions that the XAML writer observes.">Ottiene o imposta le autorizzazioni <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> rispettate dal writer XAML.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Permissions.XamlAccessLevel&quot; /&gt; permissions.">Autorizzazioni <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler">
      <summary vsli:raw="Gets or sets a reference to a callback that is invoked by the XAML writer at the &lt;see cref=&quot;M:System.ComponentModel.ISupportInitialize.BeginInit&quot; /&gt; phase of the object lifetime for each created object.">Ottiene o imposta un riferimento a un callback richiamato dal writer XAML nella fase <see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" /> per la durata di ogni oggetto creato.</summary>
      <returns vsli:raw="A callback that is invoked by the XAML writer at the &lt;see cref=&quot;M:System.ComponentModel.ISupportInitialize.BeginInit&quot; /&gt; phase of object lifetime.">Callback richiamato dal writer XAML nella fase <see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" /> per la durata dell'oggetto.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler">
      <summary vsli:raw="Gets or sets a reference to a callback that is invoked by the XAML writer at the &lt;see cref=&quot;M:System.ComponentModel.ISupportInitialize.EndInit&quot; /&gt; phase of the object lifetime for each created object.">Ottiene o imposta un riferimento a un callback richiamato dal writer XAML nella fase <see cref="M:System.ComponentModel.ISupportInitialize.EndInit" /> per la durata di ogni oggetto creato.</summary>
      <returns vsli:raw="A callback that is invoked by the XAML writer at the &lt;see cref=&quot;M:System.ComponentModel.ISupportInitialize.EndInit&quot; /&gt; phase of object lifetime.">Callback richiamato dal writer XAML nella fase <see cref="M:System.ComponentModel.ISupportInitialize.EndInit" /> per la durata dell'oggetto.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler">
      <summary vsli:raw="Gets or sets a reference to a callback that is invoked by the XAML writer at the post-member-write phase of the object lifetime for each created object.">Ottiene o imposta un riferimento a un callback richiamato dal writer XAML nella fase di post-scrittura del membro per la durata di ogni oggetto creato.</summary>
      <returns vsli:raw="A callback that is invoked by the XAML writer at the post-member-write phase of object lifetime.">Callback richiamato dal writer XAML nella fase di post-scrittura del membro per la durata dell'oggetto.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler">
      <summary vsli:raw="Gets or sets a reference to a callback that is invoked by the XAML writer at the pre-member-write phase of the object lifetime for each created object.">Ottiene o imposta un riferimento a un callback richiamato dal writer XAML nella fase di pre-scrittura del membro per la durata di ogni oggetto creato.</summary>
      <returns vsli:raw="A callback that is invoked by the XAML writer at the pre-member-write phase of object lifetime.">Callback richiamato dal writer XAML nella fase di pre-scrittura del membro per la durata dell'oggetto.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope">
      <summary vsli:raw="Gets or sets the XAML namescope to use for registering names from the XAML writer if &lt;see cref=&quot;P:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;.">Ottiene o imposta il NameScope XAML da utilizzare per la registrazione dei nomi dal writer XAML se <see cref="P:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope" /> è <see langword="true" />.</summary>
      <returns vsli:raw="The XAML namescope to use for registering names. The default is &lt;see langword=&quot;null&quot; /&gt;.">NameScope XAML da utilizzare per la registrazione dei nomi. Il valore predefinito è <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.IgnoreCanConvert">
      <summary vsli:raw="Gets or sets a value that specifies whether the XAML writer should ignore (not call) &lt;see cref=&quot;M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)&quot; /&gt; implementations on a &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; in type-converter situations.">Ottiene o imposta un valore che specifica se il writer XAML deve ignorare (non chiamare) le implementazioni <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" /> in un oggetto <see cref="T:System.ComponentModel.TypeConverter" /> nelle situazioni del convertitore di tipi.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the XAML writer ignores &lt;see cref=&quot;M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)&quot; /&gt; implementations; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il writer XAML ignora le implementazioni <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.PreferUnconvertedDictionaryKeys">
      <summary vsli:raw="Gets or sets a value that determines whether to disable a default &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; feature that runs type conversion on the &lt;paramref name=&quot;K&quot; /&gt; component of a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; before writing the object graph representation.">Ottiene o imposta un valore che determina se disabilitare una funzionalità <see cref="T:System.Xaml.XamlObjectWriter" /> predefinita che esegue la conversione di tipi sul componente <paramref name="K" /> di <see cref="T:System.Collections.Generic.Dictionary`2" /> prima di scrivere la rappresentazione grafica dell'oggetto.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;K&quot; /&gt; type conversion for a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; object should be disabled. &lt;see langword=&quot;false&quot; /&gt; if performing &lt;paramref name=&quot;K&quot; /&gt; type conversion for a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; object applies. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se la conversione di tipi <paramref name="K" /> per un oggetto <see cref="T:System.Collections.Generic.Dictionary`2" /> deve essere disabilitata. <see langword="false" /> se si applica l'esecuzione della conversione di tipi <paramref name="K" /> per un oggetto <see cref="T:System.Collections.Generic.Dictionary`2" />. Il valore predefinito è <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope">
      <summary vsli:raw="Gets or sets a value that determines whether name registration should occur against the specified &lt;see cref=&quot;P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope&quot; /&gt;.">Ottiene o imposta un valore che determina se per la registrazione dei nomi deve essere utilizzato l'oggetto <see cref="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope" /> specificato.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if name registration should occur against the &lt;see cref=&quot;P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; if name registration should occur into the parent XAML namescope. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se la registrazione del nome deve essere eseguita per <see cref="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope" />; <see langword="false" /> se la registrazione del nome deve essere eseguita nel NameScope XAML padre. Il valore predefinito è <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.RootObjectInstance">
      <summary vsli:raw="Gets or sets a preexisting root object for &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; operations.">Ottiene o imposta un oggetto radice preesistente per le operazioni <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
      <returns vsli:raw="A preexisting root object for &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; operations.">Oggetto radice preesistente per le operazioni <see cref="T:System.Xaml.XamlObjectWriter" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.SkipDuplicatePropertyCheck">
      <summary vsli:raw="Gets or sets a value that determines whether the XAML writer omits to check for the code path that checks for duplicate properties.">Ottiene o imposta un valore che determina se il writer XAML non controlla il percorso del codice che verifica la presenza di proprietà duplicate.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the duplicate property check should be omitted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il controllo di proprietà duplicate deve essere omesso; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.SkipProvideValueOnRoot">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; should omit to call &lt;see langword=&quot;ProvideValue&quot; /&gt; on a markup extension, which is relevant when the markup extension represents the root of an object graph.">Ottiene o imposta un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlObjectWriter" /> non deve eseguire la chiamata a <see langword="ProvideValue" /> in un'estensione di markup, che è appropriata quando l'estensione di markup rappresenta la radice di un oggetto grafico.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; should omit to call &lt;see langword=&quot;ProvideValue&quot; /&gt; on a markup extension; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlObjectWriter" /> non deve eseguire la chiamata a <see langword="ProvideValue" /> in un'estensione di markup; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.SourceBamlUri">
      <summary vsli:raw="Used in the &lt;see langword=&quot;BeginInitHandler&quot; /&gt; in place of the actual &lt;see langword=&quot;BaseUri&quot; /&gt;.">Usato in <see langword="BeginInitHandler" /> al posto dell'effettivo <see langword="BaseUri" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Uri&quot; /&gt; to be used in place of the actual &lt;see langword=&quot;BaseUri&quot; /&gt;.">
        <see cref="T:System.Uri" /> da usare al posto dell'effettivo <see langword="BaseUri" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler">
      <summary vsli:raw="Gets or sets the handler to use when the object writer calls into a CLR-implemented &lt;see langword=&quot;SetValue&quot; /&gt; for dependency properties.">Ottiene o imposta il gestore da utilizzare quando il writer di oggetti viene chiamato in un oggetto <see langword="SetValue" /> implementato da CLR per le proprietà di dipendenza.</summary>
      <returns vsli:raw="A handler implementation that handles this case.">Implementazione del gestore che gestisce questo caso.</returns>
    </member>
    <member name="T:System.Xaml.XamlParseException">
      <summary vsli:raw="The exception that is thrown when a XAML reader cannot process elements of the XAML reader source into a XAML node stream.">Eccezione generata quando un reader XAML non può elaborare elementi dell'origine del reader XAML in un flusso del nodo XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlParseException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlParseException&quot; /&gt; class with a system-supplied message that describes the error.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlParseException" /> con un messaggio fornito dal sistema in cui viene descritto l'errore.</summary>
    </member>
    <member name="M:System.Xaml.XamlParseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlParseException&quot; /&gt; class with serialized data.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlParseException" /> con dati serializzati.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Oggetto che contiene i dati oggetto serializzati.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Informazioni contestuali sull'origine o sulla destinazione.</param>
    </member>
    <member name="M:System.Xaml.XamlParseException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlParseException&quot; /&gt; class with a specified message that describes the error.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlParseException" /> con un messaggio specificato in cui viene descritto l'errore.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Messaggio in cui viene descritta l'eccezione. Il chiamante del costruttore deve garantire che la stringa sia stata localizzata in base alle impostazioni cultura correnti del sistema.</param>
    </member>
    <member name="M:System.Xaml.XamlParseException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlParseException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlParseException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Messaggio in cui viene descritta l'eccezione. Il chiamante del costruttore deve garantire che la stringa sia stata localizzata in base alle impostazioni cultura correnti del sistema.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Eccezione che ha determinato l'eccezione corrente. Se il parametro <paramref name="innerException" /> non è <see langword="null" />, l'eccezione corrente viene generata in un blocco <see langword="catch" /> in cui viene gestita l'eccezione interna.</param>
    </member>
    <member name="T:System.Xaml.XamlReader">
      <summary vsli:raw="Provides base definitions for classes that consume XAML input and produce XAML node streams.">Fornisce le definizioni di base per le classi che utilizzano l'input XAML e producono flussi del nodo XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlReader.#ctor">
      <summary vsli:raw="Initializes the &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; class.">Inizializza la classe <see cref="T:System.Xaml.XamlReader" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlReader.Close">
      <summary vsli:raw="Closes the XAML node stream.">Chiude il flusso del nodo XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlReader.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt;, and optionally, releases the managed resources.">Rilascia le risorse non gestite utilizzate dall'oggetto <see cref="T:System.Xaml.XamlReader" /> e facoltativamente rilascia le risorse gestite.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release the managed resources; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per rilasciare le risorse gestite; in caso contrario, <see langword="false" />.</param>
    </member>
    <member name="P:System.Xaml.XamlReader.IsDisposed">
      <summary vsli:raw="Gets whether &lt;see cref=&quot;M:System.Xaml.XamlReader.Dispose(System.Boolean)&quot; /&gt; has been called.">Ottiene un valore che indica se <see cref="M:System.Xaml.XamlReader.Dispose(System.Boolean)" /> è stato chiamato.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.Xaml.XamlReader.Dispose(System.Boolean)&quot; /&gt; has been called; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="M:System.Xaml.XamlReader.Dispose(System.Boolean)" /> è stato chiamato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.IsEof">
      <summary vsli:raw="When implemented in a derived class, gets a value that reports whether the reader position is at end-of-file.">Quando implementato in una classe derivata, ottiene un valore che indica se la posizione del reader è alla fine del file.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the position is at the conceptual end-of-file of the XAML node stream; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se la posizione è alla fine concettuale del file del flusso dei nodi XAML; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.Member">
      <summary vsli:raw="When implemented in a derived class, gets the current member at the reader position, if the reader position is on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.StartMember&quot; /&gt;.">Quando implementato in una classe derivata, ottiene il membro corrente nella posizione del reader, se la posizione del reader è in un oggetto <see cref="F:System.Xaml.XamlNodeType.StartMember" />.</summary>
      <returns vsli:raw="The current member; or &lt;see langword=&quot;null&quot; /&gt;, if the reader position is not on a member.">Membro corrente; oppure <see langword="null" /> se la posizione del reader non è in un membro.</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.Namespace">
      <summary vsli:raw="When implemented in a derived class, gets the XAML namespace information from the current node.">Quando implementato in una classe derivata, ottiene le informazioni sullo spazio dei nomi XAML del nodo corrente.</summary>
      <returns vsli:raw="The XAML namespace information, if it is available; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Informazioni sullo spazio dei nomi XAML, se disponibili; in caso contrario, <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.NodeType">
      <summary vsli:raw="When implemented in a derived class, gets the type of the current node.">Quando implementato in una classe derivata, ottiene il tipo del nodo corrente.</summary>
      <returns vsli:raw="A value of the &lt;see cref=&quot;T:System.Xaml.XamlNodeType&quot; /&gt; enumeration.">Valore dell'enumerazione <see cref="T:System.Xaml.XamlNodeType" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlReader.Read">
      <summary vsli:raw="When implemented in a derived class, provides the next XAML node from the source, if a node is available.">Quando implementato in una classe derivata, fornisce il nodo XAML successivo dall'origine, se è disponibile un nodo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a node is available; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se è disponibile un nodo; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlReader.ReadSubtree">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; that is based on the current &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt;, where the returned &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; is used to iterate through a subtree of the XAML node structure.">Restituisce un oggetto <see cref="T:System.Xaml.XamlReader" /> basato sull'oggetto <see cref="T:System.Xaml.XamlReader" /> corrente, dove l'oggetto <see cref="T:System.Xaml.XamlReader" /> restituito viene utilizzato per scorrere un sottoalbero della struttura dei nodi XAML.</summary>
      <returns vsli:raw="A new XAML reader instance for the subtree.">Nuova istanza del reader XAML per il sottoalbero.</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.SchemaContext">
      <summary vsli:raw="When implemented in a derived class, gets an object that provides XAML schema context information for the information set.">Quando implementato in una classe derivata, ottiene un oggetto che fornisce le informazioni sul contesto dello schema XAML per il set di informazioni.</summary>
      <returns vsli:raw="An object that provides XAML schema context information for the information set.">Oggetto che fornisce le informazioni sul contesto dello schema XAML per il set di informazioni.</returns>
    </member>
    <member name="M:System.Xaml.XamlReader.Skip">
      <summary vsli:raw="Skips the current node and advances the reader position to the next node.">Ignora il nodo corrente e fa avanzare la posizione del reader al nodo successivo.</summary>
    </member>
    <member name="M:System.Xaml.XamlReader.System#IDisposable#Dispose">
      <summary vsli:raw="Releases all resources used by the current instance of the &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; class.">Rilascia tutte le risorse usate dall'istanza corrente della classe <see cref="T:System.Xaml.XamlReader" />.</summary>
    </member>
    <member name="P:System.Xaml.XamlReader.Type">
      <summary vsli:raw="When implemented in a derived class, gets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the current node.">Quando implementato in una classe derivata, ottiene l'oggetto <see cref="T:System.Xaml.XamlType" /> del nodo corrente.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the current node; or &lt;see langword=&quot;null&quot; /&gt;, if the current reader position is not on an object.">Oggetto <see cref="T:System.Xaml.XamlType" /> del nodo corrente o <see langword="null" /> se la posizione corrente del reader non è in un oggetto.</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.Value">
      <summary vsli:raw="When implemented in a derived class, gets the value of the current node.">Quando implementato in una classe derivata, ottiene il valore del nodo corrente.</summary>
      <returns vsli:raw="The value of the current node; or &lt;see langword=&quot;null&quot; /&gt;, if the current reader position is not on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.Value&quot; /&gt; node type.">Valore del nodo corrente o <see langword="null" /> se la posizione corrente del reader non è in un tipo di nodo <see cref="F:System.Xaml.XamlNodeType.Value" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlReaderSettings">
      <summary vsli:raw="Specifies processing rules or option settings for a &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; implementation.">Specifica le regole di elaborazione o le impostazioni delle opzioni per l'implementazione di un oggetto <see cref="T:System.Xaml.XamlReader" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlReaderSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlReaderSettings&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlReaderSettings" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlReaderSettings.#ctor(System.Xaml.XamlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlReaderSettings&quot; /&gt; class based on values in another &lt;see cref=&quot;T:System.Xaml.XamlReaderSettings&quot; /&gt; object.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlReaderSettings" /> sulla base dei valori in un altro oggetto <see cref="T:System.Xaml.XamlReaderSettings" />.</summary>
      <param name="settings" vsli:raw="An existing &lt;see cref=&quot;T:System.Xaml.XamlReaderSettings&quot; /&gt; object.">Oggetto <see cref="T:System.Xaml.XamlReaderSettings" /> esistente.</param>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.AllowProtectedMembersOnRoot">
      <summary vsli:raw="Gets or sets a value that indicates whether the root object may include members that have a protected code access model when it reports the XAML type representation.">Ottiene o imposta un valore che indica se l'oggetto radice può includere membri con un modello di accesso al codice protetto quando si segnala la rappresentazione del tipo XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the root object may include members that have a protected code access model; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto radice può includere membri con un modello di accesso al codice protetto; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.BaseUri">
      <summary vsli:raw="Gets or sets the base URI that is used to resolve relative paths.">Ottiene o imposta l'URI di base utilizzato per risolvere i percorsi relativi.</summary>
      <returns vsli:raw="The base URI to use. The default is &lt;see langword=&quot;null&quot; /&gt;.">URI di base da utilizzare. Il valore predefinito è <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.IgnoreUidsOnPropertyElements">
      <summary vsli:raw="Gets or sets a value that specifies whether the XAML reader should ignore values for &lt;see langword=&quot;x:Uid&quot; /&gt; attributes that exist on property elements.">Ottiene o imposta un valore che specifica se il reader XAML deve ignorare i valori per gli attributi <see langword="x:Uid" /> presenti negli elementi proprietà.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader should ignore values for &lt;see langword=&quot;x:Uid&quot; /&gt; attributes on property elements. &lt;see langword=&quot;false&quot; /&gt; if the reader should process &lt;see langword=&quot;x:Uid&quot; /&gt; attributes on property elements. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il reader deve ignorare i valori per gli attributi <see langword="x:Uid" /> negli elementi proprietà. <see langword="false" /> se il reader deve elaborare gli attributi <see langword="x:Uid" /> negli elementi proprietà. Il valore predefinito è <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.LocalAssembly">
      <summary vsli:raw="Gets or sets the object that represents the current local assembly for processing. This assembly information is used for calls to helper APIs such as &lt;see cref=&quot;M:System.Xaml.XamlType.GetAllMembers&quot; /&gt;.">Ottiene o imposta l'oggetto che rappresenta l'assembly locale corrente per l'elaborazione. Queste informazioni sull'assembly vengono utilizzate per le chiamate alle API di supporto come <see cref="M:System.Xaml.XamlType.GetAllMembers" />.</summary>
      <returns vsli:raw="A CLR reflection &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt; object.">Oggetto <see cref="T:System.Reflection.Assembly" /> della reflection CLR.</returns>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.ProvideLineInfo">
      <summary vsli:raw="Gets or sets a value that specifies whether the reader can provide line number and position.">Ottiene o imposta un valore che specifica se il reader può fornire il numero e la posizione di riga.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader can provide line number and position information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il reader può fornire le informazioni sul numero e la posizione di riga; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.ValuesMustBeString">
      <summary vsli:raw="Gets or sets a value that specifies whether the reader enforces that all &lt;see langword=&quot;Value&quot; /&gt; nodes are processed as a &lt;see langword=&quot;String&quot; /&gt; type.">Ottiene o imposta un valore che specifica se il reader impone che tutti i nodi <see langword="Value" /> siano elaborati come tipo <see langword="String" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader enforces that only &lt;see langword=&quot;String&quot; /&gt; is contained in &lt;see langword=&quot;Value&quot; /&gt; nodes; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il reader impone che solo <see langword="String" /> sia contenuto nei nodi <see langword="Value" />; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlSchemaContext">
      <summary vsli:raw="Defines a reusable context for interpreting or mapping XAML types, and the types in the assemblies that underlie them.">Definisce un contesto riutilizzabile per l'interpretazione o il mapping dei tipi XAML e dei tipi negli assembly ad essi sottostanti.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlSchemaContext" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; class, based on a set of reference assemblies.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlSchemaContext" /> in base a un set di assembly di riferimento.</summary>
      <param name="referenceAssemblies" vsli:raw="An enumerable set of assembly information items. Each assembly information item is specified by an &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt; value.">Informazioni su un set di assembly enumerabile. Ogni informazione sugli assembly viene specificata da un valore di <see cref="T:System.Reflection.Assembly" />.</param>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Xaml.XamlSchemaContextSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; class, based on a set of reference assemblies and a settings object.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlSchemaContext" /> in base a un set di assembly di riferimento e a un oggetto impostazioni.</summary>
      <param name="referenceAssemblies" vsli:raw="An enumerable set of assembly information. Each assembly information item is specified by an &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt; value.">Informazioni su un set di assembly enumerabile. Ogni informazione sugli assembly viene specificata da un valore di <see cref="T:System.Reflection.Assembly" />.</param>
      <param name="settings" vsli:raw="The settings object to use to construct the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt;.">Oggetto impostazioni da utilizzare per costruire l'oggetto <see cref="T:System.Xaml.XamlSchemaContext" />.</param>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.#ctor(System.Xaml.XamlSchemaContextSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; class, based on a settings object.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlSchemaContext" /> in base a un oggetto impostazioni.</summary>
      <param name="settings" vsli:raw="The settings object to use to construct the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt;.">Oggetto impostazioni da utilizzare per costruire l'oggetto <see cref="T:System.Xaml.XamlSchemaContext" />.</param>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.Finalize">
      <summary vsli:raw="Provides a nonstandard &lt;see langword=&quot;Finalize&quot; /&gt; implementation that does not invoke &lt;see langword=&quot;Dispose&quot; /&gt;.">Fornisce un'implementazione <see langword="Finalize" /> non standard che non richiama <see langword="Dispose" />.</summary>
    </member>
    <member name="P:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces">
      <summary vsli:raw="Gets a value that specifies whether a XAML schema and its context use fully qualified assembly names in the values that are returned by the lookup API.">Ottiene un valore che specifica se uno schema XAML e il relativo contesto utilizzano nomi completi dell'assembly nei valori restituiti dall'API di ricerca.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a XAML schema and its context use fully qualified assembly names in the values that are returned by the lookup APIs; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se uno schema XAML e il relativo contesto utilizzano nomi completi dell'assembly nei valori restituiti dalle API di ricerca; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces">
      <summary vsli:raw="Searches the assemblies that are held by this &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; and returns a set of namespaces.">Cerca negli assembly contenuti nell'oggetto <see cref="T:System.Xaml.XamlSchemaContext" /> e restituisce un set di spazi dei nomi.</summary>
      <returns vsli:raw="An enumerable set of namespace identifiers. These identifiers are provided as strings.">Set enumerabile di identificatori degli spazi dei nomi, Questi identificatori sono forniti sotto forma di stringhe.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetAllXamlTypes(System.String)">
      <summary vsli:raw="Searches the assemblies that are held by this &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; and returns a set of types from the specified XAML namespace.">Cerca negli assembly contenuti nell'oggetto <see cref="T:System.Xaml.XamlSchemaContext" /> e restituisce un set di tipi dallo spazio dei nomi XAML specificato.</summary>
      <param name="xamlNamespace" vsli:raw="The XAML namespace to return types for.">Spazio dei nomi XAML per il quale restituire i tipi.</param>
      <returns vsli:raw="An enumerable set of XAML types. Each XAML type in the set is represented by a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object.">Set enumerabile di tipi XAML. Ciascun tipo XAML nel set è rappresentato da un oggetto <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetPreferredPrefix(System.String)">
      <summary vsli:raw="Gets a string that is reported as the preferred prefix for consumers to use when they map the specified XAML namespace.">Ottiene una stringa segnalata come prefisso preferito che deve essere utilizzata dai consumer quando eseguono il mapping dello spazio dei nomi XAML specificato.</summary>
      <param name="xmlns" vsli:raw="The XAML namespace to get the preferred prefix for.">Spazio dei nomi XAML per il quale ottenere il prefisso preferito.</param>
      <returns vsli:raw="A string that consumers should use when they map the specified XAML namespace for markup use.">Stringa che i consumer devono utilizzare quando eseguono il mapping dello spazio dei nomi XAML specificato per l'utilizzo del markup.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlns&quot; /&gt; is null.">
        <paramref name="xmlns" /> è null.</exception>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetValueConverter``1(System.Type,System.Xaml.XamlType)">
      <summary vsli:raw="Returns a value converter that can convert to the requested &lt;paramref name=&quot;targetType&quot; /&gt;.">Restituisce un convertitore di valori che può eseguire la conversione nell'oggetto <paramref name="targetType" /> richiesto.</summary>
      <param name="converterType" vsli:raw="The converter implementation.">Implementazione del convertitore.</param>
      <param name="targetType" vsli:raw="The desired destination type for the converter.">Tipo di destinazione desiderato per il convertitore.</param>
      <typeparam name="TConverterBase" vsli:raw="The specific converter base class.">Classe base specifica del convertitore.</typeparam>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with a constraint that matches the constraint that is put on the method call.">Oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con vincolo corrispondente al vincolo presente nella chiamata al metodo.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetXamlDirective(System.String,System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; value that represents a directive, either for the XAML language or for a particular implementation.">Restituisce un valore <see cref="T:System.Xaml.XamlDirective" /> che rappresenta una direttiva, per il linguaggio XAML o per un'implementazione specifica.</summary>
      <param name="xamlNamespace" vsli:raw="The XAML namespace that contains the named directive.">Spazio dei nomi XAML contenente la direttiva denominata.</param>
      <param name="name" vsli:raw="The name of the directive to obtain.">Nome della direttiva da ottenere.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; object that represents the requested directive.">Oggetto <see cref="T:System.Xaml.XamlDirective" /> che rappresenta la direttiva richiesta.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlNamespace&quot; /&gt; or &lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xamlNamespace" /> o <paramref name="name" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetXamlType(System.String,System.String,System.Xaml.XamlType[])">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that is based on a XAML namespace and a string for the type name. This signature can specify the type arguments for cases where the desired type is a generic type.">Restituisce un oggetto <see cref="T:System.Xaml.XamlType" /> basato su uno spazio dei nomi XAML e una stringa per il nome del tipo. Questa firma può specificare gli argomenti del tipo per i casi in cui il tipo desiderato è generico.</summary>
      <param name="xamlNamespace" vsli:raw="The XAML namespace that contains the desired type.">Spazio dei nomi XAML contenente il tipo desiderato.</param>
      <param name="name" vsli:raw="The string name of the desired type.">Nome della stringa del tipo desiderato.</param>
      <param name="typeArguments" vsli:raw="The initialization type arguments for a generic type.">Argomenti di tipo di inizializzazione per un tipo generico.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that matches the input criteria.">Oggetto <see cref="T:System.Xaml.XamlType" /> che corrisponde ai criteri di input.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Type)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that is based on a CLR type identifier.">Restituisce un oggetto <see cref="T:System.Xaml.XamlType" /> basato su un identificatore di tipo CLR.</summary>
      <param name="type" vsli:raw="The type to get a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for.">Tipo per il quale ottenere un oggetto <see cref="T:System.Xaml.XamlType" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that matches the input &lt;paramref name=&quot;type&quot; /&gt;.">Oggetto <see cref="T:System.Xaml.XamlType" /> che corrisponde al parametro <paramref name="type" /> di input.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Xaml.Schema.XamlTypeName)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that is based on a XAML system type name.">Restituisce un oggetto <see cref="T:System.Xaml.XamlType" /> basato su un nome del tipo di sistema XAML.</summary>
      <param name="xamlTypeName" vsli:raw="The XAML type name to get a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for.">Nome del tipo XAML per il quale ottenere un oggetto <see cref="T:System.Xaml.XamlType" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that matches the input &lt;paramref name=&quot;xamlTypeName&quot; /&gt;.">Oggetto <see cref="T:System.Xaml.XamlType" /> che corrisponde al parametro <paramref name="xamlTypeName" /> di input.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A component of &lt;paramref name=&quot;xamlTypeName&quot; /&gt; (&lt;see cref=&quot;P:System.Xaml.Schema.XamlTypeName.Name&quot; /&gt; or &lt;see cref=&quot;P:System.Xaml.Schema.XamlTypeName.Namespace&quot; /&gt;) is &lt;see langword=&quot;null&quot; /&gt;.">Un componente di <paramref name="xamlTypeName" /> (<see cref="P:System.Xaml.Schema.XamlTypeName.Name" /> o <see cref="P:System.Xaml.Schema.XamlTypeName.Namespace" />) è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlTypeName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xamlTypeName" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.OnAssemblyResolve(System.String)">
      <summary vsli:raw="Called when operations use this schema context to resolve an assembly that is required in order to resolve the XAML namespaces that it contains.">Chiamato quando le operazioni utilizzano questo contesto dello schema per risolvere un assembly richiesto per risolvere gli spazi dei nomi XAML in esso contenuti.</summary>
      <param name="assemblyName" vsli:raw="The name of the assembly to load.">Nome dell'assembly da caricare.</param>
      <returns vsli:raw="The resolved assembly.">Assembly risolto.</returns>
    </member>
    <member name="P:System.Xaml.XamlSchemaContext.ReferenceAssemblies">
      <summary vsli:raw="Gets an enumerable set of reference assemblies for the XAML schema context.">Ottiene un set enumerabile di assembly di riferimento per il contesto dello schema XAML.</summary>
      <returns vsli:raw="An enumerable set of reference assemblies for the schema context. Each assembly information item is specified by an &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt; value.">Set enumerabile di assembly di riferimento per il contesto dello schema. Ogni informazione sugli assembly viene specificata da un valore di <see cref="T:System.Reflection.Assembly" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity">
      <summary vsli:raw="Gets a value that specifies whether a XAML schema and its context support markup extensions that have two constructors with the same arity (number of input parameters).">Ottiene un valore che specifica se uno schema XAML e il relativo contesto supportano le estensioni di markup con due costruttori dello stesso grado (numero di parametri di input).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the schema context permits markup extensions that have duplicate arity; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il contesto dello schema consente estensioni di markup con grado duplicato; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)">
      <summary vsli:raw="Returns the success or failure of a request for a compatible XAML namespace. A successful request reports that XAML namespace as an out parameter.">Restituisce l'esito positivo o negativo di una richiesta per uno spazio dei nomi XAML compatibile. Una richiesta riuscita segnala lo spazio dei nomi XAML come parametro out.</summary>
      <param name="xamlNamespace" vsli:raw="The &lt;see langword=&quot;xmlns&quot; /&gt; string for the XAML namespace to be checked for a compatible result.">Stringa <see langword="xmlns" /> per lo spazio dei nomi XAML da controllare per verificare la presenza di un risultato compatibile.</param>
      <param name="compatibleNamespace" vsli:raw="When this method returns, the &lt;see langword=&quot;xmlns&quot; /&gt; string for a compatible XAML namespace request. This might be identical to &lt;paramref name=&quot;xamlNamespace&quot; /&gt; if the method returns &lt;see langword=&quot;false&quot; /&gt;.">Quando questo metodo restituisce il risultato, stringa <see langword="xmlns" /> per una richiesta dello spazio dei nomi XAML compatibile. Deve essere identica <paramref name="xamlNamespace" /> se il metodo restituisce <see langword="false" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;compatibleNamespace&quot; /&gt; contains a usable result; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="compatibleNamespace" /> contiene un risultato utilizzabile; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlNamespace&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xamlNamespace" /> è <see langword="null" />.</exception>
    </member>
    <member name="T:System.Xaml.XamlSchemaContextSettings">
      <summary vsli:raw="Provides optional settings for a &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt;.">Fornisce impostazioni facoltative per un oggetto <see cref="T:System.Xaml.XamlSchemaContext" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaContextSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContextSettings&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlSchemaContextSettings" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaContextSettings.#ctor(System.Xaml.XamlSchemaContextSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContextSettings&quot; /&gt; class by copying the values of an existing &lt;see cref=&quot;T:System.Xaml.XamlSchemaContextSettings&quot; /&gt; instance.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlSchemaContextSettings" /> copiando i valori di un'istanza dell'oggetto <see cref="T:System.Xaml.XamlSchemaContextSettings" /> esistente.</summary>
      <param name="settings" vsli:raw="An existing &lt;see cref=&quot;T:System.Xaml.XamlSchemaContextSettings&quot; /&gt;.">Oggetto <see cref="T:System.Xaml.XamlSchemaContextSettings" /> esistente.</param>
    </member>
    <member name="P:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces">
      <summary vsli:raw="Gets or sets a value that specifies whether a XAML schema and its context use fully qualified assembly names in the values that are returned by the lookup API.">Ottiene o imposta un valore che specifica se uno schema XAML e il relativo contesto utilizzano nomi completi dell'assembly nei valori restituiti dall'API di ricerca.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a XAML schema and its context use fully qualified assembly names in the values that are returned by the lookup APIs; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se uno schema XAML e il relativo contesto utilizzano nomi completi dell'assembly nei valori restituiti dalle API di ricerca; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity">
      <summary vsli:raw="Gets or sets a value that specifies whether a XAML schema context allows for markup extensions that have two constructors with the same arity (number of input parameters).">Ottiene o imposta un valore che specifica se il contesto di uno schema XAML consente le estensioni di markup con due costruttori dello stesso grado (numero di parametri di input).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the schema context allows for markup extensions that have duplicate arity; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il contesto dello schema consente estensioni di markup con grado duplicato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlSchemaException">
      <summary vsli:raw="The exception that is thrown when a binding system or another schema representation system for XAML reports an exception to the schema context.">Eccezione generata quando un sistema di associazioni o un altro sistema di rappresentazione dello schema per XAML segnala un'eccezione nel contesto dello schema.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaException&quot; /&gt; class with a system-supplied message that describes the error.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlSchemaException" /> con un messaggio fornito dal sistema in cui viene descritto l'errore.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaException&quot; /&gt; class with serialized data.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlSchemaException" /> con dati serializzati.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Oggetto che contiene i dati oggetto serializzati.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Informazioni contestuali sull'origine o sulla destinazione.</param>
    </member>
    <member name="M:System.Xaml.XamlSchemaException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaException&quot; /&gt; class with a specified message that describes the error.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlSchemaException" /> con un messaggio specificato in cui viene descritto l'errore.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Messaggio in cui viene descritta l'eccezione. Il chiamante del costruttore deve garantire che la stringa sia stata localizzata in base alle impostazioni cultura correnti del sistema.</param>
    </member>
    <member name="M:System.Xaml.XamlSchemaException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlSchemaException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Messaggio in cui viene descritta l'eccezione. Il chiamante del costruttore deve garantire che la stringa sia stata localizzata in base alle impostazioni cultura correnti del sistema.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Eccezione che ha determinato l'eccezione corrente. Se il parametro <paramref name="innerException" /> non è <see langword="null" />, l'eccezione corrente viene generata in un blocco <see langword="catch" /> in cui viene gestita l'eccezione interna.</param>
    </member>
    <member name="T:System.Xaml.XamlServices">
      <summary vsli:raw="Provides higher-level services (static methods) for the common XAML tasks of reading XAML and writing an object graph; or reading an object graph and writing XAML file output for serialization purposes.">Fornisce servizi di livello superiore (metodi statici) per le attività XAML comuni di lettura di XAML e di scrittura di un oggetto grafico o di lettura di un oggetto grafico e di scrittura dell'output del file XAML ai fini della serializzazione.</summary>
    </member>
    <member name="M:System.Xaml.XamlServices.Load(System.IO.Stream)">
      <summary vsli:raw="Loads a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; source for a XAML reader and writes its output as an object graph.">Carica un'origine <see cref="T:System.IO.Stream" /> per un reader XAML e scrive l'output come oggetto grafico.</summary>
      <param name="stream" vsli:raw="The stream to load as input.">Flusso da caricare come input.</param>
      <returns vsli:raw="The object graph that is written as output.">Oggetto grafico scritto come output.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Load(System.IO.TextReader)">
      <summary vsli:raw="Creates a XAML reader from a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;, and returns an object graph.">Crea un reader XAML da un oggetto <see cref="T:System.IO.TextReader" /> e restituisce un oggetto grafico.</summary>
      <param name="textReader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; to use as the basis for the created &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Oggetto <see cref="T:System.IO.TextReader" /> da utilizzare come base per l'oggetto <see cref="T:System.Xml.XmlReader" /> creato.</param>
      <returns vsli:raw="The object graph that is returned.">Oggetto grafico restituito.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;textReader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="textReader" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Load(System.String)">
      <summary vsli:raw="Loads a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; source for a XAML reader and returns an object graph.">Carica un'origine <see cref="T:System.IO.Stream" /> per un reader XAML e restituisce un oggetto grafico.</summary>
      <param name="fileName" vsli:raw="The file name to load and use as source.">Nome file da caricare e utilizzare come origine.</param>
      <returns vsli:raw="The object graph that is returned.">Oggetto grafico restituito.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;fileName&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">L'input del <paramref name="fileName" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Load(System.Xaml.XamlReader)">
      <summary vsli:raw="Loads a specific XAML reader implementation and returns an object graph.">Carica un'implementazione specifica del reader XAML e restituisce un oggetto grafico.</summary>
      <param name="xamlReader" vsli:raw="The XAML reader implementation to use as the reader for this &lt;see langword=&quot;Load&quot; /&gt; operation.">Implementazione del reader XAML da utilizzare come reader per l'operazione <see langword="Load" />.</param>
      <returns vsli:raw="The object graph that is returned.">Oggetto grafico restituito.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlReader&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">L'input del <paramref name="xamlReader" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Load(System.Xml.XmlReader)">
      <summary vsli:raw="Loads a specific XML reader implementation and returns an object graph.">Carica un'implementazione specifica del reader XML e restituisce un oggetto grafico.</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; implementation to use as the reader for this &lt;see langword=&quot;Load&quot; /&gt; operation.">Implementazione <see cref="T:System.Xml.XmlReader" /> da utilizzare come reader per l'operazione <see langword="Load" />.</param>
      <returns vsli:raw="The output object graph.">Oggetto grafico di output.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlReader&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">L'input del <paramref name="xamlReader" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Parse(System.String)">
      <summary vsli:raw="Reads XAML as string output and returns an object graph.">Legge XAML come output della stringa e restituisce un oggetto grafico.</summary>
      <param name="xaml" vsli:raw="The XAML string input to parse.">Input della stringa XAML da analizzare.</param>
      <returns vsli:raw="The object graph that is returned.">Oggetto grafico restituito.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xaml&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">L'input del <paramref name="xaml" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.IO.Stream,System.Object)">
      <summary vsli:raw="Processes a provided object graph into a XAML node representation and then into an output stream for serialization.">Elabora un oggetto grafico fornito in una rappresentazione del nodo XAML e quindi un flusso di output per la serializzazione.</summary>
      <param name="stream" vsli:raw="The destination stream.">Flusso di destinazione.</param>
      <param name="instance" vsli:raw="The root of the object graph to process.">Radice dell'oggetto grafico da elaborare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">L'input del <paramref name="stream" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.IO.TextWriter,System.Object)">
      <summary vsli:raw="Processes a provided object graph into a XAML node representation and then into an output that goes to the provided &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Elabora un oggetto grafico fornito in una rappresentazione del nodo XAML e quindi un output diretto all'oggetto <see cref="T:System.IO.TextWriter" /> fornito.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; that writes the output.">Oggetto <see cref="T:System.IO.TextWriter" /> che scrive l'output.</param>
      <param name="instance" vsli:raw="The root of the object graph to process.">Radice dell'oggetto grafico da elaborare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;writer&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">L'input del <paramref name="writer" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.Object)">
      <summary vsli:raw="Processes a provided object tree into a XAML node representation, and returns a string representation of the output XAML.">Elabora una struttura ad albero di oggetti fornita in una rappresentazione del nodo XAML e restituisce una rappresentazione di stringa XAML come output.</summary>
      <param name="instance" vsli:raw="The root of the object graph to process.">Radice dell'oggetto grafico da elaborare.</param>
      <returns vsli:raw="The XAML markup output as a string.">Output del markup XAML in formato stringa.</returns>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.String,System.Object)">
      <summary vsli:raw="Processes a provided object graph into a XAML node representation and then writes it to an output file at a provided location.">Elabora un oggetto grafico fornito in una rappresentazione del nodo XAML e quindi scrive in un file di output in corrispondenza di una posizione fornita.</summary>
      <param name="fileName" vsli:raw="The name and location of the file to write the output to.">Nome e percorso del file in cui scrivere l'output.</param>
      <param name="instance" vsli:raw="The root of the object graph to process.">Radice dell'oggetto grafico da elaborare.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;fileName&quot; /&gt; is an empty string.">Il parametro <paramref name="fileName" /> è una stringa vuota.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;fileName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="fileName" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.Xaml.XamlWriter,System.Object)">
      <summary vsli:raw="Processes a provided object graph into a XAML node representation and then writes it to the provided XAML writer.">Elabora un oggetto grafico fornito in una rappresentazione del nodo XAML e quindi scrive nel writer XAML fornito.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; implementation to use.">Implementazione <see cref="T:System.Xaml.XamlWriter" /> da utilizzare.</param>
      <param name="instance" vsli:raw="The root of the object graph to process.">Radice dell'oggetto grafico da elaborare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;writer&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">L'input del <paramref name="writer" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Processes a provided object graph into a XAML node representation and then writes it to the provided &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Elabora un oggetto grafico fornito in una rappresentazione del nodo XAML e quindi scrive nell'oggetto <see cref="T:System.Xml.XmlWriter" /> fornito.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; implementation to use.">Implementazione <see cref="T:System.Xml.XmlWriter" /> da utilizzare.</param>
      <param name="instance" vsli:raw="The root of the object graph to process.">Radice dell'oggetto grafico da elaborare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;writer&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">L'input del <paramref name="writer" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter)">
      <summary vsli:raw="Connects a &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; and a &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; to use a common XAML node set intermediary. Potentially transforms the content, depending on the types of readers and writers that are provided.">Connette un oggetto <see cref="T:System.Xaml.XamlReader" /> e un oggetto <see cref="T:System.Xaml.XamlWriter" /> per utilizzare un intermediario del set di nodi XAML comune. Trasforma potenzialmente il contenuto a seconda dei tipi di reader e writer forniti.</summary>
      <param name="xamlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; implementation to use.">Implementazione <see cref="T:System.Xaml.XamlReader" /> da utilizzare.</param>
      <param name="xamlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; to use.">Oggetto <see cref="T:System.Xaml.XamlWriter" /> da usare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlReader&quot; /&gt; or &lt;paramref name=&quot;xamlWriter&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">L'input di <paramref name="xamlReader" /> o <paramref name="xamlWriter" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Xaml.XamlException" vsli:raw="The XAML schema context does not match between the provided &lt;paramref name=&quot;xamlReader&quot; /&gt; and &lt;paramref name=&quot;xamlWriter&quot; /&gt;.">Il contesto dello schema XAML non corrisponde fra <paramref name="xamlReader" /> e <paramref name="xamlWriter" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter,System.Boolean)">
      <summary vsli:raw="Connects a &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; and a &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; to use a common XAML node set intermediary. Potentially transforms the content, depending on the types of readers and writers that are provided. Provides a parameter for specifying whether to close the writer after the call is completed.">Connette un oggetto <see cref="T:System.Xaml.XamlReader" /> e un oggetto <see cref="T:System.Xaml.XamlWriter" /> per utilizzare un intermediario del set di nodi XAML comune. Trasforma potenzialmente il contenuto a seconda dei tipi di reader e writer forniti. Fornisce un parametro per specificare se chiudere il writer al completamento della chiamata.</summary>
      <param name="xamlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; implementation to use.">Implementazione <see cref="T:System.Xaml.XamlReader" /> da utilizzare.</param>
      <param name="xamlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; to use.">Oggetto <see cref="T:System.Xaml.XamlWriter" /> da usare.</param>
      <param name="closeWriter" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to close the writer after the call is complete; &lt;see langword=&quot;false&quot; /&gt; to leave the writer active at the last written position.">
        <see langword="true" /> per chiudere il writer dopo il completamento della chiamata; <see langword="false" /> per lasciare il writer attivo in corrispondenza dell'ultima posizione scritta.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlReader&quot; /&gt; or &lt;paramref name=&quot;xamlWriter&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">L'input di <paramref name="xamlReader" /> o <paramref name="xamlWriter" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Xaml.XamlException" vsli:raw="The XAML schema context does not match between the provided &lt;paramref name=&quot;xamlReader&quot; /&gt; and &lt;paramref name=&quot;xamlWriter&quot; /&gt;.">Il contesto dello schema XAML non corrisponde fra <paramref name="xamlReader" /> e <paramref name="xamlWriter" />.</exception>
    </member>
    <member name="T:System.Xaml.XamlType">
      <summary vsli:raw="Reports information about XAML types as part of the overall XAML system that is implemented in .NET XAML Services.">Fornisce informazioni sui tipi XAML come parte del sistema XAML complessivo implementato nei servizi XAML di .NET Framework.</summary>
    </member>
    <member name="M:System.Xaml.XamlType.#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; class based on a string name for the type.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlType" /> in base al nome di una stringa per il tipo.</summary>
      <param name="typeName" vsli:raw="The name of the type to create.">Nome del tipo da creare.</param>
      <param name="typeArguments" vsli:raw="The type arguments for a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that represents a generic type. Can be (and often is) &lt;see langword=&quot;null&quot; /&gt;, which indicates that the represented type is not a generic type.">Argomenti di tipo per un oggetto <see cref="T:System.Xaml.XamlType" /> che rappresenta un tipo generico. Potrebbe essere (e spesso è) <see langword="null" />, che indica che il tipo rappresentato non è un tipo generico.</param>
      <param name="schemaContext" vsli:raw="XAML schema context for XAML readers and XAML writers.">Contesto dello schema XAML per lettori e writer XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or more of &lt;paramref name=&quot;typeName&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; are &lt;see langword=&quot;null&quot; /&gt;.">Uno o più oggetti <paramref name="typeName" /> o <paramref name="schemaContext" /> sono <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlType.#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; class based on the XAML namespace and a string name for the type. This constructor is exclusively for analysis and XAML-node recording of type usages that are known to not have backing in the supporting type system and XAML schema context.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlType" /> in base allo spazio dei nomi XAML e al nome di una stringa per il tipo. Questo costruttore è esclusivamente destinato all'analisi e alla registrazione dei nodi XAML degli utilizzi dei tipi noti per non avere supporto nel sistema dei tipi e nel contesto dello schema XAML di supporto.</summary>
      <param name="unknownTypeNamespace" vsli:raw="The XAML namespace for the type, as a string.">Spazio dei nomi XAML per il tipo in formato stringa.</param>
      <param name="unknownTypeName" vsli:raw="The name of the type in the provided &lt;paramref name=&quot;unknownTypeNamespace&quot; /&gt; XAML namespace.">Nome del tipo nello spazio dei nomi XAML <paramref name="unknownTypeNamespace" /> fornito.</param>
      <param name="typeArguments" vsli:raw="The type arguments for a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that represents a generic type. Can be (and often is) &lt;see langword=&quot;null&quot; /&gt;, which indicates that the represented type is not a generic type.">Argomenti di tipo per un oggetto <see cref="T:System.Xaml.XamlType" /> che rappresenta un tipo generico. Potrebbe essere (e spesso è) <see langword="null" />, che indica che il tipo rappresentato non è un tipo generico.</param>
      <param name="schemaContext" vsli:raw="XAML schema context for XAML readers or XAML writers.">Contesto dello schema XAML per lettori o writer XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or more of &lt;paramref name=&quot;unknownTypeNamespace&quot; /&gt;, &lt;paramref name=&quot;unknownTypeName&quot; /&gt;, or &lt;paramref name=&quot;schemaContext&quot; /&gt; are &lt;see langword=&quot;null&quot; /&gt;.">Uno o più oggetti <paramref name="unknownTypeNamespace" />, <paramref name="unknownTypeName" /> o <paramref name="schemaContext" /> sono <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; class based on the underlying CLR type information.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlType" /> in base alle informazioni sul tipo CLR sottostante.</summary>
      <param name="underlyingType" vsli:raw="The underlying CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; for the XAML type to construct.">Oggetto <see cref="T:System.Type" /> CLR sottostante per il tipo XAML da costruire.</param>
      <param name="schemaContext" vsli:raw="XAML schema context for XAML readers or XAML writers.">Contesto dello schema XAML per lettori o writer XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or more of &lt;paramref name=&quot;underlyingType&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; are &lt;see langword=&quot;null&quot; /&gt;.">Uno o più oggetti <paramref name="underlyingType" /> o <paramref name="schemaContext" /> sono <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlTypeInvoker)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; class based on underlying type information and a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; implementation.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlType" /> in base alle informazioni sul tipo sottostante e a un'implementazione di <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</summary>
      <param name="underlyingType" vsli:raw="The underlying type for the XAML type to construct.">Tipo sottostante per il tipo XAML da costruire.</param>
      <param name="schemaContext" vsli:raw="XAML schema context for the XAML reader.">Contesto dello schema XAML per il lettore XAML.</param>
      <param name="invoker" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; implementation that handles run-time reflection calls against the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Implementazione di <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> che gestisce le chiamate con reflection di runtime all'oggetto <see cref="T:System.Xaml.XamlType" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or more of &lt;paramref name=&quot;underlyingType&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; are &lt;see langword=&quot;null&quot; /&gt;.">Uno o più oggetti <paramref name="underlyingType" /> o <paramref name="schemaContext" /> sono <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlType.AllowedContentTypes">
      <summary vsli:raw="Gets a read-only collection of the types that are usable as the &lt;see cref=&quot;P:System.Xaml.XamlType.ContentProperty&quot; /&gt; value for this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Ottiene un insieme di sola lettura dei tipi che possono essere utilizzati come valore di <see cref="P:System.Xaml.XamlType.ContentProperty" /> per l'oggetto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A read-only collection of possible content types.">Insieme di sola lettura dei possibili tipi di contenuto.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.BaseType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the immediate base type of this XAML type. Determination of this value is based on the underlying type of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; and schema context.">Ottiene l'oggetto <see cref="T:System.Xaml.XamlType" /> per il tipo di base immediato di questo tipo XAML. La determinazione di questo valore si basa sul tipo sottostante dell'oggetto <see cref="T:System.Xaml.XamlType" /> e del contesto dello schema.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the immediate base type of this XAML type.">Oggetto <see cref="T:System.Xaml.XamlType" /> per il tipo di base immediato di questo tipo XAML.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.CanAssignTo(System.Xaml.XamlType)">
      <summary vsli:raw="Returns a value that indicates whether an instance of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; has the specified &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; in its list of assignable types.">Restituisce un valore che indica se un'istanza dell'oggetto <see cref="T:System.Xaml.XamlType" /> dispone dell'oggetto <see cref="T:System.Xaml.XamlType" /> specificato nell'elenco dei tipi assegnabili.</summary>
      <param name="xamlType" vsli:raw="The type to check against the current &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; .">Tipo da verificare rispetto all'oggetto <see cref="T:System.Xaml.XamlType" /> corrente.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;xamlType&quot; /&gt; is in the assignable types list; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="xamlType" /> è presente nell'elenco dei tipi assegnabili; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.ConstructionRequiresArguments">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; must have arguments (generic constraints through &lt;see langword=&quot;x:TypeArguments&quot; /&gt;, initialization text, or other XAML techniques) to construct a valid instance of the type.">Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> deve avere argomenti (vincoli generici tramite <see langword="x:TypeArguments" />, testo di inizializzazione o altre tecniche XAML) per costruire un'istanza valida del tipo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if construction of an instance requires some argument value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se la costruzione di un'istanza richiede un valore dell'argomento; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.ContentProperty">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; information for the content property of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Ottiene le informazioni sull'oggetto <see cref="T:System.Xaml.XamlMember" /> per la proprietà di contenuto dell'oggetto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="&lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; information for the content property of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;. May be &lt;see langword=&quot;null&quot; /&gt; if no content property exists.">Informazioni sull'oggetto <see cref="T:System.Xaml.XamlMember" /> per la proprietà di contenuto dell'oggetto <see cref="T:System.Xaml.XamlType" />. Può essere <see langword="null" /> se non esiste alcuna proprietà di contenuto.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.ContentWrappers">
      <summary vsli:raw="Gets the types that are used to wrap content for a content property when it is not a strict type match, such as strings in a strongly typed &lt;see langword=&quot;Collection&amp;lt;T&amp;gt;&quot; /&gt;.">Ottiene i tipi utilizzati per eseguire il wrapping di contenuto per una proprietà di contenuto quando non si tratta di una corrispondenza dei tipi rigida, ad esempio stringhe in un oggetto <see langword="Collection&lt;T&gt;" /> fortemente tipizzato.</summary>
      <returns vsli:raw="A read-only collection of possible content wrapper types; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Insieme di sola lettura dei possibili tipi di wrapper del contenuto; in caso contrario, <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.DeferringLoader">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; that represents the deferred loading conversion behavior for this type.">Ottiene l'oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> che rappresenta il comportamento di conversione del caricamento posticipato per questo tipo.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.Xaml.XamlDeferringLoader&quot; /&gt; constraint that represents the deferred loading behavior for this type.">Oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con il vincolo <see cref="T:System.Xaml.XamlDeferringLoader" /> che rappresenta il comportamento di caricamento posticipato per questo tipo.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.Equals(System.Object)">
      <summary vsli:raw="Indicates whether the current object is equal to another object.">Indica se l'oggetto corrente è uguale a un altro oggetto.</summary>
      <param name="obj" vsli:raw="The object to compare with this object.">Oggetto da confrontare con l'oggetto corrente.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current object is equal to the &lt;paramref name=&quot;obj&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto corrente è uguale al parametro <paramref name="obj" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.Equals(System.Xaml.XamlType)">
      <summary vsli:raw="Indicates whether the current object is equal to another object of the same type.">Indica se l'oggetto corrente è uguale a un altro oggetto dello stesso tipo.</summary>
      <param name="other" vsli:raw="An object to compare with this object.">Oggetto da confrontare con l'oggetto corrente.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current object is equal to the &lt;paramref name=&quot;other&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto corrente è uguale al parametro <paramref name="other" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetAliasedProperty(System.Xaml.XamlDirective)">
      <summary vsli:raw="Returns the XAML member that is aliased to a XAML directive by this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Restituisce il membro XAML a cui viene associata come alias una direttiva XAML dall'oggetto <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="directive" vsli:raw="The directive for which to find the aliased member.">Direttiva per la quale trovare il membro con alias.</param>
      <returns vsli:raw="The aliased member, if found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Membro con alias, se trovato; in caso contrario, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetAllAttachableMembers">
      <summary vsli:raw="Returns a collection that contains all the attachable properties that are exposed by this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Restituisce un insieme che contiene tutte le proprietà associabili esposte dall'oggetto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A collection that contains zero or more &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; values.">Insieme che contiene zero o più valori di <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetAllMembers">
      <summary vsli:raw="Returns a collection that contains all the members that are exposed by this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Restituisce un insieme che contiene tutti i membri esposti dall'oggetto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A collection that contains zero or more &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; values.">Insieme che contiene zero o più valori di <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetAttachableMember(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; representing a specific named attachable member of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Restituisce un oggetto <see cref="T:System.Xaml.XamlMember" /> che rappresenta uno specifico membro associabile denominato di <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="name" vsli:raw="The name of the attachable member to get, in &lt;c&gt;ownerTypeName.MemberName&lt;/c&gt; form.">Nome del membro associabile da ottenere, in formato <c>ownerTypeName.MemberName</c>.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; object for the requested attachable member; otherwise, &lt;see langword=&quot;null&quot; /&gt;, if no attachable member by that name exists.">Oggetto <see cref="T:System.Xaml.XamlMember" /> per il membro associabile richiesto; in caso contrario, <see langword="null" />, se non esiste alcun membro associabile in base a quel nome.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetHashCode">
      <summary vsli:raw="Returns the hash code for this object.">Restituisce il codice hash per questo oggetto.</summary>
      <returns vsli:raw="An integer hash code.">Codice hash di un intero.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetMember(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; for a specific named member from this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Restituisce un oggetto <see cref="T:System.Xaml.XamlMember" /> per un membro denominato specifico dall'oggetto <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="name" vsli:raw="The name of the member to get (as a string).">Nome del membro da ottenere in formato stringa.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; information for the member, if such a member was found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Informazioni sull'oggetto <see cref="T:System.Xaml.XamlMember" /> per il membro, se tale membro viene trovato; in caso contrario, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetPositionalParameters(System.Int32)">
      <summary vsli:raw="For markup extension types, returns the types of the positional parameters that are supported in a specific markup extension usage for this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Per i tipi di estensione di markup, restituisce i tipi dei parametri posizionali supportati in un utilizzo dell'estensione di markup specifico per l'oggetto <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="parameterCount" vsli:raw="The count (arity) of the particular syntax or constructor mode that you want information about.">Conteggio (grado) della modalità sintassi o costruttore specifica su cui si desiderano informazioni.</param>
      <returns vsli:raw="A list of &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; values, where each &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; is the type for that position in the syntax. You must specify the types in the same order when you supply markup input for the markup extension.">Elenco di valori di <see cref="T:System.Xaml.XamlType" /> dove ogni oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta il tipo per tale posizione nella sintassi. È necessario specificare i tipi nello stesso ordine impiegato quando si fornisce l'input per l'estensione di markup.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetXamlNamespaces">
      <summary vsli:raw="Returns a list of string identifiers for XAML namespaces that the type is included in.">Restituisce un elenco di identificatori di stringa per gli spazi dei nomi XAML nei quali è incluso il tipo.</summary>
      <returns vsli:raw="A list of string values, where each string is the URI identifier for a XAML namespace.">Elenco di valori di stringa, dove ogni stringa rappresenta l'identificatore URI per uno spazio dei nomi XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.Invoker">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; implementation that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Ottiene l'implementazione di <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> associata all'oggetto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; implementation that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Implementazione di <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> associata all'oggetto <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsAmbient">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents an ambient type, as per the XAML definition.">Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo di ambiente secondo la definizione XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents an ambient type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo di ambiente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsArray">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents an array.">Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta una matrice.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents an array; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta una matrice; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsCollection">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a collection.">Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un insieme.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un insieme; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsConstructible">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a constructible type, as per the XAML definition.">Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo che può essere costruito secondo la definizione XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a constructible type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo che può essere costruito; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsDictionary">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a dictionary, as per the XAML definition.">Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un dizionario secondo la definizione XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a dictionary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un dizionario; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsGeneric">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a generic type.">Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo generico.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a generic type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo generico; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsMarkupExtension">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a markup extension.">Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un'estensione di markup.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a markup extension; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un'estensione di markup; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsNameScope">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a XAML namescope, as per the XAML definition.">Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un NameScope XAML secondo la definizione XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a XAML namescope; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un NameScope XAML; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsNameValid">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; is initialized by using a valid &lt;see langword=&quot;xamlName&quot; /&gt; string as its &lt;see cref=&quot;P:System.Xaml.XamlType.Name&quot; /&gt;.">Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> viene inizializzato tramite una stringa <see langword="xamlName" /> valida come <see cref="P:System.Xaml.XamlType.Name" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; is initialized by using a valid &lt;see langword=&quot;xamlName&quot; /&gt; string; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> viene inizializzato tramite una stringa <see langword="xamlName" /> valida; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsNullable">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a nullable type, as per the XAML definition.">Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo nullable secondo la definizione XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a nullable type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo nullable; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsPublic">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a public type in the relevant type system.">Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo pubblico nel sistema dei tipi pertinente.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a public type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo pubblico; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsUnknown">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a type that cannot be resolved in the underlying type system.">Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo che non può essere risolto nel sistema dei tipi sottostante.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents an unresolvable type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo che non può essere risolto; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsUsableDuringInitialization">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; is built top-down during XAML initialization.">Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> viene compilato dall'alto in basso durante l'inizializzazione XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; is built top-down during XAML initialization; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> viene compilato dall'alto in basso durante l'inizializzazione XAML; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsWhitespaceSignificantCollection">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a whitespace significant collection, as per the XML definition.">Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un insieme significativo di spazi vuoti in base alla definizione XML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a whitespace significant collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un insieme significativo di spazi vuoti; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsXData">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents XML &lt;see langword=&quot;XDATA&quot; /&gt;, as per the XAML definition.">Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta XML <see langword="XDATA" /> secondo la definizione XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents &lt;see langword=&quot;XDATA&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta <see langword="XDATA" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.ItemType">
      <summary vsli:raw="Gets a value that provides the type information for the &lt;see langword=&quot;Items&quot; /&gt; property of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Ottiene un valore che fornisce le informazioni sul tipo per la proprietà <see langword="Items" /> dell'oggetto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object for the type of the items in the collection; otherwise, &lt;see langword=&quot;null&quot; /&gt;, if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; does not represent a collection.">Oggetto <see cref="T:System.Xaml.XamlType" /> per il tipo degli elementi nell'insieme; in caso contrario, <see langword="null" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> non rappresenta un insieme.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.KeyType">
      <summary vsli:raw="Gets a value that provides the type information for the key property of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;, if the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a dictionary.">Ottiene un valore che fornisce le informazioni sul tipo per la proprietà della chiave dell'oggetto <see cref="T:System.Xaml.XamlType" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un dizionario.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object for the type of the key for dictionary usage, otherwise, &lt;see langword=&quot;null&quot; /&gt;, if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; does not represent a dictionary.">Oggetto <see cref="T:System.Xaml.XamlType" /> per il tipo della chiave per l'utilizzo del dizionario; in caso contrario, <see langword="null" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> non rappresenta un dizionario.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupAliasedProperty(System.Xaml.XamlDirective)">
      <summary vsli:raw="Returns the XAML member that is aliased to a XAML directive by this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Restituisce il membro XAML a cui viene associata come alias una direttiva XAML dall'oggetto <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="directive" vsli:raw="The directive for which to find the aliased member.">Direttiva per la quale trovare il membro con alias.</param>
      <returns vsli:raw="The aliased member, if found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Membro con alias, se trovato; in caso contrario, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupAllAttachableMembers">
      <summary vsli:raw="Returns an enumerable set that contains all attachable properties that are exposed by this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Restituisce un set enumerabile che contiene tutte le proprietà associabili esposte dall'oggetto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="An enumerable set that contains zero or more &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; values; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Set enumerabile che contiene zero o più valori di <see cref="T:System.Xaml.XamlMember" />; in caso contrario, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupAllMembers">
      <summary vsli:raw="Returns an enumerable set that contains all the members that are exposed by this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Restituisce un set enumerabile contenente tutti i membri esposti dall'oggetto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="An enumerable set that contains zero or more &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; values.">Set enumerabile che contiene zero o più valori di <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupAllowedContentTypes">
      <summary vsli:raw="Returns a list of the types that are usable as the &lt;see cref=&quot;P:System.Xaml.XamlType.ContentProperty&quot; /&gt; value for this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Restituisce un elenco dei tipi che possono essere utilizzati come valore di <see cref="P:System.Xaml.XamlType.ContentProperty" /> per l'oggetto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A list of possible content types.">Elenco dei possibili tipi di contenuto.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupAttachableMember(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; for a specific named attachable from this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Restituisce un oggetto <see cref="T:System.Xaml.XamlMember" /> per uno specifico membro associabile denominato dall'oggetto <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="name" vsli:raw="The name of the attachable member to get, in &lt;c&gt;ownerTypeName.MemberName&lt;/c&gt; form.">Nome del membro associabile da ottenere, in formato <c>ownerTypeName.MemberName</c>.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; object for the requested attachable member; otherwise, &lt;see langword=&quot;null&quot; /&gt;, if no attachable member by that name exists.">Oggetto <see cref="T:System.Xaml.XamlMember" /> per il membro associabile richiesto; in caso contrario, <see langword="null" />, se non esiste alcun membro associabile in base a quel nome.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupBaseType">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the immediate base type of this XAML type. Determination of this value is based on the underlying type of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; and schema context.">Restituisce l'oggetto <see cref="T:System.Xaml.XamlType" /> per il tipo di base immediato di questo tipo XAML. La determinazione di questo valore si basa sul tipo sottostante dell'oggetto <see cref="T:System.Xaml.XamlType" /> e del contesto dello schema.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the immediate base type of this XAML type.">Oggetto <see cref="T:System.Xaml.XamlType" /> per il tipo di base immediato di questo tipo XAML.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupCollectionKind">
      <summary vsli:raw="Returns a value of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlCollectionKind&quot; /&gt; enumeration that declares which specific collection type this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; uses.">Restituisce un valore dell'enumerazione <see cref="T:System.Xaml.Schema.XamlCollectionKind" /> che dichiara il tipo di insieme specifico utilizzato dall'oggetto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A value of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlCollectionKind&quot; /&gt; enumeration.">Valore dell'enumerazione <see cref="T:System.Xaml.Schema.XamlCollectionKind" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupConstructionRequiresArguments">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; must have arguments (generic constraints through &lt;see langword=&quot;x:TypeArguments&quot; /&gt;, initialization text, or other XAML techniques) to construct a valid instance of the type.">Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> deve avere argomenti (vincoli generici tramite <see langword="x:TypeArguments" />, testo di inizializzazione o altre tecniche XAML) per costruire un'istanza valida del tipo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if construction of an instance requires some argument value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se la costruzione di un'istanza richiede un valore dell'argomento; in caso contrario, false.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupContentProperty">
      <summary vsli:raw="Returns &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; information for the content property of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Restituisce le informazioni sull'oggetto <see cref="T:System.Xaml.XamlMember" /> per la proprietà di contenuto dell'oggetto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="&lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; information for the content property of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;. May be &lt;see langword=&quot;null&quot; /&gt;.">Informazioni sull'oggetto <see cref="T:System.Xaml.XamlMember" /> per la proprietà di contenuto dell'oggetto <see cref="T:System.Xaml.XamlType" />. Può essere <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupContentWrappers">
      <summary vsli:raw="Gets a list of &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; values that represent the content wrappers for this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Ottiene un elenco di valori di <see cref="T:System.Xaml.XamlType" /> che rappresentano i wrapper del contenuto per l'oggetto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A list of &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; values that represent the content wrappers for this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Elenco di valori di <see cref="T:System.Xaml.XamlType" /> che rappresentano i wrapper del contenuto per l'oggetto <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupCustomAttributeProvider">
      <summary vsli:raw="When implemented in a derived class, returns an &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; implementation.">Quando implementato in una classe derivata, restituisce un'implementazione di <see cref="T:System.Reflection.ICustomAttributeProvider" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; implementation.">Un'implementazione <see cref="T:System.Reflection.ICustomAttributeProvider" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupDeferringLoader">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; object, which is used for deferred loading of XAML-declared objects.">Restituisce un oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> utilizzato per il caricamento posticipato degli oggetti XAML dichiarati.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; that has a &lt;see cref=&quot;T:System.Xaml.XamlDeferringLoader&quot; /&gt; constraint on the generic.">Oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con vincolo <see cref="T:System.Xaml.XamlDeferringLoader" /> per il tipo generico.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupInvoker">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Restituisce un oggetto <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> associato a <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; information for this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Le informazioni <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> per questo oggetto <see cref="T:System.Xaml.XamlType" />; in caso contrario, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsAmbient">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents an ambient type, as per the XAML definition.">Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo di ambiente secondo la definizione XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents an ambient type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo di ambiente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsConstructible">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a constructible type, as per the XAML definition.">Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo che può essere costruito secondo la definizione XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a constructible type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo che può essere costruito; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsMarkupExtension">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a markup extension.">Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un'estensione di markup.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a markup extension; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un'estensione di markup; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsNameScope">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a XAML namescope, as per the XAML definition.">Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un NameScope XAML secondo la definizione XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a XAML namescope; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un NameScope XAML; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsNullable">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a nullable type, as per the XAML definition.">Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo nullable secondo la definizione XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a nullable type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo nullable; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsPublic">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a public type in the relevant type system.">Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo pubblico nel sistema dei tipi pertinente.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a public type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo pubblico; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsUnknown">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a type that cannot be resolved in the underlying type system.">Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo che non può essere risolto nel sistema dei tipi sottostante.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a nonresolvable type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo che non può essere risolto; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a whitespace significant collection, as per the XML definition.">Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un insieme significativo di spazi vuoti in base alla definizione XML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a white-space significant collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un insieme significativo di spazi vuoti; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsXData">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents XML &lt;see langword=&quot;XDATA&quot; /&gt;, as per the XAML definition.">Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta XML <see langword="XDATA" /> secondo la definizione XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents &lt;see langword=&quot;XDATA&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta <see langword="XDATA" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupItemType">
      <summary vsli:raw="Returns a value that provides the type information for the &lt;see langword=&quot;Items&quot; /&gt; property of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Restituisce un valore che fornisce le informazioni sul tipo per la proprietà <see langword="Items" /> dell'oggetto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object for the type of the items in the collection; otherwise, &lt;see langword=&quot;null&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; does not represent a collection.">Oggetto <see cref="T:System.Xaml.XamlType" /> per il tipo degli elementi nell'insieme; in caso contrario, <see langword="null" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> non rappresenta un insieme.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupKeyType">
      <summary vsli:raw="Returns a value that provides the type information for the key property of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;, if the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a dictionary.">Restituisce un valore che fornisce le informazioni sul tipo per la proprietà della chiave dell'oggetto <see cref="T:System.Xaml.XamlType" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un dizionario.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object for the type of the key for dictionary usage, or &lt;see langword=&quot;null&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; does not represent a dictionary.">Oggetto <see cref="T:System.Xaml.XamlType" /> per il tipo della chiave per l'utilizzo del dizionario o <see langword="null" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> non rappresenta un dizionario.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupMarkupExtensionReturnType">
      <summary vsli:raw="Returns a value that provides the type information for the returned &lt;see langword=&quot;ProvideValue&quot; /&gt; of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;, if it represents a markup extension.">Restituisce un valore che fornisce le informazioni sul tipo per l'oggetto <see langword="ProvideValue" /> restituito dell'oggetto <see cref="T:System.Xaml.XamlType" /> se rappresenta un'estensione di markup.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object for the return type for markup extension usage; otherwise, &lt;see langword=&quot;null&quot; /&gt;, if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; does not represent a markup extension.">Oggetto <see cref="T:System.Xaml.XamlType" /> per il tipo restituito per l'utilizzo dell'estensione di markup; in caso contrario, <see langword="null" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> non rappresenta un'estensione di markup.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupMember(System.String,System.Boolean)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; for a specific named member from this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Restituisce l'oggetto <see cref="T:System.Xaml.XamlMember" /> per un membro denominato specifico dall'oggetto <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="name" vsli:raw="The name of the member to get (as a string).">Nome del membro da ottenere in formato stringa.</param>
      <param name="skipReadOnlyCheck" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to return a member even if that member has a &lt;see langword=&quot;true&quot; /&gt; value for &lt;see cref=&quot;P:System.Xaml.XamlMember.IsReadOnly&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; to not return a &lt;see cref=&quot;P:System.Xaml.XamlMember.IsReadOnly&quot; /&gt; member. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per restituire un membro anche se tale membro contiene il valore <see langword="true" /> per <see cref="P:System.Xaml.XamlMember.IsReadOnly" />; <see langword="false" /> per non restituire un membro <see cref="P:System.Xaml.XamlMember.IsReadOnly" />. Il valore predefinito è <see langword="false" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; information for the member, if a member was found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Informazioni sull'oggetto <see cref="T:System.Xaml.XamlMember" /> per il membro, se un membro viene trovato; in caso contrario, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupPositionalParameters(System.Int32)">
      <summary vsli:raw="For markup extension types, returns the types of the positional parameters that are supported in a specific markup extension usage for this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Per i tipi di estensione di markup, restituisce i tipi dei parametri posizionali supportati in un utilizzo dell'estensione di markup specifico per l'oggetto <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="parameterCount" vsli:raw="The count (arity) of the particular syntax or constructor mode that you want information about.">Conteggio (grado) della modalità sintassi o costruttore specifica su cui si desiderano informazioni.</param>
      <returns vsli:raw="A list of &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; values where each such &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; is the type for that position in the syntax. You must specify those types in the same order when supplying markup input for the markup extension.">Elenco di valori di <see cref="T:System.Xaml.XamlType" /> dove ogni oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta il tipo per tale posizione nella sintassi. È necessario specificare tali tipi nello stesso ordine quando si fornisce l'input per l'estensione di markup.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupSetMarkupExtensionHandler">
      <summary vsli:raw="Returns a handler callback to use for the set operations of markup extensions.">Restituisce un callback del gestore da utilizzare per le operazioni di impostazione delle estensioni di markup.</summary>
      <returns vsli:raw="A handler callback to use for the set operations of markup extensions.">Callback del gestore da utilizzare per le operazioni di impostazione delle estensioni di markup.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupSetTypeConverterHandler">
      <summary vsli:raw="Returns a handler to use for type converter setting cases.">Restituisce un gestore da utilizzare per i casi di impostazione del convertitore di tipi.</summary>
      <returns vsli:raw="A handler to use for type converter setting cases.">Gestore da utilizzare per i casi di impostazione del convertitore di tipi.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupTrimSurroundingWhitespace">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; should be serialized using a mode that  trims surrounding whitespace.">Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> deve essere serializzato con una modalità che rimuove lo spazio vuoto circostante.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; should be serialized in a mode that trims surrounding whitespace; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> deve essere serializzato con una modalità che rimuove lo spazio vuoto circostante; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupTypeConverter">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; that has a &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; constraint, which represents type-conversion behavior for values of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Restituisce un oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con contiene un vincolo <see cref="T:System.ComponentModel.TypeConverter" /> che rappresenta il comportamento di conversione dei tipi per i valori dell'oggetto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; constraint that represents type-conversion behavior for values of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con vincolo <see cref="T:System.ComponentModel.TypeConverter" /> che rappresenta il comportamento di conversione dei tipi per i valori dell'oggetto <see cref="T:System.Xaml.XamlType" />; in caso contrario, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupUnderlyingType">
      <summary vsli:raw="Returns the CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; that underlies this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Restituisce l'oggetto <see cref="T:System.Type" /> CLR sottostante l'oggetto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="The CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; that underlies this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Oggetto <see cref="T:System.Type" /> CLR sottostante l'oggetto <see cref="T:System.Xaml.XamlType" />; in caso contrario, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupUsableDuringInitialization">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; is built top-down during XAML initialization.">Restituisce un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> viene compilato dall'alto in basso durante l'inizializzazione XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; is built top-down during XAML initialization; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> viene compilato dall'alto in basso durante l'inizializzazione XAML; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupValueSerializer">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; that has a &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; constraint, which represents value serialization behavior for values of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Restituisce un oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> contenente un vincolo <see cref="T:System.Windows.Markup.ValueSerializer" /> che rappresenta il comportamento di serializzazione per i valori dell'oggetto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; constraint that represents value serialization behavior for values of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Restituisce un oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con vincolo <see cref="T:System.Windows.Markup.ValueSerializer" /> che rappresenta il comportamento di serializzazione per i valori dell'oggetto <see cref="T:System.Xaml.XamlType" />; in caso contrario, <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.MarkupExtensionReturnType">
      <summary vsli:raw="Gets a value that provides the type information for the returned &lt;see langword=&quot;ProvideValue&quot; /&gt; of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;, if it represents a markup extension.">Ottiene un valore che fornisce le informazioni sul tipo per l'oggetto <see langword="ProvideValue" /> restituito dell'oggetto <see cref="T:System.Xaml.XamlType" /> se rappresenta un'estensione di markup.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object for the return type for markup extension usage; otherwise, &lt;see langword=&quot;null&quot; /&gt;, if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; does not represent a markup extension.">Oggetto <see cref="T:System.Xaml.XamlType" /> per il tipo restituito per l'utilizzo dell'estensione di markup; in caso contrario, <see langword="null" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> non rappresenta un'estensione di markup.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.Name">
      <summary vsli:raw="Gets the string name of the type that this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents.">Ottiene il nome della stringa del tipo rappresentato dall'oggetto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="The string name of this XAML type.">Nome della stringa del tipo XAML.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.op_Equality(System.Xaml.XamlType,System.Xaml.XamlType)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; objects have the same value.">Determina se due oggetti <see cref="T:System.Xaml.XamlType" /> specificati hanno lo stesso valore.</summary>
      <param name="xamlType1" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">Tipo <see cref="T:System.Xaml.XamlType" /> o <see langword="null" />.</param>
      <param name="xamlType2" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">Tipo <see cref="T:System.Xaml.XamlType" /> o <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;xamlType1&quot; /&gt; is the same as the value of &lt;paramref name=&quot;xamlType2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il valore del parametro <paramref name="xamlType1" /> è uguale al valore del parametro <paramref name="xamlType2" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.op_Inequality(System.Xaml.XamlType,System.Xaml.XamlType)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; objects have different values.">Determina se due oggetti <see cref="T:System.Xaml.XamlType" /> specificati hanno valori diversi.</summary>
      <param name="xamlType1" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">Tipo <see cref="T:System.Xaml.XamlType" /> o <see langword="null" />.</param>
      <param name="xamlType2" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">Tipo <see cref="T:System.Xaml.XamlType" /> o <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;xamlType1&quot; /&gt; is different from the value of &lt;paramref name=&quot;xamlType2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il valore del parametro <paramref name="xamlType1" /> è diverso dal valore del parametro <paramref name="xamlType2" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.PreferredXamlNamespace">
      <summary vsli:raw="Gets the single XAML namespace that is the primary XAML namespace for this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Ottiene il singolo spazio dei nomi XAML, ovvero lo spazio dei nomi XAML primario per l'oggetto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="The identifier, as a string, of the primary XAML namespace for this XAML type.">Identificatore in formato di stringa dello spazio dei nomi XAML primario per il tipo XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.SchemaContext">
      <summary vsli:raw="Gets the active &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; for processing this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Ottiene l'oggetto <see cref="T:System.Xaml.XamlSchemaContext" /> attivo per l'elaborazione dell'oggetto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="The active &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; for processing this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Oggetto <see cref="T:System.Xaml.XamlSchemaContext" /> attivo per l'elaborazione dell'oggetto <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.ToString">
      <summary vsli:raw="Returns a string representation of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Restituisce una rappresentazione in forma di stringa di <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A string representation of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Rappresentazione in forma di stringa di <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.TrimSurroundingWhitespace">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; has whitespace handling behavior for serialization that trims the surrounding whitespace in its content.">Ottiene un valore che indica se l'oggetto <see cref="T:System.Xaml.XamlType" /> utilizza per la serializzazione un comportamento di gestione degli spazi vuoti che rimuove lo spazio vuoto circostante nel contenuto.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a type that uses whitespace trimming; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo che utilizza la rimozione degli spazi vuoti; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.TypeArguments">
      <summary vsli:raw="Gets a list of type arguments for cases where this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a generic.">Ottiene un elenco di argomenti di tipo per i casi in cui l'oggetto <see cref="T:System.Xaml.XamlType" /> rappresenta un tipo generico.</summary>
      <returns vsli:raw="A list of type argument types; otherwise, &lt;see langword=&quot;null&quot; /&gt;, if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; does not represent a generic.">Elenco di argomenti di tipo; in caso contrario, <see langword="null" /> se l'oggetto <see cref="T:System.Xaml.XamlType" /> non rappresenta un tipo generico.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.TypeConverter">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; constraint that represents type conversion behavior for values of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Ottiene un oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con vincolo <see cref="T:System.ComponentModel.TypeConverter" /> che rappresenta il comportamento di conversione dei tipi per i valori dell'oggetto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; constraint that represents type conversion behavior for values of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con vincolo <see cref="T:System.ComponentModel.TypeConverter" /> che rappresenta il comportamento di conversione dei tipi per i valori dell'oggetto <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.UnderlyingType">
      <summary vsli:raw="Gets the CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; that underlies this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Ottiene l'oggetto <see cref="T:System.Type" /> CLR sottostante l'oggetto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="The CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; that underlies this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Oggetto <see cref="T:System.Type" /> CLR sottostante l'oggetto <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.ValueSerializer">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; constraint that represents value serialization behavior for values of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Ottiene un oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con vincolo <see cref="T:System.Windows.Markup.ValueSerializer" /> che rappresenta il comportamento di serializzazione per i valori dell'oggetto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; constraint that represents value serialization behavior for values of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Restituisce un oggetto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con vincolo <see cref="T:System.Windows.Markup.ValueSerializer" /> che rappresenta il comportamento di serializzazione per i valori dell'oggetto <see cref="T:System.Xaml.XamlType" />; in caso contrario, <see langword="null" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlWriter">
      <summary vsli:raw="Provides default implementation and base class definitions for a XAML writer. This is not a working default XAML writer; you must either derive from &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; and implement its abstract members, or use an existing &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; derived class.">Fornisce l'implementazione predefinita e le definizioni delle classi di base per un writer XAML. Non si tratta di un writer XAML predefinito di lavoro; è necessario derivare da <see cref="T:System.Xaml.XamlWriter" /> e implementarne i membri astratti o utilizzare una classe derivata <see cref="T:System.Xaml.XamlWriter" /> esistente.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlWriter" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.Close">
      <summary vsli:raw="Closes the XAML writer object.">Chiude l'oggetto writer XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; and optionally releases the managed resources.">Rilascia le risorse non gestite usate da <see cref="T:System.Xaml.XamlWriter" /> e, facoltativamente, le risorse gestite.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release the managed resources; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per rilasciare le risorse gestite; in caso contrario, <see langword="false" />.</param>
    </member>
    <member name="P:System.Xaml.XamlWriter.IsDisposed">
      <summary vsli:raw="Gets whether &lt;see cref=&quot;M:System.Xaml.XamlWriter.Dispose(System.Boolean)&quot; /&gt; has been called.">Ottiene un valore che indica se <see cref="M:System.Xaml.XamlWriter.Dispose(System.Boolean)" /> è stato chiamato.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.Xaml.XamlWriter.Dispose(System.Boolean)&quot; /&gt; has been called; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="M:System.Xaml.XamlWriter.Dispose(System.Boolean)" /> è stato chiamato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlWriter.SchemaContext">
      <summary vsli:raw="When implemented in a derived class, gets the active XAML schema context.">Quando implementato in una classe derivata, ottiene o imposta il contesto dello schema XAML attivo.</summary>
      <returns vsli:raw="The active XAML schema context.">Contesto dello schema XAML attivo.</returns>
    </member>
    <member name="M:System.Xaml.XamlWriter.System#IDisposable#Dispose">
      <summary vsli:raw="See &lt;see cref=&quot;M:System.IDisposable.Dispose&quot; /&gt;.">Vedere <see cref="M:System.IDisposable.Dispose" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteEndMember">
      <summary vsli:raw="When implemented in a derived class, produces the representation of an end member node.">Quando implementato in una classe derivata, genera la rappresentazione di un nodo membro finale.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteEndObject">
      <summary vsli:raw="When implemented in a derived class, produces the representation of an end object node.">Quando implementato in una classe derivata, genera la rappresentazione di un nodo oggetto finale.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteGetObject">
      <summary vsli:raw="When implemented in a derived class, produces an object for cases where the object is a default or implicit value of the property being set, instead of being specified as a discrete object value in the input XAML node set.">Quando implementato in una classe derivata, genera un oggetto per i casi in cui l'oggetto in questione è un valore predefinito o un valore implicito della proprietà da impostare, anziché da specificare come valore dell'oggetto discreto nel set di nodi XAML di input.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
      <summary vsli:raw="When implemented in a derived class, writes a XAML namespace declaration node.">Quando implementato in una classe derivata, scrive un nodo dichiarazione dello spazio dei nomi XAML.</summary>
      <param name="namespaceDeclaration" vsli:raw="The namespace declaration to write.">Dichiarazione dello spazio dei nomi da scrivere.</param>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteNode(System.Xaml.XamlReader)">
      <summary vsli:raw="Performs switching based on node type from the XAML reader (&lt;see cref=&quot;P:System.Xaml.XamlReader.NodeType&quot; /&gt;) and calls the relevant &lt;see langword=&quot;Write&quot; /&gt; method for the writer implementation.">Esegue il passaggio in base al tipo di nodo dal reader XAML (<see cref="P:System.Xaml.XamlReader.NodeType" />) e chiama il metodo <see langword="Write" /> pertinente per l'implementazione del writer.</summary>
      <param name="reader" vsli:raw="The reader to use for node determination.">Reader da utilizzare per la determinazione del nodo.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;reader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="reader" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotImplementedException" vsli:raw="The default implementation encountered a &lt;see cref=&quot;T:System.Xaml.XamlNodeType&quot; /&gt; that is not in the default enumeration.">L'implementazione predefinita ha incontrato un oggetto <see cref="T:System.Xaml.XamlNodeType" /> non presente nell'enumerazione predefinita.</exception>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteStartMember(System.Xaml.XamlMember)">
      <summary vsli:raw="When implemented in a derived class, writes the representation of a start member node.">Quando implementato in una classe derivata, scrive la rappresentazione di un nodo membro iniziale.</summary>
      <param name="xamlMember" vsli:raw="The member node to write.">Nodo membro da scrivere.</param>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteStartObject(System.Xaml.XamlType)">
      <summary vsli:raw="When implemented in a derived class, writes the representation of a start object node.">Quando implementato in una classe derivata, scrive la rappresentazione di un nodo oggetto iniziale.</summary>
      <param name="type" vsli:raw="The XAML type of the object to write.">Tipo XAML dell'oggetto da scrivere.</param>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteValue(System.Object)">
      <summary vsli:raw="When implemented in a derived class, writes a value node.">Quando implementato in una classe derivata, scrive un nodo valore.</summary>
      <param name="value" vsli:raw="The value to write.">Valore da scrivere.</param>
    </member>
    <member name="T:System.Xaml.XamlWriterSettings">
      <summary vsli:raw="Provides initialization settings for a &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; implementation.">Fornisce le impostazioni di inizializzazione per un'implementazione <see cref="T:System.Xaml.XamlWriter" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriterSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlWriterSettings&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlWriterSettings" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriterSettings.#ctor(System.Xaml.XamlWriterSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlWriterSettings&quot; /&gt; class using another existing settings instance.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlWriterSettings" /> utilizzando un'altra istanza di impostazioni esistente.</summary>
      <param name="settings" vsli:raw="An existing &lt;see cref=&quot;T:System.Xaml.XamlWriterSettings&quot; /&gt; object.">Oggetto <see cref="T:System.Xaml.XamlWriterSettings" /> esistente.</param>
    </member>
    <member name="T:System.Xaml.XamlXmlReader">
      <summary vsli:raw="Processes XAML markup from XML files by using an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; intermediary, and produces a XAML node stream.">Elabora il markup XAML dai file XML utilizzando un oggetto <see cref="T:System.Xml.XmlReader" /> intermediario e produce un flusso del nodo XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.Stream)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a stream.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlXmlReader" /> in base a un flusso.</summary>
      <param name="stream" vsli:raw="The initial stream to load into the reader.">Flusso iniziale da caricare nel reader.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a stream, and using a supplied XAML schema context.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlXmlReader" /> in base a un flusso e utilizzando un contesto dello schema XAML fornito.</summary>
      <param name="stream" vsli:raw="The initial stream to load into the reader.">Flusso iniziale da caricare nel reader.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for XAML processing.">Contesto dello schema XAML per l'elaborazione XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> o <paramref name="schemaContext" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a stream, with a supplied XAML schema context and XAML-specific settings.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlXmlReader" /> in base a un flusso con un contesto dello schema XAML fornito e le impostazioni XAML specifiche.</summary>
      <param name="stream" vsli:raw="The initial stream to load into the reader.">Flusso iniziale da caricare nel reader.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for XAML processing.">Contesto dello schema XAML per l'elaborazione XAML.</param>
      <param name="settings" vsli:raw="The specific reader settings.">Impostazioni specifiche del reader.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> o <paramref name="schemaContext" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.Stream,System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a stream, with XAML-specific settings.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlXmlReader" /> in base a un flusso con impostazioni specifiche XAML.</summary>
      <param name="stream" vsli:raw="The initial stream to load into the reader.">Flusso iniziale da caricare nel reader.</param>
      <param name="settings" vsli:raw="The specific reader settings.">Impostazioni specifiche del reader.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.TextReader)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlXmlReader" /> in base a un oggetto <see cref="T:System.IO.TextReader" />.</summary>
      <param name="textReader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; to use for initialization.">Interfaccia <see cref="T:System.IO.TextReader" /> da utilizzare per l’inizializzazione.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;textReader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="textReader" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.TextReader,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;, with a supplied schema context and XAML-specific settings.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlXmlReader" /> in base a un oggetto <see cref="T:System.IO.TextReader" /> con un contesto dello schema fornito e impostazioni specifiche XAML.</summary>
      <param name="textReader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; to use for initialization.">Interfaccia <see cref="T:System.IO.TextReader" /> da utilizzare per l’inizializzazione.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for XAML processing.">Contesto dello schema XAML per l'elaborazione XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;textReader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="textReader" /> è <see langword="null" />.  
-oppure- 
 <paramref name="schemaContext" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.TextReader,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;, and using a supplied schema context and XAML-specific settings.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlXmlReader" /> in base a un oggetto <see cref="T:System.IO.TextReader" /> e utilizzando un contesto dello schema fornito e impostazioni specifiche XAML.</summary>
      <param name="textReader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; to use for initialization.">Interfaccia <see cref="T:System.IO.TextReader" /> da utilizzare per l’inizializzazione.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for XAML processing.">Contesto dello schema XAML per l'elaborazione XAML.</param>
      <param name="settings" vsli:raw="The specific reader settings.">Impostazioni specifiche del reader.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;textReader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="textReader" /> è <see langword="null" />.  
-oppure- 
 <paramref name="schemaContext" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.TextReader,System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;, and using XAML-specific settings.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlXmlReader" /> in base a un oggetto <see cref="T:System.IO.TextReader" /> e utilizzando impostazioni specifiche XAML.</summary>
      <param name="textReader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; to use for initialization.">Interfaccia <see cref="T:System.IO.TextReader" /> da utilizzare per l’inizializzazione.</param>
      <param name="settings" vsli:raw="The specific reader settings.">Impostazioni specifiche del reader.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;textReader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="textReader" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a file name of a file to load into a default XML reader.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlXmlReader" /> in base a un nome di un file da caricare in un reader XML predefinito.</summary>
      <param name="fileName" vsli:raw="The name of the XML file to load.">Nome del file XML da caricare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;fileName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="fileName" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.String,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on the file name of a file to load into a default XML reader, with a supplied XAML schema context.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlXmlReader" /> in base a un nome di un file da caricare in un reader XML predefinito con un contesto dello schema XAML fornito.</summary>
      <param name="fileName" vsli:raw="The name of the file to load.">Nome del file da caricare.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for XAML processing.">Contesto dello schema XAML per l'elaborazione XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;fileName&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="fileName" /> o <paramref name="schemaContext" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.String,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on the file name of a file to load into a default XML reader, and using a supplied XAML schema context and XAML-specific reader settings.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlXmlReader" /> in base a un nome di un file da caricare in un reader XML predefinito e utilizzando un contesto dello schema XAML fornito e impostazioni del reader specifiche XAML.</summary>
      <param name="fileName" vsli:raw="The name of the XML file to load.">Nome del file XML da caricare.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for XAML processing.">Contesto dello schema XAML per l'elaborazione XAML.</param>
      <param name="settings" vsli:raw="The specific reader settings.">Impostazioni specifiche del reader.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;fileName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="fileName" /> è <see langword="null" />.  
In alternativa 
 <paramref name="schemaContext" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.String,System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on the file name of a file to load into a default XML reader, and using XAML-specific reader settings.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlXmlReader" /> in base a un nome di un file da caricare in un reader XML predefinito e utilizzando impostazioni del reader specifiche XAML.</summary>
      <param name="fileName" vsli:raw="The name of the XML file to load.">Nome del file XML da caricare.</param>
      <param name="settings" vsli:raw="The specific reader settings.">Impostazioni specifiche del reader.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;fileName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="fileName" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.Xml.XmlReader)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class using the provided &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlXmlReader" /> mediante l'oggetto <see cref="T:System.Xml.XmlReader" /> fornito.</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to use as the intermediary XML processor.">Oggetto <see cref="T:System.Xml.XmlReader" /> da utilizzare come processore XML intermediario.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlReader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xmlReader" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.Xml.XmlReader,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class using the provided &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and schema context.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlXmlReader" /> utilizzando l'oggetto <see cref="T:System.Xml.XmlReader" /> fornito e il contesto dello schema.</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to use as the intermediary XML processor.">Oggetto <see cref="T:System.Xml.XmlReader" /> da utilizzare come processore XML intermediario.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for XAML processing.">Contesto dello schema XAML per l'elaborazione XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlReader&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xmlReader" /> o <paramref name="schemaContext" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.Xml.XmlReader,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class using the provided &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;, schema context, and reader settings.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlXmlReader" /> utilizzando l'oggetto <see cref="T:System.Xml.XmlReader" /> fornito, il contesto dello schema e le impostazioni del reader.</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to use as the intermediary XML processor.">Oggetto <see cref="T:System.Xml.XmlReader" /> da utilizzare come processore XML intermediario.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for XAML processing.">Contesto dello schema XAML per l'elaborazione XAML.</param>
      <param name="settings" vsli:raw="The specific XAML reader settings.">Impostazioni specifiche del reader XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlReader&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xmlReader" /> o <paramref name="schemaContext" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.Xml.XmlReader,System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, using the provided &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and reader settings.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlXmlReader" /> utilizzando l'oggetto <see cref="T:System.Xml.XmlReader" /> fornito e le impostazioni del reader.</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to use as the intermediary XML processor.">Oggetto <see cref="T:System.Xml.XmlReader" /> da utilizzare come processore XML intermediario.</param>
      <param name="settings" vsli:raw="The specific XAML reader settings.">Impostazioni specifiche del reader XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlReader&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xmlReader" /> o <paramref name="schemaContext" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.HasLineInfo">
      <summary vsli:raw="Gets a value that specifies whether line information is available.">Ottiene un valore che specifica se le informazioni sulla riga sono disponibili.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if line information is available; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se le informazioni sulla riga sono disponibili; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.IsEof">
      <summary vsli:raw="Gets a value that reports whether the reader position in the XAML node stream is at end-of-file.">Ottiene un valore che segnala se la posizione del reader nel flusso del nodo XAML è alla fine del file.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the position is at the conceptual end-of-file in the node stream; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se la posizione è alla fine concettuale del file nel flusso del nodo; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.LineNumber">
      <summary vsli:raw="Gets the line number to report.">Ottiene il numero di riga da segnalare.</summary>
      <returns vsli:raw="The line number to report.">Numero di riga da segnalare.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.LinePosition">
      <summary vsli:raw="Gets the line position to report.">Ottiene la posizione di riga da segnalare.</summary>
      <returns vsli:raw="The line position to report.">Posizione di riga da segnalare.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.Member">
      <summary vsli:raw="Gets the current member at the reader position, if the current reader position is on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.StartMember&quot; /&gt;.">Ottiene il membro corrente nella posizione del reader, se la posizione corrente del reader è in un oggetto <see cref="F:System.Xaml.XamlNodeType.StartMember" />.</summary>
      <returns vsli:raw="The current member; or &lt;see langword=&quot;null&quot; /&gt;, if the current reader position is not on a member.">Membro corrente o <see langword="null" /> se la posizione corrente del reader non è in un membro.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.Namespace">
      <summary vsli:raw="Gets the XAML namespace from the current node.">Ottiene lo spazio dei nomi XAML dal nodo corrente.</summary>
      <returns vsli:raw="The XAML namespace from the current node, if it is available; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Spazio dei nomi XAML del nodo corrente, se disponibile; in caso contrario, <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.NodeType">
      <summary vsli:raw="Gets the type of the current node.">Ottiene il tipo di nodo corrente.</summary>
      <returns vsli:raw="A value of the &lt;see cref=&quot;T:System.Xaml.XamlNodeType&quot; /&gt; enumeration.">Valore dell'enumerazione <see cref="T:System.Xaml.XamlNodeType" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.Read">
      <summary vsli:raw="Provides the next XAML node from the loaded source, if a XAML node is available.">Fornisce il nodo XAML successivo dall'origine caricata, se è disponibile un nodo XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a node is available; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se è disponibile un nodo; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.SchemaContext">
      <summary vsli:raw="Gets an object that provides schema information for the information set.">Ottiene un oggetto che fornisce le informazioni sullo schema per il set di informazioni.</summary>
      <returns vsli:raw="An object that provides schema information for the information set.">Oggetto che fornisce le informazioni sullo schema per il set di informazioni.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.Type">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the current node.">Ottiene l'oggetto <see cref="T:System.Xaml.XamlType" /> del nodo corrente.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the current node; or &lt;see langword=&quot;null&quot; /&gt;, if the position is not on an object.">Oggetto <see cref="T:System.Xaml.XamlType" /> del nodo corrente o <see langword="null" /> se la posizione non è in un oggetto.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.Value">
      <summary vsli:raw="Gets the value of the current node.">Ottiene il valore del nodo corrente.</summary>
      <returns vsli:raw="The value of the current node; or &lt;see langword=&quot;null&quot; /&gt;, if the position is not on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.Value&quot; /&gt; node type.">Valore del nodo corrente o <see langword="null" /> se la posizione non è in un tipo di nodo <see cref="F:System.Xaml.XamlNodeType.Value" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlXmlReaderSettings">
      <summary vsli:raw="Specifies processing rules or option settings for the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; XAML reader implementation.">Specifica le regole di elaborazione o le impostazioni delle opzioni per l'implementazione del reader XAML <see cref="T:System.Xaml.XamlXmlReader" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlReaderSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReaderSettings&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlXmlReaderSettings" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlReaderSettings.#ctor(System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReaderSettings&quot; /&gt; class by copying settings from an existing &lt;see cref=&quot;T:System.Xaml.XamlXmlReaderSettings&quot; /&gt; object.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlXmlReaderSettings" /> copiando le impostazioni da un oggetto <see cref="T:System.Xaml.XamlXmlReaderSettings" /> esistente.</summary>
      <param name="settings" vsli:raw="The existing &lt;see cref=&quot;T:System.Xaml.XamlXmlReaderSettings&quot; /&gt; object to copy.">Oggetto <see cref="T:System.Xaml.XamlXmlReaderSettings" /> esistente da copiare.</param>
    </member>
    <member name="P:System.Xaml.XamlXmlReaderSettings.CloseInput">
      <summary vsli:raw="Gets or sets a value that indicates whether the underlying stream or text reader should be closed when the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; is closed.">Ottiene o imposta un valore che indica se il flusso o il reader di testo sottostante deve essere chiuso alla chiusura di <see cref="T:System.Xaml.XamlXmlReader" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the underlying stream or reader should be closed when the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; is closed; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il flusso o il reader sottostante deve essere chiuso alla chiusura di <see cref="T:System.Xaml.XamlXmlReader" />; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReaderSettings.SkipXmlCompatibilityProcessing">
      <summary vsli:raw="Gets or sets a value that determines whether the reader should differ from the default &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; behavior of how markup compatibility content is processed.">Ottiene o imposta un valore che determina se il lettore deve differire dal comportamento di <see cref="T:System.Xaml.XamlXmlReader" /> predefinito della modalità di elaborazione del contenuto di compatibilità del markup.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the initiating reader is directly used, which means that XML compatibility markup is processed as part of the main stream and compatibility is not considered. &lt;see langword=&quot;false&quot; /&gt; if the default behavior is used, which processes XML compatibility separately. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il reader di inizializzazione viene utilizzato direttamente. Questo significa quindi che il markup di compatibilità XML viene elaborato come parte del flusso principale e la compatibilità non viene considerata. <see langword="false" /> se viene utilizzato il comportamento predefinito e quindi la compatibilità XML viene elaborata separatamente. Il valore predefinito è <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReaderSettings.XmlLang">
      <summary vsli:raw="Gets or sets the language setting value that the reader may promote to writers that write &lt;see langword=&quot;xml:lang&quot; /&gt; attributes in nodes.">Ottiene o imposta il valore di impostazione della lingua in base al quale il lettore viene promosso a writer quando i writer scrivono gli attributi <see langword="xml:lang" /> nei nodi.</summary>
      <returns vsli:raw="The string to use for possible &lt;see langword=&quot;xml:lang&quot; /&gt; output that is based on the reader.">Stringa da utilizzare come output <see langword="xml:lang" /> possibile in base al reader.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReaderSettings.XmlSpacePreserve">
      <summary vsli:raw="Gets or sets a value that determines whether the XAML reader instructs any XAML writers to write &lt;see langword=&quot;xml:space&quot; /&gt; attributes in nodes. If that behavior is desired, this information is passed through shared XAML schema context.">Ottiene o imposta un valore che determina se il reader XAML indica ai writer XAML di scrivere attributi <see langword="xml:space" /> nei nodi. Se si desidera questo comportamento, queste informazioni vengono passate attraverso il contesto dello schema XAML condiviso.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if writers that are processing the XAML node stream can write &lt;c&gt;xml:space=&quot;preserve&quot;&lt;/c&gt; in output; &lt;see langword=&quot;false&quot; /&gt; if &lt;see langword=&quot;xml:space&quot; /&gt; attributes cannot be written in nodes.">
        <see langword="true" />Se i writer che elaborano il flusso del nodo XAML possono scrivere <c>XML: Space = "preserve"</c> nell'output; <see langword="false" /> se<see langword="xml:space" /> gli attributi non possono essere scritti nei nodi.</returns>
    </member>
    <member name="T:System.Xaml.XamlXmlWriter">
      <summary vsli:raw="Uses a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; or &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; support class to write a XAML node stream to a text or markup serialized form.">Utilizza una classe di supporto <see cref="T:System.IO.TextWriter" /> o <see cref="T:System.Xml.XmlWriter" /> per scrivere un flusso del nodo XAML in un formato serializzato di testo o markup.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; class from a stream.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlXmlWriter" /> da un flusso.</summary>
      <param name="stream" vsli:raw="The stream to write.">Flusso da scrivere.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for the XAML writer.">Contesto dello schema XAML per il writer XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> è <see langword="null" />.  
-oppure- 
 <paramref name="schemaContext" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; class from a stream using a writer settings object.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlXmlWriter" /> da un flusso utilizzando un oggetto impostazioni del writer.</summary>
      <param name="stream" vsli:raw="The stream to write.">Flusso da scrivere.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for the XAML writer.">Contesto dello schema XAML per il writer XAML.</param>
      <param name="settings" vsli:raw="An instance of &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterSettings&quot; /&gt;, which typically has specific non-default settings.">Un'istanza di <see cref="T:System.Xaml.XamlXmlWriterSettings" /> che in genere dispone di impostazioni non predefinite specifiche.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;">
        <paramref name="stream" /> o <paramref name="schemaContext" /> è <see langword="null" /></exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; class from a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; basis.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlXmlWriter" /> sulla base di un oggetto <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="textWriter" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; that writes the output.">Oggetto <see cref="T:System.IO.TextWriter" /> che scrive l'output.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for the XAML writer.">Contesto dello schema XAML per il writer XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;textWriter&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="textWriter" /> o <paramref name="schemaContext" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; class from a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; basis using a settings object.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlXmlWriter" /> sulla base di un oggetto <see cref="T:System.IO.TextWriter" /> utilizzando un oggetto impostazioni.</summary>
      <param name="textWriter" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; that writes the output.">Oggetto <see cref="T:System.IO.TextWriter" /> che scrive l'output.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for the XAML writer.">Contesto dello schema XAML per il writer XAML.</param>
      <param name="settings" vsli:raw="An instance of &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterSettings&quot; /&gt;, which typically has specific non-default settings.">Un'istanza di <see cref="T:System.Xaml.XamlXmlWriterSettings" /> che in genere dispone di impostazioni non predefinite specifiche.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;textWriter&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="textWriter" /> o <paramref name="schemaContext" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; class from a &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; basis.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlXmlWriter" /> sulla base di un oggetto <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="xmlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that writes the output.">Oggetto <see cref="T:System.Xml.XmlWriter" /> che scrive l'output.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for the XAML writer.">Contesto dello schema XAML per il writer XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlWriter&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xmlWriter" /> o <paramref name="schemaContext" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; class from a &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; basis using a settings object.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlXmlWriter" /> sulla base di un oggetto <see cref="T:System.Xml.XmlWriter" /> utilizzando un oggetto impostazioni.</summary>
      <param name="xmlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that writes the output.">Oggetto <see cref="T:System.Xml.XmlWriter" /> che scrive l'output.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for the XAML writer.">Contesto dello schema XAML per il writer XAML.</param>
      <param name="settings" vsli:raw="An instance of &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterSettings&quot; /&gt;, which typically has specific non-default settings.">Un'istanza di <see cref="T:System.Xaml.XamlXmlWriterSettings" /> che in genere dispone di impostazioni non predefinite specifiche.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlWriter&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xmlWriter" /> o <paramref name="schemaContext" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; and optionally releases the managed resources.">Rilascia le risorse non gestite utilizzate dall'oggetto <see cref="T:System.Xaml.XamlXmlWriter" /> e facoltativamente le risorse gestite.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release the unmanaged resources; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per rilasciare le risorse non gestite; in caso contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.Flush">
      <summary vsli:raw="Calls the &lt;see langword=&quot;Flush&quot; /&gt; method of the underlying &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; or &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;, which writes anything that is currently in the buffer, and then closes the writer.">Chiama il metodo <see langword="Flush" /> dell'oggetto <see cref="T:System.Xml.XmlWriter" /> o <see cref="T:System.IO.TextWriter" /> sottostante che scrive tutti gli elementi attualmente presenti nel buffer chiudendo poi il writer.</summary>
    </member>
    <member name="P:System.Xaml.XamlXmlWriter.SchemaContext">
      <summary vsli:raw="Gets the XAML schema context that this &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; uses for processing.">Ottiene il contesto dello schema XAML utilizzato dall'oggetto <see cref="T:System.Xaml.XamlXmlWriter" /> per l'elaborazione.</summary>
      <returns vsli:raw="The XAML schema context that this &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; uses for XAML processing.">Il contesto dello schema XAML utilizzato dall'oggetto <see cref="T:System.Xaml.XamlXmlWriter" /> per l'elaborazione XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlWriter.Settings">
      <summary vsli:raw="Gets the writer settings that this &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; uses for XAML processing.">Ottiene le impostazioni del writer utilizzate dall'oggetto <see cref="T:System.Xaml.XamlXmlWriter" /> per l'elaborazione XAML.</summary>
      <returns vsli:raw="The writer settings that this &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; uses for XAML processing.">Le impostazioni del writer utilizzate dall'oggetto <see cref="T:System.Xaml.XamlXmlWriter" /> per l'elaborazione XAML.</returns>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteEndMember">
      <summary vsli:raw="Writes a XAML end member node to the underlying &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; or &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. Throws an exception if the current position of the XAML node stream is not within a member, or if the internal writer state does not support writing to an end member.">Scrive un nodo membro XAML finale nell'oggetto <see cref="T:System.Xml.XmlWriter" /> o <see cref="T:System.IO.TextWriter" /> sottostante. Genera un'eccezione se la posizione corrente del flusso del nodo XAML non è all'interno di un membro o se lo stato del writer interno non supporta la scrittura di un membro finale.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current position of the XAML node stream is not within a member.">La posizione corrente del flusso del nodo XAML non si trova all'interno di un membro.</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException" vsli:raw="The current writer state does not support writing an end member.">Lo stato corrente del writer non supporta la scrittura di un membro finale.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteEndObject">
      <summary vsli:raw="Writes a XAML end object node to the underlying &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; or &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. Throws an exception if the current position of the XAML node stream that is being processed is incompatible with writing an end object.">Scrive un nodo oggetto XAML finale nell'oggetto <see cref="T:System.Xml.XmlWriter" /> o <see cref="T:System.IO.TextWriter" /> sottostante. Genera un'eccezione se la posizione corrente del flusso del nodo XAML in elaborazione è incompatibile con la scrittura di un oggetto finale.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current position of the XAML node stream is not in a scope where an end member can be written.">La posizione corrente del flusso del nodo XAML non si trova nell'ambito di scrittura di un membro finale.</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException" vsli:raw="The current writer state does not support writing an end object.">Lo stato corrente del writer non supporta la scrittura di un oggetto finale.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteGetObject">
      <summary vsli:raw="Writes an object for cases where the specified object is a default or implicit value of the property that is being written, instead of being specified as an object value in the input XAML node set.">Scrive un oggetto per i casi in cui l'oggetto specificato è un valore predefinito o implicito della proprietà da scrivere, anziché un valore da specificare come valore dell'oggetto nel set di nodi XAML di input.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
      <summary vsli:raw="Writes namespace information to the underlying &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; or &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. May throw an exception for certain states; however, may instead defer writing the namespace information until the writer and the XAML node stream that is being processed reaches a position where a XAML namespace declaration can be inserted.">Scrive le informazioni sugli spazi dei nomi nell'oggetto <see cref="T:System.Xml.XmlWriter" /> o <see cref="T:System.IO.TextWriter" /> sottostante. Potrebbe generare un'eccezione per specifici stati, tuttavia può rinviare la scrittura delle informazioni sullo spazio dei nomi finché il writer e il flusso del nodo XAML in elaborazione non raggiunge una posizione in cui sia possibile inserire la dichiarazione di uno spazio dei nomi XAML.</summary>
      <param name="namespaceDeclaration" vsli:raw="The XAML namespace declaration to write.">Dichiarazione dello spazio dei nomi XAML da scrivere.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;namespaceDeclaration&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="namespaceDeclaration" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;namespaceDeclaration&quot; /&gt; is not a valid XAML namespace declaration (has a null prefix or null identifier component).">
        <paramref name="namespaceDeclaration" /> non è una dichiarazione dello spazio dei nomi XAML valida (presenta un prefisso Null o un componente Identifier Null).</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException" vsli:raw="The current writer state does not support writing a XAML namespace declaration.">Lo stato corrente del writer non supporta la scrittura di una dichiarazione dello spazio dei nomi XAML.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteStartMember(System.Xaml.XamlMember)">
      <summary vsli:raw="Writes a XAML start member node to the underlying &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; or &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. Throws an exception if the current position of the XAML node stream is within another member, or if it is not in a scope or writer state where a start member can be written.">Scrive un nodo membro XAML iniziale nell'oggetto <see cref="T:System.Xml.XmlWriter" /> o <see cref="T:System.IO.TextWriter" /> sottostante. Genera un'eccezione se la posizione corrente del flusso del nodo XAML è all'interno di un altro membro o non è in uno stato dell'ambito o del writer che consente la scrittura di un membro iniziale.</summary>
      <param name="property" vsli:raw="The XAML member identifier for the member to write.">Identificatore del membro XAML per il membro da scrivere.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;property&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="property" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;property&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">
        <paramref name="property" /> non è un oggetto <see cref="T:System.Xaml.XamlMember" /> valido.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current position of the XAML node stream is invalid for writing a start member.">La posizione corrente del flusso del nodo XAML non è valida per la scrittura di un membro iniziale.</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException" vsli:raw="The writer state is not valid for writing a start member.  &#xA;  &#xA; -or-  &#xA;  &#xA; The XAML writer attempted to write a duplicate member. This exception may have a more precise inner exception.">Lo stato del writer non è valido per la scrittura di un membro iniziale.  
 -oppure-  
 Il writer XAML ha tentato di scrivere un membro duplicato. È possibile che questa eccezione disponga di un'eccezione interna più precisa.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteStartObject(System.Xaml.XamlType)">
      <summary vsli:raw="Writes a XAML start object node to the underlying &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; or &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. Throws an exception if the current position of the XAML node stream is not in a scope where a start object can be written, or if the writer is not in a state that can write a start object.">Scrive un nodo oggetto XAML iniziale nell'oggetto <see cref="T:System.Xml.XmlWriter" /> o <see cref="T:System.IO.TextWriter" /> sottostante. Genera un'eccezione se la posizione corrente del flusso del nodo XAML non è in un ambito in cui sia possibile scrivere un oggetto iniziale e se il writer non è in uno stato che consente la scrittura di un oggetto iniziale.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; (XAML type identifier) for the object to write.">Identificatore del tipo XAML <see cref="T:System.Xaml.XamlType" /> per l'oggetto da scrivere.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">
        <paramref name="type" /> non è un oggetto <see cref="T:System.Xaml.XamlType" /> valido.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current position of the XAML node stream is not valid for writing a new start object.">La posizione corrente del flusso di nodo XAML non è valida per la scrittura di un nuovo oggetto iniziale.</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException" vsli:raw="The state of the XAML writer is not valid for writing a new start object.">Lo stato del writer XAML non è valido per la scrittura di un nuovo oggetto iniziale.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteValue(System.Object)">
      <summary vsli:raw="Writes a XAML value node to the underlying &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; or &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. Throws an exception if the current position of the XAML node stream is invalid for writing a value, or the writer is in a state where a value cannot be written.">Scrive un nodo valore XAML nell'oggetto <see cref="T:System.Xml.XmlWriter" /> o <see cref="T:System.IO.TextWriter" /> sottostante. Genera un'eccezione se la posizione corrente del flusso del nodo XAML non è valida la scrittura di un valore e se lo stato del writer non supporta la scrittura di un valore.</summary>
      <param name="value" vsli:raw="The value information to write.">Informazioni sul valore da scrivere.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current position of the XAML node stream is not valid for writing a value.">La posizione corrente del flusso del nodo XAML non è valida per la scrittura di un valore.</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException" vsli:raw="The XAML writer state does not support the writing of a value node.">Lo stato di writer di XAML non supporta la scrittura di un nodo del valore.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; specifies a value that is not null or a string.">
        <paramref name="value" /> specifica un valore che non è null né una stringa.</exception>
    </member>
    <member name="T:System.Xaml.XamlXmlWriterException">
      <summary vsli:raw="The exception that is thrown by certain &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; APIs.">Eccezione generata da certe API di <see cref="T:System.Xaml.XamlXmlWriter" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterException&quot; /&gt; class with a system-supplied message that describes the error.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlXmlWriterException" /> con un messaggio fornito dal sistema in cui viene descritto l'errore.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterException&quot; /&gt; class with serialized data.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlXmlWriterException" /> con dati serializzati.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Oggetto che contiene i dati oggetto serializzati.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Informazioni contestuali sull'origine o sulla destinazione.</param>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterException&quot; /&gt; class with a specified message that describes the error.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlXmlWriterException" /> con un messaggio specificato in cui viene descritto l'errore.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Messaggio in cui viene descritta l'eccezione. Il chiamante del costruttore deve garantire che la stringa sia stata localizzata in base alle impostazioni cultura correnti del sistema.</param>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlXmlWriterException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Messaggio in cui viene descritta l'eccezione. Il chiamante del costruttore deve garantire che la stringa sia stata localizzata in base alle impostazioni cultura correnti del sistema.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Eccezione che ha determinato l'eccezione corrente. Se il parametro <paramref name="innerException" /> non è <see langword="null" />, l'eccezione corrente viene generata in un blocco <see langword="catch" /> in cui viene gestita l'eccezione interna.</param>
    </member>
    <member name="T:System.Xaml.XamlXmlWriterSettings">
      <summary vsli:raw="Provides initialization settings for the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; XAML writer implementation.">Fornisce le impostazioni di inizializzazione per l'implementazione del writer XAML <see cref="T:System.Xaml.XamlXmlWriter" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterSettings&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xaml.XamlXmlWriterSettings" />.</summary>
    </member>
    <member name="P:System.Xaml.XamlXmlWriterSettings.AssumeValidInput">
      <summary vsli:raw="Gets or sets a value that specifies whether the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; should always assume valid XAML input for purposes of duplicate resolution or other error checking.">Ottiene o imposta un valore che specifica se l'oggetto <see cref="T:System.Xaml.XamlXmlWriter" /> deve sempre presupporre un input XAML valido per la risoluzione di duplicati o per il controllo di altri errori.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; skips certain validation or error checks, such as throwing exceptions on duplicate members. &lt;see langword=&quot;false&quot; /&gt; if the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; throws exceptions when invalid XAML is encountered. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per fare in modo che l'oggetto <see cref="T:System.Xaml.XamlXmlWriter" /> ignori determinati controlli di convalida o di errori, ad esempio la generazione di eccezioni per membri duplicati. <see langword="false" /> per fare in modo che l'oggetto <see cref="T:System.Xaml.XamlXmlWriter" /> generi eccezioni quando si incontra XAML non valido. Il valore predefinito è <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlWriterSettings.CloseOutput">
      <summary vsli:raw="Gets or sets a value that specifies whether the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; should close immediately on &lt;see langword=&quot;Dispose&quot; /&gt; or other operations, or whether the XAML writer should instead write the buffer output before closing. Use this setting with caution; closing immediately can result in invalid XAML that cannot be loaded again.">Ottiene o imposta un valore che specifica se l'oggetto <see cref="T:System.Xaml.XamlXmlWriter" /> deve essere chiuso immediatamente in presenza di <see langword="Dispose" /> o di altre operazioni oppure se il writer XAML deve scrivere l'output del buffer prima della chiusura. Utilizzare questa impostazione con attenzione; la chiusura immediata può comportare XAML non valido che non può essere caricato nuovamente.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; immediately closes on a &lt;see langword=&quot;Dispose&quot; /&gt; or similar operations. &lt;see langword=&quot;false&quot; /&gt; if the remaining buffer output is written before the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; is released. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Xaml.XamlXmlWriter" /> viene chiuso immediatamente in presenza di <see langword="Dispose" /> o di operazioni simili. <see langword="false" /> se viene scritto l'output del buffer rimanente prima che <see cref="T:System.Xaml.XamlXmlWriter" /> sia rilasciato. Il valore predefinito è <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterSettings.Copy">
      <summary vsli:raw="Returns a copy of this &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterSettings&quot; /&gt; instance.">Restituisce una copia dell'istanza di <see cref="T:System.Xaml.XamlXmlWriterSettings" />.</summary>
      <returns vsli:raw="The returned copy.">Copia restituita.</returns>
    </member>
  </members>
</doc>