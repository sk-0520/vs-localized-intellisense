<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Diagnostics.EventLog</name>
  </assembly>
  <members>
    <member name="T:System.Diagnostics.EntryWrittenEventArgs">
      <summary>
        <see cref="E:System.Diagnostics.EventLog.EntryWritten" /> 이벤트에 대한 데이터를 제공합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.EntryWrittenEventArgs.#ctor">
      <summary>
        <see cref="T:System.Diagnostics.EntryWrittenEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.EntryWrittenEventArgs.#ctor(System.Diagnostics.EventLogEntry)">
      <summary>지정된 이벤트 로그 엔트리를 사용하여 <see cref="T:System.Diagnostics.EntryWrittenEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="entry">쓰여진 엔트리를 나타내는 <see cref="T:System.Diagnostics.EventLogEntry" />입니다.</param>
    </member>
    <member name="P:System.Diagnostics.EntryWrittenEventArgs.Entry">
      <summary>로그에 쓰여진 이벤트 로그 엔트리를 가져옵니다.</summary>
      <returns>이벤트 로그에 쓰여진 엔트리를 나타내는 <see cref="T:System.Diagnostics.EventLogEntry" />입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.EntryWrittenEventHandler">
      <summary>
        <see cref="T:System.Diagnostics.EventLog" />의 <see cref="E:System.Diagnostics.EventLog.EntryWritten" /> 이벤트를 처리할 메서드를 나타냅니다.</summary>
      <param name="sender">이벤트 소스입니다.</param>
      <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Diagnostics.EntryWrittenEventArgs" />입니다.</param>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventBookmark">
      <summary>이벤트 스트림 내의 자리 표시자(책갈피)를 나타냅니다. 자리 표시자를 사용하여 이벤트 스트림에서 위치를 표시하고 해당 위치로 돌아갈 수 있습니다. <see cref="T:System.Diagnostics.Eventing.Reader.EventRecord" /> 개체에서 이 개체의 인스턴스를 가져올 수 있으며, 이때 이 개체의 위치는 해당 이벤트 레코드의 위치와 일치합니다.</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventKeyword">
      <summary>이벤트의 키워드를 나타냅니다. 키워드는 이벤트 공급자에 정의되며, 이벤트의 용도에 따라 비슷한 이벤트를 서로 그룹화할 때 사용됩니다.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventKeyword.DisplayName">
      <summary>키워드의 지역화된 이름을 가져옵니다.</summary>
      <returns>이 키워드의 지역화 된 이름을 포함 하는 문자열입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventKeyword.Name">
      <summary>키워드의 지역화되지 않은 이름을 가져옵니다.</summary>
      <returns>이 키워드의 지역화 되지 않은 이름을 포함 하는 문자열입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventKeyword.Value">
      <summary>키워드에 연결된 숫자 값을 가져옵니다.</summary>
      <returns>키워드와 연결 된 숫자 값입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLevel">
      <summary>이벤트 공급자에 정의된 이벤트 수준이 들어 있습니다. 이 수준은 이벤트의 심각도를 나타냅니다.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLevel.DisplayName">
      <summary>이벤트 수준의 지역화된 이름을 가져옵니다. 이 이름은 해당 수준이 사용되는 이벤트의 심각도 수준을 설명합니다.</summary>
      <returns>이벤트 수준의 지역화 된 이름을 포함 하는 문자열입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLevel.Name">
      <summary>이벤트 수준의 지역화되지 않은 이름을 가져옵니다.</summary>
      <returns>이벤트 수준의 지역화 되지 않은 이름을 포함 하는 문자열입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLevel.Value">
      <summary>이벤트 수준의 숫자 값을 가져옵니다.</summary>
      <returns>이벤트 수준의 숫자 값입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration">
      <summary>이벤트 로그에 대한 정적 정보 및 구성 설정이 들어 있습니다. 구성 설정 중 다수는 로그를 만든 이벤트 공급자에 의해 정의됩니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.#ctor(System.String)">
      <summary>정보 및 구성 설정을 가져올 로컬 이벤트 로그를 지정하여 새 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" /> 개체를 초기화합니다.</summary>
      <param name="logName">정보 및 구성 설정을 가져올 로컬 이벤트 로그의 이름입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.#ctor(System.String,System.Diagnostics.Eventing.Reader.EventLogSession)">
      <summary>정보 및 구성 설정을 가져올 로그의 이름을 지정하여 새 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" /> 개체를 초기화합니다. 지정된 이벤트 로그 세션에 따라 로그가 로컬 컴퓨터 또는 원격 컴퓨터에 있을 수 있습니다.</summary>
      <param name="logName">정보 및 구성 설정을 가져올 이벤트 로그의 이름입니다.</param>
      <param name="session">지정된 로그가 속하는 이벤트 로그 서비스를 확인하는 데 사용할 이벤트 로그 세션입니다. 세션은 로컬 컴퓨터 또는 원격 컴퓨터의 이벤트 로그 서비스에 연결됩니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose">
      <summary>이 개체에서 사용하는 리소스를 모두 해제합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose(System.Boolean)">
      <summary>이 개체에서 사용하는 관리되지 않는 리소스를 해제하고 관리되는 리소스를 선택적으로 해제합니다.</summary>
      <param name="disposing">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.IsClassicLog">
      <summary>이벤트 로그가 클래식 이벤트 로그인지 여부를 나타내는 값을 가져옵니다. 클래식 이벤트 로그는 이벤트 공급자에서 사용하는 매니페스트(.xml 파일)가 아닌 .mc 파일에 이벤트가 정의된 로그입니다.</summary>
      <returns>
        <see langword="true" />이벤트 로그가 클래식 로그 이면이 고, 그렇지 않으면입니다. 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.IsEnabled">
      <summary>이벤트 로그를 사용할지 여부를 나타내는 값을 가져오거나 설정합니다. 활성화된 로그는 이벤트를 기록할 수 있는 로그이고, 비활성화된 로그는 이벤트를 기록할 수 없는 로그입니다.</summary>
      <returns>
        <see langword="true" />로그를 사용할 수 있으면이 고, 그렇지 않으면입니다. 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogFilePath">
      <summary>로그의 이벤트가 저장되는 파일의 위치에 대한 파일 디렉터리 경로를 가져오거나 설정합니다.</summary>
      <returns>이벤트 로그 파일의 경로를 포함 하는 문자열입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogIsolation">
      <summary>이벤트 로그가 애플리케이션, 시스템 또는 사용자 지정 이벤트 로그인지 여부를 지정하는 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogIsolation" /> 값을 가져옵니다.</summary>
      <returns>열거형 값 중 하나입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogMode">
      <summary>이벤트 로그가 가득 찰 때 이벤트가 처리되는 방법을 결정하는 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogMode" /> 값을 가져오거나 설정합니다.</summary>
      <returns>열거형 값 중 하나입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogName">
      <summary>이벤트 로그의 이름을 가져옵니다.</summary>
      <returns>이벤트 로그 이름입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogType">
      <summary>이벤트 로그의 형식을 결정하는 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogType" /> 값을 가져옵니다.</summary>
      <returns>열거형 값 중 하나입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.MaximumSizeInBytes">
      <summary>이벤트 로그 파일의 최대 허용 크기(바이트)를 가져오거나 설정합니다. 이 최대 크기에 도달한 파일은 가득 찬 것으로 간주됩니다.</summary>
      <returns>이벤트 로그 파일에 허용 되는 최대 크기 (바이트)입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.OwningProviderName">
      <summary>이 이벤트 로그를 만든 이벤트 공급자의 이름을 가져옵니다.</summary>
      <returns>이 이벤트 로그를 만든 이벤트 공급자의 이름입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderBufferSize">
      <summary>이벤트 공급자가 로그에 이벤트를 게시하는 데 사용하는 버퍼의 크기를 가져옵니다.</summary>
      <returns>이벤트 공급자가 로그에 이벤트를 게시 하는 데 사용 하는 버퍼의 크기입니다. <see langword="null" />일 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderControlGuid">
      <summary>로그가 디버그 로그인 경우 이벤트 로그의 제어 GUID(Globally Unique Identifier)를 가져옵니다. 이 로그가 디버그 로그가 아닌 경우 이 값은 <see langword="null" />입니다.</summary>
      <returns>GUID 값 또는 <see langword="null" /> 로그가 디버그 로그가 아닌 경우입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderKeywords">
      <summary>이벤트 공급자에서 사용하는 키워드 마스크를 가져오거나 설정합니다.</summary>
      <returns>이벤트 공급자가 사용 하는 키워드 마스크 이거나 <see langword="null" /> , 이벤트 공급자가 키워드를 정의 하지 않은 경우입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderLatency">
      <summary>이벤트 공급자가 로그에 이벤트를 게시할 때 사용되는 최대 대기 시간을 가져옵니다.</summary>
      <returns>이벤트 공급자가 로그에 이벤트를 <see langword="null" /> 게시할 때 사용 하는 최대 대기 시간 시간이 며 이벤트 공급자가 대기 시간을 지정 하지 않은 경우에는입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderLevel">
      <summary>이벤트 로그에 기록될 수 있는 이벤트의 심각도를 정의하는 최대 이벤트 수준을 가져오거나 설정합니다. 이 값은 이벤트 공급자에서 정의합니다.</summary>
      <returns>이벤트 로그에 기록할 수 있는 최대 이벤트 수준 이거나 <see langword="null" /> , 이벤트 공급자에 최대 이벤트 수준이 정의 되어 있지 않은 경우입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderMaximumNumberOfBuffers">
      <summary>이벤트 공급자가 이벤트 로그에 이벤트를 게시할 때 사용되는 최대 버퍼 수를 가져옵니다.</summary>
      <returns>이벤트 공급자가 이벤트 로그에 이벤트를 게시 하는 데 사용 하는 최대 버퍼 수입니다. 이 값은 <see langword="null" />일 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderMinimumNumberOfBuffers">
      <summary>이벤트 공급자가 이벤트 로그에 이벤트를 게시할 때 사용되는 최소 버퍼 수를 가져옵니다.</summary>
      <returns>이벤트 공급자가 이벤트 로그에 이벤트를 게시 하는 데 사용 하는 최소 버퍼 수입니다. 이 값은 <see langword="null" />일 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderNames">
      <summary>이 이벤트 로그에 이벤트를 게시할 수 있는 모든 이벤트 공급자 이름의 열거 가능한 컬렉션을 가져옵니다.</summary>
      <returns>이벤트 공급자 이름이 들어 있는 열거 가능한 문자열 컬렉션입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges">
      <summary>구성 설정을 저장합니다.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SecurityDescriptor">
      <summary>이벤트 로그의 보안 설명자를 가져오거나 설정합니다. 보안 설명자는 이벤트 로그에서 읽고 쓸 수 있는 사용자 및 사용자 그룹을 정의합니다.</summary>
      <returns>이벤트 로그의 보안 설명자를 포함 하는 문자열입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogException">
      <summary>이벤트 로그 관련 정보를 읽을 때 오류가 발생하는 경우 throw되는 모든 예외에 대한 기본 클래스를 나타냅니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor">
      <summary>
        <see cref="T:System.Diagnostics.Eventing.Reader.EventLogException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.Int32)">
      <summary>예외에 대한 오류 코드를 사용하여 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="errorCode">이벤트 로그 관련 정보를 읽거나 구성할 때 발생한 오류의 오류 코드입니다. 자세한 내용과 이벤트 로그 관련 오류 코드의 목록은 http://go.microsoft.com/fwlink/?LinkId=82629를 참조하세요.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>serialize된 데이터를 사용하여 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="serializationInfo">발생되는 예외에 대해 직렬화된 개체 데이터를 보유하는 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체입니다.</param>
      <param name="streamingContext">소스 또는 대상에 대한 컨텍스트 정보를 포함하는 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 개체입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.String)">
      <summary>현재 예외를 설명하는 오류 메시지를 지정하여 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">현재 예외를 설명하는 오류 메시지입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.String,System.Exception)">
      <summary>오류 및 내부 예외를 사용하여 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">현재 예외를 설명하는 오류 메시지입니다.</param>
      <param name="innerException">현재 예외를 발생시킨 예외 인스턴스입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>SerializationInfo 개체를 예외에 대한 정보로 설정합니다.</summary>
      <param name="info">throw되는 예외에 대해 serialize된 개체 데이터를 보유하는 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체입니다.</param>
      <param name="context">소스 또는 대상에 대한 컨텍스트 정보를 포함하는 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 개체입니다.</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogException.Message">
      <summary>현재 예외를 설명하는 오류 메시지를 가져옵니다.</summary>
      <returns>현재 예외를 설명하는 오류 메시지가 들어 있는 문자열을 반환합니다.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogInformation">
      <summary>활성 이벤트 로그 및 이벤트 로그 파일의 런타임 속성에 액세스할 수 있습니다. 이러한 속성에는 로그의 이벤트 수, 로그 크기, 로그가 가득 찼는지 여부를 결정하는 값 및 로그가 마지막으로 기록되거나 액세스된 시간 등이 있습니다.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.Attributes">
      <summary>로그에 연결된 로그 파일의 파일 특성을 가져옵니다.</summary>
      <returns>정수 값을 반환합니다. 이 값은 null일 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.CreationTime">
      <summary>이벤트 로그에 연결된 로그 파일이 만들어진 시간을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.DateTime" /> 개체를 반환합니다. 이 값은 null일 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.FileSize">
      <summary>이벤트 로그에 연결된 파일의 크기(바이트)를 가져옵니다.</summary>
      <returns>long 값을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.IsLogFull">
      <summary>로그 파일이 최대 크기에 도달하여 가득 찼는지 여부를 결정하는 부울 값을 가져옵니다.</summary>
      <returns>로그가 가득 찼으면 <see langword="true" />를, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.LastAccessTime">
      <summary>이벤트 로그에 연결된 로그 파일이 마지막으로 액세스된 시간을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.DateTime" /> 개체를 반환합니다. 이 값은 null일 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.LastWriteTime">
      <summary>이벤트 로그에 연결된 로그 파일에 마지막으로 데이터가 기록된 시간을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.DateTime" /> 개체를 반환합니다. 이 값은 null일 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.OldestRecordNumber">
      <summary>이벤트 로그에서 가장 오래된 이벤트 레코드의 번호를 가져옵니다.</summary>
      <returns>이벤트 로그에서 가장 오래된 이벤트 레코드의 번호를 나타내는 long 값을 반환합니다. 이 값은 null일 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.RecordCount">
      <summary>이벤트 로그의 이벤트 레코드 개수를 가져옵니다.</summary>
      <returns>이벤트 로그의 이벤트 레코드 개수를 나타내는 long 값을 반환합니다. 이 값은 null일 수 있습니다.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException">
      <summary>이벤트 공급자가 이벤트에 잘못된 데이터를 게시할 때 throw되는 예외를 나타냅니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor">
      <summary>
        <see cref="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>serialize된 데이터를 사용하여 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="serializationInfo">throw되는 예외에 대해 serialize된 개체 데이터를 보유하는 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체입니다.</param>
      <param name="streamingContext">소스 또는 대상에 대한 컨텍스트 정보를 포함하는 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 개체입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor(System.String)">
      <summary>현재 예외를 설명하는 오류 메시지를 지정하여 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">현재 예외를 설명하는 오류 메시지입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor(System.String,System.Exception)">
      <summary>오류 및 내부 예외를 사용하여 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">현재 예외를 설명하는 오류 메시지입니다.</param>
      <param name="innerException">현재 예외를 발생시킨 예외 인스턴스입니다.</param>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogIsolation">
      <summary>이벤트 로그에 대한 기본 액세스 권한을 정의합니다. 값이 Application 및 System이면 로그가 해당 Windows 로그(애플리케이션 또는 시스템 이벤트 로그)와 ACL(액세스 제어 목록)을 공유하고 동일하게 격리된 다른 로그와 ETW(Event Tracing for Windows) 세션을 공유합니다. Custom 격리가 적용되는 모든 채널은 프라이빗 ETW 세션을 사용합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogIsolation.Application">
      <summary>로그가 애플리케이션 이벤트 로그와 액세스 제어 목록을 공유하고 Application 격리가 적용된 다른 로그와 ETW 세션을 공유합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogIsolation.Custom">
      <summary>이벤트 로그가 프라이빗 ETW 세션을 사용하는 사용자 지정 이벤트 로그입니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogIsolation.System">
      <summary>로그가 시스템 이벤트 로그와 액세스 제어 목록을 공유하고 System 격리가 적용된 다른 로그와 ETW 세션을 공유합니다.</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogLink">
      <summary>이벤트 공급자와 공급자가 이벤트를 게시하는 이벤트 로그 사이의 링크를 나타냅니다. 이 개체는 인스턴스화할 수 없습니다.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogLink.DisplayName">
      <summary>이벤트 로그의 지역화된 이름을 가져옵니다.</summary>
      <returns>이벤트 로그의 지역화된 이름이 들어 있는 문자열을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogLink.IsImported">
      <summary>이벤트 로그가 이벤트 공급자에 정의되어 있지 않고 이벤트 로그를 가져왔는지 여부를 나타내는 부울 값을 가져옵니다. 가져온 이벤트 로그는 다른 공급자에 정의됩니다.</summary>
      <returns>이벤트 공급자가 이벤트 로그를 가져왔으면 <see langword="true" />를 반환하고, 이벤트 공급자 이벤트 로그를 가져오지 않았으면 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogLink.LogName">
      <summary>이 개체에 연결된 이벤트 로그의 지역화되지 않은 이름을 가져옵니다.</summary>
      <returns>이 개체에 연결된 이벤트 로그의 지역화되지 않은 이름이 들어 있는 문자열을 반환합니다.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogMode">
      <summary>로그가 최대 허용 크기에 도달하여 이벤트 로그가 가득 찰 때 이벤트 로그 서비스에서 이벤트 로그를 처리하는 동작을 결정합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogMode.AutoBackup">
      <summary>가득 찬 로그를 보관하고 이벤트를 덮어쓰지 않습니다. 로그는 필요에 따라 자동으로 보관되며 어떠한 이벤트도 덮어쓰지 않습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogMode.Circular">
      <summary>로그 파일이 가득 차도 새 이벤트가 계속 저장됩니다. 들어오는 새 이벤트는 각각 로그에서 가장 오래된 이벤트를 대체합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogMode.Retain">
      <summary>이벤트를 덮어쓰지 않습니다. 로그를 자동이 아니라 수동으로 지웁니다.</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException">
      <summary>일반적으로 이벤트 로그의 이름 또는 이벤트 로그 파일에 대한 경로로 지정되는 요청된 이벤트 로그가 없을 때 throw되는 예외를 나타냅니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor">
      <summary>
        <see cref="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>serialize된 데이터를 사용하여 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="serializationInfo">throw되는 예외에 대해 serialize된 개체 데이터를 보유하는 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체입니다.</param>
      <param name="streamingContext">소스 또는 대상에 대한 컨텍스트 정보를 포함하는 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 개체입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor(System.String)">
      <summary>현재 예외를 설명하는 오류 메시지를 지정하여 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">현재 예외를 설명하는 오류 메시지입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor(System.String,System.Exception)">
      <summary>오류 및 내부 예외를 사용하여 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">현재 예외를 설명하는 오류 메시지입니다.</param>
      <param name="innerException">현재 예외를 발생시킨 예외 인스턴스입니다.</param>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogPropertySelector">
      <summary>이벤트 스키마에 따른 이벤트의 XML 표현에서 요소에 대한 XPath 쿼리를 나타내는 문자열 배열이 들어 있습니다. 이 개체의 쿼리는 이벤트에서 값을 추출하는 데 사용됩니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogPropertySelector.#ctor(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
        <see cref="T:System.Diagnostics.Eventing.Reader.EventLogPropertySelector" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="propertyQueries">이벤트의 XML 표현에서 값을 추출하는 데 사용되는 XPath 쿼리입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogPropertySelector.Dispose">
      <summary>이 개체에서 사용하는 리소스를 모두 해제합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogPropertySelector.Dispose(System.Boolean)">
      <summary>이 개체에서 사용하는 관리되지 않는 리소스를 해제하고 관리되는 리소스를 선택적으로 해제합니다.</summary>
      <param name="disposing">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException">
      <summary>지정된 이벤트 공급자 이름이 참조하는 이벤트 공급자를 사용할 수 없을 때 throw되는 예외를 나타냅니다. 사용할 수 없는 이벤트 공급자는 이벤트를 게시할 수 없습니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor">
      <summary>
        <see cref="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>serialize된 데이터를 사용하여 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="serializationInfo">throw되는 예외에 대해 serialize된 개체 데이터를 보유하는 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체입니다.</param>
      <param name="streamingContext">소스 또는 대상에 대한 컨텍스트 정보를 포함하는 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 개체입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor(System.String)">
      <summary>현재 예외를 설명하는 오류 메시지를 지정하여 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">현재 예외를 설명하는 오류 메시지입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor(System.String,System.Exception)">
      <summary>오류 및 내부 예외를 사용하여 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">현재 예외를 설명하는 오류 메시지입니다.</param>
      <param name="innerException">현재 예외를 발생시킨 예외 인스턴스입니다.</param>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogQuery">
      <summary>이벤트 로그의 이벤트에 대한 쿼리 및 쿼리 실행 방법과 쿼리를 실행할 컴퓨터를 정의하는 설정을 나타냅니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)">
      <summary>쿼리의 대상을 지정하여 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogQuery" /> 클래스의 새 인스턴스를 초기화합니다. 대상은 활성 이벤트 로그 또는 로그 파일이 될 수 있습니다.</summary>
      <param name="path">쿼리할 이벤트 로그의 이름 또는 쿼리할 이벤트 로그 파일에 대한 경로입니다.</param>
      <param name="pathType">경로 매개 변수에 사용되는 문자열이 이벤트 로그의 이름을 지정하는지 또는 이벤트 로그 파일의 경로를 지정하는지 여부를 지정합니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String)">
      <summary>쿼리의 대상 및 이벤트 쿼리를 지정하여 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogQuery" /> 클래스의 새 인스턴스를 초기화합니다. 대상은 활성 이벤트 로그 또는 로그 파일이 될 수 있습니다.</summary>
      <param name="path">쿼리할 이벤트 로그의 이름 또는 쿼리할 이벤트 로그 파일에 대한 경로입니다.</param>
      <param name="pathType">경로 매개 변수에 사용되는 문자열이 이벤트 로그의 이름을 지정하는지 또는 이벤트 로그 파일의 경로를 지정하는지 여부를 지정합니다.</param>
      <param name="query">쿼리 조건과 일치하는 이벤트를 검색하는 데 사용되는 이벤트 쿼리입니다.</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogQuery.ReverseDirection">
      <summary>이벤트 로그에서 가장 새로운 이벤트부터 가장 오래된 이벤트 순서로 이벤트를 읽을지 여부를 결정하는 부울 값을 가져오거나 설정합니다.</summary>
      <returns>로그에서 가장 새로운 이벤트부터 가장 오래된 이벤트 순서로 이벤트를 읽는 경우 <see langword="true" />를 반환하고, 로그에서 가장 오래된 이벤트부터 가장 새로운 이벤트 순서로 이벤트를 읽는 경우 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogQuery.Session">
      <summary>로컬 컴퓨터 또는 원격 컴퓨터의 이벤트 로그 서비스에 액세스하는 세션을 가져오거나 설정합니다. 이 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" /> 개체를 사용하여 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" /> 개체 또는 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogQuery" /> 개체를 만들면 이 개체로 원격 이벤트 로그에 액세스하도록 설정할 수 있습니다.</summary>
      <returns>
        <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" /> 개체를 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogQuery.TolerateQueryErrors">
      <summary>쿼리에 오류가 있는 경우 이 쿼리에서 이벤트를 계속 검색할지 여부를 결정하는 부울 값을 가져오거나 설정합니다.</summary>
      <returns>일부 로그에서 쿼리가 실패해도 쿼리에서 이벤트를 계속 검색하면 <see langword="true" />이고, 쿼리가 실패할 때 이 쿼리에서 더 이상 이벤트를 검색하지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogReader">
      <summary>이벤트 쿼리에 따라 이벤트 로그에서 이벤트를 읽을 수 있습니다. 이 개체가 읽는 이벤트는 <see cref="T:System.Diagnostics.Eventing.Reader.EventRecord" /> 개체로 반환됩니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery)">
      <summary>이벤트 쿼리를 지정하여 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="eventQuery">이벤트를 검색하는 데 사용할 이벤트 쿼리입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark)">
      <summary>이벤트 쿼리 및 쿼리의 시작 위치로 사용되는 책갈피를 지정하여 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="eventQuery">이벤트를 검색하는 데 사용할 이벤트 쿼리입니다.</param>
      <param name="bookmark">이벤트 로그 또는 이벤트 스트림의 시작 위치로 사용되는 책갈피(자리 표시자)입니다. 책갈피 이벤트보다 나중에 기록되는 이벤트만 쿼리에서 반환됩니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String)">
      <summary>이벤트를 검색할 활성 이벤트 로그를 지정하여 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="path">이벤트를 검색할 이벤트 로그의 이름입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)">
      <summary>이벤트를 검색할 이벤트 로그의 이름 또는 이벤트를 검색할 로그 파일에 대한 경로를 지정하여 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="path">이벤트를 검색할 이벤트 로그의 이름 또는 이벤트를 검색할 이벤트 로그 파일에 대한 경로입니다.</param>
      <param name="pathType">경로 매개 변수에 사용되는 문자열이 이벤트 로그의 이름을 지정하는지 또는 이벤트 로그 파일의 경로를 지정하는지 여부를 지정합니다.</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogReader.BatchSize">
      <summary>모든 읽기 작업에서 이벤트 스트림으로부터 검색할 이벤트 수를 가져오거나 설정합니다.</summary>
      <returns>정수 값을 반환합니다.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.CancelReading">
      <summary>현재 쿼리 작업을 취소합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.Dispose">
      <summary>이 개체에서 사용하는 리소스를 모두 해제합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.Dispose(System.Boolean)">
      <summary>이 개체에서 사용하는 관리되지 않는 리소스를 해제하고 관리되는 리소스를 선택적으로 해제합니다.</summary>
      <param name="disposing">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogReader.LogStatus">
      <summary>이 개체의 이벤트 쿼리에 연결된 각 이벤트 로그 또는 로그 파일의 상태를 가져옵니다.</summary>
      <returns>이 개체의 이벤트 쿼리에 연결된 이벤트 로그에 대한 상태 정보가 각각 들어 있는 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogStatus" /> 개체의 목록을 반환합니다.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent">
      <summary>이 개체의 이벤트 쿼리에서 반환된 다음 이벤트를 읽습니다.</summary>
      <returns>
        <see cref="T:System.Diagnostics.Eventing.Reader.EventRecord" /> 개체를 반환합니다.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent(System.TimeSpan)">
      <summary>이 개체의 이벤트 쿼리에서 반환된 다음 이벤트를 읽습니다.</summary>
      <param name="timeout">작업을 취소하기 전에 읽기 작업이 실행될 수 있는 최대 시간입니다.</param>
      <returns>
        <see cref="T:System.Diagnostics.Eventing.Reader.EventRecord" /> 개체를 반환합니다.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark)">
      <summary>책갈피 이벤트를 지정하여 이벤트 스트림에서 다음 이벤트를 읽어올 위치를 변경합니다. 책갈피 이벤트보다 먼저 기록된 이벤트는 검색되지 않습니다.</summary>
      <param name="bookmark">이벤트 로그 또는 이벤트 스트림의 시작 위치로 사용되는 책갈피(자리 표시자)입니다. 책갈피 이벤트보다 나중에 기록되는 이벤트만 쿼리에서 반환됩니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark,System.Int64)">
      <summary>책갈피 이벤트 및 책갈피를 기준으로 하는 오프셋 이벤트 개수를 지정하여 이벤트 스트림에서 다음 이벤트를 읽어올 위치를 변경합니다. 책갈피에 오프셋을 더한 이벤트보다 먼저 기록된 이벤트는 검색되지 않습니다.</summary>
      <param name="bookmark">이벤트 로그 또는 이벤트 스트림의 시작 위치로 사용되는 책갈피(자리 표시자)입니다. 책갈피 이벤트보다 나중에 기록되는 이벤트만 쿼리에서 반환됩니다.</param>
      <param name="offset">책갈피의 위치를 변경할 오프셋 이벤트 개수입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.IO.SeekOrigin,System.Int64)">
      <summary>시작 위치 및 시작 위치를 기준으로 하는 오프셋을 지정하여 이벤트 스트림에서 다음 이벤트를 읽어올 위치를 변경합니다. 시작 위치에 오프셋을 더한 위치보다 먼저 기록된 이벤트는 검색되지 않습니다.</summary>
      <param name="origin">이벤트 스트림에서 이벤트 쿼리를 시작할 위치를 정의하는 <see cref="T:System.IO.SeekOrigin" /> 열거형 값입니다.</param>
      <param name="offset">원래 위치에 더할 오프셋 이벤트 개수입니다.</param>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogReadingException">
      <summary>이벤트 로그의 이벤트를 읽거나 쿼리하거나 구독할 때 오류가 발생한 경우 throw되는 예외를 나타냅니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor">
      <summary>
        <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReadingException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>serialize된 데이터를 사용하여 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReadingException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="serializationInfo">throw되는 예외에 대해 serialize된 개체 데이터를 보유하는 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체입니다.</param>
      <param name="streamingContext">소스 또는 대상에 대한 컨텍스트 정보를 포함하는 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 개체입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor(System.String)">
      <summary>현재 예외를 설명하는 오류 메시지를 지정하여 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReadingException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">현재 예외를 설명하는 오류 메시지입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor(System.String,System.Exception)">
      <summary>오류 및 내부 예외를 사용하여 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReadingException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">현재 예외를 설명하는 오류 메시지입니다.</param>
      <param name="innerException">현재 예외를 발생시킨 예외 인스턴스입니다.</param>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogRecord">
      <summary>
        <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" /> 개체에서 받은 이벤트에 대한 이벤트 인스턴스의 속성이 들어 있습니다. 이벤트 속성은 이벤트가 기록된 컴퓨터의 이름 및 이벤트가 생성된 시간 등의 이벤트 관련 정보를 제공합니다.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ActivityId">
      <summary>이벤트가 관련된 프로세스의 작업에 대한 GUID(Globally Unique Identifier)를 가져옵니다. 소비자는 이를 통해 관련 작업을 그룹화할 수 있습니다.</summary>
      <returns>GUID 값을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Bookmark">
      <summary>이 이벤트에 해당하는 자리 표시자(책갈피)를 가져옵니다. 이벤트 스트림에서 자리 표시자로 사용할 수 있습니다.</summary>
      <returns>
        <see cref="T:System.Diagnostics.Eventing.Reader.EventBookmark" /> 개체를 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ContainerLog">
      <summary>이벤트가 저장된 이벤트 로그 또는 이벤트 로그 파일의 이름을 가져옵니다.</summary>
      <returns>이벤트가 저장된 이벤트 로그 또는 이벤트 로그 파일의 이름이 들어 있는 문자열을 반환합니다.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogRecord.Dispose(System.Boolean)">
      <summary>이 개체에서 사용하는 관리되지 않는 리소스를 해제하고 관리되는 리소스를 선택적으로 해제합니다.</summary>
      <param name="disposing">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogRecord.FormatDescription">
      <summary>현재 로캘의 이벤트 메시지를 가져옵니다.</summary>
      <returns>현재 로캘의 이벤트 메시지가 들어 있는 문자열을 반환합니다.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogRecord.FormatDescription(System.Collections.Generic.IEnumerable{System.Object})">
      <summary>이벤트 메시지를 가져오고 메시지의 변수를 지정된 값으로 바꿉니다.</summary>
      <param name="values">이벤트 메시지의 변수를 바꾸는 데 사용할 값입니다. 변수는 %n으로 나타내며, 여기에서 n은 숫자입니다.</param>
      <returns>현재 로캘의 이벤트 메시지가 들어 있는 문자열을 반환합니다.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogRecord.GetPropertyValues(System.Diagnostics.Eventing.Reader.EventLogPropertySelector)">
      <summary>사용자가 제공한 이벤트 속성 값의 열거형을 가져오거나, 이벤트에 XML 표현이 있는 경우 XPath 기반 데이터의 결과를 가져옵니다.</summary>
      <param name="propertySelector">반환할 속성 값을 선택합니다.</param>
      <returns>개체의 목록을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Id">
      <summary>이 이벤트의 식별자를 가져옵니다. 이 식별자 값을 갖는 모든 이벤트는 같은 이벤트 형식을 나타냅니다.</summary>
      <returns>정수 값을 반환합니다. 이 값은 null일 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Keywords">
      <summary>이벤트의 키워드 마스크를 가져옵니다. 이 마스크에 사용된 키워드의 이름을 가져오려면 <see cref="P:System.Diagnostics.Eventing.Reader.EventLogRecord.KeywordsDisplayNames" /> 속성 값을 가져옵니다.</summary>
      <returns>long 값을 반환합니다. 이 값은 null일 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.KeywordsDisplayNames">
      <summary>이 이벤트의 키워드 마스크에 사용된 키워드의 표시 이름을 가져옵니다.</summary>
      <returns>이 이벤트의 키워드 마스크에 사용된 키워드의 표시 이름을 포함하는 문자열의 열거 가능한 컬렉션을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Level">
      <summary>이벤트의 수준을 가져옵니다. 이 수준은 이벤트의 심각도를 나타냅니다. 수준 이름을 확인하려면 <see cref="P:System.Diagnostics.Eventing.Reader.EventLogRecord.LevelDisplayName" /> 속성 값을 가져옵니다.</summary>
      <returns>바이트 값을 반환합니다. 이 값은 null일 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.LevelDisplayName">
      <summary>이 이벤트의 수준에 대한 표시 이름을 가져옵니다.</summary>
      <returns>이 이벤트의 수준에 대한 표시 이름이 들어 있는 문자열을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.LogName">
      <summary>이 이벤트가 기록된 이벤트 로그의 이름을 가져옵니다.</summary>
      <returns>이 이벤트가 포함된 이벤트 로그의 이름이 들어 있는 문자열을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.MachineName">
      <summary>이 이벤트가 기록된 컴퓨터의 이름을 가져옵니다.</summary>
      <returns>이 이벤트가 기록된 컴퓨터의 이름이 들어 있는 문자열을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.MatchedQueryIds">
      <summary>이 이벤트와 일치하는 쿼리 식별자의 목록을 가져옵니다. 쿼리에서 이 이벤트를 반환하는 경우 이 이벤트는 쿼리와 일치합니다.</summary>
      <returns>정수 값의 열거 가능한 컬렉션을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Opcode">
      <summary>이벤트의 opcode를 가져옵니다. opcode는 애플리케이션에서 이벤트가 발생했을 때 수행되고 있던 작업 또는 작업 내의 시점을 식별하는 숫자 값을 정의합니다. opcode의 이름을 확인하려면 <see cref="P:System.Diagnostics.Eventing.Reader.EventLogRecord.OpcodeDisplayName" /> 속성 값을 가져옵니다.</summary>
      <returns>short 값을 반환합니다. 이 값은 null일 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.OpcodeDisplayName">
      <summary>이 이벤트의 opcode에 대한 표시 이름을 가져옵니다.</summary>
      <returns>이 이벤트의 opcode에 대한 표시 이름이 들어 있는 문자열을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ProcessId">
      <summary>이 이벤트를 기록한 이벤트 공급자의 프로세스 식별자를 가져옵니다.</summary>
      <returns>정수 값을 반환합니다. 이 값은 null일 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Properties">
      <summary>사용자가 제공한 이벤트 속성을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Diagnostics.Eventing.Reader.EventProperty" /> 개체의 목록을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ProviderId">
      <summary>이 이벤트를 게시한 이벤트 공급자의 GUID(Globally Unique Identifier)를 가져옵니다.</summary>
      <returns>GUID 값을 반환합니다. 이 값은 null일 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ProviderName">
      <summary>이 이벤트를 게시한 이벤트 공급자의 이름을 가져옵니다.</summary>
      <returns>이 이벤트를 게시한 이벤트 공급자의 이름이 들어 있는 문자열을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Qualifiers">
      <summary>이벤트 ID에 사용된 한정자 개수를 가져옵니다.</summary>
      <returns>정수 값을 반환합니다. 이 값은 null일 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.RecordId">
      <summary>로그에 있는 이벤트의 이벤트 레코드 식별자를 가져옵니다.</summary>
      <returns>long 값을 반환합니다. 이 값은 null일 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.RelatedActivityId">
      <summary>이벤트가 관련된 프로세스의 관련 작업에 대한 GUID(Globally Unique Identifier)를 가져옵니다.</summary>
      <returns>GUID 값을 반환합니다. 이 값은 null일 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Task">
      <summary>이벤트를 게시하는 구성 요소 또는 애플리케이션 부분에 대한 작업 식별자를 가져옵니다. 작업은 상위 16개 값이 예약된 16비트 값입니다. 이 형식에는 0x0000에서 0xffef 사이의 모든 값을 사용할 수 있습니다. 작업 이름을 확인하려면 <see cref="P:System.Diagnostics.Eventing.Reader.EventLogRecord.TaskDisplayName" /> 속성 값을 가져옵니다.</summary>
      <returns>정수 값을 반환합니다. 이 값은 null일 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.TaskDisplayName">
      <summary>이벤트의 작업에 대한 표시 이름을 가져옵니다.</summary>
      <returns>이벤트의 작업에 대한 표시 이름이 들어 있는 문자열을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ThreadId">
      <summary>이벤트 공급자가 실행되고 있는 스레드의 식별자를 가져옵니다.</summary>
      <returns>정수 값을 반환합니다. 이 값은 null일 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.TimeCreated">
      <summary>이벤트가 생성된 시간을 <see cref="T:System.DateTime" /> 형식으로 가져옵니다.</summary>
      <returns>
        <see cref="T:System.DateTime" /> 값을 반환합니다. 이 값은 null이 될 수 있습니다.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogRecord.ToXml">
      <summary>이벤트의 XML 표현을 가져옵니다. 이벤트의 XML에는 모든 이벤트 속성이 표현됩니다. 이 XML은 이벤트 스키마를 따릅니다.</summary>
      <returns>이벤트의 XML 표현이 들어 있는 문자열을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.UserId">
      <summary>이벤트를 게시하는 데 해당 컨텍스트를 사용할 사용자의 보안 설명자를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Security.Principal.SecurityIdentifier" /> 값을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Version">
      <summary>이벤트의 버전 번호를 가져옵니다.</summary>
      <returns>바이트 값을 반환합니다. 이 값은 null일 수 있습니다.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogSession">
      <summary>해덩 컴퓨터의 이벤트 로그 및 이벤트 공급자를 관리하고 정보를 수집할 수 있도록 로컬 컴퓨터 또는 원격 컴퓨터의 이벤트 로그 서비스에 액세스하는 데 사용됩니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor">
      <summary>새 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" /> 개체를 초기화하고 로컬 이벤트 로그 서비스에 연결합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor(System.String)">
      <summary>새 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" /> 개체를 초기화하고 지정된 컴퓨터의 이벤트 로그 서비스에 연결합니다. 메서드를 호출하는 사용자의 자격 증명(사용자 이름과 암호)이 원격 컴퓨터에 액세스하는 자격 증명으로 사용됩니다.</summary>
      <param name="server">이벤트 로그 서비스에 연결할 컴퓨터의 이름입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor(System.String,System.String,System.String,System.Security.SecureString,System.Diagnostics.Eventing.Reader.SessionAuthentication)">
      <summary>새 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" /> 개체를 초기화하고 지정된 컴퓨터의 이벤트 로그 서비스에 연결합니다. 지정된 자격 증명(사용자 이름과 암호)이 원격 컴퓨터에 액세스하는 자격 증명으로 사용됩니다.</summary>
      <param name="server">이벤트 로그 서비스에 연결할 컴퓨터의 이름입니다.</param>
      <param name="domain">지정된 사용자의 도메인입니다.</param>
      <param name="user">원격 컴퓨터에 연결하는 데 사용할 사용자 이름입니다.</param>
      <param name="password">원격 컴퓨터에 연결하는 데 사용할 암호입니다.</param>
      <param name="logOnType">원격 컴퓨터에 연결하는 데 사용할 연결 형식입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.CancelCurrentOperations">
      <summary>이 세션 개체가 연결된 이벤트 로그 서비스에서 현재 활성화된 작업(이벤트 로그 읽기 또는 이벤트 로그 구독 등)을 모두 취소합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String)">
      <summary>지정된 이벤트 로그에서 이벤트를 지웁니다.</summary>
      <param name="logName">모든 이벤트를 지울 이벤트 로그의 이름입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String,System.String)">
      <summary>지정된 이벤트 로그에서 이벤트를 지우고 지워진 이벤트를 지정된 파일에 저장합니다.</summary>
      <param name="logName">모든 이벤트를 지울 이벤트 로그의 이름입니다.</param>
      <param name="backupPath">지워진 이벤트를 저장할 파일에 대한 경로입니다. 파일 이름은 .evtx로 끝나야 합니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.Dispose">
      <summary>이 개체에서 사용하는 리소스를 모두 해제합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.Dispose(System.Boolean)">
      <summary>이 개체에서 사용하는 관리되지 않는 리소스를 해제하고 관리되는 리소스를 선택적으로 해제합니다.</summary>
      <param name="disposing">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)">
      <summary>이벤트를 외부 로그 파일로 내보냅니다. 이벤트는 이벤트 메시지 없이 저장됩니다.</summary>
      <param name="path">이벤트를 내보낼 이벤트 로그의 이름 또는 이벤트를 내보낼 이벤트 로그 파일의 경로입니다.</param>
      <param name="pathType">경로 매개 변수에 사용되는 문자열이 이벤트 로그의 이름을 지정하는지 또는 이벤트 로그 파일의 경로를 지정하는지 여부를 지정합니다.</param>
      <param name="query">내보낼 이벤트를 선택하는 데 사용되는 쿼리입니다.  쿼리에서 반환되는 이벤트만 내보냅니다.</param>
      <param name="targetFilePath">이 메서드를 실행한 후 내보낸 이벤트가 저장되는 로그 파일의 경로(.evtx로 끝남)입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean)">
      <summary>이벤트를 외부 로그 파일로 내보냅니다. 지정한 쿼리가 일부 로그에 대해 실패해도 메서드가 계속 이벤트를 내보냄을 나타내도록 플래그를 설정할 수 있습니다. 이벤트는 이벤트 메시지 없이 저장됩니다.</summary>
      <param name="path">이벤트를 내보낼 이벤트 로그의 이름 또는 이벤트를 내보낼 이벤트 로그 파일의 경로입니다.</param>
      <param name="pathType">경로 매개 변수에 사용되는 문자열이 이벤트 로그의 이름을 지정하는지 또는 이벤트 로그 파일의 경로를 지정하는지 여부를 지정합니다.</param>
      <param name="query">내보낼 이벤트를 선택하는 데 사용되는 쿼리입니다. 쿼리에서 반환되는 이벤트만 내보냅니다.</param>
      <param name="targetFilePath">이 메서드를 실행한 후 내보낸 이벤트가 저장되는 로그 파일의 경로(.evtx로 끝남)입니다.</param>
      <param name="tolerateQueryErrors">
        <see langword="true" />는 지정한 쿼리가 일부 로그에 대해 실패해도 메서드가 계속 이벤트를 내보냄을 나타내고, <see langword="false" />는 지정한 쿼리가 실패하면 이 메서드가 이벤트를 계속 내보내지 않음을 나타냅니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)">
      <summary>이벤트 및 해당 메시지를 외부 로그 파일로 내보냅니다.</summary>
      <param name="path">이벤트를 내보낼 이벤트 로그의 이름 또는 이벤트를 내보낼 이벤트 로그 파일의 경로입니다.</param>
      <param name="pathType">경로 매개 변수에 사용되는 문자열이 이벤트 로그의 이름을 지정하는지 또는 이벤트 로그 파일의 경로를 지정하는지 여부를 지정합니다.</param>
      <param name="query">내보낼 이벤트를 선택하는 데 사용되는 쿼리입니다.  쿼리에서 반환되는 이벤트만 내보냅니다.</param>
      <param name="targetFilePath">이 메서드를 실행한 후 내보낸 이벤트가 저장되는 로그 파일의 경로(.evtx로 끝남)입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean,System.Globalization.CultureInfo)">
      <summary>이벤트 및 해당 메시지를 외부 로그 파일로 내보냅니다. 지정한 쿼리가 일부 로그에 대해 실패해도 메서드가 계속 이벤트를 내보냄을 나타내도록 플래그를 설정할 수 있습니다. 이벤트 메시지는 지정된 언어로 내보냅니다.</summary>
      <param name="path">이벤트를 내보낼 이벤트 로그의 이름 또는 이벤트를 내보낼 이벤트 로그 파일의 경로입니다.</param>
      <param name="pathType">경로 매개 변수에 사용되는 문자열이 이벤트 로그의 이름을 지정하는지 또는 이벤트 로그 파일의 경로를 지정하는지 여부를 지정합니다.</param>
      <param name="query">내보낼 이벤트를 선택하는 데 사용되는 쿼리입니다.  쿼리에서 반환되는 이벤트만 내보냅니다.</param>
      <param name="targetFilePath">이 메서드를 실행한 후 내보낸 이벤트가 저장되는 로그 파일의 경로(.evtx로 끝남)입니다.</param>
      <param name="tolerateQueryErrors">
        <see langword="true" />는 지정한 쿼리가 일부 로그에 대해 실패해도 메서드가 계속 이벤트를 내보냄을 나타내고, <see langword="false" />는 지정한 쿼리가 실패하면 이 메서드가 이벤트를 계속 내보내지 않음을 나타냅니다.</param>
      <param name="targetCultureInfo">내보낸 이벤트 메시지의 언어를 지정하는 문화권입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.GetLogInformation(System.String,System.Diagnostics.Eventing.Reader.PathType)">
      <summary>지정된 이벤트 로그에 대한 런타임 정보가 들어 있는 개체를 가져옵니다.</summary>
      <param name="logName">관련 정보를 가져올 이벤트 로그의 이름 또는 관련 정보를 가져올 이벤트 로그 파일에 대한 경로입니다.</param>
      <param name="pathType">경로 매개 변수에 사용되는 문자열이 이벤트 로그의 이름을 지정하는지 또는 이벤트 로그 파일의 경로를 지정하는지 여부를 지정합니다.</param>
      <returns>지정된 로그에 대한 정보가 들어 있는 개체입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.GetLogNames">
      <summary>이벤트 로그 서비스에 등록된 모든 이벤트 로그 이름의 열거 가능한 컬렉션을 가져옵니다.</summary>
      <returns>이벤트 로그 이름이 들어 있는 열거 가능한 문자열 컬렉션입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.GetProviderNames">
      <summary>이벤트 로그 서비스에 등록된 모든 이벤트 공급자 이름의 열거 가능한 컬렉션을 가져옵니다. 이벤트 공급자는 이벤트 로그에 이벤트를 게시하는 애플리케이션입니다.</summary>
      <returns>이벤트 공급자 이름이 들어 있는 열거 가능한 문자열 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogSession.GlobalSession">
      <summary>로컬 컴퓨터의 이벤트 로그 서비스에 연결된 미리 정의된 정적 세션 개체를 가져옵니다.</summary>
      <returns>로컬 컴퓨터의 이벤트 로그 서비스에 연결 된 미리 정의 된 세션 개체입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogStatus">
      <summary>특정 이벤트 로그의 상태 코드 또는 오류 코드가 들어 있습니다. 이 상태를 사용하여 이벤트 로그를 작업에 사용할 수 있는지 확인할 수 있습니다.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogStatus.LogName">
      <summary>상태 코드를 가져온 이벤트 로그의 이름을 가져옵니다.</summary>
      <returns>상태 코드를 가져올 이벤트 로그의 이름입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogStatus.StatusCode">
      <summary>이벤트 로그의 상태 코드 또는 오류 코드를 가져옵니다. 이 상태 또는 오류는 이벤트 로그에서 수행한 읽기 또는 구독 작업의 결과입니다.</summary>
      <returns>이벤트 로그의 상태 코드 또는 오류 코드입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogType">
      <summary>이벤트 로그에 기록되는 이벤트의 형식을 정의합니다. 각 로그에는 이벤트 형식이 하나만 포함될 수 있습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogType.Administrative">
      <summary>이러한 이벤트는 주로 최종 사용자, 관리자 및 지원 인력을 위한 것입니다. Administrative 형식 로그에 있는 이벤트는 문제를 나타내며, 관리자가 실행할 수 있는 잘 정의된 솔루션을 알려 줍니다. 관리 이벤트의 예로는 애플리케이션에서 프린터에 연결할 수 없을 때 발생하는 이벤트가 있습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogType.Analytical">
      <summary>분석 이벤트 로그의 이벤트는 매우 큰 볼륨으로 게시됩니다. 이러한 이벤트는 프로그램 작업을 설명하고, 사용자가 개입하여 처리할 수 없는 문제를 나타냅니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogType.Debug">
      <summary>디버그 형식 이벤트 로그의 이벤트는 개발자가 디버깅을 위해 문제를 진단할 때만 사용됩니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogType.Operational">
      <summary>운영 형식 이벤트 로그의 이벤트는 문제 또는 항목을 분석하고 진단하는 데 사용됩니다. 이러한 이벤트를 사용하여 문제 또는 항목에 따라 도구 또는 작업을 트리거할 수 있습니다. 운영 이벤트의 예로는 시스템에서 프린터가 추가되거나 제거될 때 발생하는 이벤트가 있습니다.</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogWatcher">
      <summary>들어오는 이벤트를 구독할 수 있습니다. 원하는 이벤트가 이벤트 로그에 게시될 때마다 <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> 이벤트가 발생하고 이 이벤트를 처리하는 메서드가 실행됩니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery)">
      <summary>이벤트 쿼리를 지정하여 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="eventQuery">이벤트 구독에 대한 쿼리를 지정합니다. 쿼리에 표현된 조건에 맞는 이벤트가 기록되면 <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> 이벤트가 발생합니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark)">
      <summary>이벤트 쿼리 및 쿼리의 시작 위치로 사용되는 책갈피를 지정하여 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="eventQuery">이벤트 구독에 대한 쿼리를 지정합니다. 쿼리에 표현된 조건에 맞는 이벤트가 기록되면 <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> 이벤트가 발생합니다.</param>
      <param name="bookmark">이벤트 로그 또는 이벤트 스트림의 시작 위치로 사용되는 책갈피(자리 표시자)입니다. 책갈피 이벤트보다 나중에 기록되는 이벤트만 쿼리에서 반환됩니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark,System.Boolean)">
      <summary>이벤트 쿼리, 쿼리의 시작 위치로 사용되는 책갈피 및 이벤트 로그에 이미 있는 이벤트를 읽을지 여부를 결정하는 부울 값을 지정하여 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="eventQuery">이벤트 구독에 대한 쿼리를 지정합니다. 쿼리에 표현된 조건에 맞는 이벤트가 기록되면 <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> 이벤트가 발생합니다.</param>
      <param name="bookmark">이벤트 로그 또는 이벤트 스트림의 시작 위치로 사용되는 책갈피(자리 표시자)입니다. 책갈피 이벤트보다 나중에 기록되는 이벤트만 쿼리에서 반환됩니다.</param>
      <param name="readExistingEvents">이벤트 로그에 이미 있는 이벤트를 읽을지 여부를 결정하는 부울 값입니다. 이 값이 <see langword="true" />이면 기존 이벤트를 읽고, 이 값이 <see langword="false" />이면 기존 이벤트를 읽지 않습니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.String)">
      <summary>이벤트 로그에 대한 이름 또는 경로를 지정하여 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="path">이벤트에 대한 이벤트 로그 모니터의 경로 또는 이름입니다. 이 이벤트 로그에 이벤트가 기록되면 <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> 이벤트가 발생합니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.Dispose">
      <summary>이 개체에서 사용하는 리소스를 모두 해제합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.Dispose(System.Boolean)">
      <summary>이 개체에서 사용하는 관리되지 않는 리소스를 해제하고 관리되는 리소스를 선택적으로 해제합니다.</summary>
      <param name="disposing">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogWatcher.Enabled">
      <summary>이 개체에서 이벤트 대리자에 이벤트를 전달하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>
        <see langword="true" />이 개체가 이벤트 대리자에 이벤트를 제공할 수 있으면이 고, 그렇지 않으면입니다. <see langword="false" /> 이 개체의 배달이 중단 된 경우입니다.</returns>
    </member>
    <member name="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten">
      <summary>이 개체의 이벤트 쿼리에 지정된 조건에 맞는 이벤트가 게시될 때마다 호출되는 대리자(이벤트 처리기 메서드)를 설정합니다.</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventMetadata">
      <summary>이벤트 공급자에 정의된 이벤트에 대한 메타데이터(속성 및 설정)가 들어 있습니다.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Description">
      <summary>현재 스레드 로캘을 설명 언어로 사용하여 이벤트에 연결된 설명 템플릿을 가져옵니다.</summary>
      <returns>이벤트와 연결 된 설명 템플릿을 포함 하는 문자열입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Id">
      <summary>이벤트 공급자에 정의된 이벤트의 식별자를 가져옵니다.</summary>
      <returns>이벤트 식별자입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Keywords">
      <summary>이벤트 공급자에 정의된 이벤트와 연결된 키워드를 가져옵니다.</summary>
      <returns>이벤트와 연결 된 키워드의 열거 가능 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Level">
      <summary>이벤트 공급자에 정의된 이벤트에 연결된 수준을 가져옵니다. 이 수준은 이벤트의 심각도를 정의합니다.</summary>
      <returns>이벤트와 관련 된 수준입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.LogLink">
      <summary>공급자가 이 이벤트를 게시할 때 이 이벤트를 받는 이벤트 로그에 대한 링크를 가져옵니다.</summary>
      <returns>이벤트 로그에 대 한 링크입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Opcode">
      <summary>이벤트 공급자에 정의된 이 이벤트에 연결된 opcode를 가져옵니다. opcode는 애플리케이션에서 이벤트가 발생했을 때 수행되고 있던 작업 또는 작업 내의 시점을 식별하는 숫자 값을 정의합니다.</summary>
      <returns>이 이벤트와 연결 된 opcode입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Task">
      <summary>이벤트에 연결된 작업을 가져옵니다. 작업은 이벤트를 게시하는 구성 요소 또는 애플리케이션 부분을 식별합니다.</summary>
      <returns>이벤트와 연결 된 작업입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Template">
      <summary>이벤트의 템플릿 문자열을 가져옵니다. 템플릿은 이벤트가 게시될 때 공급자에서 사용하는 데이터를 설명하는 데 사용됩니다. 템플릿은 선택적으로 이벤트 구조를 제공하는 XML을 지정할 수 있습니다. XML을 통해 이벤트 게시자가 제공하는 값을 이벤트 렌더링 도중 삽입할 수 있습니다.</summary>
      <returns>이벤트에 대 한 템플릿이 들어 있는 문자열입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Version">
      <summary>이벤트 식별자를 정규화하는 이벤트의 버전을 가져옵니다.</summary>
      <returns>이벤트의 버전을 포함 하는 바이트 값입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventOpcode">
      <summary>이벤트 공급자에 정의된 이벤트 opcode가 들어 있습니다. opcode는 애플리케이션에서 이벤트가 발생했을 때 수행되고 있던 작업 또는 작업 내의 시점을 식별하는 숫자 값을 정의합니다.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventOpcode.DisplayName">
      <summary>이벤트 opcode의 지역화된 이름을 가져옵니다.</summary>
      <returns>이벤트 opcode의 지역화 된 이름입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventOpcode.Name">
      <summary>이벤트 opcode의 지역화되지 않은 이름을 가져옵니다.</summary>
      <returns>이벤트 opcode의 지역화 되지 않은 이름입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventOpcode.Value">
      <summary>이벤트 opcode에 연결된 숫자 값을 가져옵니다.</summary>
      <returns>이벤트 opcode와 연결 된 숫자 값입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventProperty">
      <summary>이벤트가 게시될 때 이벤트 공급자가 지정한 이벤트 속성 값이 들어 있습니다.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventProperty.Value">
      <summary>이벤트가 게시될 때 이벤트 공급자가 지정한 이벤트 속성 값을 가져옵니다.</summary>
      <returns>이벤트 속성의 값입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventRecord">
      <summary>
        <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" /> 개체에서 받은 이벤트에 대한 이벤트 인스턴스의 속성을 정의합니다. 이벤트 속성은 이벤트가 기록된 컴퓨터의 이름 및 이벤트가 생성된 시간 등의 이벤트 관련 정보를 제공합니다. 이 클래스는 추상 클래스입니다. <see cref="T:System.Diagnostics.Eventing.Reader.EventLogRecord" /> 클래스는 이 클래스를 구현합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventRecord.#ctor">
      <summary>
        <see cref="T:System.Diagnostics.Eventing.Reader.EventRecord" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.ActivityId">
      <summary>이벤트가 관련된 프로세스의 작업에 대한 GUID(Globally Unique Identifier)를 가져옵니다. 소비자는 이를 통해 관련 작업을 그룹화할 수 있습니다.</summary>
      <returns>GUID 값을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Bookmark">
      <summary>이 이벤트에 해당하는 자리 표시자(책갈피)를 가져옵니다. 이벤트 스트림에서 자리 표시자로 사용할 수 있습니다.</summary>
      <returns>
        <see cref="T:System.Diagnostics.Eventing.Reader.EventBookmark" /> 개체를 반환합니다.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventRecord.Dispose">
      <summary>이 개체에서 사용하는 리소스를 모두 해제합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventRecord.Dispose(System.Boolean)">
      <summary>이 개체에서 사용하는 관리되지 않는 리소스를 해제하고 관리되는 리소스를 선택적으로 해제합니다.</summary>
      <param name="disposing">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventRecord.FormatDescription">
      <summary>현재 로캘의 이벤트 메시지를 가져옵니다.</summary>
      <returns>현재 로캘의 이벤트 메시지가 들어 있는 문자열을 반환합니다.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventRecord.FormatDescription(System.Collections.Generic.IEnumerable{System.Object})">
      <summary>이벤트 메시지를 가져오고 메시지의 변수를 지정된 값으로 바꿉니다.</summary>
      <param name="values">이벤트 메시지의 변수를 바꾸는 데 사용할 값입니다. 변수는 %n으로 나타내며, 여기에서 n은 숫자입니다.</param>
      <returns>현재 로캘의 이벤트 메시지가 들어 있는 문자열을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Id">
      <summary>이 이벤트의 식별자를 가져옵니다. 이 식별자 값을 갖는 모든 이벤트는 같은 이벤트 형식을 나타냅니다.</summary>
      <returns>정수 값을 반환합니다. 이 값은 null일 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Keywords">
      <summary>이벤트의 키워드 마스크를 가져옵니다. 이 마스크에 사용된 키워드의 이름을 가져오려면 <see cref="P:System.Diagnostics.Eventing.Reader.EventRecord.KeywordsDisplayNames" /> 속성 값을 가져옵니다.</summary>
      <returns>long 값을 반환합니다. 이 값은 null일 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.KeywordsDisplayNames">
      <summary>이 이벤트의 키워드 마스크에 사용된 키워드의 표시 이름을 가져옵니다.</summary>
      <returns>이 이벤트의 키워드 마스크에 사용된 키워드의 표시 이름을 포함하는 문자열의 열거 가능한 컬렉션을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Level">
      <summary>이벤트의 수준을 가져옵니다. 이 수준은 이벤트의 심각도를 나타냅니다. 수준 이름을 확인하려면 <see cref="P:System.Diagnostics.Eventing.Reader.EventRecord.LevelDisplayName" /> 속성 값을 가져옵니다.</summary>
      <returns>바이트 값을 반환합니다. 이 값은 null일 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.LevelDisplayName">
      <summary>이 이벤트의 수준에 대한 표시 이름을 가져옵니다.</summary>
      <returns>이 이벤트의 수준에 대한 표시 이름이 들어 있는 문자열을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.LogName">
      <summary>이 이벤트가 기록된 이벤트 로그의 이름을 가져옵니다.</summary>
      <returns>이 이벤트가 포함된 이벤트 로그의 이름이 들어 있는 문자열을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.MachineName">
      <summary>이 이벤트가 기록된 컴퓨터의 이름을 가져옵니다.</summary>
      <returns>이 이벤트가 기록된 컴퓨터의 이름이 들어 있는 문자열을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Opcode">
      <summary>이벤트의 opcode를 가져옵니다. opcode는 애플리케이션에서 이벤트가 발생했을 때 수행되고 있던 작업 또는 작업 내의 시점을 식별하는 숫자 값을 정의합니다. opcode의 이름을 확인하려면 <see cref="P:System.Diagnostics.Eventing.Reader.EventRecord.OpcodeDisplayName" /> 속성 값을 가져옵니다.</summary>
      <returns>short 값을 반환합니다. 이 값은 null일 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.OpcodeDisplayName">
      <summary>이 이벤트의 opcode에 대한 표시 이름을 가져옵니다.</summary>
      <returns>이 이벤트의 opcode에 대한 표시 이름이 들어 있는 문자열을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.ProcessId">
      <summary>이 이벤트를 기록한 이벤트 공급자의 프로세스 식별자를 가져옵니다.</summary>
      <returns>정수 값을 반환합니다. 이 값은 null일 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Properties">
      <summary>사용자가 제공한 이벤트 속성을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Diagnostics.Eventing.Reader.EventProperty" /> 개체의 목록을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.ProviderId">
      <summary>이 이벤트를 게시한 이벤트 공급자의 GUID(Globally Unique Identifier)를 가져옵니다.</summary>
      <returns>GUID 값을 반환합니다. 이 값은 null일 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.ProviderName">
      <summary>이 이벤트를 게시한 이벤트 공급자의 이름을 가져옵니다.</summary>
      <returns>이 이벤트를 게시한 이벤트 공급자의 이름이 들어 있는 문자열을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Qualifiers">
      <summary>이벤트 ID에 사용된 한정자 개수를 가져옵니다.</summary>
      <returns>정수 값을 반환합니다. 이 값은 null일 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.RecordId">
      <summary>로그에 있는 이벤트의 이벤트 레코드 식별자를 가져옵니다.</summary>
      <returns>long 값을 반환합니다. 이 값은 null일 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.RelatedActivityId">
      <summary>이벤트가 관련된 프로세스의 관련 작업에 대한 GUID(Globally Unique Identifier)를 가져옵니다.</summary>
      <returns>GUID 값을 반환합니다. 이 값은 null일 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Task">
      <summary>이벤트를 게시하는 구성 요소 또는 애플리케이션 부분에 대한 작업 식별자를 가져옵니다. 작업은 상위 16개 값이 예약된 16비트 값입니다. 이 형식에는 0x0000에서 0xffef 사이의 모든 값을 사용할 수 있습니다. 작업 이름을 가져오려면 <see cref="P:System.Diagnostics.Eventing.Reader.EventRecord.TaskDisplayName" /> 속성 값을 가져옵니다.</summary>
      <returns>정수 값을 반환합니다. 이 값은 null일 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.TaskDisplayName">
      <summary>이벤트의 작업에 대한 표시 이름을 가져옵니다.</summary>
      <returns>이벤트의 작업에 대한 표시 이름이 들어 있는 문자열을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.ThreadId">
      <summary>이벤트 공급자가 실행되고 있는 스레드의 식별자를 가져옵니다.</summary>
      <returns>정수 값을 반환합니다. 이 값은 null일 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.TimeCreated">
      <summary>이벤트가 생성된 시간을 <see cref="T:System.DateTime" /> 형식으로 가져옵니다.</summary>
      <returns>
        <see cref="T:System.DateTime" /> 값을 반환합니다. 이 값은 null이 될 수 있습니다.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventRecord.ToXml">
      <summary>이벤트의 XML 표현을 가져옵니다. 이벤트 XML에는 모든 이벤트 속성이 표현됩니다. 이 XML은 이벤트 스키마를 따릅니다.</summary>
      <returns>이벤트의 XML 표현이 들어 있는 문자열을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.UserId">
      <summary>이벤트를 게시하는 데 해당 컨텍스트를 사용할 사용자의 보안 설명자를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Security.Principal.SecurityIdentifier" /> 값을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Version">
      <summary>이벤트의 버전 번호를 가져옵니다.</summary>
      <returns>바이트 값을 반환합니다. 이 값은 null일 수 있습니다.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs">
      <summary>
        <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> 이벤트가 발생하면 이벤트를 처리하는 대리자 메서드에 이 개체의 인스턴스가 전달됩니다. 이 개체에는 이벤트 로그에 게시된 이벤트 또는 이벤트 구독에 실패할 때 발생한 예외가 들어 있습니다.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs.EventException">
      <summary>이벤트 구독에 실패할 때 발생한 예외를 가져옵니다. 이 예외는 구독에 실패한 이유를 설명합니다.</summary>
      <returns>이벤트 구독이 실패 한 경우 발생 한 예외입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs.EventRecord">
      <summary>이벤트 로그에 게시된 이벤트 레코드를 가져옵니다. 이 이벤트는 이벤트 구독에 지정된 쿼리의 조건에 맞습니다.</summary>
      <returns>이벤트 레코드입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventTask">
      <summary>이벤트 공급자에 정의된 이벤트 작업이 들어 있습니다. 작업은 이벤트를 게시하는 구성 요소 또는 애플리케이션 부분을 식별합니다. 작업은 상위 16개 값이 예약된 16비트 값입니다.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventTask.DisplayName">
      <summary>이벤트 작업의 지역화된 이름을 가져옵니다.</summary>
      <returns>이벤트 작업의 지역화 된 이름입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventTask.EventGuid">
      <summary>작업에 연결된 이벤트 GUID(Globally Unique Identifier)를 가져옵니다.</summary>
      <returns>태스크와 연결 된 이벤트 GUID입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventTask.Name">
      <summary>이벤트 작업의 지역화되지 않은 이름을 가져옵니다.</summary>
      <returns>이벤트 작업의 지역화 되지 않은 이름입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventTask.Value">
      <summary>작업에 연결된 숫자 값을 가져옵니다.</summary>
      <returns>작업에 연결 된 숫자 값입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.PathType">
      <summary>문자열에 이벤트 로그의 이름이 들어 있는지 아니면 이벤트 로그 파일에 대한 파일 시스템 경로가 들어 있는지를 지정합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.PathType.FilePath">
      <summary>경로 매개 변수에 이벤트 로그 파일에 대한 파일 시스템 경로가 들어 있습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.PathType.LogName">
      <summary>경로 매개 변수에 이벤트 로그의 이름이 들어 있습니다.</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.ProviderMetadata">
      <summary>공급자의 이름과 ID 및 공급자에 정의된 이벤트 컬렉션과 같은 이벤트 공급자에 대한 정적 정보가 들어 있습니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.#ctor(System.String)">
      <summary>관련 정보를 검색할 공급자의 이름을 지정하여 <see cref="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="providerName">관련 정보를 검색할 이벤트 공급자의 이름입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.#ctor(System.String,System.Diagnostics.Eventing.Reader.EventLogSession,System.Globalization.CultureInfo)">
      <summary>관련 정보를 검색할 공급자의 이름, 공급자가 등록된 이벤트 로그 서비스 및 정보를 반환할 언어를 지정하여 <see cref="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="providerName">관련 정보를 검색할 이벤트 공급자의 이름입니다.</param>
      <param name="session">공급자 정보를 가져올 공급자가 로컬 컴퓨터에 있는지 아니면 원격 컴퓨터에 있는지를 지정하는 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" /> 개체입니다.</param>
      <param name="targetCultureInfo">정보를 반환할 언어를 지정하는 문화권입니다.</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.DisplayName">
      <summary>이벤트 공급자의 지역화된 이름을 가져옵니다.</summary>
      <returns>이벤트 공급자의 지역화된 이름이 들어 있는 문자열을 반환합니다.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.Dispose">
      <summary>이 개체에서 사용하는 리소스를 모두 해제합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.Dispose(System.Boolean)">
      <summary>이 개체에서 사용하는 관리되지 않는 리소스를 해제하고 관리되는 리소스를 선택적으로 해제합니다.</summary>
      <param name="disposing">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Events">
      <summary>공급자에 정의된 이벤트를 각각 나타내는 <see cref="T:System.Diagnostics.Eventing.Reader.EventMetadata" /> 개체의 열거 가능한 컬렉션을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Diagnostics.Eventing.Reader.EventMetadata" /> 개체의 열거할 수 있는 컬렉션을 노출시킵니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.HelpLink">
      <summary>이 이벤트 공급자의 이벤트에 대한 도움말 요청을 구성하는 데 사용되는 URL의 기준을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Uri" /> 값을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Id">
      <summary>이벤트 공급자의 GUID(Globally Unique Identifier)를 가져옵니다.</summary>
      <returns>이벤트 공급자의 GUID 값을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Keywords">
      <summary>이벤트 공급자에 정의된 이벤트 키워드를 각각 나타내는 <see cref="T:System.Diagnostics.Eventing.Reader.EventKeyword" /> 개체의 열거 가능한 컬렉션을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Diagnostics.Eventing.Reader.EventKeyword" /> 개체의 열거할 수 있는 컬렉션을 노출시킵니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Levels">
      <summary>이벤트 공급자에 정의된 수준을 각각 나타내는 <see cref="T:System.Diagnostics.Eventing.Reader.EventLevel" /> 개체의 열거 가능한 컬렉션을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Diagnostics.Eventing.Reader.EventLevel" /> 개체의 열거할 수 있는 컬렉션을 노출시킵니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.LogLinks">
      <summary>이벤트 공급자에 사용되는 이벤트 로그에 대한 링크를 각각 나타내는 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogLink" /> 개체의 열거 가능한 컬렉션을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Diagnostics.Eventing.Reader.EventLogLink" /> 개체의 열거할 수 있는 컬렉션을 노출시킵니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.MessageFilePath">
      <summary>공급자 메타데이터에 연결된 문자열이 있는 메시지 테이블 리소스가 들어 있는 파일에 대한 경로를 가져옵니다.</summary>
      <returns>공급자 메시지 파일에 대한 경로가 들어 있는 문자열을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Name">
      <summary>이벤트 공급자의 고유 이름을 가져옵니다.</summary>
      <returns>이벤트 공급자의 고유 이름이 들어 있는 문자열을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Opcodes">
      <summary>이벤트 공급자에 정의된 opcode를 각각 나타내는 <see cref="T:System.Diagnostics.Eventing.Reader.EventOpcode" /> 개체의 열거 가능한 컬렉션을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Diagnostics.Eventing.Reader.EventOpcode" /> 개체의 열거할 수 있는 컬렉션을 노출시킵니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.ParameterFilePath">
      <summary>이벤트 설명에 있는 매개 변수를 대체하는 데 사용되는 문자열이 있는 메시지 테이블 리소스가 들어 있는 파일에 대한 경로를 가져옵니다.</summary>
      <returns>이벤트 설명에 있는 매개 변수를 대체하는 데 사용되는 문자열이 있는 메시지 테이블 리소스가 들어 있는 파일에 대한 경로가 포함된 문자열을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.ResourceFilePath">
      <summary>공급자에 연결된 메타데이터가 들어 있는 파일에 대한 경로를 가져옵니다.</summary>
      <returns>공급자에 연결된 메타데이터가 들어 있는 파일에 대한 경로가 포함된 문자열을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Tasks">
      <summary>이벤트 공급자에 정의된 작업을 각각 나타내는 <see cref="T:System.Diagnostics.Eventing.Reader.EventTask" /> 개체의 열거 가능한 컬렉션을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Diagnostics.Eventing.Reader.EventTask" /> 개체의 열거할 수 있는 컬렉션을 노출시킵니다.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.SessionAuthentication">
      <summary>서버에 대한 RPC(원격 프로시저 호출) 로그인 도중 사용되는 인증 형식에 대한 값을 정의합니다. 원격 컴퓨터에 대한 연결을 지정하는 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" /> 개체를 만들 때 이 로그인이 수행됩니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.SessionAuthentication.Default">
      <summary>RPC 로그인 도중 기본 인증 방법을 사용합니다. 기본 인증은 협상 인증과 동일합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.SessionAuthentication.Kerberos">
      <summary>RPC 로그인 도중 Kerberos 인증을 사용합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.SessionAuthentication.Negotiate">
      <summary>RPC 로그인 도중 협상 인증 방법을 사용합니다. 클라이언트 애플리케이션은 이를 통해 상황에 가장 적합한 인증 방법(NTLM 또는 Kerberos)을 선택할 수 있습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.SessionAuthentication.Ntlm">
      <summary>RPC 로그인 도중 Windows NTLM(NT LAN Manager) 인증을 사용합니다.</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.StandardEventKeywords">
      <summary>이벤트 공급자가 이벤트에 연결하는 표준 키워드를 정의합니다. 키워드에 대한 자세한 내용은 <see cref="T:System.Diagnostics.Eventing.Reader.EventKeyword" />를 참조하십시오.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.AuditFailure">
      <summary>모든 실패한 보안 감사 이벤트에 연결됩니다. 이 키워드는 보안 로그의 이벤트에만 사용해야 합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.AuditSuccess">
      <summary>모든 성공적인 보안 감사 이벤트에 연결됩니다. 이 키워드는 보안 로그의 이벤트에만 사용해야 합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.CorrelationHint">
      <summary>관련 작업 ID(상관 관계 ID)가 계산된 값이고 실제 GUID가 아니므로 고유하지 않을 수 있는 경우 전송 이벤트에 연결됩니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.CorrelationHint2">
      <summary>관련 작업 ID(상관 관계 ID)가 계산된 값이고 실제 GUID가 아니므로 고유하지 않을 수 있는 경우 전송 이벤트에 연결됩니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.EventLogClassic">
      <summary>RaiseEvent 함수를 사용하여 발생한 이벤트에 연결됩니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.None">
      <summary>이 값은 이벤트를 게시할 때 키워드에 따라 필터링하지 않음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.ResponseTime">
      <summary>모든 응답 시간 이벤트에 연결됩니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.Sqm">
      <summary>모든 SQM(Service Quality Mechanism) 이벤트에 연결됩니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.WdiContext">
      <summary>모든 WDI(Windows Diagnostic Infrastructure) 컨텍스트 이벤트에 연결됩니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.WdiDiagnostic">
      <summary>모든 WDI(Windows Diagnostic Infrastructure) 진단 이벤트에 연결됩니다.</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.StandardEventLevel">
      <summary>이벤트 로그 서비스에 사용되는 표준 이벤트 수준을 정의합니다. 이 수준은 이벤트의 심각도를 정의합니다. 이러한 표준 수준을 벗어나는 사용자 지정 이벤트 수준을 정의할 수 있습니다. 수준에 대한 자세한 내용은 <see cref="T:System.Diagnostics.Eventing.Reader.EventLevel" />을 참조하십시오.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Critical">
      <summary>이 수준은 중대한 작업 실패를 일으킨 심각한 오류에 해당합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Error">
      <summary>이 수준은 문제 발생을 나타내는 일반 오류에 해당합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Informational">
      <summary>이 수준은 오류가 아닌 정보 이벤트 또는 메시지에 해당합니다. 이러한 이벤트를 통해 애플리케이션의 진행률이나 상태를 추적할 수 있습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.LogAlways">
      <summary>이 값은 이벤트를 게시할 때 수준에 따라 필터링하지 않음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Verbose">
      <summary>이 수준은 길이가 긴 이벤트 또는 메시지에 해당합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Warning">
      <summary>이 수준은 경고 이벤트에 해당합니다. 예를 들어 디스크 용량이 거의 꽉 찰 때 게시되는 이벤트는 경고 이벤트입니다.</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.StandardEventOpcode">
      <summary>이벤트 공급자가 이벤트에 연결하는 표준 opcode를 정의합니다. opcode에 대한 자세한 내용은 <see cref="T:System.Diagnostics.Eventing.Reader.EventOpcode" />를 참조하십시오.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.DataCollectionStart">
      <summary>이 opcode가 있는 이벤트는 추적 컬렉션 시작 이벤트입니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.DataCollectionStop">
      <summary>이 opcode가 있는 이벤트는 추적 컬렉션 중지 이벤트입니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Extension">
      <summary>이 opcode가 있는 이벤트는 확장 이벤트입니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Info">
      <summary>이 opcode가 있는 이벤트는 정보 이벤트입니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Receive">
      <summary>이 opcode가 있는 이벤트는 애플리케이션의 작업 중 하나가 데이터를 받을 때 게시됩니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Reply">
      <summary>이 opcode가 있는 이벤트는 애플리케이션의 작업이 이벤트에 응답한 후 게시됩니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Resume">
      <summary>이 opcode가 있는 이벤트는 애플리케이션에서 일시 중단된 작업이 다시 시작될 때 게시됩니다. 이 이벤트는 Suspend opcode가 있는 이벤트 다음에 나와야 합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Send">
      <summary>이 opcode가 있는 이벤트는 애플리케이션의 작업 중 하나에서 데이터 또는 시스템 리소스를 다른 작업에 전송할 때 게시됩니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Start">
      <summary>이 opcode가 있는 이벤트는 애플리케이션에서 새 트랜잭션 또는 작업을 시작할 때 게시됩니다. Stop opcode가 있는 이벤트 없이 Start opcode가 있는 여러 이벤트가 연속으로 발생하면 이 이벤트가 다른 트랜잭션 또는 작업에 포함될 수 있습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Stop">
      <summary>이 opcode가 있는 이벤트는 애플리케이션에서 작업 또는 트랜잭션이 종료될 때 게시됩니다. 이 이벤트는 Start opcode가 있는 이벤트 중 짝이 없는 마지막 이벤트에 대응됩니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Suspend">
      <summary>이 opcode가 있는 이벤트는 애플리케이션의 작업이 일시 중지될 때 게시됩니다.</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.StandardEventTask">
      <summary>이벤트 공급자가 이벤트에 연결하는 표준 작업을 정의합니다. 작업에 대한 자세한 내용은 <see cref="T:System.Diagnostics.Eventing.Reader.EventTask" />을 참조하십시오.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventTask.None">
      <summary>이벤트를 게시하는 애플리케이션 부분을 식별하는 데 사용되는 작업이 없습니다.</summary>
    </member>
    <member name="T:System.Diagnostics.EventInstance">
      <summary>이벤트 로그 엔트리에 대한 언어 중립 정보를 나타냅니다.</summary>
    </member>
    <member name="M:System.Diagnostics.EventInstance.#ctor(System.Int64,System.Int32)">
      <summary>이벤트 엔트리의 지역화된 메시지 및 범주 텍스트에 대한 지정된 리소스 식별자를 사용하여 <see cref="T:System.Diagnostics.EventInstance" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="instanceId">이벤트 소스의 메시지 리소스 파일에 정의된 문자열에 해당하는 리소스 식별자입니다.</param>
      <param name="categoryId">이벤트 소스의 범주 리소스 파일에 정의된 문자열에 해당하는 리소스 식별자입니다. 이벤트 범주가 없는 경우 0입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="instanceId" /> 매개 변수가 음의 값이거나 <see cref="F:System.UInt32.MaxValue" />보다 큰 값인 경우  
또는 
<paramref name="categoryId" /> 매개 변수가 음의 값이거나 <see cref="F:System.UInt16.MaxValue" />보다 큰 값인 경우</exception>
    </member>
    <member name="M:System.Diagnostics.EventInstance.#ctor(System.Int64,System.Int32,System.Diagnostics.EventLogEntryType)">
      <summary>지역화된 메시지의 지정된 리소스 식별자, 이벤트 엔트리의 범주 텍스트 및 지정된 이벤트 로그 엔트리 형식을 사용하여 <see cref="T:System.Diagnostics.EventInstance" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="instanceId">이벤트 소스의 메시지 리소스 파일에 정의된 문자열에 해당하는 리소스 식별자입니다.</param>
      <param name="categoryId">이벤트 소스의 범주 리소스 파일에 정의된 문자열에 해당하는 리소스 식별자입니다. 이벤트 범주가 없는 경우 0입니다.</param>
      <param name="entryType">이벤트의 형식을 나타내는 <see cref="T:System.Diagnostics.EventLogEntryType" /> 값입니다.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="entryType" />는 유효한 <see cref="T:System.Diagnostics.EventLogEntryType" /> 값이 아닙니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="instanceId" />가 음의 값이거나 <see cref="F:System.UInt32.MaxValue" />보다 큰 값인 경우  
또는 
 <paramref name="categoryId" />가 음의 값이거나 <see cref="F:System.UInt16.MaxValue" />보다 큰 값인 경우</exception>
    </member>
    <member name="P:System.Diagnostics.EventInstance.CategoryId">
      <summary>애플리케이션에 정의된 이벤트 엔트리의 범주를 지정하는 리소스 식별자를 가져오거나 설정합니다.</summary>
      <returns>이벤트 소스의 범주 리소스 파일에 정의된 문자열에 해당하는 리소스 식별자의 숫자 범주 값 또는 리소스 식별자입니다. 기본값은 0이며 이벤트 엔트리에 대해 범주가 표시되지 않을 것임을 나타냅니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">속성이 음의 값이나 <see cref="F:System.UInt16.MaxValue" />보다 큰 값으로 설정된 경우</exception>
    </member>
    <member name="P:System.Diagnostics.EventInstance.EntryType">
      <summary>이벤트 로그 엔트리의 이벤트 형식을 가져오거나 설정합니다.</summary>
      <returns>이벤트 엔트리 형식을 나타내는 <see cref="T:System.Diagnostics.EventLogEntryType" /> 값입니다. 기본값은 <see cref="F:System.Diagnostics.EventLogEntryType.Information" />입니다.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">속성이 유효한 <see cref="T:System.Diagnostics.EventLogEntryType" />으로 설정되지 않은 경우</exception>
    </member>
    <member name="P:System.Diagnostics.EventInstance.InstanceId">
      <summary>이벤트 엔트리의 메시지 텍스트를 지정하는 리소스 식별자를 가져오거나 설정합니다.</summary>
      <returns>이벤트 소스의 메시지 리소스 파일에 정의된 문자열에 해당하는 리소스 식별자입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">속성이 음의 값이나 <see cref="F:System.UInt32.MaxValue" />보다 큰 값으로 설정된 경우</exception>
    </member>
    <member name="T:System.Diagnostics.EventLog">
      <summary>Windows 이벤트 로그 조작을 제공합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.EventLog.#ctor">
      <summary>
        <see cref="T:System.Diagnostics.EventLog" /> 클래스의 새 인스턴스를 초기화합니다. 인스턴스를 로그와 연결하지 않습니다.</summary>
    </member>
    <member name="M:System.Diagnostics.EventLog.#ctor(System.String)">
      <summary>
        <see cref="T:System.Diagnostics.EventLog" /> 클래스의 새 인스턴스를 초기화합니다. 로컬 컴퓨터에 있는 로그에 인스턴스를 연결합니다.</summary>
      <param name="logName">로컬 컴퓨터의 로그 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException">로그 이름이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">로그 이름이 잘못된 경우</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.#ctor(System.String,System.String)">
      <summary>
        <see cref="T:System.Diagnostics.EventLog" /> 클래스의 새 인스턴스를 초기화합니다. 지정한 컴퓨터에 있는 로그에 인스턴스를 연결합니다.</summary>
      <param name="logName">지정된 컴퓨터의 로그 이름입니다.</param>
      <param name="machineName">로그가 있는 컴퓨터입니다.</param>
      <exception cref="T:System.ArgumentNullException">로그 이름이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">로그 이름이 잘못된 경우  
 또는  
 컴퓨터 이름이 잘못된 경우</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.#ctor(System.String,System.String,System.String)">
      <summary>
        <see cref="T:System.Diagnostics.EventLog" /> 클래스의 새 인스턴스를 초기화합니다. 지정한 컴퓨터에 있는 로그에 인스턴스를 연결하고 <see cref="T:System.Diagnostics.EventLog" />에 지정한 원본을 만들거나 할당합니다.</summary>
      <param name="logName">지정된 컴퓨터의 로그 이름입니다.</param>
      <param name="machineName">로그가 있는 컴퓨터입니다.</param>
      <param name="source">이벤트 로그 항목의 원본입니다.</param>
      <exception cref="T:System.ArgumentNullException">로그 이름이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">로그 이름이 잘못된 경우  
 또는  
 컴퓨터 이름이 잘못된 경우</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.BeginInit">
      <summary>양식에서 사용하거나 다른 구성 요소에서 사용하는 <see cref="T:System.Diagnostics.EventLog" />를 초기화합니다. 초기화는 런타임에 발생합니다.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Diagnostics.EventLog" />가 이미 초기화된 경우</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.Clear">
      <summary>이벤트 로그에서 모든 엔트리를 제거합니다.</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">이벤트 로그가 지워지지 않은 경우  
 또는  
 로그를 열 수 없는 경우. Windows 오류 코드를 사용할 수 없습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Diagnostics.EventLog.Log" /> 속성에 값이 지정되지 않은 경우. 로그 이름이 빈 문자열이 아닌지 확인하십시오.</exception>
      <exception cref="T:System.InvalidOperationException">로그가 없는 경우</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.Close">
      <summary>이벤트 로그를 닫고 읽기 및 쓰기 핸들을 해제합니다.</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">이벤트 로그의 읽기 또는 쓰기 핸들을 해제하지 못한 경우</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.CreateEventSource(System.Diagnostics.EventSourceCreationData)">
      <summary>이벤트 소스와 해당 이벤트 로그에 대한 지정된 구성 속성을 사용하여 지역화된 이벤트 메시지를 작성할 올바른 이벤트 소스를 설정합니다.</summary>
      <param name="sourceData">이벤트 원본과 대상 이벤트 로그에 대한 구성 속성입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="sourceData" />에 지정한 컴퓨터 이름이 잘못된 경우  
또는 
<paramref name="sourceData" />에 지정된 소스 이름이 <see langword="null" />인 경우  
또는 
<paramref name="sourceData" />에 지정한 로그 이름이 잘못된 경우. 이벤트 로그 이름은 인쇄할 수 있는 문자로 구성되어야 하며 '*', '?' 또는 '\'를 사용할 수 없습니다.  
또는 
<paramref name="sourceData" />에 지정한 로그 이름을 사용자 로그를 만드는 데 사용할 수 없는 경우. 이벤트 로그 이름 AppEvent, SysEvent 및 SecEvent는 시스템용으로 예약되어 있습니다.  
또는 
로그 이름이 기존 이벤트 소스 이름과 일치하는 경우  
또는 
<paramref name="sourceData" />에 지정한 소스 이름 때문에 레지스트리 키 경로가 254자를 넘는 경우  
또는 
<paramref name="sourceData" />에 지정한 로그 이름의 처음 8개 문자가 고유하지 않은 경우  
또는 
<paramref name="sourceData" />에 지정한 소스 이름이 이미 등록된 경우  
또는 
<paramref name="sourceData" />에 지정한 소스 이름이 기존 이벤트 로그 이름과 일치하는 경우</exception>
      <exception cref="T:System.InvalidOperationException">이벤트 로그의 레지스트리 키를 열 수 없는 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceData" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.CreateEventSource(System.String,System.String)">
      <summary>로컬 컴퓨터의 로그에 엔트리를 쓰는 유효한 이벤트 소스로 지정된 소스 이름을 설정합니다. 또한 이 방법을 사용하면 로컬 컴퓨터에 새로운 사용자 지정 로그를 만들 수도 있습니다.</summary>
      <param name="source">로컬 컴퓨터에 등록되는 애플리케이션의 원본 이름입니다.</param>
      <param name="logName">소스 엔트리를 쓸 로그의 이름입니다. 가능한 값은 애플리케이션, 시스템 또는 사용자 지정 이벤트 로그를 포함합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" />가 빈 문자열("")이나 <see langword="null" />인 경우  
또는 
 <paramref name="logName" />이 올바른 이벤트 로그 이름이 아닌 경우. 이벤트 로그 이름은 인쇄할 수 있는 문자로 구성되어야 하며 '*', '?' 또는 '\'를 사용할 수 없습니다.  
또는 
 <paramref name="logName" />은 사용자 로그 작성에 유효하지 않습니다. 이벤트 로그 이름 AppEvent, SysEvent 및 SecEvent는 시스템용으로 예약되어 있습니다.  
또는 
로그 이름이 기존 이벤트 소스 이름과 일치하는 경우  
또는 
소스 이름 때문에 레지스트리 키 경로가 254자를 넘는 경우  
또는 
<paramref name="logName" />의 처음 8개 문자가 기존 이벤트 로그 이름의 처음 8개 문자와 일치하는 경우  
또는 
소스가 이미 로컬 컴퓨터에 있기 때문에 해당 소스를 등록할 수 없는 경우  
또는 
소스 이름이 기존 이벤트 로그 이름과 일치하는 경우</exception>
      <exception cref="T:System.InvalidOperationException">이벤트 로그의 레지스트리 키를 로컬 컴퓨터에서 열 수 없는 경우</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.CreateEventSource(System.String,System.String,System.String)">
      <summary>지정된 컴퓨터의 로그에 엔트리를 쓰는 유효한 이벤트 소스로 지정된 소스 이름을 설정합니다. 또한 이 방법을 사용하면 지정한 컴퓨터에 새로운 사용자 지정 로그를 만들 수도 있습니다.</summary>
      <param name="source">지정한 컴퓨터에 등록되는 애플리케이션의 원본입니다.</param>
      <param name="logName">소스 엔트리를 쓸 로그의 이름입니다. 가능한 값은 애플리케이션, 시스템 또는 사용자 지정 이벤트 로그를 포함합니다. 값을 지정하지 않은 경우 기본적으로 <paramref name="logName" />은 애플리케이션이 됩니다.</param>
      <param name="machineName">이 이벤트 원본을 등록할 컴퓨터의 이름입니다. 로컬 컴퓨터의 경우에는 "."입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="machineName" />이 올바른 컴퓨터 이름이 아닌 경우  
또는 
 <paramref name="source" />가 빈 문자열("")이나 <see langword="null" />인 경우  
또는 
 <paramref name="logName" />이 올바른 이벤트 로그 이름이 아닌 경우. 이벤트 로그 이름은 인쇄할 수 있는 문자로 구성되어야 하며 '*', '?' 또는 '\'를 사용할 수 없습니다.  
또는 
 <paramref name="logName" />은 사용자 로그 작성에 유효하지 않습니다. 이벤트 로그 이름 AppEvent, SysEvent 및 SecEvent는 시스템용으로 예약되어 있습니다.  
또는 
로그 이름이 기존 이벤트 소스 이름과 일치하는 경우  
또는 
소스 이름 때문에 레지스트리 키 경로가 254자를 넘는 경우  
또는 
<paramref name="logName" />의 처음 8개 문자가 지정된 컴퓨터에 있는 기존 이벤트 로그 이름의 처음 8개 문자와 일치하는 경우  
또는 
소스가 이미 지정한 컴퓨터에 있기 때문에 해당 소스를 등록할 수 없는 경우  
또는 
소스 이름이 기존 이벤트 소스 이름과 일치하는 경우</exception>
      <exception cref="T:System.InvalidOperationException">이벤트 로그의 레지스트리 키를 지정한 컴퓨터에서 열 수 없는 경우</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.Delete(System.String)">
      <summary>로컬 컴퓨터에서 이벤트 로그를 제거합니다.</summary>
      <param name="logName">삭제할 로그의 이름입니다. 가능한 값은 다음과 같습니다. 애플리케이션, 보안, 시스템 및 컴퓨터의 모든 사용자 지정 이벤트 로그를 사용할 수 있습니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="logName" />가 빈 문자열("")이나 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException">이벤트 로그의 레지스트리 키를 로컬 컴퓨터에서 열 수 없는 경우  
또는
 로컬 컴퓨터에 로그가 없는 경우</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">이벤트 로그가 지워지지 않은 경우  
 또는  
 로그를 열 수 없는 경우. Windows 오류 코드를 사용할 수 없습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.Delete(System.String,System.String)">
      <summary>지정한 컴퓨터에서 이벤트 로그를 제거합니다.</summary>
      <param name="logName">삭제할 로그의 이름입니다. 가능한 값은 다음과 같습니다. 애플리케이션, 보안, 시스템 및 지정된 컴퓨터의 모든 사용자 지정 이벤트 로그를 사용할 수 있습니다.</param>
      <param name="machineName">로그를 삭제할 컴퓨터의 이름입니다. 로컬 컴퓨터의 경우에는 "."입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="logName" />가 빈 문자열("")이나 <see langword="null" />인 경우  
또는 
 <paramref name="machineName" />이 올바른 컴퓨터 이름이 아닌 경우</exception>
      <exception cref="T:System.InvalidOperationException">이벤트 로그의 레지스트리 키를 지정한 컴퓨터에서 열 수 없는 경우  
또는
 지정된 컴퓨터에 로그가 없는 경우</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">이벤트 로그가 지워지지 않은 경우  
 또는  
 로그를 열 수 없는 경우. Windows 오류 코드를 사용할 수 없습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)">
      <summary>로컬 컴퓨터의 이벤트 로그에서 이벤트 소스 등록을 제거합니다.</summary>
      <param name="source">이벤트 로그 시스템에 등록된 애플리케이션 이름입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> 매개 변수가 로컬 컴퓨터의 레지스트리에 없는 경우  
또는 
이벤트 로그의 레지스트리 키에 대한 쓰기 권한이 없는 경우</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.DeleteEventSource(System.String,System.String)">
      <summary>지정한 컴퓨터에서 애플리케이션의 이벤트 소스 등록을 제거합니다.</summary>
      <param name="source">이벤트 로그 시스템에 등록된 애플리케이션 이름입니다.</param>
      <param name="machineName">등록을 제거할 컴퓨터의 이름입니다. 로컬 컴퓨터의 경우에는 "."입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="machineName" /> 매개 변수가 잘못되었습니다.  
또는 
<paramref name="source" /> 매개 변수가 지정한 컴퓨터의 레지스트리에 없는 경우  
또는 
이벤트 로그의 레지스트리 키에 대한 쓰기 권한이 없는 경우</exception>
      <exception cref="T:System.InvalidOperationException">레지스트리에서 <paramref name="source" />에 대한 부모 레지스트리 키에 같은 이름의 하위 키가 없기 때문에 <paramref name="source" />를 삭제할 수 없는 경우</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.Dispose(System.Boolean)">
      <summary>
        <see cref="T:System.Diagnostics.EventLog" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</summary>
      <param name="disposing">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="P:System.Diagnostics.EventLog.EnableRaisingEvents">
      <summary>
        <see cref="T:System.Diagnostics.EventLog" />가 <see cref="E:System.Diagnostics.EventLog.EntryWritten" /> 이벤트 알림을 받는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>로그에 항목을 쓸 때 <see cref="T:System.Diagnostics.EventLog" />에서 알림을 받으면 <see langword="true" />이고, 받지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException">이벤트 로그가 원격 컴퓨터에 있는 경우</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.EndInit">
      <summary>양식에서 사용하거나 다른 구성 요소에서 사용하는 <see cref="T:System.Diagnostics.EventLog" />의 초기화를 끝냅니다. 초기화는 런타임에 발생합니다.</summary>
    </member>
    <member name="P:System.Diagnostics.EventLog.Entries">
      <summary>이벤트 로그의 내용을 가져옵니다.</summary>
      <returns>이벤트 로그에서 항목을 유지하는 <see cref="T:System.Diagnostics.EventLogEntryCollection" />입니다. 각 항목은 <see cref="T:System.Diagnostics.EventLogEntry" /> 클래스의 인스턴스에 연결됩니다.</returns>
    </member>
    <member name="E:System.Diagnostics.EventLog.EntryWritten">
      <summary>로컬 컴퓨터에 있는 이벤트 로그에 엔트리를 쓸 때 발생합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.EventLog.Exists(System.String)">
      <summary>로컬 컴퓨터에 로그가 있는지를 확인합니다.</summary>
      <param name="logName">검색할 로그의 이름입니다. 가능한 값은 다음과 같습니다. 애플리케이션, 보안, 시스템, 기타 애플리케이션 관련 로그(예: Active Directory와 연결된 로그) 또는 컴퓨터에 있는 모든 사용자 지정 로그를 사용할 수 있습니다.</param>
      <returns>로컬 컴퓨터에 로그가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.ArgumentException">logName이 <see langword="null" />이거나 값이 비어 있는 경우</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.Exists(System.String,System.String)">
      <summary>지정한 컴퓨터에 로그가 있는지를 확인합니다.</summary>
      <param name="logName">검색할 로그입니다. 가능한 값은 다음과 같습니다. 애플리케이션, 보안, 시스템, 기타 애플리케이션 관련 로그(예: Active Directory와 연결된 로그) 또는 컴퓨터에 있는 모든 사용자 지정 로그를 사용할 수 있습니다.</param>
      <param name="machineName">로그를 검색할 컴퓨터의 이름입니다. 로컬 컴퓨터의 경우 "."입니다.</param>
      <returns>지정한 컴퓨터에 로그가 있으면 <see langword="true" />이고, 없으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.ArgumentException">잘못된 형식의 <paramref name="machineName" /> 매개 변수인 경우. 검색할 컴퓨터에 적절한 구문을 사용했는지 확인하십시오.  
또는 
<paramref name="logName" />이 <see langword="null" />이거나 값이 비어 있는 경우</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.GetEventLogs">
      <summary>로컬 컴퓨터에서 모든 이벤트 로그를 검색하여 목록을 포함하는 <see cref="T:System.Diagnostics.EventLog" /> 개체의 배열을 만듭니다.</summary>
      <returns>로컬 컴퓨터의 로그를 나타내는 <see cref="T:System.Diagnostics.EventLog" /> 형식의 배열입니다.</returns>
      <exception cref="T:System.SystemException">레지스트리에 대한 읽기 권한이 없는 경우  
 또는  
 컴퓨터에 이벤트 로그 서비스가 없는 경우</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.GetEventLogs(System.String)">
      <summary>지정한 컴퓨터에서 모든 이벤트 로그를 검색하여 목록을 포함하는 <see cref="T:System.Diagnostics.EventLog" /> 개체의 배열을 만듭니다.</summary>
      <param name="machineName">이벤트 로그를 검색할 컴퓨터입니다.</param>
      <returns>지정한 컴퓨터의 로그를 나타내는 <see cref="T:System.Diagnostics.EventLog" /> 형식의 배열입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="machineName" /> 매개 변수가 잘못된 컴퓨터 이름인 경우</exception>
      <exception cref="T:System.InvalidOperationException">레지스트리에 대한 읽기 권한이 없는 경우  
 또는  
 컴퓨터에 이벤트 로그 서비스가 없는 경우</exception>
    </member>
    <member name="P:System.Diagnostics.EventLog.Log">
      <summary>읽거나 쓸 로그의 이름을 가져오거나 설정합니다.</summary>
      <returns>로그의 이름입니다. 이 이름에는 애플리케이션, 시스템, 보안 또는 사용자 지정 로그 이름을 사용할 수 있습니다. 기본값은 빈 문자열("")입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLog.LogDisplayName">
      <summary>이벤트 로그 이름을 가져옵니다.</summary>
      <returns>시스템의 이벤트 뷰어에서 이벤트 로그를 나타내는 이름입니다.</returns>
      <exception cref="T:System.InvalidOperationException">지정한 <see cref="P:System.Diagnostics.EventLog.Log" />가 이 컴퓨터의 레지스트리에 없는 경우</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.LogNameFromSourceName(System.String,System.String)">
      <summary>지정한 소스가 등록된 로그의 이름을 가져옵니다.</summary>
      <param name="source">이벤트 원본의 이름입니다.</param>
      <param name="machineName">검색할 컴퓨터의 이름입니다. 로컬 컴퓨터의 경우 "."입니다.</param>
      <returns>레지스트리에서 지정한 소스와 연결된 로그의 이름입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLog.MachineName">
      <summary>이벤트를 읽거나 쓸 컴퓨터 이름을 가져오거나 설정합니다.</summary>
      <returns>이벤트 로그가 있는 서버의 이름입니다. 기본값은 로컬 컴퓨터(".")입니다.</returns>
      <exception cref="T:System.ArgumentException">컴퓨터 이름이 잘못된 경우</exception>
    </member>
    <member name="P:System.Diagnostics.EventLog.MaximumKilobytes">
      <summary>최대 이벤트 로그 크기(KB)를 가져오거나 설정합니다.</summary>
      <returns>최대 이벤트 로그 크기(KB)입니다. 기본값은 512로, 최대 파일 크기가 512KB임을 나타냅니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">지정된 값이 64보다 작거나 4194240보다 크거나 64의 짝수 배수가 아닌 경우</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Diagnostics.EventLog.Log" /> 값이 올바른 로그 이름이 아닌 경우  
또는 
이벤트 로그의 레지스트리 키를 대상 컴퓨터에서 열 수 없는 경우</exception>
    </member>
    <member name="P:System.Diagnostics.EventLog.MinimumRetentionDays">
      <summary>이벤트 로그에 엔트리를 유지할 날짜 수를 가져옵니다.</summary>
      <returns>이벤트 로그의 엔트리가 유지되는 날짜 수입니다. 기본값은 7입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.EventLog.ModifyOverflowPolicy(System.Diagnostics.OverflowAction,System.Int32)">
      <summary>이벤트 로그가 최대 파일 크기에 도달할 때 새 엔트리를 쓰기 위한 구성된 동작을 변경합니다.</summary>
      <param name="action">이벤트 로그에 새 항목을 쓰기 위한 오버플로 동작입니다.</param>
      <param name="retentionDays">각 이벤트 로그 엔트리가 유지되는 최소 날짜 수입니다. 이 매개 변수는 <paramref name="action" />이 <see cref="F:System.Diagnostics.OverflowAction.OverwriteOlder" />로 설정되어 있는 경우에만 사용됩니다.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="action" />는 유효한 <see cref="P:System.Diagnostics.EventLog.OverflowAction" /> 값이 아닙니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="retentionDays" />가 0보다 작거나 365보다 큰 경우</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Diagnostics.EventLog.Log" /> 값이 올바른 로그 이름이 아닌 경우  
또는 
이벤트 로그의 레지스트리 키를 대상 컴퓨터에서 열 수 없는 경우</exception>
    </member>
    <member name="P:System.Diagnostics.EventLog.OverflowAction">
      <summary>이벤트 로그가 최대 파일 크기에 도달할 때 새 엔트리를 저장하기 위한 구성된 동작을 가져옵니다.</summary>
      <returns>이벤트 로그가 최대 로그 크기에 도달할 때 새 항목을 저장하기 위해 구성된 동작을 지정하는 <see cref="T:System.Diagnostics.OverflowAction" /> 값입니다. 기본값은 <see cref="F:System.Diagnostics.OverflowAction.OverwriteOlder" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.EventLog.RegisterDisplayName(System.String,System.Int64)">
      <summary>서버 이벤트 뷰어에 표시되는 이벤트 로그의 지역화된 이름을 지정합니다.</summary>
      <param name="resourceFile">지역화된 리소스 파일의 완전하게 지정된 경로입니다.</param>
      <param name="resourceId">리소스 파일에 있는 지역화된 문자열을 인덱싱하는 리소스 식별자입니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Diagnostics.EventLog.Log" /> 값이 올바른 로그 이름이 아닌 경우  
또는 
이벤트 로그의 레지스트리 키를 대상 컴퓨터에서 열 수 없는 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="resourceFile" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="P:System.Diagnostics.EventLog.Source">
      <summary>이벤트 로그에 쓸 때 등록하고 사용할 소스 이름을 가져오거나 설정합니다.</summary>
      <returns>엔트리 소스로 이벤트 로그에 등록되는 이름입니다. 기본값은 빈 문자열("")입니다.</returns>
      <exception cref="T:System.ArgumentException">소스 이름 때문에 레지스트리 키 경로가 254자를 넘는 경우</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.SourceExists(System.String)">
      <summary>이벤트 소스가 로컬 컴퓨터에 등록되었는지를 확인합니다.</summary>
      <param name="source">이벤트 원본의 이름입니다.</param>
      <returns>로컬 컴퓨터에 이벤트 소스가 등록되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.Security.SecurityException">
        <paramref name="source" />를 찾을 수 없었지만 모든 또는 일부 이벤트 로그를 검색할 수 없는 경우</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.SourceExists(System.String,System.String)">
      <summary>이벤트 소스가 지정한 컴퓨터에 등록되었는지를 확인합니다.</summary>
      <param name="source">이벤트 원본의 이름입니다.</param>
      <param name="machineName">검색할 컴퓨터의 이름입니다. 로컬 컴퓨터의 경우에는 "."입니다.</param>
      <returns>지정한 컴퓨터에 이벤트 원본이 등록되어 있으면 <see langword="true" />이고, 등록되지 않았으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="machineName" />이 잘못된 컴퓨터 이름인 경우</exception>
      <exception cref="T:System.Security.SecurityException">
        <paramref name="source" />를 찾을 수 없었지만 모든 또는 일부 이벤트 로그를 검색할 수 없는 경우</exception>
    </member>
    <member name="P:System.Diagnostics.EventLog.SynchronizingObject">
      <summary>
        <see cref="T:System.Diagnostics.EventLog" /> 항목 쓰기 이벤트의 결과로 발생하는 이벤트 처리기 호출을 마샬링하는 데 사용되는 개체를 가져오거나 설정합니다.</summary>
      <returns>이벤트 로그에서 <see cref="E:System.Diagnostics.EventLog.EntryWritten" /> 이벤트의 결과로 발생하는 이벤트 처리기 호출을 마샬링하는 데 사용되는 <see cref="T:System.ComponentModel.ISynchronizeInvoke" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String)">
      <summary>지정한 메시지 텍스트로 정보 형식 엔트리를 이벤트 로그에 씁니다.</summary>
      <param name="message">이벤트 로그에 쓸 문자열입니다.</param>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Diagnostics.EventLog.Source" />의 <see cref="T:System.Diagnostics.EventLog" /> 속성이 설정되지 않은 경우  
또는 
메서드가 새 이벤트 원본을 등록하려고 시도했지만 <see cref="P:System.Diagnostics.EventLog.MachineName" />의 컴퓨터 이름이 유효하지 않습니다.  
또는 
소스가 이미 다른 이벤트 로그에 등록된 경우  
또는 
메시지 문자열이 31,839 바이트보다 깁니다(Windows Vista 이전의 Windows 운영 체제에서 32,766 바이트).  
또는 
소스 이름 때문에 레지스트리 키 경로가 254자를 넘는 경우</exception>
      <exception cref="T:System.InvalidOperationException">이벤트 로그의 레지스트리 키를 열 수 없는 경우</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">이벤트 로그에 이벤트 엔트리를 쓸 때 운영 체제에서 오류를 보고한 경우. Windows 오류 코드를 사용할 수 없습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType)">
      <summary>지정한 메시지 텍스트로 오류, 경고, 정보, 성공 감사 또는 실패 감사 엔트리를 이벤트 로그에 씁니다.</summary>
      <param name="message">이벤트 로그에 쓸 문자열입니다.</param>
      <param name="type">
        <see cref="T:System.Diagnostics.EventLogEntryType" /> 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Diagnostics.EventLog.Source" />의 <see cref="T:System.Diagnostics.EventLog" /> 속성이 설정되지 않은 경우  
또는 
메서드가 새 이벤트 원본을 등록하려고 시도했지만 <see cref="P:System.Diagnostics.EventLog.MachineName" />의 컴퓨터 이름이 유효하지 않습니다.  
또는 
소스가 이미 다른 이벤트 로그에 등록된 경우  
또는 
메시지 문자열이 31,839 바이트보다 깁니다(Windows Vista 이전의 Windows 운영 체제에서 32,766 바이트).  
또는 
소스 이름 때문에 레지스트리 키 경로가 254자를 넘는 경우</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="type" />은 유효한 <see cref="T:System.Diagnostics.EventLogEntryType" />이 아닙니다.</exception>
      <exception cref="T:System.InvalidOperationException">이벤트 로그의 레지스트리 키를 열 수 없는 경우</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">이벤트 로그에 이벤트 엔트리를 쓸 때 운영 체제에서 오류를 보고한 경우. Windows 오류 코드를 사용할 수 없습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32)">
      <summary>지정한 메시지 텍스트와 애플리케이션 정의 이벤트 식별자로 엔트리를 이벤트 로그에 씁니다.</summary>
      <param name="message">이벤트 로그에 쓸 문자열입니다.</param>
      <param name="type">
        <see cref="T:System.Diagnostics.EventLogEntryType" /> 값 중 하나입니다.</param>
      <param name="eventID">이벤트의 애플리케이션별 식별자입니다.</param>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Diagnostics.EventLog.Source" />의 <see cref="T:System.Diagnostics.EventLog" /> 속성이 설정되지 않은 경우  
또는 
메서드가 새 이벤트 원본을 등록하려고 시도했지만 <see cref="P:System.Diagnostics.EventLog.MachineName" />의 컴퓨터 이름이 유효하지 않습니다.  
또는 
소스가 이미 다른 이벤트 로그에 등록된 경우  
또는 
 <paramref name="eventID" />가 0보다 작거나 <see cref="F:System.UInt16.MaxValue" />보다 큽니다.  
또는 
메시지 문자열이 31,839 바이트보다 깁니다(Windows Vista 이전의 Windows 운영 체제에서 32,766 바이트).  
또는 
소스 이름 때문에 레지스트리 키 경로가 254자를 넘는 경우</exception>
      <exception cref="T:System.InvalidOperationException">이벤트 로그의 레지스트리 키를 열 수 없는 경우</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="type" />은 유효한 <see cref="T:System.Diagnostics.EventLogEntryType" />이 아닙니다.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">이벤트 로그에 이벤트 엔트리를 쓸 때 운영 체제에서 오류를 보고한 경우. Windows 오류 코드를 사용할 수 없습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16)">
      <summary>지정한 메시지 텍스트, 애플리케이션 정의 이벤트 식별자 및 애플리케이션 정의 범주로 엔트리를 이벤트 로그에 씁니다.</summary>
      <param name="message">이벤트 로그에 쓸 문자열입니다.</param>
      <param name="type">
        <see cref="T:System.Diagnostics.EventLogEntryType" /> 값 중 하나입니다.</param>
      <param name="eventID">이벤트의 애플리케이션별 식별자입니다.</param>
      <param name="category">메시지와 연결된 애플리케이션별 하위 범주입니다.</param>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Diagnostics.EventLog.Source" />의 <see cref="T:System.Diagnostics.EventLog" /> 속성이 설정되지 않은 경우  
또는 
메서드가 새 이벤트 원본을 등록하려고 시도했지만 <see cref="P:System.Diagnostics.EventLog.MachineName" />의 컴퓨터 이름이 유효하지 않습니다.  
또는 
소스가 이미 다른 이벤트 로그에 등록된 경우  
또는 
 <paramref name="eventID" />가 0보다 작거나 <see cref="F:System.UInt16.MaxValue" />보다 큽니다.  
또는 
메시지 문자열이 31,839 바이트보다 깁니다(Windows Vista 이전의 Windows 운영 체제에서 32,766 바이트).  
또는 
소스 이름 때문에 레지스트리 키 경로가 254자를 넘는 경우</exception>
      <exception cref="T:System.InvalidOperationException">이벤트 로그의 레지스트리 키를 열 수 없는 경우</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="type" />은 유효한 <see cref="T:System.Diagnostics.EventLogEntryType" />이 아닙니다.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">이벤트 로그에 이벤트 엔트리를 쓸 때 운영 체제에서 오류를 보고한 경우. Windows 오류 코드를 사용할 수 없습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16,System.Byte[])">
      <summary>지정한 메시지 텍스트, 애플리케이션 정의 이벤트 식별자, 애플리케이션 정의 범주로 엔트리를 이벤트 로그에 쓰고 메시지에 이진 데이터를 추가합니다.</summary>
      <param name="message">이벤트 로그에 쓸 문자열입니다.</param>
      <param name="type">
        <see cref="T:System.Diagnostics.EventLogEntryType" /> 값 중 하나입니다.</param>
      <param name="eventID">이벤트의 애플리케이션별 식별자입니다.</param>
      <param name="category">메시지와 연결된 애플리케이션별 하위 범주입니다.</param>
      <param name="rawData">항목과 연관된 이진 데이터를 보유하는 바이트의 배열입니다.</param>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Diagnostics.EventLog.Source" />의 <see cref="T:System.Diagnostics.EventLog" /> 속성이 설정되지 않은 경우  
또는 
메서드가 새 이벤트 원본을 등록하려고 시도했지만 <see cref="P:System.Diagnostics.EventLog.MachineName" />의 컴퓨터 이름이 유효하지 않습니다.  
또는 
소스가 이미 다른 이벤트 로그에 등록된 경우  
또는 
 <paramref name="eventID" />가 0보다 작거나 <see cref="F:System.UInt16.MaxValue" />보다 큽니다.  
또는 
메시지 문자열이 31,839 바이트보다 깁니다(Windows Vista 이전의 Windows 운영 체제에서 32,766 바이트).  
또는 
소스 이름 때문에 레지스트리 키 경로가 254자를 넘는 경우</exception>
      <exception cref="T:System.InvalidOperationException">이벤트 로그의 레지스트리 키를 열 수 없는 경우</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="type" />은 유효한 <see cref="T:System.Diagnostics.EventLogEntryType" />이 아닙니다.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">이벤트 로그에 이벤트 엔트리를 쓸 때 운영 체제에서 오류를 보고한 경우. Windows 오류 코드를 사용할 수 없습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String)">
      <summary>특정 등록 이벤트 소스를 사용하여 정보 형식 엔트리를 지정된 메시지 텍스트로 이벤트 로그에 씁니다.</summary>
      <param name="source">지정한 컴퓨터에 등록되는 애플리케이션의 원본입니다.</param>
      <param name="message">이벤트 로그에 쓸 문자열입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> 값이 빈 문자열("")인 경우  
또는 
<paramref name="source" /> 값이 <see langword="null" />입니다.  
또는 
메시지 문자열이 31,839 바이트보다 깁니다(Windows Vista 이전의 Windows 운영 체제에서 32,766 바이트).  
또는 
소스 이름 때문에 레지스트리 키 경로가 254자를 넘는 경우</exception>
      <exception cref="T:System.InvalidOperationException">이벤트 로그의 레지스트리 키를 열 수 없는 경우</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">이벤트 로그에 이벤트 엔트리를 쓸 때 운영 체제에서 오류를 보고한 경우. Windows 오류 코드를 사용할 수 없습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType)">
      <summary>특정 등록 이벤트 소스를 사용하여 지정된 메시지 텍스트로 오류, 경고, 정보, 성공 감사 또는 실패 감사 엔트리를 이벤트 로그에 씁니다.</summary>
      <param name="source">지정한 컴퓨터에 등록되는 애플리케이션의 원본입니다.</param>
      <param name="message">이벤트 로그에 쓸 문자열입니다.</param>
      <param name="type">
        <see cref="T:System.Diagnostics.EventLogEntryType" /> 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> 값이 빈 문자열("")인 경우  
또는 
<paramref name="source" /> 값이 <see langword="null" />입니다.  
또는 
메시지 문자열이 31,839 바이트보다 깁니다(Windows Vista 이전의 Windows 운영 체제에서 32,766 바이트).  
또는 
소스 이름 때문에 레지스트리 키 경로가 254자를 넘는 경우</exception>
      <exception cref="T:System.InvalidOperationException">이벤트 로그의 레지스트리 키를 열 수 없는 경우</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="type" />은 유효한 <see cref="T:System.Diagnostics.EventLogEntryType" />이 아닙니다.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">이벤트 로그에 이벤트 엔트리를 쓸 때 운영 체제에서 오류를 보고한 경우. Windows 오류 코드를 사용할 수 없습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType,System.Int32)">
      <summary>특정 등록 이벤트 소스를 사용하여 엔트리를 지정된 메시지 텍스트와 애플리케이션 정의 이벤트 식별자로 이벤트 로그에 씁니다.</summary>
      <param name="source">지정한 컴퓨터에 등록되는 애플리케이션의 원본입니다.</param>
      <param name="message">이벤트 로그에 쓸 문자열입니다.</param>
      <param name="type">
        <see cref="T:System.Diagnostics.EventLogEntryType" /> 값 중 하나입니다.</param>
      <param name="eventID">이벤트의 애플리케이션별 식별자입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> 값이 빈 문자열("")인 경우  
또는 
<paramref name="source" /> 값이 <see langword="null" />입니다.  
또는 
 <paramref name="eventID" />가 0보다 작거나 <see cref="F:System.UInt16.MaxValue" />보다 큽니다.  
또는 
메시지 문자열이 31,839 바이트보다 깁니다(Windows Vista 이전의 Windows 운영 체제에서 32,766 바이트).  
또는 
소스 이름 때문에 레지스트리 키 경로가 254자를 넘는 경우</exception>
      <exception cref="T:System.InvalidOperationException">이벤트 로그의 레지스트리 키를 열 수 없는 경우</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="type" />은 유효한 <see cref="T:System.Diagnostics.EventLogEntryType" />이 아닙니다.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">이벤트 로그에 이벤트 엔트리를 쓸 때 운영 체제에서 오류를 보고한 경우. Windows 오류 코드를 사용할 수 없습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16)">
      <summary>특정 등록 이벤트 소스를 사용하여 엔트리를 지정된 메시지 텍스트, 애플리케이션 정의 이벤트 식별자, 애플리케이션 정의 범주로 이벤트 로그에 씁니다. 이벤트 뷰어에서 <paramref name="category" />를 사용하여 로그의 이벤트를 필터링할 수 있습니다.</summary>
      <param name="source">지정한 컴퓨터에 등록되는 애플리케이션의 원본입니다.</param>
      <param name="message">이벤트 로그에 쓸 문자열입니다.</param>
      <param name="type">
        <see cref="T:System.Diagnostics.EventLogEntryType" /> 값 중 하나입니다.</param>
      <param name="eventID">이벤트의 애플리케이션별 식별자입니다.</param>
      <param name="category">메시지와 연결된 애플리케이션별 하위 범주입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> 값이 빈 문자열("")인 경우  
또는 
<paramref name="source" /> 값이 <see langword="null" />입니다.  
또는 
 <paramref name="eventID" />가 0보다 작거나 <see cref="F:System.UInt16.MaxValue" />보다 큽니다.  
또는 
메시지 문자열이 31,839 바이트보다 깁니다(Windows Vista 이전의 Windows 운영 체제에서 32,766 바이트).  
또는 
소스 이름 때문에 레지스트리 키 경로가 254자를 넘는 경우</exception>
      <exception cref="T:System.InvalidOperationException">이벤트 로그의 레지스트리 키를 열 수 없는 경우</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="type" />은 유효한 <see cref="T:System.Diagnostics.EventLogEntryType" />이 아닙니다.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">이벤트 로그에 이벤트 엔트리를 쓸 때 운영 체제에서 오류를 보고한 경우. Windows 오류 코드를 사용할 수 없습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16,System.Byte[])">
      <summary>특정 등록 이벤트 소스를 사용하여 엔트리를 지정된 메시지 텍스트, 애플리케이션 정의 이벤트 식별자, 애플리케이션 정의 범주로 이벤트 로그에 쓰고 메시지에 이진 데이터를 추가합니다.</summary>
      <param name="source">지정한 컴퓨터에 등록되는 애플리케이션의 원본입니다.</param>
      <param name="message">이벤트 로그에 쓸 문자열입니다.</param>
      <param name="type">
        <see cref="T:System.Diagnostics.EventLogEntryType" /> 값 중 하나입니다.</param>
      <param name="eventID">이벤트의 애플리케이션별 식별자입니다.</param>
      <param name="category">메시지와 연결된 애플리케이션별 하위 범주입니다.</param>
      <param name="rawData">항목과 연관된 이진 데이터를 보유하는 바이트의 배열입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> 값이 빈 문자열("")인 경우  
또는 
<paramref name="source" /> 값이 <see langword="null" />입니다.  
또는 
 <paramref name="eventID" />가 0보다 작거나 <see cref="F:System.UInt16.MaxValue" />보다 큽니다.  
또는 
메시지 문자열이 31,839 바이트보다 깁니다(Windows Vista 이전의 Windows 운영 체제에서 32,766 바이트).  
또는 
소스 이름 때문에 레지스트리 키 경로가 254자를 넘는 경우</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="type" />은 유효한 <see cref="T:System.Diagnostics.EventLogEntryType" />이 아닙니다.</exception>
      <exception cref="T:System.InvalidOperationException">이벤트 로그의 레지스트리 키를 열 수 없는 경우</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">이벤트 로그에 이벤트 엔트리를 쓸 때 운영 체제에서 오류를 보고한 경우. Windows 오류 코드를 사용할 수 없습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEvent(System.Diagnostics.EventInstance,System.Byte[],System.Object[])">
      <summary>지정된 이벤트 데이터, 메시지 대체 문자열 및 관련 이진 데이터가 포함된 이벤트 로그 엔트리를 씁니다.</summary>
      <param name="instance">지역화된 이벤트 로그 항목을 나타내는 <see cref="T:System.Diagnostics.EventInstance" /> 인스턴스입니다.</param>
      <param name="data">항목과 연관된 이진 데이터를 보유하는 바이트의 배열입니다.</param>
      <param name="values">이벤트 로그 항목의 메시지 텍스트로 병합될 문자열의 배열입니다.</param>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Diagnostics.EventLog.Source" />의 <see cref="T:System.Diagnostics.EventLog" /> 속성이 설정되지 않은 경우  
또는 
메서드가 새 이벤트 원본을 등록하려고 시도했지만 <see cref="P:System.Diagnostics.EventLog.MachineName" />의 컴퓨터 이름이 유효하지 않습니다.  
또는 
소스가 이미 다른 이벤트 로그에 등록된 경우  
또는 
 <paramref name="instance.InstanceId" />가 0보다 작거나 <see cref="F:System.UInt16.MaxValue" />보다 큽니다.  
또는 
 <paramref name="values" />의 요소가 256개가 넘는 경우  
또는 
<paramref name="values" /> 요소 중 하나가 32766바이트보다 긴 경우  
또는 
소스 이름 때문에 레지스트리 키 경로가 254자를 넘는 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException">이벤트 로그의 레지스트리 키를 열 수 없는 경우</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">이벤트 로그에 이벤트 엔트리를 쓸 때 운영 체제에서 오류를 보고한 경우. Windows 오류 코드를 사용할 수 없습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEvent(System.Diagnostics.EventInstance,System.Object[])">
      <summary>이벤트 로그에 지역화된 엔트리를 씁니다.</summary>
      <param name="instance">지역화된 이벤트 로그 항목을 나타내는 <see cref="T:System.Diagnostics.EventInstance" /> 인스턴스입니다.</param>
      <param name="values">이벤트 로그 항목의 메시지 텍스트로 병합될 문자열의 배열입니다.</param>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Diagnostics.EventLog.Source" />의 <see cref="T:System.Diagnostics.EventLog" /> 속성이 설정되지 않은 경우  
또는 
메서드가 새 이벤트 원본을 등록하려고 시도했지만 <see cref="P:System.Diagnostics.EventLog.MachineName" />의 컴퓨터 이름이 유효하지 않습니다.  
또는 
소스가 이미 다른 이벤트 로그에 등록된 경우  
또는 
 <paramref name="instance.InstanceId" />가 0보다 작거나 <see cref="F:System.UInt16.MaxValue" />보다 큽니다.  
또는 
 <paramref name="values" />의 요소가 256개가 넘는 경우  
또는 
<paramref name="values" /> 요소 중 하나가 32766바이트보다 긴 경우  
또는 
소스 이름 때문에 레지스트리 키 경로가 254자를 넘는 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException">이벤트 로그의 레지스트리 키를 열 수 없는 경우</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">이벤트 로그에 이벤트 엔트리를 쓸 때 운영 체제에서 오류를 보고한 경우. Windows 오류 코드를 사용할 수 없습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEvent(System.String,System.Diagnostics.EventInstance,System.Byte[],System.Object[])">
      <summary>지정한 등록된 이벤트 소스를 사용하여 지정된 이벤트 데이터, 메시지 대체 문자열 및 관련 이진 데이터가 포함된 이벤트 로그 엔트리를 씁니다.</summary>
      <param name="source">지정된 컴퓨터의 애플리케이션에 등록된 이벤트 원본의 이름입니다.</param>
      <param name="instance">지역화된 이벤트 로그 항목을 나타내는 <see cref="T:System.Diagnostics.EventInstance" /> 인스턴스입니다.</param>
      <param name="data">항목과 연관된 이진 데이터를 보유하는 바이트의 배열입니다.</param>
      <param name="values">이벤트 로그 항목의 메시지 텍스트로 병합될 문자열의 배열입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> 값이 빈 문자열("")인 경우  
또는 
<paramref name="source" /> 값이 <see langword="null" />입니다.  
또는 
 <paramref name="instance.InstanceId" />가 0보다 작거나 <see cref="F:System.UInt16.MaxValue" />보다 큽니다.  
또는 
 <paramref name="values" />의 요소가 256개가 넘는 경우  
또는 
<paramref name="values" /> 요소 중 하나가 32766바이트보다 긴 경우  
또는 
소스 이름 때문에 레지스트리 키 경로가 254자를 넘는 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.InvalidOperationException">이벤트 로그의 레지스트리 키를 열 수 없는 경우</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">이벤트 로그에 이벤트 엔트리를 쓸 때 운영 체제에서 오류를 보고한 경우. Windows 오류 코드를 사용할 수 없습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEvent(System.String,System.Diagnostics.EventInstance,System.Object[])">
      <summary>지정한 등록된 이벤트 소스를 사용하여 지정된 이벤트 데이터와 메시지 대체 문자열이 포함된 이벤트 로그 엔트리를 씁니다.</summary>
      <param name="source">지정된 컴퓨터의 애플리케이션에 등록된 이벤트 원본의 이름입니다.</param>
      <param name="instance">지역화된 이벤트 로그 항목을 나타내는 <see cref="T:System.Diagnostics.EventInstance" /> 인스턴스입니다.</param>
      <param name="values">이벤트 로그 항목의 메시지 텍스트로 병합될 문자열의 배열입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> 값이 빈 문자열("")인 경우  
또는 
<paramref name="source" /> 값이 <see langword="null" />입니다.  
또는 
 <paramref name="instance.InstanceId" />가 0보다 작거나 <see cref="F:System.UInt16.MaxValue" />보다 큽니다.  
또는 
 <paramref name="values" />의 요소가 256개가 넘는 경우  
또는 
<paramref name="values" /> 요소 중 하나가 32766바이트보다 긴 경우  
또는 
소스 이름 때문에 레지스트리 키 경로가 254자를 넘는 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.InvalidOperationException">이벤트 로그의 레지스트리 키를 열 수 없는 경우</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">이벤트 로그에 이벤트 엔트리를 쓸 때 운영 체제에서 오류를 보고한 경우. Windows 오류 코드를 사용할 수 없습니다.</exception>
    </member>
    <member name="T:System.Diagnostics.EventLogEntry">
      <summary>이벤트 로그에 단일 레코드를 캡슐화합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.Category">
      <summary>이 엔트리의 <see cref="P:System.Diagnostics.EventLogEntry.CategoryNumber" /> 속성과 관련된 텍스트를 가져옵니다.</summary>
      <returns>애플리케이션별 범주 텍스트입니다.</returns>
      <exception cref="T:System.Exception">해당 범주와 관련된 삽입 문자열 중 하나에 대해 공간을 할당할 수 없는 경우</exception>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.CategoryNumber">
      <summary>이벤트 로그 엔트리의 범주 번호를 가져옵니다.</summary>
      <returns>이 엔트리의 애플리케이션별 범주 번호입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.Data">
      <summary>엔트리와 관련된 이진 데이터를 가져옵니다.</summary>
      <returns>항목과 연관된 이진 데이터를 보유하는 바이트의 배열입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.EntryType">
      <summary>이 엔트리의 이벤트 형식을 가져옵니다.</summary>
      <returns>이벤트 로그 엔트리와 연결된 이벤트 형식입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.EventLogEntry.Equals(System.Diagnostics.EventLogEntry)">
      <summary>두 이벤트 로그 엔트리 간을 비교합니다.</summary>
      <param name="otherEntry">비교할 <see cref="T:System.Diagnostics.EventLogEntry" />입니다.</param>
      <returns>
        <see cref="T:System.Diagnostics.EventLogEntry" /> 개체가 동일하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.EventID">
      <summary>현재 이벤트 엔트리의 애플리케이션별 이벤트 식별자를 가져옵니다.</summary>
      <returns>이벤트 메시지의 애플리케이션별 식별자입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.Index">
      <summary>이벤트 로그에서 이 엔트리의 인덱스를 가져옵니다.</summary>
      <returns>이벤트 로그에서 이 엔트리의 인덱스입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.InstanceId">
      <summary>이벤트 엔트리의 메시지 텍스트를 지정하는 리소스 식별자를 가져옵니다.</summary>
      <returns>이벤트 소스의 메시지 리소스 파일에 있는 문자열 정의에 해당하는 리소스 식별자입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.MachineName">
      <summary>이 엔트리가 생성된 컴퓨터의 이름을 가져옵니다.</summary>
      <returns>이벤트 로그를 포함하는 컴퓨터의 이름입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.Message">
      <summary>이 이벤트 엔트리와 관련된 지역화된 메시지를 가져옵니다.</summary>
      <returns>형식이 지정되고 지역화된 메시지 텍스트입니다. 여기에는 연관된 대체 문자열이 포함됩니다.</returns>
      <exception cref="T:System.Exception">메시지와 관련된 삽입 문자열 중 하나에 대해 해당 공간을 할당할 수 없는 경우</exception>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.ReplacementStrings">
      <summary>이벤트 로그 엔트리와 연결된 대체 문자열을 가져옵니다.</summary>
      <returns>이벤트 엔트리에 저장된 대체 문자열을 포함하는 배열입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.Source">
      <summary>이 이벤트를 생성한 애플리케이션의 이름을 가져옵니다.</summary>
      <returns>이 이벤트 소스로 이벤트 로그에 등록되는 이름입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.EventLogEntry.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>대상 개체를 직렬화하는 데 필요한 데이터로 <see cref="T:System.Runtime.Serialization.SerializationInfo" />를 채웁니다.</summary>
      <param name="info">데이터로 채울 <see cref="T:System.Runtime.Serialization.SerializationInfo" />입니다.</param>
      <param name="context">이 serialization에 대한 대상입니다(<see cref="T:System.Runtime.Serialization.StreamingContext" /> 참조).</param>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.TimeGenerated">
      <summary>이 이벤트가 생성된 현지 시간을 가져옵니다.</summary>
      <returns>이 이벤트가 생성된 현지 시간입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.TimeWritten">
      <summary>이 이벤트가 로그에 쓰여진 현지 시간을 가져옵니다.</summary>
      <returns>이 이벤트가 로그에 기록된 현지 시간입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.UserName">
      <summary>이 이벤트를 담당하는 사용자의 이름을 가져옵니다.</summary>
      <returns>사용자나 그룹을 고유하게 식별하는 SID(보안 식별자)입니다.</returns>
      <exception cref="T:System.SystemException">사용자의 SID에 대해 계정 정보를 확보할 수 없는 경우</exception>
    </member>
    <member name="T:System.Diagnostics.EventLogEntryCollection">
      <summary>
        <see cref="T:System.Diagnostics.EventLogEntry" /> 인스턴스의 컬렉션에 대한 크기 및 열거자를 정의합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogEntryCollection.CopyTo(System.Diagnostics.EventLogEntry[],System.Int32)">
      <summary>특정 배열 인덱스부터 시작하여 <see cref="T:System.Diagnostics.EventLogEntryCollection" /> 요소를 <see cref="T:System.Diagnostics.EventLogEntry" /> 인스턴스의 배열에 복사합니다.</summary>
      <param name="entries">컬렉션에서 복사된 요소의 대상인 <see cref="T:System.Diagnostics.EventLogEntry" /> 인스턴스의 1차원 배열입니다. 배열에는 0부터 시작하는 인덱스가 있어야 합니다.</param>
      <param name="index">복사를 시작할 배열의 인덱스(0부터 시작)입니다.</param>
    </member>
    <member name="P:System.Diagnostics.EventLogEntryCollection.Count">
      <summary>이벤트 로그의 엔트리 수, 즉 <see cref="T:System.Diagnostics.EventLogEntry" /> 컬렉션의 요소 수를 가져옵니다.</summary>
      <returns>현재 이벤트 로그에 있는 엔트리의 수입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.EventLogEntryCollection.GetEnumerator">
      <summary>
        <see cref="T:System.Diagnostics.EventLogEntryCollection" /> 개체의 단순 반복을 지원합니다.</summary>
      <returns>컬렉션에서 반복하는 데 사용할 수 있는 개체입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntryCollection.Item(System.Int32)">
      <summary>0부터 시작하는 인덱스를 기준으로 이벤트 로그에 있는 엔트리를 가져옵니다.</summary>
      <param name="index">이벤트 로그 엔트리와 연결된 인덱스(0부터 시작)입니다.</param>
      <returns>
        <paramref name="index" /> 매개 변수로 지정한 위치에 있는 이벤트 로그 엔트리입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>특정 <see cref="T:System.Array" /> 인덱스부터 시작하여 컬렉션의 요소를 <see cref="T:System.Array" />에 복사합니다.</summary>
      <param name="array">컬렉션에서 복사한 요소의 대상인 1차원 <see cref="T:System.Array" />입니다. <see cref="T:System.Array" />에는 0부터 시작하는 인덱스가 있어야 합니다.</param>
      <param name="index">
        <paramref name="array" />에서 복사가 시작되는 0부터 시작하는 인덱스입니다.</param>
    </member>
    <member name="P:System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#IsSynchronized">
      <summary>
        <see cref="T:System.Diagnostics.EventLogEntryCollection" />에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되는지를 나타내는 값을 가져옵니다.</summary>
      <returns>컬렉션에 대한 액세스가 동기화되지 않아서 스레드로부터 안전하게 보호되지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#SyncRoot">
      <summary>
        <see cref="T:System.Diagnostics.EventLogEntryCollection" /> 개체에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 가져옵니다.</summary>
      <returns>컬렉션에 대한 액세스를 동기화하는 데 사용할 수 있는 개체입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.EventLogEntryType">
      <summary>이벤트 로그 엔트리의 이벤트 형식을 지정합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogEntryType.Error">
      <summary>오류 이벤트로, 기능이나 데이터의 손실과 같이 사용자가 알아야 하는 심각한 문제점을 나타냅니다.</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogEntryType.FailureAudit">
      <summary>오류 감사 이벤트로, 파일을 열 수 없는 경우처럼 감사된 액세스 시도가 실패할 때 발생하는 보안 이벤트를 나타냅니다.</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogEntryType.Information">
      <summary>정보 이벤트로, 성공적으로 수행된 중요한 작업을 나타냅니다.</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogEntryType.SuccessAudit">
      <summary>성공적인 감사 이벤트로, 성공적으로 로그온한 경우처럼 감사된 액세스 시도가 성공할 때 발생하는 보안 이벤트를 나타냅니다.</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogEntryType.Warning">
      <summary>경고 이벤트로, 당장은 심각하지 않지만 앞으로 문제를 발생시킬 수 있는 상태를 알리는 문제점을 나타냅니다.</summary>
    </member>
    <member name="T:System.Diagnostics.EventLogTraceListener">
      <summary>추적 또는 디버깅 출력을 <see cref="T:System.Diagnostics.EventLog" />로 보내는 간단한 수신기를 제공합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.#ctor">
      <summary>추적 수신기를 사용하지 않고 <see cref="T:System.Diagnostics.EventLogTraceListener" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.#ctor(System.Diagnostics.EventLog)">
      <summary>지정한 이벤트 로그를 사용하여 <see cref="T:System.Diagnostics.EventLogTraceListener" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="eventLog">기록할 이벤트 로그입니다.</param>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.#ctor(System.String)">
      <summary>지정한 소스를 사용하여 <see cref="T:System.Diagnostics.EventLogTraceListener" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="source">기존 이벤트 로그 소스의 이름입니다.</param>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.Close">
      <summary>추적 또는 디버깅 출력을 더 이상 수신하지 않게 이벤트 로그를 닫습니다.</summary>
    </member>
    <member name="P:System.Diagnostics.EventLogTraceListener.EventLog">
      <summary>쓸 이벤트 로그를 가져오거나 설정합니다.</summary>
      <returns>기록할 이벤트 로그입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogTraceListener.Name">
      <summary>이 <see cref="T:System.Diagnostics.EventLogTraceListener" />의 이름을 가져오거나 설정합니다.</summary>
      <returns>이 추적 수신기의 이름입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
      <summary>추적 정보, 데이터 개체 및 이벤트 정보를 이벤트 로그에 씁니다.</summary>
      <param name="eventCache">현재 프로세스 ID, 스레드 ID 및 스택 추적 정보가 포함된 개체입니다.</param>
      <param name="source">출력을 식별하는 데 사용되는 이름이며 일반적으로 추적 이벤트를 생성한 애플리케이션의 이름입니다.</param>
      <param name="severity">추적이 발생한 이벤트의 형식을 지정하는 열거형 값 중 하나입니다.</param>
      <param name="id">이벤트의 숫자 식별자입니다. <paramref name="source" />와 <paramref name="id" />의 조합은 이벤트를 고유하게 식별합니다.</param>
      <param name="data">출력 파일이나 스트림에 쓸 데이터 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" />을(를) 지정하지 않았습니다.  
또는 
로그 엔트리 문자열이 32,766자를 초과합니다.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
      <summary>추적 정보, 데이터 개체 배열 및 이벤트 정보를 이벤트 로그에 씁니다.</summary>
      <param name="eventCache">현재 프로세스 ID, 스레드 ID 및 스택 추적 정보가 포함된 개체입니다.</param>
      <param name="source">출력을 식별하는 데 사용되는 이름이며 일반적으로 추적 이벤트를 생성한 애플리케이션의 이름입니다.</param>
      <param name="severity">추적이 발생한 이벤트의 형식을 지정하는 열거형 값 중 하나입니다.</param>
      <param name="id">이벤트의 숫자 식별자입니다. <paramref name="source" />와 <paramref name="id" />의 조합은 이벤트를 고유하게 식별합니다.</param>
      <param name="data">데이터 개체로 이루어진 배열입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" />을(를) 지정하지 않았습니다.  
또는 
로그 엔트리 문자열이 32,766자를 초과합니다.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
      <summary>추적 정보, 메시지 및 이벤트 정보를 이벤트 로그에 씁니다.</summary>
      <param name="eventCache">현재 프로세스 ID, 스레드 ID 및 스택 추적 정보가 포함된 개체입니다.</param>
      <param name="source">출력을 식별하는 데 사용되는 이름이며 일반적으로 추적 이벤트를 생성한 애플리케이션의 이름입니다.</param>
      <param name="severity">추적이 발생한 이벤트의 형식을 지정하는 열거형 값 중 하나입니다.</param>
      <param name="id">이벤트의 숫자 식별자입니다. <paramref name="source" />와 <paramref name="id" />의 조합은 이벤트를 고유하게 식별합니다.</param>
      <param name="message">추적 메시지입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" />을(를) 지정하지 않았습니다.  
또는 
로그 엔트리 문자열이 32,766자를 초과합니다.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
      <summary>추적 정보, 형식 지정된 개체 배열 및 이벤트 정보를 이벤트 로그에 씁니다.</summary>
      <param name="eventCache">현재 프로세스 ID, 스레드 ID 및 스택 추적 정보가 포함된 개체입니다.</param>
      <param name="source">출력을 식별하는 데 사용되는 이름이며 일반적으로 추적 이벤트를 생성한 애플리케이션의 이름입니다.</param>
      <param name="severity">추적이 발생한 이벤트의 형식을 지정하는 열거형 값 중 하나입니다.</param>
      <param name="id">이벤트의 숫자 식별자입니다. <paramref name="source" />와 <paramref name="id" />의 조합은 이벤트를 고유하게 식별합니다.</param>
      <param name="format">
        <paramref name="args" /> 배열에 들어 있는 개체에 해당하는 0개 이상의 형식 항목이 포함된 형식 문자열입니다.</param>
      <param name="args">형식을 지정할 개체를 0개 이상 포함하는 <see langword="object" /> 배열입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" />을(를) 지정하지 않았습니다.  
또는 
로그 엔트리 문자열이 32,766자를 초과합니다.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.Write(System.String)">
      <summary>이 인스턴스의 이벤트 로그에 메시지를 씁니다.</summary>
      <param name="message">쓸 메시지입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="message" />가 32,766자를 초과합니다.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.WriteLine(System.String)">
      <summary>이 인스턴스의 이벤트 로그에 메시지를 씁니다.</summary>
      <param name="message">쓸 메시지입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="message" />가 32,766자를 초과합니다.</exception>
    </member>
    <member name="T:System.Diagnostics.EventSourceCreationData">
      <summary>로컬 컴퓨터 또는 원격 컴퓨터에서 이벤트 로그 소스를 만드는 데 사용되는 구성 설정을 나타냅니다.</summary>
    </member>
    <member name="M:System.Diagnostics.EventSourceCreationData.#ctor(System.String,System.String)">
      <summary>지정된 이벤트 소스와 이벤트 로그 이름을 사용하여 <see cref="T:System.Diagnostics.EventSourceCreationData" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="source">엔트리 소스로 이벤트 로그에 등록할 이름입니다.</param>
      <param name="logName">소스 엔트리를 쓸 로그의 이름입니다.</param>
    </member>
    <member name="P:System.Diagnostics.EventSourceCreationData.CategoryCount">
      <summary>범주 리소스 파일에서 범주 수를 가져오거나 설정합니다.</summary>
      <returns>범주 리소스 파일에 있는 범주 수입니다. 기본값은 0입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">속성이 음의 값이나 <see cref="F:System.UInt16.MaxValue" />보다 큰 값으로 설정된 경우</exception>
    </member>
    <member name="P:System.Diagnostics.EventSourceCreationData.CategoryResourceFile">
      <summary>소스에 대한 범주 문자열이 들어 있는 리소스 파일의 경로를 가져오거나 설정합니다.</summary>
      <returns>범주 리소스 파일의 경로입니다. 기본값은 빈 문자열("")입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.EventSourceCreationData.LogName">
      <summary>소스가 엔트리를 쓰는 이벤트 로그 이름을 가져오거나 설정합니다.</summary>
      <returns>이벤트 로그 이름입니다. 이 이름에는 애플리케이션, 시스템 또는 사용자 지정 로그 이름을 사용할 수 있습니다. 기본값은 "Application"입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.EventSourceCreationData.MachineName">
      <summary>이벤트 소스를 등록할 컴퓨터 이름을 가져오거나 설정합니다.</summary>
      <returns>이벤트 소스를 등록할 시스템 이름입니다. 기본값은 로컬 컴퓨터(".")입니다.</returns>
      <exception cref="T:System.ArgumentException">컴퓨터 이름이 잘못된 경우</exception>
    </member>
    <member name="P:System.Diagnostics.EventSourceCreationData.MessageResourceFile">
      <summary>소스에 대한 메시지 서식 문자열이 들어 있는 메시지 리소스 파일의 경로를 가져오거나 설정합니다.</summary>
      <returns>메시지 리소스 파일의 경로입니다. 기본값은 빈 문자열("")입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.EventSourceCreationData.ParameterResourceFile">
      <summary>소스에 대한 메시지 매개 변수 문자열이 들어 있는 리소스 파일의 경로를 가져오거나 설정합니다.</summary>
      <returns>매개 변수 리소스 파일의 경로입니다. 기본값은 빈 문자열("")입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.EventSourceCreationData.Source">
      <summary>이벤트 로그에 이벤트 소스로 등록할 이름을 가져오거나 설정합니다.</summary>
      <returns>엔트리 소스로 이벤트 로그에 등록할 이름입니다. 기본값은 빈 문자열("")입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.OverflowAction">
      <summary>최대 파일 크기에 도달한 이벤트 로그의 엔트리를 처리하는 방법을 지정합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.OverflowAction.DoNotOverwrite">
      <summary>이벤트 로그가 꽉 찼을 때 기존 엔트리가 유지되고 새 엔트리가 삭제됨을 나타냅니다.</summary>
    </member>
    <member name="F:System.Diagnostics.OverflowAction.OverwriteAsNeeded">
      <summary>이벤트 로그가 꽉 찼을 때 각각의 새 엔트리가 가장 오래된 엔트리를 덮어씀을 나타냅니다.</summary>
    </member>
    <member name="F:System.Diagnostics.OverflowAction.OverwriteOlder">
      <summary>이벤트 로그가 꽉 찼을 때 새 이벤트가 <see cref="P:System.Diagnostics.EventLog.MinimumRetentionDays" /> 속성 값으로 지정된 것보다 오래된 이벤트를 덮어씀을 나타냅니다. 이벤트 로그가 꽉 찼을 때 <see cref="P:System.Diagnostics.EventLog.MinimumRetentionDays" /> 속성 값으로 지정된 것보다 오래된 이벤트가 없으면 새 이벤트가 삭제됩니다.</summary>
    </member>
  </members>
</doc>