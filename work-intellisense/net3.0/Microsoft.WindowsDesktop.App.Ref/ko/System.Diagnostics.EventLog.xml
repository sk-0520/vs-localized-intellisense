<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Diagnostics.EventLog</name>
  </assembly>
  <members>
    <member name="T:System.Diagnostics.EntryWrittenEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Diagnostics.EventLog.EntryWritten&quot; /&gt; event.">
        <see cref="E:System.Diagnostics.EventLog.EntryWritten" /> 이벤트에 대한 데이터를 제공합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.EntryWrittenEventArgs.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.EntryWrittenEventArgs&quot; /&gt; class.">
        <see cref="T:System.Diagnostics.EntryWrittenEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.EntryWrittenEventArgs.#ctor(System.Diagnostics.EventLogEntry)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.EntryWrittenEventArgs&quot; /&gt; class with the specified event log entry.">지정된 이벤트 로그 엔트리를 사용하여 <see cref="T:System.Diagnostics.EntryWrittenEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="entry" vsli:raw="An &lt;see cref=&quot;T:System.Diagnostics.EventLogEntry&quot; /&gt; that represents the entry that was written.">쓰여진 엔트리를 나타내는 <see cref="T:System.Diagnostics.EventLogEntry" />입니다.</param>
    </member>
    <member name="P:System.Diagnostics.EntryWrittenEventArgs.Entry">
      <summary vsli:raw="Gets the event log entry that was written to the log.">로그에 쓰여진 이벤트 로그 엔트리를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Diagnostics.EventLogEntry&quot; /&gt; that represents the entry that was written to the event log.">이벤트 로그에 쓰여진 엔트리를 나타내는 <see cref="T:System.Diagnostics.EventLogEntry" />입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.EntryWrittenEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Diagnostics.EventLog.EntryWritten&quot; /&gt; event of an &lt;see cref=&quot;T:System.Diagnostics.EventLog&quot; /&gt;.">
        <see cref="T:System.Diagnostics.EventLog" />의 <see cref="E:System.Diagnostics.EventLog.EntryWritten" /> 이벤트를 처리할 메서드를 나타냅니다.</summary>
      <param name="sender" vsli:raw="The source of the event.">이벤트 소스입니다.</param>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.Diagnostics.EntryWrittenEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.Diagnostics.EntryWrittenEventArgs" />입니다.</param>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventBookmark">
      <summary vsli:raw="Represents a placeholder (bookmark) within an event stream. You can use the placeholder to mark a position and return to this position in a stream of events. An instance of this object can be obtained from an &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventRecord&quot; /&gt; object, in which case it corresponds to the position of that event record.">이벤트 스트림 내의 자리 표시자(책갈피)를 나타냅니다. 자리 표시자를 사용하여 이벤트 스트림에서 위치를 표시하고 해당 위치로 돌아갈 수 있습니다. <see cref="T:System.Diagnostics.Eventing.Reader.EventRecord" /> 개체에서 이 개체의 인스턴스를 가져올 수 있으며, 이때 이 개체의 위치는 해당 이벤트 레코드의 위치와 일치합니다.</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventKeyword">
      <summary vsli:raw="Represents a keyword for an event. Keywords are defined in an event provider and are used to group the event with other similar events (based on the usage of the events).">이벤트의 키워드를 나타냅니다. 키워드는 이벤트 공급자에 정의되며, 이벤트의 용도에 따라 비슷한 이벤트를 서로 그룹화할 때 사용됩니다.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventKeyword.DisplayName">
      <summary vsli:raw="Gets the localized name of the keyword.">키워드의 지역화된 이름을 가져옵니다.</summary>
      <returns vsli:raw="A string that contains a localized name for this keyword.">이 키워드의 지역화 된 이름을 포함 하는 문자열입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventKeyword.Name">
      <summary vsli:raw="Gets the non-localized name of the keyword.">키워드의 지역화되지 않은 이름을 가져옵니다.</summary>
      <returns vsli:raw="A string that contains the non-localized name of this keyword.">이 키워드의 지역화 되지 않은 이름을 포함 하는 문자열입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventKeyword.Value">
      <summary vsli:raw="Gets the numeric value associated with the keyword.">키워드에 연결된 숫자 값을 가져옵니다.</summary>
      <returns vsli:raw="The numeric value associated with the keyword.">키워드와 연결 된 숫자 값입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLevel">
      <summary vsli:raw="Contains an event level that is defined in an event provider. The level signifies the severity of the event.">이벤트 공급자에 정의된 이벤트 수준이 들어 있습니다. 이 수준은 이벤트의 심각도를 나타냅니다.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLevel.DisplayName">
      <summary vsli:raw="Gets the localized name for the event level. The name describes what severity level of events this level is used for.">이벤트 수준의 지역화된 이름을 가져옵니다. 이 이름은 해당 수준이 사용되는 이벤트의 심각도 수준을 설명합니다.</summary>
      <returns vsli:raw="A string that contains the localized name for the event level.">이벤트 수준의 지역화 된 이름을 포함 하는 문자열입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLevel.Name">
      <summary vsli:raw="Gets the non-localized name of the event level.">이벤트 수준의 지역화되지 않은 이름을 가져옵니다.</summary>
      <returns vsli:raw="A string that contains the non-localized name of the event level.">이벤트 수준의 지역화 되지 않은 이름을 포함 하는 문자열입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLevel.Value">
      <summary vsli:raw="Gets the numeric value of the event level.">이벤트 수준의 숫자 값을 가져옵니다.</summary>
      <returns vsli:raw="The numeric value of the event level.">이벤트 수준의 숫자 값입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration">
      <summary vsli:raw="Contains static information and configuration settings for an event log. Many of the configurations settings were defined by the event provider that created the log.">이벤트 로그에 대한 정적 정보 및 구성 설정이 들어 있습니다. 구성 설정 중 다수는 로그를 만든 이벤트 공급자에 의해 정의됩니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.#ctor(System.String)">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogConfiguration&quot; /&gt; object by specifying the local event log for which to get information and configuration settings.">정보 및 구성 설정을 가져올 로컬 이벤트 로그를 지정하여 새 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" /> 개체를 초기화합니다.</summary>
      <param name="logName" vsli:raw="The name of the local event log for which to get information and configuration settings.">정보 및 구성 설정을 가져올 로컬 이벤트 로그의 이름입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.#ctor(System.String,System.Diagnostics.Eventing.Reader.EventLogSession)">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogConfiguration&quot; /&gt; object by specifying the name of the log for which to get information and configuration settings. The log can be on the local computer or a remote computer, based on the event log session specified.">정보 및 구성 설정을 가져올 로그의 이름을 지정하여 새 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" /> 개체를 초기화합니다. 지정된 이벤트 로그 세션에 따라 로그가 로컬 컴퓨터 또는 원격 컴퓨터에 있을 수 있습니다.</summary>
      <param name="logName" vsli:raw="The name of the event log for which to get information and configuration settings.">정보 및 구성 설정을 가져올 이벤트 로그의 이름입니다.</param>
      <param name="session" vsli:raw="The event log session used to determine the event log service that the specified log belongs to. The session is either connected to the event log service on the local computer or a remote computer.">지정된 로그가 속하는 이벤트 로그 서비스를 확인하는 데 사용할 이벤트 로그 세션입니다. 세션은 로컬 컴퓨터 또는 원격 컴퓨터의 이벤트 로그 서비스에 연결됩니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose">
      <summary vsli:raw="Releases all the resources used by this object.">이 개체에서 사용하는 리소스를 모두 해제합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by this object, and optionally releases the managed resources.">이 개체에서 사용하는 관리되지 않는 리소스를 해제하고 관리되는 리소스를 선택적으로 해제합니다.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.IsClassicLog">
      <summary vsli:raw="Gets a value that indicates whether the event log is a classic event log. A classic event log is one that has its events defined in an .mc file instead of a manifest (.xml file) used by the event provider.">이벤트 로그가 클래식 이벤트 로그인지 여부를 나타내는 값을 가져옵니다. 클래식 이벤트 로그는 이벤트 공급자에서 사용하는 매니페스트(.xml 파일)가 아닌 .mc 파일에 이벤트가 정의된 로그입니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the event log is a classic log; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />이벤트 로그가 클래식 로그 이면이 고, 그렇지 않으면입니다. 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.IsEnabled">
      <summary vsli:raw="Gets or sets a value that indicates whether the event log is enabled or disabled. An enabled log is one in which events can be logged, and a disabled log is one in which events cannot be logged.">이벤트 로그를 사용할지 여부를 나타내는 값을 가져오거나 설정합니다. 활성화된 로그는 이벤트를 기록할 수 있는 로그이고, 비활성화된 로그는 이벤트를 기록할 수 없는 로그입니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the log is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />로그를 사용할 수 있으면이 고, 그렇지 않으면입니다. 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogFilePath">
      <summary vsli:raw="Gets or sets the file directory path to the location of the file where the events are stored for the log.">로그의 이벤트가 저장되는 파일의 위치에 대한 파일 디렉터리 경로를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A string that contains the path to the event log file.">이벤트 로그 파일의 경로를 포함 하는 문자열입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogIsolation">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogIsolation&quot; /&gt; value that specifies whether the event log is an application, system, or custom event log.">이벤트 로그가 애플리케이션, 시스템 또는 사용자 지정 이벤트 로그인지 여부를 지정하는 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogIsolation" /> 값을 가져옵니다.</summary>
      <returns vsli:raw="One of the enumeration values.">열거형 값 중 하나입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogMode">
      <summary vsli:raw="Gets or sets an &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogMode&quot; /&gt; value that determines how events are handled when the event log becomes full.">이벤트 로그가 가득 찰 때 이벤트가 처리되는 방법을 결정하는 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogMode" /> 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="One of the enumeration values.">열거형 값 중 하나입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogName">
      <summary vsli:raw="Gets the name of the event log.">이벤트 로그의 이름을 가져옵니다.</summary>
      <returns vsli:raw="The name of the event log.">이벤트 로그 이름입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogType">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogType&quot; /&gt; value that determines the type of the event log.">이벤트 로그의 형식을 결정하는 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogType" /> 값을 가져옵니다.</summary>
      <returns vsli:raw="One of the enumeration values.">열거형 값 중 하나입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.MaximumSizeInBytes">
      <summary vsli:raw="Gets or sets the maximum size, in bytes, that the event log file is allowed to be. When the file reaches this maximum size, it is considered full.">이벤트 로그 파일의 최대 허용 크기(바이트)를 가져오거나 설정합니다. 이 최대 크기에 도달한 파일은 가득 찬 것으로 간주됩니다.</summary>
      <returns vsli:raw="The maximum size, in bytes, that the event log file is allowed to be.">이벤트 로그 파일에 허용 되는 최대 크기 (바이트)입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.OwningProviderName">
      <summary vsli:raw="Gets the name of the event provider that created this event log.">이 이벤트 로그를 만든 이벤트 공급자의 이름을 가져옵니다.</summary>
      <returns vsli:raw="The name of the event provider that created this event log.">이 이벤트 로그를 만든 이벤트 공급자의 이름입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderBufferSize">
      <summary vsli:raw="Gets the size of the buffer that the event provider uses for publishing events to the log.">이벤트 공급자가 로그에 이벤트를 게시하는 데 사용하는 버퍼의 크기를 가져옵니다.</summary>
      <returns vsli:raw="The size of the buffer that the event provider uses for publishing events to the log. It can be &lt;see langword=&quot;null&quot; /&gt;.">이벤트 공급자가 로그에 이벤트를 게시 하는 데 사용 하는 버퍼의 크기입니다. <see langword="null" />일 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderControlGuid">
      <summary vsli:raw="Gets the control globally unique identifier (GUID) for the event log if the log is a debug log. If this log is not a debug log, this value is &lt;see langword=&quot;null&quot; /&gt;.">로그가 디버그 로그인 경우 이벤트 로그의 제어 GUID(Globally Unique Identifier)를 가져옵니다. 이 로그가 디버그 로그가 아닌 경우 이 값은 <see langword="null" />입니다.</summary>
      <returns vsli:raw="A GUID value, or &lt;see langword=&quot;null&quot; /&gt; if the log is not a debug log.">GUID 값 또는 <see langword="null" /> 로그가 디버그 로그가 아닌 경우입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderKeywords">
      <summary vsli:raw="Gets or sets the keyword mask used by the event provider.">이벤트 공급자에서 사용하는 키워드 마스크를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The keyword mask used by the event provider, or &lt;see langword=&quot;null&quot; /&gt; if the event provider did not define any keywords.">이벤트 공급자가 사용 하는 키워드 마스크 이거나 <see langword="null" /> , 이벤트 공급자가 키워드를 정의 하지 않은 경우입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderLatency">
      <summary vsli:raw="Gets the maximum latency time used by the event provider when publishing events to the log.">이벤트 공급자가 로그에 이벤트를 게시할 때 사용되는 최대 대기 시간을 가져옵니다.</summary>
      <returns vsli:raw="The maximum latency time used by the event provider when publishing events to the log, or &lt;see langword=&quot;null&quot; /&gt; if no latency time was specified by the event provider.">이벤트 공급자가 로그에 이벤트를 <see langword="null" /> 게시할 때 사용 하는 최대 대기 시간 시간이 며 이벤트 공급자가 대기 시간을 지정 하지 않은 경우에는입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderLevel">
      <summary vsli:raw="Gets or sets the maximum event level (which defines the severity of the event) that is allowed to be logged in the event log. This value is defined by the event provider.">이벤트 로그에 기록될 수 있는 이벤트의 심각도를 정의하는 최대 이벤트 수준을 가져오거나 설정합니다. 이 값은 이벤트 공급자에서 정의합니다.</summary>
      <returns vsli:raw="The maximum event level that is allowed to be logged in the event log, or &lt;see langword=&quot;null&quot; /&gt; if the maximum event level was not defined in the event provider.">이벤트 로그에 기록할 수 있는 최대 이벤트 수준 이거나 <see langword="null" /> , 이벤트 공급자에 최대 이벤트 수준이 정의 되어 있지 않은 경우입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderMaximumNumberOfBuffers">
      <summary vsli:raw="Gets the maximum number of buffers used by the event provider to publish events to the event log.">이벤트 공급자가 이벤트 로그에 이벤트를 게시할 때 사용되는 최대 버퍼 수를 가져옵니다.</summary>
      <returns vsli:raw="The maximum number of buffers used by the event provider to publish events to the event log. This value can be &lt;see langword=&quot;null&quot; /&gt;.">이벤트 공급자가 이벤트 로그에 이벤트를 게시 하는 데 사용 하는 최대 버퍼 수입니다. 이 값은 <see langword="null" />일 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderMinimumNumberOfBuffers">
      <summary vsli:raw="Gets the minimum number of buffers used by the event provider to publish events to the event log.">이벤트 공급자가 이벤트 로그에 이벤트를 게시할 때 사용되는 최소 버퍼 수를 가져옵니다.</summary>
      <returns vsli:raw="The minimum number of buffers used by the event provider to publish events to the event log. This value can be &lt;see langword=&quot;null&quot; /&gt;.">이벤트 공급자가 이벤트 로그에 이벤트를 게시 하는 데 사용 하는 최소 버퍼 수입니다. 이 값은 <see langword="null" />일 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderNames">
      <summary vsli:raw="Gets an enumerable collection of the names of all the event providers that can publish events to this event log.">이 이벤트 로그에 이벤트를 게시할 수 있는 모든 이벤트 공급자 이름의 열거 가능한 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="An enumerable collection of strings that contain the event provider names.">이벤트 공급자 이름이 들어 있는 열거 가능한 문자열 컬렉션입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges">
      <summary vsli:raw="Saves the configuration settings that.">구성 설정을 저장합니다.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SecurityDescriptor">
      <summary vsli:raw="Gets or sets the security descriptor of the event log. The security descriptor defines the users and groups of users that can read and write to the event log.">이벤트 로그의 보안 설명자를 가져오거나 설정합니다. 보안 설명자는 이벤트 로그에서 읽고 쓸 수 있는 사용자 및 사용자 그룹을 정의합니다.</summary>
      <returns vsli:raw="A string that contains the security descriptor for the event log.">이벤트 로그의 보안 설명자를 포함 하는 문자열입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogException">
      <summary vsli:raw="Represents the base class for all the exceptions that are thrown when an error occurs while reading event log related information.">이벤트 로그 관련 정보를 읽을 때 오류가 발생하는 경우 throw되는 모든 예외에 대한 기본 클래스를 나타냅니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogException&quot; /&gt; class.">
        <see cref="T:System.Diagnostics.Eventing.Reader.EventLogException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogException&quot; /&gt; class with the error code for the exception.">예외에 대한 오류 코드를 사용하여 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="errorCode" vsli:raw="The error code for the error that occurred while reading or configuring event log related information.">이벤트 로그 관련 정보를 읽거나 구성할 때 발생한 오류의 오류 코드입니다. 자세한 내용과 이벤트 로그 관련 오류 코드의 목록은 http://go.microsoft.com/fwlink/?LinkId=82629를 참조하세요.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogException&quot; /&gt; class with serialized data.">serialize된 데이터를 사용하여 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="serializationInfo" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that holds the serialized object data about the exception being thrown.">발생되는 예외에 대해 직렬화된 개체 데이터를 보유하는 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체입니다.</param>
      <param name="streamingContext" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; object that contains contextual information about the source or destination.">소스 또는 대상에 대한 컨텍스트 정보를 포함하는 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 개체입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogException&quot; /&gt; class by specifying the error message that describes the current exception.">현재 예외를 설명하는 오류 메시지를 지정하여 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The error message that describes the current exception.">현재 예외를 설명하는 오류 메시지입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogException&quot; /&gt; class with an error message and inner exception.">오류 및 내부 예외를 사용하여 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The error message that describes the current exception.">현재 예외를 설명하는 오류 메시지입니다.</param>
      <param name="innerException" vsli:raw="The Exception instance that caused the current exception.">현재 예외를 발생시킨 예외 인스턴스입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Sets the SerializationInfo object with information about the exception.">SerializationInfo 개체를 예외에 대한 정보로 설정합니다.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that holds the serialized object data about the exception thrown.">throw되는 예외에 대해 serialize된 개체 데이터를 보유하는 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체입니다.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; object that contains contextual information about the source or destination.">소스 또는 대상에 대한 컨텍스트 정보를 포함하는 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 개체입니다.</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogException.Message">
      <summary vsli:raw="Gets the error message that describes the current exception.">현재 예외를 설명하는 오류 메시지를 가져옵니다.</summary>
      <returns vsli:raw="Returns a string that contains the error message that describes the current exception.">현재 예외를 설명하는 오류 메시지가 들어 있는 문자열을 반환합니다.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogInformation">
      <summary vsli:raw="Allows you to access the run-time properties of active event logs and event log files. These properties include the number of events in the log, the size of the log, a value that determines whether the log is full, and the last time the log was written to or accessed.">활성 이벤트 로그 및 이벤트 로그 파일의 런타임 속성에 액세스할 수 있습니다. 이러한 속성에는 로그의 이벤트 수, 로그 크기, 로그가 가득 찼는지 여부를 결정하는 값 및 로그가 마지막으로 기록되거나 액세스된 시간 등이 있습니다.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.Attributes">
      <summary vsli:raw="Gets the file attributes of the log file associated with the log.">로그에 연결된 로그 파일의 파일 특성을 가져옵니다.</summary>
      <returns vsli:raw="Returns an integer value. This value can be null.">정수 값을 반환합니다. 이 값은 null일 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.CreationTime">
      <summary vsli:raw="Gets the time that the log file associated with the event log was created.">이벤트 로그에 연결된 로그 파일이 만들어진 시간을 가져옵니다.</summary>
      <returns vsli:raw="Returns a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object. This value can be null.">
        <see cref="T:System.DateTime" /> 개체를 반환합니다. 이 값은 null일 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.FileSize">
      <summary vsli:raw="Gets the size of the file, in bytes, associated with the event log.">이벤트 로그에 연결된 파일의 크기(바이트)를 가져옵니다.</summary>
      <returns vsli:raw="Returns a long value.">long 값을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.IsLogFull">
      <summary vsli:raw="Gets a Boolean value that determines whether the log file has reached its maximum size (the log is full).">로그 파일이 최대 크기에 도달하여 가득 찼는지 여부를 결정하는 부울 값을 가져옵니다.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if the log is full, and returns &lt;see langword=&quot;false&quot; /&gt; if the log is not full.">로그가 가득 찼으면 <see langword="true" />를, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.LastAccessTime">
      <summary vsli:raw="Gets the last time the log file associated with the event log was accessed.">이벤트 로그에 연결된 로그 파일이 마지막으로 액세스된 시간을 가져옵니다.</summary>
      <returns vsli:raw="Returns a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object. This value can be null.">
        <see cref="T:System.DateTime" /> 개체를 반환합니다. 이 값은 null일 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.LastWriteTime">
      <summary vsli:raw="Gets the last time data was written to the log file associated with the event log.">이벤트 로그에 연결된 로그 파일에 마지막으로 데이터가 기록된 시간을 가져옵니다.</summary>
      <returns vsli:raw="Returns a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object. This value can be null.">
        <see cref="T:System.DateTime" /> 개체를 반환합니다. 이 값은 null일 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.OldestRecordNumber">
      <summary vsli:raw="Gets the number of the oldest event record in the event log.">이벤트 로그에서 가장 오래된 이벤트 레코드의 번호를 가져옵니다.</summary>
      <returns vsli:raw="Returns a long value that represents the number of the oldest event record in the event log. This value can be null.">이벤트 로그에서 가장 오래된 이벤트 레코드의 번호를 나타내는 long 값을 반환합니다. 이 값은 null일 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.RecordCount">
      <summary vsli:raw="Gets the number of event records in the event log.">이벤트 로그의 이벤트 레코드 개수를 가져옵니다.</summary>
      <returns vsli:raw="Returns a long value that represents the number of event records in the event log. This value can be null.">이벤트 로그의 이벤트 레코드 개수를 나타내는 long 값을 반환합니다. 이 값은 null일 수 있습니다.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException">
      <summary vsli:raw="Represents the exception thrown when an event provider publishes invalid data in an event.">이벤트 공급자가 이벤트에 잘못된 데이터를 게시할 때 throw되는 예외를 나타냅니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException&quot; /&gt; class.">
        <see cref="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException&quot; /&gt; class with serialized data.">serialize된 데이터를 사용하여 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="serializationInfo" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that holds the serialized object data about the exception thrown.">throw되는 예외에 대해 serialize된 개체 데이터를 보유하는 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체입니다.</param>
      <param name="streamingContext" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; object that contains contextual information about the source or destination.">소스 또는 대상에 대한 컨텍스트 정보를 포함하는 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 개체입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException&quot; /&gt; class by specifying the error message that describes the current exception.">현재 예외를 설명하는 오류 메시지를 지정하여 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The error message that describes the current exception.">현재 예외를 설명하는 오류 메시지입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException&quot; /&gt; class with an error message and inner exception.">오류 및 내부 예외를 사용하여 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The error message that describes the current exception.">현재 예외를 설명하는 오류 메시지입니다.</param>
      <param name="innerException" vsli:raw="The Exception instance that caused the current exception.">현재 예외를 발생시킨 예외 인스턴스입니다.</param>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogIsolation">
      <summary vsli:raw="Defines the default access permissions for the event log. The Application and System values indicate that the log shares the access control list (ACL) with the appropriate Windows log (the Application or System event logs) and share the Event Tracing for Windows (ETW) session with other logs of the same isolation. All channels with Custom isolation use a private ETW session.">이벤트 로그에 대한 기본 액세스 권한을 정의합니다. 값이 Application 및 System이면 로그가 해당 Windows 로그(애플리케이션 또는 시스템 이벤트 로그)와 ACL(액세스 제어 목록)을 공유하고 동일하게 격리된 다른 로그와 ETW(Event Tracing for Windows) 세션을 공유합니다. Custom 격리가 적용되는 모든 채널은 프라이빗 ETW 세션을 사용합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogIsolation.Application">
      <summary vsli:raw="The log shares the access control list with the Application event log and shares the ETW session with other logs that have Application isolation.">로그가 애플리케이션 이벤트 로그와 액세스 제어 목록을 공유하고 Application 격리가 적용된 다른 로그와 ETW 세션을 공유합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogIsolation.Custom">
      <summary vsli:raw="The event log is a custom event log that uses its own private ETW session.">이벤트 로그가 프라이빗 ETW 세션을 사용하는 사용자 지정 이벤트 로그입니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogIsolation.System">
      <summary vsli:raw="The log shares the access control list with the System event log and shares the ETW session with other logs that have System isolation.">로그가 시스템 이벤트 로그와 액세스 제어 목록을 공유하고 System 격리가 적용된 다른 로그와 ETW 세션을 공유합니다.</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogLink">
      <summary vsli:raw="Represents a link between an event provider and an event log that the provider publishes events into. This object cannot be instantiated.">이벤트 공급자와 공급자가 이벤트를 게시하는 이벤트 로그 사이의 링크를 나타냅니다. 이 개체는 인스턴스화할 수 없습니다.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogLink.DisplayName">
      <summary vsli:raw="Gets the localized name of the event log.">이벤트 로그의 지역화된 이름을 가져옵니다.</summary>
      <returns vsli:raw="Returns a string that contains the localized name of the event log.">이벤트 로그의 지역화된 이름이 들어 있는 문자열을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogLink.IsImported">
      <summary vsli:raw="Gets a Boolean value that determines whether the event log is imported, rather than defined in the event provider. An imported event log is defined in a different provider.">이벤트 로그가 이벤트 공급자에 정의되어 있지 않고 이벤트 로그를 가져왔는지 여부를 나타내는 부울 값을 가져옵니다. 가져온 이벤트 로그는 다른 공급자에 정의됩니다.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if the event log is imported by the event provider, and returns &lt;see langword=&quot;false&quot; /&gt; if the event log is not imported by the event provider.">이벤트 공급자가 이벤트 로그를 가져왔으면 <see langword="true" />를 반환하고, 이벤트 공급자 이벤트 로그를 가져오지 않았으면 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogLink.LogName">
      <summary vsli:raw="Gets the non-localized name of the event log associated with this object.">이 개체에 연결된 이벤트 로그의 지역화되지 않은 이름을 가져옵니다.</summary>
      <returns vsli:raw="Returns a string that contains the non-localized name of the event log associated with this object.">이 개체에 연결된 이벤트 로그의 지역화되지 않은 이름이 들어 있는 문자열을 반환합니다.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogMode">
      <summary vsli:raw="Determines the behavior for the event log service handles an event log when the log reaches its maximum allowed size (when the event log is full).">로그가 최대 허용 크기에 도달하여 이벤트 로그가 가득 찰 때 이벤트 로그 서비스에서 이벤트 로그를 처리하는 동작을 결정합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogMode.AutoBackup">
      <summary vsli:raw="Archive the log when full, do not overwrite events. The log is automatically archived when necessary. No events are overwritten.">가득 찬 로그를 보관하고 이벤트를 덮어쓰지 않습니다. 로그는 필요에 따라 자동으로 보관되며 어떠한 이벤트도 덮어쓰지 않습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogMode.Circular">
      <summary vsli:raw="New events continue to be stored when the log file is full. Each new incoming event replaces the oldest event in the log.">로그 파일이 가득 차도 새 이벤트가 계속 저장됩니다. 들어오는 새 이벤트는 각각 로그에서 가장 오래된 이벤트를 대체합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogMode.Retain">
      <summary vsli:raw="Do not overwrite events. Clear the log manually rather than automatically.">이벤트를 덮어쓰지 않습니다. 로그를 자동이 아니라 수동으로 지웁니다.</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException">
      <summary vsli:raw="Represents the exception that is thrown when a requested event log (usually specified by the name of the event log or the path to the event log file) does not exist.">일반적으로 이벤트 로그의 이름 또는 이벤트 로그 파일에 대한 경로로 지정되는 요청된 이벤트 로그가 없을 때 throw되는 예외를 나타냅니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException&quot; /&gt; class.">
        <see cref="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException&quot; /&gt; class with serialized data.">serialize된 데이터를 사용하여 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="serializationInfo" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that holds the serialized object data about the exception thrown.">throw되는 예외에 대해 serialize된 개체 데이터를 보유하는 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체입니다.</param>
      <param name="streamingContext" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; object that contains contextual information about the source or destination.">소스 또는 대상에 대한 컨텍스트 정보를 포함하는 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 개체입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException&quot; /&gt; class by specifying the error message that describes the current exception.">현재 예외를 설명하는 오류 메시지를 지정하여 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The error message that describes the current exception.">현재 예외를 설명하는 오류 메시지입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException&quot; /&gt; class with an error message and inner exception.">오류 및 내부 예외를 사용하여 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The error message that describes the current exception.">현재 예외를 설명하는 오류 메시지입니다.</param>
      <param name="innerException" vsli:raw="The Exception instance that caused the current exception.">현재 예외를 발생시킨 예외 인스턴스입니다.</param>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogPropertySelector">
      <summary vsli:raw="Contains an array of strings that represent XPath queries for elements in the XML representation of an event, which is based on the Event Schema. The queries in this object are used to extract values from the event.">이벤트 스키마에 따른 이벤트의 XML 표현에서 요소에 대한 XPath 쿼리를 나타내는 문자열 배열이 들어 있습니다. 이 개체의 쿼리는 이벤트에서 값을 추출하는 데 사용됩니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogPropertySelector.#ctor(System.Collections.Generic.IEnumerable{System.String})">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogPropertySelector&quot; /&gt; class instance.">
        <see cref="T:System.Diagnostics.Eventing.Reader.EventLogPropertySelector" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="propertyQueries" vsli:raw="XPath queries used to extract values from the XML representation of the event.">이벤트의 XML 표현에서 값을 추출하는 데 사용되는 XPath 쿼리입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogPropertySelector.Dispose">
      <summary vsli:raw="Releases all the resources used by this object.">이 개체에서 사용하는 리소스를 모두 해제합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogPropertySelector.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by this object, and optionally releases the managed resources.">이 개체에서 사용하는 관리되지 않는 리소스를 해제하고 관리되는 리소스를 선택적으로 해제합니다.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException">
      <summary vsli:raw="Represents the exception that is thrown when a specified event provider name references a disabled event provider. A disabled event provider cannot publish events.">지정된 이벤트 공급자 이름이 참조하는 이벤트 공급자를 사용할 수 없을 때 throw되는 예외를 나타냅니다. 사용할 수 없는 이벤트 공급자는 이벤트를 게시할 수 없습니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException&quot; /&gt; class.">
        <see cref="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException&quot; /&gt; class with serialized data.">serialize된 데이터를 사용하여 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="serializationInfo" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that holds the serialized object data about the exception thrown.">throw되는 예외에 대해 serialize된 개체 데이터를 보유하는 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체입니다.</param>
      <param name="streamingContext" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; object that contains contextual information about the source or destination.">소스 또는 대상에 대한 컨텍스트 정보를 포함하는 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 개체입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException&quot; /&gt; class by specifying the error message that describes the current exception.">현재 예외를 설명하는 오류 메시지를 지정하여 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The error message that describes the current exception.">현재 예외를 설명하는 오류 메시지입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException&quot; /&gt; class with an error message and inner exception.">오류 및 내부 예외를 사용하여 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The error message that describes the current exception.">현재 예외를 설명하는 오류 메시지입니다.</param>
      <param name="innerException" vsli:raw="The Exception instance that caused the current exception.">현재 예외를 발생시킨 예외 인스턴스입니다.</param>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogQuery">
      <summary vsli:raw="Represents a query for events in an event log and the settings that define how the query is executed and on what computer the query is executed on.">이벤트 로그의 이벤트에 대한 쿼리 및 쿼리 실행 방법과 쿼리를 실행할 컴퓨터를 정의하는 설정을 나타냅니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogQuery&quot; /&gt; class by specifying the target of the query. The target can be an active event log or a log file.">쿼리의 대상을 지정하여 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogQuery" /> 클래스의 새 인스턴스를 초기화합니다. 대상은 활성 이벤트 로그 또는 로그 파일이 될 수 있습니다.</summary>
      <param name="path" vsli:raw="The name of the event log to query, or the path to the event log file to query.">쿼리할 이벤트 로그의 이름 또는 쿼리할 이벤트 로그 파일에 대한 경로입니다.</param>
      <param name="pathType" vsli:raw="Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file.">경로 매개 변수에 사용되는 문자열이 이벤트 로그의 이름을 지정하는지 또는 이벤트 로그 파일의 경로를 지정하는지 여부를 지정합니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogQuery&quot; /&gt; class by specifying the target of the query and the event query. The target can be an active event log or a log file.">쿼리의 대상 및 이벤트 쿼리를 지정하여 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogQuery" /> 클래스의 새 인스턴스를 초기화합니다. 대상은 활성 이벤트 로그 또는 로그 파일이 될 수 있습니다.</summary>
      <param name="path" vsli:raw="The name of the event log to query, or the path to the event log file to query.">쿼리할 이벤트 로그의 이름 또는 쿼리할 이벤트 로그 파일에 대한 경로입니다.</param>
      <param name="pathType" vsli:raw="Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file.">경로 매개 변수에 사용되는 문자열이 이벤트 로그의 이름을 지정하는지 또는 이벤트 로그 파일의 경로를 지정하는지 여부를 지정합니다.</param>
      <param name="query" vsli:raw="The event query used to retrieve events that match the query conditions.">쿼리 조건과 일치하는 이벤트를 검색하는 데 사용되는 이벤트 쿼리입니다.</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogQuery.ReverseDirection">
      <summary vsli:raw="Gets or sets the Boolean value that determines whether to read events from the newest event in an event log to the oldest event in the log.">이벤트 로그에서 가장 새로운 이벤트부터 가장 오래된 이벤트 순서로 이벤트를 읽을지 여부를 결정하는 부울 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if events are read from the newest event in the log to the oldest event, and returns &lt;see langword=&quot;false&quot; /&gt; if events are read from the oldest event in the log to the newest event.">로그에서 가장 새로운 이벤트부터 가장 오래된 이벤트 순서로 이벤트를 읽는 경우 <see langword="true" />를 반환하고, 로그에서 가장 오래된 이벤트부터 가장 새로운 이벤트 순서로 이벤트를 읽는 경우 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogQuery.Session">
      <summary vsli:raw="Gets or sets the session that access the Event Log service on the local computer or a remote computer. This object can be set to access a remote event log by creating a &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogReader&quot; /&gt; object or an &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogWatcher&quot; /&gt; object with this &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogQuery&quot; /&gt; object.">로컬 컴퓨터 또는 원격 컴퓨터의 이벤트 로그 서비스에 액세스하는 세션을 가져오거나 설정합니다. 이 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" /> 개체를 사용하여 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" /> 개체 또는 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogQuery" /> 개체를 만들면 이 개체로 원격 이벤트 로그에 액세스하도록 설정할 수 있습니다.</summary>
      <returns vsli:raw="Returns an &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogSession&quot; /&gt; object.">
        <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" /> 개체를 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogQuery.TolerateQueryErrors">
      <summary vsli:raw="Gets or sets a Boolean value that determines whether this query will continue to retrieve events when the query has an error.">쿼리에 오류가 있는 경우 이 쿼리에서 이벤트를 계속 검색할지 여부를 결정하는 부울 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; indicates that the query will continue to retrieve events even if the query fails for some logs, and &lt;see langword=&quot;false&quot; /&gt; indicates that this query will not continue to retrieve events when the query fails.">일부 로그에서 쿼리가 실패해도 쿼리에서 이벤트를 계속 검색하면 <see langword="true" />이고, 쿼리가 실패할 때 이 쿼리에서 더 이상 이벤트를 검색하지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogReader">
      <summary vsli:raw="Enables you to read events from an event log based on an event query. The events that are read by this object are returned as &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventRecord&quot; /&gt; objects.">이벤트 쿼리에 따라 이벤트 로그에서 이벤트를 읽을 수 있습니다. 이 개체가 읽는 이벤트는 <see cref="T:System.Diagnostics.Eventing.Reader.EventRecord" /> 개체로 반환됩니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogReader&quot; /&gt; class by specifying an event query.">이벤트 쿼리를 지정하여 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="eventQuery" vsli:raw="The event query used to retrieve events.">이벤트를 검색하는 데 사용할 이벤트 쿼리입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogReader&quot; /&gt; class by specifying an event query and a bookmark that is used as starting position for the query.">이벤트 쿼리 및 쿼리의 시작 위치로 사용되는 책갈피를 지정하여 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="eventQuery" vsli:raw="The event query used to retrieve events.">이벤트를 검색하는 데 사용할 이벤트 쿼리입니다.</param>
      <param name="bookmark" vsli:raw="The bookmark (placeholder) used as a starting position in the event log or stream of events. Only events logged after the bookmark event will be returned by the query.">이벤트 로그 또는 이벤트 스트림의 시작 위치로 사용되는 책갈피(자리 표시자)입니다. 책갈피 이벤트보다 나중에 기록되는 이벤트만 쿼리에서 반환됩니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogReader&quot; /&gt; class by specifying an active event log to retrieve events from.">이벤트를 검색할 활성 이벤트 로그를 지정하여 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="path" vsli:raw="The name of the event log to retrieve events from.">이벤트를 검색할 이벤트 로그의 이름입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogReader&quot; /&gt; class by specifying the name of an event log to retrieve events from or the path to a log file to retrieve events from.">이벤트를 검색할 이벤트 로그의 이름 또는 이벤트를 검색할 로그 파일에 대한 경로를 지정하여 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="path" vsli:raw="The name of the event log to retrieve events from, or the path to the event log file to retrieve events from.">이벤트를 검색할 이벤트 로그의 이름 또는 이벤트를 검색할 이벤트 로그 파일에 대한 경로입니다.</param>
      <param name="pathType" vsli:raw="Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file.">경로 매개 변수에 사용되는 문자열이 이벤트 로그의 이름을 지정하는지 또는 이벤트 로그 파일의 경로를 지정하는지 여부를 지정합니다.</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogReader.BatchSize">
      <summary vsli:raw="Gets or sets the number of events retrieved from the stream of events on every read operation.">모든 읽기 작업에서 이벤트 스트림으로부터 검색할 이벤트 수를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="Returns an integer value.">정수 값을 반환합니다.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.CancelReading">
      <summary vsli:raw="Cancels the current query operation.">현재 쿼리 작업을 취소합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.Dispose">
      <summary vsli:raw="Releases all the resources used by this object.">이 개체에서 사용하는 리소스를 모두 해제합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by this object, and optionally releases the managed resources.">이 개체에서 사용하는 관리되지 않는 리소스를 해제하고 관리되는 리소스를 선택적으로 해제합니다.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogReader.LogStatus">
      <summary vsli:raw="Gets the status of each event log or log file associated with the event query in this object.">이 개체의 이벤트 쿼리에 연결된 각 이벤트 로그 또는 로그 파일의 상태를 가져옵니다.</summary>
      <returns vsli:raw="Returns a list of &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogStatus&quot; /&gt; objects that each contain status information about an event log associated with the event query in this object.">이 개체의 이벤트 쿼리에 연결된 이벤트 로그에 대한 상태 정보가 각각 들어 있는 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogStatus" /> 개체의 목록을 반환합니다.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent">
      <summary vsli:raw="Reads the next event that is returned from the event query in this object.">이 개체의 이벤트 쿼리에서 반환된 다음 이벤트를 읽습니다.</summary>
      <returns vsli:raw="Returns an &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventRecord&quot; /&gt; object.">
        <see cref="T:System.Diagnostics.Eventing.Reader.EventRecord" /> 개체를 반환합니다.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent(System.TimeSpan)">
      <summary vsli:raw="Reads the next event that is returned from the event query in this object.">이 개체의 이벤트 쿼리에서 반환된 다음 이벤트를 읽습니다.</summary>
      <param name="timeout" vsli:raw="The maximum time to allow the read operation to run before canceling the operation.">작업을 취소하기 전에 읽기 작업이 실행될 수 있는 최대 시간입니다.</param>
      <returns vsli:raw="Returns an &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventRecord&quot; /&gt; object.">
        <see cref="T:System.Diagnostics.Eventing.Reader.EventRecord" /> 개체를 반환합니다.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark)">
      <summary vsli:raw="Changes the position in the event stream where the next event that is read will come from by specifying a bookmark event. No events logged before the bookmark event will be retrieved.">책갈피 이벤트를 지정하여 이벤트 스트림에서 다음 이벤트를 읽어올 위치를 변경합니다. 책갈피 이벤트보다 먼저 기록된 이벤트는 검색되지 않습니다.</summary>
      <param name="bookmark" vsli:raw="The bookmark (placeholder) used as a starting position in the event log or stream of events. Only events that have been logged after the bookmark event will be returned by the query.">이벤트 로그 또는 이벤트 스트림의 시작 위치로 사용되는 책갈피(자리 표시자)입니다. 책갈피 이벤트보다 나중에 기록되는 이벤트만 쿼리에서 반환됩니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark,System.Int64)">
      <summary vsli:raw="Changes the position in the event stream where the next event that is read will come from by specifying a bookmark event and an offset number of events from the bookmark. No events logged before the bookmark plus the offset will be retrieved.">책갈피 이벤트 및 책갈피를 기준으로 하는 오프셋 이벤트 개수를 지정하여 이벤트 스트림에서 다음 이벤트를 읽어올 위치를 변경합니다. 책갈피에 오프셋을 더한 이벤트보다 먼저 기록된 이벤트는 검색되지 않습니다.</summary>
      <param name="bookmark" vsli:raw="The bookmark (placeholder) used as a starting position in the event log or stream of events. Only events that have been logged after the bookmark event will be returned by the query.">이벤트 로그 또는 이벤트 스트림의 시작 위치로 사용되는 책갈피(자리 표시자)입니다. 책갈피 이벤트보다 나중에 기록되는 이벤트만 쿼리에서 반환됩니다.</param>
      <param name="offset" vsli:raw="The offset number of events to change the position of the bookmark.">책갈피의 위치를 변경할 오프셋 이벤트 개수입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.IO.SeekOrigin,System.Int64)">
      <summary vsli:raw="Changes the position in the event stream where the next event that is read will come from by specifying a starting position and an offset from the starting position. No events logged before the starting position plus the offset will be retrieved.">시작 위치 및 시작 위치를 기준으로 하는 오프셋을 지정하여 이벤트 스트림에서 다음 이벤트를 읽어올 위치를 변경합니다. 시작 위치에 오프셋을 더한 위치보다 먼저 기록된 이벤트는 검색되지 않습니다.</summary>
      <param name="origin" vsli:raw="A value from the &lt;see cref=&quot;T:System.IO.SeekOrigin&quot; /&gt; enumeration defines where in the stream of events to start querying for events.">이벤트 스트림에서 이벤트 쿼리를 시작할 위치를 정의하는 <see cref="T:System.IO.SeekOrigin" /> 열거형 값입니다.</param>
      <param name="offset" vsli:raw="The offset number of events to add to the origin.">원래 위치에 더할 오프셋 이벤트 개수입니다.</param>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogReadingException">
      <summary vsli:raw="Represents an exception that is thrown when an error occurred while reading, querying, or subscribing to the events in an event log.">이벤트 로그의 이벤트를 읽거나 쿼리하거나 구독할 때 오류가 발생한 경우 throw되는 예외를 나타냅니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogReadingException&quot; /&gt; class.">
        <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReadingException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogReadingException&quot; /&gt; class with serialized data.">serialize된 데이터를 사용하여 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReadingException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="serializationInfo" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that holds the serialized object data about the exception thrown.">throw되는 예외에 대해 serialize된 개체 데이터를 보유하는 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체입니다.</param>
      <param name="streamingContext" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; object that contains contextual information about the source or destination.">소스 또는 대상에 대한 컨텍스트 정보를 포함하는 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 개체입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogReadingException&quot; /&gt; class by specifying the error message that describes the current exception.">현재 예외를 설명하는 오류 메시지를 지정하여 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReadingException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The error message that describes the current exception.">현재 예외를 설명하는 오류 메시지입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogReadingException&quot; /&gt; class with an error message and inner exception.">오류 및 내부 예외를 사용하여 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReadingException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The error message that describes the current exception.">현재 예외를 설명하는 오류 메시지입니다.</param>
      <param name="innerException" vsli:raw="The Exception instance that caused the current exception.">현재 예외를 발생시킨 예외 인스턴스입니다.</param>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogRecord">
      <summary vsli:raw="Contains the properties of an event instance for an event that is received from an &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogReader&quot; /&gt; object. The event properties provide information about the event such as the name of the computer where the event was logged and the time that the event was created.">
        <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" /> 개체에서 받은 이벤트에 대한 이벤트 인스턴스의 속성이 들어 있습니다. 이벤트 속성은 이벤트가 기록된 컴퓨터의 이름 및 이벤트가 생성된 시간 등의 이벤트 관련 정보를 제공합니다.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ActivityId">
      <summary vsli:raw="Gets the globally unique identifier (GUID) for the activity in process for which the event is involved. This allows consumers to group related activities.">이벤트가 관련된 프로세스의 작업에 대한 GUID(Globally Unique Identifier)를 가져옵니다. 소비자는 이를 통해 관련 작업을 그룹화할 수 있습니다.</summary>
      <returns vsli:raw="Returns a GUID value.">GUID 값을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Bookmark">
      <summary vsli:raw="Gets a placeholder (bookmark) that corresponds to this event. This can be used as a placeholder in a stream of events.">이 이벤트에 해당하는 자리 표시자(책갈피)를 가져옵니다. 이벤트 스트림에서 자리 표시자로 사용할 수 있습니다.</summary>
      <returns vsli:raw="Returns a &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventBookmark&quot; /&gt; object.">
        <see cref="T:System.Diagnostics.Eventing.Reader.EventBookmark" /> 개체를 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ContainerLog">
      <summary vsli:raw="Gets the name of the event log or the event log file in which the event is stored.">이벤트가 저장된 이벤트 로그 또는 이벤트 로그 파일의 이름을 가져옵니다.</summary>
      <returns vsli:raw="Returns a string that contains the name of the event log or the event log file in which the event is stored.">이벤트가 저장된 이벤트 로그 또는 이벤트 로그 파일의 이름이 들어 있는 문자열을 반환합니다.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogRecord.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by this object, and optionally releases the managed resources.">이 개체에서 사용하는 관리되지 않는 리소스를 해제하고 관리되는 리소스를 선택적으로 해제합니다.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogRecord.FormatDescription">
      <summary vsli:raw="Gets the event message in the current locale.">현재 로캘의 이벤트 메시지를 가져옵니다.</summary>
      <returns vsli:raw="Returns a string that contains the event message in the current locale.">현재 로캘의 이벤트 메시지가 들어 있는 문자열을 반환합니다.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogRecord.FormatDescription(System.Collections.Generic.IEnumerable{System.Object})">
      <summary vsli:raw="Gets the event message, replacing variables in the message with the specified values.">이벤트 메시지를 가져오고 메시지의 변수를 지정된 값으로 바꿉니다.</summary>
      <param name="values" vsli:raw="The values used to replace variables in the event message. Variables are represented by %n, where n is a number.">이벤트 메시지의 변수를 바꾸는 데 사용할 값입니다. 변수는 %n으로 나타내며, 여기에서 n은 숫자입니다.</param>
      <returns vsli:raw="Returns a string that contains the event message in the current locale.">현재 로캘의 이벤트 메시지가 들어 있는 문자열을 반환합니다.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogRecord.GetPropertyValues(System.Diagnostics.Eventing.Reader.EventLogPropertySelector)">
      <summary vsli:raw="Gets the enumeration of the values of the user-supplied event properties, or the results of XPath-based data if the event has XML representation.">사용자가 제공한 이벤트 속성 값의 열거형을 가져오거나, 이벤트에 XML 표현이 있는 경우 XPath 기반 데이터의 결과를 가져옵니다.</summary>
      <param name="propertySelector" vsli:raw="Selects the property values to return.">반환할 속성 값을 선택합니다.</param>
      <returns vsli:raw="Returns a list of objects.">개체의 목록을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Id">
      <summary vsli:raw="Gets the identifier for this event. All events with this identifier value represent the same type of event.">이 이벤트의 식별자를 가져옵니다. 이 식별자 값을 갖는 모든 이벤트는 같은 이벤트 형식을 나타냅니다.</summary>
      <returns vsli:raw="Returns an integer value. This value can be null.">정수 값을 반환합니다. 이 값은 null일 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Keywords">
      <summary vsli:raw="Gets the keyword mask of the event. Get the value of the &lt;see cref=&quot;P:System.Diagnostics.Eventing.Reader.EventLogRecord.KeywordsDisplayNames&quot; /&gt; property to get the name of the keywords used in this mask.">이벤트의 키워드 마스크를 가져옵니다. 이 마스크에 사용된 키워드의 이름을 가져오려면 <see cref="P:System.Diagnostics.Eventing.Reader.EventLogRecord.KeywordsDisplayNames" /> 속성 값을 가져옵니다.</summary>
      <returns vsli:raw="Returns a long value. This value can be null.">long 값을 반환합니다. 이 값은 null일 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.KeywordsDisplayNames">
      <summary vsli:raw="Gets the display names of the keywords used in the keyword mask for this event.">이 이벤트의 키워드 마스크에 사용된 키워드의 표시 이름을 가져옵니다.</summary>
      <returns vsli:raw="Returns an enumerable collection of strings that contain the display names of the keywords used in the keyword mask for this event.">이 이벤트의 키워드 마스크에 사용된 키워드의 표시 이름을 포함하는 문자열의 열거 가능한 컬렉션을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Level">
      <summary vsli:raw="Gets the level of the event. The level signifies the severity of the event. For the name of the level, get the value of the &lt;see cref=&quot;P:System.Diagnostics.Eventing.Reader.EventLogRecord.LevelDisplayName&quot; /&gt; property.">이벤트의 수준을 가져옵니다. 이 수준은 이벤트의 심각도를 나타냅니다. 수준 이름을 확인하려면 <see cref="P:System.Diagnostics.Eventing.Reader.EventLogRecord.LevelDisplayName" /> 속성 값을 가져옵니다.</summary>
      <returns vsli:raw="Returns a byte value. This value can be null.">바이트 값을 반환합니다. 이 값은 null일 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.LevelDisplayName">
      <summary vsli:raw="Gets the display name of the level for this event.">이 이벤트의 수준에 대한 표시 이름을 가져옵니다.</summary>
      <returns vsli:raw="Returns a string that contains the display name of the level for this event.">이 이벤트의 수준에 대한 표시 이름이 들어 있는 문자열을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.LogName">
      <summary vsli:raw="Gets the name of the event log where this event is logged.">이 이벤트가 기록된 이벤트 로그의 이름을 가져옵니다.</summary>
      <returns vsli:raw="Returns a string that contains a name of the event log that contains this event.">이 이벤트가 포함된 이벤트 로그의 이름이 들어 있는 문자열을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.MachineName">
      <summary vsli:raw="Gets the name of the computer on which this event was logged.">이 이벤트가 기록된 컴퓨터의 이름을 가져옵니다.</summary>
      <returns vsli:raw="Returns a string that contains the name of the computer on which this event was logged.">이 이벤트가 기록된 컴퓨터의 이름이 들어 있는 문자열을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.MatchedQueryIds">
      <summary vsli:raw="Gets a list of query identifiers that this event matches. This event matches a query if the query would return this event.">이 이벤트와 일치하는 쿼리 식별자의 목록을 가져옵니다. 쿼리에서 이 이벤트를 반환하는 경우 이 이벤트는 쿼리와 일치합니다.</summary>
      <returns vsli:raw="Returns an enumerable collection of integer values.">정수 값의 열거 가능한 컬렉션을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Opcode">
      <summary vsli:raw="Gets the opcode of the event. The opcode defines a numeric value that identifies the activity or a point within an activity that the application was performing when it raised the event. For the name of the opcode, get the value of the &lt;see cref=&quot;P:System.Diagnostics.Eventing.Reader.EventLogRecord.OpcodeDisplayName&quot; /&gt; property.">이벤트의 opcode를 가져옵니다. opcode는 애플리케이션에서 이벤트가 발생했을 때 수행되고 있던 작업 또는 작업 내의 시점을 식별하는 숫자 값을 정의합니다. opcode의 이름을 확인하려면 <see cref="P:System.Diagnostics.Eventing.Reader.EventLogRecord.OpcodeDisplayName" /> 속성 값을 가져옵니다.</summary>
      <returns vsli:raw="Returns a short value. This value can be null.">short 값을 반환합니다. 이 값은 null일 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.OpcodeDisplayName">
      <summary vsli:raw="Gets the display name of the opcode for this event.">이 이벤트의 opcode에 대한 표시 이름을 가져옵니다.</summary>
      <returns vsli:raw="Returns a string that contains the display name of the opcode for this event.">이 이벤트의 opcode에 대한 표시 이름이 들어 있는 문자열을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ProcessId">
      <summary vsli:raw="Gets the process identifier for the event provider that logged this event.">이 이벤트를 기록한 이벤트 공급자의 프로세스 식별자를 가져옵니다.</summary>
      <returns vsli:raw="Returns an integer value. This value can be null.">정수 값을 반환합니다. 이 값은 null일 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Properties">
      <summary vsli:raw="Gets the user-supplied properties of the event.">사용자가 제공한 이벤트 속성을 가져옵니다.</summary>
      <returns vsli:raw="Returns a list of &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventProperty&quot; /&gt; objects.">
        <see cref="T:System.Diagnostics.Eventing.Reader.EventProperty" /> 개체의 목록을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ProviderId">
      <summary vsli:raw="Gets the globally unique identifier (GUID) of the event provider that published this event.">이 이벤트를 게시한 이벤트 공급자의 GUID(Globally Unique Identifier)를 가져옵니다.</summary>
      <returns vsli:raw="Returns a GUID value. This value can be null.">GUID 값을 반환합니다. 이 값은 null일 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ProviderName">
      <summary vsli:raw="Gets the name of the event provider that published this event.">이 이벤트를 게시한 이벤트 공급자의 이름을 가져옵니다.</summary>
      <returns vsli:raw="Returns a string that contains the name of the event provider that published this event.">이 이벤트를 게시한 이벤트 공급자의 이름이 들어 있는 문자열을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Qualifiers">
      <summary vsli:raw="Gets qualifier numbers that are used for event identification.">이벤트 ID에 사용된 한정자 개수를 가져옵니다.</summary>
      <returns vsli:raw="Returns an integer value. This value can be null.">정수 값을 반환합니다. 이 값은 null일 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.RecordId">
      <summary vsli:raw="Gets the event record identifier of the event in the log.">로그에 있는 이벤트의 이벤트 레코드 식별자를 가져옵니다.</summary>
      <returns vsli:raw="Returns a long value. This value can be null.">long 값을 반환합니다. 이 값은 null일 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.RelatedActivityId">
      <summary vsli:raw="Gets a globally unique identifier (GUID) for a related activity in a process for which an event is involved.">이벤트가 관련된 프로세스의 관련 작업에 대한 GUID(Globally Unique Identifier)를 가져옵니다.</summary>
      <returns vsli:raw="Returns a GUID value. This value can be null.">GUID 값을 반환합니다. 이 값은 null일 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Task">
      <summary vsli:raw="Gets a task identifier for a portion of an application or a component that publishes an event. A task is a 16-bit value with 16 top values reserved. This type allows any value between 0x0000 and 0xffef to be used. For the name of the task, get the value of the &lt;see cref=&quot;P:System.Diagnostics.Eventing.Reader.EventLogRecord.TaskDisplayName&quot; /&gt; property.">이벤트를 게시하는 구성 요소 또는 애플리케이션 부분에 대한 작업 식별자를 가져옵니다. 작업은 상위 16개 값이 예약된 16비트 값입니다. 이 형식에는 0x0000에서 0xffef 사이의 모든 값을 사용할 수 있습니다. 작업 이름을 확인하려면 <see cref="P:System.Diagnostics.Eventing.Reader.EventLogRecord.TaskDisplayName" /> 속성 값을 가져옵니다.</summary>
      <returns vsli:raw="Returns an integer value. This value can be null.">정수 값을 반환합니다. 이 값은 null일 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.TaskDisplayName">
      <summary vsli:raw="Gets the display name of the task for the event.">이벤트의 작업에 대한 표시 이름을 가져옵니다.</summary>
      <returns vsli:raw="Returns a string that contains the display name of the task for the event.">이벤트의 작업에 대한 표시 이름이 들어 있는 문자열을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ThreadId">
      <summary vsli:raw="Gets the thread identifier for the thread that the event provider is running in.">이벤트 공급자가 실행되고 있는 스레드의 식별자를 가져옵니다.</summary>
      <returns vsli:raw="Returns an integer value. This value can be null.">정수 값을 반환합니다. 이 값은 null일 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.TimeCreated">
      <summary vsli:raw="Gets the time, in &lt;see cref=&quot;T:System.DateTime&quot; /&gt; format, that the event was created.">이벤트가 생성된 시간을 <see cref="T:System.DateTime" /> 형식으로 가져옵니다.</summary>
      <returns vsli:raw="Returns a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value. The value can be null.">
        <see cref="T:System.DateTime" /> 값을 반환합니다. 이 값은 null이 될 수 있습니다.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogRecord.ToXml">
      <summary vsli:raw="Gets the XML representation of the event. All of the event properties are represented in the event's XML. The XML conforms to the event schema.">이벤트의 XML 표현을 가져옵니다. 이벤트의 XML에는 모든 이벤트 속성이 표현됩니다. 이 XML은 이벤트 스키마를 따릅니다.</summary>
      <returns vsli:raw="Returns a string that contains the XML representation of the event.">이벤트의 XML 표현이 들어 있는 문자열을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.UserId">
      <summary vsli:raw="Gets the security descriptor of the user whose context is used to publish the event.">이벤트를 게시하는 데 해당 컨텍스트를 사용할 사용자의 보안 설명자를 가져옵니다.</summary>
      <returns vsli:raw="Returns a &lt;see cref=&quot;T:System.Security.Principal.SecurityIdentifier&quot; /&gt; value.">
        <see cref="T:System.Security.Principal.SecurityIdentifier" /> 값을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Version">
      <summary vsli:raw="Gets the version number for the event.">이벤트의 버전 번호를 가져옵니다.</summary>
      <returns vsli:raw="Returns a byte value. This value can be null.">바이트 값을 반환합니다. 이 값은 null일 수 있습니다.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogSession">
      <summary vsli:raw="Used to access the Event Log service on the local computer or a remote computer so you can manage and gather information about the event logs and event providers on the computer.">해덩 컴퓨터의 이벤트 로그 및 이벤트 공급자를 관리하고 정보를 수집할 수 있도록 로컬 컴퓨터 또는 원격 컴퓨터의 이벤트 로그 서비스에 액세스하는 데 사용됩니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogSession&quot; /&gt; object, establishes a connection with the local Event Log service.">새 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" /> 개체를 초기화하고 로컬 이벤트 로그 서비스에 연결합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor(System.String)">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogSession&quot; /&gt; object, and establishes a connection with the Event Log service on the specified computer. The credentials (user name and password) of the user who calls the method is used for the credentials to access the remote computer.">새 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" /> 개체를 초기화하고 지정된 컴퓨터의 이벤트 로그 서비스에 연결합니다. 메서드를 호출하는 사용자의 자격 증명(사용자 이름과 암호)이 원격 컴퓨터에 액세스하는 자격 증명으로 사용됩니다.</summary>
      <param name="server" vsli:raw="The name of the computer on which to connect to the Event Log service.">이벤트 로그 서비스에 연결할 컴퓨터의 이름입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor(System.String,System.String,System.String,System.Security.SecureString,System.Diagnostics.Eventing.Reader.SessionAuthentication)">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogSession&quot; /&gt; object, and establishes a connection with the Event Log service on the specified computer. The specified credentials (user name and password) are used for the credentials to access the remote computer.">새 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" /> 개체를 초기화하고 지정된 컴퓨터의 이벤트 로그 서비스에 연결합니다. 지정된 자격 증명(사용자 이름과 암호)이 원격 컴퓨터에 액세스하는 자격 증명으로 사용됩니다.</summary>
      <param name="server" vsli:raw="The name of the computer on which to connect to the Event Log service.">이벤트 로그 서비스에 연결할 컴퓨터의 이름입니다.</param>
      <param name="domain" vsli:raw="The domain of the specified user.">지정된 사용자의 도메인입니다.</param>
      <param name="user" vsli:raw="The user name used to connect to the remote computer.">원격 컴퓨터에 연결하는 데 사용할 사용자 이름입니다.</param>
      <param name="password" vsli:raw="The password used to connect to the remote computer.">원격 컴퓨터에 연결하는 데 사용할 암호입니다.</param>
      <param name="logOnType" vsli:raw="The type of connection to use for the connection to the remote computer.">원격 컴퓨터에 연결하는 데 사용할 연결 형식입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.CancelCurrentOperations">
      <summary vsli:raw="Cancels any operations (such as reading an event log or subscribing to an event log) that are currently active for the Event Log service that this session object is connected to.">이 세션 개체가 연결된 이벤트 로그 서비스에서 현재 활성화된 작업(이벤트 로그 읽기 또는 이벤트 로그 구독 등)을 모두 취소합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String)">
      <summary vsli:raw="Clears events from the specified event log.">지정된 이벤트 로그에서 이벤트를 지웁니다.</summary>
      <param name="logName" vsli:raw="The name of the event log to clear all the events from.">모든 이벤트를 지울 이벤트 로그의 이름입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String,System.String)">
      <summary vsli:raw="Clears events from the specified event log, and saves the cleared events to the specified file.">지정된 이벤트 로그에서 이벤트를 지우고 지워진 이벤트를 지정된 파일에 저장합니다.</summary>
      <param name="logName" vsli:raw="The name of the event log to clear all the events from.">모든 이벤트를 지울 이벤트 로그의 이름입니다.</param>
      <param name="backupPath" vsli:raw="The path to the file in which the cleared events will be saved. The file should end in .evtx.">지워진 이벤트를 저장할 파일에 대한 경로입니다. 파일 이름은 .evtx로 끝나야 합니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.Dispose">
      <summary vsli:raw="Releases all the resources used by this object.">이 개체에서 사용하는 리소스를 모두 해제합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by this object, and optionally releases the managed resources.">이 개체에서 사용하는 관리되지 않는 리소스를 해제하고 관리되는 리소스를 선택적으로 해제합니다.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)">
      <summary vsli:raw="Exports events into an external log file. The events are stored without the event messages.">이벤트를 외부 로그 파일로 내보냅니다. 이벤트는 이벤트 메시지 없이 저장됩니다.</summary>
      <param name="path" vsli:raw="The name of the event log to export events from, or the path to the event log file to export events from.">이벤트를 내보낼 이벤트 로그의 이름 또는 이벤트를 내보낼 이벤트 로그 파일의 경로입니다.</param>
      <param name="pathType" vsli:raw="Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file.">경로 매개 변수에 사용되는 문자열이 이벤트 로그의 이름을 지정하는지 또는 이벤트 로그 파일의 경로를 지정하는지 여부를 지정합니다.</param>
      <param name="query" vsli:raw="The query used to select the events to export.  Only the events returned from the query will be exported.">내보낼 이벤트를 선택하는 데 사용되는 쿼리입니다.  쿼리에서 반환되는 이벤트만 내보냅니다.</param>
      <param name="targetFilePath" vsli:raw="The path to the log file (ends in .evtx) in which the exported events will be stored after this method is executed.">이 메서드를 실행한 후 내보낸 이벤트가 저장되는 로그 파일의 경로(.evtx로 끝남)입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean)">
      <summary vsli:raw="Exports events into an external log file. A flag can be set to indicate that the method will continue exporting events even if the specified query fails for some logs. The events are stored without the event messages.">이벤트를 외부 로그 파일로 내보냅니다. 지정한 쿼리가 일부 로그에 대해 실패해도 메서드가 계속 이벤트를 내보냄을 나타내도록 플래그를 설정할 수 있습니다. 이벤트는 이벤트 메시지 없이 저장됩니다.</summary>
      <param name="path" vsli:raw="The name of the event log to export events from, or the path to the event log file to export events from.">이벤트를 내보낼 이벤트 로그의 이름 또는 이벤트를 내보낼 이벤트 로그 파일의 경로입니다.</param>
      <param name="pathType" vsli:raw="Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file.">경로 매개 변수에 사용되는 문자열이 이벤트 로그의 이름을 지정하는지 또는 이벤트 로그 파일의 경로를 지정하는지 여부를 지정합니다.</param>
      <param name="query" vsli:raw="The query used to select the events to export. Only the events returned from the query will be exported.">내보낼 이벤트를 선택하는 데 사용되는 쿼리입니다. 쿼리에서 반환되는 이벤트만 내보냅니다.</param>
      <param name="targetFilePath" vsli:raw="The path to the log file (ends in .evtx) in which the exported events will be stored after this method is executed.">이 메서드를 실행한 후 내보낸 이벤트가 저장되는 로그 파일의 경로(.evtx로 끝남)입니다.</param>
      <param name="tolerateQueryErrors" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; indicates that the method will continue exporting events even if the specified query fails for some logs, and &lt;see langword=&quot;false&quot; /&gt; indicates that this method will not continue to export events when the specified query fails.">
        <see langword="true" />는 지정한 쿼리가 일부 로그에 대해 실패해도 메서드가 계속 이벤트를 내보냄을 나타내고, <see langword="false" />는 지정한 쿼리가 실패하면 이 메서드가 이벤트를 계속 내보내지 않음을 나타냅니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)">
      <summary vsli:raw="Exports events and their messages into an external log file.">이벤트 및 해당 메시지를 외부 로그 파일로 내보냅니다.</summary>
      <param name="path" vsli:raw="The name of the event log to export events from, or the path to the event log file to export events from.">이벤트를 내보낼 이벤트 로그의 이름 또는 이벤트를 내보낼 이벤트 로그 파일의 경로입니다.</param>
      <param name="pathType" vsli:raw="Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file.">경로 매개 변수에 사용되는 문자열이 이벤트 로그의 이름을 지정하는지 또는 이벤트 로그 파일의 경로를 지정하는지 여부를 지정합니다.</param>
      <param name="query" vsli:raw="The query used to select the events to export.  Only the events returned from the query will be exported.">내보낼 이벤트를 선택하는 데 사용되는 쿼리입니다.  쿼리에서 반환되는 이벤트만 내보냅니다.</param>
      <param name="targetFilePath" vsli:raw="The path to the log file (ends in .evtx) in which the exported events will be stored after this method is executed.">이 메서드를 실행한 후 내보낸 이벤트가 저장되는 로그 파일의 경로(.evtx로 끝남)입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean,System.Globalization.CultureInfo)">
      <summary vsli:raw="Exports events and their messages into an external log file. A flag can be set to indicate that the method will continue exporting events even if the specified query fails for some logs. The event messages are exported in the specified language.">이벤트 및 해당 메시지를 외부 로그 파일로 내보냅니다. 지정한 쿼리가 일부 로그에 대해 실패해도 메서드가 계속 이벤트를 내보냄을 나타내도록 플래그를 설정할 수 있습니다. 이벤트 메시지는 지정된 언어로 내보냅니다.</summary>
      <param name="path" vsli:raw="The name of the event log to export events from, or the path to the event log file to export events from.">이벤트를 내보낼 이벤트 로그의 이름 또는 이벤트를 내보낼 이벤트 로그 파일의 경로입니다.</param>
      <param name="pathType" vsli:raw="Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file.">경로 매개 변수에 사용되는 문자열이 이벤트 로그의 이름을 지정하는지 또는 이벤트 로그 파일의 경로를 지정하는지 여부를 지정합니다.</param>
      <param name="query" vsli:raw="The query used to select the events to export.  Only the events returned from the query will be exported.">내보낼 이벤트를 선택하는 데 사용되는 쿼리입니다.  쿼리에서 반환되는 이벤트만 내보냅니다.</param>
      <param name="targetFilePath" vsli:raw="The path to the log file (ends in .evtx) in which the exported events will be stored after this method is executed.">이 메서드를 실행한 후 내보낸 이벤트가 저장되는 로그 파일의 경로(.evtx로 끝남)입니다.</param>
      <param name="tolerateQueryErrors" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; indicates that the method will continue exporting events even if the specified query fails for some logs, and &lt;see langword=&quot;false&quot; /&gt; indicates that this method will not continue to export events when the specified query fails.">
        <see langword="true" />는 지정한 쿼리가 일부 로그에 대해 실패해도 메서드가 계속 이벤트를 내보냄을 나타내고, <see langword="false" />는 지정한 쿼리가 실패하면 이 메서드가 이벤트를 계속 내보내지 않음을 나타냅니다.</param>
      <param name="targetCultureInfo" vsli:raw="The culture that specifies which language that the exported event messages will be in.">내보낸 이벤트 메시지의 언어를 지정하는 문화권입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.GetLogInformation(System.String,System.Diagnostics.Eventing.Reader.PathType)">
      <summary vsli:raw="Gets an object that contains runtime information for the specified event log.">지정된 이벤트 로그에 대한 런타임 정보가 들어 있는 개체를 가져옵니다.</summary>
      <param name="logName" vsli:raw="The name of the event log to get information about, or the path to the event log file to get information about.">관련 정보를 가져올 이벤트 로그의 이름 또는 관련 정보를 가져올 이벤트 로그 파일에 대한 경로입니다.</param>
      <param name="pathType" vsli:raw="Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file.">경로 매개 변수에 사용되는 문자열이 이벤트 로그의 이름을 지정하는지 또는 이벤트 로그 파일의 경로를 지정하는지 여부를 지정합니다.</param>
      <returns vsli:raw="An object that contains information about the specified log.">지정된 로그에 대한 정보가 들어 있는 개체입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.GetLogNames">
      <summary vsli:raw="Gets an enumerable collection of all the event log names that are registered with the Event Log service.">이벤트 로그 서비스에 등록된 모든 이벤트 로그 이름의 열거 가능한 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="An enumerable collection of strings that contain the event log names.">이벤트 로그 이름이 들어 있는 열거 가능한 문자열 컬렉션입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.GetProviderNames">
      <summary vsli:raw="Gets an enumerable collection of all the event provider names that are registered with the Event Log service. An event provider is an application that publishes events to an event log.">이벤트 로그 서비스에 등록된 모든 이벤트 공급자 이름의 열거 가능한 컬렉션을 가져옵니다. 이벤트 공급자는 이벤트 로그에 이벤트를 게시하는 애플리케이션입니다.</summary>
      <returns vsli:raw="An enumerable collection of strings that contain the event provider names.">이벤트 공급자 이름이 들어 있는 열거 가능한 문자열 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogSession.GlobalSession">
      <summary vsli:raw="Gets a static predefined session object that is connected to the Event Log service on the local computer.">로컬 컴퓨터의 이벤트 로그 서비스에 연결된 미리 정의된 정적 세션 개체를 가져옵니다.</summary>
      <returns vsli:raw="A predefined session object that is connected to the Event Log service on the local computer.">로컬 컴퓨터의 이벤트 로그 서비스에 연결 된 미리 정의 된 세션 개체입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogStatus">
      <summary vsli:raw="Contains the status code or error code for a specific event log. This status can be used to determine if the event log is available for an operation.">특정 이벤트 로그의 상태 코드 또는 오류 코드가 들어 있습니다. 이 상태를 사용하여 이벤트 로그를 작업에 사용할 수 있는지 확인할 수 있습니다.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogStatus.LogName">
      <summary vsli:raw="Gets the name of the event log for which the status code is obtained.">상태 코드를 가져온 이벤트 로그의 이름을 가져옵니다.</summary>
      <returns vsli:raw="The name of the event log for which the status code is obtained.">상태 코드를 가져올 이벤트 로그의 이름입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogStatus.StatusCode">
      <summary vsli:raw="Gets the status code or error code for the event log. This status or error is the result of a read or subscription operation on the event log.">이벤트 로그의 상태 코드 또는 오류 코드를 가져옵니다. 이 상태 또는 오류는 이벤트 로그에서 수행한 읽기 또는 구독 작업의 결과입니다.</summary>
      <returns vsli:raw="The status code or error code for the event log.">이벤트 로그의 상태 코드 또는 오류 코드입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogType">
      <summary vsli:raw="Defines the type of events that are logged in an event log. Each log can only contain one type of event.">이벤트 로그에 기록되는 이벤트의 형식을 정의합니다. 각 로그에는 이벤트 형식이 하나만 포함될 수 있습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogType.Administrative">
      <summary vsli:raw="These events are primarily for end users, administrators, and support. The events that are found in the Administrative type logs indicate a problem and a well-defined solution that an administrator can act on. An example of an administrative event is an event that occurs when an application fails to connect to a printer.">이러한 이벤트는 주로 최종 사용자, 관리자 및 지원 인력을 위한 것입니다. Administrative 형식 로그에 있는 이벤트는 문제를 나타내며, 관리자가 실행할 수 있는 잘 정의된 솔루션을 알려 줍니다. 관리 이벤트의 예로는 애플리케이션에서 프린터에 연결할 수 없을 때 발생하는 이벤트가 있습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogType.Analytical">
      <summary vsli:raw="Events in an analytic event log are published in high volume. They describe program operation and indicate problems that cannot be handled by user intervention.">분석 이벤트 로그의 이벤트는 매우 큰 볼륨으로 게시됩니다. 이러한 이벤트는 프로그램 작업을 설명하고, 사용자가 개입하여 처리할 수 없는 문제를 나타냅니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogType.Debug">
      <summary vsli:raw="Events in a debug type event log are used solely by developers to diagnose a problem for debugging.">디버그 형식 이벤트 로그의 이벤트는 개발자가 디버깅을 위해 문제를 진단할 때만 사용됩니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogType.Operational">
      <summary vsli:raw="Events in an operational type event log are used for analyzing and diagnosing a problem or occurrence. They can be used to trigger tools or tasks based on the problem or occurrence. An example of an operational event is an event that occurs when a printer is added or removed from a system.">운영 형식 이벤트 로그의 이벤트는 문제 또는 항목을 분석하고 진단하는 데 사용됩니다. 이러한 이벤트를 사용하여 문제 또는 항목에 따라 도구 또는 작업을 트리거할 수 있습니다. 운영 이벤트의 예로는 시스템에서 프린터가 추가되거나 제거될 때 발생하는 이벤트가 있습니다.</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogWatcher">
      <summary vsli:raw="Allows you to subscribe to incoming events. Each time a desired event is published to an event log, the &lt;see cref=&quot;E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten&quot; /&gt; event is raised, and the method that handles this event will be executed.">들어오는 이벤트를 구독할 수 있습니다. 원하는 이벤트가 이벤트 로그에 게시될 때마다 <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> 이벤트가 발생하고 이 이벤트를 처리하는 메서드가 실행됩니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogWatcher&quot; /&gt; class by specifying an event query.">이벤트 쿼리를 지정하여 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="eventQuery" vsli:raw="Specifies a query for the event subscription. When an event is logged that matches the criteria expressed in the query, then the &lt;see cref=&quot;E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten&quot; /&gt; event is raised.">이벤트 구독에 대한 쿼리를 지정합니다. 쿼리에 표현된 조건에 맞는 이벤트가 기록되면 <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> 이벤트가 발생합니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogWatcher&quot; /&gt; class by specifying an event query and a bookmark that is used as starting position for the query.">이벤트 쿼리 및 쿼리의 시작 위치로 사용되는 책갈피를 지정하여 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="eventQuery" vsli:raw="Specifies a query for the event subscription. When an event is logged that matches the criteria expressed in the query, then the &lt;see cref=&quot;E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten&quot; /&gt; event is raised.">이벤트 구독에 대한 쿼리를 지정합니다. 쿼리에 표현된 조건에 맞는 이벤트가 기록되면 <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> 이벤트가 발생합니다.</param>
      <param name="bookmark" vsli:raw="The bookmark (placeholder) used as a starting position in the event log or stream of events. Only events that have been logged after the bookmark event will be returned by the query.">이벤트 로그 또는 이벤트 스트림의 시작 위치로 사용되는 책갈피(자리 표시자)입니다. 책갈피 이벤트보다 나중에 기록되는 이벤트만 쿼리에서 반환됩니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogWatcher&quot; /&gt; class by specifying an event query, a bookmark that is used as starting position for the query, and a Boolean value that determines whether to read the events that already exist in the event log.">이벤트 쿼리, 쿼리의 시작 위치로 사용되는 책갈피 및 이벤트 로그에 이미 있는 이벤트를 읽을지 여부를 결정하는 부울 값을 지정하여 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="eventQuery" vsli:raw="Specifies a query for the event subscription. When an event is logged that matches the criteria expressed in the query, then the &lt;see cref=&quot;E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten&quot; /&gt; event is raised.">이벤트 구독에 대한 쿼리를 지정합니다. 쿼리에 표현된 조건에 맞는 이벤트가 기록되면 <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> 이벤트가 발생합니다.</param>
      <param name="bookmark" vsli:raw="The bookmark (placeholder) used as a starting position in the event log or stream of events. Only events that have been logged after the bookmark event will be returned by the query.">이벤트 로그 또는 이벤트 스트림의 시작 위치로 사용되는 책갈피(자리 표시자)입니다. 책갈피 이벤트보다 나중에 기록되는 이벤트만 쿼리에서 반환됩니다.</param>
      <param name="readExistingEvents" vsli:raw="A Boolean value that determines whether to read the events that already exist in the event log. If this value is &lt;see langword=&quot;true&quot; /&gt;, then the existing events are read and if this value is &lt;see langword=&quot;false&quot; /&gt;, then the existing events are not read.">이벤트 로그에 이미 있는 이벤트를 읽을지 여부를 결정하는 부울 값입니다. 이 값이 <see langword="true" />이면 기존 이벤트를 읽고, 이 값이 <see langword="false" />이면 기존 이벤트를 읽지 않습니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogWatcher&quot; /&gt; class by specifying the name or path to an event log.">이벤트 로그에 대한 이름 또는 경로를 지정하여 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="path" vsli:raw="The path or name of the event log monitor for events. If any event is logged in this event log, then the &lt;see cref=&quot;E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten&quot; /&gt; event is raised.">이벤트에 대한 이벤트 로그 모니터의 경로 또는 이름입니다. 이 이벤트 로그에 이벤트가 기록되면 <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> 이벤트가 발생합니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.Dispose">
      <summary vsli:raw="Releases all the resources used by this object.">이 개체에서 사용하는 리소스를 모두 해제합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by this object, and optionally releases the managed resources.">이 개체에서 사용하는 관리되지 않는 리소스를 해제하고 관리되는 리소스를 선택적으로 해제합니다.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogWatcher.Enabled">
      <summary vsli:raw="Gets or sets a value that indicates whether this object starts delivering events to the event delegate.">이 개체에서 이벤트 대리자에 이벤트를 전달하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; when this object can deliver events to the event delegate; &lt;see langword=&quot;false&quot; /&gt; when this object has stopped delivery.">
        <see langword="true" />이 개체가 이벤트 대리자에 이벤트를 제공할 수 있으면이 고, 그렇지 않으면입니다. <see langword="false" /> 이 개체의 배달이 중단 된 경우입니다.</returns>
    </member>
    <member name="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten">
      <summary vsli:raw="Allows setting a delegate (event handler method) that gets called every time an event is published that matches the criteria specified in the event query for this object.">이 개체의 이벤트 쿼리에 지정된 조건에 맞는 이벤트가 게시될 때마다 호출되는 대리자(이벤트 처리기 메서드)를 설정합니다.</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventMetadata">
      <summary vsli:raw="Contains the metadata (properties and settings) for an event that is defined in an event provider.">이벤트 공급자에 정의된 이벤트에 대한 메타데이터(속성 및 설정)가 들어 있습니다.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Description">
      <summary vsli:raw="Gets the description template associated with the event using the current thread locale for the description language.">현재 스레드 로캘을 설명 언어로 사용하여 이벤트에 연결된 설명 템플릿을 가져옵니다.</summary>
      <returns vsli:raw="A string that contains the description template associated with the event.">이벤트와 연결 된 설명 템플릿을 포함 하는 문자열입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Id">
      <summary vsli:raw="Gets the identifier of the event that is defined in the event provider.">이벤트 공급자에 정의된 이벤트의 식별자를 가져옵니다.</summary>
      <returns vsli:raw="The event identifier.">이벤트 식별자입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Keywords">
      <summary vsli:raw="Gets the keywords associated with the event that is defined in the event provider.">이벤트 공급자에 정의된 이벤트와 연결된 키워드를 가져옵니다.</summary>
      <returns vsli:raw="An enumerable collection of the keywords associated with the event.">이벤트와 연결 된 키워드의 열거 가능 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Level">
      <summary vsli:raw="Gets the level associated with the event that is defined in the event provider. The level defines the severity of the event.">이벤트 공급자에 정의된 이벤트에 연결된 수준을 가져옵니다. 이 수준은 이벤트의 심각도를 정의합니다.</summary>
      <returns vsli:raw="The level associated with the event.">이벤트와 관련 된 수준입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.LogLink">
      <summary vsli:raw="Gets a link to the event log that receives this event when the provider publishes this event.">공급자가 이 이벤트를 게시할 때 이 이벤트를 받는 이벤트 로그에 대한 링크를 가져옵니다.</summary>
      <returns vsli:raw="A link to the event log.">이벤트 로그에 대 한 링크입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Opcode">
      <summary vsli:raw="Gets the opcode associated with this event that is defined by an event provider. The opcode defines a numeric value that identifies the activity or a point within an activity that the application was performing when it raised the event.">이벤트 공급자에 정의된 이 이벤트에 연결된 opcode를 가져옵니다. opcode는 애플리케이션에서 이벤트가 발생했을 때 수행되고 있던 작업 또는 작업 내의 시점을 식별하는 숫자 값을 정의합니다.</summary>
      <returns vsli:raw="The opcode associated with this event.">이 이벤트와 연결 된 opcode입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Task">
      <summary vsli:raw="Gets the task associated with the event. A task identifies a portion of an application or a component that publishes an event.">이벤트에 연결된 작업을 가져옵니다. 작업은 이벤트를 게시하는 구성 요소 또는 애플리케이션 부분을 식별합니다.</summary>
      <returns vsli:raw="The task associated with the event.">이벤트와 연결 된 작업입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Template">
      <summary vsli:raw="Gets the template string for the event. Templates are used to describe data that is used by a provider when an event is published. Templates optionally specify XML that provides the structure of an event. The XML allows values that the event publisher provides to be inserted during the rendering of an event.">이벤트의 템플릿 문자열을 가져옵니다. 템플릿은 이벤트가 게시될 때 공급자에서 사용하는 데이터를 설명하는 데 사용됩니다. 템플릿은 선택적으로 이벤트 구조를 제공하는 XML을 지정할 수 있습니다. XML을 통해 이벤트 게시자가 제공하는 값을 이벤트 렌더링 도중 삽입할 수 있습니다.</summary>
      <returns vsli:raw="A string that contains the template for the event.">이벤트에 대 한 템플릿이 들어 있는 문자열입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Version">
      <summary vsli:raw="Gets the version of the event that qualifies the event identifier.">이벤트 식별자를 정규화하는 이벤트의 버전을 가져옵니다.</summary>
      <returns vsli:raw="A byte value that contains the version of the event.">이벤트의 버전을 포함 하는 바이트 값입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventOpcode">
      <summary vsli:raw="Contains an event opcode that is defined in an event provider. An opcode defines a numeric value that identifies the activity or a point within an activity that the application was performing when it raised the event.">이벤트 공급자에 정의된 이벤트 opcode가 들어 있습니다. opcode는 애플리케이션에서 이벤트가 발생했을 때 수행되고 있던 작업 또는 작업 내의 시점을 식별하는 숫자 값을 정의합니다.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventOpcode.DisplayName">
      <summary vsli:raw="Gets the localized name for an event opcode.">이벤트 opcode의 지역화된 이름을 가져옵니다.</summary>
      <returns vsli:raw="The localized name for an event opcode.">이벤트 opcode의 지역화 된 이름입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventOpcode.Name">
      <summary vsli:raw="Gets the non-localized name for an event opcode.">이벤트 opcode의 지역화되지 않은 이름을 가져옵니다.</summary>
      <returns vsli:raw="The non-localized name for an event opcode.">이벤트 opcode의 지역화 되지 않은 이름입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventOpcode.Value">
      <summary vsli:raw="Gets the numeric value associated with the event opcode.">이벤트 opcode에 연결된 숫자 값을 가져옵니다.</summary>
      <returns vsli:raw="The numeric value associated with the event opcode.">이벤트 opcode와 연결 된 숫자 값입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventProperty">
      <summary vsli:raw="Contains the value of an event property that is specified by the event provider when the event is published.">이벤트가 게시될 때 이벤트 공급자가 지정한 이벤트 속성 값이 들어 있습니다.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventProperty.Value">
      <summary vsli:raw="Gets the value of the event property that is specified by the event provider when the event is published.">이벤트가 게시될 때 이벤트 공급자가 지정한 이벤트 속성 값을 가져옵니다.</summary>
      <returns vsli:raw="The value of the event property.">이벤트 속성의 값입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventRecord">
      <summary vsli:raw="Defines the properties of an event instance for an event that is received from an &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogReader&quot; /&gt; object. The event properties provide information about the event such as the name of the computer where the event was logged and the time the event was created. This class is an abstract class. The &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogRecord&quot; /&gt; class implements this class.">
        <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" /> 개체에서 받은 이벤트에 대한 이벤트 인스턴스의 속성을 정의합니다. 이벤트 속성은 이벤트가 기록된 컴퓨터의 이름 및 이벤트가 생성된 시간 등의 이벤트 관련 정보를 제공합니다. 이 클래스는 추상 클래스입니다. <see cref="T:System.Diagnostics.Eventing.Reader.EventLogRecord" /> 클래스는 이 클래스를 구현합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventRecord.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventRecord&quot; /&gt; class.">
        <see cref="T:System.Diagnostics.Eventing.Reader.EventRecord" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.ActivityId">
      <summary vsli:raw="Gets the globally unique identifier (GUID) for the activity in process for which the event is involved. This allows consumers to group related activities.">이벤트가 관련된 프로세스의 작업에 대한 GUID(Globally Unique Identifier)를 가져옵니다. 소비자는 이를 통해 관련 작업을 그룹화할 수 있습니다.</summary>
      <returns vsli:raw="Returns a GUID value.">GUID 값을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Bookmark">
      <summary vsli:raw="Gets a placeholder (bookmark) that corresponds to this event. This can be used as a placeholder in a stream of events.">이 이벤트에 해당하는 자리 표시자(책갈피)를 가져옵니다. 이벤트 스트림에서 자리 표시자로 사용할 수 있습니다.</summary>
      <returns vsli:raw="Returns a &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventBookmark&quot; /&gt; object.">
        <see cref="T:System.Diagnostics.Eventing.Reader.EventBookmark" /> 개체를 반환합니다.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventRecord.Dispose">
      <summary vsli:raw="Releases all the resources used by this object.">이 개체에서 사용하는 리소스를 모두 해제합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventRecord.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by this object, and optionally releases the managed resources.">이 개체에서 사용하는 관리되지 않는 리소스를 해제하고 관리되는 리소스를 선택적으로 해제합니다.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventRecord.FormatDescription">
      <summary vsli:raw="Gets the event message in the current locale.">현재 로캘의 이벤트 메시지를 가져옵니다.</summary>
      <returns vsli:raw="Returns a string that contains the event message in the current locale.">현재 로캘의 이벤트 메시지가 들어 있는 문자열을 반환합니다.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventRecord.FormatDescription(System.Collections.Generic.IEnumerable{System.Object})">
      <summary vsli:raw="Gets the event message, replacing variables in the message with the specified values.">이벤트 메시지를 가져오고 메시지의 변수를 지정된 값으로 바꿉니다.</summary>
      <param name="values" vsli:raw="The values used to replace variables in the event message. Variables are represented by %n, where n is a number.">이벤트 메시지의 변수를 바꾸는 데 사용할 값입니다. 변수는 %n으로 나타내며, 여기에서 n은 숫자입니다.</param>
      <returns vsli:raw="Returns a string that contains the event message in the current locale.">현재 로캘의 이벤트 메시지가 들어 있는 문자열을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Id">
      <summary vsli:raw="Gets the identifier for this event. All events with this identifier value represent the same type of event.">이 이벤트의 식별자를 가져옵니다. 이 식별자 값을 갖는 모든 이벤트는 같은 이벤트 형식을 나타냅니다.</summary>
      <returns vsli:raw="Returns an integer value. This value can be null.">정수 값을 반환합니다. 이 값은 null일 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Keywords">
      <summary vsli:raw="Gets the keyword mask of the event. Get the value of the &lt;see cref=&quot;P:System.Diagnostics.Eventing.Reader.EventRecord.KeywordsDisplayNames&quot; /&gt; property to get the name of the keywords used in this mask.">이벤트의 키워드 마스크를 가져옵니다. 이 마스크에 사용된 키워드의 이름을 가져오려면 <see cref="P:System.Diagnostics.Eventing.Reader.EventRecord.KeywordsDisplayNames" /> 속성 값을 가져옵니다.</summary>
      <returns vsli:raw="Returns a long value. This value can be null.">long 값을 반환합니다. 이 값은 null일 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.KeywordsDisplayNames">
      <summary vsli:raw="Gets the display names of the keywords used in the keyword mask for this event.">이 이벤트의 키워드 마스크에 사용된 키워드의 표시 이름을 가져옵니다.</summary>
      <returns vsli:raw="Returns an enumerable collection of strings that contain the display names of the keywords used in the keyword mask for this event.">이 이벤트의 키워드 마스크에 사용된 키워드의 표시 이름을 포함하는 문자열의 열거 가능한 컬렉션을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Level">
      <summary vsli:raw="Gets the level of the event. The level signifies the severity of the event. For the name of the level, get the value of the &lt;see cref=&quot;P:System.Diagnostics.Eventing.Reader.EventRecord.LevelDisplayName&quot; /&gt; property.">이벤트의 수준을 가져옵니다. 이 수준은 이벤트의 심각도를 나타냅니다. 수준 이름을 확인하려면 <see cref="P:System.Diagnostics.Eventing.Reader.EventRecord.LevelDisplayName" /> 속성 값을 가져옵니다.</summary>
      <returns vsli:raw="Returns a byte value. This value can be null.">바이트 값을 반환합니다. 이 값은 null일 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.LevelDisplayName">
      <summary vsli:raw="Gets the display name of the level for this event.">이 이벤트의 수준에 대한 표시 이름을 가져옵니다.</summary>
      <returns vsli:raw="Returns a string that contains the display name of the level for this event.">이 이벤트의 수준에 대한 표시 이름이 들어 있는 문자열을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.LogName">
      <summary vsli:raw="Gets the name of the event log where this event is logged.">이 이벤트가 기록된 이벤트 로그의 이름을 가져옵니다.</summary>
      <returns vsli:raw="Returns a string that contains a name of the event log that contains this event.">이 이벤트가 포함된 이벤트 로그의 이름이 들어 있는 문자열을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.MachineName">
      <summary vsli:raw="Gets the name of the computer on which this event was logged.">이 이벤트가 기록된 컴퓨터의 이름을 가져옵니다.</summary>
      <returns vsli:raw="Returns a string that contains the name of the computer on which this event was logged.">이 이벤트가 기록된 컴퓨터의 이름이 들어 있는 문자열을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Opcode">
      <summary vsli:raw="Gets the opcode of the event. The opcode defines a numeric value that identifies the activity or a point within an activity that the application was performing when it raised the event. For the name of the opcode, get the value of the &lt;see cref=&quot;P:System.Diagnostics.Eventing.Reader.EventRecord.OpcodeDisplayName&quot; /&gt; property.">이벤트의 opcode를 가져옵니다. opcode는 애플리케이션에서 이벤트가 발생했을 때 수행되고 있던 작업 또는 작업 내의 시점을 식별하는 숫자 값을 정의합니다. opcode의 이름을 확인하려면 <see cref="P:System.Diagnostics.Eventing.Reader.EventRecord.OpcodeDisplayName" /> 속성 값을 가져옵니다.</summary>
      <returns vsli:raw="Returns a short value. This value can be null.">short 값을 반환합니다. 이 값은 null일 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.OpcodeDisplayName">
      <summary vsli:raw="Gets the display name of the opcode for this event.">이 이벤트의 opcode에 대한 표시 이름을 가져옵니다.</summary>
      <returns vsli:raw="Returns a string that contains the display name of the opcode for this event.">이 이벤트의 opcode에 대한 표시 이름이 들어 있는 문자열을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.ProcessId">
      <summary vsli:raw="Gets the process identifier for the event provider that logged this event.">이 이벤트를 기록한 이벤트 공급자의 프로세스 식별자를 가져옵니다.</summary>
      <returns vsli:raw="Returns an integer value. This value can be null.">정수 값을 반환합니다. 이 값은 null일 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Properties">
      <summary vsli:raw="Gets the user-supplied properties of the event.">사용자가 제공한 이벤트 속성을 가져옵니다.</summary>
      <returns vsli:raw="Returns a list of &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventProperty&quot; /&gt; objects.">
        <see cref="T:System.Diagnostics.Eventing.Reader.EventProperty" /> 개체의 목록을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.ProviderId">
      <summary vsli:raw="Gets the globally unique identifier (GUID) of the event provider that published this event.">이 이벤트를 게시한 이벤트 공급자의 GUID(Globally Unique Identifier)를 가져옵니다.</summary>
      <returns vsli:raw="Returns a GUID value. This value can be null.">GUID 값을 반환합니다. 이 값은 null일 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.ProviderName">
      <summary vsli:raw="Gets the name of the event provider that published this event.">이 이벤트를 게시한 이벤트 공급자의 이름을 가져옵니다.</summary>
      <returns vsli:raw="Returns a string that contains the name of the event provider that published this event.">이 이벤트를 게시한 이벤트 공급자의 이름이 들어 있는 문자열을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Qualifiers">
      <summary vsli:raw="Gets qualifier numbers that are used for event identification.">이벤트 ID에 사용된 한정자 개수를 가져옵니다.</summary>
      <returns vsli:raw="Returns an integer value. This value can be null.">정수 값을 반환합니다. 이 값은 null일 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.RecordId">
      <summary vsli:raw="Gets the event record identifier of the event in the log.">로그에 있는 이벤트의 이벤트 레코드 식별자를 가져옵니다.</summary>
      <returns vsli:raw="Returns a long value. This value can be null.">long 값을 반환합니다. 이 값은 null일 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.RelatedActivityId">
      <summary vsli:raw="Gets a globally unique identifier (GUID) for a related activity in a process for which an event is involved.">이벤트가 관련된 프로세스의 관련 작업에 대한 GUID(Globally Unique Identifier)를 가져옵니다.</summary>
      <returns vsli:raw="Returns a GUID value. This value can be null.">GUID 값을 반환합니다. 이 값은 null일 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Task">
      <summary vsli:raw="Gets a task identifier for a portion of an application or a component that publishes an event. A task is a 16-bit value with 16 top values reserved. This type allows any value between 0x0000 and 0xffef to be used. To obtain the task name, get the value of the &lt;see cref=&quot;P:System.Diagnostics.Eventing.Reader.EventRecord.TaskDisplayName&quot; /&gt; property.">이벤트를 게시하는 구성 요소 또는 애플리케이션 부분에 대한 작업 식별자를 가져옵니다. 작업은 상위 16개 값이 예약된 16비트 값입니다. 이 형식에는 0x0000에서 0xffef 사이의 모든 값을 사용할 수 있습니다. 작업 이름을 가져오려면 <see cref="P:System.Diagnostics.Eventing.Reader.EventRecord.TaskDisplayName" /> 속성 값을 가져옵니다.</summary>
      <returns vsli:raw="Returns an integer value. This value can be null.">정수 값을 반환합니다. 이 값은 null일 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.TaskDisplayName">
      <summary vsli:raw="Gets the display name of the task for the event.">이벤트의 작업에 대한 표시 이름을 가져옵니다.</summary>
      <returns vsli:raw="Returns a string that contains the display name of the task for the event.">이벤트의 작업에 대한 표시 이름이 들어 있는 문자열을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.ThreadId">
      <summary vsli:raw="Gets the thread identifier for the thread that the event provider is running in.">이벤트 공급자가 실행되고 있는 스레드의 식별자를 가져옵니다.</summary>
      <returns vsli:raw="Returns an integer value. This value can be null.">정수 값을 반환합니다. 이 값은 null일 수 있습니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.TimeCreated">
      <summary vsli:raw="Gets the time, in &lt;see cref=&quot;T:System.DateTime&quot; /&gt; format, that the event was created.">이벤트가 생성된 시간을 <see cref="T:System.DateTime" /> 형식으로 가져옵니다.</summary>
      <returns vsli:raw="Returns a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value. The value can be null.">
        <see cref="T:System.DateTime" /> 값을 반환합니다. 이 값은 null이 될 수 있습니다.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventRecord.ToXml">
      <summary vsli:raw="Gets the XML representation of the event. All of the event properties are represented in the event XML. The XML conforms to the event schema.">이벤트의 XML 표현을 가져옵니다. 이벤트 XML에는 모든 이벤트 속성이 표현됩니다. 이 XML은 이벤트 스키마를 따릅니다.</summary>
      <returns vsli:raw="Returns a string that contains the XML representation of the event.">이벤트의 XML 표현이 들어 있는 문자열을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.UserId">
      <summary vsli:raw="Gets the security descriptor of the user whose context is used to publish the event.">이벤트를 게시하는 데 해당 컨텍스트를 사용할 사용자의 보안 설명자를 가져옵니다.</summary>
      <returns vsli:raw="Returns a &lt;see cref=&quot;T:System.Security.Principal.SecurityIdentifier&quot; /&gt; value.">
        <see cref="T:System.Security.Principal.SecurityIdentifier" /> 값을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Version">
      <summary vsli:raw="Gets the version number for the event.">이벤트의 버전 번호를 가져옵니다.</summary>
      <returns vsli:raw="Returns a byte value. This value can be null.">바이트 값을 반환합니다. 이 값은 null일 수 있습니다.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs">
      <summary vsli:raw="When the &lt;see cref=&quot;E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten&quot; /&gt; event is raised, an instance of this object is passed to the delegate method that handles the event. This object contains the event that was published to the event log or the exception that occurred when the event subscription failed.">
        <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> 이벤트가 발생하면 이벤트를 처리하는 대리자 메서드에 이 개체의 인스턴스가 전달됩니다. 이 개체에는 이벤트 로그에 게시된 이벤트 또는 이벤트 구독에 실패할 때 발생한 예외가 들어 있습니다.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs.EventException">
      <summary vsli:raw="Gets the exception that occurred when the event subscription failed. The exception has a description of why the subscription failed.">이벤트 구독에 실패할 때 발생한 예외를 가져옵니다. 이 예외는 구독에 실패한 이유를 설명합니다.</summary>
      <returns vsli:raw="The exception that occurred when the event subscription failed.">이벤트 구독이 실패 한 경우 발생 한 예외입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs.EventRecord">
      <summary vsli:raw="Gets the event record that is published to the event log. This event matches the criteria from the query specified in the event subscription.">이벤트 로그에 게시된 이벤트 레코드를 가져옵니다. 이 이벤트는 이벤트 구독에 지정된 쿼리의 조건에 맞습니다.</summary>
      <returns vsli:raw="The event record.">이벤트 레코드입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventTask">
      <summary vsli:raw="Contains an event task that is defined in an event provider. The task identifies a portion of an application or a component that publishes an event. A task is a 16-bit value with 16 top values reserved.">이벤트 공급자에 정의된 이벤트 작업이 들어 있습니다. 작업은 이벤트를 게시하는 구성 요소 또는 애플리케이션 부분을 식별합니다. 작업은 상위 16개 값이 예약된 16비트 값입니다.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventTask.DisplayName">
      <summary vsli:raw="Gets the localized name for the event task.">이벤트 작업의 지역화된 이름을 가져옵니다.</summary>
      <returns vsli:raw="The localized name for the event task.">이벤트 작업의 지역화 된 이름입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventTask.EventGuid">
      <summary vsli:raw="Gets the event globally unique identifier (GUID) associated with the task.">작업에 연결된 이벤트 GUID(Globally Unique Identifier)를 가져옵니다.</summary>
      <returns vsli:raw="The event GUID associated with the task.">태스크와 연결 된 이벤트 GUID입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventTask.Name">
      <summary vsli:raw="Gets the non-localized name of the event task.">이벤트 작업의 지역화되지 않은 이름을 가져옵니다.</summary>
      <returns vsli:raw="The non-localized name of the event task.">이벤트 작업의 지역화 되지 않은 이름입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventTask.Value">
      <summary vsli:raw="Gets the numeric value associated with the task.">작업에 연결된 숫자 값을 가져옵니다.</summary>
      <returns vsli:raw="The numeric value associated with the task.">작업에 연결 된 숫자 값입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.PathType">
      <summary vsli:raw="Specifies that a string contains a name of an event log or the file system path to an event log file.">문자열에 이벤트 로그의 이름이 들어 있는지 아니면 이벤트 로그 파일에 대한 파일 시스템 경로가 들어 있는지를 지정합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.PathType.FilePath">
      <summary vsli:raw="A path parameter contains the file system path to an event log file.">경로 매개 변수에 이벤트 로그 파일에 대한 파일 시스템 경로가 들어 있습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.PathType.LogName">
      <summary vsli:raw="A path parameter contains the name of the event log.">경로 매개 변수에 이벤트 로그의 이름이 들어 있습니다.</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.ProviderMetadata">
      <summary vsli:raw="Contains static information about an event provider, such as the name and id of the provider, and the collection of events defined in the provider.">공급자의 이름과 ID 및 공급자에 정의된 이벤트 컬렉션과 같은 이벤트 공급자에 대한 정적 정보가 들어 있습니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.ProviderMetadata&quot; /&gt; class by specifying the name of the provider that you want to retrieve information about.">관련 정보를 검색할 공급자의 이름을 지정하여 <see cref="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="providerName" vsli:raw="The name of the event provider that you want to retrieve information about.">관련 정보를 검색할 이벤트 공급자의 이름입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.#ctor(System.String,System.Diagnostics.Eventing.Reader.EventLogSession,System.Globalization.CultureInfo)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.ProviderMetadata&quot; /&gt; class by specifying the name of the provider that you want to retrieve information about, the event log service that the provider is registered with, and the language that you want to return the information in.">관련 정보를 검색할 공급자의 이름, 공급자가 등록된 이벤트 로그 서비스 및 정보를 반환할 언어를 지정하여 <see cref="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="providerName" vsli:raw="The name of the event provider that you want to retrieve information about.">관련 정보를 검색할 이벤트 공급자의 이름입니다.</param>
      <param name="session" vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogSession&quot; /&gt; object that specifies whether to get the provider information from a provider on the local computer or a provider on a remote computer.">공급자 정보를 가져올 공급자가 로컬 컴퓨터에 있는지 아니면 원격 컴퓨터에 있는지를 지정하는 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" /> 개체입니다.</param>
      <param name="targetCultureInfo" vsli:raw="The culture that specifies the language that the information should be returned in.">정보를 반환할 언어를 지정하는 문화권입니다.</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.DisplayName">
      <summary vsli:raw="Gets the localized name of the event provider.">이벤트 공급자의 지역화된 이름을 가져옵니다.</summary>
      <returns vsli:raw="Returns a string that contains the localized name of the event provider.">이벤트 공급자의 지역화된 이름이 들어 있는 문자열을 반환합니다.</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.Dispose">
      <summary vsli:raw="Releases all the resources used by this object.">이 개체에서 사용하는 리소스를 모두 해제합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by this object, and optionally releases the managed resources.">이 개체에서 사용하는 관리되지 않는 리소스를 해제하고 관리되는 리소스를 선택적으로 해제합니다.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Events">
      <summary vsli:raw="Gets an enumerable collection of &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventMetadata&quot; /&gt; objects, each of which represents an event that is defined in the provider.">공급자에 정의된 이벤트를 각각 나타내는 <see cref="T:System.Diagnostics.Eventing.Reader.EventMetadata" /> 개체의 열거 가능한 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="Returns an enumerable collection of &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventMetadata&quot; /&gt; objects.">
        <see cref="T:System.Diagnostics.Eventing.Reader.EventMetadata" /> 개체의 열거할 수 있는 컬렉션을 노출시킵니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.HelpLink">
      <summary vsli:raw="Gets the base of the URL used to form help requests for the events in this event provider.">이 이벤트 공급자의 이벤트에 대한 도움말 요청을 구성하는 데 사용되는 URL의 기준을 가져옵니다.</summary>
      <returns vsli:raw="Returns a &lt;see cref=&quot;T:System.Uri&quot; /&gt; value.">
        <see cref="T:System.Uri" /> 값을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Id">
      <summary vsli:raw="Gets the globally unique identifier (GUID) for the event provider.">이벤트 공급자의 GUID(Globally Unique Identifier)를 가져옵니다.</summary>
      <returns vsli:raw="Returns the GUID value for the event provider.">이벤트 공급자의 GUID 값을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Keywords">
      <summary vsli:raw="Gets an enumerable collection of &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventKeyword&quot; /&gt; objects, each of which represent an event keyword that is defined in the event provider.">이벤트 공급자에 정의된 이벤트 키워드를 각각 나타내는 <see cref="T:System.Diagnostics.Eventing.Reader.EventKeyword" /> 개체의 열거 가능한 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="Returns an enumerable collection of &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventKeyword&quot; /&gt; objects.">
        <see cref="T:System.Diagnostics.Eventing.Reader.EventKeyword" /> 개체의 열거할 수 있는 컬렉션을 노출시킵니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Levels">
      <summary vsli:raw="Gets an enumerable collection of &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLevel&quot; /&gt; objects, each of which represent a level that is defined in the event provider.">이벤트 공급자에 정의된 수준을 각각 나타내는 <see cref="T:System.Diagnostics.Eventing.Reader.EventLevel" /> 개체의 열거 가능한 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="Returns an enumerable collection of &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLevel&quot; /&gt; objects.">
        <see cref="T:System.Diagnostics.Eventing.Reader.EventLevel" /> 개체의 열거할 수 있는 컬렉션을 노출시킵니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.LogLinks">
      <summary vsli:raw="Gets an enumerable collection of &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogLink&quot; /&gt; objects, each of which represent a link to an event log that is used by the event provider.">이벤트 공급자에 사용되는 이벤트 로그에 대한 링크를 각각 나타내는 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogLink" /> 개체의 열거 가능한 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="Returns an enumerable collection of &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogLink&quot; /&gt; objects.">
        <see cref="T:System.Diagnostics.Eventing.Reader.EventLogLink" /> 개체의 열거할 수 있는 컬렉션을 노출시킵니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.MessageFilePath">
      <summary vsli:raw="Gets the path of the file that contains the message table resource that has the strings associated with the provider metadata.">공급자 메타데이터에 연결된 문자열이 있는 메시지 테이블 리소스가 들어 있는 파일에 대한 경로를 가져옵니다.</summary>
      <returns vsli:raw="Returns a string that contains the path of the provider message file.">공급자 메시지 파일에 대한 경로가 들어 있는 문자열을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Name">
      <summary vsli:raw="Gets the unique name of the event provider.">이벤트 공급자의 고유 이름을 가져옵니다.</summary>
      <returns vsli:raw="Returns a string that contains the unique name of the event provider.">이벤트 공급자의 고유 이름이 들어 있는 문자열을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Opcodes">
      <summary vsli:raw="Gets an enumerable collection of &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventOpcode&quot; /&gt; objects, each of which represent an opcode that is defined in the event provider.">이벤트 공급자에 정의된 opcode를 각각 나타내는 <see cref="T:System.Diagnostics.Eventing.Reader.EventOpcode" /> 개체의 열거 가능한 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="Returns an enumerable collection of &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventOpcode&quot; /&gt; objects.">
        <see cref="T:System.Diagnostics.Eventing.Reader.EventOpcode" /> 개체의 열거할 수 있는 컬렉션을 노출시킵니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.ParameterFilePath">
      <summary vsli:raw="Gets the path of the file that contains the message table resource that has the strings used for parameter substitutions in event descriptions.">이벤트 설명에 있는 매개 변수를 대체하는 데 사용되는 문자열이 있는 메시지 테이블 리소스가 들어 있는 파일에 대한 경로를 가져옵니다.</summary>
      <returns vsli:raw="Returns a string that contains the path of the file that contains the message table resource that has the strings used for parameter substitutions in event descriptions.">이벤트 설명에 있는 매개 변수를 대체하는 데 사용되는 문자열이 있는 메시지 테이블 리소스가 들어 있는 파일에 대한 경로가 포함된 문자열을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.ResourceFilePath">
      <summary vsli:raw="Gets the path to the file that contains the metadata associated with the provider.">공급자에 연결된 메타데이터가 들어 있는 파일에 대한 경로를 가져옵니다.</summary>
      <returns vsli:raw="Returns a string that contains the path to the file that contains the metadata associated with the provider.">공급자에 연결된 메타데이터가 들어 있는 파일에 대한 경로가 포함된 문자열을 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Tasks">
      <summary vsli:raw="Gets an enumerable collection of &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventTask&quot; /&gt; objects, each of which represent a task that is defined in the event provider.">이벤트 공급자에 정의된 작업을 각각 나타내는 <see cref="T:System.Diagnostics.Eventing.Reader.EventTask" /> 개체의 열거 가능한 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="Returns an enumerable collection of &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventTask&quot; /&gt; objects.">
        <see cref="T:System.Diagnostics.Eventing.Reader.EventTask" /> 개체의 열거할 수 있는 컬렉션을 노출시킵니다.</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.SessionAuthentication">
      <summary vsli:raw="Defines values for the type of authentication used during a Remote Procedure Call (RPC) login to a server. This login occurs when you create a &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLogSession&quot; /&gt; object that specifies a connection to a remote computer.">서버에 대한 RPC(원격 프로시저 호출) 로그인 도중 사용되는 인증 형식에 대한 값을 정의합니다. 원격 컴퓨터에 대한 연결을 지정하는 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" /> 개체를 만들 때 이 로그인이 수행됩니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.SessionAuthentication.Default">
      <summary vsli:raw="Use the default authentication method during RPC login. The default authentication is equivalent to Negotiate.">RPC 로그인 도중 기본 인증 방법을 사용합니다. 기본 인증은 협상 인증과 동일합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.SessionAuthentication.Kerberos">
      <summary vsli:raw="Use Kerberos authentication during RPC login.">RPC 로그인 도중 Kerberos 인증을 사용합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.SessionAuthentication.Negotiate">
      <summary vsli:raw="Use the Negotiate authentication method during RPC login. This allows the client application to select the most appropriate authentication method (NTLM or Kerberos) for the situation.">RPC 로그인 도중 협상 인증 방법을 사용합니다. 클라이언트 애플리케이션은 이를 통해 상황에 가장 적합한 인증 방법(NTLM 또는 Kerberos)을 선택할 수 있습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.SessionAuthentication.Ntlm">
      <summary vsli:raw="Use Windows NT LAN Manager (NTLM) authentication during RPC login.">RPC 로그인 도중 Windows NTLM(NT LAN Manager) 인증을 사용합니다.</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.StandardEventKeywords">
      <summary vsli:raw="Defines the standard keywords that are attached to events by the event provider. For more information about keywords, see &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventKeyword&quot; /&gt;.">이벤트 공급자가 이벤트에 연결하는 표준 키워드를 정의합니다. 키워드에 대한 자세한 내용은 <see cref="T:System.Diagnostics.Eventing.Reader.EventKeyword" />를 참조하십시오.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.AuditFailure">
      <summary vsli:raw="Attached to all failed security audit events. This keyword should only be used for events in the Security log.">모든 실패한 보안 감사 이벤트에 연결됩니다. 이 키워드는 보안 로그의 이벤트에만 사용해야 합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.AuditSuccess">
      <summary vsli:raw="Attached to all successful security audit events. This keyword should only be used for events in the Security log.">모든 성공적인 보안 감사 이벤트에 연결됩니다. 이 키워드는 보안 로그의 이벤트에만 사용해야 합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.CorrelationHint">
      <summary vsli:raw="Attached to transfer events where the related Activity ID (Correlation ID) is a computed value and is not guaranteed to be unique (not a real GUID).">관련 작업 ID(상관 관계 ID)가 계산된 값이고 실제 GUID가 아니므로 고유하지 않을 수 있는 경우 전송 이벤트에 연결됩니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.CorrelationHint2">
      <summary vsli:raw="Attached to transfer events where the related Activity ID (Correlation ID) is a computed value and is not guaranteed to be unique (not a real GUID).">관련 작업 ID(상관 관계 ID)가 계산된 값이고 실제 GUID가 아니므로 고유하지 않을 수 있는 경우 전송 이벤트에 연결됩니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.EventLogClassic">
      <summary vsli:raw="Attached to events which are raised using the RaiseEvent function.">RaiseEvent 함수를 사용하여 발생한 이벤트에 연결됩니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.None">
      <summary vsli:raw="This value indicates that no filtering on keyword is performed when the event is published.">이 값은 이벤트를 게시할 때 키워드에 따라 필터링하지 않음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.ResponseTime">
      <summary vsli:raw="Attached to all response time events.">모든 응답 시간 이벤트에 연결됩니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.Sqm">
      <summary vsli:raw="Attached to all Service Quality Mechanism (SQM) events.">모든 SQM(Service Quality Mechanism) 이벤트에 연결됩니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.WdiContext">
      <summary vsli:raw="Attached to all Windows Diagnostic Infrastructure (WDI) context events.">모든 WDI(Windows Diagnostic Infrastructure) 컨텍스트 이벤트에 연결됩니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.WdiDiagnostic">
      <summary vsli:raw="Attached to all Windows Diagnostic Infrastructure (WDI) diagnostic events.">모든 WDI(Windows Diagnostic Infrastructure) 진단 이벤트에 연결됩니다.</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.StandardEventLevel">
      <summary vsli:raw="Defines the standard event levels that are used in the Event Log service. The level defines the severity of the event. Custom event levels can be defined beyond these standard levels. For more information about levels, see &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventLevel&quot; /&gt;.">이벤트 로그 서비스에 사용되는 표준 이벤트 수준을 정의합니다. 이 수준은 이벤트의 심각도를 정의합니다. 이러한 표준 수준을 벗어나는 사용자 지정 이벤트 수준을 정의할 수 있습니다. 수준에 대한 자세한 내용은 <see cref="T:System.Diagnostics.Eventing.Reader.EventLevel" />을 참조하십시오.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Critical">
      <summary vsli:raw="This level corresponds to critical errors, which is a serious error that has caused a major failure.">이 수준은 중대한 작업 실패를 일으킨 심각한 오류에 해당합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Error">
      <summary vsli:raw="This level corresponds to normal errors that signify a problem.">이 수준은 문제 발생을 나타내는 일반 오류에 해당합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Informational">
      <summary vsli:raw="This level corresponds to informational events or messages that are not errors. These events can help trace the progress or state of an application.">이 수준은 오류가 아닌 정보 이벤트 또는 메시지에 해당합니다. 이러한 이벤트를 통해 애플리케이션의 진행률이나 상태를 추적할 수 있습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.LogAlways">
      <summary vsli:raw="This value indicates that not filtering on the level is done during the event publishing.">이 값은 이벤트를 게시할 때 수준에 따라 필터링하지 않음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Verbose">
      <summary vsli:raw="This level corresponds to lengthy events or messages.">이 수준은 길이가 긴 이벤트 또는 메시지에 해당합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Warning">
      <summary vsli:raw="This level corresponds to warning events. For example, an event that gets published because a disk is nearing full capacity is a warning event.">이 수준은 경고 이벤트에 해당합니다. 예를 들어 디스크 용량이 거의 꽉 찰 때 게시되는 이벤트는 경고 이벤트입니다.</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.StandardEventOpcode">
      <summary vsli:raw="Defines the standard opcodes that are attached to events by the event provider. For more information about opcodes, see &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventOpcode&quot; /&gt;.">이벤트 공급자가 이벤트에 연결하는 표준 opcode를 정의합니다. opcode에 대한 자세한 내용은 <see cref="T:System.Diagnostics.Eventing.Reader.EventOpcode" />를 참조하십시오.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.DataCollectionStart">
      <summary vsli:raw="An event with this opcode is a trace collection start event.">이 opcode가 있는 이벤트는 추적 컬렉션 시작 이벤트입니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.DataCollectionStop">
      <summary vsli:raw="An event with this opcode is a trace collection stop event.">이 opcode가 있는 이벤트는 추적 컬렉션 중지 이벤트입니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Extension">
      <summary vsli:raw="An event with this opcode is an extension event.">이 opcode가 있는 이벤트는 확장 이벤트입니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Info">
      <summary vsli:raw="An event with this opcode is an informational event.">이 opcode가 있는 이벤트는 정보 이벤트입니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Receive">
      <summary vsli:raw="An event with this opcode is published when one activity in an application receives data.">이 opcode가 있는 이벤트는 애플리케이션의 작업 중 하나가 데이터를 받을 때 게시됩니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Reply">
      <summary vsli:raw="An event with this opcode is published after an activity in an application replies to an event.">이 opcode가 있는 이벤트는 애플리케이션의 작업이 이벤트에 응답한 후 게시됩니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Resume">
      <summary vsli:raw="An event with this opcode is published after an activity in an application resumes from a suspended state. The event should follow an event with the Suspend opcode.">이 opcode가 있는 이벤트는 애플리케이션에서 일시 중단된 작업이 다시 시작될 때 게시됩니다. 이 이벤트는 Suspend opcode가 있는 이벤트 다음에 나와야 합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Send">
      <summary vsli:raw="An event with this opcode is published when one activity in an application transfers data or system resources to another activity.">이 opcode가 있는 이벤트는 애플리케이션의 작업 중 하나에서 데이터 또는 시스템 리소스를 다른 작업에 전송할 때 게시됩니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Start">
      <summary vsli:raw="An event with this opcode is published when an application starts a new transaction or activity. This can be embedded into another transaction or activity when multiple events with the Start opcode follow each other without an event with a Stop opcode.">이 opcode가 있는 이벤트는 애플리케이션에서 새 트랜잭션 또는 작업을 시작할 때 게시됩니다. Stop opcode가 있는 이벤트 없이 Start opcode가 있는 여러 이벤트가 연속으로 발생하면 이 이벤트가 다른 트랜잭션 또는 작업에 포함될 수 있습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Stop">
      <summary vsli:raw="An event with this opcode is published when an activity or a transaction in an application ends. The event corresponds to the last unpaired event with a Start opcode.">이 opcode가 있는 이벤트는 애플리케이션에서 작업 또는 트랜잭션이 종료될 때 게시됩니다. 이 이벤트는 Start opcode가 있는 이벤트 중 짝이 없는 마지막 이벤트에 대응됩니다.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Suspend">
      <summary vsli:raw="An event with this opcode is published when an activity in an application is suspended.">이 opcode가 있는 이벤트는 애플리케이션의 작업이 일시 중지될 때 게시됩니다.</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.StandardEventTask">
      <summary vsli:raw="Defines the standard tasks that are attached to events by the event provider. For more information about tasks, see &lt;see cref=&quot;T:System.Diagnostics.Eventing.Reader.EventTask&quot; /&gt;.">이벤트 공급자가 이벤트에 연결하는 표준 작업을 정의합니다. 작업에 대한 자세한 내용은 <see cref="T:System.Diagnostics.Eventing.Reader.EventTask" />을 참조하십시오.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventTask.None">
      <summary vsli:raw="No task is used to identify a portion of an application that publishes an event.">이벤트를 게시하는 애플리케이션 부분을 식별하는 데 사용되는 작업이 없습니다.</summary>
    </member>
    <member name="T:System.Diagnostics.EventInstance">
      <summary vsli:raw="Represents language-neutral information for an event log entry.">이벤트 로그 엔트리에 대한 언어 중립 정보를 나타냅니다.</summary>
    </member>
    <member name="M:System.Diagnostics.EventInstance.#ctor(System.Int64,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.EventInstance&quot; /&gt; class using the specified resource identifiers for the localized message and category text of the event entry.">이벤트 엔트리의 지역화된 메시지 및 범주 텍스트에 대한 지정된 리소스 식별자를 사용하여 <see cref="T:System.Diagnostics.EventInstance" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="instanceId" vsli:raw="A resource identifier that corresponds to a string defined in the message resource file of the event source.">이벤트 소스의 메시지 리소스 파일에 정의된 문자열에 해당하는 리소스 식별자입니다.</param>
      <param name="categoryId" vsli:raw="A resource identifier that corresponds to a string defined in the category resource file of the event source, or zero to specify no category for the event.">이벤트 소스의 범주 리소스 파일에 정의된 문자열에 해당하는 리소스 식별자입니다. 이벤트 범주가 없는 경우 0입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;instanceId&quot; /&gt; parameter is a negative value or a value larger than &lt;see cref=&quot;F:System.UInt32.MaxValue&quot;&gt;UInt32.MaxValue&lt;/see&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;categoryId&quot; /&gt; parameter is a negative value or a value larger than &lt;see cref=&quot;F:System.UInt16.MaxValue&quot;&gt;UInt16.MaxValue&lt;/see&gt;.">
        <paramref name="instanceId" /> 매개 변수가 음의 값이거나 <see cref="F:System.UInt32.MaxValue" />보다 큰 값인 경우  
또는 
<paramref name="categoryId" /> 매개 변수가 음의 값이거나 <see cref="F:System.UInt16.MaxValue" />보다 큰 값인 경우</exception>
    </member>
    <member name="M:System.Diagnostics.EventInstance.#ctor(System.Int64,System.Int32,System.Diagnostics.EventLogEntryType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.EventInstance&quot; /&gt; class using the specified resource identifiers for the localized message and category text of the event entry and the specified event log entry type.">지역화된 메시지의 지정된 리소스 식별자, 이벤트 엔트리의 범주 텍스트 및 지정된 이벤트 로그 엔트리 형식을 사용하여 <see cref="T:System.Diagnostics.EventInstance" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="instanceId" vsli:raw="A resource identifier that corresponds to a string defined in the message resource file of the event source.">이벤트 소스의 메시지 리소스 파일에 정의된 문자열에 해당하는 리소스 식별자입니다.</param>
      <param name="categoryId" vsli:raw="A resource identifier that corresponds to a string defined in the category resource file of the event source, or zero to specify no category for the event.">이벤트 소스의 범주 리소스 파일에 정의된 문자열에 해당하는 리소스 식별자입니다. 이벤트 범주가 없는 경우 0입니다.</param>
      <param name="entryType" vsli:raw="An &lt;see cref=&quot;T:System.Diagnostics.EventLogEntryType&quot; /&gt; value that indicates the event type.">이벤트의 형식을 나타내는 <see cref="T:System.Diagnostics.EventLogEntryType" /> 값입니다.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;entryType&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Diagnostics.EventLogEntryType&quot; /&gt; value.">
        <paramref name="entryType" />는 유효한 <see cref="T:System.Diagnostics.EventLogEntryType" /> 값이 아닙니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;instanceId&quot; /&gt; is a negative value or a value larger than &lt;see cref=&quot;F:System.UInt32.MaxValue&quot;&gt;UInt32.MaxValue&lt;/see&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;categoryId&quot; /&gt; is a negative value or a value larger than &lt;see cref=&quot;F:System.UInt16.MaxValue&quot;&gt;UInt16.MaxValue&lt;/see&gt;.">
        <paramref name="instanceId" />가 음의 값이거나 <see cref="F:System.UInt32.MaxValue" />보다 큰 값인 경우  
또는 
 <paramref name="categoryId" />가 음의 값이거나 <see cref="F:System.UInt16.MaxValue" />보다 큰 값인 경우</exception>
    </member>
    <member name="P:System.Diagnostics.EventInstance.CategoryId">
      <summary vsli:raw="Gets or sets the resource identifier that specifies the application-defined category of the event entry.">애플리케이션에 정의된 이벤트 엔트리의 범주를 지정하는 리소스 식별자를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A numeric category value or resource identifier that corresponds to a string defined in the category resource file of the event source. The default is zero, which signifies that no category will be displayed for the event entry.">이벤트 소스의 범주 리소스 파일에 정의된 문자열에 해당하는 리소스 식별자의 숫자 범주 값 또는 리소스 식별자입니다. 기본값은 0이며 이벤트 엔트리에 대해 범주가 표시되지 않을 것임을 나타냅니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The property is set to a negative value or to a value larger than &lt;see cref=&quot;F:System.UInt16.MaxValue&quot;&gt;UInt16.MaxValue&lt;/see&gt;.">속성이 음의 값이나 <see cref="F:System.UInt16.MaxValue" />보다 큰 값으로 설정된 경우</exception>
    </member>
    <member name="P:System.Diagnostics.EventInstance.EntryType">
      <summary vsli:raw="Gets or sets the event type of the event log entry.">이벤트 로그 엔트리의 이벤트 형식을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Diagnostics.EventLogEntryType&quot; /&gt; value that indicates the event entry type. The default value is &lt;see cref=&quot;F:System.Diagnostics.EventLogEntryType.Information&quot; /&gt;.">이벤트 엔트리 형식을 나타내는 <see cref="T:System.Diagnostics.EventLogEntryType" /> 값입니다. 기본값은 <see cref="F:System.Diagnostics.EventLogEntryType.Information" />입니다.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="The property is not set to a valid &lt;see cref=&quot;T:System.Diagnostics.EventLogEntryType&quot; /&gt; value.">속성이 유효한 <see cref="T:System.Diagnostics.EventLogEntryType" />으로 설정되지 않은 경우</exception>
    </member>
    <member name="P:System.Diagnostics.EventInstance.InstanceId">
      <summary vsli:raw="Gets or sets the resource identifier that designates the message text of the event entry.">이벤트 엔트리의 메시지 텍스트를 지정하는 리소스 식별자를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A resource identifier that corresponds to a string defined in the message resource file of the event source.">이벤트 소스의 메시지 리소스 파일에 정의된 문자열에 해당하는 리소스 식별자입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The property is set to a negative value or to a value larger than &lt;see cref=&quot;F:System.UInt32.MaxValue&quot;&gt;UInt32.MaxValue&lt;/see&gt;.">속성이 음의 값이나 <see cref="F:System.UInt32.MaxValue" />보다 큰 값으로 설정된 경우</exception>
    </member>
    <member name="T:System.Diagnostics.EventLog">
      <summary vsli:raw="Provides interaction with Windows event logs.">Windows 이벤트 로그 조작을 제공합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.EventLog.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.EventLog&quot; /&gt; class. Does not associate the instance with any log.">
        <see cref="T:System.Diagnostics.EventLog" /> 클래스의 새 인스턴스를 초기화합니다. 인스턴스를 로그와 연결하지 않습니다.</summary>
    </member>
    <member name="M:System.Diagnostics.EventLog.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.EventLog&quot; /&gt; class. Associates the instance with a log on the local computer.">
        <see cref="T:System.Diagnostics.EventLog" /> 클래스의 새 인스턴스를 초기화합니다. 로컬 컴퓨터에 있는 로그에 인스턴스를 연결합니다.</summary>
      <param name="logName" vsli:raw="The name of the log on the local computer.">로컬 컴퓨터의 로그 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The log name is &lt;see langword=&quot;null&quot; /&gt;.">로그 이름이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The log name is invalid.">로그 이름이 잘못된 경우</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.EventLog&quot; /&gt; class. Associates the instance with a log on the specified computer.">
        <see cref="T:System.Diagnostics.EventLog" /> 클래스의 새 인스턴스를 초기화합니다. 지정한 컴퓨터에 있는 로그에 인스턴스를 연결합니다.</summary>
      <param name="logName" vsli:raw="The name of the log on the specified computer.">지정된 컴퓨터의 로그 이름입니다.</param>
      <param name="machineName" vsli:raw="The computer on which the log exists.">로그가 있는 컴퓨터입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The log name is &lt;see langword=&quot;null&quot; /&gt;.">로그 이름이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The log name is invalid.  &#xA;  &#xA; -or-  &#xA;  &#xA; The computer name is invalid.">로그 이름이 잘못된 경우  
 또는  
 컴퓨터 이름이 잘못된 경우</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.#ctor(System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.EventLog&quot; /&gt; class. Associates the instance with a log on the specified computer and creates or assigns the specified source to the &lt;see cref=&quot;T:System.Diagnostics.EventLog&quot; /&gt;.">
        <see cref="T:System.Diagnostics.EventLog" /> 클래스의 새 인스턴스를 초기화합니다. 지정한 컴퓨터에 있는 로그에 인스턴스를 연결하고 <see cref="T:System.Diagnostics.EventLog" />에 지정한 원본을 만들거나 할당합니다.</summary>
      <param name="logName" vsli:raw="The name of the log on the specified computer.">지정된 컴퓨터의 로그 이름입니다.</param>
      <param name="machineName" vsli:raw="The computer on which the log exists.">로그가 있는 컴퓨터입니다.</param>
      <param name="source" vsli:raw="The source of event log entries.">이벤트 로그 항목의 원본입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The log name is &lt;see langword=&quot;null&quot; /&gt;.">로그 이름이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The log name is invalid.  &#xA;  &#xA; -or-  &#xA;  &#xA; The computer name is invalid.">로그 이름이 잘못된 경우  
 또는  
 컴퓨터 이름이 잘못된 경우</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.BeginInit">
      <summary vsli:raw="Begins the initialization of an &lt;see cref=&quot;T:System.Diagnostics.EventLog&quot; /&gt; used on a form or used by another component. The initialization occurs at runtime.">양식에서 사용하거나 다른 구성 요소에서 사용하는 <see cref="T:System.Diagnostics.EventLog" />를 초기화합니다. 초기화는 런타임에 발생합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;T:System.Diagnostics.EventLog&quot; /&gt; is already initialized.">
        <see cref="T:System.Diagnostics.EventLog" />가 이미 초기화된 경우</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.Clear">
      <summary vsli:raw="Removes all entries from the event log.">이벤트 로그에서 모든 엔트리를 제거합니다.</summary>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The event log was not cleared successfully.  &#xA;  &#xA; -or-  &#xA;  &#xA; The log cannot be opened. A Windows error code is not available.">이벤트 로그가 지워지지 않은 경우  
 또는  
 로그를 열 수 없는 경우. Windows 오류 코드를 사용할 수 없습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="A value is not specified for the &lt;see cref=&quot;P:System.Diagnostics.EventLog.Log&quot; /&gt; property. Make sure the log name is not an empty string.">
        <see cref="P:System.Diagnostics.EventLog.Log" /> 속성에 값이 지정되지 않은 경우. 로그 이름이 빈 문자열이 아닌지 확인하십시오.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The log does not exist.">로그가 없는 경우</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.Close">
      <summary vsli:raw="Closes the event log and releases read and write handles.">이벤트 로그를 닫고 읽기 및 쓰기 핸들을 해제합니다.</summary>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The event log's read handle or write handle was not released successfully.">이벤트 로그의 읽기 또는 쓰기 핸들을 해제하지 못한 경우</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.CreateEventSource(System.Diagnostics.EventSourceCreationData)">
      <summary vsli:raw="Establishes a valid event source for writing localized event messages, using the specified configuration properties for the event source and the corresponding event log.">이벤트 소스와 해당 이벤트 로그에 대한 지정된 구성 속성을 사용하여 지역화된 이벤트 메시지를 작성할 올바른 이벤트 소스를 설정합니다.</summary>
      <param name="sourceData" vsli:raw="The configuration properties for the event source and its target event log.">이벤트 원본과 대상 이벤트 로그에 대한 구성 속성입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The computer name specified in &lt;paramref name=&quot;sourceData&quot; /&gt; is not valid.  &#xA;  &#xA;-or-&#xA;  &#xA; The source name specified in &lt;paramref name=&quot;sourceData&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; The log name specified in &lt;paramref name=&quot;sourceData&quot; /&gt; is not valid. Event log names must consist of printable characters and cannot include the characters '*', '?', or '\'.  &#xA;  &#xA;-or-&#xA;  &#xA; The log name specified in &lt;paramref name=&quot;sourceData&quot; /&gt; is not valid for user log creation. The Event log names AppEvent, SysEvent, and SecEvent are reserved for system use.  &#xA;  &#xA;-or-&#xA;  &#xA; The log name matches an existing event source name.  &#xA;  &#xA;-or-&#xA;  &#xA; The source name specified in &lt;paramref name=&quot;sourceData&quot; /&gt; results in a registry key path longer than 254 characters.  &#xA;  &#xA;-or-&#xA;  &#xA; The first 8 characters of the log name specified in &lt;paramref name=&quot;sourceData&quot; /&gt; are not unique.  &#xA;  &#xA;-or-&#xA;  &#xA; The source name specified in &lt;paramref name=&quot;sourceData&quot; /&gt; is already registered.  &#xA;  &#xA;-or-&#xA;  &#xA; The source name specified in &lt;paramref name=&quot;sourceData&quot; /&gt; matches an existing event log name.">
        <paramref name="sourceData" />에 지정한 컴퓨터 이름이 잘못된 경우  
또는 
<paramref name="sourceData" />에 지정된 소스 이름이 <see langword="null" />인 경우  
또는 
<paramref name="sourceData" />에 지정한 로그 이름이 잘못된 경우. 이벤트 로그 이름은 인쇄할 수 있는 문자로 구성되어야 하며 '*', '?' 또는 '\'를 사용할 수 없습니다.  
또는 
<paramref name="sourceData" />에 지정한 로그 이름을 사용자 로그를 만드는 데 사용할 수 없는 경우. 이벤트 로그 이름 AppEvent, SysEvent 및 SecEvent는 시스템용으로 예약되어 있습니다.  
또는 
로그 이름이 기존 이벤트 소스 이름과 일치하는 경우  
또는 
<paramref name="sourceData" />에 지정한 소스 이름 때문에 레지스트리 키 경로가 254자를 넘는 경우  
또는 
<paramref name="sourceData" />에 지정한 로그 이름의 처음 8개 문자가 고유하지 않은 경우  
또는 
<paramref name="sourceData" />에 지정한 소스 이름이 이미 등록된 경우  
또는 
<paramref name="sourceData" />에 지정한 소스 이름이 기존 이벤트 로그 이름과 일치하는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The registry key for the event log could not be opened.">이벤트 로그의 레지스트리 키를 열 수 없는 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;sourceData&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="sourceData" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.CreateEventSource(System.String,System.String)">
      <summary vsli:raw="Establishes the specified source name as a valid event source for writing entries to a log on the local computer. This method can also create a new custom log on the local computer.">로컬 컴퓨터의 로그에 엔트리를 쓰는 유효한 이벤트 소스로 지정된 소스 이름을 설정합니다. 또한 이 방법을 사용하면 로컬 컴퓨터에 새로운 사용자 지정 로그를 만들 수도 있습니다.</summary>
      <param name="source" vsli:raw="The source name by which the application is registered on the local computer.">로컬 컴퓨터에 등록되는 애플리케이션의 원본 이름입니다.</param>
      <param name="logName" vsli:raw="The name of the log the source's entries are written to. Possible values include Application, System, or a custom event log.">소스 엔트리를 쓸 로그의 이름입니다. 가능한 값은 애플리케이션, 시스템 또는 사용자 지정 이벤트 로그를 포함합니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is an empty string (&quot;&quot;) or &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;logName&quot; /&gt; is not a valid event log name. Event log names must consist of printable characters, and cannot include the characters '*', '?', or '\'.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;logName&quot; /&gt; is not valid for user log creation. The event log names AppEvent, SysEvent, and SecEvent are reserved for system use.  &#xA;  &#xA;-or-&#xA;  &#xA; The log name matches an existing event source name.  &#xA;  &#xA;-or-&#xA;  &#xA; The source name results in a registry key path longer than 254 characters.  &#xA;  &#xA;-or-&#xA;  &#xA; The first 8 characters of &lt;paramref name=&quot;logName&quot; /&gt; match the first 8 characters of an existing event log name.  &#xA;  &#xA;-or-&#xA;  &#xA; The source cannot be registered because it already exists on the local computer.  &#xA;  &#xA;-or-&#xA;  &#xA; The source name matches an existing event log name.">
        <paramref name="source" />가 빈 문자열("")이나 <see langword="null" />인 경우  
또는 
 <paramref name="logName" />이 올바른 이벤트 로그 이름이 아닌 경우. 이벤트 로그 이름은 인쇄할 수 있는 문자로 구성되어야 하며 '*', '?' 또는 '\'를 사용할 수 없습니다.  
또는 
 <paramref name="logName" />은 사용자 로그 작성에 유효하지 않습니다. 이벤트 로그 이름 AppEvent, SysEvent 및 SecEvent는 시스템용으로 예약되어 있습니다.  
또는 
로그 이름이 기존 이벤트 소스 이름과 일치하는 경우  
또는 
소스 이름 때문에 레지스트리 키 경로가 254자를 넘는 경우  
또는 
<paramref name="logName" />의 처음 8개 문자가 기존 이벤트 로그 이름의 처음 8개 문자와 일치하는 경우  
또는 
소스가 이미 로컬 컴퓨터에 있기 때문에 해당 소스를 등록할 수 없는 경우  
또는 
소스 이름이 기존 이벤트 로그 이름과 일치하는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The registry key for the event log could not be opened on the local computer.">이벤트 로그의 레지스트리 키를 로컬 컴퓨터에서 열 수 없는 경우</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.CreateEventSource(System.String,System.String,System.String)">
      <summary vsli:raw="Establishes the specified source name as a valid event source for writing entries to a log on the specified computer. This method can also be used to create a new custom log on the specified computer.">지정된 컴퓨터의 로그에 엔트리를 쓰는 유효한 이벤트 소스로 지정된 소스 이름을 설정합니다. 또한 이 방법을 사용하면 지정한 컴퓨터에 새로운 사용자 지정 로그를 만들 수도 있습니다.</summary>
      <param name="source" vsli:raw="The source by which the application is registered on the specified computer.">지정한 컴퓨터에 등록되는 애플리케이션의 원본입니다.</param>
      <param name="logName" vsli:raw="The name of the log the source's entries are written to. Possible values include Application, System, or a custom event log. If you do not specify a value, &lt;paramref name=&quot;logName&quot; /&gt; defaults to Application.">소스 엔트리를 쓸 로그의 이름입니다. 가능한 값은 애플리케이션, 시스템 또는 사용자 지정 이벤트 로그를 포함합니다. 값을 지정하지 않은 경우 기본적으로 <paramref name="logName" />은 애플리케이션이 됩니다.</param>
      <param name="machineName" vsli:raw="The name of the computer to register this event source with, or &quot;.&quot; for the local computer.">이 이벤트 원본을 등록할 컴퓨터의 이름입니다. 로컬 컴퓨터의 경우에는 "."입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;machineName&quot; /&gt; is not a valid computer name.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;source&quot; /&gt; is an empty string (&quot;&quot;) or &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;logName&quot; /&gt; is not a valid event log name. Event log names must consist of printable characters, and cannot include the characters '*', '?', or '\'.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;logName&quot; /&gt; is not valid for user log creation. The event log names AppEvent, SysEvent, and SecEvent are reserved for system use.  &#xA;  &#xA;-or-&#xA;  &#xA; The log name matches an existing event source name.  &#xA;  &#xA;-or-&#xA;  &#xA; The source name results in a registry key path longer than 254 characters.  &#xA;  &#xA;-or-&#xA;  &#xA; The first 8 characters of &lt;paramref name=&quot;logName&quot; /&gt; match the first 8 characters of an existing event log name on the specified computer.  &#xA;  &#xA;-or-&#xA;  &#xA; The source cannot be registered because it already exists on the specified computer.  &#xA;  &#xA;-or-&#xA;  &#xA; The source name matches an existing event source name.">
        <paramref name="machineName" />이 올바른 컴퓨터 이름이 아닌 경우  
또는 
 <paramref name="source" />가 빈 문자열("")이나 <see langword="null" />인 경우  
또는 
 <paramref name="logName" />이 올바른 이벤트 로그 이름이 아닌 경우. 이벤트 로그 이름은 인쇄할 수 있는 문자로 구성되어야 하며 '*', '?' 또는 '\'를 사용할 수 없습니다.  
또는 
 <paramref name="logName" />은 사용자 로그 작성에 유효하지 않습니다. 이벤트 로그 이름 AppEvent, SysEvent 및 SecEvent는 시스템용으로 예약되어 있습니다.  
또는 
로그 이름이 기존 이벤트 소스 이름과 일치하는 경우  
또는 
소스 이름 때문에 레지스트리 키 경로가 254자를 넘는 경우  
또는 
<paramref name="logName" />의 처음 8개 문자가 지정된 컴퓨터에 있는 기존 이벤트 로그 이름의 처음 8개 문자와 일치하는 경우  
또는 
소스가 이미 지정한 컴퓨터에 있기 때문에 해당 소스를 등록할 수 없는 경우  
또는 
소스 이름이 기존 이벤트 소스 이름과 일치하는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The registry key for the event log could not be opened on the specified computer.">이벤트 로그의 레지스트리 키를 지정한 컴퓨터에서 열 수 없는 경우</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.Delete(System.String)">
      <summary vsli:raw="Removes an event log from the local computer.">로컬 컴퓨터에서 이벤트 로그를 제거합니다.</summary>
      <param name="logName" vsli:raw="The name of the log to delete. Possible values include: Application, Security, System, and any custom event logs on the computer.">삭제할 로그의 이름입니다. 가능한 값은 다음과 같습니다. 애플리케이션, 보안, 시스템 및 컴퓨터의 모든 사용자 지정 이벤트 로그를 사용할 수 있습니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;logName&quot; /&gt; is an empty string (&quot;&quot;) or &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="logName" />가 빈 문자열("")이나 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The registry key for the event log could not be opened on the local computer.  &#xA;  &#xA;-or-&#xA;  &#xA; The log does not exist on the local computer.">이벤트 로그의 레지스트리 키를 로컬 컴퓨터에서 열 수 없는 경우  
또는
 로컬 컴퓨터에 로그가 없는 경우</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The event log was not cleared successfully.  &#xA;  &#xA; -or-  &#xA;  &#xA; The log cannot be opened. A Windows error code is not available.">이벤트 로그가 지워지지 않은 경우  
 또는  
 로그를 열 수 없는 경우. Windows 오류 코드를 사용할 수 없습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.Delete(System.String,System.String)">
      <summary vsli:raw="Removes an event log from the specified computer.">지정한 컴퓨터에서 이벤트 로그를 제거합니다.</summary>
      <param name="logName" vsli:raw="The name of the log to delete. Possible values include: Application, Security, System, and any custom event logs on the specified computer.">삭제할 로그의 이름입니다. 가능한 값은 다음과 같습니다. 애플리케이션, 보안, 시스템 및 지정된 컴퓨터의 모든 사용자 지정 이벤트 로그를 사용할 수 있습니다.</param>
      <param name="machineName" vsli:raw="The name of the computer to delete the log from, or &quot;.&quot; for the local computer.">로그를 삭제할 컴퓨터의 이름입니다. 로컬 컴퓨터의 경우에는 "."입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;logName&quot; /&gt; is an empty string (&quot;&quot;) or &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;machineName&quot; /&gt; is not a valid computer name.">
        <paramref name="logName" />가 빈 문자열("")이나 <see langword="null" />인 경우  
또는 
 <paramref name="machineName" />이 올바른 컴퓨터 이름이 아닌 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The registry key for the event log could not be opened on the specified computer.  &#xA;  &#xA;-or-&#xA;  &#xA; The log does not exist on the specified computer.">이벤트 로그의 레지스트리 키를 지정한 컴퓨터에서 열 수 없는 경우  
또는
 지정된 컴퓨터에 로그가 없는 경우</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The event log was not cleared successfully.  &#xA;  &#xA; -or-  &#xA;  &#xA; The log cannot be opened. A Windows error code is not available.">이벤트 로그가 지워지지 않은 경우  
 또는  
 로그를 열 수 없는 경우. Windows 오류 코드를 사용할 수 없습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)">
      <summary vsli:raw="Removes the event source registration from the event log of the local computer.">로컬 컴퓨터의 이벤트 로그에서 이벤트 소스 등록을 제거합니다.</summary>
      <param name="source" vsli:raw="The name by which the application is registered in the event log system.">이벤트 로그 시스템에 등록된 애플리케이션 이름입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; parameter does not exist in the registry of the local computer.  &#xA;  &#xA;-or-&#xA;  &#xA; You do not have write access on the registry key for the event log.">
        <paramref name="source" /> 매개 변수가 로컬 컴퓨터의 레지스트리에 없는 경우  
또는 
이벤트 로그의 레지스트리 키에 대한 쓰기 권한이 없는 경우</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.DeleteEventSource(System.String,System.String)">
      <summary vsli:raw="Removes the application's event source registration from the specified computer.">지정한 컴퓨터에서 애플리케이션의 이벤트 소스 등록을 제거합니다.</summary>
      <param name="source" vsli:raw="The name by which the application is registered in the event log system.">이벤트 로그 시스템에 등록된 애플리케이션 이름입니다.</param>
      <param name="machineName" vsli:raw="The name of the computer to remove the registration from, or &quot;.&quot; for the local computer.">등록을 제거할 컴퓨터의 이름입니다. 로컬 컴퓨터의 경우에는 "."입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;machineName&quot; /&gt; parameter is invalid.  &#xA;  &#xA;-or-&#xA;  &#xA; The &lt;paramref name=&quot;source&quot; /&gt; parameter does not exist in the registry of the specified computer.  &#xA;  &#xA;-or-&#xA;  &#xA; You do not have write access on the registry key for the event log.">
        <paramref name="machineName" /> 매개 변수가 잘못되었습니다.  
또는 
<paramref name="source" /> 매개 변수가 지정한 컴퓨터의 레지스트리에 없는 경우  
또는 
이벤트 로그의 레지스트리 키에 대한 쓰기 권한이 없는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; cannot be deleted because in the registry, the parent registry key for &lt;paramref name=&quot;source&quot; /&gt; does not contain a subkey with the same name.">레지스트리에서 <paramref name="source" />에 대한 부모 레지스트리 키에 같은 이름의 하위 키가 없기 때문에 <paramref name="source" />를 삭제할 수 없는 경우</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Diagnostics.EventLog&quot; /&gt;, and optionally releases the managed resources.">
        <see cref="T:System.Diagnostics.EventLog" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="P:System.Diagnostics.EventLog.EnableRaisingEvents">
      <summary vsli:raw="Gets or sets a value indicating whether the &lt;see cref=&quot;T:System.Diagnostics.EventLog&quot; /&gt; receives &lt;see cref=&quot;E:System.Diagnostics.EventLog.EntryWritten&quot; /&gt; event notifications.">
        <see cref="T:System.Diagnostics.EventLog" />가 <see cref="E:System.Diagnostics.EventLog.EntryWritten" /> 이벤트 알림을 받는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Diagnostics.EventLog&quot; /&gt; receives notification when an entry is written to the log; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">로그에 항목을 쓸 때 <see cref="T:System.Diagnostics.EventLog" />에서 알림을 받으면 <see langword="true" />이고, 받지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The event log is on a remote computer.">이벤트 로그가 원격 컴퓨터에 있는 경우</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.EndInit">
      <summary vsli:raw="Ends the initialization of an &lt;see cref=&quot;T:System.Diagnostics.EventLog&quot; /&gt; used on a form or by another component. The initialization occurs at runtime.">양식에서 사용하거나 다른 구성 요소에서 사용하는 <see cref="T:System.Diagnostics.EventLog" />의 초기화를 끝냅니다. 초기화는 런타임에 발생합니다.</summary>
    </member>
    <member name="P:System.Diagnostics.EventLog.Entries">
      <summary vsli:raw="Gets the contents of the event log.">이벤트 로그의 내용을 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Diagnostics.EventLogEntryCollection&quot; /&gt; holding the entries in the event log. Each entry is associated with an instance of the &lt;see cref=&quot;T:System.Diagnostics.EventLogEntry&quot; /&gt; class.">이벤트 로그에서 항목을 유지하는 <see cref="T:System.Diagnostics.EventLogEntryCollection" />입니다. 각 항목은 <see cref="T:System.Diagnostics.EventLogEntry" /> 클래스의 인스턴스에 연결됩니다.</returns>
    </member>
    <member name="E:System.Diagnostics.EventLog.EntryWritten">
      <summary vsli:raw="Occurs when an entry is written to an event log on the local computer.">로컬 컴퓨터에 있는 이벤트 로그에 엔트리를 쓸 때 발생합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.EventLog.Exists(System.String)">
      <summary vsli:raw="Determines whether the log exists on the local computer.">로컬 컴퓨터에 로그가 있는지를 확인합니다.</summary>
      <param name="logName" vsli:raw="The name of the log to search for. Possible values include: Application, Security, System, other application-specific logs (such as those associated with Active Directory), or any custom log on the computer.">검색할 로그의 이름입니다. 가능한 값은 다음과 같습니다. 애플리케이션, 보안, 시스템, 기타 애플리케이션 관련 로그(예: Active Directory와 연결된 로그) 또는 컴퓨터에 있는 모든 사용자 지정 로그를 사용할 수 있습니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the log exists on the local computer; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">로컬 컴퓨터에 로그가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The logName is &lt;see langword=&quot;null&quot; /&gt; or the value is empty.">logName이 <see langword="null" />이거나 값이 비어 있는 경우</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.Exists(System.String,System.String)">
      <summary vsli:raw="Determines whether the log exists on the specified computer.">지정한 컴퓨터에 로그가 있는지를 확인합니다.</summary>
      <param name="logName" vsli:raw="The log for which to search. Possible values include: Application, Security, System, other application-specific logs (such as those associated with Active Directory), or any custom log on the computer.">검색할 로그입니다. 가능한 값은 다음과 같습니다. 애플리케이션, 보안, 시스템, 기타 애플리케이션 관련 로그(예: Active Directory와 연결된 로그) 또는 컴퓨터에 있는 모든 사용자 지정 로그를 사용할 수 있습니다.</param>
      <param name="machineName" vsli:raw="The name of the computer on which to search for the log, or &quot;.&quot; for the local computer.">로그를 검색할 컴퓨터의 이름입니다. 로컬 컴퓨터의 경우 "."입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the log exists on the specified computer; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정한 컴퓨터에 로그가 있으면 <see langword="true" />이고, 없으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;machineName&quot; /&gt; parameter is an invalid format. Make sure you have used proper syntax for the computer on which you are searching.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;logName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or the value is empty.">잘못된 형식의 <paramref name="machineName" /> 매개 변수인 경우. 검색할 컴퓨터에 적절한 구문을 사용했는지 확인하십시오.  
또는 
<paramref name="logName" />이 <see langword="null" />이거나 값이 비어 있는 경우</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.GetEventLogs">
      <summary vsli:raw="Searches for all event logs on the local computer and creates an array of &lt;see cref=&quot;T:System.Diagnostics.EventLog&quot; /&gt; objects that contain the list.">로컬 컴퓨터에서 모든 이벤트 로그를 검색하여 목록을 포함하는 <see cref="T:System.Diagnostics.EventLog" /> 개체의 배열을 만듭니다.</summary>
      <returns vsli:raw="An array of type &lt;see cref=&quot;T:System.Diagnostics.EventLog&quot; /&gt; that represents the logs on the local computer.">로컬 컴퓨터의 로그를 나타내는 <see cref="T:System.Diagnostics.EventLog" /> 형식의 배열입니다.</returns>
      <exception cref="T:System.SystemException" vsli:raw="You do not have read access to the registry.  &#xA;  &#xA; -or-  &#xA;  &#xA; There is no event log service on the computer.">레지스트리에 대한 읽기 권한이 없는 경우  
 또는  
 컴퓨터에 이벤트 로그 서비스가 없는 경우</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.GetEventLogs(System.String)">
      <summary vsli:raw="Searches for all event logs on the given computer and creates an array of &lt;see cref=&quot;T:System.Diagnostics.EventLog&quot; /&gt; objects that contain the list.">지정한 컴퓨터에서 모든 이벤트 로그를 검색하여 목록을 포함하는 <see cref="T:System.Diagnostics.EventLog" /> 개체의 배열을 만듭니다.</summary>
      <param name="machineName" vsli:raw="The computer on which to search for event logs.">이벤트 로그를 검색할 컴퓨터입니다.</param>
      <returns vsli:raw="An array of type &lt;see cref=&quot;T:System.Diagnostics.EventLog&quot; /&gt; that represents the logs on the given computer.">지정한 컴퓨터의 로그를 나타내는 <see cref="T:System.Diagnostics.EventLog" /> 형식의 배열입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;machineName&quot; /&gt; parameter is an invalid computer name.">
        <paramref name="machineName" /> 매개 변수가 잘못된 컴퓨터 이름인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="You do not have read access to the registry.  &#xA;  &#xA; -or-  &#xA;  &#xA; There is no event log service on the computer.">레지스트리에 대한 읽기 권한이 없는 경우  
 또는  
 컴퓨터에 이벤트 로그 서비스가 없는 경우</exception>
    </member>
    <member name="P:System.Diagnostics.EventLog.Log">
      <summary vsli:raw="Gets or sets the name of the log to read from or write to.">읽거나 쓸 로그의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name of the log. This can be Application, System, Security, or a custom log name. The default is an empty string (&quot;&quot;).">로그의 이름입니다. 이 이름에는 애플리케이션, 시스템, 보안 또는 사용자 지정 로그 이름을 사용할 수 있습니다. 기본값은 빈 문자열("")입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLog.LogDisplayName">
      <summary vsli:raw="Gets the event log's friendly name.">이벤트 로그 이름을 가져옵니다.</summary>
      <returns vsli:raw="A name that represents the event log in the system's event viewer.">시스템의 이벤트 뷰어에서 이벤트 로그를 나타내는 이름입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The specified &lt;see cref=&quot;P:System.Diagnostics.EventLog.Log&quot; /&gt; does not exist in the registry for this computer.">지정한 <see cref="P:System.Diagnostics.EventLog.Log" />가 이 컴퓨터의 레지스트리에 없는 경우</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.LogNameFromSourceName(System.String,System.String)">
      <summary vsli:raw="Gets the name of the log to which the specified source is registered.">지정한 소스가 등록된 로그의 이름을 가져옵니다.</summary>
      <param name="source" vsli:raw="The name of the event source.">이벤트 원본의 이름입니다.</param>
      <param name="machineName" vsli:raw="The name of the computer on which to look, or &quot;.&quot; for the local computer.">검색할 컴퓨터의 이름입니다. 로컬 컴퓨터의 경우 "."입니다.</param>
      <returns vsli:raw="The name of the log associated with the specified source in the registry.">레지스트리에서 지정한 소스와 연결된 로그의 이름입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLog.MachineName">
      <summary vsli:raw="Gets or sets the name of the computer on which to read or write events.">이벤트를 읽거나 쓸 컴퓨터 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name of the server on which the event log resides. The default is the local computer (&quot;.&quot;).">이벤트 로그가 있는 서버의 이름입니다. 기본값은 로컬 컴퓨터(".")입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The computer name is invalid.">컴퓨터 이름이 잘못된 경우</exception>
    </member>
    <member name="P:System.Diagnostics.EventLog.MaximumKilobytes">
      <summary vsli:raw="Gets or sets the maximum event log size in kilobytes.">최대 이벤트 로그 크기(KB)를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The maximum event log size in kilobytes. The default is 512, indicating a maximum file size of 512 kilobytes.">최대 이벤트 로그 크기(KB)입니다. 기본값은 512로, 최대 파일 크기가 512KB임을 나타냅니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The specified value is less than 64, or greater than 4194240, or not an even multiple of 64.">지정된 값이 64보다 작거나 4194240보다 크거나 64의 짝수 배수가 아닌 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.EventLog.Log&quot; /&gt; value is not a valid log name.  &#xA;  &#xA;-or-&#xA;  &#xA; The registry key for the event log could not be opened on the target computer.">
        <see cref="P:System.Diagnostics.EventLog.Log" /> 값이 올바른 로그 이름이 아닌 경우  
또는 
이벤트 로그의 레지스트리 키를 대상 컴퓨터에서 열 수 없는 경우</exception>
    </member>
    <member name="P:System.Diagnostics.EventLog.MinimumRetentionDays">
      <summary vsli:raw="Gets the number of days to retain entries in the event log.">이벤트 로그에 엔트리를 유지할 날짜 수를 가져옵니다.</summary>
      <returns vsli:raw="The number of days that entries in the event log are retained. The default value is 7.">이벤트 로그의 엔트리가 유지되는 날짜 수입니다. 기본값은 7입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.EventLog.ModifyOverflowPolicy(System.Diagnostics.OverflowAction,System.Int32)">
      <summary vsli:raw="Changes the configured behavior for writing new entries when the event log reaches its maximum file size.">이벤트 로그가 최대 파일 크기에 도달할 때 새 엔트리를 쓰기 위한 구성된 동작을 변경합니다.</summary>
      <param name="action" vsli:raw="The overflow behavior for writing new entries to the event log.">이벤트 로그에 새 항목을 쓰기 위한 오버플로 동작입니다.</param>
      <param name="retentionDays" vsli:raw="The minimum number of days each event log entry is retained. This parameter is used only if &lt;paramref name=&quot;action&quot; /&gt; is set to &lt;see cref=&quot;F:System.Diagnostics.OverflowAction.OverwriteOlder&quot; /&gt;.">각 이벤트 로그 엔트리가 유지되는 최소 날짜 수입니다. 이 매개 변수는 <paramref name="action" />이 <see cref="F:System.Diagnostics.OverflowAction.OverwriteOlder" />로 설정되어 있는 경우에만 사용됩니다.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;action&quot; /&gt; is not a valid &lt;see cref=&quot;P:System.Diagnostics.EventLog.OverflowAction&quot; /&gt; value.">
        <paramref name="action" />는 유효한 <see cref="P:System.Diagnostics.EventLog.OverflowAction" /> 값이 아닙니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;retentionDays&quot; /&gt; is less than one, or larger than 365.">
        <paramref name="retentionDays" />가 0보다 작거나 365보다 큰 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.EventLog.Log&quot; /&gt; value is not a valid log name.  &#xA;  &#xA;-or-&#xA;  &#xA; The registry key for the event log could not be opened on the target computer.">
        <see cref="P:System.Diagnostics.EventLog.Log" /> 값이 올바른 로그 이름이 아닌 경우  
또는 
이벤트 로그의 레지스트리 키를 대상 컴퓨터에서 열 수 없는 경우</exception>
    </member>
    <member name="P:System.Diagnostics.EventLog.OverflowAction">
      <summary vsli:raw="Gets the configured behavior for storing new entries when the event log reaches its maximum log file size.">이벤트 로그가 최대 파일 크기에 도달할 때 새 엔트리를 저장하기 위한 구성된 동작을 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.OverflowAction&quot; /&gt; value that specifies the configured behavior for storing new entries when the event log reaches its maximum log size. The default is &lt;see cref=&quot;F:System.Diagnostics.OverflowAction.OverwriteOlder&quot; /&gt;.">이벤트 로그가 최대 로그 크기에 도달할 때 새 항목을 저장하기 위해 구성된 동작을 지정하는 <see cref="T:System.Diagnostics.OverflowAction" /> 값입니다. 기본값은 <see cref="F:System.Diagnostics.OverflowAction.OverwriteOlder" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.EventLog.RegisterDisplayName(System.String,System.Int64)">
      <summary vsli:raw="Specifies the localized name of the event log, which is displayed in the server Event Viewer.">서버 이벤트 뷰어에 표시되는 이벤트 로그의 지역화된 이름을 지정합니다.</summary>
      <param name="resourceFile" vsli:raw="The fully specified path to a localized resource file.">지역화된 리소스 파일의 완전하게 지정된 경로입니다.</param>
      <param name="resourceId" vsli:raw="The resource identifier that indexes a localized string within the resource file.">리소스 파일에 있는 지역화된 문자열을 인덱싱하는 리소스 식별자입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.EventLog.Log&quot; /&gt; value is not a valid log name.  &#xA;  &#xA;-or-&#xA;  &#xA; The registry key for the event log could not be opened on the target computer.">
        <see cref="P:System.Diagnostics.EventLog.Log" /> 값이 올바른 로그 이름이 아닌 경우  
또는 
이벤트 로그의 레지스트리 키를 대상 컴퓨터에서 열 수 없는 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;resourceFile&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="resourceFile" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="P:System.Diagnostics.EventLog.Source">
      <summary vsli:raw="Gets or sets the source name to register and use when writing to the event log.">이벤트 로그에 쓸 때 등록하고 사용할 소스 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name registered with the event log as a source of entries. The default is an empty string (&quot;&quot;).">엔트리 소스로 이벤트 로그에 등록되는 이름입니다. 기본값은 빈 문자열("")입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The source name results in a registry key path longer than 254 characters.">소스 이름 때문에 레지스트리 키 경로가 254자를 넘는 경우</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.SourceExists(System.String)">
      <summary vsli:raw="Determines whether an event source is registered on the local computer.">이벤트 소스가 로컬 컴퓨터에 등록되었는지를 확인합니다.</summary>
      <param name="source" vsli:raw="The name of the event source.">이벤트 원본의 이름입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the event source is registered on the local computer; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">로컬 컴퓨터에 이벤트 소스가 등록되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; was not found, but some or all of the event logs could not be searched.">
        <paramref name="source" />를 찾을 수 없었지만 모든 또는 일부 이벤트 로그를 검색할 수 없는 경우</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.SourceExists(System.String,System.String)">
      <summary vsli:raw="Determines whether an event source is registered on a specified computer.">이벤트 소스가 지정한 컴퓨터에 등록되었는지를 확인합니다.</summary>
      <param name="source" vsli:raw="The name of the event source.">이벤트 원본의 이름입니다.</param>
      <param name="machineName" vsli:raw="The name the computer on which to look, or &quot;.&quot; for the local computer.">검색할 컴퓨터의 이름입니다. 로컬 컴퓨터의 경우에는 "."입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the event source is registered on the given computer; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정한 컴퓨터에 이벤트 원본이 등록되어 있으면 <see langword="true" />이고, 등록되지 않았으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;machineName&quot; /&gt; is an invalid computer name.">
        <paramref name="machineName" />이 잘못된 컴퓨터 이름인 경우</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; was not found, but some or all of the event logs could not be searched.">
        <paramref name="source" />를 찾을 수 없었지만 모든 또는 일부 이벤트 로그를 검색할 수 없는 경우</exception>
    </member>
    <member name="P:System.Diagnostics.EventLog.SynchronizingObject">
      <summary vsli:raw="Gets or sets the object used to marshal the event handler calls issued as a result of an &lt;see cref=&quot;T:System.Diagnostics.EventLog&quot; /&gt; entry written event.">
        <see cref="T:System.Diagnostics.EventLog" /> 항목 쓰기 이벤트의 결과로 발생하는 이벤트 처리기 호출을 마샬링하는 데 사용되는 개체를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ISynchronizeInvoke&quot; /&gt; used to marshal event-handler calls issued as a result of an &lt;see cref=&quot;E:System.Diagnostics.EventLog.EntryWritten&quot; /&gt; event on the event log.">이벤트 로그에서 <see cref="E:System.Diagnostics.EventLog.EntryWritten" /> 이벤트의 결과로 발생하는 이벤트 처리기 호출을 마샬링하는 데 사용되는 <see cref="T:System.ComponentModel.ISynchronizeInvoke" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String)">
      <summary vsli:raw="Writes an information type entry, with the given message text, to the event log.">지정한 메시지 텍스트로 정보 형식 엔트리를 이벤트 로그에 씁니다.</summary>
      <param name="message" vsli:raw="The string to write to the event log.">이벤트 로그에 쓸 문자열입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.EventLog.Source&quot; /&gt; property of the &lt;see cref=&quot;T:System.Diagnostics.EventLog&quot; /&gt; has not been set.  &#xA;  &#xA; -or-  &#xA;  &#xA; The method attempted to register a new event source, but the computer name in &lt;see cref=&quot;P:System.Diagnostics.EventLog.MachineName&quot; /&gt; is not valid.  &#xA;  &#xA;-or-&#xA;  &#xA; The source is already registered for a different event log.  &#xA;  &#xA;-or-&#xA;  &#xA; The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).  &#xA;  &#xA;-or-&#xA;  &#xA; The source name results in a registry key path longer than 254 characters.">
        <see cref="P:System.Diagnostics.EventLog.Source" />의 <see cref="T:System.Diagnostics.EventLog" /> 속성이 설정되지 않은 경우  
또는 
메서드가 새 이벤트 원본을 등록하려고 시도했지만 <see cref="P:System.Diagnostics.EventLog.MachineName" />의 컴퓨터 이름이 유효하지 않습니다.  
또는 
소스가 이미 다른 이벤트 로그에 등록된 경우  
또는 
메시지 문자열이 31,839 바이트보다 깁니다(Windows Vista 이전의 Windows 운영 체제에서 32,766 바이트).  
또는 
소스 이름 때문에 레지스트리 키 경로가 254자를 넘는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The registry key for the event log could not be opened.">이벤트 로그의 레지스트리 키를 열 수 없는 경우</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The operating system reported an error when writing the event entry to the event log. A Windows error code is not available.">이벤트 로그에 이벤트 엔트리를 쓸 때 운영 체제에서 오류를 보고한 경우. Windows 오류 코드를 사용할 수 없습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType)">
      <summary vsli:raw="Writes an error, warning, information, success audit, or failure audit entry with the given message text to the event log.">지정한 메시지 텍스트로 오류, 경고, 정보, 성공 감사 또는 실패 감사 엔트리를 이벤트 로그에 씁니다.</summary>
      <param name="message" vsli:raw="The string to write to the event log.">이벤트 로그에 쓸 문자열입니다.</param>
      <param name="type" vsli:raw="One of the &lt;see cref=&quot;T:System.Diagnostics.EventLogEntryType&quot; /&gt; values.">
        <see cref="T:System.Diagnostics.EventLogEntryType" /> 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.EventLog.Source&quot; /&gt; property of the &lt;see cref=&quot;T:System.Diagnostics.EventLog&quot; /&gt; has not been set.  &#xA;  &#xA; -or-  &#xA;  &#xA; The method attempted to register a new event source, but the computer name in &lt;see cref=&quot;P:System.Diagnostics.EventLog.MachineName&quot; /&gt; is not valid.  &#xA;  &#xA;-or-&#xA;  &#xA; The source is already registered for a different event log.  &#xA;  &#xA;-or-&#xA;  &#xA; The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).  &#xA;  &#xA;-or-&#xA;  &#xA; The source name results in a registry key path longer than 254 characters.">
        <see cref="P:System.Diagnostics.EventLog.Source" />의 <see cref="T:System.Diagnostics.EventLog" /> 속성이 설정되지 않은 경우  
또는 
메서드가 새 이벤트 원본을 등록하려고 시도했지만 <see cref="P:System.Diagnostics.EventLog.MachineName" />의 컴퓨터 이름이 유효하지 않습니다.  
또는 
소스가 이미 다른 이벤트 로그에 등록된 경우  
또는 
메시지 문자열이 31,839 바이트보다 깁니다(Windows Vista 이전의 Windows 운영 체제에서 32,766 바이트).  
또는 
소스 이름 때문에 레지스트리 키 경로가 254자를 넘는 경우</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Diagnostics.EventLogEntryType&quot; /&gt;.">
        <paramref name="type" />은 유효한 <see cref="T:System.Diagnostics.EventLogEntryType" />이 아닙니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The registry key for the event log could not be opened.">이벤트 로그의 레지스트리 키를 열 수 없는 경우</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The operating system reported an error when writing the event entry to the event log. A Windows error code is not available.">이벤트 로그에 이벤트 엔트리를 쓸 때 운영 체제에서 오류를 보고한 경우. Windows 오류 코드를 사용할 수 없습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32)">
      <summary vsli:raw="Writes an entry with the given message text and application-defined event identifier to the event log.">지정한 메시지 텍스트와 애플리케이션 정의 이벤트 식별자로 엔트리를 이벤트 로그에 씁니다.</summary>
      <param name="message" vsli:raw="The string to write to the event log.">이벤트 로그에 쓸 문자열입니다.</param>
      <param name="type" vsli:raw="One of the &lt;see cref=&quot;T:System.Diagnostics.EventLogEntryType&quot; /&gt; values.">
        <see cref="T:System.Diagnostics.EventLogEntryType" /> 값 중 하나입니다.</param>
      <param name="eventID" vsli:raw="The application-specific identifier for the event.">이벤트의 애플리케이션별 식별자입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.EventLog.Source&quot; /&gt; property of the &lt;see cref=&quot;T:System.Diagnostics.EventLog&quot; /&gt; has not been set.  &#xA;  &#xA; -or-  &#xA;  &#xA; The method attempted to register a new event source, but the computer name in &lt;see cref=&quot;P:System.Diagnostics.EventLog.MachineName&quot; /&gt; is not valid.  &#xA;  &#xA;-or-&#xA;  &#xA; The source is already registered for a different event log.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;eventID&quot; /&gt; is less than zero or greater than &lt;see cref=&quot;F:System.UInt16.MaxValue&quot;&gt;UInt16.MaxValue&lt;/see&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).  &#xA;  &#xA;-or-&#xA;  &#xA; The source name results in a registry key path longer than 254 characters.">
        <see cref="P:System.Diagnostics.EventLog.Source" />의 <see cref="T:System.Diagnostics.EventLog" /> 속성이 설정되지 않은 경우  
또는 
메서드가 새 이벤트 원본을 등록하려고 시도했지만 <see cref="P:System.Diagnostics.EventLog.MachineName" />의 컴퓨터 이름이 유효하지 않습니다.  
또는 
소스가 이미 다른 이벤트 로그에 등록된 경우  
또는 
 <paramref name="eventID" />가 0보다 작거나 <see cref="F:System.UInt16.MaxValue" />보다 큽니다.  
또는 
메시지 문자열이 31,839 바이트보다 깁니다(Windows Vista 이전의 Windows 운영 체제에서 32,766 바이트).  
또는 
소스 이름 때문에 레지스트리 키 경로가 254자를 넘는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The registry key for the event log could not be opened.">이벤트 로그의 레지스트리 키를 열 수 없는 경우</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Diagnostics.EventLogEntryType&quot; /&gt;.">
        <paramref name="type" />은 유효한 <see cref="T:System.Diagnostics.EventLogEntryType" />이 아닙니다.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The operating system reported an error when writing the event entry to the event log. A Windows error code is not available.">이벤트 로그에 이벤트 엔트리를 쓸 때 운영 체제에서 오류를 보고한 경우. Windows 오류 코드를 사용할 수 없습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16)">
      <summary vsli:raw="Writes an entry with the given message text, application-defined event identifier, and application-defined category to the event log.">지정한 메시지 텍스트, 애플리케이션 정의 이벤트 식별자 및 애플리케이션 정의 범주로 엔트리를 이벤트 로그에 씁니다.</summary>
      <param name="message" vsli:raw="The string to write to the event log.">이벤트 로그에 쓸 문자열입니다.</param>
      <param name="type" vsli:raw="One of the &lt;see cref=&quot;T:System.Diagnostics.EventLogEntryType&quot; /&gt; values.">
        <see cref="T:System.Diagnostics.EventLogEntryType" /> 값 중 하나입니다.</param>
      <param name="eventID" vsli:raw="The application-specific identifier for the event.">이벤트의 애플리케이션별 식별자입니다.</param>
      <param name="category" vsli:raw="The application-specific subcategory associated with the message.">메시지와 연결된 애플리케이션별 하위 범주입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.EventLog.Source&quot; /&gt; property of the &lt;see cref=&quot;T:System.Diagnostics.EventLog&quot; /&gt; has not been set.  &#xA;  &#xA; -or-  &#xA;  &#xA; The method attempted to register a new event source, but the computer name in &lt;see cref=&quot;P:System.Diagnostics.EventLog.MachineName&quot; /&gt; is not valid.  &#xA;  &#xA;-or-&#xA;  &#xA; The source is already registered for a different event log.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;eventID&quot; /&gt; is less than zero or greater than &lt;see cref=&quot;F:System.UInt16.MaxValue&quot;&gt;UInt16.MaxValue&lt;/see&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).  &#xA;  &#xA;-or-&#xA;  &#xA; The source name results in a registry key path longer than 254 characters.">
        <see cref="P:System.Diagnostics.EventLog.Source" />의 <see cref="T:System.Diagnostics.EventLog" /> 속성이 설정되지 않은 경우  
또는 
메서드가 새 이벤트 원본을 등록하려고 시도했지만 <see cref="P:System.Diagnostics.EventLog.MachineName" />의 컴퓨터 이름이 유효하지 않습니다.  
또는 
소스가 이미 다른 이벤트 로그에 등록된 경우  
또는 
 <paramref name="eventID" />가 0보다 작거나 <see cref="F:System.UInt16.MaxValue" />보다 큽니다.  
또는 
메시지 문자열이 31,839 바이트보다 깁니다(Windows Vista 이전의 Windows 운영 체제에서 32,766 바이트).  
또는 
소스 이름 때문에 레지스트리 키 경로가 254자를 넘는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The registry key for the event log could not be opened.">이벤트 로그의 레지스트리 키를 열 수 없는 경우</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Diagnostics.EventLogEntryType&quot; /&gt;.">
        <paramref name="type" />은 유효한 <see cref="T:System.Diagnostics.EventLogEntryType" />이 아닙니다.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The operating system reported an error when writing the event entry to the event log. A Windows error code is not available.">이벤트 로그에 이벤트 엔트리를 쓸 때 운영 체제에서 오류를 보고한 경우. Windows 오류 코드를 사용할 수 없습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16,System.Byte[])">
      <summary vsli:raw="Writes an entry with the given message text, application-defined event identifier, and application-defined category to the event log, and appends binary data to the message.">지정한 메시지 텍스트, 애플리케이션 정의 이벤트 식별자, 애플리케이션 정의 범주로 엔트리를 이벤트 로그에 쓰고 메시지에 이진 데이터를 추가합니다.</summary>
      <param name="message" vsli:raw="The string to write to the event log.">이벤트 로그에 쓸 문자열입니다.</param>
      <param name="type" vsli:raw="One of the &lt;see cref=&quot;T:System.Diagnostics.EventLogEntryType&quot; /&gt; values.">
        <see cref="T:System.Diagnostics.EventLogEntryType" /> 값 중 하나입니다.</param>
      <param name="eventID" vsli:raw="The application-specific identifier for the event.">이벤트의 애플리케이션별 식별자입니다.</param>
      <param name="category" vsli:raw="The application-specific subcategory associated with the message.">메시지와 연결된 애플리케이션별 하위 범주입니다.</param>
      <param name="rawData" vsli:raw="An array of bytes that holds the binary data associated with the entry.">항목과 연관된 이진 데이터를 보유하는 바이트의 배열입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.EventLog.Source&quot; /&gt; property of the &lt;see cref=&quot;T:System.Diagnostics.EventLog&quot; /&gt; has not been set.  &#xA;  &#xA; -or-  &#xA;  &#xA; The method attempted to register a new event source, but the computer name in &lt;see cref=&quot;P:System.Diagnostics.EventLog.MachineName&quot; /&gt; is not valid.  &#xA;  &#xA;-or-&#xA;  &#xA; The source is already registered for a different event log.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;eventID&quot; /&gt; is less than zero or greater than &lt;see cref=&quot;F:System.UInt16.MaxValue&quot;&gt;UInt16.MaxValue&lt;/see&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).  &#xA;  &#xA;-or-&#xA;  &#xA; The source name results in a registry key path longer than 254 characters.">
        <see cref="P:System.Diagnostics.EventLog.Source" />의 <see cref="T:System.Diagnostics.EventLog" /> 속성이 설정되지 않은 경우  
또는 
메서드가 새 이벤트 원본을 등록하려고 시도했지만 <see cref="P:System.Diagnostics.EventLog.MachineName" />의 컴퓨터 이름이 유효하지 않습니다.  
또는 
소스가 이미 다른 이벤트 로그에 등록된 경우  
또는 
 <paramref name="eventID" />가 0보다 작거나 <see cref="F:System.UInt16.MaxValue" />보다 큽니다.  
또는 
메시지 문자열이 31,839 바이트보다 깁니다(Windows Vista 이전의 Windows 운영 체제에서 32,766 바이트).  
또는 
소스 이름 때문에 레지스트리 키 경로가 254자를 넘는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The registry key for the event log could not be opened.">이벤트 로그의 레지스트리 키를 열 수 없는 경우</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Diagnostics.EventLogEntryType&quot; /&gt;.">
        <paramref name="type" />은 유효한 <see cref="T:System.Diagnostics.EventLogEntryType" />이 아닙니다.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The operating system reported an error when writing the event entry to the event log. A Windows error code is not available.">이벤트 로그에 이벤트 엔트리를 쓸 때 운영 체제에서 오류를 보고한 경우. Windows 오류 코드를 사용할 수 없습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String)">
      <summary vsli:raw="Writes an information type entry with the given message text to the event log, using the specified registered event source.">특정 등록 이벤트 소스를 사용하여 정보 형식 엔트리를 지정된 메시지 텍스트로 이벤트 로그에 씁니다.</summary>
      <param name="source" vsli:raw="The source by which the application is registered on the specified computer.">지정한 컴퓨터에 등록되는 애플리케이션의 원본입니다.</param>
      <param name="message" vsli:raw="The string to write to the event log.">이벤트 로그에 쓸 문자열입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; value is an empty string (&quot;&quot;).  &#xA;  &#xA;-or-&#xA;  &#xA; The &lt;paramref name=&quot;source&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).  &#xA;  &#xA;-or-&#xA;  &#xA; The source name results in a registry key path longer than 254 characters.">
        <paramref name="source" /> 값이 빈 문자열("")인 경우  
또는 
<paramref name="source" /> 값이 <see langword="null" />입니다.  
또는 
메시지 문자열이 31,839 바이트보다 깁니다(Windows Vista 이전의 Windows 운영 체제에서 32,766 바이트).  
또는 
소스 이름 때문에 레지스트리 키 경로가 254자를 넘는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The registry key for the event log could not be opened.">이벤트 로그의 레지스트리 키를 열 수 없는 경우</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The operating system reported an error when writing the event entry to the event log. A Windows error code is not available.">이벤트 로그에 이벤트 엔트리를 쓸 때 운영 체제에서 오류를 보고한 경우. Windows 오류 코드를 사용할 수 없습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType)">
      <summary vsli:raw="Writes an error, warning, information, success audit, or failure audit entry with the given message text to the event log, using the specified registered event source.">특정 등록 이벤트 소스를 사용하여 지정된 메시지 텍스트로 오류, 경고, 정보, 성공 감사 또는 실패 감사 엔트리를 이벤트 로그에 씁니다.</summary>
      <param name="source" vsli:raw="The source by which the application is registered on the specified computer.">지정한 컴퓨터에 등록되는 애플리케이션의 원본입니다.</param>
      <param name="message" vsli:raw="The string to write to the event log.">이벤트 로그에 쓸 문자열입니다.</param>
      <param name="type" vsli:raw="One of the &lt;see cref=&quot;T:System.Diagnostics.EventLogEntryType&quot; /&gt; values.">
        <see cref="T:System.Diagnostics.EventLogEntryType" /> 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; value is an empty string (&quot;&quot;).  &#xA;  &#xA;-or-&#xA;  &#xA; The &lt;paramref name=&quot;source&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).  &#xA;  &#xA;-or-&#xA;  &#xA; The source name results in a registry key path longer than 254 characters.">
        <paramref name="source" /> 값이 빈 문자열("")인 경우  
또는 
<paramref name="source" /> 값이 <see langword="null" />입니다.  
또는 
메시지 문자열이 31,839 바이트보다 깁니다(Windows Vista 이전의 Windows 운영 체제에서 32,766 바이트).  
또는 
소스 이름 때문에 레지스트리 키 경로가 254자를 넘는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The registry key for the event log could not be opened.">이벤트 로그의 레지스트리 키를 열 수 없는 경우</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Diagnostics.EventLogEntryType&quot; /&gt;.">
        <paramref name="type" />은 유효한 <see cref="T:System.Diagnostics.EventLogEntryType" />이 아닙니다.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The operating system reported an error when writing the event entry to the event log. A Windows error code is not available.">이벤트 로그에 이벤트 엔트리를 쓸 때 운영 체제에서 오류를 보고한 경우. Windows 오류 코드를 사용할 수 없습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType,System.Int32)">
      <summary vsli:raw="Writes an entry with the given message text and application-defined event identifier to the event log, using the specified registered event source.">특정 등록 이벤트 소스를 사용하여 엔트리를 지정된 메시지 텍스트와 애플리케이션 정의 이벤트 식별자로 이벤트 로그에 씁니다.</summary>
      <param name="source" vsli:raw="The source by which the application is registered on the specified computer.">지정한 컴퓨터에 등록되는 애플리케이션의 원본입니다.</param>
      <param name="message" vsli:raw="The string to write to the event log.">이벤트 로그에 쓸 문자열입니다.</param>
      <param name="type" vsli:raw="One of the &lt;see cref=&quot;T:System.Diagnostics.EventLogEntryType&quot; /&gt; values.">
        <see cref="T:System.Diagnostics.EventLogEntryType" /> 값 중 하나입니다.</param>
      <param name="eventID" vsli:raw="The application-specific identifier for the event.">이벤트의 애플리케이션별 식별자입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; value is an empty string (&quot;&quot;).  &#xA;  &#xA;-or-&#xA;  &#xA; The &lt;paramref name=&quot;source&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;eventID&quot; /&gt; is less than zero or greater than &lt;see cref=&quot;F:System.UInt16.MaxValue&quot;&gt;UInt16.MaxValue&lt;/see&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).  &#xA;  &#xA;-or-&#xA;  &#xA; The source name results in a registry key path longer than 254 characters.">
        <paramref name="source" /> 값이 빈 문자열("")인 경우  
또는 
<paramref name="source" /> 값이 <see langword="null" />입니다.  
또는 
 <paramref name="eventID" />가 0보다 작거나 <see cref="F:System.UInt16.MaxValue" />보다 큽니다.  
또는 
메시지 문자열이 31,839 바이트보다 깁니다(Windows Vista 이전의 Windows 운영 체제에서 32,766 바이트).  
또는 
소스 이름 때문에 레지스트리 키 경로가 254자를 넘는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The registry key for the event log could not be opened.">이벤트 로그의 레지스트리 키를 열 수 없는 경우</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Diagnostics.EventLogEntryType&quot; /&gt;.">
        <paramref name="type" />은 유효한 <see cref="T:System.Diagnostics.EventLogEntryType" />이 아닙니다.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The operating system reported an error when writing the event entry to the event log. A Windows error code is not available.">이벤트 로그에 이벤트 엔트리를 쓸 때 운영 체제에서 오류를 보고한 경우. Windows 오류 코드를 사용할 수 없습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16)">
      <summary vsli:raw="Writes an entry with the given message text, application-defined event identifier, and application-defined category to the event log, using the specified registered event source. The &lt;paramref name=&quot;category&quot; /&gt; can be used by the Event Viewer to filter events in the log.">특정 등록 이벤트 소스를 사용하여 엔트리를 지정된 메시지 텍스트, 애플리케이션 정의 이벤트 식별자, 애플리케이션 정의 범주로 이벤트 로그에 씁니다. 이벤트 뷰어에서 <paramref name="category" />를 사용하여 로그의 이벤트를 필터링할 수 있습니다.</summary>
      <param name="source" vsli:raw="The source by which the application is registered on the specified computer.">지정한 컴퓨터에 등록되는 애플리케이션의 원본입니다.</param>
      <param name="message" vsli:raw="The string to write to the event log.">이벤트 로그에 쓸 문자열입니다.</param>
      <param name="type" vsli:raw="One of the &lt;see cref=&quot;T:System.Diagnostics.EventLogEntryType&quot; /&gt; values.">
        <see cref="T:System.Diagnostics.EventLogEntryType" /> 값 중 하나입니다.</param>
      <param name="eventID" vsli:raw="The application-specific identifier for the event.">이벤트의 애플리케이션별 식별자입니다.</param>
      <param name="category" vsli:raw="The application-specific subcategory associated with the message.">메시지와 연결된 애플리케이션별 하위 범주입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; value is an empty string (&quot;&quot;).  &#xA;  &#xA;-or-&#xA;  &#xA; The &lt;paramref name=&quot;source&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;eventID&quot; /&gt; is less than zero or greater than &lt;see cref=&quot;F:System.UInt16.MaxValue&quot;&gt;UInt16.MaxValue&lt;/see&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).  &#xA;  &#xA;-or-&#xA;  &#xA; The source name results in a registry key path longer than 254 characters.">
        <paramref name="source" /> 값이 빈 문자열("")인 경우  
또는 
<paramref name="source" /> 값이 <see langword="null" />입니다.  
또는 
 <paramref name="eventID" />가 0보다 작거나 <see cref="F:System.UInt16.MaxValue" />보다 큽니다.  
또는 
메시지 문자열이 31,839 바이트보다 깁니다(Windows Vista 이전의 Windows 운영 체제에서 32,766 바이트).  
또는 
소스 이름 때문에 레지스트리 키 경로가 254자를 넘는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The registry key for the event log could not be opened.">이벤트 로그의 레지스트리 키를 열 수 없는 경우</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Diagnostics.EventLogEntryType&quot; /&gt;.">
        <paramref name="type" />은 유효한 <see cref="T:System.Diagnostics.EventLogEntryType" />이 아닙니다.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The operating system reported an error when writing the event entry to the event log. A Windows error code is not available.">이벤트 로그에 이벤트 엔트리를 쓸 때 운영 체제에서 오류를 보고한 경우. Windows 오류 코드를 사용할 수 없습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16,System.Byte[])">
      <summary vsli:raw="Writes an entry with the given message text, application-defined event identifier, and application-defined category to the event log (using the specified registered event source) and appends binary data to the message.">특정 등록 이벤트 소스를 사용하여 엔트리를 지정된 메시지 텍스트, 애플리케이션 정의 이벤트 식별자, 애플리케이션 정의 범주로 이벤트 로그에 쓰고 메시지에 이진 데이터를 추가합니다.</summary>
      <param name="source" vsli:raw="The source by which the application is registered on the specified computer.">지정한 컴퓨터에 등록되는 애플리케이션의 원본입니다.</param>
      <param name="message" vsli:raw="The string to write to the event log.">이벤트 로그에 쓸 문자열입니다.</param>
      <param name="type" vsli:raw="One of the &lt;see cref=&quot;T:System.Diagnostics.EventLogEntryType&quot; /&gt; values.">
        <see cref="T:System.Diagnostics.EventLogEntryType" /> 값 중 하나입니다.</param>
      <param name="eventID" vsli:raw="The application-specific identifier for the event.">이벤트의 애플리케이션별 식별자입니다.</param>
      <param name="category" vsli:raw="The application-specific subcategory associated with the message.">메시지와 연결된 애플리케이션별 하위 범주입니다.</param>
      <param name="rawData" vsli:raw="An array of bytes that holds the binary data associated with the entry.">항목과 연관된 이진 데이터를 보유하는 바이트의 배열입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; value is an empty string (&quot;&quot;).  &#xA;  &#xA;-or-&#xA;  &#xA; The &lt;paramref name=&quot;source&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;eventID&quot; /&gt; is less than zero or greater than &lt;see cref=&quot;F:System.UInt16.MaxValue&quot;&gt;UInt16.MaxValue&lt;/see&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).  &#xA;  &#xA;-or-&#xA;  &#xA; The source name results in a registry key path longer than 254 characters.">
        <paramref name="source" /> 값이 빈 문자열("")인 경우  
또는 
<paramref name="source" /> 값이 <see langword="null" />입니다.  
또는 
 <paramref name="eventID" />가 0보다 작거나 <see cref="F:System.UInt16.MaxValue" />보다 큽니다.  
또는 
메시지 문자열이 31,839 바이트보다 깁니다(Windows Vista 이전의 Windows 운영 체제에서 32,766 바이트).  
또는 
소스 이름 때문에 레지스트리 키 경로가 254자를 넘는 경우</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Diagnostics.EventLogEntryType&quot; /&gt;.">
        <paramref name="type" />은 유효한 <see cref="T:System.Diagnostics.EventLogEntryType" />이 아닙니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The registry key for the event log could not be opened.">이벤트 로그의 레지스트리 키를 열 수 없는 경우</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The operating system reported an error when writing the event entry to the event log. A Windows error code is not available.">이벤트 로그에 이벤트 엔트리를 쓸 때 운영 체제에서 오류를 보고한 경우. Windows 오류 코드를 사용할 수 없습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEvent(System.Diagnostics.EventInstance,System.Byte[],System.Object[])">
      <summary vsli:raw="Writes an event log entry with the given event data, message replacement strings, and associated binary data.">지정된 이벤트 데이터, 메시지 대체 문자열 및 관련 이진 데이터가 포함된 이벤트 로그 엔트리를 씁니다.</summary>
      <param name="instance" vsli:raw="An &lt;see cref=&quot;T:System.Diagnostics.EventInstance&quot; /&gt; instance that represents a localized event log entry.">지역화된 이벤트 로그 항목을 나타내는 <see cref="T:System.Diagnostics.EventInstance" /> 인스턴스입니다.</param>
      <param name="data" vsli:raw="An array of bytes that holds the binary data associated with the entry.">항목과 연관된 이진 데이터를 보유하는 바이트의 배열입니다.</param>
      <param name="values" vsli:raw="An array of strings to merge into the message text of the event log entry.">이벤트 로그 항목의 메시지 텍스트로 병합될 문자열의 배열입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.EventLog.Source&quot; /&gt; property of the &lt;see cref=&quot;T:System.Diagnostics.EventLog&quot; /&gt; has not been set.  &#xA;  &#xA; -or-  &#xA;  &#xA; The method attempted to register a new event source, but the computer name in &lt;see cref=&quot;P:System.Diagnostics.EventLog.MachineName&quot; /&gt; is not valid.  &#xA;  &#xA;-or-&#xA;  &#xA; The source is already registered for a different event log.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;instance.InstanceId&quot; /&gt; is less than zero or greater than &lt;see cref=&quot;F:System.UInt16.MaxValue&quot;&gt;UInt16.MaxValue&lt;/see&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;values&quot; /&gt; has more than 256 elements.  &#xA;  &#xA;-or-&#xA;  &#xA; One of the &lt;paramref name=&quot;values&quot; /&gt; elements is longer than 32766 bytes.  &#xA;  &#xA;-or-&#xA;  &#xA; The source name results in a registry key path longer than 254 characters.">
        <see cref="P:System.Diagnostics.EventLog.Source" />의 <see cref="T:System.Diagnostics.EventLog" /> 속성이 설정되지 않은 경우  
또는 
메서드가 새 이벤트 원본을 등록하려고 시도했지만 <see cref="P:System.Diagnostics.EventLog.MachineName" />의 컴퓨터 이름이 유효하지 않습니다.  
또는 
소스가 이미 다른 이벤트 로그에 등록된 경우  
또는 
 <paramref name="instance.InstanceId" />가 0보다 작거나 <see cref="F:System.UInt16.MaxValue" />보다 큽니다.  
또는 
 <paramref name="values" />의 요소가 256개가 넘는 경우  
또는 
<paramref name="values" /> 요소 중 하나가 32766바이트보다 긴 경우  
또는 
소스 이름 때문에 레지스트리 키 경로가 254자를 넘는 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The registry key for the event log could not be opened.">이벤트 로그의 레지스트리 키를 열 수 없는 경우</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The operating system reported an error when writing the event entry to the event log. A Windows error code is not available.">이벤트 로그에 이벤트 엔트리를 쓸 때 운영 체제에서 오류를 보고한 경우. Windows 오류 코드를 사용할 수 없습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEvent(System.Diagnostics.EventInstance,System.Object[])">
      <summary vsli:raw="Writes a localized entry to the event log.">이벤트 로그에 지역화된 엔트리를 씁니다.</summary>
      <param name="instance" vsli:raw="An &lt;see cref=&quot;T:System.Diagnostics.EventInstance&quot; /&gt; instance that represents a localized event log entry.">지역화된 이벤트 로그 항목을 나타내는 <see cref="T:System.Diagnostics.EventInstance" /> 인스턴스입니다.</param>
      <param name="values" vsli:raw="An array of strings to merge into the message text of the event log entry.">이벤트 로그 항목의 메시지 텍스트로 병합될 문자열의 배열입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.EventLog.Source&quot; /&gt; property of the &lt;see cref=&quot;T:System.Diagnostics.EventLog&quot; /&gt; has not been set.  &#xA;  &#xA; -or-  &#xA;  &#xA; The method attempted to register a new event source, but the computer name in &lt;see cref=&quot;P:System.Diagnostics.EventLog.MachineName&quot; /&gt; is not valid.  &#xA;  &#xA;-or-&#xA;  &#xA; The source is already registered for a different event log.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;instance.InstanceId&quot; /&gt; is less than zero or greater than &lt;see cref=&quot;F:System.UInt16.MaxValue&quot;&gt;UInt16.MaxValue&lt;/see&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;values&quot; /&gt; has more than 256 elements.  &#xA;  &#xA;-or-&#xA;  &#xA; One of the &lt;paramref name=&quot;values&quot; /&gt; elements is longer than 32766 bytes.  &#xA;  &#xA;-or-&#xA;  &#xA; The source name results in a registry key path longer than 254 characters.">
        <see cref="P:System.Diagnostics.EventLog.Source" />의 <see cref="T:System.Diagnostics.EventLog" /> 속성이 설정되지 않은 경우  
또는 
메서드가 새 이벤트 원본을 등록하려고 시도했지만 <see cref="P:System.Diagnostics.EventLog.MachineName" />의 컴퓨터 이름이 유효하지 않습니다.  
또는 
소스가 이미 다른 이벤트 로그에 등록된 경우  
또는 
 <paramref name="instance.InstanceId" />가 0보다 작거나 <see cref="F:System.UInt16.MaxValue" />보다 큽니다.  
또는 
 <paramref name="values" />의 요소가 256개가 넘는 경우  
또는 
<paramref name="values" /> 요소 중 하나가 32766바이트보다 긴 경우  
또는 
소스 이름 때문에 레지스트리 키 경로가 254자를 넘는 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The registry key for the event log could not be opened.">이벤트 로그의 레지스트리 키를 열 수 없는 경우</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The operating system reported an error when writing the event entry to the event log. A Windows error code is not available.">이벤트 로그에 이벤트 엔트리를 쓸 때 운영 체제에서 오류를 보고한 경우. Windows 오류 코드를 사용할 수 없습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEvent(System.String,System.Diagnostics.EventInstance,System.Byte[],System.Object[])">
      <summary vsli:raw="Writes an event log entry with the given event data, message replacement strings, and associated binary data, and using the specified registered event source.">지정한 등록된 이벤트 소스를 사용하여 지정된 이벤트 데이터, 메시지 대체 문자열 및 관련 이진 데이터가 포함된 이벤트 로그 엔트리를 씁니다.</summary>
      <param name="source" vsli:raw="The name of the event source registered for the application on the specified computer.">지정된 컴퓨터의 애플리케이션에 등록된 이벤트 원본의 이름입니다.</param>
      <param name="instance" vsli:raw="An &lt;see cref=&quot;T:System.Diagnostics.EventInstance&quot; /&gt; instance that represents a localized event log entry.">지역화된 이벤트 로그 항목을 나타내는 <see cref="T:System.Diagnostics.EventInstance" /> 인스턴스입니다.</param>
      <param name="data" vsli:raw="An array of bytes that holds the binary data associated with the entry.">항목과 연관된 이진 데이터를 보유하는 바이트의 배열입니다.</param>
      <param name="values" vsli:raw="An array of strings to merge into the message text of the event log entry.">이벤트 로그 항목의 메시지 텍스트로 병합될 문자열의 배열입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; value is an empty string (&quot;&quot;).  &#xA;  &#xA;-or-&#xA;  &#xA; The &lt;paramref name=&quot;source&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;instance.InstanceId&quot; /&gt; is less than zero or greater than &lt;see cref=&quot;F:System.UInt16.MaxValue&quot;&gt;UInt16.MaxValue&lt;/see&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;values&quot; /&gt; has more than 256 elements.  &#xA;  &#xA;-or-&#xA;  &#xA; One of the &lt;paramref name=&quot;values&quot; /&gt; elements is longer than 32766 bytes.  &#xA;  &#xA;-or-&#xA;  &#xA; The source name results in a registry key path longer than 254 characters.">
        <paramref name="source" /> 값이 빈 문자열("")인 경우  
또는 
<paramref name="source" /> 값이 <see langword="null" />입니다.  
또는 
 <paramref name="instance.InstanceId" />가 0보다 작거나 <see cref="F:System.UInt16.MaxValue" />보다 큽니다.  
또는 
 <paramref name="values" />의 요소가 256개가 넘는 경우  
또는 
<paramref name="values" /> 요소 중 하나가 32766바이트보다 긴 경우  
또는 
소스 이름 때문에 레지스트리 키 경로가 254자를 넘는 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The registry key for the event log could not be opened.">이벤트 로그의 레지스트리 키를 열 수 없는 경우</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The operating system reported an error when writing the event entry to the event log. A Windows error code is not available.">이벤트 로그에 이벤트 엔트리를 쓸 때 운영 체제에서 오류를 보고한 경우. Windows 오류 코드를 사용할 수 없습니다.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEvent(System.String,System.Diagnostics.EventInstance,System.Object[])">
      <summary vsli:raw="Writes an event log entry with the given event data and message replacement strings, using the specified registered event source.">지정한 등록된 이벤트 소스를 사용하여 지정된 이벤트 데이터와 메시지 대체 문자열이 포함된 이벤트 로그 엔트리를 씁니다.</summary>
      <param name="source" vsli:raw="The name of the event source registered for the application on the specified computer.">지정된 컴퓨터의 애플리케이션에 등록된 이벤트 원본의 이름입니다.</param>
      <param name="instance" vsli:raw="An &lt;see cref=&quot;T:System.Diagnostics.EventInstance&quot; /&gt; instance that represents a localized event log entry.">지역화된 이벤트 로그 항목을 나타내는 <see cref="T:System.Diagnostics.EventInstance" /> 인스턴스입니다.</param>
      <param name="values" vsli:raw="An array of strings to merge into the message text of the event log entry.">이벤트 로그 항목의 메시지 텍스트로 병합될 문자열의 배열입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; value is an empty string (&quot;&quot;).  &#xA;  &#xA;-or-&#xA;  &#xA; The &lt;paramref name=&quot;source&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;instance.InstanceId&quot; /&gt; is less than zero or greater than &lt;see cref=&quot;F:System.UInt16.MaxValue&quot;&gt;UInt16.MaxValue&lt;/see&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;values&quot; /&gt; has more than 256 elements.  &#xA;  &#xA;-or-&#xA;  &#xA; One of the &lt;paramref name=&quot;values&quot; /&gt; elements is longer than 32766 bytes.  &#xA;  &#xA;-or-&#xA;  &#xA; The source name results in a registry key path longer than 254 characters.">
        <paramref name="source" /> 값이 빈 문자열("")인 경우  
또는 
<paramref name="source" /> 값이 <see langword="null" />입니다.  
또는 
 <paramref name="instance.InstanceId" />가 0보다 작거나 <see cref="F:System.UInt16.MaxValue" />보다 큽니다.  
또는 
 <paramref name="values" />의 요소가 256개가 넘는 경우  
또는 
<paramref name="values" /> 요소 중 하나가 32766바이트보다 긴 경우  
또는 
소스 이름 때문에 레지스트리 키 경로가 254자를 넘는 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The registry key for the event log could not be opened.">이벤트 로그의 레지스트리 키를 열 수 없는 경우</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="The operating system reported an error when writing the event entry to the event log. A Windows error code is not available.">이벤트 로그에 이벤트 엔트리를 쓸 때 운영 체제에서 오류를 보고한 경우. Windows 오류 코드를 사용할 수 없습니다.</exception>
    </member>
    <member name="T:System.Diagnostics.EventLogEntry">
      <summary vsli:raw="Encapsulates a single record in the event log. This class cannot be inherited.">이벤트 로그에 단일 레코드를 캡슐화합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.Category">
      <summary vsli:raw="Gets the text associated with the &lt;see cref=&quot;P:System.Diagnostics.EventLogEntry.CategoryNumber&quot; /&gt; property for this entry.">이 엔트리의 <see cref="P:System.Diagnostics.EventLogEntry.CategoryNumber" /> 속성과 관련된 텍스트를 가져옵니다.</summary>
      <returns vsli:raw="The application-specific category text.">애플리케이션별 범주 텍스트입니다.</returns>
      <exception cref="T:System.Exception" vsli:raw="The space could not be allocated for one of the insertion strings associated with the category.">해당 범주와 관련된 삽입 문자열 중 하나에 대해 공간을 할당할 수 없는 경우</exception>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.CategoryNumber">
      <summary vsli:raw="Gets the category number of the event log entry.">이벤트 로그 엔트리의 범주 번호를 가져옵니다.</summary>
      <returns vsli:raw="The application-specific category number for this entry.">이 엔트리의 애플리케이션별 범주 번호입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.Data">
      <summary vsli:raw="Gets the binary data associated with the entry.">엔트리와 관련된 이진 데이터를 가져옵니다.</summary>
      <returns vsli:raw="An array of bytes that holds the binary data associated with the entry.">항목과 연관된 이진 데이터를 보유하는 바이트의 배열입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.EntryType">
      <summary vsli:raw="Gets the event type of this entry.">이 엔트리의 이벤트 형식을 가져옵니다.</summary>
      <returns vsli:raw="The event type that is associated with the entry in the event log.">이벤트 로그 엔트리와 연결된 이벤트 형식입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.EventLogEntry.Equals(System.Diagnostics.EventLogEntry)">
      <summary vsli:raw="Performs a comparison between two event log entries.">두 이벤트 로그 엔트리 간을 비교합니다.</summary>
      <param name="otherEntry" vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.EventLogEntry&quot; /&gt; to compare.">비교할 <see cref="T:System.Diagnostics.EventLogEntry" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Diagnostics.EventLogEntry&quot; /&gt; objects are identical; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Diagnostics.EventLogEntry" /> 개체가 동일하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.EventID">
      <summary vsli:raw="Gets the application-specific event identifier for the current event entry.">현재 이벤트 엔트리의 애플리케이션별 이벤트 식별자를 가져옵니다.</summary>
      <returns vsli:raw="The application-specific identifier for the event message.">이벤트 메시지의 애플리케이션별 식별자입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.Index">
      <summary vsli:raw="Gets the index of this entry in the event log.">이벤트 로그에서 이 엔트리의 인덱스를 가져옵니다.</summary>
      <returns vsli:raw="The index of this entry in the event log.">이벤트 로그에서 이 엔트리의 인덱스입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.InstanceId">
      <summary vsli:raw="Gets the resource identifier that designates the message text of the event entry.">이벤트 엔트리의 메시지 텍스트를 지정하는 리소스 식별자를 가져옵니다.</summary>
      <returns vsli:raw="A resource identifier that corresponds to a string definition in the message resource file of the event source.">이벤트 소스의 메시지 리소스 파일에 있는 문자열 정의에 해당하는 리소스 식별자입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.MachineName">
      <summary vsli:raw="Gets the name of the computer on which this entry was generated.">이 엔트리가 생성된 컴퓨터의 이름을 가져옵니다.</summary>
      <returns vsli:raw="The name of the computer that contains the event log.">이벤트 로그를 포함하는 컴퓨터의 이름입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.Message">
      <summary vsli:raw="Gets the localized message associated with this event entry.">이 이벤트 엔트리와 관련된 지역화된 메시지를 가져옵니다.</summary>
      <returns vsli:raw="The formatted, localized text for the message. This includes associated replacement strings.">형식이 지정되고 지역화된 메시지 텍스트입니다. 여기에는 연관된 대체 문자열이 포함됩니다.</returns>
      <exception cref="T:System.Exception" vsli:raw="The space could not be allocated for one of the insertion strings associated with the message.">메시지와 관련된 삽입 문자열 중 하나에 대해 해당 공간을 할당할 수 없는 경우</exception>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.ReplacementStrings">
      <summary vsli:raw="Gets the replacement strings associated with the event log entry.">이벤트 로그 엔트리와 연결된 대체 문자열을 가져옵니다.</summary>
      <returns vsli:raw="An array that holds the replacement strings stored in the event entry.">이벤트 엔트리에 저장된 대체 문자열을 포함하는 배열입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.Source">
      <summary vsli:raw="Gets the name of the application that generated this event.">이 이벤트를 생성한 애플리케이션의 이름을 가져옵니다.</summary>
      <returns vsli:raw="The name registered with the event log as the source of this event.">이 이벤트 소스로 이벤트 로그에 등록되는 이름입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.EventLogEntry.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; with the data needed to serialize the target object.">대상 개체를 직렬화하는 데 필요한 데이터로 <see cref="T:System.Runtime.Serialization.SerializationInfo" />를 채웁니다.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to populate with data.">데이터로 채울 <see cref="T:System.Runtime.Serialization.SerializationInfo" />입니다.</param>
      <param name="context" vsli:raw="The destination (see &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;) for this serialization.">이 serialization에 대한 대상입니다(<see cref="T:System.Runtime.Serialization.StreamingContext" /> 참조).</param>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.TimeGenerated">
      <summary vsli:raw="Gets the local time at which this event was generated.">이 이벤트가 생성된 현지 시간을 가져옵니다.</summary>
      <returns vsli:raw="The local time at which this event was generated.">이 이벤트가 생성된 현지 시간입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.TimeWritten">
      <summary vsli:raw="Gets the local time at which this event was written to the log.">이 이벤트가 로그에 쓰여진 현지 시간을 가져옵니다.</summary>
      <returns vsli:raw="The local time at which this event was written to the log.">이 이벤트가 로그에 기록된 현지 시간입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.UserName">
      <summary vsli:raw="Gets the name of the user who is responsible for this event.">이 이벤트를 담당하는 사용자의 이름을 가져옵니다.</summary>
      <returns vsli:raw="The security identifier (SID) that uniquely identifies a user or group.">사용자나 그룹을 고유하게 식별하는 SID(보안 식별자)입니다.</returns>
      <exception cref="T:System.SystemException" vsli:raw="Account information could not be obtained for the user's SID.">사용자의 SID에 대해 계정 정보를 확보할 수 없는 경우</exception>
    </member>
    <member name="T:System.Diagnostics.EventLogEntryCollection">
      <summary vsli:raw="Defines size and enumerators for a collection of &lt;see cref=&quot;T:System.Diagnostics.EventLogEntry&quot; /&gt; instances.">
        <see cref="T:System.Diagnostics.EventLogEntry" /> 인스턴스의 컬렉션에 대한 크기 및 열거자를 정의합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogEntryCollection.CopyTo(System.Diagnostics.EventLogEntry[],System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Diagnostics.EventLogEntryCollection&quot; /&gt; to an array of &lt;see cref=&quot;T:System.Diagnostics.EventLogEntry&quot; /&gt; instances, starting at a particular array index.">특정 배열 인덱스부터 시작하여 <see cref="T:System.Diagnostics.EventLogEntryCollection" /> 요소를 <see cref="T:System.Diagnostics.EventLogEntry" /> 인스턴스의 배열에 복사합니다.</summary>
      <param name="entries" vsli:raw="The one-dimensional array of &lt;see cref=&quot;T:System.Diagnostics.EventLogEntry&quot; /&gt; instances that is the destination of the elements copied from the collection. The array must have zero-based indexing.">컬렉션에서 복사된 요소의 대상인 <see cref="T:System.Diagnostics.EventLogEntry" /> 인스턴스의 1차원 배열입니다. 배열에는 0부터 시작하는 인덱스가 있어야 합니다.</param>
      <param name="index" vsli:raw="The zero-based index in the array at which copying begins.">복사를 시작할 배열의 인덱스(0부터 시작)입니다.</param>
    </member>
    <member name="P:System.Diagnostics.EventLogEntryCollection.Count">
      <summary vsli:raw="Gets the number of entries in the event log (that is, the number of elements in the &lt;see cref=&quot;T:System.Diagnostics.EventLogEntry&quot; /&gt; collection).">이벤트 로그의 엔트리 수, 즉 <see cref="T:System.Diagnostics.EventLogEntry" /> 컬렉션의 요소 수를 가져옵니다.</summary>
      <returns vsli:raw="The number of entries currently in the event log.">현재 이벤트 로그에 있는 엔트리의 수입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.EventLogEntryCollection.GetEnumerator">
      <summary vsli:raw="Supports a simple iteration over the &lt;see cref=&quot;T:System.Diagnostics.EventLogEntryCollection&quot; /&gt; object.">
        <see cref="T:System.Diagnostics.EventLogEntryCollection" /> 개체의 단순 반복을 지원합니다.</summary>
      <returns vsli:raw="An object that can be used to iterate over the collection.">컬렉션에서 반복하는 데 사용할 수 있는 개체입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntryCollection.Item(System.Int32)">
      <summary vsli:raw="Gets an entry in the event log, based on an index that starts at 0 (zero).">0부터 시작하는 인덱스를 기준으로 이벤트 로그에 있는 엔트리를 가져옵니다.</summary>
      <param name="index" vsli:raw="The zero-based index that is associated with the event log entry.">이벤트 로그 엔트리와 연결된 인덱스(0부터 시작)입니다.</param>
      <returns vsli:raw="The event log entry at the location that is specified by the &lt;paramref name=&quot;index&quot; /&gt; parameter.">
        <paramref name="index" /> 매개 변수로 지정한 위치에 있는 이벤트 로그 엔트리입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of the collection to an &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at a particular &lt;see cref=&quot;T:System.Array&quot; /&gt; index.">특정 <see cref="T:System.Array" /> 인덱스부터 시작하여 컬렉션의 요소를 <see cref="T:System.Array" />에 복사합니다.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements that are copied from the collection. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">컬렉션에서 복사한 요소의 대상인 1차원 <see cref="T:System.Array" />입니다. <see cref="T:System.Array" />에는 0부터 시작하는 인덱스가 있어야 합니다.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">
        <paramref name="array" />에서 복사가 시작되는 0부터 시작하는 인덱스입니다.</param>
    </member>
    <member name="P:System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether access to the &lt;see cref=&quot;T:System.Diagnostics.EventLogEntryCollection&quot; /&gt; is synchronized (thread-safe).">
        <see cref="T:System.Diagnostics.EventLogEntryCollection" />에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되는지를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; if access to the collection is not synchronized (thread-safe).">컬렉션에 대한 액세스가 동기화되지 않아서 스레드로부터 안전하게 보호되지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Diagnostics.EventLogEntryCollection&quot; /&gt; object.">
        <see cref="T:System.Diagnostics.EventLogEntryCollection" /> 개체에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 가져옵니다.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the collection.">컬렉션에 대한 액세스를 동기화하는 데 사용할 수 있는 개체입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.EventLogEntryType">
      <summary vsli:raw="Specifies the event type of an event log entry.">이벤트 로그 엔트리의 이벤트 형식을 지정합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogEntryType.Error">
      <summary vsli:raw="An error event. This indicates a significant problem the user should know about; usually a loss of functionality or data.">오류 이벤트로, 기능이나 데이터의 손실과 같이 사용자가 알아야 하는 심각한 문제점을 나타냅니다.</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogEntryType.FailureAudit">
      <summary vsli:raw="A failure audit event. This indicates a security event that occurs when an audited access attempt fails; for example, a failed attempt to open a file.">오류 감사 이벤트로, 파일을 열 수 없는 경우처럼 감사된 액세스 시도가 실패할 때 발생하는 보안 이벤트를 나타냅니다.</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogEntryType.Information">
      <summary vsli:raw="An information event. This indicates a significant, successful operation.">정보 이벤트로, 성공적으로 수행된 중요한 작업을 나타냅니다.</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogEntryType.SuccessAudit">
      <summary vsli:raw="A success audit event. This indicates a security event that occurs when an audited access attempt is successful; for example, logging on successfully.">성공적인 감사 이벤트로, 성공적으로 로그온한 경우처럼 감사된 액세스 시도가 성공할 때 발생하는 보안 이벤트를 나타냅니다.</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogEntryType.Warning">
      <summary vsli:raw="A warning event. This indicates a problem that is not immediately significant, but that may signify conditions that could cause future problems.">경고 이벤트로, 당장은 심각하지 않지만 앞으로 문제를 발생시킬 수 있는 상태를 알리는 문제점을 나타냅니다.</summary>
    </member>
    <member name="T:System.Diagnostics.EventLogTraceListener">
      <summary vsli:raw="Provides a simple listener that directs tracing or debugging output to an &lt;see cref=&quot;T:System.Diagnostics.EventLog&quot; /&gt;.">추적 또는 디버깅 출력을 <see cref="T:System.Diagnostics.EventLog" />로 보내는 간단한 수신기를 제공합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.EventLogTraceListener&quot; /&gt; class without a trace listener.">추적 수신기를 사용하지 않고 <see cref="T:System.Diagnostics.EventLogTraceListener" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.#ctor(System.Diagnostics.EventLog)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.EventLogTraceListener&quot; /&gt; class using the specified event log.">지정한 이벤트 로그를 사용하여 <see cref="T:System.Diagnostics.EventLogTraceListener" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="eventLog" vsli:raw="The event log to write to.">기록할 이벤트 로그입니다.</param>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.EventLogTraceListener&quot; /&gt; class using the specified source.">지정한 소스를 사용하여 <see cref="T:System.Diagnostics.EventLogTraceListener" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="source" vsli:raw="The name of an existing event log source.">기존 이벤트 로그 소스의 이름입니다.</param>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.Close">
      <summary vsli:raw="Closes the event log so that it no longer receives tracing or debugging output.">추적 또는 디버깅 출력을 더 이상 수신하지 않게 이벤트 로그를 닫습니다.</summary>
    </member>
    <member name="P:System.Diagnostics.EventLogTraceListener.EventLog">
      <summary vsli:raw="Gets or sets the event log to write to.">쓸 이벤트 로그를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The event log to write to.">기록할 이벤트 로그입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogTraceListener.Name">
      <summary vsli:raw="Gets or sets the name of this &lt;see cref=&quot;T:System.Diagnostics.EventLogTraceListener&quot; /&gt;.">이 <see cref="T:System.Diagnostics.EventLogTraceListener" />의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name of this trace listener.">이 추적 수신기의 이름입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
      <summary vsli:raw="Writes trace information, a data object, and event information to the event log.">추적 정보, 데이터 개체 및 이벤트 정보를 이벤트 로그에 씁니다.</summary>
      <param name="eventCache" vsli:raw="An object that contains the current process ID, thread ID, and stack trace information.">현재 프로세스 ID, 스레드 ID 및 스택 추적 정보가 포함된 개체입니다.</param>
      <param name="source" vsli:raw="A name used to identify the output; typically the name of the application that generated the trace event.">출력을 식별하는 데 사용되는 이름이며 일반적으로 추적 이벤트를 생성한 애플리케이션의 이름입니다.</param>
      <param name="severity" vsli:raw="One of the enumeration values that specifies the type of event that has caused the trace.">추적이 발생한 이벤트의 형식을 지정하는 열거형 값 중 하나입니다.</param>
      <param name="id" vsli:raw="A numeric identifier for the event. The combination of &lt;paramref name=&quot;source&quot; /&gt; and &lt;paramref name=&quot;id&quot; /&gt; uniquely identifies an event.">이벤트의 숫자 식별자입니다. <paramref name="source" />와 <paramref name="id" />의 조합은 이벤트를 고유하게 식별합니다.</param>
      <param name="data" vsli:raw="A data object to write to the output file or stream.">출력 파일이나 스트림에 쓸 데이터 개체입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is not specified.  &#xA;  &#xA; -or-  &#xA;  &#xA; The log entry string exceeds 32,766 characters.">
        <paramref name="source" />을(를) 지정하지 않았습니다.  
또는 
로그 엔트리 문자열이 32,766자를 초과합니다.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
      <summary vsli:raw="Writes trace information, an array of data objects, and event information to the event log.">추적 정보, 데이터 개체 배열 및 이벤트 정보를 이벤트 로그에 씁니다.</summary>
      <param name="eventCache" vsli:raw="An object that contains the current process ID, thread ID, and stack trace information.">현재 프로세스 ID, 스레드 ID 및 스택 추적 정보가 포함된 개체입니다.</param>
      <param name="source" vsli:raw="A name used to identify the output; typically the name of the application that generated the trace event.">출력을 식별하는 데 사용되는 이름이며 일반적으로 추적 이벤트를 생성한 애플리케이션의 이름입니다.</param>
      <param name="severity" vsli:raw="One of the enumeration values that specifies the type of event that has caused the trace.">추적이 발생한 이벤트의 형식을 지정하는 열거형 값 중 하나입니다.</param>
      <param name="id" vsli:raw="A numeric identifier for the event. The combination of &lt;paramref name=&quot;source&quot; /&gt; and &lt;paramref name=&quot;id&quot; /&gt; uniquely identifies an event.">이벤트의 숫자 식별자입니다. <paramref name="source" />와 <paramref name="id" />의 조합은 이벤트를 고유하게 식별합니다.</param>
      <param name="data" vsli:raw="An array of data objects.">데이터 개체로 이루어진 배열입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is not specified.  &#xA;  &#xA; -or-  &#xA;  &#xA; The log entry string exceeds 32,766 characters.">
        <paramref name="source" />을(를) 지정하지 않았습니다.  
또는 
로그 엔트리 문자열이 32,766자를 초과합니다.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
      <summary vsli:raw="Writes trace information, a message, and event information to the event log.">추적 정보, 메시지 및 이벤트 정보를 이벤트 로그에 씁니다.</summary>
      <param name="eventCache" vsli:raw="An object that contains the current process ID, thread ID, and stack trace information.">현재 프로세스 ID, 스레드 ID 및 스택 추적 정보가 포함된 개체입니다.</param>
      <param name="source" vsli:raw="A name used to identify the output; typically the name of the application that generated the trace event.">출력을 식별하는 데 사용되는 이름이며 일반적으로 추적 이벤트를 생성한 애플리케이션의 이름입니다.</param>
      <param name="severity" vsli:raw="One of the enumeration values that specifies the type of event that has caused the trace.">추적이 발생한 이벤트의 형식을 지정하는 열거형 값 중 하나입니다.</param>
      <param name="id" vsli:raw="A numeric identifier for the event. The combination of &lt;paramref name=&quot;source&quot; /&gt; and &lt;paramref name=&quot;id&quot; /&gt; uniquely identifies an event.">이벤트의 숫자 식별자입니다. <paramref name="source" />와 <paramref name="id" />의 조합은 이벤트를 고유하게 식별합니다.</param>
      <param name="message" vsli:raw="The trace message.">추적 메시지입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is not specified.  &#xA;  &#xA; -or-  &#xA;  &#xA; The log entry string exceeds 32,766 characters.">
        <paramref name="source" />을(를) 지정하지 않았습니다.  
또는 
로그 엔트리 문자열이 32,766자를 초과합니다.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
      <summary vsli:raw="Writes trace information, a formatted array of objects, and event information to the event log.">추적 정보, 형식 지정된 개체 배열 및 이벤트 정보를 이벤트 로그에 씁니다.</summary>
      <param name="eventCache" vsli:raw="An object that contains the current process ID, thread ID, and stack trace information.">현재 프로세스 ID, 스레드 ID 및 스택 추적 정보가 포함된 개체입니다.</param>
      <param name="source" vsli:raw="A name used to identify the output; typically the name of the application that generated the trace event.">출력을 식별하는 데 사용되는 이름이며 일반적으로 추적 이벤트를 생성한 애플리케이션의 이름입니다.</param>
      <param name="severity" vsli:raw="One of the enumeration values that specifies the type of event that has caused the trace.">추적이 발생한 이벤트의 형식을 지정하는 열거형 값 중 하나입니다.</param>
      <param name="id" vsli:raw="A numeric identifier for the event. The combination of &lt;paramref name=&quot;source&quot; /&gt; and &lt;paramref name=&quot;id&quot; /&gt; uniquely identifies an event.">이벤트의 숫자 식별자입니다. <paramref name="source" />와 <paramref name="id" />의 조합은 이벤트를 고유하게 식별합니다.</param>
      <param name="format" vsli:raw="A format string that contains zero or more format items that correspond to objects in the &lt;paramref name=&quot;args&quot; /&gt; array.">
        <paramref name="args" /> 배열에 들어 있는 개체에 해당하는 0개 이상의 형식 항목이 포함된 형식 문자열입니다.</param>
      <param name="args" vsli:raw="An &lt;see langword=&quot;object&quot; /&gt; array containing zero or more objects to format.">형식을 지정할 개체를 0개 이상 포함하는 <see langword="object" /> 배열입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is not specified.  &#xA;  &#xA; -or-  &#xA;  &#xA; The log entry string exceeds 32,766 characters.">
        <paramref name="source" />을(를) 지정하지 않았습니다.  
또는 
로그 엔트리 문자열이 32,766자를 초과합니다.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.Write(System.String)">
      <summary vsli:raw="Writes a message to the event log for this instance.">이 인스턴스의 이벤트 로그에 메시지를 씁니다.</summary>
      <param name="message" vsli:raw="The message to write.">쓸 메시지입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;message&quot; /&gt; exceeds 32,766 characters.">
        <paramref name="message" />가 32,766자를 초과합니다.</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.WriteLine(System.String)">
      <summary vsli:raw="Writes a message to the event log for this instance.">이 인스턴스의 이벤트 로그에 메시지를 씁니다.</summary>
      <param name="message" vsli:raw="The message to write.">쓸 메시지입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;message&quot; /&gt; exceeds 32,766 characters.">
        <paramref name="message" />가 32,766자를 초과합니다.</exception>
    </member>
    <member name="T:System.Diagnostics.EventSourceCreationData">
      <summary vsli:raw="Represents the configuration settings used to create an event log source on the local computer or a remote computer.">로컬 컴퓨터 또는 원격 컴퓨터에서 이벤트 로그 소스를 만드는 데 사용되는 구성 설정을 나타냅니다.</summary>
    </member>
    <member name="M:System.Diagnostics.EventSourceCreationData.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.EventSourceCreationData&quot; /&gt; class with a specified event source and event log name.">지정된 이벤트 소스와 이벤트 로그 이름을 사용하여 <see cref="T:System.Diagnostics.EventSourceCreationData" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="source" vsli:raw="The name to register with the event log as a source of entries.">엔트리 소스로 이벤트 로그에 등록할 이름입니다.</param>
      <param name="logName" vsli:raw="The name of the log to which entries from the source are written.">소스 엔트리를 쓸 로그의 이름입니다.</param>
    </member>
    <member name="P:System.Diagnostics.EventSourceCreationData.CategoryCount">
      <summary vsli:raw="Gets or sets the number of categories in the category resource file.">범주 리소스 파일에서 범주 수를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The number of categories in the category resource file. The default value is zero.">범주 리소스 파일에 있는 범주 수입니다. 기본값은 0입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The property is set to a negative value or to a value larger than &lt;see cref=&quot;F:System.UInt16.MaxValue&quot;&gt;UInt16.MaxValue&lt;/see&gt;.">속성이 음의 값이나 <see cref="F:System.UInt16.MaxValue" />보다 큰 값으로 설정된 경우</exception>
    </member>
    <member name="P:System.Diagnostics.EventSourceCreationData.CategoryResourceFile">
      <summary vsli:raw="Gets or sets the path of the resource file that contains category strings for the source.">소스에 대한 범주 문자열이 들어 있는 리소스 파일의 경로를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The path of the category resource file. The default is an empty string (&quot;&quot;).">범주 리소스 파일의 경로입니다. 기본값은 빈 문자열("")입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.EventSourceCreationData.LogName">
      <summary vsli:raw="Gets or sets the name of the event log to which the source writes entries.">소스가 엔트리를 쓰는 이벤트 로그 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name of the event log. This can be Application, System, or a custom log name. The default value is &quot;Application.&quot;">이벤트 로그 이름입니다. 이 이름에는 애플리케이션, 시스템 또는 사용자 지정 로그 이름을 사용할 수 있습니다. 기본값은 "Application"입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.EventSourceCreationData.MachineName">
      <summary vsli:raw="Gets or sets the name of the computer on which to register the event source.">이벤트 소스를 등록할 컴퓨터 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name of the system on which to register the event source. The default is the local computer (&quot;.&quot;).">이벤트 소스를 등록할 시스템 이름입니다. 기본값은 로컬 컴퓨터(".")입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The computer name is invalid.">컴퓨터 이름이 잘못된 경우</exception>
    </member>
    <member name="P:System.Diagnostics.EventSourceCreationData.MessageResourceFile">
      <summary vsli:raw="Gets or sets the path of the message resource file that contains message formatting strings for the source.">소스에 대한 메시지 서식 문자열이 들어 있는 메시지 리소스 파일의 경로를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The path of the message resource file. The default is an empty string (&quot;&quot;).">메시지 리소스 파일의 경로입니다. 기본값은 빈 문자열("")입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.EventSourceCreationData.ParameterResourceFile">
      <summary vsli:raw="Gets or sets the path of the resource file that contains message parameter strings for the source.">소스에 대한 메시지 매개 변수 문자열이 들어 있는 리소스 파일의 경로를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The path of the parameter resource file. The default is an empty string (&quot;&quot;).">매개 변수 리소스 파일의 경로입니다. 기본값은 빈 문자열("")입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.EventSourceCreationData.Source">
      <summary vsli:raw="Gets or sets the name to register with the event log as an event source.">이벤트 로그에 이벤트 소스로 등록할 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name to register with the event log as a source of entries. The default is an empty string (&quot;&quot;).">엔트리 소스로 이벤트 로그에 등록할 이름입니다. 기본값은 빈 문자열("")입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.OverflowAction">
      <summary vsli:raw="Specifies how to handle entries in an event log that has reached its maximum file size.">최대 파일 크기에 도달한 이벤트 로그의 엔트리를 처리하는 방법을 지정합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.OverflowAction.DoNotOverwrite">
      <summary vsli:raw="Indicates that existing entries are retained when the event log is full and new entries are discarded.">이벤트 로그가 꽉 찼을 때 기존 엔트리가 유지되고 새 엔트리가 삭제됨을 나타냅니다.</summary>
    </member>
    <member name="F:System.Diagnostics.OverflowAction.OverwriteAsNeeded">
      <summary vsli:raw="Indicates that each new entry overwrites the oldest entry when the event log is full.">이벤트 로그가 꽉 찼을 때 각각의 새 엔트리가 가장 오래된 엔트리를 덮어씀을 나타냅니다.</summary>
    </member>
    <member name="F:System.Diagnostics.OverflowAction.OverwriteOlder">
      <summary vsli:raw="Indicates that new events overwrite events older than specified by the &lt;see cref=&quot;P:System.Diagnostics.EventLog.MinimumRetentionDays&quot; /&gt; property value when the event log is full. New events are discarded if the event log is full and there are no events older than specified by the &lt;see cref=&quot;P:System.Diagnostics.EventLog.MinimumRetentionDays&quot; /&gt; property value.">이벤트 로그가 꽉 찼을 때 새 이벤트가 <see cref="P:System.Diagnostics.EventLog.MinimumRetentionDays" /> 속성 값으로 지정된 것보다 오래된 이벤트를 덮어씀을 나타냅니다. 이벤트 로그가 꽉 찼을 때 <see cref="P:System.Diagnostics.EventLog.MinimumRetentionDays" /> 속성 값으로 지정된 것보다 오래된 이벤트가 없으면 새 이벤트가 삭제됩니다.</summary>
    </member>
  </members>
</doc>