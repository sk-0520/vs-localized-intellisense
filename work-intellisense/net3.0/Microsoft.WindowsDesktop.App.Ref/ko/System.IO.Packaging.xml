<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.IO.Packaging</name>
  </assembly>
  <members>
    <member name="T:System.IO.FileFormatException">
      <summary vsli:raw="The exception that is thrown when an input file or a data stream that is supposed to conform to a certain file format specification is malformed.">특정 파일 형식 사양을 따라야 할 입력 파일이나 데이터 스트림의 형식이 올바르지 않은 경우 throw되는 예외입니다.</summary>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.IO.FileFormatException&quot; /&gt; class.">
        <see cref="T:System.IO.FileFormatException" /> 클래스의 새 인스턴스를 만듭니다.</summary>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.IO.FileFormatException&quot; /&gt; class and initializes it with serialized data. This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.">
        <see cref="T:System.IO.FileFormatException" /> 클래스의 새 인스턴스를 만들고 serialize된 데이터를 사용하여 초기화합니다. deserialization을 수행하는 동안 이 생성자를 호출하여 스트림을 통해 전송될 예외 개체를 다시 구성합니다.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">serialize된 개체 데이터를 보유하는 개체입니다.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">원본 또는 대상에 대한 컨텍스트 정보입니다.</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.String)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.IO.FileFormatException&quot; /&gt; class with a specified error message.">지정된 오류 메시지를 사용하여 <see cref="T:System.IO.FileFormatException" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="message" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; value that represents the error message.">오류 메시지를 나타내는 <see cref="T:System.String" /> 값입니다.</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.IO.FileFormatException&quot; /&gt; class with a specified error message and exception type.">지정된 오류 메시지와 예외 형식을 사용하여 <see cref="T:System.IO.FileFormatException" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="message" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; value that represents the error message.">오류 메시지를 나타내는 <see cref="T:System.String" /> 값입니다.</param>
      <param name="innerException" vsli:raw="The value of the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property, which represents the cause of the current exception.">현재 예외의 원인을 나타내는 <see cref="P:System.Exception.InnerException" /> 속성의 값입니다.</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.IO.FileFormatException&quot; /&gt; class with a source URI value.">소스 URI 값을 사용하여 <see cref="T:System.IO.FileFormatException" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="sourceUri" vsli:raw="The &lt;see cref=&quot;T:System.Uri&quot; /&gt; value of the file that caused this error.">이 오류를 일으킨 원인이 된 파일의 <see cref="T:System.Uri" /> 값입니다.</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri,System.Exception)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.IO.FileFormatException&quot; /&gt; class with a source URI value and an exception type.">소스 URI 값 및 예외 형식을 사용하여 <see cref="T:System.IO.FileFormatException" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="sourceUri" vsli:raw="The &lt;see cref=&quot;T:System.Uri&quot; /&gt; value of the file that caused this error.">이 오류를 일으킨 원인이 된 파일의 <see cref="T:System.Uri" /> 값입니다.</param>
      <param name="innerException" vsli:raw="The value of the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property, which represents the cause of the current exception.">현재 예외의 원인을 나타내는 <see cref="P:System.Exception.InnerException" /> 속성의 값입니다.</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri,System.String)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.IO.FileFormatException&quot; /&gt; class with a source URI value and a specified error message.">소스 URI 값 및 지정된 오류 메시지를 사용하여 <see cref="T:System.IO.FileFormatException" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="sourceUri" vsli:raw="The &lt;see cref=&quot;T:System.Uri&quot; /&gt; value of the file that caused this error.">이 오류를 일으킨 원인이 된 파일의 <see cref="T:System.Uri" /> 값입니다.</param>
      <param name="message" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; value that represents the error message.">오류 메시지를 나타내는 <see cref="T:System.String" /> 값입니다.</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri,System.String,System.Exception)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.IO.FileFormatException&quot; /&gt; class with a source URI value, a specified error message, and an exception type.">소스 URI 값, 지정된 오류 메시지 및 예외 형식을 사용하여 <see cref="T:System.IO.FileFormatException" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="sourceUri" vsli:raw="The &lt;see cref=&quot;T:System.Uri&quot; /&gt; value of the file that caused this error.">이 오류를 일으킨 원인이 된 파일의 <see cref="T:System.Uri" /> 값입니다.</param>
      <param name="message" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; value that represents the error message.">오류 메시지를 나타내는 <see cref="T:System.String" /> 값입니다.</param>
      <param name="innerException" vsli:raw="The value of the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property, which represents the cause of the current exception.">현재 예외의 원인을 나타내는 <see cref="P:System.Exception.InnerException" /> 속성의 값입니다.</param>
    </member>
    <member name="M:System.IO.FileFormatException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object with the file name and additional exception information.">파일 이름 및 추가 예외 정보를 사용하여 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체를 설정합니다.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">serialize된 개체 데이터를 보유하는 개체입니다.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">원본 또는 대상에 대한 컨텍스트 정보입니다.</param>
    </member>
    <member name="P:System.IO.FileFormatException.SourceUri">
      <summary vsli:raw="Gets the name of a file that caused the &lt;see cref=&quot;T:System.IO.FileFormatException&quot; /&gt;.">
        <see cref="T:System.IO.FileFormatException" />의 원인이 된 파일의 이름을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Uri&quot; /&gt; that represents the name the file that caused the exception.">예외의 원인이 된 파일의 이름을 나타내는 <see cref="T:System.Uri" />입니다.</returns>
    </member>
    <member name="T:System.IO.Packaging.CompressionOption">
      <summary vsli:raw="Specifies the compression level for content that is stored in a &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt;.">
        <see cref="T:System.IO.Packaging.PackagePart" />에 저장되는 콘텐츠의 압축 수준을 지정합니다.</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.Fast">
      <summary vsli:raw="Compression is optimized for performance.">성능을 위해 압축이 최적화됩니다.</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.Maximum">
      <summary vsli:raw="Compression is optimized for size.">크기를 위해 압축이 최적화됩니다.</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.Normal">
      <summary vsli:raw="Compression is optimized for a balance between size and performance.">크기와 성능의 균형을 위해 압축이 최적화됩니다.</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.NotCompressed">
      <summary vsli:raw="Compression is turned off.">압축이 해제됩니다.</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.SuperFast">
      <summary vsli:raw="Compression is optimized for high performance.">고성능을 위해 압축이 최적화됩니다.</summary>
    </member>
    <member name="T:System.IO.Packaging.EncryptionOption">
      <summary vsli:raw="Specifies the encryption option for parts in a &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">
        <see cref="T:System.IO.Packaging.Package" />의 파트에 대한 암호화 옵션을 지정합니다.</summary>
    </member>
    <member name="F:System.IO.Packaging.EncryptionOption.None">
      <summary vsli:raw="No encryption.">암호화하지 않습니다.</summary>
    </member>
    <member name="F:System.IO.Packaging.EncryptionOption.RightsManagement">
      <summary vsli:raw="Encryption supported through rights management.">권한 관리를 통해 지원되는 암호화입니다.</summary>
    </member>
    <member name="T:System.IO.Packaging.Package">
      <summary vsli:raw="Represents a container that can store multiple data objects.">여러 데이터 개체를 저장할 수 있는 컨테이너를 나타냅니다.</summary>
    </member>
    <member name="M:System.IO.Packaging.Package.#ctor(System.IO.FileAccess)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; class that uses a given &lt;see cref=&quot;T:System.IO.FileAccess&quot; /&gt;.">지정된 <see cref="T:System.IO.Packaging.Package" />를 사용하는 <see cref="T:System.IO.FileAccess" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="openFileAccess" vsli:raw="The file IO permissions for the package.">패키지의 파일 IO 권한입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value for &lt;paramref name=&quot;openFileAccess&quot; /&gt; is not valid.">
        <paramref name="openFileAccess" />의 값이 올바르지 않은 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Close">
      <summary vsli:raw="Saves and closes the package plus all underlying part streams.">패키지 및 모든 내부 파트 스트림을 저장하고 닫습니다.</summary>
    </member>
    <member name="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)">
      <summary vsli:raw="Creates a new uncompressed part with a given URI and content type.">지정된 URI 및 콘텐츠 형식으로 압축되지 않은 새 파트를 만듭니다.</summary>
      <param name="partUri" vsli:raw="The uniform resource identifier (URI) of the new part.">새 파트의 URI(Uniform Resource Identifier)입니다.</param>
      <param name="contentType" vsli:raw="The content type of the data stream.">데이터 스트림의 콘텐츠 형식입니다.</param>
      <returns vsli:raw="The new created part.">새로 만들어진 파트입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;partUri&quot; /&gt; or &lt;paramref name=&quot;contentType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="partUri" /> 또는 <paramref name="contentType" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;partUri&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; URI.">
        <paramref name="partUri" />는 유효한 <see cref="T:System.IO.Packaging.PackagePart" /> URI가 아닙니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A part with the specified &lt;paramref name=&quot;partUri&quot; /&gt; is already present in the package.">지정된 <paramref name="partUri" />의 파트가 이미 패키지에 있는 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The package is not open (&lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.IO.Packaging.Package.Close&quot; /&gt; has been called).">패키지가 열려 있지 않은 경우(<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 또는 <see cref="M:System.IO.Packaging.Package.Close" />가 호출된 경우)</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The package is read-only (a new part cannot be added).">패키지가 읽기 전용인 경우. 이 경우 새 파트를 추가할 수 없습니다.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
      <summary vsli:raw="Creates a new part with a given URI, content type, and compression option.">지정된 URI, 콘텐츠 형식 및 압축 옵션으로 새 파트를 만듭니다.</summary>
      <param name="partUri" vsli:raw="The URI of the new part.">새 파트의 URI입니다.</param>
      <param name="contentType" vsli:raw="The content type of the data stream.">데이터 스트림의 콘텐츠 형식입니다.</param>
      <param name="compressionOption" vsli:raw="The compression option for the data stream, &lt;see cref=&quot;F:System.IO.Packaging.CompressionOption.NotCompressed&quot; /&gt; or &lt;see cref=&quot;F:System.IO.Packaging.CompressionOption.Normal&quot; /&gt; compression.">데이터 스트림의 압축 옵션으로 <see cref="F:System.IO.Packaging.CompressionOption.NotCompressed" /> 또는 <see cref="F:System.IO.Packaging.CompressionOption.Normal" /> 압축입니다.</param>
      <returns vsli:raw="The new created part.">새로 만들어진 파트입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;partUri&quot; /&gt; or &lt;paramref name=&quot;contentType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="partUri" /> 또는 <paramref name="contentType" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;partUri&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; uniform resource identifier (URI).">
        <paramref name="partUri" />는 유효한 <see cref="T:System.IO.Packaging.PackagePart" /> URI(Uniform Resource Identifier)가 아닙니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A part with the specified &lt;paramref name=&quot;partUri&quot; /&gt; is already present in the package.">지정된 <paramref name="partUri" />의 파트가 이미 패키지에 있는 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;compressionOption&quot; /&gt; value is not valid.">
        <paramref name="compressionOption" /> 값이 올바르지 않은 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The package is not open (&lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.IO.Packaging.Package.Close&quot; /&gt; has been called).">패키지가 열려 있지 않은 경우(<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 또는 <see cref="M:System.IO.Packaging.Package.Close" />가 호출된 경우)</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The package is read-only (a new part cannot be added).">패키지가 읽기 전용인 경우. 이 경우 새 파트를 추가할 수 없습니다.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
      <summary vsli:raw="When overridden in a derived class, creates a new part in the package.">파생 클래스에서 재정의되는 경우 패키지에서 새 파트를 만듭니다.</summary>
      <param name="partUri" vsli:raw="The uniform resource identifier (URI) for the part being created.">만들 파트의 URI(Uniform Resource Identifier)입니다.</param>
      <param name="contentType" vsli:raw="The content type of the data stream.">데이터 스트림의 콘텐츠 형식입니다.</param>
      <param name="compressionOption" vsli:raw="The compression option for the data stream.">데이터 스트림의 압축 옵션입니다.</param>
      <returns vsli:raw="The created part.">만들어진 파트입니다.</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
      <summary vsli:raw="Creates a package-level relationship to a part with a given URI, target mode, and relationship type.">지정된 URI, 대상 모드 및 관계 형식을 가진 파트에 대한 패키지 수준 관계를 만듭니다.</summary>
      <param name="targetUri" vsli:raw="The uniform resource identifier (URI) of the target part.">대상 파트의 URI(Uniform Resource Identifier)입니다.</param>
      <param name="targetMode" vsli:raw="Indicates if the target part is &lt;see cref=&quot;F:System.IO.Packaging.TargetMode.Internal&quot; /&gt; or &lt;see cref=&quot;F:System.IO.Packaging.TargetMode.External&quot; /&gt; to the package.">대상 파트가 패키지에 <see cref="F:System.IO.Packaging.TargetMode.Internal" />인지 또는 <see cref="F:System.IO.Packaging.TargetMode.External" />인지를 나타냅니다.</param>
      <param name="relationshipType" vsli:raw="A URI that uniquely defines the role of the relationship.">관계의 역할을 고유하게 정의하는 URI입니다.</param>
      <returns vsli:raw="The package-level relationship to the specified part.">지정된 파트에 대한 패키지 수준 관계입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;targetUri&quot; /&gt; or &lt;paramref name=&quot;relationshipType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="targetUri" /> 또는 <paramref name="relationshipType" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;targetUri&quot; /&gt; part is a &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt;, or &lt;paramref name=&quot;targetMode&quot; /&gt; is &lt;see cref=&quot;F:System.IO.Packaging.TargetMode.Internal&quot; /&gt; and &lt;paramref name=&quot;targetUri&quot; /&gt; is an absolute URI.">
        <paramref name="targetUri" /> 파트가 <see cref="T:System.IO.Packaging.PackageRelationship" />이거나 <paramref name="targetMode" />가 <see cref="F:System.IO.Packaging.TargetMode.Internal" />이고 <paramref name="targetUri" />가 절대 URI인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value for &lt;paramref name=&quot;targetMode&quot; /&gt; is not valid.">
        <paramref name="targetMode" />의 값이 올바르지 않은 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The package is not open (&lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.IO.Packaging.Package.Close&quot; /&gt; has been called).">패키지가 열려 있지 않은 경우(<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 또는 <see cref="M:System.IO.Packaging.Package.Close" />가 호출된 경우)</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The package is read-only.">패키지가 읽기 전용인 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
      <summary vsli:raw="Creates a package-level relationship to a part with a given URI, target mode, relationship type, and identifier (ID).">지정된 URI, 대상 모드, 관계 형식 및 ID(식별자)를 가진 파트에 대한 패키지 수준 관계를 만듭니다.</summary>
      <param name="targetUri" vsli:raw="The uniform resource identifier (URI) of the target part.">대상 파트의 URI(Uniform Resource Identifier)입니다.</param>
      <param name="targetMode" vsli:raw="Indicates if the target part is &lt;see cref=&quot;F:System.IO.Packaging.TargetMode.Internal&quot; /&gt; or &lt;see cref=&quot;F:System.IO.Packaging.TargetMode.External&quot; /&gt; to the package.">대상 파트가 패키지에 <see cref="F:System.IO.Packaging.TargetMode.Internal" />인지 또는 <see cref="F:System.IO.Packaging.TargetMode.External" />인지를 나타냅니다.</param>
      <param name="relationshipType" vsli:raw="A URI that uniquely defines the role of the relationship.">관계의 역할을 고유하게 정의하는 URI입니다.</param>
      <param name="id" vsli:raw="A unique XML identifier.">고유 XML 식별자입니다.</param>
      <returns vsli:raw="The package-level relationship to the specified part.">지정된 파트에 대한 패키지 수준 관계입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;targetUri&quot; /&gt; or &lt;paramref name=&quot;relationshipType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="targetUri" /> 또는 <paramref name="relationshipType" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;targetUri&quot; /&gt; part is a &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt;, or &lt;paramref name=&quot;targetMode&quot; /&gt; is &lt;see cref=&quot;F:System.IO.Packaging.TargetMode.Internal&quot; /&gt; and &lt;paramref name=&quot;targetUri&quot; /&gt; is an absolute URI.">
        <paramref name="targetUri" /> 파트가 <see cref="T:System.IO.Packaging.PackageRelationship" />이거나 <paramref name="targetMode" />가 <see cref="F:System.IO.Packaging.TargetMode.Internal" />이고 <paramref name="targetUri" />가 절대 URI인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value for &lt;paramref name=&quot;targetMode&quot; /&gt; is not valid.">
        <paramref name="targetMode" />의 값이 올바르지 않은 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The package is not open (&lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.IO.Packaging.Package.Close&quot; /&gt; has been called).">패키지가 열려 있지 않은 경우(<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 또는 <see cref="M:System.IO.Packaging.Package.Close" />가 호출된 경우)</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The package is read-only.">패키지가 읽기 전용인 경우</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;id&quot; /&gt; is not a valid XML identifier; or a part with the specified &lt;paramref name=&quot;id&quot; /&gt; already occurs in the package.">
        <paramref name="id" />가 올바른 XML 식별자가 아니거나 지정된 <paramref name="id" />의 파트가 이미 패키지에 있는 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.DeletePart(System.Uri)">
      <summary vsli:raw="Deletes a part with a given URI from the package.">패키지에서 지정된 URI의 파트를 삭제합니다.</summary>
      <param name="partUri" vsli:raw="The URI of the part to delete.">삭제할 파트의 URI입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;partUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="partUri" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;partUri&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; URI.">
        <paramref name="partUri" />는 유효한 <see cref="T:System.IO.Packaging.PackagePart" /> URI가 아닙니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The package is not open (&lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.IO.Packaging.Package.Close&quot; /&gt; has been called).">패키지가 열려 있지 않은 경우(<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 또는 <see cref="M:System.IO.Packaging.Package.Close" />가 호출된 경우)</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The package is read-only.">패키지가 읽기 전용인 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)">
      <summary vsli:raw="When overridden in a derived class, deletes a part with a given URI.">파생 클래스에서 재정의되는 경우 지정된 URI의 파트를 삭제합니다.</summary>
      <param name="partUri" vsli:raw="The &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.Uri&quot; /&gt; of the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; to delete.">삭제할 <see cref="P:System.IO.Packaging.PackagePart.Uri" />의 <see cref="T:System.IO.Packaging.PackagePart" />입니다.</param>
    </member>
    <member name="M:System.IO.Packaging.Package.DeleteRelationship(System.String)">
      <summary vsli:raw="Deletes a package-level relationship.">패키지 수준 관계를 삭제합니다.</summary>
      <param name="id" vsli:raw="The &lt;see cref=&quot;P:System.IO.Packaging.PackageRelationship.Id&quot; /&gt; of the &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; to delete.">삭제할 <see cref="P:System.IO.Packaging.PackageRelationship.Id" />의 <see cref="T:System.IO.Packaging.PackageRelationship" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;id&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="id" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The package is not open (&lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.IO.Packaging.Package.Close&quot; /&gt; has been called).">패키지가 열려 있지 않은 경우(<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 또는 <see cref="M:System.IO.Packaging.Package.Close" />가 호출된 경우)</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The package is read-only.">패키지가 읽기 전용인 경우</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;id&quot; /&gt; is not a valid XML identifier.">
        <paramref name="id" />가 올바른 XML 식별자가 아닌 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Dispose(System.Boolean)">
      <summary vsli:raw="Flushes and saves the content of all parts and relationships, closes the package, and releases all resources.">모든 파트 및 관계의 콘텐츠를 플러시 및 저장하고, 패키지를 닫고, 모든 리소스를 해제합니다.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="P:System.IO.Packaging.Package.FileOpenAccess">
      <summary vsli:raw="Gets the file access setting for the package.">패키지의 파일 액세스 설정을 가져옵니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.IO.FileAccess&quot; /&gt; values: &lt;see cref=&quot;F:System.IO.FileAccess.Read&quot; /&gt;, &lt;see cref=&quot;F:System.IO.FileAccess.Write&quot; /&gt;, or &lt;see cref=&quot;F:System.IO.FileAccess.ReadWrite&quot; /&gt;.">
        <see cref="T:System.IO.FileAccess" />의 <see cref="F:System.IO.FileAccess.Read" />, <see cref="F:System.IO.FileAccess.Write" />, 또는 <see cref="F:System.IO.FileAccess.ReadWrite" /> 값 중 하나입니다.</returns>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The package is not open (&lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.IO.Packaging.Package.Close&quot; /&gt; has been called).">패키지가 열려 있지 않은 경우(<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 또는 <see cref="M:System.IO.Packaging.Package.Close" />가 호출된 경우)</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Flush">
      <summary vsli:raw="Saves the contents of all parts and relationships that are contained in the package.">패키지에 포함된 모든 파트 및 관계의 콘텐츠를 저장합니다.</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The package is not open (&lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.IO.Packaging.Package.Close&quot; /&gt; has been called).">패키지가 열려 있지 않은 경우(<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 또는 <see cref="M:System.IO.Packaging.Package.Close" />가 호출된 경우)</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The package is read-only and cannot be modified.">패키지가 읽기 전용이며 수정할 수 없는 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.FlushCore">
      <summary vsli:raw="When overridden in a derived class, saves the content of all parts and relationships to the derived class store.">파생 클래스에 재정의되는 경우 모든 파트 및 관계의 콘텐츠를 파생 클래스 저장소에 저장합니다.</summary>
    </member>
    <member name="M:System.IO.Packaging.Package.GetPart(System.Uri)">
      <summary vsli:raw="Returns the part with a given URI.">지정된 URI의 파트를 반환합니다.</summary>
      <param name="partUri" vsli:raw="The uniform resource identifier (URI) of the part to return.">반환할 파트의 URI(Uniform Resource Identifier)입니다.</param>
      <returns vsli:raw="The part with the specified &lt;paramref name=&quot;partUri&quot; /&gt;.">지정된 <paramref name="partUri" />의 파트입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;partUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="partUri" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;partUri&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; uniform resource identifier (URI).">
        <paramref name="partUri" />는 유효한 <see cref="T:System.IO.Packaging.PackagePart" /> URI(Uniform Resource Identifier)가 아닙니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A part with the specified &lt;paramref name=&quot;partUri&quot; /&gt; is not in the package.">지정된 <paramref name="partUri" />의 파트가 패키지에 없는 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The package is not open (&lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.IO.Packaging.Package.Close&quot; /&gt; has been called).">패키지가 열려 있지 않은 경우(<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 또는 <see cref="M:System.IO.Packaging.Package.Close" />가 호출된 경우)</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The package is write-only.">패키지가 쓰기 전용인 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.GetPartCore(System.Uri)">
      <summary vsli:raw="When overridden in a derived class, returns the part addressed by a given URI.">파생 클래스에서 재정의되는 경우 지정된 URI로 확인되는 파트를 반환합니다.</summary>
      <param name="partUri" vsli:raw="The uniform resource identifier (URI) of the part to retrieve.">검색할 파트의 URI(Uniform Resource Identifier)입니다.</param>
      <returns vsli:raw="The requested part; or &lt;see langword=&quot;null&quot; /&gt;, if a part with the specified &lt;paramref name=&quot;partUri&quot; /&gt; is not in the package.">요청된 파트, 또는 지정된 <paramref name="partUri" />의 파트가 패키지에 있지 않은 경우 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.GetParts">
      <summary vsli:raw="Returns a collection of all the parts in the package.">패키지에 있는 모든 파트의 컬렉션을 반환합니다.</summary>
      <returns vsli:raw="A collection of all the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; elements that are contained in the package.">패키지에 포함된 모든 <see cref="T:System.IO.Packaging.PackagePart" /> 요소의 컬렉션입니다.</returns>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The package is not open (&lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.IO.Packaging.Package.Close&quot; /&gt; has been called).">패키지가 열려 있지 않은 경우(<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 또는 <see cref="M:System.IO.Packaging.Package.Close" />가 호출된 경우)</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The package is write-only.">패키지가 쓰기 전용인 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.GetPartsCore">
      <summary vsli:raw="When overridden in a derived class, returns an array of all the parts in the package.">파생 클래스에서 재정의되는 경우 패키지에 있는 모든 파트의 배열을 반환합니다.</summary>
      <returns vsli:raw="An array of all the parts that are contained in the package.">패키지에 포함된 모든 파트의 배열입니다.</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.GetRelationship(System.String)">
      <summary vsli:raw="Returns the package-level relationship with a given identifier.">지정된 식별자를 가진 패키지 수준 관계를 반환합니다.</summary>
      <param name="id" vsli:raw="The &lt;see cref=&quot;P:System.IO.Packaging.PackageRelationship.Id&quot; /&gt; of the relationship to return.">반환할 관계의 <see cref="P:System.IO.Packaging.PackageRelationship.Id" />입니다.</param>
      <returns vsli:raw="The package-level relationship with the specified &lt;paramref name=&quot;id&quot; /&gt;.">지정된 <paramref name="id" />의 패키지 수준 관계입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;id&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="id" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;id&quot; /&gt; is not a valid XML identifier.">
        <paramref name="id" />가 올바른 XML 식별자가 아닌 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A relationship with the specified &lt;paramref name=&quot;id&quot; /&gt; is not in the package.">지정된 <paramref name="id" />의 관계가 패키지에 없는 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The package is not open (&lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.IO.Packaging.Package.Close&quot; /&gt; has been called).">패키지가 열려 있지 않은 경우(<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 또는 <see cref="M:System.IO.Packaging.Package.Close" />가 호출된 경우)</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The package is write-only.">패키지가 쓰기 전용인 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.GetRelationships">
      <summary vsli:raw="Returns a collection of all the package-level relationships.">모든 패키지 수준 관계의 컬렉션을 반환합니다.</summary>
      <returns vsli:raw="A collection of all the package-level relationships that are contained in the package.">패키지에 포함된 모든 패키지 수준 관계의 컬렉션입니다.</returns>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The package is not open (&lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.IO.Packaging.Package.Close&quot; /&gt; has been called).">패키지가 열려 있지 않은 경우(<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 또는 <see cref="M:System.IO.Packaging.Package.Close" />가 호출된 경우)</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The package is write-only.">패키지가 쓰기 전용인 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
      <summary vsli:raw="Returns a collection of all the package-level relationships that match a given &lt;see cref=&quot;P:System.IO.Packaging.PackageRelationship.RelationshipType&quot; /&gt;.">지정된 <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />에 일치하는 모든 패키지 수준 관계의 컬렉션을 반환합니다.</summary>
      <param name="relationshipType" vsli:raw="The &lt;see cref=&quot;P:System.IO.Packaging.PackageRelationship.RelationshipType&quot; /&gt; to match and return in the collection.">컬렉션에서 일치하고 반환할 <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />입니다.</param>
      <returns vsli:raw="A collection of package-level relationships that match the specified &lt;paramref name=&quot;relationshipType&quot; /&gt;.">지정된 <paramref name="relationshipType" />에 일치하는 패키지 수준 관계의 컬렉션입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;relationshipType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="relationshipType" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;relationshipType&quot; /&gt; is an empty string.">
        <paramref name="relationshipType" />이 빈 문자열인 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The package is not open (&lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.IO.Packaging.Package.Close&quot; /&gt; has been called).">패키지가 열려 있지 않은 경우(<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 또는 <see cref="M:System.IO.Packaging.Package.Close" />가 호출된 경우)</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The package is write-only.">패키지가 쓰기 전용인 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.IO.Stream)">
      <summary vsli:raw="Opens a package on a given IO stream.">지정된 IO 스트림에서 패키지를 엽니다.</summary>
      <param name="stream" vsli:raw="The IO stream on which to open the package.">패키지를 열 IO 스트림입니다.</param>
      <returns vsli:raw="The opened package.">열린 패키지입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The package to open requires read or read/write permission and the specified &lt;paramref name=&quot;stream&quot; /&gt; is write-only; or, the package to open requires write or read/write permission and the specified &lt;paramref name=&quot;stream&quot; /&gt; is read-only.">열려는 패키지에 읽기 또는 읽기/쓰기 권한이 필요하고 지정된 <paramref name="stream" />이 읽기 전용인 경우 또는 열려는 패키지에 쓰기 또는 읽기/쓰기 권한이 필요하고 지정된 <paramref name="stream" />이 읽기 전용인 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)">
      <summary vsli:raw="Opens a package with a given IO stream and file mode.">지정된 IO 스트림 및 파일 모드를 사용하여 패키지를 엽니다.</summary>
      <param name="stream" vsli:raw="The IO stream on which to open the package.">패키지를 열 IO 스트림입니다.</param>
      <param name="packageMode" vsli:raw="The file mode in which to open the package.">패키지를 열 때 사용할 파일 모드입니다.</param>
      <returns vsli:raw="The opened package.">열린 패키지입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;packageMode&quot; /&gt; value is not valid.">
        <paramref name="packageMode" /> 값이 잘못된 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The package to open requires read or read/write permission and the specified &lt;paramref name=&quot;stream&quot; /&gt; is write-only; or, the package to open requires write or read/write permission and the specified &lt;paramref name=&quot;stream&quot; /&gt; is read-only.">열려는 패키지에 읽기 또는 읽기/쓰기 권한이 필요하고 지정된 <paramref name="stream" />이 읽기 전용인 경우 또는 열려는 패키지에 쓰기 또는 읽기/쓰기 권한이 필요하고 지정된 <paramref name="stream" />이 읽기 전용인 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)">
      <summary vsli:raw="Opens a package with a given IO stream, file mode, and file access setting.">지정된 IO 스트림, 파일 모드 및 파일 액세스 설정을 사용하여 패키지를 엽니다.</summary>
      <param name="stream" vsli:raw="The IO stream on which to open the package.">패키지를 열 IO 스트림입니다.</param>
      <param name="packageMode" vsli:raw="The file mode in which to open the package.">패키지를 열 때 사용할 파일 모드입니다.</param>
      <param name="packageAccess" vsli:raw="The file access in which to open the package.">패키지를 열 때 사용할 파일 액세스 권한입니다.</param>
      <returns vsli:raw="The opened package.">열린 패키지입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value for &lt;paramref name=&quot;packageMode&quot; /&gt; or &lt;paramref name=&quot;packageAccess&quot; /&gt; is not valid.">
        <paramref name="packageMode" /> 또는 <paramref name="packageAccess" />의 값이 올바르지 않은 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The package to open requires read or read/write permission and the specified &lt;paramref name=&quot;stream&quot; /&gt; is write-only; or the package to open requires write or read/write permission and the specified &lt;paramref name=&quot;stream&quot; /&gt; is read-only.">열려는 패키지에 읽기 또는 읽기/쓰기 권한이 필요하고 지정된 <paramref name="stream" />이 읽기 전용인 경우 또는 열려는 패키지에 쓰기 또는 읽기/쓰기 권한이 필요하고 지정된 <paramref name="stream" />이 읽기 전용인 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String)">
      <summary vsli:raw="Opens a package at a given path and file name.">지정된 경로 및 파일 이름에서 패키지를 엽니다.</summary>
      <param name="path" vsli:raw="The path and file name of the package.">패키지의 경로 및 파일 이름입니다.</param>
      <returns vsli:raw="The opened package.">열린 패키지입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="path" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)">
      <summary vsli:raw="Opens a package at a given path using a given file mode.">지정된 경로의 패키지를 지정된 파일 모드를 사용하여 엽니다.</summary>
      <param name="path" vsli:raw="The path and file name of the package.">패키지의 경로 및 파일 이름입니다.</param>
      <param name="packageMode" vsli:raw="The file mode in which to open the package.">패키지를 열 때 사용할 파일 모드입니다.</param>
      <returns vsli:raw="The opened package.">열린 패키지입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="path" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="Value for &lt;paramref name=&quot;packageMode&quot; /&gt; is not valid.">
        <paramref name="packageMode" />의 값이 올바르지 않은 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)">
      <summary vsli:raw="Opens a package at a given path using a given file mode and file access setting.">지정된 경로의 패키지를 지정된 파일 모드 및 파일 액세스 설정을 사용하여 엽니다.</summary>
      <param name="path" vsli:raw="The path and file name of the package.">패키지의 경로 및 파일 이름입니다.</param>
      <param name="packageMode" vsli:raw="The file mode in which to open the package.">패키지를 열 때 사용할 파일 모드입니다.</param>
      <param name="packageAccess" vsli:raw="The file access in which to open the package.">패키지를 열 때 사용할 파일 액세스 권한입니다.</param>
      <returns vsli:raw="The opened package.">열린 패키지입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="path" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="Value for &lt;paramref name=&quot;packageMode&quot; /&gt; or &lt;paramref name=&quot;packageAccess&quot; /&gt; is not valid.">
        <paramref name="packageMode" /> 또는 <paramref name="packageAccess" />의 값이 올바르지 않은 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
      <summary vsli:raw="Opens a package at a given path using a given file mode, file access, and file share setting.">지정된 경로의 패키지를 지정된 파일 모드, 파일 액세스 및 파일 공유 설정을 사용하여 엽니다.</summary>
      <param name="path" vsli:raw="The path and file name of the package.">패키지의 경로 및 파일 이름입니다.</param>
      <param name="packageMode" vsli:raw="The file mode in which to open the package.">패키지를 열 때 사용할 파일 모드입니다.</param>
      <param name="packageAccess" vsli:raw="The file access in which to open the package.">패키지를 열 때 사용할 파일 액세스 권한입니다.</param>
      <param name="packageShare" vsli:raw="The file sharing mode in which to open the package.">패키지를 열 때 사용할 파일 공유 모드입니다.</param>
      <returns vsli:raw="The opened package.">열린 패키지입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="path" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value for &lt;paramref name=&quot;packageMode&quot; /&gt;, &lt;paramref name=&quot;packageAccess&quot; /&gt;, or &lt;paramref name=&quot;packageShare&quot; /&gt; is not valid.">
        <paramref name="packageMode" />, <paramref name="packageAccess" /> 또는 <paramref name="packageShare" />의 값이 올바르지 않은 경우</exception>
    </member>
    <member name="P:System.IO.Packaging.Package.PackageProperties">
      <summary vsli:raw="Gets the core properties of the package.">패키지의 핵심 속성을 가져옵니다.</summary>
      <returns vsli:raw="The core properties of the package.">패키지의 핵심 속성입니다.</returns>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The package is not open (&lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.IO.Packaging.Package.Close&quot; /&gt; has been called).">패키지가 열려 있지 않은 경우(<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 또는 <see cref="M:System.IO.Packaging.Package.Close" />가 호출된 경우)</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.PartExists(System.Uri)">
      <summary vsli:raw="Indicates whether a part with a given URI is in the package.">지정된 URI의 파트가 패키지에 있는지 여부를 나타냅니다.</summary>
      <param name="partUri" vsli:raw="The &lt;see cref=&quot;T:System.Uri&quot; /&gt; of the part to check for.">확인할 파트의 <see cref="T:System.Uri" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a part with the specified &lt;paramref name=&quot;partUri&quot; /&gt; is in the package; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 <paramref name="partUri" />의 파트가 패키지에 있으면 <see langword="true" />, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;partUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="partUri" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;partUri&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; uniform resource identifier (URI).">
        <paramref name="partUri" />는 유효한 <see cref="T:System.IO.Packaging.PackagePart" /> URI(Uniform Resource Identifier)가 아닙니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The package is not open (&lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.IO.Packaging.Package.Close&quot; /&gt; has been called).">패키지가 열려 있지 않은 경우(<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 또는 <see cref="M:System.IO.Packaging.Package.Close" />가 호출된 경우)</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The package is write-only (information cannot be read).">패키지가 쓰기 전용인 경우. 이 경우 정보를 읽을 수 없습니다.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.RelationshipExists(System.String)">
      <summary vsli:raw="Indicates whether a package-level relationship with a given ID is contained in the package.">지정된 ID의 패키지 수준 관계가 패키지에 포함되어 있는지 여부를 나타냅니다.</summary>
      <param name="id" vsli:raw="The &lt;see cref=&quot;P:System.IO.Packaging.PackageRelationship.Id&quot; /&gt; of the relationship to check for.">확인할 관계의 <see cref="P:System.IO.Packaging.PackageRelationship.Id" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a package-level relationship with the specified &lt;paramref name=&quot;id&quot; /&gt; is in the package; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 <paramref name="id" />의 패키지 수준 관계가 패키지에 있으면 <see langword="true" />, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;id&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="id" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;id&quot; /&gt; is not a valid XML identifier.">
        <paramref name="id" />가 올바른 XML 식별자가 아닌 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The package is not open (&lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.IO.Packaging.Package.Close&quot; /&gt; has been called).">패키지가 열려 있지 않은 경우(<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 또는 <see cref="M:System.IO.Packaging.Package.Close" />가 호출된 경우)</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The package is write-only.">패키지가 쓰기 전용인 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.System#IDisposable#Dispose">
      <summary vsli:raw="This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended for application use.  Use the type-safe &lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; method instead.">이 멤버는 WPF(Windows Presentation Foundation) 인프라를 지원하는 것으로 애플리케이션에서는 사용하지 않는 것이 좋습니다.  형식이 안전한 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 메서드를 대신 사용하세요.</summary>
    </member>
    <member name="T:System.IO.Packaging.PackagePart">
      <summary vsli:raw="Provides a base class for parts stored in a &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.  This class is abstract.">
        <see cref="T:System.IO.Packaging.Package" />에 저장되는 파트에 대한 기본 클래스를 제공합니다.  이 클래스는 추상 클래스입니다.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; class with a specified parent &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.Package&quot; /&gt; and part URI.">지정된 부모 <see cref="T:System.IO.Packaging.PackagePart" /> 및 파트 URI를 사용하여 <see cref="P:System.IO.Packaging.PackagePart.Package" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="package" vsli:raw="The parent &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; of the part.">파트의 부모 <see cref="T:System.IO.Packaging.Package" />입니다.</param>
      <param name="partUri" vsli:raw="The URI of the part, relative to the parent &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; root.">부모 <see cref="T:System.IO.Packaging.Package" /> 루트에 상대적인 파트의 URI입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;package&quot; /&gt; or &lt;paramref name=&quot;partUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="package" /> 또는 <paramref name="partUri" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; class with a specified parent &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.Package&quot; /&gt;, part URI, and MIME content type.">지정된 부모 <see cref="T:System.IO.Packaging.PackagePart" />, 파트 URI 및 MIME 콘텐츠 형식을 사용하여 <see cref="P:System.IO.Packaging.PackagePart.Package" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="package" vsli:raw="The parent &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; of the part.">파트의 부모 <see cref="T:System.IO.Packaging.Package" />입니다.</param>
      <param name="partUri" vsli:raw="The URI of the part, relative to the parent &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; root.">부모 <see cref="T:System.IO.Packaging.Package" /> 루트에 상대적인 파트의 URI입니다.</param>
      <param name="contentType" vsli:raw="The MIME content type of the part data stream.">파트 데이터 스트림의 MIME 콘텐츠 형식입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;package&quot; /&gt; or &lt;paramref name=&quot;partUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="package" /> 또는 <paramref name="partUri" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;partUri&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; URI.">
        <paramref name="partUri" />는 유효한 <see cref="T:System.IO.Packaging.PackagePart" /> URI가 아닙니다.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String,System.IO.Packaging.CompressionOption)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; class with a specified parent &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.Package&quot; /&gt;, part URI, MIME content type, and &lt;see cref=&quot;T:System.IO.Packaging.CompressionOption&quot; /&gt;.">지정된 부모 <see cref="T:System.IO.Packaging.PackagePart" />, 파트 URI, MIME 콘텐츠 형식 및 <see cref="P:System.IO.Packaging.PackagePart.Package" />을 사용하여 <see cref="T:System.IO.Packaging.CompressionOption" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="package" vsli:raw="The parent &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; of the part.">파트의 부모 <see cref="T:System.IO.Packaging.Package" />입니다.</param>
      <param name="partUri" vsli:raw="The URI of the part, relative to the parent &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; root.">부모 <see cref="T:System.IO.Packaging.Package" /> 루트에 상대적인 파트의 URI입니다.</param>
      <param name="contentType" vsli:raw="The MIME content type of the part's data stream.">파트 데이터 스트림의 MIME 콘텐츠 형식입니다.</param>
      <param name="compressionOption" vsli:raw="The compression option of the part data stream.">파트 데이터 스트림의 압축 옵션입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;package&quot; /&gt; or &lt;paramref name=&quot;partUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="package" /> 또는 <paramref name="partUri" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;partUri&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; URI.">
        <paramref name="partUri" />는 유효한 <see cref="T:System.IO.Packaging.PackagePart" /> URI가 아닙니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;compressionOption&quot; /&gt; value is not valid.">
        <paramref name="compressionOption" /> 값이 올바르지 않은 경우</exception>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.CompressionOption">
      <summary vsli:raw="Gets the compression option of the part content stream.">파트 콘텐츠 스트림의 압축 옵션을 가져옵니다.</summary>
      <returns vsli:raw="The compression option of the part content stream.">파트 콘텐츠 스트림의 압축 옵션입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The part has been deleted.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.Package&quot; /&gt; is not open (&lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.IO.Packaging.Package.Close&quot; /&gt; has been called).">파트가 삭제된 경우  
또는 
<see cref="P:System.IO.Packaging.PackagePart.Package" />가 열려 있지 않은 경우(<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 또는 <see cref="M:System.IO.Packaging.Package.Close" />가 호출된 경우)</exception>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.ContentType">
      <summary vsli:raw="Gets the MIME type of the content stream.">콘텐츠 스트림의 MIME 형식을 가져옵니다.</summary>
      <returns vsli:raw="The MIME type of the content data stream for the part.">파트에 대한 콘텐츠 데이터 스트림의 MIME 형식입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The part has been deleted.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.Package&quot; /&gt; is not open (&lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.IO.Packaging.Package.Close&quot; /&gt; has been called).  &#xA;  &#xA; -or-  &#xA;  &#xA; The string returned by the derived class &lt;see cref=&quot;M:System.IO.Packaging.PackagePart.GetContentTypeCore&quot; /&gt; method is empty.">파트가 삭제된 경우  
또는 
<see cref="P:System.IO.Packaging.PackagePart.Package" />가 열려 있지 않은 경우(<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 또는 <see cref="M:System.IO.Packaging.Package.Close" />가 호출된 경우)  
또는 
파생 클래스의 <see cref="M:System.IO.Packaging.PackagePart.GetContentTypeCore" /> 메서드에서 반환한 문자열이 비어 있는 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
      <summary vsli:raw="Creates a part-level relationship between this &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; to a specified target &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; or external resource.">이 <see cref="T:System.IO.Packaging.PackagePart" />와 지정된 대상 <see cref="T:System.IO.Packaging.PackagePart" /> 또는 외부 리소스 간의 파트 수준 관계를 만듭니다.</summary>
      <param name="targetUri" vsli:raw="The URI of the target part.">대상 파트의 URI입니다.</param>
      <param name="targetMode" vsli:raw="One of the enumeration values. For example, &lt;see cref=&quot;F:System.IO.Packaging.TargetMode.Internal&quot; /&gt; if the target part is inside the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;; or &lt;see cref=&quot;F:System.IO.Packaging.TargetMode.External&quot; /&gt; if the target is a resource outside the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">열거형 값 중 하나입니다. 예를 들어 대상 파트가 <see cref="F:System.IO.Packaging.TargetMode.Internal" /> 내부에 있으면 <see cref="T:System.IO.Packaging.Package" />이고, 대상이 <see cref="F:System.IO.Packaging.TargetMode.External" /> 외부의 리소스이면 <see cref="T:System.IO.Packaging.Package" />입니다.</param>
      <param name="relationshipType" vsli:raw="The role of the relationship.">관계의 역할입니다.</param>
      <returns vsli:raw="The part-level relationship between this &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; to the target &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; or external resource.">이 <see cref="T:System.IO.Packaging.PackagePart" />와 대상 <see cref="T:System.IO.Packaging.PackagePart" /> 또는 외부 리소스 간의 파트 수준 관계입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The part has been deleted.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.Package&quot; /&gt; is not open (&lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.IO.Packaging.Package.Close&quot; /&gt; has been called).">파트가 삭제된 경우  
또는 
<see cref="P:System.IO.Packaging.PackagePart.Package" />가 열려 있지 않은 경우(<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 또는 <see cref="M:System.IO.Packaging.Package.Close" />가 호출된 경우)</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;targetUri&quot; /&gt; or &lt;paramref name=&quot;relationshipType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="targetUri" /> 또는 <paramref name="relationshipType" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;targetMode&quot; /&gt; parameter is not a valid &lt;see cref=&quot;T:System.IO.Packaging.TargetMode&quot; /&gt; enumeration value.">
        <paramref name="targetMode" /> 매개 변수가 유효한 <see cref="T:System.IO.Packaging.TargetMode" /> 열거형 값이 아닌 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The part identified by the &lt;paramref name=&quot;targetUri&quot; /&gt; is a relationship (the target of a relationship cannot be another relationship).  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;targetMode&quot; /&gt; is specified as &lt;see cref=&quot;F:System.IO.Packaging.TargetMode.Internal&quot; /&gt; but &lt;paramref name=&quot;targetUri&quot; /&gt; is an absolute external URI.">
        <paramref name="targetUri" />로 식별된 파트가 관계인 경우. 관계의 대상은 다른 관계가 될 수 없습니다.  
또는 
 <paramref name="targetMode" />가 <see cref="F:System.IO.Packaging.TargetMode.Internal" />로 지정되었지만 <paramref name="targetUri" />가 절대적인 외부 URI인 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The package is read-only (a new relationship cannot be added).">패키지가 읽기 전용인 경우. 이 경우 새 관계를 추가할 수 없습니다.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
      <summary vsli:raw="Creates a part-level relationship between this &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; to a specified target &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; or external resource.">이 <see cref="T:System.IO.Packaging.PackagePart" />와 지정된 대상 <see cref="T:System.IO.Packaging.PackagePart" /> 또는 외부 리소스 간의 파트 수준 관계를 만듭니다.</summary>
      <param name="targetUri" vsli:raw="The URI of the target part.">대상 파트의 URI입니다.</param>
      <param name="targetMode" vsli:raw="One of the enumeration values. For example, &lt;see cref=&quot;F:System.IO.Packaging.TargetMode.Internal&quot; /&gt; if the target part is inside the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;; or &lt;see cref=&quot;F:System.IO.Packaging.TargetMode.External&quot; /&gt; if the target is a resource outside the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">열거형 값 중 하나입니다. 예를 들어 대상 파트가 <see cref="F:System.IO.Packaging.TargetMode.Internal" /> 내부에 있으면 <see cref="T:System.IO.Packaging.Package" />이고, 대상이 <see cref="F:System.IO.Packaging.TargetMode.External" /> 외부의 리소스이면 <see cref="T:System.IO.Packaging.Package" />입니다.</param>
      <param name="relationshipType" vsli:raw="The role of the relationship.">관계의 역할입니다.</param>
      <param name="id" vsli:raw="A unique ID for the relationship.">관계의 고유 ID입니다.</param>
      <returns vsli:raw="The part-level relationship between this &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; to the target &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; or external resource.">이 <see cref="T:System.IO.Packaging.PackagePart" />와 대상 <see cref="T:System.IO.Packaging.PackagePart" /> 또는 외부 리소스 간의 파트 수준 관계입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The part has been deleted.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.Package&quot; /&gt; is not open (&lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.IO.Packaging.Package.Close&quot; /&gt; has been called).">파트가 삭제된 경우  
또는 
<see cref="P:System.IO.Packaging.PackagePart.Package" />가 열려 있지 않은 경우(<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 또는 <see cref="M:System.IO.Packaging.Package.Close" />가 호출된 경우)</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;targetUri&quot; /&gt; or &lt;paramref name=&quot;relationshipType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="targetUri" /> 또는 <paramref name="relationshipType" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;targetMode&quot; /&gt; parameter is not a valid &lt;see cref=&quot;T:System.IO.Packaging.TargetMode&quot; /&gt; enumeration value.">
        <paramref name="targetMode" /> 매개 변수가 유효한 <see cref="T:System.IO.Packaging.TargetMode" /> 열거형 값이 아닌 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The part identified by the &lt;paramref name=&quot;targetUri&quot; /&gt; is a relationship (the target of a relationship cannot be another relationship).  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;targetMode&quot; /&gt; is specified as &lt;see cref=&quot;F:System.IO.Packaging.TargetMode.Internal&quot; /&gt; but &lt;paramref name=&quot;targetUri&quot; /&gt; is an absolute external URI.">
        <paramref name="targetUri" />로 식별된 파트가 관계인 경우. 관계의 대상은 다른 관계가 될 수 없습니다.  
또는 
 <paramref name="targetMode" />가 <see cref="F:System.IO.Packaging.TargetMode.Internal" />로 지정되었지만 <paramref name="targetUri" />가 절대적인 외부 URI인 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The package is read-only (a new relationship cannot be added).">패키지가 읽기 전용인 경우. 이 경우 새 관계를 추가할 수 없습니다.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;id&quot; /&gt; is not a valid XML identifier.  &#xA;  &#xA; -or-  &#xA;  &#xA; A part with the specified &lt;paramref name=&quot;id&quot; /&gt; already exists.">
        <paramref name="id" />가 올바른 XML 식별자가 아닌 경우  
또는 
지정된 <paramref name="id" />의 파트가 이미 있는 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.DeleteRelationship(System.String)">
      <summary vsli:raw="Deletes a specified part-level &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt;.">지정된 파트 수준 <see cref="T:System.IO.Packaging.PackageRelationship" />을 삭제합니다.</summary>
      <param name="id" vsli:raw="The &lt;see cref=&quot;P:System.IO.Packaging.PackageRelationship.Id&quot; /&gt; of the relationship to delete.">삭제할 관계의 <see cref="P:System.IO.Packaging.PackageRelationship.Id" />입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The part has been deleted.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.Package&quot; /&gt; is not open (&lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.IO.Packaging.Package.Close&quot; /&gt; has been called).">파트가 삭제된 경우  
또는 
<see cref="P:System.IO.Packaging.PackagePart.Package" />가 열려 있지 않은 경우(<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 또는 <see cref="M:System.IO.Packaging.Package.Close" />가 호출된 경우)</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;id&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="id" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The package is read-only (relationships cannot be deleted).">패키지가 읽기 전용인 경우. 이 경우 관계를 삭제할 수 없습니다.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;id&quot; /&gt; is not a valid XML identifier.">
        <paramref name="id" />가 올바른 XML 식별자가 아닌 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetContentTypeCore">
      <summary vsli:raw="When overridden in a derived class, returns the MIME type of the part content.">파생 클래스에서 재정의되는 경우 파트 콘텐츠의 MIME 형식을 반환합니다.</summary>
      <returns vsli:raw="The MIME type of the part content.">파트 콘텐츠의 MIME 형식입니다.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The derived class does not provide an override implementation required for the &lt;see cref=&quot;M:System.IO.Packaging.PackagePart.GetContentTypeCore&quot; /&gt; method.">파생 클래스는 <see cref="M:System.IO.Packaging.PackagePart.GetContentTypeCore" /> 메서드에 필요한 재정의 구현을 제공하지 않습니다.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetRelationship(System.String)">
      <summary vsli:raw="Returns the relationship that has a specified &lt;see cref=&quot;P:System.IO.Packaging.PackageRelationship.Id&quot; /&gt;.">지정된 <see cref="P:System.IO.Packaging.PackageRelationship.Id" />의 관계를 반환합니다.</summary>
      <param name="id" vsli:raw="The &lt;see cref=&quot;P:System.IO.Packaging.PackageRelationship.Id&quot; /&gt; of the relationship to return.">반환할 관계의 <see cref="P:System.IO.Packaging.PackageRelationship.Id" />입니다.</param>
      <returns vsli:raw="The relationship that matches the specified &lt;paramref name=&quot;id&quot; /&gt;.">지정된 <paramref name="id" />와 일치하는 관계입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;id&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="id" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;id&quot; /&gt; is not a valid XML identifier.">
        <paramref name="id" />가 올바른 XML 식별자가 아닌 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;relationshipType&quot; /&gt; is an empty string.">
        <paramref name="relationshipType" />이 빈 문자열인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The part has been deleted.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.Package&quot; /&gt; is not open (&lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.IO.Packaging.Package.Close&quot; /&gt; has been called).  &#xA;  &#xA; -or-  &#xA;  &#xA; A relationship with the specified &lt;paramref name=&quot;id&quot; /&gt; does not exist in the package.">파트가 삭제된 경우  
또는 
<see cref="P:System.IO.Packaging.PackagePart.Package" />가 열려 있지 않은 경우(<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 또는 <see cref="M:System.IO.Packaging.Package.Close" />가 호출된 경우)  
또는 
지정된 <paramref name="id" />의 관계가 패키지에 없는 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The package is write-only (relationship information cannot be read).">패키지가 쓰기 전용인 경우. 이 경우 관계 정보를 읽을 수 없습니다.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetRelationships">
      <summary vsli:raw="Returns a collection of all the relationships that are owned by this part.">이 파트에서 소유한 모든 관계의 컬렉션을 반환합니다.</summary>
      <returns vsli:raw="A collection of all the relationships that are owned by the part.">이 파트에서 소유한 모든 관계의 컬렉션입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The part has been deleted.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.Package&quot; /&gt; is not open (&lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.IO.Packaging.Package.Close&quot; /&gt; has been called).">파트가 삭제된 경우  
또는 
<see cref="P:System.IO.Packaging.PackagePart.Package" />가 열려 있지 않은 경우(<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 또는 <see cref="M:System.IO.Packaging.Package.Close" />가 호출된 경우)</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The package is write-only (relationship information cannot be read).">패키지가 쓰기 전용인 경우. 이 경우 관계 정보를 읽을 수 없습니다.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)">
      <summary vsli:raw="Returns a collection of the relationships that match a specified &lt;see cref=&quot;P:System.IO.Packaging.PackageRelationship.RelationshipType&quot; /&gt;.">지정된 <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />과 일치하는 관계의 컬렉션을 반환합니다.</summary>
      <param name="relationshipType" vsli:raw="The &lt;see cref=&quot;P:System.IO.Packaging.PackageRelationship.RelationshipType&quot; /&gt; of the relationships to locate and return in the collection.">컬렉션에서 찾아서 반환할 관계의 <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />입니다.</param>
      <returns vsli:raw="A collection of the relationships that match the specified &lt;paramref name=&quot;relationshipType&quot; /&gt;.">지정된 <paramref name="relationshipType" />과 일치하는 관계의 컬렉션입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;relationshipType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="relationshipType" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;relationshipType&quot; /&gt; is an empty string.">
        <paramref name="relationshipType" />이 빈 문자열인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The part has been deleted.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.Package&quot; /&gt; is not open (&lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.IO.Packaging.Package.Close&quot; /&gt; has been called).">파트가 삭제된 경우  
또는 
<see cref="P:System.IO.Packaging.PackagePart.Package" />가 열려 있지 않은 경우(<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 또는 <see cref="M:System.IO.Packaging.Package.Close" />가 호출된 경우)</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The package is write-only (relationship information cannot be read).">패키지가 쓰기 전용인 경우. 이 경우 관계 정보를 읽을 수 없습니다.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStream">
      <summary vsli:raw="Returns the part content data stream.">파트 콘텐츠 데이터 스트림을 반환합니다.</summary>
      <returns vsli:raw="The content data stream for the part.">파트의 콘텐츠 데이터 스트림입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The part has been deleted.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.Package&quot; /&gt; is not open (&lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.IO.Packaging.Package.Close&quot; /&gt; has been called).">파트가 삭제된 경우  
또는 
<see cref="P:System.IO.Packaging.PackagePart.Package" />가 열려 있지 않은 경우(<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 또는 <see cref="M:System.IO.Packaging.Package.Close" />가 호출된 경우)</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The stream object returned by the &lt;see cref=&quot;M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)&quot; /&gt; method of the derived subclass is &lt;see langword=&quot;null&quot; /&gt;.">파생된 서브클래스의 <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> 메서드에서 반환한 스트림 개체가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode)">
      <summary vsli:raw="Returns the content stream opened in a specified I/O &lt;see cref=&quot;T:System.IO.FileMode&quot; /&gt;.">지정된 I/O <see cref="T:System.IO.FileMode" />에서 열린 콘텐츠 스트림을 반환합니다.</summary>
      <param name="mode" vsli:raw="The I/O mode in which to open the content stream.">콘텐츠 스트림을 열 I/O 모드입니다.</param>
      <returns vsli:raw="The content stream of the part.">파트의 콘텐츠 스트림입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The part has been deleted.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.Package&quot; /&gt; is not open (&lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.IO.Packaging.Package.Close&quot; /&gt; has been called).">파트가 삭제된 경우  
또는 
<see cref="P:System.IO.Packaging.PackagePart.Package" />가 열려 있지 않은 경우(<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 또는 <see cref="M:System.IO.Packaging.Package.Close" />가 호출된 경우)</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;mode&quot; /&gt; parameter is not a valid &lt;see cref=&quot;T:System.IO.FileMode&quot; /&gt; enumeration value.">
        <paramref name="mode" /> 매개 변수가 유효한 <see cref="T:System.IO.FileMode" /> 열거형 값이 아닌 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The &lt;paramref name=&quot;mode&quot; /&gt; parameter is not compatible with the package and part stream.  &#xA;  &#xA; -or-  &#xA;  &#xA; The stream object returned by the &lt;see cref=&quot;M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)&quot; /&gt; method of the derived subclass is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="mode" /> 매개 변수가 패키지 및 파트 스트림과 호환되지 않는 경우  
또는 
파생된 서브클래스의 <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> 메서드에서 반환한 스트림 개체가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode,System.IO.FileAccess)">
      <summary vsli:raw="Returns the part content stream opened with a specified &lt;see cref=&quot;T:System.IO.FileMode&quot; /&gt; and &lt;see cref=&quot;T:System.IO.FileAccess&quot; /&gt;.">지정된 <see cref="T:System.IO.FileMode" /> 및 <see cref="T:System.IO.FileAccess" />로 열린 파트 콘텐츠 스트림을 반환합니다.</summary>
      <param name="mode" vsli:raw="The I/O mode in which to open the content stream.">콘텐츠 스트림을 열 I/O 모드입니다.</param>
      <param name="access" vsli:raw="The access permissions to use in opening the content stream.">콘텐츠 스트림을 열 때 사용하는 액세스 권한입니다.</param>
      <returns vsli:raw="The content stream for the part.">파트의 콘텐츠 스트림입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The part has been deleted.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.Package&quot; /&gt; is not open (&lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.IO.Packaging.Package.Close&quot; /&gt; has been called).">파트가 삭제된 경우  
또는 
<see cref="P:System.IO.Packaging.PackagePart.Package" />가 열려 있지 않은 경우(<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 또는 <see cref="M:System.IO.Packaging.Package.Close" />가 호출된 경우)</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;mode&quot; /&gt; parameter is not a valid &lt;see cref=&quot;T:System.IO.FileMode&quot; /&gt; enumeration value.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;access&quot; /&gt; parameter is not a valid &lt;see cref=&quot;T:System.IO.FileAccess&quot; /&gt; enumeration value.">
        <paramref name="mode" /> 매개 변수가 유효한 <see cref="T:System.IO.FileMode" /> 열거형 값이 아닌 경우  
또는 
<paramref name="access" /> 매개 변수가 유효한 <see cref="T:System.IO.FileAccess" /> 열거형 값이 아닌 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;mode&quot; /&gt; or &lt;paramref name=&quot;access&quot; /&gt; is not compatible with the package and part stream.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;access&quot; /&gt; parameter is specified as &lt;see cref=&quot;F:System.IO.FileAccess.Read&quot; /&gt; but the &lt;paramref name=&quot;mode&quot; /&gt; parameter requires write access.  (&lt;see cref=&quot;T:System.IO.FileMode&quot; /&gt; values of &lt;see cref=&quot;F:System.IO.FileMode.Create&quot; /&gt;, &lt;see cref=&quot;F:System.IO.FileMode.CreateNew&quot; /&gt;, &lt;see cref=&quot;F:System.IO.FileMode.Truncate&quot; /&gt;, and &lt;see cref=&quot;F:System.IO.FileMode.Append&quot; /&gt; require &lt;see cref=&quot;F:System.IO.FileAccess.Write&quot; /&gt; or &lt;see cref=&quot;F:System.IO.FileAccess.ReadWrite&quot; /&gt; access.)  &#xA;  &#xA; -or-  &#xA;  &#xA; The stream object returned by the &lt;see cref=&quot;M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)&quot; /&gt; method of the derived subclass is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="mode" /> 또는 <paramref name="access" />가 패키지 및 파트 스트림과 호환되지 않는 경우  
또는 
<paramref name="access" /> 매개 변수가 <see cref="F:System.IO.FileAccess.Read" />로 지정되었지만 <paramref name="mode" /> 매개 변수에서 쓰기 권한을 필요로 하는 경우.  <see cref="T:System.IO.FileMode" />, <see cref="F:System.IO.FileMode.Create" />, <see cref="F:System.IO.FileMode.CreateNew" />, 그리고 <see cref="F:System.IO.FileMode.Truncate" />의 <see cref="F:System.IO.FileMode.Append" /> 값에는 <see cref="F:System.IO.FileAccess.Write" /> 또는 <see cref="F:System.IO.FileAccess.ReadWrite" /> 액세스가 필요합니다. 
또는 
파생된 서브클래스의 <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> 메서드에서 반환한 스트림 개체가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)">
      <summary vsli:raw="When overridden in a derived class, returns the part content stream opened with a specified &lt;see cref=&quot;T:System.IO.FileMode&quot; /&gt; and &lt;see cref=&quot;T:System.IO.FileAccess&quot; /&gt;.">파생 클래스에서 재정의되는 경우 지정된 <see cref="T:System.IO.FileMode" /> 및 <see cref="T:System.IO.FileAccess" />로 열린 파트 콘텐츠 스트림을 반환합니다.</summary>
      <param name="mode" vsli:raw="The I/O mode in which to open the content stream.">콘텐츠 스트림을 열 I/O 모드입니다.</param>
      <param name="access" vsli:raw="The access permissions to use in opening the content stream.">콘텐츠 스트림을 열 때 사용하는 액세스 권한입니다.</param>
      <returns vsli:raw="The content data stream of the part.">파트의 콘텐츠 데이터 스트림입니다.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.Package">
      <summary vsli:raw="Gets the parent &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; of the part.">파트의 부모 <see cref="T:System.IO.Packaging.Package" />를 가져옵니다.</summary>
      <returns vsli:raw="The parent package of the part.">파트의 부모 패키지입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The part has been deleted.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.Package&quot; /&gt; is not open (&lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.IO.Packaging.Package.Close&quot; /&gt; has been called).">파트가 삭제된 경우  
또는 
<see cref="P:System.IO.Packaging.PackagePart.Package" />가 열려 있지 않은 경우(<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 또는 <see cref="M:System.IO.Packaging.Package.Close" />가 호출된 경우)</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.RelationshipExists(System.String)">
      <summary vsli:raw="Returns a value that indicates whether this part owns a relationship with a specified &lt;see cref=&quot;P:System.IO.Packaging.PackageRelationship.Id&quot; /&gt;.">지정된 <see cref="P:System.IO.Packaging.PackageRelationship.Id" />의 관계를 이 파트가 소유하는지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="id" vsli:raw="The &lt;see cref=&quot;P:System.IO.Packaging.PackageRelationship.Id&quot; /&gt; of the relationship to check for.">확인할 관계의 <see cref="P:System.IO.Packaging.PackageRelationship.Id" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this part owns a relationship with the specified &lt;paramref name=&quot;id&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 <paramref name="id" />의 관계를 이 파트가 소유하는 경우에는 <see langword="true" />이고 그렇지 않은 경우에는 <see langword="false" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;id&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="id" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;id&quot; /&gt; is not a valid XML identifier.">
        <paramref name="id" />가 올바른 XML 식별자가 아닌 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The part has been deleted.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.Package&quot; /&gt; is not open (&lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.IO.Packaging.Package.Close&quot; /&gt; has been called).">파트가 삭제된 경우  
또는 
<see cref="P:System.IO.Packaging.PackagePart.Package" />가 열려 있지 않은 경우(<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 또는 <see cref="M:System.IO.Packaging.Package.Close" />가 호출된 경우)</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The package is write-only (relationship information cannot be read).">패키지가 쓰기 전용인 경우. 이 경우 관계 정보를 읽을 수 없습니다.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.Uri">
      <summary vsli:raw="Gets the URI of the part.">파트의 URI를 가져옵니다.</summary>
      <returns vsli:raw="The URI of the part relative to the package root.">URI 패키지 루트에 상대적인 파트의 합니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The part has been deleted.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.Package&quot; /&gt; is not open (&lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.IO.Packaging.Package.Close&quot; /&gt; has been called).">파트가 삭제된 경우  
또는 
<see cref="P:System.IO.Packaging.PackagePart.Package" />가 열려 있지 않은 경우(<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 또는 <see cref="M:System.IO.Packaging.Package.Close" />가 호출된 경우)</exception>
    </member>
    <member name="T:System.IO.Packaging.PackagePartCollection">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; objects.">
        <see cref="T:System.IO.Packaging.PackagePart" /> 개체의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackagePartCollection.GetEnumerator">
      <summary vsli:raw="Returns an enumerator for iterating through the parts in the collection.">컬렉션의 파트를 반복하는 데 사용할 열거자를 반환합니다.</summary>
      <returns vsli:raw="An enumerator for iterating through the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; elements in the collection.">컬렉션의 <see cref="T:System.IO.Packaging.PackagePart" /> 요소를 반복하는 데 사용할 열거자입니다.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackagePartCollection.System#Collections#Generic#IEnumerable{System#IO#Packaging#PackagePart}#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the collection.">컬렉션을 반복하는 열거자를 반환합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerator`1&quot; /&gt; object that can be used to iterate through the collection.">컬렉션을 반복하는 데 사용할 수 있는 <see cref="T:System.Collections.Generic.IEnumerator`1" /> 개체입니다.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackagePartCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IEnumerable.GetEnumerator&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.Collections.IEnumerable.GetEnumerator" />를 참조하세요.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object that can be used to iterate through the collection.">컬렉션을 반복하는 데 사용할 수 있는 <see cref="T:System.Collections.IEnumerator" /> 개체입니다.</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageProperties">
      <summary vsli:raw="Represents the core properties of a &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">
        <see cref="T:System.IO.Packaging.Package" />의 핵심 속성을 나타냅니다.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageProperties.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Packaging.PackageProperties&quot; /&gt; class.">
        <see cref="T:System.IO.Packaging.PackageProperties" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Category">
      <summary vsli:raw="When overridden in a derived class, gets or sets the category of the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">파생 클래스에서 재정의되는 경우 <see cref="T:System.IO.Packaging.Package" />의 범주를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The category of the content that is contained in the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">
        <see cref="T:System.IO.Packaging.Package" />에 들어 있는 콘텐츠의 범주입니다.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.ContentStatus">
      <summary vsli:raw="When overridden in a derived class, gets or sets a value that represents the status of the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">파생 클래스에서 재정의되는 경우 <see cref="T:System.IO.Packaging.Package" />의 상태를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The status of the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; content.">
        <see cref="T:System.IO.Packaging.Package" /> 콘텐츠의 상태입니다.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.ContentType">
      <summary vsli:raw="When overridden in a derived class, gets or sets a value that represents the type of content that is contained in the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">파생 클래스에서 재정의되는 경우 <see cref="T:System.IO.Packaging.Package" />에 들어 있는 콘텐츠의 형식을 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The type of content that is contained in the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">
        <see cref="T:System.IO.Packaging.Package" />에 들어 있는 콘텐츠의 형식입니다.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Created">
      <summary vsli:raw="When overridden in a derived class, gets or sets the date and time the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; was created.">파생 클래스에서 재정의되는 경우 <see cref="T:System.IO.Packaging.Package" />를 만든 날짜와 시간을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The date and time the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; was initially created.">처음에 <see cref="T:System.IO.Packaging.Package" />를 만든 날짜와 시간입니다.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Creator">
      <summary vsli:raw="When overridden in a derived class, gets or sets a value that identifies the individual or entity that created the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; and its content.">파생 클래스에서 재정의되는 경우 <see cref="T:System.IO.Packaging.Package" /> 및 해당 콘텐츠를 만든 개인이나 엔터티를 식별하는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The individual or entity that created the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; and its content.">
        <see cref="T:System.IO.Packaging.Package" /> 및 해당 콘텐츠를 만든 개인 또는 엔터티입니다.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Description">
      <summary vsli:raw="When overridden in a derived class, gets or sets a description of the content contained in the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">파생 클래스에서 재정의되는 경우 <see cref="T:System.IO.Packaging.Package" />에 들어 있는 콘텐츠에 대한 설명을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A description of the content contained in the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">
        <see cref="T:System.IO.Packaging.Package" />에 들어 있는 콘텐츠에 대한 설명입니다.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageProperties.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.IO.Packaging.PackageProperties&quot; /&gt; instance.">
        <see cref="T:System.IO.Packaging.PackageProperties" /> 인스턴스에 사용된 모든 리소스를 해제합니다.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageProperties.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.IO.Packaging.PackageProperties&quot; /&gt; instance and optionally releases the managed resources.">
        <see cref="T:System.IO.Packaging.PackageProperties" /> 인스턴스에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제합니다.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Identifier">
      <summary vsli:raw="When overridden in a derived class, gets or sets a value that unambiguously identifies the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; and its content.">파생 클래스에서 재정의되는 경우 <see cref="T:System.IO.Packaging.Package" /> 및 해당 콘텐츠를 명확하게 식별하는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A value that unambiguously identifies the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; and its content.">
        <see cref="T:System.IO.Packaging.Package" /> 및 해당 콘텐츠를 명확하게 식별하는 값입니다.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Keywords">
      <summary vsli:raw="When overridden in a derived class, gets or sets a value that define a delimited set of keywords to support searching and indexing the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; and its content.">파생 클래스에서 재정의되는 경우 <see cref="T:System.IO.Packaging.Package" /> 및 해당 콘텐츠의 검색 및 인덱싱을 지원하는 한정된 키워드 집합을 정의하는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A delimited set of keywords to support searching and indexing the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; and content.">
        <see cref="T:System.IO.Packaging.Package" /> 및 해당 콘텐츠의 검색 및 인덱싱을 지원하는 한정된 키워드 집합입니다.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Language">
      <summary vsli:raw="When overridden in a derived class, gets or sets a value that identifies the language of the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; content.">파생 클래스에서 재정의되는 경우 <see cref="T:System.IO.Packaging.Package" /> 콘텐츠의 언어를 식별하는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A value that identifies the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; content language.">
        <see cref="T:System.IO.Packaging.Package" /> 콘텐츠 언어를 식별하는 값입니다.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.LastModifiedBy">
      <summary vsli:raw="When overridden in a derived class, gets or sets a value that identifies the user who last modified the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; content.">파생 클래스에서 재정의되는 경우 <see cref="T:System.IO.Packaging.Package" /> 콘텐츠를 마지막으로 수정한 사용자를 식별하는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The user who last modified the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; content.">
        <see cref="T:System.IO.Packaging.Package" /> 콘텐츠를 마지막으로 수정한 사용자입니다.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.LastPrinted">
      <summary vsli:raw="When overridden in a derived class, gets or sets the date and time the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; content was last printed.">파생 클래스에서 재정의되는 경우 <see cref="T:System.IO.Packaging.Package" /> 콘텐츠를 마지막으로 인쇄한 날짜와 시간을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The date and time the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; content was last printed.">
        <see cref="T:System.IO.Packaging.Package" /> 콘텐츠를 마지막으로 인쇄한 날짜와 시간입니다.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Modified">
      <summary vsli:raw="When overridden in a derived class, gets or sets the date and time the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; was last changed.">파생 클래스에서 재정의되는 경우 <see cref="T:System.IO.Packaging.Package" />를 마지막으로 변경한 날짜와 시간을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The date and time the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; was last changed.">
        <see cref="T:System.IO.Packaging.Package" />를 마지막으로 변경한 날짜와 시간입니다.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Revision">
      <summary vsli:raw="When overridden in a derived class, gets or sets the revision number of the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">파생 클래스에서 재정의되는 경우 <see cref="T:System.IO.Packaging.Package" />의 수정 번호를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The revision number of the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">
        <see cref="T:System.IO.Packaging.Package" />의 수정 번호입니다.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Subject">
      <summary vsli:raw="When overridden in a derived class, gets or sets the topic of the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; content.">파생 클래스에서 재정의되는 경우 <see cref="T:System.IO.Packaging.Package" /> 콘텐츠의 항목을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The topic of the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; content.">
        <see cref="T:System.IO.Packaging.Package" /> 콘텐츠의 항목입니다.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Title">
      <summary vsli:raw="When overridden in a derived class, gets or sets the name given to the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; and its content.">파생 클래스에서 재정의되는 경우 <see cref="T:System.IO.Packaging.Package" /> 및 해당 콘텐츠에 지정된 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name given to the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; and its content.">
        <see cref="T:System.IO.Packaging.Package" /> 및 해당 콘텐츠에 지정된 이름입니다.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Version">
      <summary vsli:raw="When overridden in a derived class, gets or sets the version number of the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">파생 클래스에서 재정의되는 경우 <see cref="T:System.IO.Packaging.Package" />의 버전 번호를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The version number of the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">
        <see cref="T:System.IO.Packaging.Package" />의 버전 번호입니다.</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationship">
      <summary vsli:raw="Represents an association between a source &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; or &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt;, and a target object which can be a &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; or external resource.">소스 <see cref="T:System.IO.Packaging.Package" /> 또는 <see cref="T:System.IO.Packaging.PackagePart" />와 대상 개체 사이의 연결을 나타냅니다. 대상 개체는 <see cref="T:System.IO.Packaging.PackagePart" /> 또는 외부 리소스일 수 있습니다.</summary>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.Id">
      <summary vsli:raw="Gets a string that identifies the relationship.">관계를 식별하는 문자열을 가져옵니다.</summary>
      <returns vsli:raw="A string that identifies the relationship.">관계를 식별하는 문자열입니다.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.Package">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; that contains this relationship.">이 관계를 포함하는 <see cref="T:System.IO.Packaging.Package" />를 가져옵니다.</summary>
      <returns vsli:raw="The package that contains this relationship.">이 관계를 포함하는 패키지입니다.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.RelationshipType">
      <summary vsli:raw="Gets the qualified type name of the relationship.">관계의 정규화된 형식 이름을 가져옵니다.</summary>
      <returns vsli:raw="The qualified type name of the relationship.">관계의 정규화된 형식 이름입니다.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.SourceUri">
      <summary vsli:raw="Gets the URI of the package or part that owns the relationship.">관계를 소유한 패키지 또는 파트의 URI를 가져옵니다.</summary>
      <returns vsli:raw="The URI of the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; or &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; that owns the relationship.">관계를 소유한 <see cref="T:System.IO.Packaging.Package" /> 또는 <see cref="T:System.IO.Packaging.PackagePart" />의 URI입니다.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.TargetMode">
      <summary vsli:raw="Gets a value that indicates whether the target of the relationship is &lt;see cref=&quot;F:System.IO.Packaging.TargetMode.Internal&quot; /&gt; or &lt;see cref=&quot;F:System.IO.Packaging.TargetMode.External&quot; /&gt; to the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">관계의 대상이 <see cref="F:System.IO.Packaging.TargetMode.Internal" />에 대해 <see cref="F:System.IO.Packaging.TargetMode.External" />인지 아니면 <see cref="T:System.IO.Packaging.Package" />인지를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="An enumeration value that indicates whether &lt;see cref=&quot;P:System.IO.Packaging.PackageRelationship.TargetUri&quot; /&gt; references a resource &lt;see cref=&quot;F:System.IO.Packaging.TargetMode.Internal&quot; /&gt; or &lt;see cref=&quot;F:System.IO.Packaging.TargetMode.External&quot; /&gt; to the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">
        <see cref="P:System.IO.Packaging.PackageRelationship.TargetUri" />가 <see cref="F:System.IO.Packaging.TargetMode.Internal" />에 대한 리소스 <see cref="F:System.IO.Packaging.TargetMode.External" />을 참조하는지 아니면 <see cref="T:System.IO.Packaging.Package" />을 참조하는지를 나타내는 열거형 값입니다.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.TargetUri">
      <summary vsli:raw="Gets the URI of the target resource of the relationship.">관계의 대상 리소스의 URI를 가져옵니다.</summary>
      <returns vsli:raw="The URI of the target resource.">대상 리소스의 URI입니다.</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationshipCollection">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; elements that are owned by a given &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; or the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">지정된 <see cref="T:System.IO.Packaging.PackageRelationship" /> 또는 <see cref="T:System.IO.Packaging.PackagePart" />가 소유하는 <see cref="T:System.IO.Packaging.Package" /> 요소의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipCollection.GetEnumerator">
      <summary vsli:raw="Returns an enumerator for iterating through the relationships in the collection.">컬렉션에서 관계를 반복하는 데 사용할 열거자를 반환합니다.</summary>
      <returns vsli:raw="An enumerator for iterating through the &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; elements in the collection.">컬렉션의 <see cref="T:System.IO.Packaging.PackageRelationship" /> 요소를 반복하는 데 사용할 열거자입니다.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="This type or member supports the Windows Presentation Foundation infrastructure and is not intended to be used directly from your code.">이 형식 또는 멤버는 Windows Presentation Foundation 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
      <returns vsli:raw="Do not use - use &lt;see cref=&quot;M:System.IO.Packaging.PackageRelationshipCollection.GetEnumerator&quot; /&gt;.">
        <see cref="M:System.IO.Packaging.PackageRelationshipCollection.GetEnumerator" />를 사용하지 마세요.</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationshipSelector">
      <summary vsli:raw="Defines &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; criteria to select part-level or package-level relationships.">파트 수준 또는 패키지 수준 관계를 선택하는 <see cref="T:System.IO.Packaging.PackageRelationship" /> 조건을 정의합니다.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationshipSelector&quot; /&gt; class.">
        <see cref="T:System.IO.Packaging.PackageRelationshipSelector" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="sourceUri" vsli:raw="The uniform resource identifier (URI) of the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; or the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; (&lt;c&gt;SourceUri&lt;/c&gt;=&quot;/&quot;) that owns the relationship.">관계를 소유한 <see cref="T:System.IO.Packaging.PackagePart" /> 또는 <see cref="T:System.IO.Packaging.Package" />(<c>SourceUri</c>="/")의 URI(Uniform Resource Identifier)입니다.</param>
      <param name="selectorType" vsli:raw="The type of the &lt;paramref name=&quot;selectionCriteria&quot; /&gt;, either by relationship &lt;see cref=&quot;F:System.IO.Packaging.PackageRelationshipSelectorType.Id&quot; /&gt; or relationship &lt;see cref=&quot;F:System.IO.Packaging.PackageRelationshipSelectorType.Type&quot; /&gt;.">
        <paramref name="selectionCriteria" />의 형식입니다. 이는 관계 <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" />이거나 관계 <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Type" />입니다.</param>
      <param name="selectionCriteria" vsli:raw="The qualification string that is used to select the relationships based on the &lt;paramref name=&quot;selectorType&quot; /&gt;.">
        <paramref name="selectorType" />을 기준으로 관계를 선택하는 데 사용되는 한정 문자열입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;sourceUri&quot; /&gt; or &lt;paramref name=&quot;selectionCriteria&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="sourceUri" /> 또는 <paramref name="selectionCriteria" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;selectorType&quot; /&gt; parameter is not valid.">
        <paramref name="selectorType" /> 매개 변수가 잘못된 경우</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The &lt;paramref name=&quot;selectorType&quot; /&gt; parameter is &lt;see cref=&quot;F:System.IO.Packaging.PackageRelationshipSelectorType.Id&quot; /&gt; but &lt;paramref name=&quot;selectionCriteria&quot; /&gt; is not a valid XML Schema Definition (XSD) identifier (ID).">
        <paramref name="selectorType" /> 매개 변수가 <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" />이지만 <paramref name="selectionCriteria" />가 올바른 XSD(XML 스키마 정의) ID(식별자)가 아닌 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;selectionCriteria&quot; /&gt; is not valid for the specified &lt;paramref name=&quot;selectorType&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;The &lt;paramref name=&quot;sourceUri&quot; /&gt; is not the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; root (&quot;/&quot;) and is also not a valid &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; URI.">지정된 <paramref name="selectionCriteria" />에 대해 <paramref name="selectorType" />가 유효하지 않은 경우
또는
<paramref name="sourceUri" />가 <see cref="T:System.IO.Packaging.Package" /> 루트(“/”)가 아니고 유효한 <see cref="T:System.IO.Packaging.PackagePart" /> URI도 아닌 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipSelector.Select(System.IO.Packaging.Package)">
      <summary vsli:raw="Returns a list of &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; objects that match the defined &lt;see cref=&quot;P:System.IO.Packaging.PackageRelationshipSelector.SourceUri&quot; /&gt;, &lt;see cref=&quot;P:System.IO.Packaging.PackageRelationshipSelector.SelectorType&quot; /&gt;, and &lt;see cref=&quot;P:System.IO.Packaging.PackageRelationshipSelector.SelectionCriteria&quot; /&gt;.">정의된 <see cref="T:System.IO.Packaging.PackageRelationship" />, <see cref="P:System.IO.Packaging.PackageRelationshipSelector.SourceUri" /> 및 <see cref="P:System.IO.Packaging.PackageRelationshipSelector.SelectorType" />에 일치하는 <see cref="P:System.IO.Packaging.PackageRelationshipSelector.SelectionCriteria" /> 개체의 목록을 반환합니다.</summary>
      <param name="package" vsli:raw="The package from which to select the relationships based on the selection criteria.">선택 조건에 따라 관계를 선택할 패키지입니다.</param>
      <returns vsli:raw="A list of relationships that match the selection parameters specified to the &lt;see cref=&quot;M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)&quot; /&gt; constructor.">
        <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" /> 생성자에 지정한 선택 매개 변수와 일치하는 관계의 목록입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;package&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="package" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationshipSelector.SelectionCriteria">
      <summary vsli:raw="Gets the selection criteria specified to the &lt;see cref=&quot;M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)&quot; /&gt; constructor.">
        <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" /> 생성자에 지정된 선택 조건을 가져옵니다.</summary>
      <returns vsli:raw="The selection criteria based on the &lt;see cref=&quot;P:System.IO.Packaging.PackageRelationshipSelector.SelectorType&quot; /&gt; of &lt;see cref=&quot;F:System.IO.Packaging.PackageRelationshipSelectorType.Id&quot; /&gt; or &lt;see cref=&quot;F:System.IO.Packaging.PackageRelationshipSelectorType.Type&quot; /&gt; specified to the &lt;see cref=&quot;M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)&quot; /&gt; constructor.">
        <see cref="P:System.IO.Packaging.PackageRelationshipSelector.SelectorType" /> 생성자에 지정된 <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" /> 또는 <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Type" />의 <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" />에 따른 선택 조건입니다.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationshipSelector.SelectorType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationshipSelectorType&quot; /&gt; specified to the &lt;see cref=&quot;M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)&quot; /&gt; constructor.">
        <see cref="T:System.IO.Packaging.PackageRelationshipSelectorType" /> 생성자에 지정된 <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" />을 가져옵니다.</summary>
      <returns vsli:raw="The selector type of &lt;see cref=&quot;F:System.IO.Packaging.PackageRelationshipSelectorType.Id&quot; /&gt; or &lt;see cref=&quot;F:System.IO.Packaging.PackageRelationshipSelectorType.Type&quot; /&gt; specified to the &lt;see cref=&quot;M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)&quot; /&gt; constructor.">
        <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" /> 생성자에 지정된 <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Type" /> 또는 <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" />의 선택기 형식입니다.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationshipSelector.SourceUri">
      <summary vsli:raw="Gets the root package URI (&quot;/&quot;) or part &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.Uri&quot; /&gt; specified to the &lt;see cref=&quot;M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)&quot; /&gt; constructor as the owner of the relationship.">
        <see cref="P:System.IO.Packaging.PackagePart.Uri" /> 생성자에 관계 소유자로 지정된 루트 패키지 URI("/") 또는 파트 <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" />를 가져옵니다.</summary>
      <returns vsli:raw="The root package URI (&quot;/&quot;) or part &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.Uri&quot; /&gt; specified to the &lt;see cref=&quot;M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)&quot; /&gt; constructor as the owner of the relationship.">
        <see cref="P:System.IO.Packaging.PackagePart.Uri" /> 생성자에 관계 소유자로 지정된 루트 패키지 URI("/") 또는 파트 <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" />입니다.</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationshipSelectorType">
      <summary vsli:raw="Specifies the type of selection criteria that is used to match and return &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; selections through a &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationshipSelector&quot; /&gt;.">
        <see cref="T:System.IO.Packaging.PackageRelationship" />를 통해 일치하는 <see cref="T:System.IO.Packaging.PackageRelationshipSelector" /> 선택 항목을 찾아 반환하는 데 사용되는 선택 조건의 유형을 지정합니다.</summary>
    </member>
    <member name="F:System.IO.Packaging.PackageRelationshipSelectorType.Id">
      <summary vsli:raw="&lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; selections are by &lt;see cref=&quot;P:System.IO.Packaging.PackageRelationship.Id&quot; /&gt;.">
        <see cref="T:System.IO.Packaging.PackageRelationship" />에 따라 <see cref="P:System.IO.Packaging.PackageRelationship.Id" />을 선택합니다.</summary>
    </member>
    <member name="F:System.IO.Packaging.PackageRelationshipSelectorType.Type">
      <summary vsli:raw="&lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; selections are by &lt;see cref=&quot;P:System.IO.Packaging.PackageRelationship.RelationshipType&quot; /&gt;.">
        <see cref="T:System.IO.Packaging.PackageRelationship" />에 따라 <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />을 선택합니다.</summary>
    </member>
    <member name="T:System.IO.Packaging.PackUriHelper">
      <summary vsli:raw="Provides utility methods to compose and parse pack URI objects.">구성할 유틸리티 메서드를 제공하고 pack URI 개체를 구문 분석합니다.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.ComparePackUri(System.Uri,System.Uri)">
      <summary vsli:raw="Returns a value that indicates whether two pack URIs are equivalent.">두 pack URI가 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="firstPackUri" vsli:raw="The first pack URI.">첫 번째 pack URI입니다.</param>
      <param name="secondPackUri" vsli:raw="The second pack URI.">두 번째 pack URI입니다.</param>
      <returns vsli:raw="A signed integer indicating the relationship between &lt;paramref name=&quot;firstPackUri&quot; /&gt; and &lt;paramref name=&quot;secondPackUri&quot; /&gt;.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Meaning&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than 0&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;firstPackUri&quot; /&gt; is less than &lt;paramref name=&quot;secondPackUri&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 0&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;firstPackUri&quot; /&gt; is equivalent to &lt;paramref name=&quot;secondPackUri&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than 0&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;firstPackUri&quot; /&gt; is greater than &lt;paramref name=&quot;secondPackUri&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">
        <paramref name="firstPackUri" />와 <paramref name="secondPackUri" /> 간의 관계를 나타내는 부호 있는 정수입니다.  
  값 
  의미 
  0보다 작음 
 <paramref name="firstPackUri" />가 <paramref name="secondPackUri" />보다 작은 경우  

  0 
 <paramref name="firstPackUri" />는 <paramref name="secondPackUri" />와 같습니다.  

  0보다 큼 
 <paramref name="firstPackUri" />가 <paramref name="secondPackUri" />보다 큰 경우</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Either &lt;paramref name=&quot;firstPackUri&quot; /&gt; or &lt;paramref name=&quot;secondPackUri&quot; /&gt; is not an absolute URI.  &#xA;  &#xA; -or-  &#xA;  &#xA; Either &lt;paramref name=&quot;firstPackUri&quot; /&gt; or &lt;paramref name=&quot;secondPackUri&quot; /&gt; do not begin with a &quot;pack://&quot; scheme.">
        <paramref name="firstPackUri" /> 또는 <paramref name="secondPackUri" />가 절대 URI가 아닙니다.  
또는 
<paramref name="firstPackUri" /> 또는 <paramref name="secondPackUri" />가 "pack://" 체계로 시작하지 않습니다.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)">
      <summary vsli:raw="Returns a value that indicates whether two package part URIs are equivalent.">두 패키지 파트 URI가 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="firstPartUri" vsli:raw="The URI of the first &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt;.">첫째 <see cref="T:System.IO.Packaging.PackagePart" />의 URI입니다.</param>
      <param name="secondPartUri" vsli:raw="The URI of the second &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt;.">둘째 <see cref="T:System.IO.Packaging.PackagePart" />의 URI입니다.</param>
      <returns vsli:raw="A value that indicates the relationship between &lt;paramref name=&quot;firstPartUri&quot; /&gt; and &lt;paramref name=&quot;secondPartUri&quot; /&gt;.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Meaning&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than 0&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;firstPartUri&quot; /&gt; is less than &lt;paramref name=&quot;secondPartUri&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 0&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;firstPartUri&quot; /&gt; is equivalent to &lt;paramref name=&quot;secondPartUri&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than 0&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;firstPartUri&quot; /&gt; is greater than &lt;paramref name=&quot;secondPartUri&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">
        <paramref name="firstPartUri" />와 <paramref name="secondPartUri" /> 간의 관계를 나타내는 값입니다.  
  값 
  의미 
  0보다 작음 
 <paramref name="firstPartUri" />가 <paramref name="secondPartUri" />보다 작은 경우  

  0 
 <paramref name="firstPartUri" />는 <paramref name="secondPartUri" />와 같습니다.  

  0보다 큼 
 <paramref name="firstPartUri" />가 <paramref name="secondPartUri" />보다 큰 경우</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;firstPartUri&quot; /&gt; or &lt;paramref name=&quot;secondPartUri&quot; /&gt; is not a valid part URI syntax.">
        <paramref name="firstPartUri" /> 또는 <paramref name="secondPartUri" />가 올바른 파트 URI 구문이 아닌 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.Create(System.Uri)">
      <summary vsli:raw="Creates a new pack URI that points to a package.">패키지를 가리키는 새 Pack URI를 만듭니다.</summary>
      <param name="packageUri" vsli:raw="The URI of the referenced &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">참조된 <see cref="T:System.IO.Packaging.Package" />의 URI입니다.</param>
      <returns vsli:raw="The pack URI for the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; referenced by the given &lt;paramref name=&quot;packageUri&quot; /&gt;.">지정된 <paramref name="packageUri" />에서 참조하는 <see cref="T:System.IO.Packaging.Package" />의 Pack URI입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;packageUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="packageUri" /> 가 <see langword="null" />일 수 있습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;packageUri&quot; /&gt; is not an absolute URI.">
        <paramref name="packageUri" />가 절대 URI가 아닙니다.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri)">
      <summary vsli:raw="Creates a pack URI given a &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; URI and the URI of a part in the package.">패키지에 파트의 <see cref="T:System.IO.Packaging.Package" /> URI 및 URI가 지정된 pack URI를 만듭니다.</summary>
      <param name="packageUri" vsli:raw="The URI of the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">URI의 <see cref="T:System.IO.Packaging.Package" />입니다.</param>
      <param name="partUri" vsli:raw="The URI of the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; in the package.">패키지에 있는 <see cref="T:System.IO.Packaging.PackagePart" />의 URI입니다.</param>
      <returns vsli:raw="The pack URI of the given &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt;.">지정된 <see cref="T:System.IO.Packaging.PackagePart" />의 pack URI입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;packageUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="packageUri" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;packageUri&quot; /&gt; is not an absolute URI.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;partUri&quot; /&gt; is not a valid part URI syntax.">
        <paramref name="packageUri" /> 가 절대 URI가 아닙니다.  
또는 
 <paramref name="partUri" />는 유효한 파트 URI 구문이 아닙니다.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri,System.String)">
      <summary vsli:raw="Creates a pack URI given a &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; URI, the URI of a part in the package, and a &quot;#&quot; fragment to append.">
        <see cref="T:System.IO.Packaging.Package" /> URI, 패키지 파트의 URI 및 추가할 “#” 조각이 지정된 Pack URI를 만듭니다.</summary>
      <param name="packageUri" vsli:raw="The URI of the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">URI의 <see cref="T:System.IO.Packaging.Package" />입니다.</param>
      <param name="partUri" vsli:raw="The URI of the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; in the package.">패키지에 있는 <see cref="T:System.IO.Packaging.PackagePart" />의 URI입니다.</param>
      <param name="fragment" vsli:raw="A &quot;#&quot; reference identifying an element within the package part.">패키지 파트 내에서 요소를 식별하는 "#" 참조입니다.</param>
      <returns vsli:raw="The pack URI that identifies the specified package, package part, and fragment.">지정된 패키지, 패키지 파트 및 조각을 식별하는 Pack URI입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;packageUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="packageUri" /> 가 <see langword="null" />일 수 있습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;packageUri&quot; /&gt; is not an absolute URI.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;partUri&quot; /&gt; is not a valid part URI syntax.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;fragment&quot; /&gt; is empty or does begin with &quot;#&quot;.">
        <paramref name="packageUri" /> 가 절대 URI가 아닙니다.  
또는 
 <paramref name="partUri" />는 유효한 파트 URI 구문이 아닙니다.  
또는 
 <paramref name="fragment" />가 비어 있거나 "#"으로 시작하지 않는 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)">
      <summary vsli:raw="Creates a formatted &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; URI.">형식 지정된 <see cref="T:System.IO.Packaging.PackagePart" /> URI를 만듭니다.</summary>
      <param name="partUri" vsli:raw="The URI of the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; within the package.">패키지 내 <see cref="T:System.IO.Packaging.PackagePart" />의 URI입니다.</param>
      <returns vsli:raw="A formatted &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; URI.">형식 지정된 <see cref="T:System.IO.Packaging.PackagePart" /> URI입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;partUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="partUri" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;partUri&quot; /&gt; is not an absolute &lt;see cref=&quot;T:System.Uri&quot; /&gt;.">
        <paramref name="partUri" />는 절대 <see cref="T:System.Uri" />가 아닙니다.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)">
      <summary vsli:raw="Returns the normalized form of a specified &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; URI.">지정된 <see cref="T:System.IO.Packaging.PackagePart" /> URI의 정규화된 형태를 반환합니다.</summary>
      <param name="partUri" vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; URI to normalize.">정규화할 <see cref="T:System.IO.Packaging.PackagePart" /> URI입니다.</param>
      <returns vsli:raw="The normalized form of the given &lt;paramref name=&quot;partUri&quot; /&gt;.">지정된 <paramref name="partUri" />의 정규화된 형태입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;partUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="partUri" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;partUri&quot; /&gt; does not have a valid &lt;see cref=&quot;T:System.Uri&quot; /&gt; syntax.">
        <paramref name="partUri" />에 유효한 <see cref="T:System.Uri" /> 구문이 없습니다.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)">
      <summary vsli:raw="Returns the inner URI that points to the entire package of a specified pack URI.">지정된 pack URI의 전체 패키지를 가리키는 내부 URI를 반환합니다.</summary>
      <param name="packUri" vsli:raw="The pack URI from which to return the URI of the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">
        <see cref="T:System.IO.Packaging.Package" />의 URI를 반환하려는 pack URI입니다.</param>
      <returns vsli:raw="The URI of the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; from the specified &lt;paramref name=&quot;packUri&quot; /&gt;.">지정된 <paramref name="packUri" />의 <see cref="T:System.IO.Packaging.Package" /> URI입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;packUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="packUri" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;packUri&quot; /&gt; is not an absolute &lt;see cref=&quot;T:System.Uri&quot; /&gt;.">
        <paramref name="packUri" />는 절대 <see cref="T:System.Uri" />가 아닙니다.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)">
      <summary vsli:raw="Returns the URI of a &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; within a specified pack URI.">지정된 Pack URI 내에서 <see cref="T:System.IO.Packaging.PackagePart" />의 URI를 반환합니다.</summary>
      <param name="packUri" vsli:raw="The pack URI from which to return the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; URI.">
        <see cref="T:System.IO.Packaging.PackagePart" /> URI를 반환할 Pack URI입니다.</param>
      <returns vsli:raw="The URI of the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; in the given &lt;paramref name=&quot;packUri&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if &lt;paramref name=&quot;packUri&quot; /&gt; points to a package instead of a &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt;.">지정된 <paramref name="packUri" />에 있는 <see cref="T:System.IO.Packaging.PackagePart" />의 URI 또는 <paramref name="packUri" />에서 <see cref="T:System.IO.Packaging.PackagePart" />가 아니라 패키지를 가리키는 경우 <see langword="null" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="If the &lt;paramref name=&quot;packUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="packUri" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="If the &lt;paramref name=&quot;packUri&quot; /&gt; is not an absolute &lt;see cref=&quot;T:System.Uri&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;packUri&quot; /&gt; does not have the &quot;pack://&quot; scheme.&#xA;          &#xA;-or-&#xA;          &#xA;The partUri extracted from &lt;paramref name=&quot;packUri&quot; /&gt; does not conform to the valid partUri syntax.">
        <paramref name="packUri" />가 절대 <see cref="T:System.Uri" />가 아닌 경우
또는
<paramref name="packUri" />에 “pack://” 체계가 없는 경우
또는 
<paramref name="packUri" />에서 추출된 partUri가 유효한 partUri 구문을 준수하지 않는 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)">
      <summary vsli:raw="Returns the URI of the relationship part associated with a specified &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt;.">지정된 <see cref="T:System.IO.Packaging.PackagePart" />와 연결된 관계 파트의 URI를 반환합니다.</summary>
      <param name="partUri" vsli:raw="The &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.Uri&quot; /&gt; of the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; to return the URI for the associated &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt;.">연결된 <see cref="P:System.IO.Packaging.PackagePart.Uri" />의 URI를 반환할 <see cref="T:System.IO.Packaging.PackagePart" />의 <see cref="T:System.IO.Packaging.PackageRelationship" />입니다.</param>
      <returns vsli:raw="The URI of the &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; part associated with the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; identified by &lt;paramref name=&quot;partUri&quot; /&gt;.">
        <paramref name="partUri" />로 식별되는 <see cref="T:System.IO.Packaging.PackageRelationship" />와 연결된 <see cref="T:System.IO.Packaging.PackagePart" /> 파트의 URI입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;partUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="partUri" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;partUri&quot; /&gt; syntax is not valid for a package part URI.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;partUri&quot; /&gt; is an absolute URI.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;partUri&quot; /&gt; references a relationship part.">
        <paramref name="partUri" /> 구문이 패키지 파트 URI에 대해 유효하지 않은 경우  
또는 
 <paramref name="partUri" />가 절대 URI인 경우  
또는 
 <paramref name="partUri" />가 관계 파트를 참조하는 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)">
      <summary vsli:raw="Returns the relative URI between two specified &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; URIs.">지정된 두 <see cref="T:System.IO.Packaging.PackagePart" /> URI 사이의 상대 URI를 반환합니다.</summary>
      <param name="sourcePartUri" vsli:raw="The URI of the source part.">소스 파트의 URI입니다.</param>
      <param name="targetPartUri" vsli:raw="The URI of the target part.">대상 파트의 URI입니다.</param>
      <returns vsli:raw="The relative URI from &lt;paramref name=&quot;sourcePartUri&quot; /&gt; to &lt;paramref name=&quot;targetPartUri&quot; /&gt;.">
        <paramref name="sourcePartUri" />에서 <paramref name="targetPartUri" />로의 상대 URI입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;sourcePartUri&quot; /&gt; or &lt;paramref name=&quot;targetPartUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="sourcePartUri" /> 또는 <paramref name="targetPartUri" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Either the &lt;paramref name=&quot;sourcePartUri&quot; /&gt; or &lt;paramref name=&quot;targetPartUri&quot; /&gt; does not have a valid &lt;see cref=&quot;T:System.Uri&quot; /&gt; syntax.">
        <paramref name="sourcePartUri" /> 또는 <paramref name="targetPartUri" />에 유효한 <see cref="T:System.Uri" /> 구문이 없습니다.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri(System.Uri)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;P:System.IO.Packaging.PackageRelationship.SourceUri&quot; /&gt; from the &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; with a specified URI.">지정된 URI의 <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" />에서 <see cref="T:System.IO.Packaging.PackageRelationship" />를 반환합니다.</summary>
      <param name="relationshipPartUri" vsli:raw="The URI of the relationship part to return the &lt;see cref=&quot;P:System.IO.Packaging.PackageRelationship.SourceUri&quot; /&gt; from.">
        <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" />를 반환할 관계 파트의 URI입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.IO.Packaging.PackageRelationship.SourceUri&quot; /&gt; of the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; from the relationship with the specified &lt;paramref name=&quot;relationshipPartUri&quot; /&gt;.">지정된 <paramref name="relationshipPartUri" />의 관계에서 <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" />의 <see cref="T:System.IO.Packaging.PackagePart" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;relationshipPartUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="relationshipPartUri" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;relationshipPartUri&quot; /&gt; is an absolute URI.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;relationshipPartUri&quot; /&gt; syntax is not valid for a &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;relationshipPartUri&quot; /&gt; does not reference a relationship part.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.IO.Packaging.PackageRelationship.SourceUri&quot; /&gt; of the relationship part references another relationship part (not valid).">
        <paramref name="relationshipPartUri" />가 절대 URI인 경우  
또는 
 <paramref name="relationshipPartUri" /> 구문이 <see cref="T:System.IO.Packaging.PackagePart" />에 대해 유효하지 않은 경우  
또는 
 <paramref name="relationshipPartUri" />가 관계 파트를 참조하지 않는 경우  
또는 
관계 파트의 <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" />가 다른 관계 파트를 참조하는 경우(올바르지 않음)</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.IsRelationshipPartUri(System.Uri)">
      <summary vsli:raw="Returns a value that indicates whether a specified URI is the URI of a &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; part.">지정된 URI가 <see cref="T:System.IO.Packaging.PackageRelationship" /> 파트의 URI인지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="partUri" vsli:raw="The URI to check for a &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; part.">
        <see cref="T:System.IO.Packaging.PackageRelationship" /> 파트를 확인할 URI입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;partUri&quot; /&gt; identifies a &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; part; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="partUri" />가 <see cref="T:System.IO.Packaging.PackageRelationship" /> 파트를 식별하는 경우 <see langword="true" />이고 그렇지 않은 경우 <see langword="false" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;partUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="partUri" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;partUri&quot; /&gt; is an absolute URI.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;partUri&quot; /&gt; is an invalid &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; syntax.">
        <paramref name="partUri" />가 절대 URI인 경우  
또는 
 <paramref name="partUri" />가 잘못된 <see cref="T:System.IO.Packaging.PackagePart" /> 구문인 경우</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)">
      <summary vsli:raw="Returns a part URI given a source part URI and a URI with a relative path to a target part.">지정된 소스 파트 URI와 대상 파트에 대한 상대 경로를 가진 URI에 대한 파트 URI를 반환합니다.</summary>
      <param name="sourcePartUri" vsli:raw="The URI of the source part, or &quot;/&quot; to designate the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; root.">소스 파트의 URI 또는 <see cref="T:System.IO.Packaging.Package" /> 루트를 나타내는 "/"입니다.</param>
      <param name="targetUri" vsli:raw="The relative URI to the target part.">대상 파트에 대한 상대 URI입니다.</param>
      <returns vsli:raw="The URI of the target part resolved between the specified &lt;paramref name=&quot;SourcePartUri&quot; /&gt; and the &lt;paramref name=&quot;targetUri&quot; /&gt; parameters.">지정된 <paramref name="SourcePartUri" /> 및 <paramref name="targetUri" /> 매개 변수 사이에서 확인되는 대상 파트의 URI입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;sourcePartUri&quot; /&gt; or &lt;paramref name=&quot;targetUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="sourcePartUri" /> 또는 <paramref name="targetUri" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;sourcePartUri&quot; /&gt; is not a valid part URI.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;targetUri&quot; /&gt; is not a valid relative URI.">
        <paramref name="sourcePartUri" />가 올바른 파트 URI가 아닌 경우  
또는 
 <paramref name="targetUri" />가 올바른 상대 URI가 아닌 경우</exception>
    </member>
    <member name="F:System.IO.Packaging.PackUriHelper.UriSchemePack">
      <summary vsli:raw="Defines the pack URI scheme name &quot;pack&quot;.">pack URI 체계 이름 "pack"을 정의합니다.</summary>
    </member>
    <member name="T:System.IO.Packaging.TargetMode">
      <summary vsli:raw="Specifies whether the target of a &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; is inside or outside the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">
        <see cref="T:System.IO.Packaging.PackageRelationship" />의 대상이 <see cref="T:System.IO.Packaging.Package" /> 내부에 있는지 또는 외부에 있는지 지정합니다.</summary>
    </member>
    <member name="F:System.IO.Packaging.TargetMode.External">
      <summary vsli:raw="The relationship references a resource that is external to the package.">관계가 패키지 외부의 리소스를 참조합니다.</summary>
    </member>
    <member name="F:System.IO.Packaging.TargetMode.Internal">
      <summary vsli:raw="The relationship references a part that is inside the package.">관계가 패키지 내의 파트를 참조합니다.</summary>
    </member>
    <member name="T:System.IO.Packaging.ZipPackage">
      <summary vsli:raw="Implements a derived subclass of the abstract &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; base class - the &lt;see cref=&quot;T:System.IO.Packaging.ZipPackage&quot; /&gt; class uses a ZIP archive as the container store. This class cannot be inherited.">
        <see cref="T:System.IO.Packaging.Package" /> 추상 기본 클래스의 파생 서브클래스를 구현합니다. <see cref="T:System.IO.Packaging.ZipPackage" /> 클래스는 ZIP 보관 파일을 컨테이너 저장소로 사용합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="T:System.IO.Packaging.ZipPackagePart">
      <summary vsli:raw="Represents a part that is stored in a &lt;see cref=&quot;T:System.IO.Packaging.ZipPackage&quot; /&gt;.">
        <see cref="T:System.IO.Packaging.ZipPackage" />에 저장되는 파트를 나타냅니다.</summary>
    </member>
  </members>
</doc>